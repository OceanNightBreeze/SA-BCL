#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 354 80 215 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 354 80 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 170 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 327 210 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 354 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 354 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 354 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 354 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 354 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 354 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 354 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 170 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
292 1 197 2 1 1 293 1 90 1 176 1 116 4 225 3 93 1 32 1 229 2 95 5 167 2 202 1 204 1 102 9 70 9 185 2 212 2 235 1 237 1 123 1 216 1 190 2 263 1 133 2 288 6 222 1 
292 1 197 2 1 1 293 1 90 1 176 1 116 4 225 3 93 1 32 1 229 2 95 5 167 2 202 1 204 1 102 9 70 9 185 2 212 2 235 1 237 1 123 1 216 1 190 2 263 1 133 2 288 6 222 1 
292 1 197 2 1 1 293 1 90 1 176 1 116 5 225 4 93 1 32 1 229 2 95 6 167 2 202 1 204 1 102 10 70 10 185 2 212 2 235 1 237 1 123 1 216 1 190 2 263 1 133 2 288 7 222 1 
292 1 197 2 1 1 293 1 90 1 176 1 116 3 225 2 93 1 32 1 229 2 95 4 167 2 202 1 204 1 102 7 70 7 185 1 212 2 235 1 123 1 216 1 190 2 263 1 133 2 288 4 222 1 
102 4 70 4 197 1 185 2 293 1 176 1 212 1 116 2 225 1 237 1 229 1 95 3 216 1 167 1 190 1 202 1 288 3 222 1 
102 2 70 2 197 1 293 1 235 1 295 1 86 1 229 1 95 1 216 1 167 1 190 1 202 1 263 1 121 1 133 1 
102 3 70 3 197 2 1 1 293 1 116 1 225 1 95 2 216 1 190 2 202 1 133 1 288 1 
1 1 197 2 293 1 90 1 176 1 116 4 225 3 93 1 229 1 95 5 167 1 202 1 102 9 70 9 185 2 212 1 237 1 216 1 129 1 190 2 333 1 133 1 288 7 222 1 
1 1 197 2 293 1 90 1 176 1 116 4 225 3 93 1 229 1 95 5 167 1 202 1 102 9 70 9 185 2 212 1 237 1 216 1 129 1 190 2 333 1 133 1 288 7 222 1 
339 1 170 1 131 1 
196 2 76 1 131 1 
231 1 300 1 58 2 218 2 356 2 33 2 154 2 161 2 
164 2 198 1 58 2 92 1 226 1 140 1 297 1 179 1 33 3 10 1 231 1 300 1 78 1 143 2 232 2 39 1 84 1 343 1 281 1 46 1 154 2 156 2 259 1 173 1 112 1 332 1 260 1 245 1 218 3 356 2 29 1 264 1 160 1 316 1 161 2 291 2 266 1 
300 1 278 1 58 1 218 1 203 1 356 1 283 1 33 1 154 1 161 1 
3 1 257 1 177 1 154 1 33 1 339 1 130 1 301 1 131 1 218 1 276 1 203 1 14 1 101 1 
257 2 3 1 58 1 154 1 33 1 339 1 130 1 131 1 218 1 356 1 276 1 203 1 14 2 101 1 161 1 
257 1 305 1 14 1 250 1 324 1 
339 1 115 1 257 2 131 1 294 1 14 2 250 1 324 1 
257 1 14 1 250 1 
269 1 278 1 257 1 58 1 283 1 154 1 33 1 324 1 300 1 218 1 203 1 14 1 356 1 161 1 
131 1 
0 1 339 1 115 1 257 2 131 1 14 2 250 1 324 1 
115 1 257 5 348 1 322 1 337 1 200 1 324 2 250 2 351 1 339 1 340 1 131 1 174 1 14 5 287 2 38 2 66 1 40 2 148 1 
231 1 170 1 
58 1 154 2 33 2 299 1 231 2 218 2 356 1 358 1 161 1 
69 1 274 1 132 1 
343 1 179 1 33 1 46 1 155 1 156 1 10 1 259 1 231 1 78 1 332 1 143 1 218 1 264 1 291 1 266 1 
69 1 343 1 233 1 179 1 46 1 154 1 33 2 352 1 156 1 259 1 10 1 78 1 332 1 143 1 218 2 356 1 264 1 161 1 291 1 266 1 
233 1 58 1 25 1 154 5 33 5 352 2 88 1 231 1 301 1 218 5 356 4 358 1 161 4 206 1 
172 1 218 2 203 1 356 2 283 1 33 2 154 2 161 2 
231 1 58 1 218 3 356 3 33 3 154 3 161 3 352 1 
218 1 203 1 356 1 283 1 33 1 154 1 161 1 
58 1 218 1 203 1 356 1 358 1 33 1 154 1 161 1 299 1 
164 1 3 1 58 2 92 1 226 1 297 1 179 1 33 4 10 1 230 1 231 1 300 1 78 1 143 1 232 2 276 1 203 1 14 1 39 1 101 1 84 1 343 1 330 1 233 1 257 1 46 1 154 3 352 1 156 1 259 1 173 1 112 1 332 1 130 1 260 1 245 1 218 4 356 3 264 1 358 1 316 1 161 3 291 1 266 1 
88 1 231 1 301 1 218 2 356 1 33 2 154 2 161 1 352 1 
233 1 257 1 3 1 58 1 154 3 33 3 352 2 230 1 130 1 131 1 218 3 14 1 203 1 356 3 276 1 358 1 101 1 161 3 205 1 
69 1 58 1 154 2 33 2 352 1 274 1 218 2 356 2 358 1 161 2 
343 1 179 1 33 1 46 1 156 1 10 1 259 1 231 1 332 1 78 1 143 1 218 1 264 1 291 1 266 1 
184 1 343 1 319 1 179 1 33 1 46 1 156 1 259 1 231 1 332 1 78 1 143 1 218 1 291 1 266 1 
164 2 335 1 69 1 57 1 226 1 112 1 173 1 312 1 245 2 274 1 132 1 232 2 52 1 82 1 39 1 53 1 316 1 207 1 84 1 
172 1 218 1 203 1 356 1 101 1 33 1 154 1 161 1 
321 1 111 1 
321 1 111 1 
191 1 117 1 
191 1 117 1 
191 1 117 1 
321 1 152 1 111 1 
321 1 328 1 111 1 
341 1 191 1 117 1 321 2 183 1 111 2 
321 1 152 1 111 1 
321 1 152 1 111 1 
5 1 321 1 111 1 
5 1 321 1 111 1 
5 1 321 1 111 1 
354 1 80 1 257 1 14 1 215 1 321 1 227 1 135 1 111 1 
354 1 80 1 321 1 227 1 135 1 111 1 
212 1 229 1 167 1 
86 1 229 1 167 1 
97 1 150 1 212 2 86 1 199 1 167 3 
150 1 234 1 212 1 86 1 199 1 167 2 
150 2 212 1 86 1 199 1 167 2 
175 1 195 1 196 3 115 1 57 1 76 1 248 1 322 3 250 1 324 4 96 1 339 1 340 1 14 5 38 1 100 1 40 1 83 2 146 1 280 1 257 5 171 1 347 2 109 1 187 1 258 2 351 2 284 1 312 1 89 1 131 2 287 1 
175 3 195 3 196 9 115 1 137 5 57 3 76 3 337 1 322 8 250 6 324 7 96 2 339 1 340 1 12 1 14 9 302 1 100 4 38 2 40 2 83 6 280 2 257 9 305 5 72 1 347 6 109 1 351 6 157 1 310 1 312 3 89 3 131 5 287 2 194 1 
175 1 195 1 196 4 57 1 76 2 337 1 322 3 324 2 96 1 339 1 14 3 38 1 100 1 40 1 146 1 83 2 280 1 257 3 347 2 258 1 351 2 284 1 312 1 131 3 89 1 287 1 
175 2 195 2 196 7 57 2 76 3 337 1 322 5 324 3 96 1 339 1 14 4 38 1 100 2 40 1 83 4 146 1 280 1 257 4 72 1 347 4 258 2 351 4 284 1 310 1 312 2 131 4 89 2 287 1 194 1 
78 1 170 1 349 1 
78 1 334 1 
236 1 
78 1 332 1 46 1 
78 1 296 1 
78 1 332 1 
78 3 332 1 122 1 108 1 46 1 349 2 
164 9 175 2 2 1 198 5 57 2 59 1 94 1 9 1 99 1 82 3 207 4 255 2 127 1 239 1 49 1 189 1 245 4 134 2 
164 9 175 2 2 1 198 5 57 2 59 1 94 1 9 1 99 1 82 3 207 6 255 2 127 1 239 1 49 1 189 3 245 4 134 2 
164 9 175 2 2 1 198 5 57 2 59 1 94 1 251 1 9 1 99 1 82 3 207 4 255 2 127 1 239 1 189 1 49 1 245 4 134 2 
164 33 175 5 195 3 2 1 198 17 57 5 59 1 94 2 228 1 9 2 13 1 273 1 232 2 99 1 253 1 82 7 84 1 207 15 255 4 41 1 239 1 127 1 49 2 189 8 158 4 173 1 112 1 26 1 27 3 312 3 245 16 89 3 316 1 134 4 163 1 
175 2 164 11 2 1 198 6 57 2 59 1 94 1 228 1 9 1 232 4 326 1 82 4 84 2 207 6 255 2 239 1 127 1 49 1 189 2 173 2 112 2 261 1 245 5 316 2 134 2 
197 1 293 1 298 1 229 1 95 1 167 2 201 1 97 1 181 1 202 1 143 1 182 1 102 2 343 1 70 2 212 1 23 1 86 1 44 1 73 1 128 1 216 1 217 1 156 1 190 1 220 1 133 1 288 1 291 1 266 1 
197 1 298 1 229 1 95 1 167 2 97 1 181 1 79 1 36 1 202 1 143 1 182 1 102 3 343 1 70 3 212 1 22 1 23 1 86 1 73 1 128 1 216 1 217 1 156 1 190 1 220 1 133 1 288 2 291 1 266 1 
298 1 229 1 95 1 167 2 97 1 181 1 79 1 202 1 143 1 182 1 102 2 343 1 70 2 22 1 212 1 23 1 86 1 128 1 216 1 217 1 156 1 133 1 288 2 291 1 266 1 
102 1 256 1 343 1 70 1 197 1 23 2 179 1 298 2 128 2 156 1 11 1 78 1 332 1 120 1 113 1 190 1 36 1 114 1 51 1 143 1 133 2 291 1 266 1 
197 1 293 1 298 1 229 1 167 2 201 1 97 1 181 1 143 1 182 1 102 1 343 1 70 1 212 1 22 1 23 1 86 1 73 1 128 1 217 1 156 1 190 1 220 1 133 1 291 1 266 1 
208 1 
3 1 4 2 177 1 270 1 179 2 322 2 180 1 143 2 144 2 14 5 276 1 67 1 101 1 106 2 277 4 280 1 186 1 24 2 154 1 188 2 156 2 332 1 113 1 287 1 193 1 246 1 291 2 196 2 115 3 76 2 249 1 118 1 338 1 33 1 250 6 34 1 339 1 340 1 35 2 78 1 120 1 301 1 203 1 37 2 38 1 40 1 343 1 257 5 351 2 130 1 355 1 131 2 218 1 357 1 266 1 
0 1 115 1 277 2 257 3 3 1 177 1 249 1 338 1 154 1 33 1 250 2 35 1 130 1 355 1 301 1 218 1 203 1 276 1 14 3 357 1 101 1 246 1 
0 1 115 1 277 3 257 3 3 1 4 1 177 1 249 1 338 1 154 1 33 1 250 1 339 1 130 1 355 1 301 1 131 1 218 1 203 1 276 1 14 3 357 1 101 1 246 1 
0 1 115 1 3 1 177 1 4 1 249 1 33 1 338 1 250 2 339 1 35 1 301 1 144 1 14 3 276 1 203 1 101 1 277 3 257 3 154 1 130 1 355 1 218 1 131 1 357 1 246 1 
0 1 3 1 177 1 4 4 322 1 180 1 98 1 325 1 144 4 276 1 14 5 101 1 277 6 106 2 186 1 24 2 154 1 188 2 287 1 246 1 290 1 115 3 76 2 249 1 33 1 338 1 250 7 339 5 340 1 35 4 301 1 203 1 38 1 37 2 303 1 40 1 85 1 257 5 351 1 130 1 355 1 218 1 131 5 357 1 
115 2 196 2 76 2 3 1 4 2 177 1 270 1 322 1 249 1 338 1 33 1 250 4 180 1 339 1 340 1 35 2 301 1 144 2 14 4 276 1 203 1 37 2 38 1 101 1 40 1 106 2 277 4 257 4 186 1 24 2 154 1 351 1 188 2 130 1 355 1 131 2 218 1 287 1 357 1 246 1 
115 2 76 2 3 1 4 2 177 1 322 1 249 1 33 1 338 1 250 4 180 1 339 1 340 1 35 2 98 1 301 1 144 2 14 4 276 1 203 1 37 2 38 1 101 1 40 1 106 2 277 4 85 1 257 4 186 1 24 2 154 1 351 1 188 2 130 1 355 1 131 1 218 1 287 1 357 1 290 1 246 1 
115 2 76 2 3 1 4 2 177 1 322 1 249 1 33 1 338 1 250 4 180 1 339 1 340 1 35 2 98 1 301 1 144 2 14 4 276 1 203 1 37 2 38 1 101 1 40 1 106 2 277 4 85 1 257 4 186 1 24 2 154 1 351 1 188 2 130 1 355 1 131 1 218 1 287 1 357 1 290 1 246 1 
268 1 30 1 115 2 196 2 3 1 4 2 177 1 322 1 249 1 323 1 33 1 338 1 250 4 180 1 339 1 340 1 35 2 301 1 144 2 14 4 276 1 203 1 37 2 38 1 101 1 40 1 277 4 257 4 24 2 154 1 351 1 353 2 130 1 355 1 131 1 218 1 313 2 287 1 357 1 290 1 246 1 
115 2 76 2 3 1 177 1 4 3 322 1 249 1 33 1 338 1 250 5 180 1 339 1 340 1 35 3 98 1 301 1 144 3 14 4 276 1 203 1 37 2 38 1 101 1 303 1 40 1 106 2 277 5 85 1 257 4 186 1 24 2 154 1 351 1 188 2 130 1 355 1 131 1 218 1 287 1 357 1 290 1 246 1 
115 2 76 2 3 1 177 1 4 3 322 1 249 1 33 1 338 1 250 5 180 1 339 1 340 1 35 3 98 1 301 1 144 3 14 4 276 1 203 1 37 2 38 1 101 1 303 1 40 1 106 2 277 5 85 1 257 4 186 1 24 2 154 1 351 1 188 2 130 1 355 1 131 1 218 1 287 1 357 1 290 1 246 1 
268 1 115 2 196 2 3 1 4 2 177 1 270 1 322 1 249 1 338 1 33 1 250 4 180 1 339 1 340 1 35 2 301 1 144 2 14 4 276 1 203 1 37 2 38 1 101 1 40 1 277 4 257 4 24 2 154 1 351 1 353 2 130 1 355 1 131 1 218 1 313 2 287 1 357 1 246 1 
255 1 2 1 170 1 226 1 127 1 112 1 173 1 232 2 52 1 82 1 39 1 316 1 134 1 207 1 84 1 
164 15 175 3 195 3 198 10 92 1 226 2 231 1 274 3 232 4 253 1 39 1 84 2 207 2 329 1 169 1 69 12 345 1 189 2 158 4 173 2 112 2 159 1 27 3 245 5 89 3 132 12 192 1 160 1 316 2 163 2 
164 2 31 1 198 1 92 1 226 1 179 1 33 2 10 1 231 1 78 1 143 1 274 1 232 2 39 1 84 1 343 1 233 1 346 1 309 1 46 1 154 1 155 1 352 1 156 1 259 1 112 1 173 1 332 1 245 1 218 2 356 1 264 1 192 1 316 1 160 1 291 1 161 1 266 1 
175 1 138 1 92 1 6 1 226 2 179 1 10 1 143 1 274 2 232 4 19 1 69 2 233 1 154 1 156 1 189 2 112 2 332 1 245 2 192 1 291 1 161 1 164 5 195 1 198 3 297 1 33 2 78 1 39 2 82 1 84 2 207 3 343 1 43 1 46 1 47 1 352 1 259 1 173 2 218 2 89 1 356 1 132 2 264 1 316 2 266 1 
164 2 198 1 320 1 92 1 226 2 179 2 63 1 33 1 141 1 64 1 78 4 120 1 252 1 143 6 232 4 39 2 15 1 342 1 84 2 68 1 343 3 22 1 306 1 214 1 154 1 46 1 352 1 156 7 173 2 112 2 332 3 113 1 245 1 218 1 356 1 52 1 29 2 315 1 316 2 160 1 161 1 291 7 266 4 
175 1 164 3 195 1 198 1 57 1 58 1 226 1 33 1 274 1 232 2 82 1 39 1 16 1 207 1 84 1 69 1 154 1 173 1 112 1 312 1 245 2 218 1 89 1 132 1 356 1 358 1 192 1 316 1 161 1 
164 2 175 1 69 1 195 1 198 2 226 1 238 1 189 1 112 1 173 1 274 1 132 1 232 2 52 1 39 1 316 1 207 1 84 1 
164 2 69 1 57 1 226 1 112 1 173 1 312 1 245 2 274 1 132 1 232 2 52 1 82 1 39 1 53 1 316 1 207 1 84 1 
175 1 164 4 195 1 198 2 57 1 226 1 274 2 232 2 39 1 82 1 84 1 207 2 69 2 189 1 173 1 112 1 312 1 245 2 89 1 132 2 52 1 316 1 
164 2 175 1 69 1 195 1 198 2 226 1 238 1 189 1 112 1 173 1 274 1 132 1 232 2 15 1 39 1 316 1 207 1 84 1 
164 2 69 1 57 1 226 1 112 1 173 1 312 1 245 2 274 1 132 1 232 2 82 1 15 1 39 1 53 1 316 1 207 1 84 1 
164 2 175 1 69 1 195 1 198 2 226 1 189 1 112 1 173 1 274 1 89 1 132 1 232 2 15 1 39 1 316 1 207 1 84 1 
175 1 164 2 69 1 195 1 198 2 226 1 189 1 112 1 173 1 274 1 89 1 132 1 232 2 39 1 316 1 207 1 84 1 
164 2 198 1 92 1 297 1 226 1 179 1 33 1 10 1 231 1 78 1 143 1 232 2 39 1 84 1 343 1 46 1 156 1 259 1 112 1 173 1 332 1 245 1 218 1 264 1 160 1 316 1 291 1 266 1 
164 2 198 1 319 1 92 1 226 1 179 1 33 1 231 1 78 1 143 1 232 2 39 1 84 1 343 1 184 1 46 1 156 1 259 1 112 1 173 1 332 1 245 1 218 1 160 1 316 1 291 1 266 1 247 1 
164 2 175 1 69 1 195 1 198 2 226 1 189 1 112 1 173 1 274 1 89 1 132 1 232 2 192 1 39 1 316 1 207 1 84 1 
164 2 175 1 195 1 198 2 6 1 297 1 226 1 33 1 10 1 78 1 143 1 274 1 232 2 39 1 207 1 84 1 69 1 343 1 44 1 46 1 156 1 189 1 259 1 112 1 173 1 332 1 218 1 89 1 132 1 264 1 316 1 291 1 266 1 
175 1 164 2 195 1 198 2 58 1 226 1 33 1 274 1 232 2 39 1 207 1 84 1 69 1 154 1 189 1 173 1 112 1 311 1 218 1 89 1 356 1 132 1 358 1 192 1 316 1 161 1 
164 36 175 4 195 4 2 1 198 17 57 4 91 1 139 1 60 1 7 1 228 1 166 1 77 1 275 1 232 6 82 4 253 3 147 4 84 3 207 8 255 1 20 1 107 1 213 1 127 1 350 2 189 4 285 1 158 4 173 3 112 3 27 3 261 1 312 4 245 19 89 4 314 1 316 3 134 1 55 1 163 1 
164 33 175 4 195 4 2 1 198 17 57 3 91 1 139 1 60 1 7 1 228 2 166 1 77 1 275 1 232 8 82 4 253 3 147 4 84 4 207 7 255 1 20 1 107 1 213 1 127 1 350 2 189 3 285 1 158 4 173 4 112 4 27 3 261 1 312 3 245 16 89 4 314 1 316 4 134 1 55 1 163 1 
164 47 175 7 195 7 2 1 198 24 57 7 91 1 139 1 60 1 7 1 228 1 166 1 77 1 232 4 82 7 253 2 147 4 84 2 207 14 255 1 20 1 345 2 107 1 213 1 127 1 350 1 189 7 158 4 173 2 112 2 27 4 261 1 312 7 245 23 89 7 314 1 316 2 134 1 55 1 163 2 
164 19 175 3 195 3 198 9 57 3 60 2 271 1 166 1 77 1 275 1 232 4 82 3 253 1 147 2 84 2 207 6 107 1 213 1 350 1 189 3 158 2 173 2 112 2 27 1 261 1 312 3 245 10 89 3 316 2 163 1 
164 26 175 3 195 3 198 14 57 2 91 1 139 1 60 1 7 1 228 2 166 1 77 1 232 6 82 2 253 2 147 4 207 4 84 3 20 1 107 1 213 2 350 2 189 2 158 2 173 3 112 3 27 2 261 1 312 2 245 12 89 3 314 1 316 3 55 1 
267 1 164 2 198 1 92 1 226 1 63 1 33 2 78 1 143 2 145 1 232 2 39 1 342 1 84 1 343 1 126 1 154 2 156 2 112 1 173 1 332 1 245 1 218 2 192 1 29 2 289 1 316 1 160 1 291 2 223 1 266 1 
343 1 212 1 22 1 23 1 178 1 86 1 125 1 44 1 87 1 73 1 229 1 167 2 156 2 97 1 181 1 143 2 291 2 182 1 266 1 
343 1 71 1 212 1 22 1 23 1 178 1 86 1 73 1 229 1 167 2 156 1 97 1 181 1 143 1 291 1 182 1 266 1 
343 1 23 1 125 1 61 1 179 1 156 1 78 1 332 1 113 1 120 1 143 1 114 1 291 1 266 1 
343 1 212 1 22 1 23 1 178 1 86 1 125 1 87 1 73 1 229 1 167 2 156 1 97 1 181 1 143 1 291 1 182 1 266 1 
331 1 
339 1 170 1 131 1 348 1 322 1 200 1 351 1 
115 1 106 1 196 1 76 1 257 1 186 1 322 1 250 1 351 1 188 1 339 1 340 1 131 2 14 1 287 1 38 1 40 1 
224 2 175 2 57 2 179 1 62 2 322 9 8 1 143 3 65 1 14 5 19 2 105 1 280 2 156 3 332 3 75 2 244 2 334 3 287 4 193 1 291 3 195 2 115 3 196 12 165 2 76 6 296 2 200 1 250 5 339 2 340 4 78 10 38 4 40 4 83 6 343 3 344 2 257 5 122 1 308 1 347 6 348 1 44 1 45 2 46 3 349 2 351 8 130 2 312 2 219 1 131 8 89 2 54 2 266 4 
224 2 175 2 195 2 115 1 196 6 76 3 57 2 91 1 139 1 322 8 250 1 339 2 340 2 14 1 38 2 253 1 40 2 83 5 149 1 20 1 280 1 257 1 282 1 347 5 45 1 351 5 158 1 27 1 312 2 131 5 89 2 287 2 193 1 314 1 55 1 
224 2 175 2 269 1 57 1 59 1 58 1 322 2 33 1 340 1 300 1 203 1 14 1 38 1 40 1 255 1 278 1 85 1 257 1 45 1 283 1 154 1 239 1 351 2 218 1 287 1 356 1 134 1 161 1 
348 1 322 1 200 1 351 1 339 1 340 1 131 1 287 1 38 1 40 1 
19 1 224 2 175 2 195 2 196 10 76 5 57 2 347 5 45 1 322 5 351 5 312 2 89 2 131 5 83 5 
339 1 115 1 257 1 131 1 14 1 250 1 
115 2 179 2 337 1 322 1 250 4 34 1 8 1 340 1 78 1 120 1 143 3 14 3 67 1 38 2 327 1 40 2 343 1 105 1 210 1 280 1 257 3 351 2 156 3 332 1 113 1 287 2 193 2 291 3 266 1 
164 1 58 2 92 1 297 1 226 1 179 1 33 3 10 1 231 1 300 1 78 1 143 1 232 2 39 1 84 1 343 1 154 2 46 1 156 1 259 1 173 1 112 1 260 1 332 1 245 1 218 3 356 2 264 1 316 1 291 1 161 2 266 1 
196 4 76 2 280 1 347 2 322 1 351 2 9 1 339 2 340 1 131 4 287 1 38 1 193 1 40 1 83 2 
354 1 135 1 
354 1 135 1 
354 1 135 1 
354 1 135 1 
354 1 135 1 
354 1 135 1 
354 1 135 1 
354 1 135 1 
321 1 111 1 
175 2 164 10 2 1 198 5 57 2 59 1 232 2 253 1 82 3 84 1 207 4 255 2 20 1 239 1 127 1 189 1 158 1 173 1 112 1 27 1 261 1 245 5 316 1 134 2 
164 13 175 3 195 1 2 1 198 7 57 2 59 1 232 4 82 3 253 1 84 2 207 5 255 2 20 1 211 1 239 1 127 1 189 2 158 2 173 2 112 2 27 1 261 1 245 6 89 1 316 2 134 2 163 1 
164 21 175 4 195 2 2 1 198 10 57 4 91 1 59 1 139 1 228 1 232 6 253 1 82 4 84 3 207 6 255 2 20 1 211 1 239 1 127 1 189 2 158 1 173 3 112 3 27 1 261 1 312 2 245 11 89 2 314 1 316 3 134 2 55 1 
164 19 175 4 195 2 2 1 198 11 57 3 91 1 59 1 139 1 228 1 232 6 253 1 82 4 84 3 207 8 255 2 20 1 211 1 239 1 127 1 189 4 158 1 173 3 112 3 27 1 261 1 312 1 245 8 89 2 316 3 314 1 134 2 55 1 
175 2 164 10 2 1 198 5 57 2 59 1 232 2 253 1 82 3 84 1 207 4 255 2 20 1 239 1 127 1 189 1 158 1 173 1 112 1 27 1 261 1 245 5 316 1 134 2 
175 2 164 12 195 2 20 1 198 6 57 2 91 1 139 1 189 1 158 1 112 1 173 1 27 1 312 2 261 1 245 6 89 2 232 2 82 1 253 1 314 1 316 1 55 1 207 2 84 1 
164 20 175 4 195 2 2 1 198 11 57 3 91 1 59 1 139 1 228 2 232 8 253 1 82 4 84 4 207 6 255 2 20 1 211 1 239 1 127 1 189 2 158 1 173 4 112 4 27 1 261 1 312 1 245 9 89 2 314 1 316 4 134 2 55 1 
164 16 175 3 195 3 198 9 57 2 91 1 139 1 228 2 232 8 275 1 253 1 82 3 84 4 207 6 20 1 189 3 158 1 173 4 112 4 27 1 261 1 312 2 245 7 89 3 314 1 316 4 55 1 
164 5 175 1 255 3 2 1 198 2 57 1 59 1 127 1 239 1 189 3 245 3 82 3 134 3 207 6 
164 20 175 4 195 2 2 1 198 11 57 3 91 1 59 1 139 1 228 2 232 8 275 1 253 1 82 4 84 4 207 6 255 2 20 1 239 1 127 1 189 2 158 1 173 4 112 4 27 1 261 1 312 1 245 9 89 2 314 1 316 4 134 2 55 1 
164 12 175 2 2 1 198 6 57 2 59 1 228 1 232 4 82 3 84 2 207 6 255 2 127 1 239 1 189 3 173 2 112 2 245 6 316 2 134 2 
255 1 2 1 170 1 82 1 134 1 127 1 207 1 
175 1 164 4 195 1 198 2 57 1 211 1 189 1 112 1 173 1 312 1 245 2 89 1 232 2 82 1 316 1 207 2 84 1 
164 7 175 1 195 1 198 3 57 1 189 1 158 2 27 1 312 1 245 4 89 1 82 1 253 1 163 1 207 2 
175 4 164 20 195 2 2 1 198 10 57 4 59 1 228 1 232 2 82 4 207 6 84 1 255 2 345 1 239 1 127 1 189 2 158 2 112 1 173 1 27 2 159 1 312 2 245 10 89 2 316 1 134 2 163 1 
164 1 158 1 245 1 
164 1 198 1 27 1 
19 1 164 6 175 1 195 1 198 3 211 1 57 1 189 1 173 1 112 1 312 1 245 3 89 1 232 2 82 2 316 1 84 1 207 3 
175 2 164 12 195 2 20 1 198 6 57 2 91 1 139 1 189 1 158 1 112 1 173 1 27 1 312 2 261 1 245 6 89 2 232 2 82 1 253 1 314 1 316 1 55 1 207 2 84 1 
175 1 164 6 255 1 198 3 57 1 59 1 189 1 245 3 82 1 134 1 207 2 
255 1 164 3 2 1 198 1 228 1 127 1 189 1 50 1 112 1 173 1 245 2 232 2 82 1 316 1 134 1 207 2 84 1 
255 2 164 10 175 2 198 5 57 2 59 1 239 1 189 2 173 1 112 1 261 1 245 5 232 2 82 3 316 1 134 2 84 1 207 5 
175 1 164 2 195 1 198 2 189 1 112 1 173 1 261 1 232 2 316 1 84 1 207 1 
175 1 164 4 195 1 198 2 57 1 189 1 112 1 173 1 312 1 261 1 245 2 89 1 232 2 82 1 316 1 207 2 84 1 
164 3 255 1 198 1 228 1 50 1 189 1 112 3 173 3 261 1 245 2 275 1 232 6 82 1 316 3 134 1 84 3 207 2 
164 24 175 4 195 2 2 1 198 13 57 3 59 1 228 1 13 1 275 1 232 8 82 3 253 1 84 4 207 7 255 2 41 1 211 1 239 1 127 1 189 4 158 3 173 4 112 4 26 1 27 3 261 1 312 1 245 11 89 2 316 4 134 2 
88 1 231 1 279 1 301 1 218 1 33 1 154 1 
317 1 336 1 279 1 154 1 33 1 168 1 88 1 231 1 119 1 301 1 218 1 136 1 
156 1 343 1 78 1 332 1 120 1 113 1 170 1 143 1 179 1 291 1 266 1 
343 1 179 1 46 1 154 1 33 2 352 1 156 1 259 1 231 1 78 1 332 1 143 1 218 2 356 1 264 1 161 1 291 1 266 1 
296 1 62 1 33 1 231 1 78 3 143 1 276 1 203 2 101 1 343 1 105 1 21 1 154 1 46 2 352 1 156 1 259 1 332 2 218 1 356 1 264 1 291 1 161 1 266 1 
296 1 62 1 33 1 231 1 78 3 143 1 276 1 203 2 101 1 343 1 184 1 105 1 21 1 154 1 46 2 352 1 156 1 259 1 332 2 218 1 356 1 291 1 161 1 266 1 
343 1 105 1 209 1 257 2 296 1 179 1 62 1 46 1 250 1 349 1 240 1 156 3 339 1 130 1 332 1 78 4 243 1 143 3 131 1 14 2 334 1 291 3 266 1 
343 1 105 1 165 1 209 1 257 2 296 1 179 1 62 1 46 1 250 1 349 1 156 3 339 1 130 1 332 1 78 4 143 3 131 1 14 2 334 1 291 3 266 1 
156 1 343 1 143 1 214 1 291 1 266 1 
320 1 179 2 63 1 64 1 78 3 252 1 143 5 68 1 343 2 22 1 42 1 306 1 122 1 214 1 46 1 156 6 332 2 29 1 291 6 266 3 
175 2 2 1 57 2 59 1 6 1 226 2 10 1 231 1 143 1 232 4 21 1 154 1 239 1 156 1 189 1 112 2 332 1 245 4 192 1 291 1 161 1 164 8 198 4 297 1 33 2 78 1 203 1 39 2 82 3 84 2 207 4 255 2 343 1 43 1 44 1 126 1 46 1 127 1 352 1 259 1 173 2 218 2 356 1 264 1 316 2 134 2 266 1 
115 1 165 1 179 1 322 1 200 1 324 1 250 2 8 1 339 1 340 2 78 2 143 1 14 3 38 2 40 2 257 3 348 1 349 1 351 1 156 1 75 1 130 1 244 1 131 1 287 2 334 1 54 1 291 1 
156 2 343 1 78 2 332 1 122 1 143 2 65 1 214 1 44 1 46 1 291 2 349 1 266 2 
343 1 209 1 179 1 44 1 156 4 332 1 78 1 113 1 120 1 143 4 28 1 291 4 266 1 
343 1 105 1 307 1 306 1 46 1 141 1 156 2 332 1 78 1 252 1 143 2 315 1 291 2 266 2 
156 1 343 1 181 1 143 1 86 1 179 1 229 1 291 1 167 1 266 1 
267 1 343 1 22 1 44 1 63 1 156 2 332 1 78 1 143 2 291 2 266 1 
343 2 105 1 320 1 179 1 44 1 63 1 156 5 64 1 332 2 78 3 120 1 113 1 143 4 28 1 291 5 266 2 
343 2 105 1 179 1 44 1 63 1 156 5 64 1 286 1 332 2 78 3 120 1 113 1 143 4 28 1 291 5 266 2 
184 1 343 1 179 1 46 1 154 1 33 2 352 1 156 1 259 1 231 1 78 1 332 1 143 1 218 2 356 1 161 1 291 1 266 1 
343 1 105 1 42 1 122 1 306 1 46 1 156 1 332 1 78 1 252 1 143 1 291 1 266 2 
103 1 48 1 231 1 142 1 221 1 
103 1 257 2 3 1 110 1 324 1 339 1 48 2 230 1 231 1 130 1 142 2 131 1 203 1 276 1 14 2 101 1 265 1 254 1 221 2 
103 1 48 1 218 1 145 1 221 1 289 1 33 1 154 1 223 1 
103 1 254 1 110 1 
170 1 202 1 95 1 216 1 
102 1 70 1 197 1 190 1 202 1 95 1 216 1 
102 1 133 1 298 1 
102 3 70 3 197 1 293 1 235 2 124 1 95 1 216 1 190 1 262 1 202 1 18 1 
102 2 70 2 185 1 197 1 190 1 202 1 288 1 95 1 216 1 
102 1 70 1 197 1 293 1 212 1 116 1 229 1 95 1 167 1 190 1 222 1 
102 1 70 1 197 1 293 1 190 1 202 1 95 1 
102 1 70 1 197 1 293 1 190 1 202 2 216 1 
102 2 70 2 197 2 293 1 151 1 95 1 190 2 202 1 81 1 304 1 
102 3 70 3 197 1 293 1 90 1 116 1 225 1 93 1 95 2 216 1 190 1 202 1 288 2 
102 2 70 2 318 1 197 1 293 1 212 1 86 1 229 1 95 1 216 1 167 2 97 1 190 1 202 1 288 1 
102 4 70 4 197 2 185 1 293 1 116 1 225 1 237 1 95 2 216 1 190 2 202 1 288 2 
102 1 70 1 197 1 293 1 190 1 202 1 95 1 216 1 
102 4 70 4 197 1 116 1 235 1 225 1 124 1 95 3 216 2 272 1 190 1 202 2 288 2 18 1 
102 2 70 2 197 1 293 1 95 1 216 1 241 1 190 1 333 1 202 1 288 1 17 1 
102 3 70 3 197 1 293 1 235 2 124 1 153 1 95 1 216 1 190 1 202 1 18 2 
104 1 242 2 56 1 95 2 
102 1 70 1 197 1 293 1 190 1 162 1 
102 2 70 2 197 1 293 1 90 1 190 1 202 1 288 1 95 1 216 1 
74 1 
102 1 70 1 197 1 293 1 190 1 202 1 95 1 216 1 
102 3 70 3 197 1 293 1 90 1 190 1 202 1 235 1 288 1 95 1 216 1 
272 1 116 1 225 1 95 1 
202 1 95 1 

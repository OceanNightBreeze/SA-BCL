#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (320,343) (320,343) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 282 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (41,186,226) (132,203,287) (132,203,287) (132,203,287) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (41,186,226) (132,203,287) (132,203,287) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (41,186,226) (132,203,287) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (41,186,226) (132,203,287) (132,203,287) (132,203,287) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 204 83 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (41,186,226) (41,186,226) (41,186,226) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (41,186,226) (41,186,226) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (41,186,226) (41,186,226) (41,186,226) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 204 83 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 355 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5972 | <= -> !=
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
247 1 70 6 145 2 342 1 213 1 198 1 313 5 315 1 157 2 107 9 14 2 61 1 238 2 87 2 164 2 187 9 206 3 332 1 243 1 223 1 165 4 244 1 37 2 306 1 39 1 268 1 269 1 67 1 
247 1 70 6 145 2 342 1 213 1 198 1 313 5 315 1 157 2 107 9 14 2 61 1 238 2 87 2 164 2 187 9 206 3 332 1 243 1 223 1 165 4 244 1 37 2 306 1 39 1 268 1 269 1 67 1 
247 1 70 7 145 2 342 1 213 1 198 1 313 6 315 1 157 2 107 10 14 2 61 1 238 2 87 2 164 2 187 10 206 4 332 1 243 1 223 1 165 5 244 1 37 2 306 1 39 1 268 1 269 1 67 1 
247 1 70 4 145 2 342 1 213 1 198 1 313 4 315 1 157 2 107 7 14 2 61 1 238 2 87 2 164 2 187 7 206 2 332 1 243 1 223 1 165 3 244 1 37 1 39 1 268 1 269 1 67 1 
107 4 70 3 145 1 14 1 342 1 87 1 238 1 164 1 206 1 187 4 332 1 243 1 165 2 313 3 37 2 306 1 39 1 67 1 
320 1 107 1 298 1 14 1 157 1 39 1 343 1 164 1 198 1 187 1 
107 3 70 1 14 2 342 1 164 2 187 3 206 1 165 1 313 2 244 1 39 1 157 1 67 1 
247 1 70 7 145 1 342 1 313 5 75 1 157 1 107 9 14 2 61 1 237 1 238 1 87 1 164 2 206 3 187 9 332 1 165 4 243 1 244 1 37 2 306 1 39 1 67 1 
247 1 70 7 145 1 342 1 313 5 75 1 157 1 107 9 14 2 61 1 237 1 238 1 87 1 164 2 206 3 187 9 332 1 165 4 243 1 244 1 37 2 306 1 39 1 67 1 
221 1 246 1 296 1 
336 1 
286 2 207 2 183 1 272 2 162 2 21 1 300 2 80 2 
286 3 272 2 171 1 49 1 3 1 122 2 27 2 230 1 216 2 155 1 257 1 201 1 78 1 158 1 178 1 80 2 233 1 81 1 183 1 82 1 162 2 263 1 301 2 300 3 88 1 112 1 264 1 302 1 207 2 242 1 115 2 166 1 138 1 38 1 21 1 140 1 358 1 
286 1 148 1 308 1 207 1 183 1 272 1 170 1 162 1 300 1 80 1 
286 1 308 1 43 1 310 1 193 1 162 1 214 1 221 1 185 1 300 1 276 1 253 1 35 1 246 1 
286 1 308 1 43 1 272 1 310 1 162 1 214 1 221 1 300 1 276 1 253 2 35 2 207 1 246 1 80 1 
253 1 270 1 288 1 35 1 192 1 
253 2 270 1 288 1 35 2 116 1 289 1 221 1 246 1 
253 1 288 1 35 1 
270 1 286 1 308 1 183 1 272 1 170 1 162 1 300 1 253 1 148 1 35 1 207 1 53 1 80 1 
221 1 
253 2 270 1 288 1 35 2 116 1 133 1 221 1 246 1 
270 2 288 2 12 2 234 1 251 1 25 1 221 1 31 1 50 2 253 5 35 5 241 1 294 1 116 1 256 2 73 1 101 1 246 1 42 1 
286 2 144 1 272 1 171 1 162 1 263 1 300 2 110 1 88 1 122 1 264 1 112 1 27 1 242 1 254 1 115 1 257 1 138 1 140 1 80 1 
21 1 296 1 
286 2 272 1 162 2 300 2 172 1 207 1 21 2 219 1 80 1 
224 1 93 1 110 1 
286 1 171 1 263 1 300 1 122 1 88 1 27 1 112 1 264 1 51 1 242 1 115 1 257 1 138 1 21 1 140 1 
286 3 207 1 254 1 272 3 162 3 21 1 300 3 80 3 
286 1 308 1 272 1 170 1 162 1 300 1 80 1 
286 1 308 1 172 1 207 1 272 1 162 1 300 1 80 1 219 1 
286 4 308 1 144 1 43 1 272 3 310 1 171 1 214 1 3 1 122 1 293 1 276 1 27 1 253 1 254 1 230 1 216 2 155 1 257 1 201 1 158 1 178 1 10 1 219 1 80 3 233 1 81 1 183 1 162 3 263 1 301 1 300 4 88 1 264 1 112 1 302 1 207 2 35 1 242 1 115 1 138 1 38 1 21 1 140 1 
286 2 68 1 254 1 272 1 193 1 162 2 21 1 300 2 80 1 
286 3 308 1 43 1 144 1 272 3 13 1 310 1 162 3 214 1 221 1 300 3 293 1 276 1 253 1 207 1 35 1 254 2 219 1 80 3 
286 2 207 1 254 1 272 2 224 1 162 2 300 2 110 1 80 2 219 1 
286 1 171 1 263 1 300 1 122 1 88 1 27 1 112 1 264 1 242 1 115 1 257 1 138 1 21 1 140 1 
286 1 171 1 263 1 300 1 122 1 88 1 27 1 264 1 5 1 242 1 115 1 257 1 55 1 21 1 140 1 
45 1 152 1 230 1 314 1 216 2 155 1 124 1 201 1 348 1 57 1 78 2 158 1 233 2 130 1 235 1 86 1 301 4 110 2 302 1 17 1 224 2 38 1 167 1 93 2 
286 1 308 1 272 1 310 1 200 1 162 1 300 1 80 1 
286 5 68 1 144 1 272 4 193 1 162 5 275 1 300 5 207 1 254 2 189 1 21 1 80 4 219 1 
286 2 308 1 272 2 200 1 170 1 162 2 300 2 80 2 
176 1 351 1 
176 1 351 1 
114 1 327 1 
114 1 327 1 
114 1 327 1 
176 1 351 1 125 1 
176 1 351 1 125 1 
176 1 351 1 252 1 
174 1 114 1 327 1 176 2 351 2 118 1 
176 1 351 1 125 1 
176 1 351 1 111 1 
176 1 351 1 111 1 
176 1 351 1 111 1 
95 1 340 1 160 1 328 2 161 1 221 1 26 2 330 1 351 2 253 2 35 2 173 3 174 1 154 2 176 2 245 1 357 2 218 2 181 1 
286 2 340 1 272 2 26 1 252 1 253 1 149 1 345 1 173 1 154 1 176 1 218 1 279 1 80 2 328 1 162 2 351 1 329 1 300 2 109 1 163 1 35 1 19 1 21 1 
145 1 87 1 238 1 
298 1 
298 1 
298 1 
298 1 
270 4 288 1 69 1 249 1 24 1 50 1 253 5 149 1 256 1 294 3 124 1 318 2 295 1 57 1 279 1 297 1 12 1 30 1 130 1 234 1 221 2 135 1 35 5 113 2 116 1 303 2 208 1 336 3 19 1 167 1 246 1 42 2 
270 7 288 6 69 1 249 3 50 2 277 1 149 4 253 9 255 1 278 1 256 2 294 8 8 1 124 3 318 6 295 2 57 3 297 3 11 5 12 2 30 2 130 3 234 1 108 1 221 5 241 1 35 9 113 6 116 1 336 9 167 3 246 1 42 6 227 1 192 5 
270 2 249 1 50 1 253 3 149 1 256 1 294 3 124 1 295 1 318 2 57 1 297 2 12 1 30 1 130 1 221 3 135 1 35 3 241 1 113 2 303 1 208 1 336 4 167 1 246 1 42 2 
270 3 249 2 50 1 277 1 253 4 149 2 255 1 256 1 294 5 8 1 124 2 318 4 295 1 57 2 297 3 12 1 30 1 130 2 221 4 135 1 35 4 241 1 113 4 303 2 208 1 336 7 167 2 246 1 42 4 
291 1 140 1 296 1 
334 1 140 1 
225 1 
242 1 140 1 
242 1 257 1 291 2 102 1 140 3 349 1 
242 1 257 1 140 1 
316 1 140 1 
233 3 290 1 235 2 131 1 301 7 16 1 222 1 89 1 28 1 152 3 18 2 91 1 124 1 167 1 168 1 202 1 78 4 
233 3 290 1 235 2 131 1 301 7 16 1 222 1 89 1 28 1 152 3 18 2 91 1 124 1 167 1 168 1 202 1 78 4 
233 3 290 1 235 2 131 1 301 7 16 1 222 1 89 1 28 1 152 3 18 2 91 1 124 1 167 1 168 1 202 1 78 4 58 1 
233 10 322 1 130 3 235 1 249 3 46 1 62 1 134 3 282 1 301 20 222 1 89 2 152 4 229 1 18 1 91 3 124 3 167 3 57 3 78 10 190 1 307 4 280 1 
142 1 120 1 290 1 4 1 28 1 152 5 230 1 216 2 124 2 201 1 202 1 158 1 78 6 280 1 233 5 235 3 131 1 301 11 16 1 222 1 302 1 89 1 18 1 91 2 167 2 
287 1 107 1 298 1 211 1 14 1 132 1 212 1 171 1 15 1 164 1 122 1 264 1 187 1 27 1 115 1 90 1 317 1 157 1 39 1 226 1 22 1 203 1 
287 1 107 2 70 1 298 1 211 1 14 1 212 1 171 1 15 1 164 1 122 1 264 1 187 2 27 1 115 1 90 1 267 1 139 1 317 1 157 1 226 1 79 1 203 1 
287 1 107 1 70 1 298 1 212 1 171 1 15 1 122 1 264 1 187 1 27 1 115 1 90 1 267 1 317 1 157 1 226 1 79 1 
171 1 122 1 27 1 147 1 52 1 317 2 157 2 107 1 14 1 15 2 263 1 205 1 164 1 283 1 187 1 264 1 242 1 188 1 115 1 136 1 90 2 139 1 140 1 
287 1 107 1 298 1 211 1 14 1 132 1 212 1 171 1 15 1 164 1 122 1 264 1 187 1 27 1 115 1 90 1 317 1 157 1 39 1 226 1 79 1 203 1 
65 1 
286 1 308 1 288 2 43 1 71 1 310 1 193 1 250 1 214 1 171 1 2 1 122 2 50 1 276 1 27 2 253 3 123 1 52 1 256 1 294 1 12 1 30 1 234 1 129 1 325 2 162 1 185 1 263 2 300 1 264 1 265 1 35 3 333 1 242 1 115 2 116 1 136 1 140 1 20 1 42 1 
286 1 308 1 43 1 71 1 310 1 325 2 193 1 250 1 162 1 214 1 185 1 2 1 300 1 276 1 253 2 265 1 35 2 123 1 
286 1 308 1 43 1 71 1 310 1 325 2 193 1 250 1 162 1 214 1 185 1 2 1 300 1 276 1 253 2 265 1 35 2 123 1 
286 1 308 1 43 1 71 1 310 1 325 2 193 1 250 1 162 1 214 1 185 1 2 1 300 1 276 1 253 2 265 1 35 2 123 1 
286 1 308 1 288 1 43 1 71 1 310 1 325 2 133 1 193 1 250 1 214 1 162 1 185 1 2 1 300 1 276 1 253 3 265 1 35 3 123 1 116 1 
286 1 308 1 43 1 71 1 310 1 193 1 250 1 214 1 2 1 50 1 276 1 253 2 123 1 294 1 256 1 180 1 12 1 234 1 325 2 162 1 185 1 300 1 265 1 35 2 42 1 
286 1 308 1 43 1 71 1 310 1 325 2 193 1 250 1 162 1 214 1 185 1 2 1 300 1 276 1 253 2 265 1 35 2 123 1 
286 1 308 1 43 1 71 1 310 1 325 2 193 1 250 1 162 1 214 1 185 1 2 1 300 1 276 1 253 2 265 1 35 2 123 1 
286 1 308 1 43 1 71 1 310 1 325 2 193 1 250 1 162 1 214 1 185 1 2 1 300 1 276 1 253 2 265 1 35 2 123 1 
286 1 308 1 43 1 71 1 310 1 325 2 193 1 250 1 162 1 214 1 185 1 2 1 300 1 276 1 253 2 265 1 35 2 123 1 
286 1 308 1 43 1 71 1 310 1 325 2 193 1 250 1 162 1 214 1 185 1 2 1 300 1 276 1 253 2 265 1 35 2 123 1 
286 1 308 1 43 1 71 1 310 1 193 1 250 1 214 1 2 1 50 1 276 1 253 2 123 1 294 1 256 1 12 1 234 1 325 2 162 1 185 1 300 1 265 1 35 2 285 1 42 1 
290 1 152 2 28 1 230 1 216 2 155 1 201 1 124 1 202 1 158 1 78 3 296 1 233 3 235 2 131 1 301 6 110 1 16 1 302 1 17 1 18 1 224 1 38 1 167 1 93 1 21 2 
121 1 249 4 46 1 49 1 152 4 6 1 229 2 230 2 216 4 155 1 201 2 124 4 57 2 158 2 78 13 220 2 233 9 81 1 130 4 324 1 235 2 262 1 134 4 301 22 110 16 302 2 224 6 91 2 38 2 93 16 167 2 21 1 307 4 
286 2 144 1 272 1 171 1 49 1 122 1 27 1 51 1 254 1 230 1 257 1 346 1 155 1 216 2 201 1 158 1 78 1 80 1 182 1 233 1 81 1 262 1 162 1 263 1 300 2 301 2 88 1 264 1 112 1 302 1 242 1 115 1 224 1 138 1 36 1 38 1 21 1 140 1 
144 1 272 1 228 1 49 1 152 8 230 3 155 3 201 3 232 2 202 1 57 2 158 3 233 10 60 1 235 4 162 1 239 2 110 7 16 1 112 2 242 2 18 1 115 3 167 3 21 2 286 3 290 1 249 2 171 2 122 3 27 3 254 1 28 1 175 2 216 6 257 2 124 3 258 1 79 1 78 10 178 2 80 1 81 1 130 2 262 1 131 1 263 1 300 3 301 20 88 2 264 2 302 3 305 2 224 7 138 2 91 4 38 3 93 7 140 2 
286 1 272 1 171 2 49 1 122 8 27 7 150 1 254 1 52 1 230 2 216 4 155 2 201 2 79 1 158 2 78 1 80 1 321 1 233 1 81 1 323 1 261 1 84 1 162 1 263 2 204 1 300 1 301 2 264 2 17 1 302 2 242 2 115 8 136 1 38 2 140 3 358 2 22 1 94 1 
286 1 272 1 249 1 152 1 230 1 216 2 155 1 201 1 124 1 57 1 158 1 78 1 80 1 219 1 59 1 233 2 130 1 235 1 262 1 162 1 300 1 301 3 110 1 207 1 302 1 224 1 38 1 93 1 167 1 
130 1 86 1 301 2 110 1 17 1 302 1 152 1 230 1 224 1 155 1 216 2 91 1 38 1 201 1 124 1 93 1 158 1 78 2 
233 2 235 1 301 2 110 1 17 1 302 1 152 1 230 1 224 1 155 1 216 2 314 1 38 1 201 1 93 1 167 1 57 1 158 1 
249 1 152 2 230 1 216 2 155 1 124 1 201 1 57 1 78 2 158 1 233 2 130 1 235 1 301 4 110 2 302 1 17 1 224 2 91 1 38 1 93 2 167 1 
321 1 130 1 86 1 301 2 110 1 302 1 152 1 230 1 224 1 155 1 216 2 91 1 38 1 201 1 124 1 93 1 158 1 78 2 
321 1 233 2 235 1 301 2 110 1 302 1 152 1 230 1 224 1 155 1 216 2 314 1 38 1 201 1 93 1 167 1 57 1 158 1 
249 1 152 2 230 1 216 2 155 1 124 1 201 1 57 1 78 2 158 1 321 1 233 2 130 1 235 1 301 4 110 2 302 1 224 2 91 1 38 1 93 2 167 1 
233 2 130 1 235 1 249 1 301 4 110 2 302 1 152 2 230 1 224 2 155 1 216 2 91 1 38 1 201 1 124 1 167 1 93 2 57 1 158 1 78 2 
286 1 171 1 49 1 122 1 27 1 230 1 257 1 155 1 216 2 201 1 78 1 158 1 178 1 233 1 81 1 263 1 301 2 300 1 88 1 264 1 112 1 302 1 242 1 115 1 138 1 38 1 21 1 140 1 
286 1 171 1 49 1 122 1 27 1 5 1 230 1 257 1 155 1 216 2 201 1 55 1 78 1 158 1 179 1 233 1 81 1 263 1 301 2 300 1 88 1 264 1 302 1 242 1 115 1 38 1 21 1 140 1 
249 1 152 2 230 1 216 2 155 1 124 1 201 1 57 1 78 2 158 1 233 2 130 1 235 1 262 1 301 4 110 2 302 1 224 2 91 1 38 1 93 2 167 1 
286 1 249 1 171 1 122 1 27 1 152 2 230 1 257 1 155 1 216 2 124 1 201 1 57 1 78 2 158 1 178 1 233 2 130 1 235 1 301 4 300 1 110 2 88 1 264 1 112 1 302 1 242 1 115 1 224 2 305 1 91 1 138 1 38 1 167 1 93 2 140 1 22 1 
286 1 272 1 249 1 152 1 230 1 216 2 155 1 201 1 124 1 57 1 158 1 78 2 80 1 219 1 233 1 130 1 262 1 162 1 300 1 301 3 110 1 207 1 302 1 224 1 91 1 38 1 167 1 93 1 337 1 
142 1 96 1 248 1 249 7 46 3 98 1 311 1 215 3 229 2 152 8 230 2 216 4 347 1 201 2 124 7 57 5 158 2 78 23 280 1 9 1 104 1 350 1 220 2 233 20 130 7 259 1 235 3 85 2 281 1 134 5 33 1 34 1 301 43 302 2 335 1 91 5 167 5 307 5 
142 1 96 1 248 1 249 9 46 3 98 1 311 1 215 3 229 3 152 13 230 2 216 4 347 1 201 2 124 9 57 9 158 2 78 29 280 2 9 1 104 1 350 1 220 3 233 29 130 9 259 1 235 6 85 2 281 1 134 6 33 1 34 1 301 58 302 2 335 1 91 7 167 9 307 6 
142 1 248 1 249 7 46 2 98 1 311 1 215 2 229 2 152 12 230 1 216 2 347 1 201 1 124 7 57 7 158 1 78 22 280 2 9 1 104 1 350 1 220 2 233 22 130 7 259 1 235 6 85 1 281 1 134 4 33 1 34 1 301 44 302 1 91 6 167 7 307 4 
142 1 248 1 249 4 46 2 98 1 311 1 72 1 215 2 229 1 152 4 230 2 216 4 201 2 124 4 57 4 158 2 78 13 280 1 9 1 104 1 350 1 233 15 130 4 259 1 235 2 85 1 281 1 134 2 33 1 34 1 301 28 302 2 335 1 91 2 167 4 307 3 
142 1 248 1 249 6 46 2 98 1 311 1 152 6 215 2 229 2 230 1 216 2 347 1 201 1 124 6 57 5 158 1 78 20 280 2 9 1 104 2 350 1 220 2 233 18 130 6 259 1 235 3 85 2 281 1 134 4 33 1 34 1 301 38 302 1 91 3 167 5 307 4 
174 1 154 1 176 1 328 1 161 1 218 1 26 1 319 1 351 1 181 1 
345 1 252 1 
154 1 176 1 177 1 328 1 48 1 196 1 218 1 26 1 351 1 
95 1 340 1 328 1 161 1 221 1 26 1 330 1 351 1 253 1 35 1 173 2 174 1 154 1 176 1 245 1 357 1 218 1 181 1 
95 1 340 1 328 1 161 1 221 1 26 1 330 1 351 1 253 1 35 1 173 2 174 1 154 1 176 1 245 1 357 1 218 1 181 1 
95 1 340 1 328 1 161 1 221 1 26 1 330 1 351 1 253 1 35 1 173 2 174 1 154 1 176 1 245 1 357 1 218 1 181 1 
352 1 125 1 118 1 
352 1 125 1 118 1 
304 1 111 1 
304 1 118 1 111 1 
329 1 163 1 
286 2 270 1 272 2 26 1 252 1 253 1 149 1 345 1 173 1 154 1 176 1 218 1 279 1 80 2 328 1 162 2 351 1 329 1 300 2 109 1 163 1 353 1 35 1 245 1 19 1 357 1 21 1 
352 1 125 1 
304 1 118 1 111 1 
286 2 49 1 122 2 27 2 230 1 155 1 217 1 216 2 201 1 158 1 78 1 127 1 233 1 81 1 261 1 83 1 262 1 162 2 204 1 300 2 301 2 302 1 115 2 38 1 356 1 358 2 338 1 
298 1 211 1 212 1 171 1 32 1 186 1 122 2 264 1 27 2 115 2 317 1 79 1 22 1 226 1 41 1 
128 1 298 1 211 1 212 1 171 1 122 1 27 1 264 1 115 1 317 1 79 1 226 1 41 1 
171 1 263 1 32 1 122 1 264 1 27 1 242 1 188 1 52 1 115 1 136 1 317 1 266 1 140 1 
298 1 211 1 212 1 171 1 32 1 186 1 122 1 27 1 264 1 115 1 317 1 79 1 226 1 41 1 
309 1 
294 1 25 1 221 1 246 1 31 1 42 1 296 1 
288 1 47 1 50 1 253 1 294 1 256 1 231 1 297 1 180 1 12 1 234 1 221 1 35 1 116 1 336 1 246 1 42 1 
339 1 288 2 43 1 249 1 291 1 194 1 171 2 122 1 50 2 27 1 253 2 175 1 256 2 294 2 257 1 124 1 318 2 349 1 105 1 106 1 12 2 30 1 130 1 234 2 263 1 264 1 35 2 354 1 242 1 113 2 116 1 115 1 334 2 336 2 66 1 140 4 169 1 42 3 
248 1 249 4 46 1 98 1 50 1 311 1 229 1 294 11 256 1 124 4 318 8 57 4 220 1 12 1 234 1 130 4 259 1 134 2 34 1 113 8 336 5 167 4 307 2 42 7 
286 1 308 1 120 1 290 1 272 1 170 1 292 2 50 1 253 1 148 1 28 1 256 1 294 2 53 1 124 2 56 1 80 1 183 1 12 1 234 1 162 1 63 1 300 1 16 1 35 1 207 1 167 1 42 2 
12 1 234 1 25 1 31 1 221 1 50 1 256 1 294 1 246 1 42 1 
130 1 249 1 221 2 113 2 294 2 336 4 124 1 167 1 318 2 57 1 42 2 297 2 
253 1 35 1 288 1 116 1 221 1 246 1 
288 4 341 1 171 1 50 2 122 4 27 4 253 3 52 1 256 2 294 2 184 1 12 2 30 2 129 1 234 1 263 2 331 1 264 1 241 1 35 3 242 1 333 2 115 4 116 2 136 1 140 1 20 1 119 2 42 2 
286 3 272 2 171 1 122 1 3 1 27 1 230 1 216 2 257 1 155 1 201 1 158 1 178 1 80 2 233 1 81 1 183 1 162 2 263 1 301 1 300 3 88 1 112 1 264 1 207 2 302 1 242 1 115 1 138 1 38 1 21 1 140 1 
12 1 30 1 234 1 221 1 50 1 333 1 256 1 294 1 336 1 318 1 246 1 42 1 
137 1 218 1 26 1 
137 1 218 1 26 1 
161 1 218 1 26 1 117 1 163 1 
137 1 218 1 26 1 
260 1 218 1 26 1 
260 1 218 1 26 1 
260 1 218 1 26 1 
218 1 26 1 
176 1 351 1 
142 1 248 1 249 2 46 1 98 1 311 1 152 2 230 1 216 2 201 1 124 2 57 1 158 1 78 7 280 1 233 4 130 2 235 1 259 1 134 1 301 11 34 1 302 1 91 1 167 1 307 1 
142 1 290 1 249 1 46 1 98 1 197 1 28 1 229 1 152 3 230 2 216 4 201 2 124 2 202 1 158 2 78 6 233 5 130 1 235 2 131 1 134 1 301 11 16 1 302 2 18 1 91 1 167 1 307 2 
142 1 248 1 249 4 46 1 98 1 197 1 311 1 229 1 152 4 230 2 216 4 201 2 124 4 57 4 158 2 78 11 280 1 233 12 220 1 130 4 259 1 235 2 134 2 34 1 301 23 302 2 91 2 167 4 307 2 
142 1 248 1 249 4 46 1 98 1 197 1 311 1 229 1 152 4 230 2 216 4 201 2 124 4 57 3 158 2 78 12 280 1 233 9 220 1 130 4 259 1 235 2 134 2 34 1 301 21 302 2 91 2 167 3 307 2 
142 1 248 1 249 2 46 1 98 1 311 1 152 2 230 1 216 2 201 1 124 2 57 1 158 1 78 7 280 1 233 4 130 2 235 1 259 1 134 1 301 11 34 1 302 1 91 1 167 1 307 1 
142 1 248 1 249 4 46 1 98 1 311 1 229 1 152 4 230 1 216 2 201 1 124 4 57 4 158 1 78 11 233 11 220 1 130 4 259 1 235 2 134 2 34 1 301 22 302 1 91 2 167 4 307 2 
142 1 248 1 249 4 46 1 98 1 311 1 197 1 229 1 152 4 230 2 216 4 201 2 124 4 57 3 158 2 78 12 280 2 233 10 220 1 130 4 259 1 235 2 134 2 34 1 301 22 302 2 91 2 167 3 307 2 
142 1 249 1 46 1 98 1 229 1 152 1 230 2 216 4 201 2 124 1 57 1 158 2 78 3 233 4 130 1 235 1 134 1 301 7 302 2 335 1 167 1 307 2 
233 4 290 3 235 3 131 2 301 7 16 3 152 6 28 1 91 3 124 1 167 1 202 1 78 3 
142 1 249 1 46 1 98 1 229 1 152 1 230 2 216 4 201 2 124 1 57 1 158 2 78 3 233 4 130 1 235 1 134 1 301 7 302 2 335 1 167 1 307 2 
233 5 120 1 290 1 235 2 131 1 301 10 16 1 302 1 28 1 152 4 230 1 216 2 91 2 124 2 201 1 167 2 202 1 78 5 158 1 280 1 
233 3 290 1 235 2 131 1 301 6 16 1 152 2 28 1 18 1 124 1 167 1 202 1 78 3 296 1 
233 2 130 1 235 1 249 1 301 4 197 1 302 1 152 2 230 1 216 2 91 1 201 1 124 1 167 1 57 1 158 1 78 2 
220 1 233 6 130 2 235 1 249 2 46 1 134 2 301 12 152 2 229 1 91 1 124 2 167 2 57 2 78 6 307 2 
120 1 290 1 249 2 28 1 229 1 6 1 152 5 124 4 202 1 57 2 78 10 280 1 233 10 220 1 130 2 235 3 131 1 134 2 301 20 16 1 91 2 167 4 307 2 
233 1 301 1 307 1 
134 1 301 1 78 1 
233 3 130 1 249 1 235 2 301 6 197 1 302 1 152 3 230 1 175 1 216 2 91 1 201 1 124 1 167 1 57 1 158 1 78 3 
142 1 248 1 249 4 46 1 98 1 311 1 229 1 152 4 230 1 216 2 201 1 124 4 57 4 158 1 78 11 233 11 220 1 130 4 259 1 235 2 134 2 34 1 301 22 302 1 91 2 167 4 307 2 
233 3 290 1 235 1 301 6 16 1 28 1 152 2 91 1 124 1 167 1 78 3 
233 1 54 1 301 1 280 1 
142 1 120 1 233 5 290 2 235 3 301 10 16 2 302 1 152 5 28 1 230 1 216 2 91 2 201 1 124 2 167 2 158 1 78 5 
142 1 130 1 301 2 302 1 152 1 230 1 216 2 91 1 201 1 124 1 158 1 78 2 
233 2 142 1 130 1 235 1 249 1 301 4 302 1 152 2 230 1 216 2 91 1 201 1 124 1 167 1 57 1 158 1 78 2 
233 2 142 1 290 1 235 1 301 3 16 1 302 2 152 2 230 2 335 1 216 4 54 1 91 1 201 2 158 2 78 1 280 1 
142 1 120 1 290 1 46 1 197 1 28 1 152 4 230 3 216 6 54 1 124 2 201 3 202 1 158 3 78 6 280 1 233 7 235 2 131 1 134 1 301 13 16 1 302 3 335 1 91 2 167 2 307 1 190 1 
286 1 68 1 193 1 76 1 162 1 21 1 300 1 
286 1 68 1 0 1 273 1 193 1 162 1 195 1 300 1 76 1 21 1 156 1 29 1 
242 1 52 1 136 1 115 1 171 1 140 1 263 1 122 1 296 1 264 1 27 1 
286 2 272 1 171 1 162 1 263 1 300 2 88 1 122 1 27 1 112 1 264 1 242 1 254 1 115 1 257 1 21 1 140 1 80 1 
286 2 308 1 272 2 310 1 97 1 171 1 122 1 276 1 27 1 254 1 257 2 316 1 80 1 162 2 300 2 88 1 264 1 112 1 242 2 115 1 21 1 140 3 119 1 
286 2 308 1 272 2 310 1 97 1 171 1 122 2 276 1 27 2 5 1 254 1 257 2 316 1 126 1 80 1 162 2 300 2 88 1 264 1 242 2 115 2 21 1 140 3 119 1 
288 1 43 1 97 1 291 1 171 1 122 3 27 3 253 2 257 1 316 1 126 1 159 1 221 1 263 1 264 1 64 1 35 2 242 1 115 3 334 1 140 4 246 1 119 1 
288 1 43 1 97 1 291 1 171 1 263 1 221 1 122 3 27 3 264 1 253 2 35 2 242 1 354 1 115 3 257 1 334 1 316 1 246 1 140 4 119 1 126 1 
115 1 323 1 171 1 122 1 264 1 27 1 
323 1 1 1 84 1 171 3 263 2 204 1 122 7 27 6 264 2 150 1 284 1 242 2 115 7 257 1 92 1 349 1 140 3 358 1 79 1 22 1 94 1 
272 1 152 2 230 2 155 2 201 2 202 1 158 2 233 3 235 2 162 1 239 1 110 1 112 1 16 1 242 1 115 1 18 1 167 1 21 2 22 1 338 1 286 2 290 1 171 1 122 1 27 1 254 1 28 1 216 4 257 1 124 1 78 3 178 1 80 1 262 1 131 1 300 2 301 6 88 1 264 1 302 2 224 1 305 1 138 1 38 2 93 1 140 1 
270 1 288 2 43 1 341 1 291 1 25 1 122 1 50 2 27 1 253 3 294 1 256 2 106 1 12 2 234 2 221 1 31 1 263 1 35 3 354 1 115 1 116 1 334 1 66 1 246 1 169 1 140 2 42 1 
339 1 242 1 115 2 323 1 257 1 291 1 171 2 140 2 349 1 22 1 122 2 264 1 27 2 
171 1 263 1 122 4 27 4 264 1 242 1 52 1 115 4 136 1 7 1 140 1 22 1 126 1 
1 1 228 1 171 2 122 2 27 2 264 1 312 1 242 1 115 2 100 1 257 1 92 1 140 1 119 1 
298 1 115 1 212 1 171 1 263 1 122 1 264 1 27 1 
115 2 83 1 204 1 79 1 22 1 122 2 27 2 
171 2 263 1 204 1 122 5 27 4 264 2 150 1 242 2 52 1 136 1 115 5 7 1 140 3 22 1 119 1 94 1 
143 1 171 2 263 1 204 1 122 5 27 4 264 2 150 1 242 2 52 1 136 1 115 5 7 1 140 3 22 1 119 1 
286 2 272 1 171 1 162 1 263 1 300 2 88 1 122 1 27 1 264 1 242 1 254 1 5 1 115 1 257 1 21 1 140 1 80 1 
1 1 171 2 122 1 27 1 264 1 284 1 242 1 115 1 257 1 92 1 349 1 140 1 119 1 
199 1 153 1 74 1 21 1 141 1 
270 1 209 1 308 1 43 1 310 1 214 1 221 1 276 1 293 1 253 2 344 1 35 2 151 1 153 2 199 2 74 2 21 1 246 1 141 1 
127 1 286 1 162 1 300 1 153 1 217 1 74 1 356 1 141 1 
209 1 151 1 141 1 
313 1 342 1 296 1 67 1 
107 1 313 1 14 1 342 1 164 1 67 1 187 1 
15 1 157 1 187 1 
107 3 14 1 342 1 164 1 240 1 187 3 146 1 313 1 103 1 39 1 269 2 67 1 
107 2 313 1 70 1 14 1 37 1 342 1 164 1 67 1 187 2 
107 1 313 1 165 1 243 1 145 1 14 1 87 1 238 1 39 1 164 1 187 1 
107 1 313 1 14 1 39 1 164 1 67 1 187 1 
107 1 14 1 342 1 39 1 164 1 67 2 187 1 
210 1 107 2 14 2 274 1 164 2 187 2 313 1 39 1 40 1 67 1 
107 3 247 1 70 2 14 1 61 1 342 1 164 1 187 3 206 1 165 1 313 2 39 1 67 1 
107 1 355 1 298 1 14 1 39 1 164 1 187 1 
107 4 70 2 14 2 342 1 164 2 187 4 206 1 165 1 313 2 37 1 306 1 39 1 67 1 
107 1 313 1 14 1 342 1 39 1 164 1 67 1 187 1 
107 4 70 2 44 1 14 1 342 2 164 1 146 1 187 4 206 1 165 1 313 3 103 1 269 1 67 2 
107 2 271 1 70 1 14 1 342 1 164 1 187 2 313 1 75 1 39 1 191 1 67 1 
107 3 14 1 342 1 164 1 187 3 146 2 313 1 99 1 103 1 39 1 269 2 67 1 
313 2 236 2 326 1 299 1 
107 1 14 1 23 1 39 1 164 1 187 1 
107 2 313 1 70 1 14 1 61 1 342 1 39 1 164 1 67 1 187 2 
77 1 
107 1 313 1 14 1 342 1 39 1 164 1 67 1 187 1 
107 3 70 1 14 1 61 1 342 1 164 1 187 3 313 1 39 1 269 1 67 1 
313 1 165 1 44 1 206 1 
313 1 67 1 

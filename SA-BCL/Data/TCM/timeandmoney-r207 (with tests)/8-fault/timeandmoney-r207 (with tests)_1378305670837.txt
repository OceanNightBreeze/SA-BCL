#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 91 75 (98,230) (175,337) (175,337) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 91 75 (98,230) (175,337) (175,337) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 91 75 (98,230) (175,337) (175,337) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 91 75 (98,230) (175,337) (175,337) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 91 (56,90,238,353) 358 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 91 75 (98,230) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 91 75 (98,230) 210 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 91 75 (98,230) 210 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 91 (56,90,238,353) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 91 75 376 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 91 75 292 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 91 75 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
98 1 4 1 132 1 279 1 171 3 60 1 335 1 75 1 35 1 135 3 149 2 337 1 91 1 301 2 275 1 175 1 230 1 167 1 85 2 97 1 
98 1 4 1 132 1 279 1 171 3 60 1 335 1 75 1 135 3 35 1 149 2 337 1 91 1 301 2 275 1 175 1 230 1 167 1 85 2 97 1 
98 1 4 1 132 1 279 1 171 3 60 1 335 1 75 1 135 3 35 1 149 2 337 1 91 1 301 2 275 1 175 1 230 1 167 1 85 2 97 1 
98 1 4 1 132 1 279 1 171 3 60 1 335 1 75 1 135 3 35 1 149 2 337 1 91 1 301 2 275 1 175 1 230 1 167 1 85 2 97 1 
222 1 100 1 132 1 358 1 171 2 135 2 85 1 167 1 97 1 149 1 91 1 90 1 
344 1 4 1 279 1 171 2 335 1 135 2 63 1 149 1 339 1 301 1 262 1 94 1 275 1 167 1 85 1 97 1 
132 1 171 2 230 1 75 1 135 2 85 2 167 1 97 1 149 2 91 1 301 1 
100 1 132 1 171 3 75 1 135 3 149 2 301 1 91 1 210 1 230 1 56 1 167 1 85 2 97 1 
100 1 132 1 171 3 75 1 135 3 149 2 301 1 91 1 210 1 230 1 56 1 167 1 85 2 97 1 
332 1 28 1 58 1 
346 2 115 1 28 1 
261 2 183 2 144 2 307 2 314 1 250 2 300 2 128 1 
129 1 130 1 317 1 250 2 322 1 207 2 300 2 39 1 183 2 307 2 327 2 309 1 165 1 329 1 233 1 213 1 143 1 350 1 144 3 102 2 354 1 214 1 314 1 281 1 192 1 124 1 261 3 242 2 81 1 111 1 29 2 110 1 293 1 57 1 152 1 128 1 361 1 
313 1 261 1 183 1 370 1 72 1 144 1 307 1 314 1 250 1 300 1 
47 1 71 1 72 1 332 1 144 1 235 1 202 1 33 1 300 1 160 1 261 1 243 1 28 1 82 1 
47 1 71 2 72 1 332 1 235 2 144 1 33 1 250 1 300 1 160 1 183 1 261 1 307 1 243 1 28 1 
71 1 235 1 141 1 251 1 255 1 
71 2 67 1 332 1 235 2 28 1 61 1 141 1 255 1 
71 1 235 1 141 1 
313 1 71 1 370 1 72 1 235 1 144 1 314 1 133 1 250 1 300 1 183 1 261 1 307 1 255 1 
28 1 
71 2 332 1 235 2 28 1 61 1 43 1 141 1 255 1 
2 1 16 1 71 5 5 2 319 1 332 1 235 5 61 1 284 1 194 2 356 1 79 1 27 1 195 1 28 1 166 1 141 2 255 2 46 2 
144 5 103 2 257 1 250 1 36 1 148 1 300 5 183 4 261 5 241 1 307 4 82 1 245 1 128 1 
313 1 131 1 261 2 183 2 72 1 144 2 307 2 300 2 
128 1 58 1 
144 2 250 1 36 1 300 2 173 1 261 2 183 1 307 1 128 2 
302 1 240 1 298 1 
129 1 179 1 144 1 102 1 214 1 207 1 124 1 39 1 261 1 29 1 165 1 111 1 152 1 329 1 128 1 213 1 
129 1 144 2 102 1 214 1 103 1 207 1 148 1 300 1 124 1 39 1 302 1 183 1 261 2 307 1 111 1 165 1 29 1 329 1 152 1 213 1 
261 3 183 3 144 3 103 1 307 3 250 1 300 3 128 1 
313 1 261 1 183 1 72 1 144 1 307 1 300 1 
173 1 261 1 183 1 72 1 144 1 307 1 250 1 36 1 300 1 
129 1 130 1 33 1 250 2 207 1 36 1 160 1 300 3 39 1 183 3 307 3 327 1 165 1 329 1 213 1 234 1 47 1 71 1 143 1 72 1 350 1 144 4 235 1 102 1 214 1 103 1 314 1 281 1 148 1 192 1 124 1 261 4 242 2 243 1 81 1 111 1 110 1 29 1 293 1 57 1 152 1 128 1 361 1 380 1 
261 2 183 1 144 2 307 1 103 1 82 1 245 1 300 2 128 1 
47 1 71 1 72 1 32 1 235 1 144 3 103 2 33 1 250 1 36 1 148 1 300 3 160 1 183 3 261 3 307 3 243 1 28 1 380 1 
144 2 103 1 298 1 250 1 36 1 300 2 302 1 183 2 261 2 307 2 
129 1 144 1 102 1 214 1 207 1 124 1 39 1 261 1 29 1 165 1 111 1 152 1 329 1 128 1 213 1 
129 1 144 1 102 1 214 1 207 1 159 1 124 1 9 1 261 1 29 1 165 1 111 1 152 1 128 1 213 1 
0 1 181 1 298 2 302 2 303 1 327 4 233 2 311 1 186 1 143 1 350 1 146 1 280 1 121 1 281 2 374 1 192 1 338 1 240 2 242 2 377 1 81 1 293 1 361 1 
47 1 261 1 183 1 131 1 72 1 144 1 307 1 300 1 
24 1 116 1 
24 1 116 1 
345 1 203 1 
345 1 203 1 
345 1 24 1 203 1 116 1 
188 1 24 1 116 1 
188 1 24 1 116 1 
188 1 24 1 116 1 
24 1 116 1 164 1 
340 1 24 1 116 1 
345 1 24 2 176 1 203 1 116 2 348 1 
24 1 116 1 164 1 
24 1 116 1 164 1 
134 1 300 2 183 2 41 1 307 2 163 1 95 1 116 1 185 1 71 1 235 1 144 2 145 1 19 1 261 2 340 1 24 1 287 1 26 1 267 1 343 1 294 1 128 1 127 1 
71 2 50 1 235 2 7 1 19 3 134 2 138 1 125 2 265 1 41 2 24 2 13 1 176 1 163 2 28 1 116 2 83 1 267 2 127 1 
4 1 279 1 35 1 
4 1 279 1 339 1 
221 1 279 3 18 1 246 1 35 2 339 1 
221 1 279 2 18 1 35 1 86 1 339 1 
221 2 279 2 18 1 35 1 339 1 
0 1 2 2 5 1 115 1 61 1 161 2 346 3 209 2 326 1 141 1 185 1 255 4 46 1 48 1 186 1 168 1 369 1 71 5 332 1 235 5 145 1 146 1 280 1 336 1 284 3 194 1 54 1 27 1 28 2 151 2 343 1 379 1 
0 3 2 6 5 2 115 3 61 1 251 5 161 6 8 1 137 1 346 9 92 1 324 1 141 6 255 7 46 2 48 1 16 1 186 3 168 2 71 9 332 1 235 9 146 3 280 3 284 8 194 2 22 1 108 5 54 2 244 1 27 1 28 5 151 6 343 4 379 3 
0 1 2 2 5 1 115 2 161 2 346 4 209 1 326 1 255 2 46 1 16 1 168 1 186 1 369 1 71 3 332 1 235 3 146 1 280 1 284 3 194 1 54 1 28 3 343 1 151 2 379 1 
0 2 2 4 5 1 115 3 161 4 8 1 346 7 209 2 324 1 326 1 255 3 46 1 16 1 168 1 186 2 369 1 71 4 332 1 235 4 146 2 280 2 284 5 194 1 22 1 54 1 28 4 151 4 343 2 379 2 
129 1 111 1 213 1 
268 1 213 1 
156 1 213 1 58 1 
10 1 213 1 
76 1 
129 1 213 1 
129 1 17 1 156 2 196 1 111 1 213 3 
0 1 114 1 296 1 3 1 155 1 146 1 181 2 51 1 249 1 281 3 338 3 285 1 78 1 68 2 327 7 199 1 233 4 
0 1 114 1 296 1 3 1 155 1 146 1 181 2 51 1 249 1 281 3 338 3 285 1 78 1 68 2 327 7 199 1 233 4 
312 1 0 1 296 1 114 1 3 1 155 1 146 1 181 2 51 1 249 1 281 3 338 3 285 1 78 1 68 2 327 7 199 1 233 4 
296 1 114 1 0 4 3 5 155 2 180 1 181 5 249 2 205 1 226 1 227 1 228 1 140 3 68 3 327 31 45 1 233 16 186 3 143 1 350 1 146 4 51 2 280 3 281 15 105 4 285 2 338 10 192 1 78 1 242 2 80 1 199 1 379 3 361 1 
0 1 296 1 3 1 224 1 155 1 180 1 181 3 249 1 306 1 68 2 327 9 233 5 143 2 350 2 146 1 51 1 281 4 192 2 285 1 338 4 78 1 242 4 199 1 361 2 
4 1 363 1 35 1 207 1 135 2 63 1 301 1 42 1 212 1 94 1 167 1 366 1 97 1 231 1 69 1 100 1 102 1 279 2 171 2 214 1 74 1 189 1 149 1 124 1 339 1 266 1 246 1 29 1 342 1 85 1 
4 1 363 1 35 1 207 1 135 3 63 1 301 1 42 1 212 1 94 1 366 1 97 1 231 1 142 1 100 2 102 1 279 2 171 3 214 1 74 1 189 1 149 1 124 1 339 1 375 1 246 1 29 1 342 1 85 1 220 1 
363 1 4 1 207 1 135 2 35 1 63 1 301 1 42 1 212 1 94 1 97 1 231 1 100 2 102 1 279 2 171 2 214 1 189 1 124 1 339 1 375 1 246 1 29 1 342 1 220 1 
129 1 31 1 363 2 207 1 135 1 272 1 301 2 231 2 213 1 142 1 102 1 214 1 171 1 334 1 190 1 172 1 149 1 77 1 124 1 29 1 342 2 85 1 152 1 
4 1 363 1 35 1 207 1 135 1 301 1 42 1 212 1 167 1 366 1 231 1 102 1 279 2 171 1 214 1 74 1 189 1 149 1 124 1 339 1 375 1 266 1 246 1 29 1 342 1 85 1 
291 1 
2 2 59 1 5 1 202 1 61 1 207 2 300 1 160 1 66 1 308 1 117 1 310 1 213 1 71 3 72 1 214 1 172 1 123 2 124 1 261 1 174 1 27 1 82 1 29 2 126 1 129 1 178 1 318 1 33 1 34 1 229 1 141 2 46 1 47 1 187 1 235 3 102 2 144 1 190 1 284 2 194 1 239 1 54 1 243 1 150 1 152 2 
318 1 202 1 33 1 61 1 160 1 300 1 66 1 308 1 43 1 141 2 47 1 71 3 256 1 72 1 144 1 235 3 123 2 239 1 261 1 174 1 243 1 82 1 
318 1 202 1 33 1 61 1 160 1 300 1 66 1 139 1 308 1 43 1 141 1 47 1 71 3 72 1 332 1 144 1 235 3 123 3 239 1 261 1 174 1 243 1 82 1 28 1 
318 1 202 1 33 1 61 1 160 1 300 1 66 1 139 1 308 1 43 1 253 1 141 2 47 1 71 3 256 1 72 1 332 1 144 1 235 3 123 3 239 1 261 1 174 1 243 1 82 1 28 1 
2 1 5 1 202 1 157 1 61 1 250 1 160 1 300 2 66 1 305 1 307 1 308 1 253 2 310 1 313 1 120 1 256 2 71 3 72 2 314 1 123 2 261 2 217 1 174 1 27 1 82 1 28 1 126 1 178 2 318 1 33 1 34 2 133 1 183 1 43 1 141 3 46 1 47 1 370 1 332 1 144 2 235 3 237 1 284 1 194 1 239 1 243 1 
178 1 2 1 5 1 318 1 202 1 33 1 34 1 300 1 160 1 66 1 308 1 310 1 46 1 47 1 71 2 72 1 235 2 144 1 284 1 123 2 194 1 239 1 261 1 174 1 27 1 243 1 82 1 150 1 126 1 
2 1 5 1 202 1 157 1 250 1 300 2 160 1 66 1 307 1 308 1 310 1 313 1 71 2 72 2 314 1 123 2 217 1 261 2 174 1 27 1 82 1 28 1 126 1 178 2 318 1 33 1 34 2 133 1 183 1 46 1 47 1 370 1 332 1 235 2 144 2 237 1 284 1 194 1 239 1 243 1 
2 1 5 1 202 1 157 1 250 1 300 2 160 1 66 1 307 1 308 1 310 1 313 1 71 2 72 2 314 1 123 2 217 1 261 2 174 1 27 1 82 1 28 1 126 1 178 2 318 1 33 1 34 2 133 1 183 1 46 1 47 1 370 1 332 1 235 2 144 2 237 1 284 1 194 1 239 1 243 1 
2 1 5 1 202 1 157 1 250 1 300 2 160 1 66 1 307 1 308 1 313 1 71 2 72 2 73 1 314 1 123 2 216 1 261 2 174 1 27 1 82 1 28 1 126 1 178 2 318 1 33 1 34 2 133 1 183 1 46 1 47 1 370 1 332 1 235 2 144 2 284 1 194 1 239 1 341 1 243 1 
2 1 5 1 202 1 157 1 250 1 300 2 160 1 66 1 307 1 308 1 253 1 310 1 313 1 120 1 256 1 71 2 72 2 314 1 123 3 261 2 217 1 174 1 27 1 82 1 28 1 126 1 178 2 318 1 33 1 34 2 133 1 183 1 139 1 141 1 46 1 47 1 370 1 332 1 235 2 144 2 237 1 284 1 194 1 239 1 243 1 
2 1 5 1 202 1 157 1 250 1 300 2 160 1 66 1 307 1 308 1 253 1 310 1 313 1 120 1 256 1 71 2 72 2 314 1 123 3 261 2 217 1 174 1 27 1 82 1 28 1 126 1 178 2 318 1 33 1 34 2 133 1 183 1 139 1 141 1 46 1 47 1 370 1 332 1 235 2 144 2 237 1 284 1 194 1 239 1 243 1 
178 1 2 1 5 1 318 1 202 1 33 1 34 1 300 1 160 1 66 1 308 1 46 1 47 1 71 2 72 1 235 2 144 1 284 1 123 2 194 1 239 1 261 1 174 1 341 1 27 1 243 1 82 1 150 1 126 1 
0 1 296 1 143 1 350 1 146 1 181 2 51 1 249 1 298 1 281 3 374 1 338 2 192 1 78 1 302 1 240 1 242 2 68 1 327 6 81 1 293 1 199 1 128 2 233 3 361 1 58 1 
0 1 3 1 181 1 298 4 322 1 227 1 302 11 211 1 228 1 140 3 327 14 118 1 233 8 186 2 143 2 350 2 146 2 280 1 281 6 105 3 236 1 338 2 192 2 106 1 23 1 240 11 242 4 81 2 293 1 57 1 379 2 128 1 361 2 
129 1 179 1 298 1 207 1 322 1 300 1 39 1 183 1 211 1 274 1 307 1 327 2 165 1 329 1 213 1 233 1 70 1 143 1 350 1 102 1 144 2 214 1 103 1 122 1 281 1 148 1 192 1 124 1 261 2 242 2 81 1 111 1 29 1 293 1 152 1 57 1 128 1 361 1 
296 1 0 3 3 4 249 1 298 7 207 3 300 1 302 7 211 1 65 2 68 1 307 1 165 2 213 2 350 3 214 2 21 2 78 1 124 2 261 3 81 3 359 2 29 3 219 1 128 2 361 3 129 2 181 4 322 1 39 2 183 1 327 20 329 2 233 10 277 1 186 2 143 3 278 2 102 3 144 3 103 1 146 3 51 1 280 2 281 10 148 1 192 3 338 8 375 1 240 7 242 6 110 2 111 2 199 1 293 3 57 1 152 1 379 2 112 1 
129 2 62 1 207 8 322 1 300 1 183 1 307 1 327 2 309 2 213 3 233 1 69 1 143 2 350 2 144 1 102 8 103 1 214 2 190 1 172 1 281 1 355 1 374 1 192 2 124 2 375 1 286 1 259 1 264 1 261 1 242 4 81 2 109 1 29 7 293 2 152 2 57 1 154 1 361 2 
0 1 181 1 298 1 250 1 36 1 300 1 302 1 183 1 211 1 307 1 327 3 233 1 186 1 143 1 350 1 144 1 146 1 280 1 281 2 338 1 192 1 240 1 261 1 242 2 289 1 81 1 293 1 379 1 361 1 
186 1 3 1 143 1 350 1 146 1 298 1 374 1 338 1 192 1 302 1 240 1 242 2 377 1 327 2 81 1 293 1 361 1 233 2 
0 1 143 1 350 1 181 1 280 1 298 1 281 2 374 1 338 1 192 1 302 1 240 1 303 1 242 2 327 2 81 1 293 1 361 1 
0 1 186 1 3 1 143 1 350 1 181 1 146 1 280 1 298 2 281 2 374 1 338 2 192 1 302 2 240 2 242 2 327 4 81 1 293 1 379 1 361 1 233 2 
186 1 3 1 143 1 350 1 146 1 298 1 62 1 338 1 192 1 302 1 240 1 242 2 377 1 327 2 81 1 293 1 361 1 233 2 
0 1 143 1 350 1 181 1 280 1 298 1 62 1 281 2 338 1 192 1 302 1 240 1 303 1 242 2 327 2 81 1 293 1 361 1 
0 1 186 1 3 1 143 1 350 1 181 1 146 1 280 1 298 2 62 1 281 2 338 2 192 1 302 2 240 2 242 2 327 4 81 1 293 1 379 1 361 1 233 2 
0 1 186 1 3 1 143 1 350 1 181 1 146 1 280 1 298 2 281 2 338 2 192 1 302 2 240 2 242 2 327 4 81 1 293 1 379 1 361 1 233 2 
129 1 322 1 207 1 39 1 327 2 165 1 329 1 233 1 213 1 143 1 350 1 102 1 144 1 214 1 281 1 192 1 124 1 261 1 242 2 81 1 111 1 110 1 29 1 293 1 152 1 57 1 128 1 361 1 
72 1 143 1 350 1 102 1 281 1 207 1 192 1 357 1 242 2 327 1 290 1 81 1 29 1 293 1 57 1 152 1 128 1 361 1 
0 1 186 1 3 1 143 1 350 1 181 1 146 1 280 1 298 2 281 2 338 2 192 1 302 2 240 2 211 1 242 2 327 4 81 1 293 1 379 1 361 1 233 2 
129 1 0 1 3 1 181 1 298 2 207 1 39 1 302 2 327 4 165 1 329 1 233 2 213 1 186 1 69 1 143 1 350 1 102 1 144 1 214 1 146 1 280 1 281 2 338 2 21 1 192 1 124 1 240 2 261 1 242 2 81 1 111 1 110 1 29 1 293 1 379 1 361 1 
0 1 3 1 298 1 250 1 36 1 300 1 302 1 183 1 211 1 307 1 327 3 233 2 186 1 143 1 350 1 144 1 146 1 280 1 281 1 338 1 192 1 260 1 240 1 261 1 242 2 81 1 293 1 379 1 361 1 
296 1 0 5 201 1 3 4 180 1 181 4 204 1 249 1 136 1 227 3 347 1 306 1 228 1 68 1 140 3 327 41 233 20 186 4 143 3 170 1 350 3 352 1 146 5 51 1 373 1 280 4 105 4 281 21 192 3 338 8 193 1 78 1 258 1 107 1 315 2 316 4 242 6 197 1 378 1 360 1 199 1 379 4 361 3 
296 1 0 4 201 1 3 3 180 2 181 4 204 1 249 1 136 1 227 3 347 1 306 1 228 1 68 1 140 3 327 38 233 20 186 4 143 4 170 1 350 4 352 1 146 5 51 1 373 1 280 3 105 4 281 18 192 4 338 7 193 1 78 1 258 1 107 1 315 2 316 4 242 8 197 1 378 1 360 1 199 1 379 4 361 4 
296 1 0 8 201 1 3 7 180 1 181 7 204 1 249 1 136 1 227 2 347 1 306 1 228 2 68 1 140 4 327 52 233 27 186 7 143 2 170 1 350 2 352 1 146 8 51 1 373 1 280 7 105 4 281 25 192 2 338 14 193 1 78 1 258 1 107 1 23 2 315 1 316 4 242 4 378 1 199 1 379 7 361 2 
0 3 201 1 3 3 181 3 204 1 227 1 347 1 306 1 228 1 140 1 327 19 233 9 186 3 143 2 170 1 350 2 146 3 280 3 105 2 281 10 191 1 192 2 338 6 193 2 315 1 316 2 242 4 197 1 379 3 361 2 
0 2 3 2 201 1 180 2 181 2 204 2 136 1 227 2 347 1 306 1 140 2 327 26 233 14 186 3 143 3 170 1 350 3 352 1 146 3 373 1 280 2 281 12 105 2 338 4 192 3 193 1 258 1 107 1 315 2 316 4 242 6 378 1 379 3 361 3 
295 1 188 1 
365 1 164 1 348 1 
41 1 24 1 13 1 176 1 163 1 14 1 116 1 83 1 267 1 134 1 
340 1 26 1 
41 1 24 1 351 1 225 1 163 1 116 1 267 1 134 1 232 1 
71 1 235 1 7 1 19 2 134 1 138 1 125 1 265 1 41 1 24 1 13 1 176 1 163 1 28 1 116 1 83 1 267 1 127 1 
71 1 235 1 7 1 19 2 134 1 138 1 125 1 265 1 41 1 24 1 13 1 176 1 163 1 28 1 116 1 83 1 267 1 127 1 
71 1 235 1 7 1 19 2 134 1 138 1 125 1 265 1 41 1 24 1 13 1 176 1 163 1 28 1 116 1 83 1 267 1 127 1 
295 1 188 1 348 1 
295 1 188 1 348 1 
365 1 164 1 
365 1 164 1 348 1 
287 1 294 1 
88 1 134 1 300 2 138 1 183 2 41 1 307 2 163 1 95 1 116 1 255 1 185 1 71 1 144 2 235 1 145 1 19 1 261 2 125 1 340 1 24 1 287 1 26 1 267 1 343 1 294 1 128 1 
129 1 362 1 87 1 207 2 322 1 300 2 64 1 211 1 327 2 309 2 213 1 233 1 15 1 49 1 143 1 350 1 102 2 144 2 214 1 281 1 192 1 124 1 259 1 261 2 242 2 81 1 109 1 29 2 293 1 57 1 361 1 
69 1 4 1 279 2 102 2 214 1 372 1 189 1 35 1 207 2 339 1 124 1 375 1 212 1 246 1 44 1 29 2 177 1 366 1 231 1 
4 1 6 1 279 2 102 1 214 1 189 1 35 1 207 1 339 1 124 1 375 1 212 1 246 1 44 1 29 1 366 1 231 1 
129 1 102 1 214 1 334 1 190 1 172 1 207 1 124 1 273 1 29 1 177 1 231 1 152 1 213 1 
4 1 279 2 102 1 214 1 372 1 189 1 35 1 207 1 339 1 124 1 375 1 212 1 246 1 44 1 29 1 177 1 366 1 231 1 
364 1 
2 1 319 1 332 1 79 1 28 1 284 1 58 1 
2 1 5 1 115 1 61 1 320 1 346 1 141 1 310 1 46 1 71 1 332 1 235 1 284 1 194 1 55 1 27 1 28 2 
247 1 2 8 0 2 5 4 156 2 115 6 158 1 61 3 207 3 161 6 346 12 10 3 12 2 117 1 254 1 213 7 69 1 17 1 71 5 214 3 215 2 124 2 79 1 27 4 28 8 29 3 129 2 319 1 323 2 182 2 184 2 96 1 141 5 46 4 368 2 186 2 331 1 278 2 332 2 102 3 235 5 146 2 280 2 284 9 52 1 194 4 53 2 54 2 243 2 111 2 151 6 152 1 379 2 
2 5 0 2 5 2 115 3 61 1 161 5 346 6 227 1 184 1 140 1 117 1 141 1 46 2 349 1 186 2 71 1 332 2 235 1 352 1 146 2 373 1 280 2 105 1 282 1 284 8 258 1 107 1 53 2 194 2 54 1 27 2 378 1 28 5 151 5 379 2 
2 2 0 1 5 1 249 1 299 1 133 1 250 1 300 1 183 1 184 1 307 1 46 1 313 1 71 1 370 1 72 1 144 1 235 1 146 2 51 1 314 1 284 2 78 1 53 2 194 1 261 1 217 1 27 1 
2 1 5 1 319 1 332 1 284 1 194 1 79 1 27 1 28 1 46 1 
186 2 2 5 0 2 278 1 146 2 115 5 280 2 284 5 161 5 53 2 346 10 184 1 28 5 151 5 379 2 
71 1 332 1 235 1 28 1 61 1 141 1 
129 1 2 2 59 1 5 2 158 2 61 2 271 1 207 4 229 1 117 2 141 4 213 1 46 2 16 1 71 3 101 1 102 4 235 3 214 1 190 1 172 1 284 2 124 1 52 1 194 2 54 2 27 1 29 4 152 2 
129 1 130 1 250 2 207 1 300 2 39 1 183 2 307 2 327 1 165 1 329 1 213 1 143 1 350 1 102 1 144 3 214 1 314 1 281 1 192 1 124 1 261 3 242 2 81 1 29 1 110 1 111 1 293 1 57 1 152 1 128 1 361 1 
2 2 5 1 332 2 115 2 284 1 161 2 346 4 194 1 54 1 68 1 27 1 28 4 117 1 151 2 46 1 
218 1 41 1 163 1 
218 1 41 1 163 1 
218 1 41 1 163 1 
41 1 163 1 89 1 
41 1 13 1 163 1 84 1 294 1 
41 1 163 1 89 1 
41 1 163 1 89 1 
41 1 163 1 
24 1 116 1 
0 1 296 1 181 2 249 1 227 1 306 1 68 1 140 1 327 8 233 4 143 1 350 1 146 1 51 1 281 4 105 1 192 1 338 2 78 1 242 2 378 1 199 1 361 1 
0 1 296 1 3 1 181 2 249 1 227 1 306 1 228 1 68 1 140 1 327 11 233 6 119 1 186 1 143 2 350 2 146 2 51 1 281 5 105 2 192 2 338 3 78 1 242 4 378 1 199 1 379 1 361 2 
296 1 0 3 3 1 180 1 181 3 249 1 227 1 306 1 68 1 140 1 327 19 233 9 119 1 186 2 143 3 350 3 352 1 146 3 51 1 373 1 280 2 281 10 105 1 192 3 338 4 78 1 258 1 107 1 242 6 378 1 199 1 379 2 361 3 
296 1 0 2 3 2 180 1 181 3 249 1 227 1 306 1 68 1 140 1 327 17 233 10 119 1 186 2 143 3 350 3 352 1 146 3 51 1 373 1 280 1 281 7 105 1 192 3 338 5 78 1 258 1 107 1 242 6 378 1 199 1 379 2 361 3 
0 1 296 1 181 2 249 1 227 1 306 1 68 1 140 1 327 8 233 4 143 1 350 1 146 1 51 1 281 4 105 1 192 1 338 2 78 1 242 2 378 1 199 1 361 1 
0 2 3 1 181 1 227 1 306 1 140 1 327 12 233 6 186 2 143 1 350 1 352 1 146 2 373 1 280 2 281 6 105 1 192 1 338 2 258 1 107 1 242 2 378 1 379 2 361 1 
296 1 0 2 3 2 180 2 181 3 249 1 227 1 306 1 68 1 140 1 327 18 233 10 119 1 186 2 143 4 350 4 352 1 146 3 51 1 373 1 280 1 281 8 105 1 192 4 338 5 78 1 258 1 107 1 242 8 378 1 199 1 379 2 361 4 
0 2 3 3 180 2 181 3 227 1 306 1 140 1 327 16 233 9 186 3 143 4 350 4 352 1 146 3 373 1 280 2 281 7 105 1 192 4 338 6 258 1 107 1 242 8 378 1 197 1 379 3 361 4 
0 1 296 2 3 3 181 3 146 1 249 3 51 3 281 4 338 6 78 1 327 7 199 1 233 3 
296 1 0 2 3 1 180 2 181 3 249 1 227 1 306 1 68 1 140 1 327 18 233 10 186 2 143 4 350 4 352 1 146 3 51 1 373 1 280 1 281 8 105 1 192 4 338 4 78 1 258 1 107 1 242 8 378 1 197 1 199 1 379 2 361 4 
0 1 296 1 3 1 143 2 180 1 350 2 146 1 181 2 249 1 51 1 281 4 338 3 192 2 78 1 242 4 68 1 327 8 199 1 233 4 361 2 
0 1 296 1 68 1 327 6 146 1 181 2 51 1 249 1 281 3 199 1 338 2 233 3 78 1 58 1 
119 1 0 1 186 1 3 1 143 1 350 1 181 1 146 1 280 1 281 2 338 2 192 1 242 2 327 4 379 1 361 1 233 2 
0 1 186 1 3 1 181 1 146 1 280 1 105 2 281 4 338 2 227 1 228 1 140 1 327 7 379 1 233 3 
296 1 0 3 3 4 180 2 181 5 249 2 228 1 68 1 140 2 327 23 233 11 186 2 99 1 143 2 350 2 146 3 51 2 280 2 281 12 105 2 338 9 192 2 78 1 106 1 23 1 242 4 199 1 379 2 361 2 
327 1 281 1 105 1 
140 1 327 1 233 1 
119 1 186 1 0 1 3 1 143 1 278 1 350 1 146 1 181 2 280 1 281 3 192 1 338 3 242 2 327 6 379 1 361 1 233 3 
0 2 3 1 181 1 227 1 306 1 140 1 327 12 233 6 186 2 143 1 350 1 352 1 146 2 373 1 280 2 281 6 105 1 192 1 338 2 258 1 107 1 242 2 378 1 379 2 361 1 
0 1 3 1 181 1 327 6 146 1 51 1 249 1 281 3 338 2 233 3 78 1 
296 1 3 1 99 1 180 1 143 1 350 1 181 1 51 1 249 1 281 2 338 2 192 1 242 2 327 3 199 1 233 1 361 1 
0 2 3 2 143 1 350 1 181 3 146 2 249 2 51 2 299 1 281 5 192 1 338 5 78 1 242 2 306 1 327 10 361 1 233 5 
186 1 3 1 143 1 350 1 242 2 306 1 327 2 146 1 338 1 192 1 233 2 361 1 
0 1 186 1 3 1 143 1 350 1 181 1 146 1 280 1 281 2 338 2 192 1 306 1 242 2 327 4 379 1 361 1 233 2 
3 1 99 1 180 1 143 3 350 3 181 1 249 1 51 1 281 2 192 3 338 2 306 1 242 6 327 3 197 1 361 3 233 1 
296 1 0 5 3 5 180 2 181 7 249 3 205 1 226 1 227 1 306 1 228 1 68 1 140 3 327 34 233 16 119 1 186 3 99 1 143 5 350 5 146 5 51 3 280 3 281 18 105 4 192 5 338 12 78 2 242 10 80 1 197 1 199 1 379 3 361 5 
261 1 144 1 82 1 245 1 300 1 128 1 367 1 
269 1 223 1 144 1 20 1 300 1 261 1 252 1 245 1 82 1 128 1 30 1 367 1 
129 1 144 2 102 1 214 1 103 1 207 1 300 1 124 1 9 1 183 1 261 2 307 1 111 1 165 1 29 1 152 1 128 1 213 1 
129 1 17 1 371 1 102 1 214 2 158 1 321 1 207 1 124 1 198 1 29 1 111 1 213 1 
129 1 102 1 214 1 172 1 190 1 29 1 207 1 152 1 124 1 213 1 58 1 
129 1 144 2 102 1 214 1 103 1 207 1 300 1 124 1 183 1 261 2 307 1 111 1 165 1 29 1 152 1 329 1 128 1 213 1 
129 2 247 1 33 1 158 1 207 1 300 2 183 1 307 2 165 1 329 1 213 2 47 1 72 2 102 1 144 2 103 1 214 1 124 1 261 2 357 1 29 1 111 2 128 1 
129 2 247 1 33 1 158 1 207 1 300 2 9 1 183 1 307 2 165 1 213 2 47 1 72 2 102 1 144 2 103 1 214 1 124 1 261 2 357 1 29 1 111 2 128 1 
129 1 297 1 247 1 156 1 158 1 250 1 133 1 207 1 300 1 183 1 10 1 307 1 141 1 328 1 213 3 313 1 370 1 71 2 72 1 332 1 144 1 102 1 235 2 214 1 314 1 124 1 261 1 243 1 28 1 29 1 111 1 
129 1 247 1 156 1 158 1 250 1 133 1 207 1 300 1 323 1 183 1 10 1 307 1 141 1 213 3 313 1 370 1 71 2 72 1 332 1 144 1 102 1 235 2 214 1 314 1 124 1 261 1 243 1 28 1 29 1 111 1 
102 1 214 1 29 1 207 1 355 1 124 1 
129 2 69 1 17 1 371 1 102 7 214 3 321 1 355 1 207 7 124 2 375 1 286 1 264 1 309 1 109 1 198 1 29 6 111 1 152 2 154 1 213 3 
129 1 0 1 296 1 362 1 181 2 249 1 298 1 207 1 300 1 39 1 302 1 183 1 211 1 68 1 307 1 327 6 165 1 329 1 233 3 213 1 69 1 143 2 350 2 144 2 102 1 214 1 103 1 146 1 51 1 281 3 338 2 192 2 21 1 78 1 124 1 240 1 261 2 242 4 81 2 359 1 111 1 29 1 110 1 199 1 293 2 128 2 361 2 
2 1 5 2 319 1 156 1 61 1 207 1 323 1 10 1 12 1 141 2 255 1 46 2 213 2 368 1 71 3 332 1 235 3 102 1 215 1 284 1 52 1 194 2 79 1 27 2 243 1 28 1 29 1 152 1 
129 1 69 1 17 1 331 1 156 1 102 2 214 2 355 1 207 2 124 1 29 2 111 1 213 2 
129 1 69 1 102 4 214 1 190 1 172 1 207 4 124 1 40 1 25 1 29 4 152 1 213 1 
276 1 129 1 371 1 102 2 214 2 158 1 207 2 283 1 124 1 198 1 29 2 111 1 219 1 213 1 
4 1 279 1 212 1 102 1 214 1 29 1 207 1 152 1 339 1 124 1 
15 1 129 1 69 1 102 2 214 1 207 2 124 1 375 1 109 1 29 2 213 1 
129 2 69 1 102 5 214 2 158 1 172 1 190 1 207 5 124 2 286 1 25 1 109 1 29 4 152 1 154 1 213 3 
129 2 69 1 102 5 214 2 158 1 172 1 190 1 207 5 124 2 286 1 25 1 325 1 109 1 29 4 152 1 213 3 
169 1 11 1 93 1 128 1 200 1 
47 1 169 1 71 2 72 1 332 1 235 2 33 1 206 1 160 1 11 2 93 2 288 1 304 1 243 1 28 1 255 1 128 1 200 2 380 1 
64 1 49 1 261 1 169 1 11 1 144 1 87 1 300 1 200 1 
169 1 304 1 206 1 
94 1 97 1 63 1 58 1 
94 1 171 1 135 1 85 1 97 1 63 1 149 1 
363 1 171 1 301 1 
171 3 104 1 135 3 149 1 63 1 263 1 275 2 94 1 167 1 85 1 97 1 330 1 
222 1 100 1 94 1 171 2 135 2 85 1 97 1 63 1 149 1 
132 1 171 1 135 1 85 1 167 1 97 1 149 1 91 1 90 1 
171 1 135 1 85 1 167 1 97 1 63 1 149 1 
94 1 171 1 135 1 85 1 167 1 63 2 149 1 
248 1 171 2 270 1 135 2 63 1 149 2 208 1 167 1 85 2 97 1 
100 1 132 1 376 1 333 1 171 2 75 1 135 2 85 1 167 1 97 1 149 1 91 1 
4 1 100 1 279 2 171 2 135 2 35 1 63 1 149 1 339 1 38 1 94 1 246 1 167 1 85 1 97 1 
222 1 100 1 132 1 171 2 292 1 75 1 135 2 85 1 167 1 97 1 149 1 91 1 
94 1 171 1 135 1 85 1 167 1 97 1 63 1 149 1 
100 1 132 2 171 2 75 1 85 1 135 2 97 1 149 1 91 1 
100 1 171 2 353 1 135 2 63 1 149 1 238 1 94 1 56 1 167 1 85 1 97 1 
171 3 104 1 147 1 135 3 149 1 63 1 275 2 94 1 167 1 85 1 97 1 330 2 
1 1 162 1 97 2 37 2 
171 1 135 1 85 1 167 1 149 1 153 1 
100 1 94 1 333 1 171 2 135 2 85 1 167 1 97 1 63 1 149 1 
113 1 
94 1 171 1 135 1 85 1 167 1 97 1 63 1 149 1 
100 1 333 1 94 1 275 1 171 3 135 3 85 1 167 1 97 1 63 1 149 1 
100 1 171 1 75 1 135 1 97 1 91 1 
97 1 63 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (43,185) 192 (81,177) (81,177) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (43,185) 192 (81,177) (81,177) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (43,185) 192 (81,177) (81,177) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (43,185) 192 (81,177) (81,177) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 163 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 172 176 208 223 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 172 176 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 172 176 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 172 209 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 172 176 208 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 172 176 208 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 157 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 164 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
177 1 68 1 144 1 81 1 230 1 329 1 219 1 192 1 314 1 345 1 43 1 
177 1 68 1 144 1 81 1 230 1 329 1 219 1 192 1 314 1 345 1 43 1 
177 1 68 1 144 1 81 1 230 1 329 1 219 1 192 1 314 1 345 1 43 1 
177 1 68 1 144 1 81 1 230 1 329 1 219 1 192 1 314 1 345 1 43 1 
301 1 233 3 46 3 144 1 68 4 69 2 168 1 204 1 219 1 329 1 314 4 367 2 110 1 194 1 317 1 210 1 284 1 74 1 
44 1 46 1 301 1 144 1 68 2 168 1 122 1 219 1 329 1 314 2 194 1 317 1 230 1 42 1 345 1 337 1 
301 1 46 2 233 1 144 2 68 3 219 1 329 2 314 3 367 1 194 1 185 1 284 1 345 1 
301 1 233 7 46 5 68 9 69 2 204 1 329 2 110 1 185 1 210 1 284 3 266 1 74 1 139 1 144 2 168 1 219 1 367 4 314 9 194 1 317 1 271 1 197 1 345 1 
301 1 233 7 46 5 68 9 69 2 204 1 329 2 110 1 185 1 210 1 284 3 266 1 74 1 139 1 144 2 168 1 219 1 367 4 314 9 194 1 317 1 271 1 197 1 345 1 
95 1 9 1 157 1 
9 1 147 1 92 2 
258 2 195 2 321 2 38 2 158 2 2 2 229 1 285 1 
258 2 302 1 175 1 158 3 2 2 203 2 202 1 263 1 303 2 130 1 360 1 26 1 135 1 241 1 285 1 189 1 143 2 312 1 12 1 222 1 31 1 35 2 195 2 318 1 321 3 153 1 38 2 80 1 227 2 229 1 18 1 274 1 343 1 19 1 275 1 232 1 327 1 
258 1 0 1 364 1 195 1 321 1 121 1 38 1 158 1 2 1 285 1 
95 1 9 1 201 1 121 1 158 1 193 1 125 1 113 1 358 1 195 1 321 1 39 1 83 1 65 1 
258 1 95 1 9 1 201 1 121 1 2 1 158 1 193 1 125 2 113 1 195 1 321 1 38 1 83 1 65 2 
25 1 91 1 65 1 125 1 294 1 
340 1 95 1 9 1 25 1 65 2 125 2 294 1 213 1 
25 1 65 1 125 1 
0 1 258 1 364 1 121 1 261 1 2 1 158 1 125 1 294 1 195 1 321 1 38 1 65 1 285 1 
9 1 
95 1 9 1 25 1 65 2 125 2 347 1 294 1 213 1 
300 1 94 1 95 1 9 1 235 1 142 1 87 2 245 2 51 1 125 5 13 1 71 1 247 1 294 2 25 2 282 2 65 5 310 1 213 1 
157 1 229 1 
258 1 158 2 2 1 112 1 195 2 248 1 321 2 38 1 229 2 
264 1 164 1 371 1 
175 1 12 1 158 1 203 1 202 1 263 1 303 1 130 1 35 1 321 1 156 1 80 1 360 1 229 1 275 1 19 1 
258 1 175 1 12 1 202 1 158 2 203 1 263 1 303 1 130 1 315 1 35 1 195 1 321 2 102 1 38 1 80 1 360 1 371 1 19 1 275 1 
258 3 195 3 321 3 102 1 38 3 2 1 158 3 229 1 
258 1 364 1 195 1 321 1 121 1 38 1 158 1 
258 1 195 1 248 1 321 1 121 1 38 1 158 1 2 1 112 1 
258 3 302 1 175 1 201 1 202 1 2 2 158 4 203 1 263 1 303 1 130 1 113 1 360 1 26 1 135 1 241 1 285 1 189 1 143 1 312 1 12 1 269 1 121 1 31 1 315 1 193 1 125 1 35 1 248 1 195 3 250 1 321 4 38 3 102 1 80 1 227 2 229 1 18 1 274 1 19 1 275 1 83 1 65 1 327 1 
358 1 258 1 195 2 321 2 38 1 102 1 158 2 229 1 3 1 
258 3 9 1 121 1 201 1 2 1 158 3 315 1 193 1 125 1 113 1 248 1 195 3 321 3 250 1 102 2 38 3 162 1 65 1 83 1 
258 2 2 1 158 2 248 1 195 2 321 2 102 1 38 2 164 1 371 1 
175 1 12 1 158 1 203 1 202 1 263 1 303 1 130 1 35 1 321 1 80 1 360 1 229 1 275 1 19 1 
175 1 158 1 203 1 202 1 263 1 303 1 130 1 35 1 321 1 80 1 360 1 323 1 229 1 19 1 20 1 
120 1 143 2 11 1 178 1 262 1 31 2 131 1 264 1 164 1 227 2 274 1 18 1 253 1 26 1 371 1 135 1 241 1 56 1 327 1 
258 1 195 1 321 1 121 1 201 1 38 1 127 1 158 1 
258 4 158 5 2 1 315 1 3 1 358 1 195 5 248 1 321 5 102 2 38 4 15 1 229 1 117 1 
258 2 364 1 195 2 321 2 121 1 38 2 127 1 158 2 
60 1 40 1 
60 1 40 1 
72 1 239 1 
72 1 239 1 
72 1 239 1 
47 1 60 1 40 1 
47 1 60 1 40 1 
47 1 60 1 40 1 
357 1 60 1 40 1 
60 1 40 1 183 1 
60 2 40 2 72 1 257 1 34 1 239 1 
357 1 60 1 40 1 
357 1 60 1 40 1 
118 1 215 1 9 1 60 2 217 2 125 2 316 1 4 2 265 1 37 1 228 2 89 1 17 2 40 2 65 2 334 2 255 3 116 1 257 1 
258 2 107 1 158 2 355 1 183 1 304 1 4 1 132 1 265 1 283 1 334 1 286 1 60 1 121 1 218 1 125 1 171 1 195 2 321 2 38 2 228 1 229 1 40 1 17 1 65 1 255 1 
210 1 168 1 317 1 
168 1 122 1 317 1 
210 2 169 1 115 1 122 1 225 1 317 3 
281 1 210 1 169 1 115 1 122 1 317 2 
210 1 169 2 115 1 122 1 317 2 
259 1 300 3 235 1 87 1 159 2 355 1 22 1 131 1 73 2 332 1 25 1 211 1 282 1 165 1 309 2 92 3 137 1 286 1 213 1 95 1 9 2 11 1 147 1 245 1 125 5 170 1 293 1 13 2 33 1 294 4 171 1 65 5 
259 2 300 8 235 1 87 2 22 3 131 3 53 1 73 6 25 6 282 2 91 5 309 6 92 9 137 3 8 1 213 1 95 1 142 1 9 5 11 3 147 3 245 2 125 9 170 1 293 2 77 1 13 6 33 3 171 4 294 7 16 5 129 1 65 9 66 1 372 1 
259 1 300 3 87 1 159 1 22 1 131 1 73 2 332 1 211 1 282 1 309 2 92 4 137 1 95 1 9 3 142 1 11 1 147 2 245 1 125 3 293 1 33 1 13 2 294 2 171 1 65 3 
259 1 300 5 87 1 159 2 22 2 131 2 53 1 73 4 332 1 211 1 282 1 309 4 92 7 137 2 95 1 9 4 142 1 11 2 147 3 245 1 125 4 293 1 33 2 13 4 171 2 294 3 65 4 66 1 372 1 
306 1 157 1 130 1 
328 1 130 1 
237 1 
130 1 19 1 
306 2 320 1 297 1 360 1 130 3 19 1 
360 1 130 1 19 1 
356 1 130 1 
120 3 278 1 268 1 143 7 61 1 31 3 222 4 22 1 131 1 98 1 124 1 151 1 249 1 370 1 93 1 56 2 231 2 
120 3 278 1 268 1 143 7 61 1 31 3 222 4 22 1 131 1 98 1 124 1 151 1 249 1 370 1 93 1 56 2 231 2 
120 3 278 1 268 1 143 7 85 1 61 1 31 3 222 4 22 1 131 1 98 1 124 1 151 1 249 1 370 1 93 1 56 2 231 2 
278 2 236 4 86 1 22 4 131 4 135 1 241 1 93 1 137 3 56 5 140 1 120 10 268 2 143 31 11 3 61 5 31 15 222 16 124 1 98 2 33 3 249 1 151 2 227 2 128 1 18 1 274 1 370 1 41 1 200 1 325 1 277 1 326 3 231 3 
278 1 22 1 131 1 135 2 241 2 56 3 93 1 76 1 120 4 268 1 143 9 61 1 222 5 31 4 98 1 124 1 151 1 227 4 18 2 274 2 370 1 254 1 277 1 231 2 
46 1 301 1 233 1 1 1 175 1 68 2 203 1 202 1 303 1 181 1 329 1 49 1 210 1 55 1 90 1 363 1 144 1 168 1 190 1 313 1 122 1 219 1 314 2 194 1 317 2 225 1 35 1 344 1 345 1 104 1 
46 1 301 1 233 2 1 1 175 1 68 3 203 1 202 1 303 1 329 1 49 1 210 1 55 1 90 1 363 1 58 1 96 1 144 1 168 1 190 1 313 1 122 1 314 3 194 1 225 1 317 2 35 1 273 1 344 1 345 1 
46 1 301 1 233 2 1 1 175 1 68 2 203 1 202 1 303 1 210 1 90 1 363 1 58 1 96 1 190 1 168 1 313 1 122 1 314 2 194 1 317 2 225 1 35 1 344 1 345 1 
175 1 68 1 203 1 202 1 205 1 303 1 329 1 130 1 160 1 186 1 363 2 141 1 144 1 190 2 313 2 270 1 314 1 35 1 101 1 80 1 273 1 19 1 345 2 
1 1 175 1 68 1 203 1 202 1 303 1 329 1 49 1 210 1 55 1 90 1 363 1 96 1 144 1 168 1 190 1 313 1 122 1 219 1 314 1 317 2 225 1 35 1 344 1 345 1 104 1 
145 1 
259 1 300 2 175 1 235 1 201 1 158 1 202 1 203 2 87 1 88 1 303 2 130 1 113 1 358 1 240 1 25 2 163 1 186 1 282 1 288 1 213 1 121 1 245 1 193 1 125 3 14 1 13 2 99 1 35 2 195 1 321 1 251 1 154 1 101 1 39 1 80 2 199 1 369 1 83 1 65 3 19 1 256 1 105 2 
201 1 158 1 88 1 113 1 358 1 240 1 25 2 288 1 213 1 121 1 193 1 125 3 14 1 126 1 195 1 321 1 39 1 369 1 83 1 65 3 347 1 105 2 
201 1 158 1 88 1 113 1 358 1 25 1 240 1 288 1 213 1 95 1 9 1 121 1 193 1 125 3 14 1 195 1 319 1 321 1 39 1 369 1 83 1 65 3 347 1 105 3 
201 1 158 1 88 1 113 1 358 1 184 1 240 1 25 2 213 1 288 1 95 1 9 1 121 1 193 1 125 3 14 1 126 1 195 1 319 1 321 1 39 1 369 1 83 1 65 3 347 1 105 3 
300 1 235 1 176 1 201 1 158 1 87 1 88 1 113 1 358 1 184 2 208 1 25 3 240 1 282 1 335 1 288 1 213 1 121 1 245 1 193 1 125 3 223 1 13 1 14 1 126 2 99 1 195 1 321 1 39 1 199 1 172 1 369 1 65 3 83 1 347 1 105 2 
300 1 235 1 201 1 158 1 87 1 88 1 113 1 358 1 240 1 282 1 288 1 121 1 245 1 193 1 125 2 13 1 14 1 99 1 195 1 321 1 39 1 199 1 369 1 65 2 83 1 105 2 
300 1 235 1 176 1 201 1 158 1 87 1 88 1 113 1 358 1 240 1 282 1 335 1 288 1 121 1 245 1 193 1 125 2 13 1 14 1 99 1 195 1 321 1 39 1 199 1 172 1 369 1 83 1 65 2 105 2 
300 1 235 1 176 1 201 1 158 1 87 1 88 1 113 1 358 1 240 1 282 1 335 1 288 1 121 1 245 1 193 1 125 2 13 1 14 1 99 1 195 1 321 1 39 1 199 1 172 1 369 1 83 1 65 2 105 2 
300 1 235 1 201 1 158 1 70 1 87 1 88 1 113 1 358 1 240 1 209 1 282 1 288 1 121 1 245 1 193 1 125 2 13 1 14 1 195 1 321 1 39 1 199 1 172 1 369 1 368 1 83 1 65 2 105 2 
300 1 235 1 176 1 201 1 158 1 87 1 88 1 113 1 358 1 184 1 240 1 208 1 25 1 282 1 335 1 288 1 121 1 245 1 193 1 125 2 13 1 14 1 126 1 99 1 195 1 319 1 321 1 39 1 199 1 172 1 369 1 83 1 65 2 105 3 
300 1 235 1 176 1 201 1 158 1 87 1 88 1 113 1 358 1 184 1 240 1 208 1 25 1 282 1 335 1 288 1 121 1 245 1 193 1 125 2 13 1 14 1 126 1 99 1 195 1 319 1 321 1 39 1 199 1 172 1 369 1 83 1 65 2 105 3 
300 1 235 1 201 1 158 1 87 1 70 1 88 1 113 1 358 1 240 1 282 1 288 1 121 1 245 1 193 1 125 2 13 1 14 1 195 1 321 1 39 1 199 1 369 1 65 2 83 1 105 2 
22 1 131 1 264 1 164 1 26 1 135 1 241 1 56 2 93 1 120 2 268 1 143 6 222 3 31 3 124 1 151 1 157 1 227 2 18 1 274 1 229 2 370 1 253 1 371 1 231 1 327 1 
236 4 22 3 131 1 264 13 207 1 5 1 164 3 26 2 135 2 241 2 137 3 138 1 140 2 120 2 11 1 143 17 312 1 61 2 366 1 31 7 222 10 33 3 227 4 229 1 18 2 274 2 41 1 371 13 326 3 232 1 327 1 103 1 
258 1 143 1 290 1 158 1 222 1 315 1 195 1 321 1 102 1 38 1 82 1 164 1 227 2 274 1 18 1 26 1 135 1 241 1 232 1 103 1 327 1 
175 1 130 1 133 1 135 2 241 2 137 1 189 1 143 5 12 1 61 2 195 1 102 1 252 1 18 2 19 1 103 1 258 1 203 1 158 2 202 1 263 1 303 1 22 1 114 1 264 2 360 1 164 2 26 2 120 2 28 1 312 1 31 2 222 3 315 1 33 1 35 1 321 2 38 1 80 1 272 1 227 4 274 2 275 1 371 2 327 2 
258 1 175 2 48 1 158 1 202 2 203 8 181 1 303 7 130 3 108 1 161 1 186 1 26 2 135 2 241 2 136 1 188 1 96 1 143 2 216 1 312 1 146 1 222 1 31 1 35 8 195 1 321 1 38 1 102 1 153 2 101 1 80 2 227 4 18 2 274 2 253 1 19 2 327 2 232 1 
258 1 2 1 158 1 22 1 131 1 264 1 164 1 26 1 135 1 241 1 56 1 137 1 120 1 143 3 11 1 222 1 31 2 33 1 248 1 195 1 321 1 38 1 342 1 227 2 18 1 274 1 371 1 327 1 103 1 
120 1 143 2 61 1 222 2 22 1 33 1 264 1 79 1 164 1 227 2 274 1 18 1 253 1 26 1 371 1 135 1 241 1 327 1 
120 1 143 2 11 1 262 1 31 2 131 1 264 1 164 1 227 2 274 1 18 1 253 1 26 1 371 1 135 1 241 1 56 1 327 1 
22 1 131 1 264 2 164 2 26 1 135 1 241 1 137 1 56 1 120 2 143 4 11 1 61 1 222 2 31 2 33 1 227 2 18 1 274 1 253 1 371 2 327 1 
120 1 143 2 61 1 222 2 22 1 33 1 264 1 79 1 164 1 227 2 274 1 18 1 26 1 371 1 135 1 136 1 241 1 327 1 
120 1 143 2 11 1 262 1 31 2 131 1 264 1 164 1 227 2 274 1 18 1 26 1 371 1 135 1 136 1 241 1 56 1 327 1 
120 1 143 2 61 1 222 2 22 1 33 1 264 1 164 1 227 2 274 1 18 1 26 1 371 1 135 1 136 1 241 1 137 1 327 1 
120 1 143 2 61 1 222 2 22 1 33 1 264 1 164 1 227 2 274 1 18 1 26 1 371 1 135 1 241 1 137 1 327 1 
175 1 202 1 203 1 158 1 263 1 303 1 130 1 360 1 26 1 135 1 241 1 189 1 143 2 12 1 312 1 222 1 31 1 35 1 321 1 80 1 227 2 229 1 274 1 18 1 19 1 275 1 232 1 327 1 
175 1 202 1 203 1 158 1 263 1 303 1 130 1 360 1 26 1 135 1 241 1 143 2 312 1 222 1 31 1 35 1 321 1 80 1 323 1 227 2 229 1 274 1 18 1 19 1 20 1 232 1 299 1 327 1 
120 1 143 2 61 1 222 2 22 1 33 1 264 1 164 1 227 2 274 1 18 1 26 1 371 1 135 1 241 1 137 1 103 1 327 1 
175 1 202 1 203 1 158 1 263 1 303 1 181 1 22 1 130 1 264 1 360 1 164 1 26 1 135 1 241 1 137 1 120 1 189 1 143 2 12 1 61 1 222 2 33 1 35 1 321 1 272 1 227 2 274 1 18 1 371 1 275 1 19 1 327 1 
258 1 2 1 158 1 22 1 264 1 164 1 26 1 135 1 241 1 137 1 59 1 120 1 143 2 61 1 222 2 33 1 248 1 195 1 321 1 38 1 227 2 18 1 274 1 371 1 327 1 103 1 
236 4 22 5 305 1 109 1 131 5 331 1 361 1 135 3 241 3 93 1 212 1 56 4 137 4 140 1 75 4 76 1 120 8 268 1 143 41 11 4 61 4 243 1 29 1 221 1 31 21 222 20 124 1 246 2 33 4 196 1 100 1 151 1 152 1 341 1 227 6 18 3 274 3 370 1 41 3 276 1 277 1 231 1 326 3 
236 4 22 5 305 1 109 1 131 4 331 1 361 1 135 4 241 4 93 1 212 1 56 4 137 4 140 1 75 4 76 1 120 7 268 1 143 38 11 3 61 3 243 1 29 1 221 1 31 18 222 20 124 1 246 2 33 4 196 1 100 1 151 1 152 1 341 1 227 8 18 4 274 4 370 1 41 3 276 1 277 2 231 1 326 3 
236 4 22 8 305 1 109 1 131 8 331 1 361 1 135 2 241 2 93 1 212 1 56 7 137 7 138 2 140 2 75 4 76 1 120 14 268 1 143 52 11 7 61 7 243 1 29 1 221 1 31 25 222 27 124 1 246 1 33 7 100 1 151 1 152 1 341 1 227 4 18 2 274 2 370 1 41 2 277 1 231 1 326 4 
352 1 236 2 22 3 305 2 109 1 131 3 361 1 135 2 241 2 56 3 137 3 140 1 75 2 76 1 120 6 143 19 11 3 61 3 243 1 221 1 31 10 222 9 246 1 33 3 227 4 18 2 274 2 41 1 276 1 326 1 
236 2 22 3 305 1 131 2 109 2 331 1 361 1 135 3 241 3 212 1 56 2 137 3 75 4 120 4 76 1 143 26 11 2 61 2 243 1 29 1 31 12 221 1 222 14 246 2 33 3 100 1 152 1 341 1 227 6 18 3 274 3 41 2 277 2 326 2 
118 1 215 1 60 1 228 1 40 1 17 1 334 1 57 1 257 1 4 1 
218 1 183 1 
60 1 62 1 228 1 40 1 17 1 334 1 111 1 4 1 280 1 
118 1 215 1 9 1 60 1 217 1 125 1 316 1 4 1 265 1 37 1 228 1 17 1 40 1 65 1 334 1 255 2 116 1 257 1 
118 1 215 1 9 1 60 1 217 1 125 1 316 1 4 1 265 1 37 1 228 1 17 1 40 1 65 1 334 1 255 2 116 1 257 1 
118 1 215 1 9 1 60 1 217 1 125 1 316 1 4 1 265 1 37 1 228 1 17 1 40 1 65 1 334 1 255 2 116 1 257 1 
47 1 34 1 166 1 
47 1 34 1 166 1 
357 1 155 1 
357 1 155 1 34 1 
132 1 304 1 
258 2 107 1 158 2 355 1 183 1 304 1 238 1 4 1 132 1 283 1 334 1 286 1 60 1 121 1 217 1 218 1 125 1 294 1 171 1 195 2 321 2 37 1 38 2 228 1 229 1 40 1 17 1 65 1 255 1 
47 1 166 1 
357 1 155 1 34 1 
174 1 175 1 353 1 202 1 203 2 158 2 303 2 130 1 108 1 161 1 26 1 135 1 241 1 143 2 312 1 123 1 222 1 31 1 63 1 35 2 195 2 321 2 153 2 227 2 274 1 18 1 19 1 327 1 103 1 348 1 232 1 
175 1 96 1 168 1 190 1 354 1 202 1 203 2 122 1 292 1 303 2 181 1 49 1 32 1 225 1 317 2 35 2 210 1 90 1 344 1 
96 1 175 1 168 1 190 1 354 1 203 1 202 1 122 1 303 1 49 1 225 1 317 2 35 1 210 1 308 1 90 1 344 1 
175 1 190 1 202 1 203 1 292 1 303 1 130 1 160 1 35 1 101 1 186 1 80 1 19 1 324 1 
175 1 96 1 168 1 190 1 354 1 203 1 202 1 122 1 292 1 303 1 49 1 32 1 225 1 317 2 35 1 210 1 90 1 344 1 
244 1 
300 1 95 1 9 1 157 1 13 1 247 1 310 1 
300 1 95 1 9 2 235 1 87 1 97 1 147 1 245 1 21 1 125 1 13 1 99 1 25 1 282 1 65 1 92 1 213 1 
175 4 235 4 180 2 87 4 328 3 181 1 182 1 130 10 50 2 131 2 133 2 282 4 187 2 134 2 92 12 137 2 95 2 9 8 11 2 147 6 245 4 339 2 13 8 247 1 198 1 154 1 19 3 65 5 349 1 259 2 300 9 260 2 202 3 203 3 303 3 22 2 113 2 356 2 306 2 73 6 25 5 359 1 360 3 309 6 310 1 213 3 119 2 125 5 33 2 35 3 36 2 320 1 80 1 226 1 
259 1 300 8 235 2 236 1 87 2 22 2 131 2 331 1 73 5 25 1 282 2 187 2 134 1 309 5 7 1 92 6 137 2 213 1 95 2 9 5 11 2 147 3 29 1 245 2 125 1 13 5 33 2 100 1 78 1 152 1 154 1 341 1 65 1 41 1 326 1 
0 1 258 1 300 2 235 1 158 1 261 1 2 1 87 1 22 2 131 1 282 1 187 2 134 1 335 1 285 1 93 1 364 1 268 1 121 1 245 1 125 1 13 2 224 1 195 1 151 1 321 1 38 1 65 1 
300 1 95 1 235 1 9 1 87 1 245 1 13 1 247 1 282 1 310 1 
300 5 9 5 11 2 147 5 22 2 131 2 33 2 13 5 73 5 133 1 187 2 134 1 309 5 92 10 137 2 
95 1 9 1 25 1 65 1 125 1 213 1 
259 2 300 2 175 1 235 1 202 1 203 4 87 2 303 4 130 1 182 1 25 4 186 1 282 2 307 1 213 2 142 1 245 2 125 3 13 2 35 4 150 1 251 1 154 2 101 1 80 2 226 2 19 1 65 3 256 1 
258 2 302 1 175 1 203 1 158 3 2 2 202 1 263 1 303 1 130 1 360 1 26 1 135 1 241 1 285 1 189 1 143 1 312 1 12 1 31 1 35 1 195 2 321 3 38 2 80 1 227 2 229 1 18 1 274 1 275 1 19 1 327 1 
259 1 300 1 95 2 235 1 9 4 87 1 147 2 245 1 13 2 73 2 154 1 282 1 309 2 92 4 231 1 
228 1 191 1 334 1 
228 1 191 1 334 1 
228 1 191 1 334 1 
228 1 334 1 149 1 
132 1 228 1 334 1 
228 1 334 1 149 1 
228 1 334 1 149 1 
228 1 334 1 
60 1 40 1 
236 1 22 1 131 1 135 1 241 1 56 2 93 1 76 1 120 2 268 1 143 8 31 4 222 4 124 1 151 1 152 1 227 2 18 1 274 1 370 1 41 1 231 1 326 1 
236 2 22 2 131 1 135 2 241 2 93 1 56 2 137 1 140 1 76 1 120 3 268 1 143 11 61 1 31 5 222 6 124 1 33 1 151 1 152 1 227 4 18 2 274 2 173 1 370 1 41 1 231 1 326 1 
236 1 22 3 131 3 331 1 135 3 241 3 93 1 137 2 56 3 76 1 120 4 268 1 143 19 11 2 61 1 29 1 31 10 222 9 124 1 33 2 100 1 151 1 152 1 341 1 227 6 173 1 18 3 274 3 370 1 41 1 277 1 231 1 326 1 
236 1 22 3 131 2 331 1 135 3 241 3 93 1 137 2 56 3 76 1 120 5 268 1 143 17 11 1 61 2 29 1 31 7 222 10 124 1 33 2 100 1 151 1 152 1 341 1 227 6 173 1 18 3 274 3 370 1 41 1 277 1 231 1 326 1 
236 1 22 1 131 1 135 1 241 1 56 2 93 1 76 1 120 2 268 1 143 8 31 4 222 4 124 1 151 1 152 1 227 2 18 1 274 1 370 1 41 1 231 1 326 1 
236 1 22 2 131 2 331 1 135 1 241 1 137 2 56 1 76 1 120 2 143 12 11 2 61 1 29 1 31 6 222 6 33 2 100 1 152 1 341 1 227 2 18 1 274 1 41 1 326 1 
236 1 22 3 131 2 331 1 135 4 241 4 93 1 137 2 56 3 76 1 120 5 268 1 143 18 11 1 61 2 29 1 31 8 222 10 124 1 33 2 100 1 151 1 152 1 341 1 227 8 173 1 18 4 274 4 370 1 41 1 277 2 231 1 326 1 
236 1 22 3 131 2 331 1 135 4 241 4 137 3 56 3 76 1 120 6 143 16 11 2 61 3 29 1 31 7 222 9 33 3 100 1 152 1 341 1 227 8 18 4 274 4 41 1 276 1 277 2 326 1 
120 6 268 3 143 7 61 3 31 4 222 3 22 1 131 1 124 1 151 3 370 2 56 3 93 1 
236 1 22 3 131 2 331 1 135 4 241 4 93 1 137 2 56 3 76 1 120 4 268 1 143 18 11 1 61 1 29 1 31 8 222 10 124 1 33 2 100 1 151 1 152 1 341 1 227 8 18 4 274 4 370 1 41 1 276 1 277 2 231 1 326 1 
120 3 268 1 143 8 61 1 31 4 222 4 22 1 131 1 124 1 151 1 227 4 274 2 18 2 370 1 135 2 241 2 93 1 56 2 277 1 231 1 
120 2 268 1 143 6 31 3 222 3 22 1 124 1 131 1 151 1 157 1 370 1 56 2 93 1 231 1 
120 2 11 1 143 4 61 1 31 2 222 2 22 1 131 1 33 1 227 2 173 1 274 1 18 1 135 1 241 1 56 1 137 1 
140 1 120 2 11 1 143 7 236 2 61 1 31 4 222 3 22 1 131 1 33 1 41 1 56 1 137 1 326 1 
236 2 22 3 131 3 207 1 6 1 135 2 241 2 93 1 137 2 56 5 138 1 140 1 120 9 268 2 143 23 11 2 61 4 222 11 31 12 124 1 33 2 151 2 227 4 274 2 18 2 370 1 277 2 231 1 326 2 
143 1 236 1 31 1 
143 1 222 1 326 1 
120 3 143 6 11 1 61 1 31 3 222 3 22 1 131 1 33 1 133 1 227 2 18 1 274 1 173 1 135 1 241 1 137 1 56 2 
236 1 22 2 131 2 331 1 135 1 241 1 137 2 56 1 76 1 120 2 143 12 11 2 61 1 29 1 31 6 222 6 33 2 100 1 152 1 341 1 227 2 18 1 274 1 41 1 326 1 
120 2 268 1 143 6 61 1 222 3 31 3 22 1 131 1 151 1 93 1 56 1 
120 2 268 1 143 3 61 1 222 1 31 2 124 1 151 1 227 2 6 1 274 1 18 1 370 1 135 1 241 1 56 1 277 1 
76 1 120 5 268 2 143 10 61 2 222 5 31 5 22 2 131 2 224 1 151 2 227 2 18 1 274 1 135 1 241 1 56 3 93 1 
76 1 120 1 143 2 61 1 222 2 22 1 33 1 227 2 274 1 18 1 135 1 241 1 
120 2 76 1 11 1 143 4 61 1 31 2 222 2 22 1 131 1 33 1 227 2 274 1 18 1 135 1 241 1 56 1 137 1 
76 1 120 2 268 1 143 3 61 1 31 2 222 1 151 1 227 6 6 1 274 3 18 3 135 3 276 1 241 3 277 1 56 1 
236 4 22 5 131 5 6 1 135 5 241 5 93 2 137 3 56 7 140 1 76 1 120 12 268 3 143 34 11 3 61 5 31 18 222 16 124 1 33 3 151 3 128 1 227 10 173 1 18 5 274 5 370 1 200 1 41 1 276 1 277 2 325 1 231 1 326 3 
358 1 195 1 321 1 158 1 229 1 3 1 167 1 
158 1 338 1 3 1 54 1 358 1 195 1 298 1 321 1 229 1 84 1 167 1 373 1 
35 1 175 1 186 1 101 1 80 1 202 1 203 1 157 1 303 1 130 1 19 1 
258 1 175 1 158 2 203 1 202 1 263 1 303 1 130 1 35 1 195 1 321 2 102 1 38 1 80 1 360 1 229 1 19 1 275 1 
258 1 175 1 121 1 201 1 158 2 203 1 202 1 263 1 303 1 50 1 193 1 130 3 356 1 35 1 195 2 321 2 102 1 38 2 360 2 226 1 229 1 19 2 275 1 
258 1 175 1 201 1 202 1 203 2 158 2 263 1 303 2 130 3 50 1 356 1 360 2 121 1 220 1 193 1 35 2 195 2 321 2 38 2 102 1 226 1 229 1 19 2 20 1 
175 1 202 1 203 3 328 1 303 3 130 4 50 1 113 1 356 1 306 1 24 1 25 1 360 1 242 1 95 1 9 1 220 1 125 2 35 3 80 1 226 1 65 2 19 1 
95 1 9 1 175 1 203 3 202 1 328 1 220 1 303 3 50 1 339 1 130 4 125 2 113 1 356 1 35 3 306 1 25 1 80 1 360 1 226 1 19 1 65 2 
35 1 175 1 202 1 203 1 303 1 188 1 
214 1 96 1 175 3 10 1 216 1 48 1 203 7 202 2 146 1 181 1 303 6 130 3 35 7 161 1 320 1 153 1 80 2 322 1 360 1 19 2 188 1 
175 1 181 1 130 1 131 3 135 2 241 2 56 4 93 2 189 1 143 14 12 1 61 1 195 1 151 2 102 1 252 1 18 2 19 1 103 1 258 1 107 1 353 1 203 1 158 2 202 1 263 1 303 1 22 3 264 1 360 1 164 1 26 2 120 5 268 2 121 1 222 7 31 7 124 1 224 1 35 1 321 2 38 1 272 1 227 4 274 2 229 3 370 1 275 1 371 1 231 1 327 2 
300 1 235 2 260 1 203 1 180 1 87 2 328 1 303 1 182 1 130 2 113 1 306 1 25 2 282 2 310 1 213 1 95 1 9 1 245 2 339 1 125 3 13 1 247 1 294 1 35 1 36 1 80 1 65 3 
175 2 203 2 202 1 181 1 303 2 130 2 35 2 306 1 198 1 320 1 360 1 19 1 188 1 
175 1 203 4 202 1 220 1 303 4 181 1 130 1 35 4 101 1 186 1 80 1 19 1 362 1 
214 1 175 2 10 1 203 2 202 1 148 1 303 2 23 1 130 1 35 2 206 1 226 1 360 1 19 1 
35 1 175 1 168 1 80 1 202 1 203 1 122 1 344 1 303 1 317 1 
35 2 161 1 175 1 96 1 202 1 203 2 123 1 303 2 181 1 130 1 19 1 
175 2 216 1 203 5 202 2 146 1 303 4 181 1 130 3 35 5 161 1 186 1 101 1 80 1 226 1 19 2 362 1 
175 2 203 5 202 2 146 1 303 4 181 1 130 3 35 5 161 1 186 1 101 1 80 1 226 1 19 2 362 1 336 1 
258 1 175 1 158 2 203 1 202 1 263 1 303 1 130 1 35 1 195 1 321 2 102 1 38 1 80 1 360 1 229 1 19 1 20 1 
214 1 175 2 10 1 203 1 202 1 303 1 130 1 35 1 320 1 322 1 226 1 360 1 19 1 
174 1 195 1 296 1 321 1 291 1 158 1 333 1 63 1 348 1 
295 1 45 1 296 1 
64 1 296 1 291 1 333 1 229 1 
95 1 45 1 9 1 121 1 201 1 291 2 193 1 125 2 294 1 113 1 64 2 295 1 296 1 250 1 333 2 229 1 27 1 65 2 83 1 
46 1 301 1 157 1 194 1 
46 1 301 1 68 1 144 1 329 1 314 1 194 1 
68 1 313 1 345 1 
46 1 301 1 144 1 68 3 365 1 179 1 279 1 219 1 329 1 314 3 194 1 42 2 
46 1 301 1 233 1 69 1 68 2 144 1 329 1 314 2 194 1 
46 1 210 1 68 1 144 1 168 1 329 1 219 1 367 1 314 1 317 1 74 1 
46 1 68 1 144 1 329 1 219 1 314 1 194 1 
301 1 68 1 144 1 329 1 219 1 314 1 194 2 
67 1 46 1 234 1 144 2 68 2 219 1 329 2 314 2 52 1 194 1 
139 1 301 1 233 2 46 2 144 1 68 3 219 1 329 1 314 3 367 1 194 1 271 1 284 1 
46 1 301 1 106 1 233 1 144 1 68 2 168 1 122 1 219 1 329 1 314 2 194 1 317 2 225 1 210 1 
301 1 233 2 46 2 144 2 68 4 69 1 219 1 329 2 314 4 367 1 110 1 194 1 284 1 
46 1 301 1 68 1 144 1 329 1 219 1 314 1 194 1 
301 2 233 2 46 3 68 4 144 1 179 1 279 1 329 1 314 4 367 1 194 2 284 1 42 1 267 1 
46 1 289 1 233 1 301 1 351 1 144 1 68 2 219 1 329 1 314 2 194 1 197 1 
46 1 301 1 144 1 68 3 179 2 279 1 219 1 329 1 314 3 194 1 42 2 346 1 
46 2 330 1 287 2 311 1 
350 1 68 1 144 1 329 1 219 1 314 1 
271 1 46 1 301 1 233 1 68 2 144 1 329 1 219 1 314 2 194 1 
30 1 
46 1 301 1 68 1 144 1 329 1 219 1 314 1 194 1 
233 1 301 1 46 1 144 1 68 3 219 1 329 1 314 3 194 1 271 1 42 1 
46 1 284 1 367 1 267 1 
46 1 194 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 246 (13,294) (13,294) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 246 (13,294) (13,294) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 246 (13,294) (13,294) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 246 (13,294) (13,294) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 246 (75,356) (75,356) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (178,192,277,335) (178,192,277,335) (178,192,277,335) 52 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (178,192,277,335) (178,192,277,335) (178,192,277,335) 52 316 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (178,192,277,335) (178,192,277,335) (178,192,277,335) 52 316 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 160 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (178,192,277,335) (178,192,277,335) (148,200,344) (148,200,344) (148,200,344) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (178,192,277,335) (178,192,277,335) (148,200,344) (148,200,344) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (178,192,277,335) (178,192,277,335) (148,200,344) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (90,195) (90,195) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String; | RETURN | 4317 | return null
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
41 1 97 1 246 1 277 1 13 1 294 1 178 1 80 1 335 1 
41 1 97 1 246 1 277 1 13 1 294 1 178 1 80 1 335 1 
41 1 97 1 246 1 277 1 13 1 294 1 178 1 80 1 335 1 
41 1 97 1 246 1 277 1 13 1 294 1 178 1 80 1 335 1 
41 1 291 1 259 3 351 1 3 1 161 2 178 4 191 1 110 1 335 1 179 1 213 2 192 3 277 1 307 1 30 1 311 1 80 4 
41 1 97 1 356 1 246 1 75 1 351 1 321 1 277 1 178 1 80 1 335 1 
41 1 97 1 277 2 178 2 80 1 52 1 335 2 
41 1 97 1 192 1 122 1 277 2 316 1 178 3 80 2 52 1 335 2 
41 1 97 1 192 1 122 1 277 2 316 1 178 3 80 2 52 1 335 2 
21 1 312 1 377 1 
21 1 194 1 85 2 
16 2 207 2 168 1 78 2 169 2 190 1 243 2 300 2 
269 1 250 2 42 1 91 1 44 1 95 2 25 1 94 1 4 1 190 1 8 1 50 2 254 1 168 1 10 1 336 2 78 2 169 2 197 1 173 1 15 1 98 1 300 3 16 3 206 1 205 1 208 1 207 2 153 1 322 1 243 2 132 1 244 1 285 1 20 1 222 1 290 2 
16 1 207 1 168 1 118 1 78 1 169 1 229 1 138 1 243 1 300 1 
16 1 159 1 81 1 193 1 21 1 118 1 78 1 230 1 142 1 309 1 366 1 129 1 312 1 300 1 
16 1 81 2 21 1 207 1 118 1 142 1 366 1 129 1 243 1 169 1 78 1 230 1 309 2 312 1 300 1 
81 1 364 1 309 1 220 1 279 1 
81 2 21 1 9 1 309 2 220 1 262 1 279 1 312 1 
81 1 309 1 279 1 
16 1 81 1 207 1 118 1 243 1 345 1 168 1 169 1 78 1 229 1 220 1 309 1 138 1 300 1 
21 1 
81 2 21 1 9 1 332 1 309 2 220 1 279 1 312 1 
101 1 32 1 81 5 21 1 281 1 240 1 253 1 227 1 9 1 137 1 220 2 309 5 31 2 337 1 257 2 157 2 279 2 348 1 312 1 
190 1 377 1 
115 1 16 2 1 1 207 1 118 1 305 1 190 1 243 1 78 2 169 1 300 2 
284 1 224 1 333 1 
250 1 16 1 91 1 44 1 105 1 4 1 94 1 190 1 132 1 50 1 197 1 15 1 98 1 300 1 222 1 290 1 
16 3 141 1 207 1 78 3 169 3 190 1 243 3 300 3 
16 1 118 1 78 1 169 1 229 1 243 1 300 1 
16 1 1 1 207 1 118 1 305 1 243 1 169 1 78 1 300 1 
269 1 40 1 250 1 141 1 42 1 91 1 1 1 44 1 118 1 142 1 95 2 25 1 94 1 4 1 190 1 8 1 50 1 254 1 168 1 336 1 197 1 78 3 169 3 230 1 173 1 15 1 358 1 98 1 300 4 16 4 205 1 81 1 207 2 153 1 322 1 366 1 129 1 243 3 34 1 132 1 244 1 309 1 222 1 290 1 
159 1 16 2 141 1 78 2 169 1 5 1 190 1 243 1 300 2 
40 1 16 3 81 1 141 2 207 1 1 1 21 1 118 1 142 1 366 1 129 1 243 3 113 1 169 3 78 3 230 1 309 1 358 1 300 3 
16 2 141 1 207 1 1 1 284 1 78 2 169 2 333 1 243 2 300 2 
250 1 16 1 91 1 44 1 4 1 94 1 190 1 132 1 50 1 197 1 15 1 98 1 300 1 290 1 222 1 
250 1 16 1 91 1 44 1 4 1 94 1 190 1 132 1 134 1 266 1 50 1 15 1 300 1 290 1 222 1 
269 1 72 1 270 1 42 1 95 2 25 1 224 2 120 1 333 2 355 1 254 2 336 4 151 1 232 1 206 2 205 1 82 1 153 1 239 1 212 1 244 1 284 2 114 1 86 1 
16 1 118 1 78 1 169 1 92 1 366 1 243 1 300 1 
250 1 16 2 141 1 91 1 44 1 94 1 4 1 333 1 243 1 132 1 50 1 197 1 169 1 78 1 15 1 358 1 98 1 300 2 222 1 290 1 
159 1 16 5 141 2 1 1 207 1 5 1 190 1 243 4 150 1 169 4 78 5 371 1 358 1 300 5 
16 2 92 1 118 1 78 2 169 2 229 1 243 2 300 2 
2 1 130 1 
2 1 130 1 
100 1 96 1 
100 1 96 1 
100 1 96 1 
234 1 2 1 130 1 
234 1 2 1 130 1 
127 1 2 1 130 1 
100 1 2 2 199 1 242 1 130 2 96 1 
234 1 2 1 130 1 
2 1 39 1 130 1 
2 1 39 1 130 1 
2 1 39 1 130 1 
360 1 152 2 102 1 315 2 81 2 21 1 2 2 117 1 93 2 293 3 144 1 130 2 109 2 6 2 37 1 256 1 199 1 309 2 280 1 
185 1 152 1 127 1 16 2 81 1 2 1 43 1 117 1 93 1 293 1 353 1 306 1 128 1 190 1 243 2 130 1 109 1 6 1 369 1 78 2 169 2 11 1 309 1 300 2 
351 1 307 1 191 1 
351 1 321 1 191 1 
214 1 350 1 351 3 321 1 307 2 318 1 
214 1 350 1 351 2 321 1 307 1 231 1 
214 2 350 1 351 2 321 1 307 1 
72 1 270 1 21 2 24 1 225 1 162 1 253 2 194 1 9 1 14 1 31 1 257 1 279 1 125 2 301 2 101 3 81 5 82 1 239 1 83 1 306 1 128 1 60 1 182 2 369 1 19 1 137 1 309 5 220 4 157 1 85 3 312 1 
21 1 118 1 168 1 169 1 78 1 229 1 279 1 300 1 33 1 16 1 81 2 207 1 364 1 210 1 243 1 345 1 309 2 220 2 138 1 329 1 312 1 
72 1 270 1 21 3 118 1 24 1 162 1 253 2 194 2 168 1 78 1 169 1 229 1 14 1 31 1 257 1 125 2 300 1 301 1 101 3 16 1 81 3 207 1 82 1 83 1 240 1 239 1 243 1 60 1 182 2 345 1 369 1 220 2 309 3 157 1 138 1 312 1 85 4 
72 1 270 1 21 2 160 1 24 1 162 1 253 2 194 2 14 1 31 1 257 1 125 2 301 1 101 3 81 2 82 1 240 1 83 1 239 1 60 1 182 2 369 1 309 2 220 1 157 1 85 4 
156 1 377 1 222 1 
112 1 222 1 
349 1 
94 1 222 1 
167 1 156 2 317 1 94 1 15 1 222 3 
94 1 15 1 222 1 
172 1 222 1 
206 4 82 1 252 1 239 1 120 3 177 1 111 1 64 1 155 2 165 1 254 3 346 1 196 1 336 7 370 1 319 1 232 2 
206 4 82 1 252 1 239 1 120 3 177 1 111 1 64 1 155 2 165 1 254 3 346 1 196 1 336 7 370 1 319 1 232 2 
206 4 82 1 252 1 239 1 120 3 177 1 111 1 64 1 155 2 165 1 254 3 346 1 196 1 336 7 370 1 319 1 357 1 232 2 
72 3 270 3 42 1 273 1 252 2 251 1 95 2 25 1 120 10 334 1 47 3 165 2 254 15 196 1 336 31 14 3 319 2 201 4 232 5 233 1 205 1 206 16 362 1 82 4 239 4 177 1 111 2 64 1 244 1 155 3 65 1 215 1 346 1 370 5 
206 5 205 2 42 2 82 1 252 1 239 1 120 4 25 2 95 4 177 1 111 1 64 1 244 2 65 1 155 2 165 1 346 1 254 4 336 9 370 1 170 1 319 1 184 1 232 3 
41 1 250 1 351 2 44 1 4 1 191 1 335 1 97 1 148 1 192 1 50 1 277 1 29 1 318 1 80 1 200 1 237 1 321 1 178 2 263 1 61 1 265 1 344 1 217 1 307 1 327 1 290 1 
250 1 351 2 44 1 4 1 191 1 335 1 164 1 97 1 50 1 192 2 277 1 29 1 318 1 80 2 200 1 103 1 237 1 321 1 178 3 61 1 180 1 265 1 344 1 217 1 307 1 327 1 290 1 
250 1 103 1 237 1 351 2 321 1 44 1 4 1 178 2 61 1 191 1 164 1 97 1 192 2 50 1 217 1 307 1 29 1 327 1 318 1 200 1 80 1 290 1 
126 1 250 1 90 1 304 1 292 1 44 1 4 1 94 1 178 1 335 1 132 1 180 1 181 1 97 2 50 1 195 1 217 2 277 1 29 2 327 2 80 1 222 1 290 1 
41 1 250 1 351 2 44 1 4 1 191 1 335 1 97 1 148 1 50 1 277 1 29 1 318 1 80 1 200 1 103 1 237 1 321 1 178 1 61 1 265 1 344 1 217 1 307 1 327 1 290 1 
70 1 
331 1 250 2 44 1 142 1 94 1 4 1 296 2 297 2 253 2 49 2 146 1 7 1 50 2 193 1 194 2 9 3 257 1 300 1 338 1 101 2 260 1 16 1 304 1 108 1 341 1 68 1 309 5 157 1 312 1 313 1 222 1 159 1 21 2 23 2 118 1 24 1 26 4 78 1 230 1 124 2 31 1 279 6 126 1 81 5 367 2 366 1 129 1 132 2 136 2 84 1 137 1 373 1 247 1 85 2 290 2 
331 1 260 1 159 1 16 1 81 3 118 1 142 1 332 1 366 1 129 1 296 1 26 2 193 1 9 1 84 1 78 1 230 1 309 3 373 1 279 2 313 1 300 1 
331 1 260 1 159 1 16 1 81 3 21 1 118 1 142 1 332 1 366 1 129 1 26 3 193 1 9 1 84 1 78 1 230 1 124 1 309 3 373 1 279 1 312 1 313 1 300 1 
331 1 159 1 21 1 118 1 142 1 332 1 296 1 26 3 49 1 193 1 9 1 78 1 230 1 124 1 279 2 300 1 260 1 16 1 81 3 366 1 129 1 84 1 373 1 309 3 312 1 313 1 
331 1 142 1 332 1 296 4 48 1 253 1 297 2 49 4 7 1 193 1 194 2 9 3 257 1 300 1 101 1 260 1 16 1 341 1 267 1 69 1 309 5 310 1 157 1 312 5 313 1 73 1 159 1 21 5 118 1 23 2 26 6 78 1 230 1 124 4 31 1 279 7 81 5 366 1 367 2 129 1 136 2 84 1 373 1 137 1 
331 1 142 1 296 2 253 1 297 2 49 2 7 1 193 1 194 2 9 2 257 1 300 1 101 1 260 1 16 1 341 1 68 1 309 4 157 1 312 1 313 1 159 1 21 2 118 1 23 2 26 4 78 1 230 1 31 1 124 2 279 4 81 4 366 1 367 2 129 1 136 2 84 1 137 1 373 1 85 2 
331 1 73 1 159 1 21 1 23 2 118 1 142 1 296 2 48 1 26 4 297 2 253 1 49 2 7 1 193 1 194 2 9 2 78 1 230 1 124 2 31 1 257 1 279 4 300 1 101 1 260 1 16 1 81 4 367 2 366 1 129 1 341 1 136 2 84 1 267 1 373 1 309 4 137 1 157 1 312 1 313 1 
331 1 73 1 159 1 21 1 23 2 118 1 142 1 296 2 48 1 26 4 297 2 253 1 49 2 7 1 193 1 194 2 9 2 78 1 230 1 124 2 31 1 257 1 279 4 300 1 101 1 260 1 16 1 81 4 367 2 366 1 129 1 341 1 136 2 84 1 267 1 373 1 309 4 137 1 157 1 312 1 313 1 
314 2 331 1 159 1 21 1 118 1 142 1 296 2 48 1 26 4 253 1 49 2 7 1 193 1 9 2 78 1 230 1 124 2 31 1 257 1 279 4 300 1 101 1 260 1 16 1 320 1 81 4 367 2 366 1 59 1 129 1 63 1 264 2 136 2 84 1 373 1 309 4 137 1 157 1 312 1 85 2 313 1 
331 1 73 1 159 1 21 1 23 2 118 1 142 1 296 3 48 1 26 5 297 2 253 1 49 3 7 1 193 1 194 2 9 2 78 1 230 1 31 1 124 3 257 1 279 5 300 1 101 1 260 1 16 1 81 4 367 2 366 1 129 1 341 1 136 2 267 1 84 1 69 1 137 1 373 1 309 4 157 1 312 1 313 1 
331 1 73 1 159 1 21 1 23 2 118 1 142 1 296 3 48 1 26 5 297 2 253 1 49 3 7 1 193 1 194 2 9 2 78 1 230 1 31 1 124 3 257 1 279 5 300 1 101 1 260 1 16 1 81 4 367 2 366 1 129 1 341 1 136 2 267 1 84 1 69 1 137 1 373 1 309 4 157 1 312 1 313 1 
314 2 331 1 159 1 21 1 118 1 142 1 296 2 26 4 253 1 49 2 7 1 193 1 9 2 78 1 230 1 124 2 31 1 257 1 279 4 300 1 101 1 260 1 16 1 81 4 320 1 367 2 366 1 129 1 264 2 136 2 68 1 84 1 373 1 137 1 309 4 157 1 312 1 85 2 313 1 
269 1 42 1 252 1 95 2 25 1 120 2 224 1 333 1 190 2 355 1 254 3 336 6 232 2 205 1 206 3 82 1 153 1 239 1 177 1 111 1 244 1 64 1 155 1 346 1 284 1 377 1 
269 1 116 1 72 2 270 1 42 2 251 1 120 2 95 4 25 2 224 11 190 1 333 11 163 1 77 1 47 3 8 1 254 6 298 1 10 1 336 14 14 2 201 3 232 1 205 2 206 8 82 1 153 2 106 1 239 2 244 2 215 1 284 4 370 1 
269 1 250 1 141 1 91 1 42 1 44 1 94 1 4 1 25 1 95 2 190 1 163 1 50 1 8 1 254 1 197 1 78 1 169 1 336 2 10 1 15 1 358 1 98 1 174 1 300 2 16 2 205 1 206 1 153 1 105 1 243 1 132 1 244 1 284 1 248 1 71 1 222 1 290 1 
250 3 141 1 42 3 91 2 44 2 252 1 95 6 4 2 94 2 190 2 333 7 8 1 50 3 254 10 10 1 336 20 197 2 14 2 15 2 98 2 300 3 16 3 103 1 205 3 206 10 55 1 54 1 153 3 111 1 64 1 155 1 346 1 219 2 222 2 269 3 72 2 270 2 25 3 224 7 120 8 226 2 163 1 169 1 78 1 173 2 358 1 232 4 359 2 82 3 239 3 177 1 243 1 132 1 244 3 284 7 370 4 286 2 38 1 290 3 
269 2 0 1 250 8 141 1 42 2 44 2 275 1 4 2 95 4 25 2 94 2 46 1 355 1 50 8 8 1 254 1 78 1 169 1 10 1 336 2 51 1 300 1 126 1 16 1 103 1 205 2 206 1 304 1 208 2 153 2 323 1 263 1 243 1 342 1 132 2 244 2 135 1 222 3 290 7 
269 1 72 1 270 1 1 1 42 1 120 1 224 1 95 2 25 1 333 1 163 1 254 2 169 1 78 1 336 3 14 1 300 1 232 1 303 1 16 1 205 1 206 1 207 1 82 1 153 1 239 1 243 1 244 1 284 1 
269 1 72 1 205 1 206 2 42 1 153 1 239 1 120 1 224 1 25 1 95 2 333 1 244 1 355 1 284 1 336 2 370 1 151 1 
269 1 205 1 270 1 42 1 82 1 153 1 120 1 224 1 25 1 95 2 333 1 244 1 355 1 254 2 284 1 336 2 114 1 232 1 
269 1 72 1 270 1 42 1 95 2 25 1 224 2 120 2 333 2 355 1 254 2 336 4 14 1 232 1 206 2 205 1 82 1 153 1 239 1 244 1 284 2 370 1 
269 1 72 1 205 1 206 2 42 1 153 1 239 1 120 1 224 1 25 1 95 2 333 1 244 1 135 1 284 1 336 2 370 1 151 1 
269 1 205 1 270 1 42 1 82 1 153 1 120 1 224 1 25 1 95 2 333 1 244 1 135 1 254 2 284 1 336 2 114 1 232 1 
269 1 72 1 270 1 42 1 95 2 25 1 224 2 120 2 333 2 254 2 336 4 14 1 232 1 206 2 205 1 82 1 153 1 239 1 244 1 135 1 284 2 370 1 
269 1 72 1 270 1 205 1 206 2 42 1 82 1 153 1 239 1 120 2 224 2 25 1 95 2 333 2 244 1 254 2 284 2 336 4 370 1 14 1 232 1 
269 1 250 1 91 1 42 1 44 1 94 1 4 1 25 1 95 2 190 1 50 1 8 1 254 1 10 1 336 2 197 1 173 1 15 1 98 1 300 1 16 1 206 1 205 1 153 1 132 1 244 1 290 1 222 1 
269 1 250 1 91 1 42 1 44 1 94 1 4 1 25 1 95 2 190 1 50 1 8 1 254 1 10 1 336 2 15 1 300 1 302 1 16 1 206 1 205 1 153 1 132 1 244 1 266 1 134 1 290 1 222 1 
269 1 72 1 270 1 42 1 95 2 25 1 224 2 120 2 333 2 163 1 254 2 336 4 14 1 232 1 206 2 205 1 82 1 153 1 239 1 244 1 284 2 370 1 
269 1 72 1 250 1 270 1 91 1 42 1 44 1 120 2 224 2 4 1 94 1 25 1 95 2 333 2 50 1 254 2 336 4 197 1 14 1 173 1 15 1 98 1 300 1 232 1 16 1 206 2 205 1 82 1 153 1 239 1 263 1 244 1 284 2 370 1 286 1 290 1 222 1 
269 1 72 1 270 1 1 1 42 1 120 1 95 2 25 1 224 1 333 1 163 1 254 1 169 1 78 1 336 3 14 1 300 1 16 1 205 1 206 2 207 1 82 1 153 1 239 1 243 1 244 1 284 1 370 1 375 1 
72 3 270 3 42 2 251 1 95 4 25 2 120 6 47 1 166 1 254 10 336 19 170 1 14 3 201 2 232 3 339 1 205 2 206 9 82 3 104 1 363 1 239 3 62 1 244 2 245 2 215 1 218 2 370 3 372 1 249 1 
72 3 271 1 270 2 42 3 74 1 251 2 120 4 95 6 25 3 47 2 166 1 254 12 336 26 170 1 278 1 14 3 201 2 232 2 205 3 206 14 82 2 104 1 340 1 363 2 239 3 283 1 62 2 244 3 245 1 65 2 218 4 370 2 347 1 372 1 
72 4 139 1 271 1 270 4 74 1 42 3 252 1 251 3 95 6 25 3 120 8 47 3 166 1 254 21 336 41 170 1 278 1 14 4 201 4 232 4 339 1 205 3 206 20 82 5 104 1 340 1 363 1 239 5 177 1 283 1 111 1 62 2 64 1 244 3 245 1 155 1 65 1 215 1 346 1 218 4 347 1 370 4 372 1 
72 4 139 1 271 1 270 3 74 1 42 4 252 1 251 3 95 8 25 4 120 7 47 3 166 1 254 18 336 38 170 1 278 1 14 4 201 4 232 4 339 1 205 4 206 20 82 4 104 1 340 1 363 1 239 5 177 1 283 1 111 1 62 2 64 1 244 4 245 1 155 1 65 2 215 1 346 1 218 4 347 1 370 3 372 1 
72 7 271 1 270 7 74 1 42 2 252 1 251 2 95 4 25 2 120 14 77 2 47 4 166 1 254 25 336 52 170 1 278 1 14 7 201 4 232 7 205 2 206 27 82 8 104 1 340 1 363 1 239 8 177 1 283 1 111 1 62 1 64 1 244 2 245 1 155 1 65 1 215 2 346 1 218 4 347 1 370 7 372 1 
360 1 152 1 2 1 328 1 93 1 199 1 144 1 130 1 6 1 109 1 
127 1 11 1 
152 1 2 1 93 1 57 1 143 1 130 1 6 1 109 1 27 1 
360 1 152 1 102 1 315 1 81 1 21 1 2 1 117 1 93 1 293 2 144 1 130 1 109 1 6 1 256 1 199 1 309 1 280 1 
360 1 152 1 102 1 315 1 81 1 21 1 2 1 117 1 93 1 293 2 144 1 130 1 109 1 6 1 256 1 199 1 309 1 280 1 
360 1 152 1 102 1 315 1 81 1 21 1 2 1 117 1 93 1 293 2 144 1 130 1 109 1 6 1 256 1 199 1 309 1 280 1 
234 1 261 1 242 1 
234 1 261 1 242 1 
223 1 39 1 
223 1 242 1 39 1 
43 1 353 1 
185 1 315 1 2 1 43 1 93 1 293 1 353 1 190 1 6 1 169 2 78 2 11 1 79 1 300 2 152 1 102 1 16 2 127 1 81 1 306 1 128 1 243 2 130 1 109 1 369 1 309 1 220 1 
234 1 261 1 
223 1 242 1 39 1 
269 1 250 2 188 1 140 1 42 1 44 1 275 1 4 1 94 1 76 1 25 1 95 2 163 1 50 2 8 1 254 1 78 2 10 1 336 2 300 2 16 2 205 1 206 1 208 2 153 1 342 1 131 1 244 1 183 1 222 1 290 2 
250 2 88 1 235 1 103 1 237 1 351 2 321 1 44 1 4 1 263 1 61 1 191 1 265 1 50 2 217 1 307 1 12 1 318 1 290 2 
250 1 88 1 103 1 237 1 351 2 321 1 352 1 44 1 4 1 61 1 191 1 265 1 50 1 217 1 307 1 318 1 290 1 
250 1 89 1 126 1 304 1 44 1 4 1 94 1 132 1 181 1 50 1 217 1 12 1 222 1 290 1 
250 1 88 1 235 1 103 1 237 1 351 2 321 1 44 1 4 1 61 1 191 1 265 1 50 1 217 1 307 1 12 1 318 1 290 1 
325 1 
101 1 32 1 21 1 281 1 312 1 377 1 253 1 
101 1 81 1 21 2 23 1 341 1 253 1 297 1 194 1 9 1 309 1 137 1 31 1 257 1 157 1 279 1 312 1 85 1 
87 2 250 3 187 1 44 4 4 3 94 3 253 8 147 2 50 3 194 6 255 1 9 3 198 1 14 2 257 4 15 3 101 9 203 2 18 1 108 1 263 1 112 3 67 1 156 2 309 5 157 4 312 2 222 10 72 2 272 2 270 2 21 8 274 2 24 2 226 2 228 2 317 1 31 4 172 2 279 5 125 6 32 1 81 5 281 1 82 2 238 2 239 2 129 2 324 2 132 1 182 6 137 4 85 12 290 3 
72 2 272 1 271 1 270 2 21 5 74 1 251 1 24 1 47 1 253 5 194 3 9 1 228 2 14 2 31 2 257 2 279 1 125 5 201 1 101 8 81 1 82 2 340 1 58 1 239 2 108 1 283 1 182 5 347 1 309 1 137 2 157 2 85 6 312 2 221 1 
272 1 118 1 252 1 253 2 276 1 168 1 169 1 78 1 229 1 228 2 31 1 257 1 300 1 101 2 16 1 81 1 207 1 82 1 239 2 243 1 111 1 64 1 345 1 267 1 137 1 309 1 157 1 138 1 
32 1 101 1 281 1 21 1 253 1 137 1 31 1 257 1 157 1 312 1 
101 5 72 2 272 1 270 2 21 5 82 2 239 2 226 1 253 5 182 5 194 5 228 2 14 2 125 5 85 10 
81 1 21 1 9 1 309 1 279 1 312 1 
250 4 187 1 44 3 24 2 4 2 94 2 253 2 146 1 50 4 9 2 123 1 31 2 257 2 279 4 15 1 338 1 101 2 126 1 204 1 81 3 304 1 176 1 240 1 107 1 211 1 108 2 132 2 35 1 67 2 137 1 309 3 157 2 222 2 290 4 
269 1 250 1 42 1 91 1 44 1 95 2 25 1 4 1 94 1 190 1 8 1 50 1 254 1 168 1 336 1 78 2 169 2 197 1 173 1 15 1 98 1 300 3 16 3 205 1 207 2 322 1 153 1 243 2 132 1 244 1 290 1 222 1 
101 1 21 4 24 1 108 1 253 2 155 1 182 2 194 2 137 1 31 1 257 1 157 1 125 2 85 4 312 2 
295 1 6 1 109 1 
295 1 6 1 109 1 
360 1 186 1 43 1 6 1 109 1 
295 1 6 1 109 1 
343 1 6 1 109 1 
343 1 6 1 109 1 
343 1 6 1 109 1 
6 1 109 1 
2 1 130 1 
206 4 205 2 42 2 82 1 252 1 239 1 120 3 25 2 95 4 177 1 111 1 64 1 244 2 155 1 65 1 254 4 346 1 336 8 370 1 232 2 
206 3 82 1 252 1 239 1 120 2 177 1 111 1 64 1 155 1 254 3 346 1 336 6 377 1 232 2 
72 1 270 1 205 1 206 2 42 1 82 1 239 1 120 2 45 1 25 1 95 2 244 1 254 2 336 4 370 1 14 1 232 1 
72 1 270 1 206 3 82 1 251 1 239 1 120 2 47 1 215 1 254 4 336 7 370 1 14 1 201 2 232 1 
72 2 270 2 42 2 252 2 120 9 25 2 95 4 47 2 77 1 254 12 336 23 14 2 201 2 232 5 206 11 205 2 82 3 106 1 239 3 177 1 154 1 111 2 64 1 244 2 155 1 65 2 215 1 346 1 370 4 
254 1 336 1 201 1 
206 1 336 1 47 1 
72 1 205 1 206 3 270 1 42 1 82 1 239 1 95 2 25 1 45 1 120 3 226 1 244 1 254 3 336 6 370 1 14 1 232 2 
72 2 271 1 270 2 42 1 74 1 251 1 95 2 25 1 120 2 47 1 254 6 336 12 170 1 14 2 201 1 232 1 205 1 206 6 82 2 340 1 239 2 283 1 244 1 370 1 347 1 
206 3 82 1 252 1 239 1 120 2 111 1 64 1 254 3 336 6 370 1 232 1 
206 1 205 1 42 1 252 1 120 2 25 1 95 2 177 1 154 1 111 1 244 1 65 1 346 1 254 2 336 3 370 1 232 1 
205 1 206 5 42 1 82 2 252 2 239 2 95 2 25 1 120 5 111 2 244 1 64 1 276 1 254 5 336 10 170 1 370 2 232 3 
72 1 205 1 206 2 42 1 239 1 25 1 95 2 120 1 244 1 336 2 170 1 370 1 
72 1 270 1 205 1 206 2 42 1 82 1 239 1 120 2 25 1 95 2 244 1 254 2 336 4 170 1 370 1 14 1 232 1 
339 1 205 3 206 1 42 3 252 1 25 3 95 6 120 2 154 1 111 1 244 3 65 1 254 2 336 3 170 1 370 1 232 1 
72 3 270 3 273 1 42 5 252 3 251 1 45 1 95 10 25 5 120 12 334 1 47 3 254 18 336 34 170 1 14 3 201 4 232 7 339 1 205 5 206 16 362 1 82 5 239 5 177 1 154 1 111 3 64 2 244 5 155 1 65 2 215 1 346 1 370 5 
206 4 205 1 271 1 42 1 82 1 252 1 251 1 239 1 120 2 25 1 95 2 177 1 47 1 111 1 64 1 244 1 155 1 346 1 254 4 336 8 170 1 201 1 232 2 
72 1 271 1 42 2 252 1 251 1 95 4 25 2 45 1 120 3 47 1 254 5 336 11 170 1 14 1 201 2 232 2 205 2 206 6 82 1 239 2 177 1 111 1 64 1 244 2 155 1 215 1 346 1 370 1 
72 2 271 1 270 2 42 3 74 1 252 1 251 1 45 1 95 6 25 3 120 4 47 1 254 10 336 19 170 1 14 2 201 1 232 3 205 3 206 9 82 3 340 1 239 3 177 1 283 1 111 1 64 1 244 3 155 1 65 1 346 1 370 1 347 1 
72 2 271 1 270 1 42 3 74 1 252 1 251 1 45 1 95 6 25 3 120 5 47 1 254 7 336 17 170 1 14 2 201 1 232 3 205 3 206 10 82 2 340 1 239 3 177 1 283 1 111 1 64 1 244 3 155 1 65 1 346 1 370 2 347 1 
206 4 205 1 271 1 42 1 82 1 252 1 251 1 239 1 120 2 25 1 95 2 177 1 47 1 111 1 64 1 244 1 155 1 346 1 254 4 336 8 170 1 201 1 232 2 
72 2 271 1 270 2 42 1 74 1 251 1 95 2 25 1 120 2 47 1 254 6 336 12 170 1 14 2 201 1 232 1 205 1 206 6 82 2 340 1 239 2 283 1 244 1 370 1 347 1 
72 2 271 1 270 1 42 4 74 1 252 1 251 1 45 1 95 8 25 4 120 5 47 1 254 8 336 18 170 1 14 2 201 1 232 3 205 4 206 10 82 2 340 1 239 3 177 1 283 1 111 1 64 1 244 4 155 1 65 2 346 1 370 2 347 1 
72 3 271 1 270 2 42 4 74 1 251 1 95 8 25 4 120 6 47 1 254 7 336 16 170 1 14 3 201 1 232 3 339 1 205 4 206 9 82 2 340 1 239 3 283 1 244 4 65 2 370 3 347 1 
206 3 82 1 252 3 239 1 120 6 177 1 111 3 64 1 254 4 346 2 336 7 370 3 232 3 
72 2 271 1 270 1 42 4 74 1 252 1 251 1 95 8 25 4 120 4 47 1 254 8 336 18 170 1 14 2 201 1 232 3 339 1 205 4 206 10 82 2 340 1 239 3 177 1 283 1 111 1 64 1 244 4 155 1 65 2 346 1 370 1 347 1 
16 1 159 1 22 1 78 1 5 1 190 1 300 1 
158 1 175 1 159 1 16 1 22 1 5 1 190 1 149 1 326 1 78 1 376 1 300 1 
126 1 250 1 304 1 50 1 44 1 4 1 94 1 377 1 132 1 222 1 290 1 
250 1 16 2 141 1 91 1 44 1 94 1 4 1 190 1 243 1 132 1 50 1 169 1 78 1 197 1 15 1 300 2 222 1 290 1 
250 1 16 2 141 1 91 1 118 1 44 1 238 1 366 1 94 2 4 1 190 1 243 1 67 1 50 1 169 2 78 2 197 1 230 1 172 1 15 2 300 2 222 3 290 1 
250 2 16 2 141 1 91 1 118 1 44 1 238 1 366 1 94 2 4 1 190 1 243 1 354 1 67 1 266 1 50 2 169 2 78 2 230 1 172 1 15 2 300 2 222 3 290 2 
250 3 21 1 44 1 4 1 94 1 354 1 50 3 172 1 279 1 15 1 202 1 99 1 81 2 238 1 129 1 132 1 112 1 67 1 156 1 309 2 312 1 222 4 290 3 
87 1 250 3 81 2 21 1 44 1 238 1 94 1 4 1 129 1 354 1 132 1 112 1 67 1 50 3 156 1 172 1 309 2 279 1 15 1 312 1 290 3 222 4 
250 1 0 1 50 1 44 1 4 1 290 1 
28 1 250 1 50 1 132 1 290 1 
269 2 250 1 140 1 141 1 91 1 42 2 44 1 252 1 224 1 120 2 94 1 4 1 25 2 95 4 333 1 190 2 163 1 50 1 254 3 336 6 78 1 169 1 197 1 173 1 15 1 98 1 300 2 232 2 359 1 16 2 206 3 205 2 82 1 153 2 239 1 177 1 243 1 263 1 111 1 64 1 244 2 155 1 346 1 284 1 286 1 222 1 290 1 
87 1 250 1 187 1 21 1 274 1 253 1 147 1 50 1 9 1 31 2 257 2 279 2 101 1 32 1 203 1 81 3 281 1 129 1 132 1 112 1 156 1 137 2 309 3 220 1 157 2 312 1 290 1 222 2 
0 1 250 2 44 2 94 1 4 1 263 1 50 2 255 1 156 1 317 1 15 1 290 2 222 2 
361 1 250 4 126 1 304 1 44 1 94 1 4 1 263 1 354 1 132 1 50 4 290 4 222 1 
250 2 55 1 44 2 107 1 94 1 4 1 211 1 35 1 67 1 50 2 123 1 15 1 290 2 222 1 
250 1 50 1 237 1 351 1 321 1 44 1 4 1 191 1 132 1 290 1 
250 2 103 1 50 2 44 1 4 1 94 1 263 1 342 1 131 1 222 1 290 2 
361 1 126 1 250 5 304 1 44 2 94 2 4 2 323 1 263 1 342 1 132 1 67 1 50 5 51 1 290 4 222 3 
361 1 126 1 250 5 304 1 44 2 119 1 94 2 4 2 263 1 342 1 132 1 67 1 50 5 51 1 290 4 222 3 
250 1 16 2 141 1 91 1 44 1 94 1 4 1 190 1 243 1 132 1 266 1 50 1 169 1 78 1 15 1 300 2 222 1 290 1 
28 1 250 1 67 1 50 1 290 1 
16 1 188 1 183 1 78 1 299 1 209 1 171 1 76 1 300 1 
299 1 241 1 145 1 
209 1 299 1 171 1 268 1 190 1 
40 1 81 2 21 1 118 1 209 2 142 1 366 1 241 1 190 1 129 1 145 1 299 1 230 1 171 2 220 1 309 2 268 2 258 1 312 1 
259 1 311 1 110 1 377 1 
259 1 277 1 311 1 178 1 80 1 110 1 335 1 
97 1 327 1 80 1 
41 1 259 1 282 1 178 3 335 1 110 1 277 1 311 1 374 1 330 1 80 3 289 2 
213 1 259 1 192 1 277 1 311 1 178 2 80 2 110 1 335 1 
41 1 259 1 351 1 3 1 161 1 178 1 191 1 335 1 277 1 307 1 80 1 
41 1 259 1 277 1 178 1 80 1 110 1 335 1 
41 1 277 1 311 1 178 1 80 1 110 2 335 1 
41 1 259 1 236 1 178 2 110 1 335 2 66 1 368 1 277 2 80 2 
41 1 259 2 53 1 161 1 178 3 110 1 335 1 192 2 277 1 30 1 311 1 80 3 287 1 
41 1 259 1 321 1 351 2 178 2 191 1 110 1 335 1 192 1 277 1 307 1 308 1 318 1 311 1 80 2 
41 1 259 2 161 1 178 4 110 1 335 2 179 1 213 1 192 2 277 2 30 1 311 1 80 4 
41 1 259 1 277 1 311 1 178 1 80 1 110 1 335 1 
259 3 56 1 282 1 161 1 178 4 110 2 335 1 192 2 277 1 30 1 311 2 374 1 80 4 289 1 
41 1 259 1 365 1 178 2 110 1 335 1 121 1 192 1 277 1 122 1 311 1 80 2 
41 1 259 1 189 1 282 2 178 3 335 1 110 1 277 1 311 1 374 1 80 3 289 2 
259 2 216 2 17 1 133 1 
41 1 36 1 277 1 178 1 80 1 335 1 
41 1 259 1 192 1 277 1 311 1 178 2 287 1 80 2 110 1 335 1 
288 1 
41 1 259 1 277 1 311 1 178 1 80 1 110 1 335 1 
41 1 259 1 192 1 277 1 311 1 178 3 287 1 80 3 110 1 335 1 289 1 
259 1 56 1 30 1 161 1 
259 1 110 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 217 (162,282) (162,282) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 217 (162,282) (162,282) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 217 (162,282) (162,282) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 217 (162,282) (162,282) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 271 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint; | RETURN | 4885 | return null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
172 1 319 1 372 1 146 1 282 1 162 1 184 1 111 1 90 1 166 1 217 1 222 1 84 1 
184 1 111 1 172 1 90 1 319 1 166 1 217 1 372 1 282 1 146 1 222 1 162 1 84 1 
184 1 111 1 172 1 90 1 319 1 166 1 217 1 372 1 282 1 146 1 222 1 162 1 84 1 
184 1 111 1 172 1 90 1 319 1 166 1 217 1 372 1 282 1 146 1 222 1 162 1 84 1 
319 4 229 1 64 1 109 2 17 1 3 1 146 1 375 2 184 1 340 3 90 1 166 4 22 3 113 1 217 1 328 1 222 1 84 1 
347 1 319 2 152 1 229 1 64 1 372 1 146 1 184 1 111 1 340 1 148 1 166 2 90 1 217 1 114 1 84 1 
319 3 229 1 64 1 173 1 109 1 146 2 184 1 111 1 340 2 166 3 22 1 328 1 84 2 
97 1 146 2 3 1 184 1 340 5 166 9 214 1 217 1 222 1 84 2 290 1 319 9 229 1 64 1 322 1 109 4 173 1 17 1 375 2 111 1 90 1 22 7 113 1 328 3 
97 1 146 2 3 1 184 1 340 5 166 9 214 1 217 1 222 1 84 2 290 1 319 9 229 1 64 1 322 1 109 4 173 1 17 1 375 2 111 1 90 1 22 7 113 1 328 3 
193 1 200 1 312 1 
193 1 46 2 55 1 
224 2 192 2 320 2 276 1 127 1 363 2 202 2 356 2 
95 1 298 1 357 2 276 1 161 1 26 2 27 1 210 1 211 1 213 2 286 1 8 1 127 1 363 2 289 2 311 1 345 1 129 1 224 2 131 1 320 2 291 1 137 1 292 1 192 2 155 2 198 1 353 1 330 1 331 1 237 1 202 3 49 1 273 1 355 1 356 3 203 1 
349 1 224 1 192 1 320 1 276 1 363 1 202 1 241 1 250 1 356 1 
224 1 158 1 251 1 153 1 42 1 193 1 194 1 305 1 200 1 202 1 168 1 116 1 356 1 250 1 
158 1 276 1 241 1 305 2 363 2 168 1 223 1 224 2 153 1 320 2 42 1 192 2 349 1 193 1 200 1 202 2 116 2 250 2 356 2 
305 1 132 1 256 1 128 1 116 1 
193 1 305 2 180 1 132 1 200 1 128 1 116 2 92 1 
305 1 132 1 116 1 
224 1 276 1 320 1 241 1 349 1 192 1 305 1 363 1 128 1 202 1 116 1 250 1 223 1 356 1 
193 1 
193 1 305 2 132 1 200 1 128 1 4 1 116 2 92 1 
85 1 370 2 132 2 321 2 303 1 231 1 41 1 193 1 305 5 296 1 30 2 112 1 199 1 200 1 343 1 344 1 128 2 116 5 92 1 
127 1 312 1 
224 2 320 1 337 1 163 1 192 1 127 2 363 1 202 2 356 2 
271 1 33 1 208 1 
266 1 127 1 120 1 250 1 
224 1 357 1 161 1 137 1 292 1 27 1 122 1 192 1 154 1 155 1 213 1 8 1 363 1 330 1 237 1 202 2 33 1 273 1 356 2 203 1 
224 5 320 1 302 1 337 1 122 2 192 4 194 1 154 1 339 1 125 1 127 1 363 4 202 5 356 5 
349 1 224 2 192 2 363 2 202 2 250 1 356 2 313 1 
224 3 192 3 320 1 127 1 363 3 202 3 356 3 122 1 
349 1 224 1 192 1 363 1 202 1 250 1 356 1 
224 1 192 1 320 1 363 1 202 1 250 1 356 1 337 1 163 1 
95 1 158 1 357 1 276 1 161 1 26 1 337 1 27 1 122 1 123 1 210 1 305 1 213 1 8 1 127 1 363 3 289 2 311 1 168 1 345 1 224 3 131 1 320 2 153 1 291 1 137 1 42 1 292 1 88 1 192 3 154 1 155 1 198 1 330 1 331 1 237 1 202 4 49 1 273 1 355 1 116 1 356 4 250 1 203 1 
224 2 192 1 194 1 302 1 127 1 363 1 202 2 356 2 122 1 
224 3 158 1 320 1 153 1 247 1 337 1 42 1 122 2 192 3 88 1 193 1 154 1 305 1 363 3 202 3 116 1 168 1 250 1 356 3 
224 2 192 2 320 1 271 1 363 2 202 2 33 1 356 2 337 1 122 1 
357 1 161 1 137 1 27 1 292 1 155 1 213 1 8 1 127 1 330 1 202 1 237 1 273 1 356 1 203 1 
357 1 240 1 280 1 161 1 137 1 27 1 292 1 155 1 213 1 127 1 330 1 202 1 237 1 356 1 203 1 
246 1 131 1 291 1 1 1 135 1 208 1 249 1 376 1 26 2 210 1 327 1 271 1 198 1 100 1 289 2 331 2 33 1 49 1 355 1 
224 1 192 1 158 1 363 1 202 1 250 1 356 1 313 1 
115 1 170 1 
115 1 170 1 
61 1 169 1 
61 1 169 1 
61 1 169 1 
79 1 115 1 170 1 
79 1 115 1 170 1 
362 1 115 1 170 1 
314 1 52 1 61 1 115 2 169 1 170 2 
79 1 115 1 170 1 
281 1 115 1 170 1 
281 1 115 1 170 1 
281 1 115 1 170 1 
73 1 255 1 305 1 362 1 308 1 127 1 9 1 363 2 170 1 224 2 35 1 15 1 133 1 86 1 371 1 108 1 110 1 192 2 91 1 157 1 202 2 115 1 116 1 356 2 
314 1 35 2 14 1 160 1 15 2 186 1 73 2 108 2 189 1 324 1 76 2 193 1 305 2 44 1 91 1 9 3 115 2 116 2 170 2 
90 1 217 1 222 1 
347 1 90 1 217 1 
347 1 90 3 300 1 373 1 329 1 222 2 
149 1 347 1 90 2 373 1 329 1 222 1 
347 1 90 2 329 1 373 2 222 1 
205 1 71 1 143 2 303 1 74 2 55 1 209 1 305 5 30 1 81 2 262 1 128 4 85 2 104 1 370 1 132 1 321 1 133 1 86 1 376 1 270 1 193 2 327 1 67 1 46 3 157 1 200 1 199 3 25 1 116 5 69 1 92 1 
205 2 71 3 143 6 303 1 256 5 338 1 55 3 305 9 30 2 81 6 10 1 128 7 83 1 85 6 104 3 36 5 317 1 132 6 370 2 228 1 133 4 321 2 41 1 376 3 377 1 270 1 193 5 327 3 67 2 46 9 200 1 199 8 116 9 69 3 92 1 
205 1 71 1 143 2 74 1 55 2 209 1 305 3 30 1 81 2 128 2 104 1 85 2 370 1 321 1 133 1 376 1 41 1 193 3 327 1 67 1 46 4 200 1 199 3 25 1 116 3 69 1 
205 1 71 2 143 4 74 2 338 1 55 3 209 1 305 4 30 1 81 4 128 3 104 2 85 4 370 1 228 1 321 1 133 2 376 2 41 1 377 1 193 4 327 2 67 1 46 7 200 1 199 5 25 1 116 4 69 2 
171 1 292 1 312 1 
68 1 292 1 
351 1 
237 1 292 1 27 1 
201 1 292 1 
292 1 27 1 
171 2 62 1 268 1 237 1 292 3 27 1 
333 1 275 1 318 2 13 1 267 1 145 1 135 2 374 1 26 7 139 1 327 1 29 1 286 4 306 1 100 3 331 3 69 1 
333 1 275 1 318 2 13 1 267 1 145 1 135 2 374 1 26 7 139 1 327 1 29 1 286 4 306 1 100 3 331 3 69 1 
333 1 275 1 318 2 13 1 267 1 145 1 135 2 374 1 26 7 139 1 327 1 29 1 286 4 306 1 100 3 331 3 178 1 69 1 
333 2 275 2 252 3 71 2 145 2 26 27 210 2 29 1 306 1 59 1 286 14 100 7 60 1 289 4 245 1 104 2 318 3 131 2 13 3 267 1 374 1 135 4 376 2 40 2 139 2 326 1 327 3 198 2 24 1 331 13 272 1 49 2 141 3 69 3 
333 1 275 1 318 2 13 1 131 2 267 1 145 1 135 3 40 1 26 9 139 1 210 2 327 1 29 1 306 1 286 5 126 1 198 2 100 4 289 4 331 4 263 1 49 2 69 1 
357 1 300 1 161 1 183 1 146 1 258 1 184 1 340 1 166 2 242 1 213 1 217 1 11 1 222 1 84 1 347 1 319 2 107 1 16 1 229 1 64 1 136 1 378 1 111 1 90 2 22 1 155 1 23 1 140 1 330 1 
357 1 300 1 161 1 146 1 258 1 340 1 259 1 166 3 242 1 213 1 217 1 11 1 222 1 84 1 347 1 319 3 107 1 16 1 229 1 64 1 378 1 43 1 111 1 195 1 90 2 155 1 22 2 23 1 140 1 330 1 
357 1 300 1 161 1 258 1 340 1 166 2 213 1 217 1 11 1 222 1 347 1 319 2 107 1 16 1 229 1 64 1 378 1 111 1 43 1 195 1 90 2 155 1 22 2 140 1 330 1 
357 1 161 1 119 1 146 1 27 1 259 1 166 1 213 1 84 1 151 1 319 1 16 2 107 2 248 1 137 1 190 1 19 1 292 1 89 1 111 2 155 1 140 2 330 1 
347 1 319 1 357 1 300 1 16 1 107 1 161 1 183 1 146 1 258 1 378 1 184 1 111 1 43 1 90 2 242 1 166 1 155 1 213 1 23 1 217 1 140 1 330 1 11 1 222 1 84 1 
196 1 
55 2 99 1 102 1 153 1 248 1 18 2 293 1 292 1 193 2 194 1 155 2 200 1 156 2 199 2 202 1 116 5 356 1 250 1 205 1 204 1 158 1 251 1 357 2 303 1 161 1 75 2 359 2 27 1 165 2 78 1 305 5 213 2 30 1 309 1 218 1 168 1 85 2 224 1 369 2 225 1 132 6 370 1 321 1 37 4 230 1 137 2 42 1 325 1 89 1 269 1 45 2 46 2 235 1 330 1 92 3 
204 1 224 1 158 1 251 1 132 2 153 1 37 2 4 1 75 1 42 1 78 1 194 1 305 3 99 1 309 1 235 1 202 1 168 1 116 3 92 1 250 1 356 1 
204 1 158 1 251 1 4 1 78 1 305 3 99 1 309 1 168 1 224 1 369 1 132 1 153 1 37 3 42 1 194 1 193 1 235 1 200 1 202 1 116 3 356 1 250 1 92 1 
204 1 158 1 251 1 4 1 359 1 75 1 78 1 305 3 99 1 309 1 168 1 224 1 369 1 153 1 132 2 37 3 42 1 194 1 193 1 235 1 200 1 202 1 116 3 92 1 356 1 250 1 
4 1 55 2 99 1 185 1 153 1 18 2 194 1 193 5 350 1 200 5 199 1 156 2 202 1 116 5 250 1 356 1 204 1 158 1 251 1 301 1 303 1 75 4 359 4 78 1 165 2 305 5 30 1 309 1 264 1 168 1 224 1 85 1 369 4 225 1 132 7 370 1 321 1 37 6 42 1 325 1 45 2 235 1 332 1 92 3 
204 1 158 1 251 1 303 1 75 2 359 2 55 2 165 2 78 1 305 4 99 1 30 1 309 1 168 1 85 1 224 1 369 2 225 1 132 4 370 1 153 1 321 1 37 4 230 1 18 2 42 1 325 1 193 2 194 1 45 2 46 2 200 1 156 2 199 1 235 1 202 1 116 4 92 2 356 1 250 1 
204 1 158 1 251 1 303 1 75 2 359 2 55 2 165 2 78 1 305 4 99 1 30 1 309 1 264 1 168 1 85 1 224 1 185 1 369 2 225 1 132 4 370 1 153 1 321 1 37 4 18 2 42 1 325 1 193 1 194 1 45 2 200 1 156 2 199 1 235 1 332 1 202 1 116 4 92 2 356 1 250 1 
204 1 158 1 251 1 303 1 75 2 359 2 55 2 165 2 78 1 305 4 99 1 30 1 309 1 264 1 168 1 85 1 224 1 185 1 369 2 225 1 132 4 370 1 153 1 321 1 37 4 18 2 42 1 325 1 193 1 194 1 45 2 200 1 156 2 199 1 235 1 332 1 202 1 116 4 92 2 356 1 250 1 
204 1 158 1 251 1 117 1 118 2 303 1 75 2 359 2 165 2 78 1 360 1 305 4 99 1 30 1 309 1 287 1 168 1 85 1 224 1 369 2 225 1 132 4 370 1 153 1 321 1 37 4 232 2 18 2 42 1 193 1 194 1 46 2 200 1 199 1 235 1 332 1 202 1 116 4 92 2 356 1 250 1 
204 1 158 1 251 1 301 1 303 1 359 3 75 3 55 2 165 2 78 1 305 4 99 1 30 1 309 1 264 1 168 1 85 1 185 1 224 1 369 3 225 1 370 1 153 1 132 5 321 1 37 5 18 2 42 1 325 1 193 1 194 1 45 2 200 1 156 2 199 1 235 1 332 1 202 1 116 4 92 2 356 1 250 1 
204 1 158 1 251 1 301 1 303 1 359 3 75 3 55 2 165 2 78 1 305 4 99 1 30 1 309 1 264 1 168 1 85 1 185 1 224 1 369 3 225 1 370 1 153 1 132 5 321 1 37 5 18 2 42 1 325 1 193 1 194 1 45 2 200 1 156 2 199 1 235 1 332 1 202 1 116 4 92 2 356 1 250 1 
204 1 158 1 251 1 118 2 303 1 75 2 359 2 165 2 78 1 360 1 305 4 99 1 30 1 309 1 168 1 85 1 224 1 369 2 225 1 132 4 370 1 153 1 321 1 37 4 230 1 232 2 18 2 42 1 193 1 194 1 46 2 200 1 199 1 235 1 202 1 116 4 92 2 356 1 250 1 
275 1 208 1 26 6 210 1 306 1 29 1 286 3 100 2 127 2 289 2 33 1 312 1 246 1 318 1 131 1 267 1 291 1 135 2 139 1 327 1 271 1 198 1 331 3 49 1 355 1 69 1 
298 1 252 3 277 1 71 2 72 1 53 1 208 10 26 12 210 2 58 1 260 1 286 8 127 1 100 2 289 4 311 1 33 10 104 2 131 2 13 2 227 1 291 2 198 2 271 3 24 1 331 4 49 2 141 3 355 1 69 2 
298 1 53 1 120 1 26 2 122 1 210 1 212 1 286 1 31 1 127 1 363 1 289 2 311 1 224 1 131 1 291 1 348 1 192 1 154 1 271 1 198 1 202 1 331 1 49 1 355 1 356 1 
95 1 53 1 284 1 56 1 8 1 286 3 100 3 289 4 104 1 13 2 291 2 292 1 192 1 294 1 154 1 155 1 198 2 202 2 355 2 356 2 69 1 203 1 357 1 71 1 161 1 208 2 26 5 122 1 27 1 210 2 213 1 363 1 311 1 33 2 224 1 131 2 135 1 137 1 176 1 271 2 330 1 177 1 331 2 237 1 49 2 273 1 
298 1 357 7 254 1 161 2 121 1 54 1 26 2 122 1 27 2 210 2 6 1 213 8 7 1 215 1 286 1 363 1 289 4 311 1 224 1 129 2 246 1 131 2 226 1 291 2 248 1 136 1 137 2 292 3 192 1 89 1 43 1 155 8 198 2 330 2 202 1 331 1 49 2 355 2 356 1 
71 1 144 1 53 1 208 1 337 1 26 3 210 1 286 1 100 1 363 1 289 2 33 1 224 1 104 1 131 1 320 1 291 1 135 1 376 1 192 1 327 1 271 1 198 1 202 1 331 2 49 1 355 1 356 1 69 1 
104 1 246 1 13 1 131 1 291 1 208 1 26 2 174 1 210 1 286 2 271 1 198 1 100 1 289 2 33 1 49 1 355 1 69 1 
246 1 131 1 291 1 135 1 208 1 249 1 376 1 26 2 210 1 327 1 271 1 198 1 100 1 289 2 331 2 33 1 49 1 355 1 
71 1 208 2 26 4 210 1 286 2 100 2 289 2 33 2 104 1 246 1 131 1 13 1 291 1 135 1 376 1 327 1 198 1 271 2 331 2 49 1 355 1 69 1 
104 1 13 1 131 1 291 1 208 1 26 2 174 1 210 1 215 1 286 2 271 1 198 1 100 1 289 2 33 1 49 1 355 1 69 1 
131 1 291 1 135 1 208 1 249 1 376 1 26 2 210 1 327 1 215 1 271 1 198 1 100 1 289 2 331 2 33 1 49 1 355 1 
104 1 13 1 131 1 291 1 71 1 208 1 26 2 210 1 215 1 286 2 271 1 198 1 100 1 289 2 33 1 49 1 355 1 69 1 
104 1 13 1 131 1 291 1 71 1 208 1 26 2 210 1 286 2 271 1 198 1 100 1 289 2 33 1 49 1 355 1 69 1 
95 1 298 1 357 1 161 1 26 2 27 1 210 1 213 1 286 1 8 1 127 1 289 2 311 1 131 1 291 1 137 1 292 1 155 1 198 1 330 1 237 1 202 1 331 1 273 1 49 1 355 1 356 1 203 1 
298 1 357 1 240 1 161 1 280 1 26 2 27 1 210 1 213 1 286 1 127 1 289 2 311 1 221 1 131 1 291 1 137 1 292 1 155 1 198 1 330 1 237 1 202 1 331 1 49 1 355 1 356 1 203 1 
104 1 13 1 131 1 291 1 71 1 53 1 208 1 26 2 210 1 286 2 271 1 198 1 100 1 289 2 33 1 49 1 355 1 69 1 
95 1 357 1 71 1 161 1 208 1 26 2 284 1 27 1 210 1 213 1 286 2 8 1 100 1 289 2 33 1 104 1 13 1 131 1 291 1 136 1 292 1 155 1 271 1 198 1 330 1 237 1 202 1 273 1 49 1 355 1 69 1 356 1 203 1 
71 1 53 1 208 1 337 1 26 2 210 1 286 2 100 1 363 1 289 2 33 1 224 1 104 1 316 1 13 1 131 1 320 1 291 1 192 1 198 1 271 1 202 1 49 1 355 1 356 1 69 1 
275 1 335 1 285 1 342 2 286 20 100 9 289 8 346 1 104 4 13 5 63 1 20 1 198 4 24 2 69 5 252 2 71 4 70 1 26 37 164 1 210 4 124 1 216 1 307 4 80 1 306 1 29 1 263 1 366 1 318 1 131 4 267 1 135 4 376 3 40 2 139 1 327 4 47 1 331 17 49 4 141 2 93 1 
252 2 70 1 71 3 335 1 26 26 164 2 124 2 210 3 285 1 342 1 307 4 80 1 286 14 216 1 100 4 289 6 263 1 346 1 104 3 63 1 13 2 131 3 135 2 40 2 376 2 20 1 327 2 198 3 24 2 331 12 49 3 141 2 93 1 69 3 
275 2 252 3 70 1 71 3 335 1 26 44 164 1 124 2 210 4 285 1 342 1 29 2 306 2 80 1 286 23 307 4 216 1 100 9 289 8 263 1 346 1 104 3 318 2 63 1 13 5 131 4 267 2 135 4 40 2 376 3 65 1 20 1 139 2 327 5 47 1 198 4 24 3 331 21 49 4 141 3 93 1 69 5 
275 2 252 3 70 1 71 3 335 1 26 40 164 1 124 2 210 4 285 1 342 1 29 2 306 2 80 1 286 22 307 4 216 1 100 8 289 8 263 1 346 1 104 3 318 2 63 1 13 4 131 4 267 2 135 4 40 2 376 2 65 1 20 1 139 2 327 4 47 1 198 4 24 3 331 18 49 4 141 3 93 1 69 5 
275 1 252 2 70 1 71 3 335 1 26 32 164 1 124 1 210 2 285 1 342 1 29 1 306 1 80 1 286 17 307 4 216 1 100 6 289 4 263 1 346 1 104 3 318 1 63 1 13 3 131 2 267 1 135 3 40 1 376 3 20 1 139 1 327 4 198 2 24 2 331 15 49 2 141 2 93 1 69 4 
314 1 35 1 44 1 15 1 73 1 108 1 189 1 365 1 115 1 170 1 
362 1 110 1 
130 1 35 1 361 1 15 1 73 1 310 1 108 1 115 1 170 1 
79 1 179 1 
52 1 281 1 51 1 
314 1 35 1 14 1 160 1 15 1 73 1 108 1 189 1 324 1 76 1 193 1 305 1 44 1 91 1 9 2 115 1 116 1 170 1 
314 1 35 1 14 1 160 1 15 1 73 1 108 1 189 1 324 1 76 1 193 1 305 1 44 1 91 1 9 2 115 1 116 1 170 1 
314 1 35 1 14 1 160 1 15 1 73 1 108 1 189 1 324 1 76 1 193 1 305 1 44 1 91 1 9 2 115 1 116 1 170 1 
52 1 79 1 179 1 
52 1 79 1 179 1 
281 1 51 1 
52 1 281 1 51 1 
308 1 255 1 
73 1 255 1 76 1 305 1 362 1 308 1 127 1 9 1 363 2 128 1 170 1 224 2 35 1 15 1 133 1 86 1 371 1 108 1 110 1 134 1 324 1 192 2 157 1 202 2 115 1 116 1 356 2 
298 1 357 2 161 1 2 1 53 1 54 1 26 2 27 1 210 1 6 1 213 2 286 1 82 1 289 2 311 1 224 2 129 2 150 1 315 1 131 1 291 1 323 1 292 1 155 2 198 1 330 1 202 2 331 1 49 1 355 1 356 2 
347 1 357 2 334 1 300 1 107 1 161 1 188 1 136 1 378 1 43 1 90 2 242 1 155 2 213 2 217 1 330 1 11 1 222 1 50 1 
347 1 357 1 300 1 107 1 207 1 161 1 188 1 378 1 43 1 90 2 242 1 155 1 213 1 217 1 11 1 330 1 222 1 
357 1 334 1 107 1 161 1 248 1 137 1 19 1 191 1 292 1 27 1 89 1 155 1 213 1 330 1 
347 1 357 1 334 1 300 1 107 1 161 1 188 1 378 1 43 1 90 2 242 1 155 1 213 1 217 1 11 1 330 1 222 1 50 1 
101 1 
85 1 193 1 296 1 199 1 200 1 344 1 312 1 
85 1 132 1 370 1 321 1 303 1 325 1 55 1 193 2 305 1 30 1 45 1 46 1 200 1 199 1 156 1 116 1 92 1 
239 2 143 6 283 2 336 2 5 2 55 6 344 1 288 2 104 2 62 1 153 2 293 1 292 10 66 2 21 1 193 8 155 3 296 1 68 3 200 2 199 9 201 2 116 5 69 2 205 2 357 3 206 1 71 2 161 4 303 4 358 1 27 3 305 5 213 3 30 4 81 6 85 8 367 2 171 2 370 4 132 5 321 4 38 1 136 1 137 1 39 2 376 2 234 1 327 2 46 12 330 3 177 2 237 3 92 3 
205 1 239 2 252 1 70 1 71 2 143 5 303 2 5 1 55 3 305 1 285 1 216 1 30 2 81 5 346 1 85 5 104 2 132 1 370 2 321 2 87 1 376 2 293 1 193 5 327 2 46 6 199 8 200 2 24 1 236 1 116 1 141 1 92 1 93 1 69 2 
239 2 275 1 276 1 303 1 241 1 5 1 257 1 305 1 30 1 29 1 363 1 223 1 185 1 85 2 224 1 370 1 320 1 321 1 349 1 192 1 139 1 327 1 199 2 202 1 116 1 250 1 356 1 69 2 
85 1 370 1 321 1 303 1 193 1 30 1 296 1 200 1 199 1 344 1 
104 2 85 5 239 2 71 2 143 5 376 2 5 1 55 5 193 5 327 2 81 5 46 10 199 5 177 1 69 2 
193 1 305 1 132 1 200 1 116 1 92 1 
205 2 357 4 161 1 303 1 27 1 77 1 305 3 213 4 30 2 102 1 85 2 370 2 132 4 321 2 248 1 38 2 41 1 137 2 292 1 293 2 269 1 21 1 89 1 175 1 155 4 199 2 330 1 116 3 92 2 
95 1 357 1 276 1 161 1 26 1 27 1 210 1 213 1 8 1 127 1 363 2 289 2 311 1 345 1 224 2 131 1 320 2 291 1 137 1 292 1 192 2 155 1 198 1 330 1 331 1 202 3 237 1 49 1 273 1 355 1 356 3 203 1 
85 2 205 1 318 1 370 1 321 1 143 2 303 1 55 2 293 1 193 4 30 1 81 2 46 4 199 1 200 2 
15 1 379 1 108 1 
15 1 379 1 108 1 
44 1 308 1 15 1 108 1 98 1 
15 1 379 1 108 1 
341 1 15 1 108 1 
341 1 15 1 108 1 
341 1 15 1 108 1 
15 1 108 1 
115 1 170 1 
318 1 275 1 13 1 131 2 267 1 135 2 40 1 26 8 210 2 139 1 327 1 29 1 286 4 306 1 198 2 100 3 289 4 331 4 49 2 69 1 
318 1 275 1 267 1 135 2 26 6 139 1 327 1 306 1 29 1 286 3 100 2 331 3 69 1 312 1 
104 1 131 1 13 1 71 1 135 1 376 1 26 4 210 1 327 1 286 2 198 1 100 2 289 2 331 2 49 1 274 1 69 1 
252 1 286 1 24 1 331 1 141 1 26 2 
275 2 252 2 277 1 71 2 72 1 26 23 210 2 29 1 306 1 286 11 59 1 100 9 289 4 104 2 318 1 13 4 131 2 267 1 227 1 135 5 376 2 40 2 139 2 327 3 198 2 331 12 49 2 141 2 69 3 
331 1 141 1 26 1 
252 1 286 1 26 1 
104 1 131 1 13 1 71 1 135 2 376 1 26 6 210 1 327 1 286 3 198 1 100 3 289 2 177 1 331 3 49 1 274 1 69 1 
252 1 71 2 70 1 26 12 210 1 285 1 216 1 286 6 100 2 289 2 263 1 346 1 104 2 13 1 131 1 135 1 376 2 327 2 198 1 24 1 331 6 49 1 141 1 93 1 69 2 
275 1 13 1 135 1 26 6 139 1 327 1 29 1 286 3 100 2 331 3 69 1 
275 1 13 1 131 1 267 1 135 1 40 1 26 3 139 1 210 1 286 1 59 1 306 1 198 1 100 2 289 2 331 2 49 1 
275 2 13 3 135 3 257 1 26 12 139 2 327 2 286 6 29 1 100 6 331 6 69 2 
104 1 131 1 13 1 26 2 210 1 286 2 198 1 100 1 289 2 263 1 49 1 69 1 
104 1 131 1 13 1 71 1 135 1 376 1 26 4 210 1 327 1 286 2 198 1 100 2 289 2 331 2 263 1 49 1 69 1 
275 1 131 3 13 1 135 1 40 1 26 3 210 3 139 1 59 1 286 1 47 1 198 3 100 2 289 6 331 2 263 1 49 3 
275 3 252 3 71 2 26 31 210 5 29 2 306 1 59 1 286 15 100 9 60 1 289 10 263 1 104 2 245 1 318 1 131 5 13 4 267 1 135 5 40 2 376 2 139 3 326 1 327 4 47 1 198 5 24 1 331 16 49 5 141 3 274 1 69 4 
252 1 275 1 26 8 210 1 216 1 286 4 306 1 29 1 100 2 289 2 263 1 318 1 131 1 267 1 135 2 139 1 327 1 198 1 24 1 331 4 49 1 141 1 69 1 
275 1 252 1 70 1 71 2 26 17 210 3 285 1 29 1 306 1 216 1 286 10 100 4 289 6 263 1 346 1 104 2 318 1 13 1 131 3 267 1 135 3 40 1 376 1 139 1 327 2 198 3 24 1 331 7 49 3 141 1 274 1 93 1 69 3 
275 1 252 1 70 1 71 2 26 19 210 3 285 1 29 1 306 1 216 1 286 9 100 4 289 6 263 1 346 1 104 2 318 1 13 1 131 3 267 1 135 3 376 2 40 1 139 1 327 3 198 3 24 1 331 10 49 3 141 1 274 1 93 1 69 3 
275 1 252 1 71 2 70 1 26 17 210 3 285 1 29 1 306 1 216 1 286 10 100 5 289 6 263 1 346 1 104 2 318 1 13 2 131 3 267 1 135 3 40 1 376 1 139 1 327 2 198 3 24 1 331 7 49 3 141 1 274 1 93 1 69 3 
252 1 275 1 26 8 210 1 216 1 286 4 306 1 29 1 100 2 289 2 263 1 318 1 131 1 267 1 135 2 139 1 327 1 198 1 24 1 331 4 49 1 141 1 69 1 
252 1 71 2 70 1 26 12 210 1 285 1 216 1 286 6 100 2 289 2 263 1 346 1 104 2 13 1 131 1 135 1 376 2 327 2 198 1 24 1 331 6 49 1 141 1 93 1 69 2 
275 1 252 1 70 1 71 2 26 18 210 4 285 1 29 1 306 1 216 1 286 10 100 5 289 8 263 1 346 1 104 2 318 1 13 2 131 4 267 1 135 3 376 1 40 2 139 1 327 2 198 4 24 1 331 8 49 4 141 1 274 1 93 1 69 3 
252 1 70 1 71 3 26 16 210 4 285 1 216 1 286 9 100 6 289 8 263 1 346 1 104 3 13 3 131 4 135 3 376 2 40 2 327 2 198 4 47 1 24 1 331 7 49 4 141 1 93 1 69 3 
275 3 13 3 267 2 135 3 26 7 139 3 327 1 306 1 29 1 286 3 100 6 331 4 69 1 
275 1 252 1 70 1 71 2 26 18 210 4 285 1 29 1 306 1 216 1 286 10 100 4 289 8 263 1 346 1 104 2 318 1 13 1 131 4 267 1 135 3 376 1 40 2 139 1 327 2 198 4 47 1 24 1 331 8 49 4 141 1 93 1 69 3 
224 1 304 1 194 1 302 1 127 1 202 1 356 1 
224 1 304 1 194 1 142 1 105 1 106 1 197 1 302 1 127 1 202 1 297 1 356 1 
89 1 357 1 213 1 155 1 161 1 248 1 330 1 137 1 292 1 27 1 312 1 
224 1 357 1 161 1 137 1 292 1 27 1 122 1 192 1 155 1 213 1 8 1 127 1 363 1 330 1 237 1 202 2 356 2 203 1 
224 2 158 1 357 1 161 1 38 1 66 1 292 3 27 2 122 1 192 2 155 1 213 1 8 1 127 1 363 1 201 1 330 1 237 2 202 2 168 1 250 1 356 2 203 1 
158 1 357 2 240 1 161 1 122 1 27 2 213 2 127 1 363 1 219 1 168 1 224 2 38 1 292 3 66 1 192 2 155 2 330 1 201 1 202 2 237 2 356 2 250 1 203 1 
159 1 357 3 253 1 161 1 27 1 305 2 213 3 219 1 171 1 132 1 153 1 38 1 137 1 292 4 66 1 193 1 155 3 68 1 200 1 330 1 201 1 237 1 116 2 
171 1 357 3 153 1 132 1 161 1 38 1 137 1 39 1 27 1 66 1 292 4 193 1 305 2 155 3 213 3 68 1 200 1 201 1 330 1 237 1 219 1 116 2 
357 1 213 1 155 1 7 1 161 1 330 1 
129 1 94 1 62 1 357 6 226 1 254 1 161 3 136 1 147 1 137 2 121 1 27 2 292 3 138 1 43 1 6 1 155 7 213 7 7 1 330 2 237 1 
95 1 275 1 53 1 284 1 8 1 286 3 100 2 289 4 150 1 291 2 292 1 294 1 192 1 155 1 198 2 202 2 355 2 356 2 69 1 203 1 357 1 161 1 208 1 26 6 122 1 27 1 210 2 213 1 306 1 29 1 127 2 363 1 33 1 224 1 318 1 131 2 267 1 135 2 136 1 139 1 327 1 271 1 330 1 237 1 331 3 273 1 49 2 
357 1 303 2 283 1 336 1 305 3 213 1 30 2 344 1 128 1 85 1 367 1 171 1 370 2 132 2 153 1 321 2 137 1 39 1 292 2 21 1 193 1 155 1 296 1 68 1 199 1 200 1 116 3 92 1 
171 1 62 1 357 2 206 1 161 2 136 1 27 1 292 2 155 2 213 2 7 1 330 1 237 1 
357 4 161 1 248 1 137 1 136 1 27 1 292 1 89 1 155 4 213 4 364 1 330 1 219 1 
357 2 278 1 161 2 38 1 147 1 27 1 292 1 138 1 57 1 155 2 213 2 330 1 237 1 32 1 
347 1 90 1 357 1 213 1 155 1 217 1 161 1 330 1 11 1 137 1 
357 2 161 1 2 1 136 1 27 1 292 1 43 1 6 1 155 2 213 2 330 1 
357 4 254 1 161 2 248 1 38 1 137 1 136 1 121 1 27 2 292 3 89 1 6 1 155 5 213 5 364 1 330 2 
357 4 161 2 248 1 38 1 137 1 136 1 121 1 27 2 292 3 89 1 6 1 155 5 213 5 295 1 364 1 330 2 
224 1 357 1 240 1 161 1 137 1 292 1 27 1 122 1 192 1 155 1 213 1 127 1 363 1 330 1 237 1 202 2 356 2 203 1 
94 1 62 1 357 1 161 2 38 1 147 1 27 1 292 1 138 1 155 1 213 1 330 1 237 1 
0 1 96 1 127 1 12 1 103 1 
0 1 158 1 276 1 96 2 182 1 241 1 305 2 127 1 363 1 128 1 220 1 12 2 168 1 223 1 103 2 224 1 320 1 153 1 42 1 349 1 192 1 88 1 193 1 200 1 202 1 48 1 116 2 356 1 250 2 
224 1 315 1 0 1 96 1 82 1 202 1 323 1 356 1 103 1 
0 1 182 1 220 1 
340 1 229 1 64 1 312 1 
340 1 319 1 166 1 229 1 64 1 146 1 84 1 
111 1 319 1 16 1 
368 1 319 3 64 1 229 1 146 1 184 1 340 1 148 2 166 3 28 1 167 1 84 1 
340 1 319 2 166 2 22 1 229 1 64 1 146 1 375 1 84 1 
319 1 109 1 146 1 184 1 340 1 166 1 90 1 113 1 217 1 222 1 84 1 
184 1 340 1 319 1 166 1 229 1 146 1 84 1 
184 1 319 1 166 1 229 2 64 1 146 1 84 1 
299 1 319 2 229 1 146 2 184 1 340 1 166 2 243 1 238 1 84 2 
319 3 229 1 64 1 322 1 109 1 146 1 184 1 340 2 166 3 22 2 214 1 328 1 84 1 
347 1 319 2 300 1 229 1 64 1 279 1 146 1 184 1 340 1 90 2 166 2 22 1 217 1 222 1 84 1 
319 4 229 1 64 1 109 1 146 2 3 1 375 1 184 1 340 2 166 4 22 2 328 1 84 2 
184 1 340 1 319 1 166 1 229 1 64 1 146 1 84 1 
368 1 319 4 229 2 64 2 109 1 146 1 148 1 340 3 28 1 166 4 22 2 261 1 328 1 84 1 
34 1 319 2 229 1 64 1 187 1 146 1 97 1 184 1 340 1 166 2 22 1 84 1 
368 1 319 3 64 1 229 1 146 1 184 1 340 1 148 2 166 3 28 2 352 1 84 1 
233 2 340 2 181 1 354 1 
184 1 319 1 166 1 244 1 146 1 84 1 
184 1 340 1 319 2 166 2 22 1 214 1 229 1 64 1 146 1 84 1 
265 1 
184 1 340 1 319 1 166 1 229 1 64 1 146 1 84 1 
184 1 340 1 148 1 319 3 166 3 22 1 214 1 229 1 64 1 146 1 84 1 
340 1 261 1 328 1 109 1 
340 1 229 1 

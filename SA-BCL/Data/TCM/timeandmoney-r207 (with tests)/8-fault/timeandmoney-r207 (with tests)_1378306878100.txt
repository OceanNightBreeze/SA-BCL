#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (296,370) 221 83 (208,245) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (296,370) 221 83 (208,245) (208,245) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (296,370) 221 83 (208,245) (208,245) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException (296,370) 221 83 (208,245) (208,245) 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (296,370) 221 83 (208,245) (208,245) 154 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2006 | = null
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
334 1 294 1 239 5 96 1 316 2 142 2 222 1 34 4 199 1 275 1 343 1 151 1 303 9 372 1 179 2 253 3 59 1 114 6 43 1 44 2 156 1 184 2 70 1 118 1 210 2 48 2 49 9 186 1 
334 1 294 1 239 5 96 1 316 2 142 2 222 1 34 4 199 1 275 1 343 1 151 1 303 9 372 1 179 2 253 3 59 1 114 6 44 2 43 1 156 1 70 1 184 2 118 1 210 2 48 2 49 9 186 1 
334 1 294 1 239 6 96 1 316 2 142 2 222 1 34 5 199 1 275 1 343 1 151 1 303 10 372 1 179 2 253 4 59 1 114 7 44 2 43 1 156 1 70 1 184 2 118 1 210 2 48 2 49 10 186 1 
334 1 294 1 239 4 96 1 316 2 142 2 222 1 34 3 199 1 275 1 343 1 151 1 303 7 372 1 179 2 253 2 59 1 114 4 44 2 43 1 70 1 184 1 118 1 210 2 48 2 49 7 186 1 
343 1 303 4 239 3 253 1 179 1 316 1 114 3 43 1 44 1 142 1 156 1 184 2 210 1 222 1 49 4 199 1 34 2 275 1 
343 1 94 1 151 1 303 2 239 1 372 1 140 1 286 1 316 1 179 1 43 1 142 1 210 1 48 1 222 1 49 2 
343 1 303 3 239 2 96 1 316 2 253 1 114 1 43 1 142 2 48 1 222 1 49 3 34 1 
294 1 239 5 96 1 316 2 244 1 220 1 142 2 222 1 34 4 199 1 275 1 343 1 303 9 253 3 179 1 59 1 114 7 43 1 44 1 156 1 184 2 210 1 48 1 49 9 
294 1 239 5 96 1 316 2 244 1 220 1 142 2 222 1 34 4 199 1 275 1 343 1 303 9 253 3 179 1 59 1 114 7 43 1 44 1 156 1 184 2 210 1 48 1 49 9 
66 1 285 1 317 1 
335 2 317 1 192 1 
83 1 12 2 370 2 221 2 18 1 228 2 191 2 241 2 
211 1 120 1 95 1 297 2 102 1 167 1 191 3 241 2 81 2 83 1 124 2 337 1 221 2 143 1 271 1 320 1 146 1 276 1 176 1 177 1 12 3 111 2 370 2 322 1 348 1 89 2 228 2 287 1 305 1 230 1 42 1 116 1 18 1 69 1 379 1 311 1 23 1 
83 1 370 1 245 1 221 1 
12 1 302 1 285 1 317 1 241 1 191 1 326 1 104 1 328 1 329 1 338 1 17 1 365 1 20 1 
12 1 302 2 370 1 228 1 285 1 317 1 241 1 191 1 326 1 104 1 338 1 221 1 17 1 365 2 20 1 
302 1 365 1 27 1 113 1 126 1 
302 2 285 1 365 2 27 1 317 1 41 1 126 1 82 1 
302 1 365 1 126 1 
83 1 208 1 302 1 370 1 245 1 221 1 365 1 27 1 
317 1 
302 2 209 1 285 1 365 2 27 1 317 1 41 1 126 1 
345 1 138 1 346 2 302 5 285 1 25 1 266 1 27 2 215 1 317 1 41 1 29 1 219 1 339 1 365 5 247 1 235 2 92 2 126 2 
66 1 18 1 
12 2 370 1 262 1 228 1 241 2 191 2 221 1 18 2 355 1 
369 1 45 1 227 1 
12 1 110 1 177 1 111 1 287 1 297 1 191 1 167 1 337 1 124 1 116 1 18 1 271 1 320 1 311 1 23 1 
36 1 177 1 250 1 12 2 111 1 370 1 228 1 287 1 297 1 167 1 241 1 191 2 45 1 116 1 337 1 124 1 271 1 320 1 311 1 23 1 
36 1 150 1 250 2 12 5 370 4 121 1 228 4 241 5 191 5 329 1 221 1 18 1 56 1 355 1 
104 1 12 2 370 2 296 1 161 1 228 2 191 2 241 2 
250 1 12 3 370 3 221 1 18 1 228 3 191 3 241 3 
104 1 12 1 370 1 161 1 228 1 191 1 241 1 
104 1 12 1 370 1 221 1 262 1 228 1 191 1 241 1 355 1 
120 1 297 1 102 1 167 1 191 4 241 3 81 1 104 1 83 1 337 1 124 1 338 1 221 2 143 1 271 1 365 1 320 1 146 1 272 1 36 1 176 1 177 1 12 4 250 1 111 1 302 1 370 3 322 1 226 1 348 1 89 2 228 3 287 1 230 1 326 1 42 1 116 1 18 1 17 1 20 1 379 1 311 1 23 1 355 1 
12 2 250 1 329 1 370 1 121 1 18 1 228 1 191 2 241 2 
36 1 250 2 12 3 302 1 321 1 370 3 226 1 228 3 317 1 241 3 191 3 326 1 104 1 338 1 221 1 17 1 365 1 20 1 355 1 
250 1 12 2 370 2 227 1 228 2 241 2 191 2 45 1 221 1 355 1 
12 1 177 1 111 1 287 1 297 1 191 1 167 1 337 1 124 1 116 1 18 1 271 1 320 1 311 1 23 1 
12 1 177 1 111 1 188 1 287 1 297 1 191 1 167 1 103 1 337 1 124 1 18 1 271 1 320 1 23 1 
120 1 312 1 314 1 51 1 97 1 102 1 81 4 196 1 198 1 108 1 248 1 273 1 176 1 369 2 322 1 304 1 89 2 227 2 305 2 230 1 42 1 45 2 333 1 379 2 
104 1 12 1 370 1 296 1 228 1 191 1 241 1 326 1 
290 1 130 1 
290 1 130 1 
204 1 206 1 
204 1 206 1 
204 1 206 1 
290 1 130 1 366 1 
290 1 213 1 130 1 
290 2 37 1 224 1 130 2 204 1 206 1 
290 1 130 1 366 1 
290 1 130 1 366 1 
290 1 55 1 130 1 
290 1 55 1 130 1 
290 1 55 1 130 1 
119 1 187 1 213 1 189 1 165 1 241 2 191 2 246 1 195 1 365 1 9 1 127 1 12 2 302 1 370 2 88 1 228 2 130 1 290 1 64 1 133 1 18 1 71 1 21 1 
212 1 119 2 224 1 302 2 50 2 189 2 26 1 130 2 131 1 165 3 317 1 168 1 290 2 115 1 64 2 133 1 365 2 71 2 10 1 
44 1 179 1 210 1 
94 1 179 1 210 1 
44 2 94 1 14 1 225 1 179 3 107 1 
44 1 94 1 14 1 179 2 107 1 378 1 
44 1 94 1 14 2 179 2 107 1 
187 1 312 1 357 2 315 1 25 1 27 4 164 2 335 3 215 2 192 1 317 2 29 3 84 1 31 1 195 1 270 1 365 5 198 1 300 2 273 1 126 1 342 1 346 1 302 5 88 1 285 1 41 1 254 1 73 1 92 1 235 1 333 1 
302 2 370 1 285 1 27 2 317 1 113 1 132 1 242 1 83 1 208 1 319 1 245 1 221 1 365 2 126 1 
138 1 187 1 312 1 357 2 315 1 27 2 164 1 215 2 335 4 317 3 192 2 29 3 84 1 31 1 270 1 365 3 198 1 342 1 273 1 300 2 346 1 302 3 285 1 92 1 235 1 333 1 
138 1 187 2 312 2 357 4 315 2 164 2 27 3 335 7 215 4 317 4 192 3 29 5 105 1 84 1 31 1 270 1 365 4 198 2 35 1 300 4 342 1 273 2 346 1 302 4 285 1 62 1 92 1 235 1 333 2 
293 1 66 1 167 1 
281 1 167 1 
1 1 
177 1 167 1 320 1 
251 1 167 1 
177 1 167 1 
249 1 293 2 177 1 1 1 15 1 167 3 320 1 
112 1 97 3 190 1 214 1 305 4 80 1 81 7 4 1 289 1 256 2 298 1 198 1 332 1 108 2 379 3 333 1 185 1 
112 1 97 3 190 1 214 1 305 4 80 1 81 7 4 1 289 1 256 2 298 1 198 1 332 1 108 2 379 3 333 1 185 1 
112 1 97 3 324 1 190 1 214 1 305 4 80 1 81 7 289 1 4 1 256 2 298 1 198 1 332 1 108 2 379 3 333 1 185 1 
312 3 313 1 315 3 97 6 190 2 78 1 214 1 80 4 81 23 218 1 4 1 298 1 7 1 198 3 108 2 148 4 273 3 176 2 277 3 322 2 112 1 89 4 325 1 230 2 305 11 42 2 63 2 307 1 256 1 183 1 379 12 333 3 
97 4 190 1 80 1 81 9 243 1 4 1 298 1 198 1 108 3 176 2 322 2 112 1 89 4 230 2 305 5 42 2 63 1 289 1 256 2 352 1 332 1 333 1 379 4 185 1 
94 1 356 1 239 1 316 1 297 1 216 1 123 1 124 1 142 1 33 1 271 1 222 1 368 1 343 1 11 1 128 1 111 1 303 2 225 1 179 2 114 1 44 1 43 1 117 1 155 1 68 1 210 1 48 1 49 2 23 1 
94 1 356 1 239 1 316 1 297 1 216 1 123 1 124 1 142 1 271 1 222 1 368 1 223 1 343 1 128 1 111 1 201 1 225 1 303 3 179 2 375 1 114 2 44 1 117 1 155 1 68 1 210 1 48 1 49 3 23 1 
94 1 239 1 297 1 216 1 123 1 124 1 271 1 222 1 368 1 343 1 128 1 111 1 201 1 303 2 225 1 179 2 375 1 114 2 44 1 117 1 155 1 210 1 48 1 49 2 23 1 
316 1 297 1 167 1 54 1 124 1 337 1 267 1 142 1 271 1 223 1 368 2 177 1 111 1 303 1 178 1 373 1 181 1 117 2 155 2 48 2 49 1 22 1 23 1 
94 1 356 1 316 1 297 1 216 1 123 1 124 1 142 1 271 1 368 1 11 1 128 1 111 1 201 1 303 1 225 1 179 2 44 1 43 1 117 1 155 1 68 1 210 1 48 1 49 1 23 1 
263 1 
99 1 335 2 297 2 192 2 241 1 191 1 104 1 337 2 338 1 340 1 200 1 149 1 109 2 12 1 346 1 111 2 302 5 57 2 205 2 306 2 65 1 67 2 17 1 20 1 23 1 76 1 359 2 25 1 163 1 215 2 317 2 167 1 29 2 124 2 84 1 271 1 365 5 126 6 274 1 177 1 178 1 283 1 285 1 288 1 41 3 40 1 231 4 326 1 181 1 328 1 329 1 182 1 377 2 235 1 92 1 
359 1 163 1 191 1 241 1 104 1 338 1 365 3 200 1 149 1 274 1 126 2 12 1 302 3 40 1 231 2 41 1 326 1 328 1 329 1 209 1 17 1 20 1 
163 1 191 1 241 1 317 1 104 1 338 1 365 3 200 1 126 1 149 1 274 1 109 1 12 1 302 3 285 1 40 1 231 3 41 1 326 1 328 1 329 1 209 1 17 1 20 1 
359 1 163 1 191 1 241 1 317 1 104 1 338 1 365 3 200 1 149 1 274 1 126 2 109 1 12 1 302 3 285 1 41 1 40 1 231 3 326 1 328 1 329 1 67 1 209 1 17 1 20 1 
74 1 25 1 359 4 163 1 215 1 192 2 317 5 241 1 191 1 29 1 104 1 338 1 365 5 200 1 149 1 274 1 126 7 109 4 12 1 346 1 87 1 278 1 302 5 283 1 57 2 285 5 205 2 288 1 40 1 41 3 231 6 326 1 306 2 328 1 329 1 67 4 234 1 209 1 17 1 20 1 377 2 92 1 235 1 354 1 
359 2 25 1 163 1 335 2 215 1 317 2 192 2 241 1 191 1 29 1 104 1 338 1 365 4 200 1 126 4 149 1 274 1 109 2 12 1 346 1 302 4 283 1 285 1 57 2 41 2 205 2 288 1 40 1 231 4 326 1 306 2 328 1 329 1 182 1 67 2 17 1 20 1 377 2 92 1 235 1 
74 1 359 2 25 1 163 1 215 1 317 1 192 2 191 1 241 1 29 1 104 1 338 1 365 4 200 1 126 4 149 1 274 1 109 2 12 1 346 1 302 4 87 1 283 1 285 1 57 2 41 2 205 2 288 1 40 1 231 4 326 1 306 2 328 1 329 1 67 2 17 1 20 1 377 2 235 1 92 1 354 1 
74 1 359 2 25 1 163 1 215 1 317 1 192 2 191 1 241 1 29 1 104 1 338 1 365 4 200 1 126 4 149 1 274 1 109 2 12 1 346 1 302 4 87 1 283 1 285 1 57 2 41 2 205 2 288 1 40 1 231 4 326 1 306 2 328 1 329 1 67 2 17 1 20 1 377 2 235 1 92 1 354 1 
74 1 359 2 25 1 163 1 335 2 215 1 317 1 191 1 241 1 29 1 104 1 338 1 172 1 365 4 200 1 126 4 149 1 274 1 109 2 86 2 12 1 301 2 346 1 302 4 285 1 57 2 41 2 205 2 288 1 40 1 231 4 326 1 328 1 376 1 329 1 67 2 17 1 20 1 137 1 235 1 92 1 
74 1 25 1 359 3 163 1 215 1 317 1 192 2 191 1 241 1 29 1 104 1 338 1 365 4 200 1 149 1 274 1 126 5 109 3 12 1 346 1 87 1 302 4 278 1 283 1 285 1 57 2 41 2 205 2 288 1 40 1 231 5 326 1 306 2 328 1 329 1 67 3 17 1 20 1 377 2 92 1 235 1 354 1 
74 1 25 1 359 3 163 1 215 1 317 1 192 2 191 1 241 1 29 1 104 1 338 1 365 4 200 1 149 1 274 1 126 5 109 3 12 1 346 1 87 1 302 4 278 1 283 1 285 1 57 2 41 2 205 2 288 1 40 1 231 5 326 1 306 2 328 1 329 1 67 3 17 1 20 1 377 2 92 1 235 1 354 1 
359 2 25 1 163 1 335 2 215 1 317 1 241 1 191 1 29 1 104 1 338 1 365 4 172 1 200 1 126 4 149 1 274 1 109 2 86 2 12 1 301 2 346 1 302 4 285 1 57 2 41 2 205 2 288 1 40 1 231 4 326 1 328 1 329 1 182 1 67 2 17 1 20 1 92 1 235 1 
120 1 314 1 97 2 102 1 81 6 298 1 198 1 108 2 176 1 369 1 322 1 112 1 227 1 89 2 230 1 305 3 42 1 289 1 66 1 45 1 256 1 18 2 332 1 185 1 333 1 379 3 
211 1 120 1 312 2 313 2 315 4 97 4 102 2 80 2 81 22 364 1 6 1 198 2 108 2 148 4 273 4 13 1 176 2 277 4 369 16 322 2 348 1 89 4 227 6 284 1 230 2 305 13 42 2 45 16 308 2 18 1 183 1 379 9 333 4 
211 1 120 1 297 1 167 1 102 1 191 2 241 1 81 2 360 1 124 1 337 1 364 1 271 1 320 1 36 1 177 1 110 1 12 2 250 1 176 1 111 1 370 1 322 1 227 1 228 1 89 2 348 1 287 1 230 1 305 1 42 1 116 1 291 1 18 1 72 1 311 1 379 1 23 1 
295 2 97 8 297 3 241 1 191 3 102 3 3 2 337 1 298 1 198 3 108 4 146 2 250 1 12 3 111 3 201 1 112 1 348 1 305 10 256 1 116 2 18 2 311 2 23 2 211 1 120 3 24 2 312 2 315 2 79 1 167 2 80 4 81 20 318 2 124 3 364 1 271 2 320 2 273 2 36 1 176 3 177 2 369 7 370 1 322 3 89 6 228 1 227 7 287 2 230 3 42 3 289 1 45 7 136 1 332 1 331 1 185 1 379 10 333 3 
211 1 120 2 314 1 297 8 191 1 241 1 167 3 102 2 81 2 361 1 193 1 124 7 337 2 33 1 170 1 271 2 144 1 125 1 276 2 12 1 250 1 176 2 177 2 111 8 201 1 370 1 322 2 202 1 178 1 229 1 228 1 89 4 348 1 230 2 305 1 42 2 181 1 379 1 23 2 
120 1 312 1 315 1 97 1 102 1 241 1 191 1 81 3 364 1 221 1 198 1 108 1 273 1 176 1 12 1 369 1 370 1 322 1 227 1 89 2 228 1 230 1 305 1 42 1 45 1 91 1 333 1 379 2 355 1 
176 1 369 1 120 1 322 1 314 1 97 1 227 1 89 2 230 1 305 2 102 1 80 1 81 2 42 1 45 1 248 1 333 1 273 1 
176 1 369 1 120 1 322 1 312 1 314 1 304 1 97 1 227 1 89 2 230 1 102 1 81 2 42 1 45 1 198 1 108 1 379 2 
176 1 369 2 120 1 312 1 322 1 314 1 315 1 97 2 227 2 89 2 230 1 305 2 102 1 80 1 81 4 42 1 45 2 198 1 108 1 379 2 333 1 273 1 
176 1 369 1 120 1 322 1 97 1 227 1 89 2 230 1 305 2 102 1 80 1 81 2 42 1 45 1 248 1 333 1 125 1 273 1 
176 1 369 1 120 1 322 1 312 1 304 1 97 1 227 1 89 2 230 1 102 1 81 2 42 1 45 1 198 1 108 1 379 2 125 1 
176 1 369 2 120 1 312 1 322 1 315 1 97 2 227 2 89 2 230 1 305 2 102 1 80 1 81 4 42 1 45 2 198 1 108 1 379 2 333 1 125 1 273 1 
176 1 369 2 120 1 312 1 322 1 315 1 97 2 227 2 89 2 230 1 305 2 102 1 80 1 42 1 81 4 45 2 198 1 108 1 379 2 333 1 273 1 
211 1 120 1 297 1 167 1 191 1 102 1 81 2 124 1 337 1 271 1 320 1 146 1 177 1 12 1 176 1 111 1 322 1 89 2 348 1 287 1 305 1 230 1 42 1 116 1 18 1 311 1 379 1 23 1 
211 1 120 1 188 1 297 1 167 1 191 1 102 1 103 1 81 2 106 1 124 1 337 1 271 1 320 1 177 1 12 1 176 1 111 1 322 1 89 2 348 1 287 1 305 1 230 1 42 1 18 1 379 1 23 1 
176 1 369 2 120 1 312 1 322 1 315 1 97 2 227 2 89 2 230 1 305 2 102 1 80 1 81 4 42 1 45 2 364 1 198 1 108 1 379 2 333 1 273 1 
120 1 312 1 315 1 97 2 297 1 167 1 191 1 102 1 80 1 81 4 3 1 124 1 33 1 271 1 198 1 320 1 108 1 146 1 273 1 177 1 12 1 176 1 111 1 369 2 322 1 227 2 89 2 287 1 305 2 230 1 42 1 45 2 116 1 379 2 333 1 311 1 23 1 
259 1 120 1 312 1 315 1 97 1 102 1 241 1 191 1 80 1 81 3 364 1 221 1 198 1 273 1 176 1 12 1 369 1 370 1 322 1 89 2 228 1 227 1 230 1 305 2 42 1 45 1 379 1 333 1 355 1 
75 1 261 1 312 3 313 1 315 3 97 6 2 1 80 3 81 25 53 1 363 4 269 1 198 3 108 3 148 3 273 3 176 2 344 1 277 2 371 1 322 2 252 1 89 4 230 2 305 12 42 2 330 2 90 1 183 2 352 1 379 13 333 3 
75 1 261 1 312 5 313 2 315 5 97 4 2 2 80 2 81 36 53 1 363 4 198 5 108 2 148 4 273 5 176 1 344 1 277 4 371 2 322 1 89 2 230 1 305 18 42 1 308 2 330 1 90 1 352 1 183 2 379 18 333 5 
75 1 261 1 312 3 313 2 315 5 97 6 2 1 80 4 81 34 53 1 363 4 269 1 198 3 108 2 148 5 273 5 176 2 344 1 277 5 371 2 322 2 89 4 230 2 305 19 349 1 42 2 308 2 330 1 90 1 183 3 352 1 379 15 333 5 
75 1 261 1 312 7 313 3 315 7 97 9 2 1 80 5 81 48 53 1 363 4 269 1 198 7 108 4 148 6 273 7 176 2 344 1 277 6 371 2 322 2 89 4 230 2 305 24 349 1 42 2 308 3 330 1 90 1 183 3 352 1 379 24 333 7 
75 1 261 1 312 5 313 2 315 5 97 14 2 1 80 5 81 56 53 1 363 4 298 4 198 9 108 9 148 4 273 5 176 1 344 1 277 4 371 1 322 1 112 4 89 2 230 1 305 30 42 1 289 4 256 4 308 2 330 1 90 1 183 2 352 1 332 4 185 4 379 26 333 9 
290 1 212 1 64 1 119 1 224 1 189 1 130 1 71 1 168 1 157 1 
213 1 9 1 
16 1 290 1 64 1 119 1 189 1 171 1 130 1 71 1 236 1 
77 1 366 1 
37 1 55 1 147 1 
212 1 119 1 224 1 302 1 50 1 189 1 26 1 130 1 131 1 165 2 317 1 168 1 290 1 64 1 133 1 365 1 71 1 10 1 
212 1 119 1 224 1 302 1 50 1 189 1 26 1 130 1 131 1 165 2 317 1 168 1 290 1 64 1 133 1 365 1 71 1 10 1 
212 1 119 1 224 1 302 1 50 1 189 1 26 1 130 1 131 1 165 2 317 1 168 1 290 1 64 1 133 1 365 1 71 1 10 1 
37 1 77 1 366 1 
37 1 77 1 366 1 
55 1 147 1 
37 1 55 1 147 1 
127 1 21 1 
119 1 187 1 213 1 50 1 189 1 27 1 165 1 191 2 241 2 246 1 195 1 365 1 9 1 127 1 12 2 302 1 370 2 88 1 228 2 131 1 130 1 290 1 64 1 18 1 71 1 353 1 21 1 
211 1 120 1 297 2 167 1 102 1 191 2 241 2 81 2 364 1 124 2 271 1 170 1 341 1 145 1 276 2 85 1 177 1 12 2 176 1 111 2 38 1 322 1 202 1 89 2 348 1 230 1 305 1 42 1 233 1 379 1 23 1 
94 1 128 1 111 2 201 1 225 1 179 2 297 2 255 1 44 1 123 1 124 2 350 1 68 1 33 1 271 1 210 1 367 1 23 1 368 1 
94 1 128 1 111 1 201 1 225 1 179 2 297 1 255 1 44 1 123 1 124 1 68 1 271 1 210 1 237 1 368 1 23 1 
177 1 111 1 260 1 178 1 297 1 167 1 181 1 337 1 124 1 271 1 367 1 22 1 23 1 368 1 
94 1 128 1 111 1 201 1 225 1 179 2 297 1 255 1 44 1 123 1 124 1 350 1 68 1 271 1 210 1 367 1 23 1 368 1 
169 1 
29 1 345 1 219 1 66 1 285 1 215 1 317 1 
346 1 302 1 283 1 285 1 25 1 335 1 215 1 41 1 317 2 192 1 306 1 29 1 365 1 235 1 92 1 377 1 126 1 
293 2 238 1 99 1 297 3 335 12 192 6 337 1 198 2 299 1 300 6 249 1 345 1 346 4 111 3 302 5 251 2 152 2 60 1 207 2 17 2 23 4 357 6 312 2 315 2 264 2 25 4 215 8 167 10 317 8 29 9 219 1 318 2 124 3 30 1 84 2 33 1 32 2 271 3 365 5 320 3 126 5 273 2 177 3 279 2 129 2 280 2 281 3 285 2 41 3 180 1 374 2 235 4 92 4 333 2 
75 1 357 5 312 2 240 1 313 1 315 2 99 1 25 1 335 6 215 5 192 3 317 4 83 1 29 7 245 1 221 1 84 1 198 2 148 2 300 5 273 2 277 2 346 1 279 2 370 1 129 1 285 1 208 1 308 1 183 1 92 1 235 1 333 2 
346 1 302 1 87 1 279 2 370 1 112 1 25 1 215 1 83 1 208 1 29 2 154 1 245 1 298 1 221 1 365 1 198 1 332 1 235 1 92 1 333 1 
345 1 346 1 25 1 285 1 215 1 317 1 29 1 219 1 235 1 92 1 
279 2 129 1 357 5 312 2 315 2 215 5 335 10 192 5 317 5 29 5 318 1 198 2 333 2 273 2 300 5 
302 1 285 1 365 1 317 1 41 1 126 1 
138 1 76 1 99 2 25 1 297 4 215 2 167 1 29 2 124 4 337 2 84 2 271 1 365 3 299 1 126 4 177 1 346 2 111 4 302 3 347 1 178 1 282 1 60 2 41 2 65 1 181 1 92 2 235 2 23 1 
120 1 297 1 191 3 241 2 167 1 102 1 81 1 83 1 124 1 337 1 221 2 143 1 271 1 320 1 146 1 176 1 12 3 177 1 111 1 370 2 322 1 348 1 89 2 228 2 287 1 230 1 42 1 116 1 18 1 379 1 311 1 23 1 
346 1 357 2 99 1 25 1 285 2 335 4 215 2 192 2 317 4 29 1 256 1 84 1 235 1 92 1 300 2 
119 1 189 1 310 1 
212 1 119 1 122 1 189 1 21 1 
119 1 189 1 310 1 
119 1 189 1 310 1 
119 1 189 1 217 1 
119 1 189 1 217 1 
119 1 189 1 217 1 
119 1 189 1 
290 1 130 1 
176 2 322 2 112 1 97 3 89 4 305 4 230 2 80 1 81 8 42 2 63 1 289 1 256 1 298 1 198 1 332 1 108 2 333 1 379 4 185 1 
112 1 97 2 305 3 81 6 289 1 66 1 256 1 298 1 198 1 332 1 108 2 379 3 185 1 333 1 
176 1 312 1 322 1 315 1 97 2 89 2 230 1 305 2 80 1 42 1 81 4 135 1 198 1 108 1 379 2 333 1 273 1 
277 2 312 2 313 1 315 2 97 2 305 6 80 1 81 12 308 1 183 1 198 2 108 1 148 2 379 6 333 2 273 2 
312 2 315 2 313 1 97 9 80 4 81 23 298 2 7 1 198 3 108 5 148 2 273 2 277 2 13 1 176 2 322 2 112 2 89 4 305 11 230 2 42 2 63 2 289 1 256 1 308 1 332 1 185 1 333 3 379 12 
81 1 379 1 148 1 
277 1 305 1 81 1 
176 1 322 1 312 1 315 1 89 2 97 3 230 1 305 3 80 1 42 1 81 6 318 1 135 1 198 1 108 2 379 3 333 1 273 1 
75 1 312 2 313 1 315 2 97 2 80 1 81 12 198 2 108 1 148 2 273 2 277 2 176 1 322 1 89 2 230 1 305 6 42 1 308 1 183 1 352 1 379 6 333 2 
112 1 97 2 305 3 80 1 81 6 298 1 198 1 332 1 108 1 333 1 379 3 
176 1 322 1 112 1 97 2 89 2 305 1 230 1 80 1 81 3 42 1 63 1 289 1 298 1 7 1 108 1 379 2 185 1 
176 1 322 1 112 2 89 2 97 5 230 1 305 5 80 2 42 1 81 10 154 1 298 2 352 1 198 2 332 1 108 3 379 5 333 2 
176 1 322 1 97 1 89 2 352 1 305 2 230 1 80 1 81 2 333 1 42 1 273 1 
176 1 312 1 322 1 315 1 97 2 89 2 230 1 305 2 80 1 42 1 81 4 352 1 198 1 108 1 379 2 333 1 273 1 
176 3 322 3 112 1 89 6 97 2 230 3 305 1 80 1 81 3 42 3 63 1 298 1 269 1 352 1 7 1 108 1 379 2 
97 6 80 3 81 15 218 1 298 2 269 1 7 1 198 2 108 3 148 1 176 4 277 1 322 4 112 2 89 8 230 4 305 7 42 4 63 1 289 1 154 1 135 1 183 1 352 1 332 1 333 2 379 8 185 1 
75 1 97 2 81 8 298 1 198 1 108 2 148 1 277 1 176 1 322 1 112 1 89 2 230 1 305 4 42 1 289 1 256 1 183 1 352 1 332 1 333 1 379 4 185 1 
139 1 75 1 312 1 313 1 315 3 97 5 80 2 81 20 298 1 198 2 175 1 108 3 148 2 273 3 176 3 277 1 322 3 112 1 89 6 39 1 230 3 305 12 42 3 327 1 63 1 289 1 256 1 135 1 183 1 352 1 332 1 185 1 379 8 333 4 
75 1 312 2 313 1 315 2 97 6 80 2 81 25 298 2 198 5 108 4 148 2 273 2 277 2 176 2 322 2 112 2 89 4 230 2 305 13 42 2 289 1 154 1 256 1 308 1 135 1 183 1 352 1 332 2 185 1 379 12 333 5 
75 1 312 2 313 1 315 2 97 9 80 4 81 25 298 2 198 5 108 5 148 2 273 2 277 2 176 2 322 2 112 2 89 4 230 2 305 13 42 2 289 1 154 1 256 1 308 1 135 1 183 1 352 1 332 2 185 1 379 12 333 5 
75 1 97 2 81 8 298 1 198 1 108 2 148 1 277 1 176 1 322 1 112 1 89 2 230 1 305 4 42 1 289 1 256 1 183 1 352 1 332 1 333 1 379 4 185 1 
75 1 312 2 313 1 315 2 97 2 80 1 81 12 198 2 108 1 148 2 273 2 277 2 176 1 322 1 89 2 230 1 305 6 42 1 308 1 183 1 352 1 379 6 333 2 
75 1 312 2 313 1 315 2 97 2 80 1 81 12 198 2 108 1 148 2 273 2 176 2 277 2 322 2 89 4 230 2 305 6 42 2 308 1 135 1 183 1 352 1 379 6 333 2 
139 1 75 1 312 3 313 1 315 4 97 7 80 3 81 21 269 1 198 3 175 1 108 4 148 2 273 4 176 4 277 1 322 4 89 8 39 1 230 4 305 11 42 4 327 1 63 2 183 1 352 1 379 10 333 4 
112 3 97 6 305 3 80 3 81 7 289 2 298 3 198 1 332 1 108 3 379 4 185 1 333 1 
139 1 75 1 312 2 313 1 315 3 97 5 80 1 81 23 298 1 269 1 198 3 175 1 108 4 148 2 273 3 176 4 277 1 322 4 112 1 89 8 39 1 230 4 305 12 42 4 327 1 63 2 289 1 256 1 183 1 352 1 332 1 185 1 379 11 333 4 
12 1 329 1 121 1 18 1 191 1 241 1 292 1 
12 1 121 1 203 1 241 1 191 1 336 1 329 1 5 1 18 1 47 1 309 1 292 1 
177 1 181 1 111 1 66 1 124 1 337 1 178 1 271 1 297 1 167 1 23 1 
177 1 250 1 12 2 111 1 370 1 228 1 287 1 297 1 167 1 241 1 191 2 337 1 124 1 116 1 18 1 271 1 320 1 23 1 
297 1 191 2 241 2 167 3 104 1 124 1 271 1 320 2 12 2 250 1 177 2 111 1 251 1 370 1 152 1 228 2 287 1 60 1 326 1 116 1 18 1 20 1 23 1 
188 1 297 2 191 2 241 2 167 3 362 1 104 1 124 2 271 1 320 2 12 2 250 1 177 2 111 2 251 1 370 1 152 1 228 2 287 1 60 1 326 1 18 1 20 1 23 1 
293 1 177 1 111 3 251 1 302 2 152 1 160 1 281 1 285 1 297 3 317 1 60 1 167 4 61 1 362 1 337 1 124 3 17 1 271 1 365 2 320 1 23 1 126 1 
293 1 177 1 111 3 251 1 302 2 152 1 281 1 285 1 297 3 317 1 60 1 167 4 374 1 362 1 337 1 124 3 17 1 271 1 365 2 320 1 23 1 126 1 
111 1 124 1 271 1 297 1 144 1 23 1 
249 1 177 2 111 7 201 1 229 1 162 1 153 1 297 7 167 3 361 1 193 1 337 2 124 6 33 1 170 1 271 2 144 1 320 1 276 1 258 1 23 3 
97 2 297 1 241 1 191 2 102 2 3 1 298 1 198 1 146 1 145 1 108 2 250 1 12 2 111 1 112 1 305 3 116 1 256 1 18 2 311 1 23 1 120 2 24 1 167 1 81 6 124 1 364 1 33 1 271 1 320 1 176 2 177 1 369 1 370 1 322 2 227 1 89 4 228 1 287 1 230 2 42 2 289 1 45 1 332 1 185 1 333 1 379 3 
293 1 264 1 25 2 27 1 215 1 297 1 317 1 167 2 29 1 219 1 124 1 337 1 32 1 365 3 299 1 126 2 345 1 346 2 111 1 302 3 281 1 285 1 41 1 374 1 207 1 17 1 92 2 235 2 
293 1 249 1 177 1 111 2 297 2 167 2 124 2 30 1 33 1 271 1 144 1 320 1 23 2 
177 1 111 4 178 1 101 1 297 4 167 1 362 1 181 1 337 1 124 4 33 1 271 1 23 1 
177 1 111 2 0 1 153 1 79 1 297 2 60 1 167 1 124 2 268 1 271 1 320 1 258 1 23 2 
94 1 123 1 111 1 124 1 337 1 271 1 179 1 210 1 297 1 23 1 
177 1 111 2 201 1 124 2 33 1 271 1 170 1 341 1 297 2 167 1 23 1 
177 2 111 5 178 1 101 1 297 5 60 1 167 3 361 1 181 1 193 1 337 1 124 4 33 1 170 1 271 2 23 2 
177 2 111 5 178 1 101 1 297 5 60 1 167 3 181 1 193 1 337 1 124 4 46 1 33 1 170 1 271 2 23 2 
177 1 250 1 12 2 111 1 370 1 188 1 228 1 287 1 297 1 167 1 241 1 191 2 337 1 124 1 18 1 271 1 320 1 23 1 
249 1 177 1 111 1 162 1 153 1 297 1 60 1 167 1 124 1 271 1 320 1 258 1 23 2 
85 1 12 1 38 1 58 1 241 1 191 1 233 1 351 1 173 1 
358 1 323 1 58 1 
351 1 18 1 173 1 58 1 174 1 
302 2 358 1 226 1 323 1 285 1 58 1 27 1 317 1 326 1 52 1 104 1 338 1 351 2 18 1 17 1 365 2 173 2 20 1 174 2 
343 1 66 1 239 1 222 1 
343 1 303 1 239 1 142 1 316 1 222 1 49 1 
303 1 155 1 48 1 
343 1 151 2 303 3 239 1 141 1 316 1 28 1 43 1 142 1 49 3 222 1 158 1 
343 1 303 2 239 1 142 1 184 1 316 1 222 1 49 2 114 1 
44 1 43 1 303 1 239 1 142 1 179 1 316 1 210 1 34 1 49 1 275 1 
43 1 303 1 239 1 142 1 316 1 222 1 49 1 
343 1 43 1 303 1 142 1 316 1 222 2 49 1 
159 1 303 2 239 1 316 2 43 1 142 2 257 1 197 1 222 1 49 2 
343 1 303 3 294 1 239 2 316 1 253 1 59 1 114 2 43 1 142 1 222 1 49 3 34 1 
343 1 94 1 303 2 225 1 239 1 179 2 316 1 114 1 43 1 44 1 142 1 210 1 222 1 49 2 93 1 
343 1 303 4 239 2 316 2 253 1 114 2 43 1 142 2 156 1 184 1 222 1 49 4 34 1 
343 1 43 1 303 1 239 1 142 1 316 1 222 1 49 1 
343 2 151 1 303 4 239 3 316 1 253 1 28 1 114 2 142 1 19 1 222 2 49 4 34 1 158 1 
343 1 303 2 239 1 100 1 265 1 316 1 114 1 43 1 244 1 142 1 222 1 49 2 
343 1 151 2 303 3 239 1 316 1 28 1 43 1 142 1 8 1 49 3 222 1 158 2 
134 1 239 2 194 2 98 1 
43 1 303 1 142 1 316 1 166 1 49 1 
343 1 43 1 303 2 239 1 142 1 316 1 59 1 222 1 49 2 114 1 
232 1 
343 1 43 1 303 1 239 1 142 1 316 1 222 1 49 1 
343 1 151 1 303 3 239 1 316 1 59 1 114 1 43 1 142 1 49 3 222 1 
239 1 253 1 19 1 34 1 
239 1 222 1 

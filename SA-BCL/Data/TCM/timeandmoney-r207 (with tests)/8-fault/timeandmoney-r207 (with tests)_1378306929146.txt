#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (64,118,281,322) (64,118,281,322) (64,118,281,322) 318 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 292 (164,346) (164,346) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 292 (164,346) (164,346) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 292 (164,346) (164,346) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 292 (164,346) (164,346) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (64,118,281,322) (64,118,281,322) (64,118,281,322) 318 20 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (64,118,281,322) (64,118,281,322) (64,118,281,322) 318 20 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 292 (218,237) (218,237) 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (11,125) (11,125) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (203,236) 221 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (11,125) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (177,290,348) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 258 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (203,236) 221 7 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (11,125) (11,125) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 8 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (14,146) (14,146) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (83,144,283) (63,86,313) (63,86,313) (63,86,313) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (64,118,281,322) (64,118,281,322) (63,86,313) (63,86,313) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (64,118,281,322) (64,118,281,322) (63,86,313) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 39 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 258 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 300 32 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (203,236) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 320 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (203,236) (203,236) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 345 359 352 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 345 359 352 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 345 359 352 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 345 359 352 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 345 359 352 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (83,144,283) (83,144,283) (83,144,283) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (203,236) 221 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 274 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (11,125) (11,125) 247 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 9 45 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (11,125) (11,125) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (11,125) (11,125) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 9 16 59 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1007 | = null
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 747 | return null
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
118 2 281 2 339 1 199 1 87 1 322 2 318 1 
292 1 118 1 281 1 346 1 339 1 199 1 164 1 87 1 322 1 
292 1 118 1 281 1 346 1 339 1 199 1 164 1 87 1 322 1 
292 1 118 1 281 1 346 1 339 1 199 1 164 1 87 1 322 1 
292 1 118 1 281 1 346 1 339 1 199 1 164 1 87 1 322 1 
118 1 257 1 280 1 281 4 92 1 199 1 36 1 213 1 56 2 322 1 272 1 84 1 18 1 326 3 308 1 87 4 64 3 209 2 
118 2 281 3 339 1 199 1 64 1 87 2 322 2 353 1 20 1 318 1 
118 2 281 3 339 1 199 1 64 1 87 2 322 2 353 1 20 1 318 1 
292 1 118 1 281 1 18 1 339 1 237 1 199 1 87 1 322 1 324 1 218 1 
278 1 139 1 11 1 348 1 13 1 125 1 114 1 
115 1 
278 1 131 1 348 2 61 1 27 1 114 2 115 1 193 1 
337 1 278 2 1 2 348 5 235 1 271 1 76 1 340 1 27 1 341 1 114 5 115 1 193 1 138 1 61 2 264 2 10 2 165 1 69 1 
258 1 115 1 193 1 
230 1 278 1 348 2 61 1 27 1 114 2 115 1 193 1 
348 1 61 1 114 1 
40 1 227 2 115 1 
139 1 13 2 
256 1 221 1 270 1 13 1 44 2 331 1 25 2 93 2 238 1 139 1 203 1 
139 1 13 1 125 1 
106 1 348 1 52 1 177 1 133 1 260 1 191 1 114 1 115 1 193 1 179 1 317 1 142 1 290 1 
13 1 290 1 
278 1 348 1 61 1 152 1 114 1 
99 1 176 1 249 1 34 1 270 1 44 1 133 2 25 1 93 1 260 1 172 1 287 1 253 1 206 1 49 1 183 1 67 1 142 2 153 1 41 1 
154 1 52 1 13 1 133 1 350 1 260 1 96 1 182 1 142 1 
258 1 
154 1 52 1 249 1 13 1 133 1 260 1 96 1 182 1 183 1 67 1 142 1 
279 1 52 1 188 1 133 2 260 2 67 2 183 2 142 2 
52 1 249 1 13 1 133 2 260 2 96 1 183 2 67 2 182 1 142 2 
52 1 188 1 133 1 260 1 67 1 183 1 142 1 
154 1 13 1 350 1 
154 1 106 1 348 1 329 1 52 1 221 1 249 1 44 1 270 1 13 2 133 1 93 1 25 1 191 1 260 1 114 1 139 1 179 1 203 1 7 1 183 1 67 1 142 1 153 1 290 1 
96 1 249 1 133 2 168 1 317 1 260 2 67 1 183 1 142 2 
154 1 106 1 348 1 329 1 52 1 72 1 249 2 13 1 133 2 260 2 191 1 114 1 115 1 179 1 183 2 67 2 142 2 153 1 290 1 
154 1 13 1 
44 1 270 1 93 1 25 1 
44 1 270 1 93 1 25 1 
60 2 304 1 224 1 119 1 140 1 151 1 141 1 192 1 
106 1 279 1 52 1 133 1 260 1 67 1 183 1 142 1 
150 1 88 1 126 1 
174 1 150 2 187 1 38 1 79 1 126 2 
150 1 126 1 
150 1 126 1 
174 1 38 1 
174 1 38 1 
174 1 38 1 
178 1 150 1 126 1 
178 1 150 1 126 1 
178 1 150 1 126 1 
150 1 135 1 126 1 
150 1 135 1 126 1 
150 1 135 1 126 1 
231 1 348 2 54 2 356 1 145 2 79 1 360 2 284 2 114 2 115 1 315 1 150 2 121 1 162 1 103 3 181 1 104 1 19 2 126 2 
348 1 145 1 284 1 260 2 150 1 103 1 88 1 126 1 133 2 321 1 357 1 360 1 94 1 114 1 96 1 342 1 162 1 19 1 255 1 67 2 183 2 142 2 365 1 208 1 
257 1 84 1 18 1 
257 1 18 1 324 1 
101 1 24 1 108 1 84 2 18 3 324 1 
101 1 108 1 250 1 84 1 18 2 324 1 
101 2 108 1 84 1 18 2 324 1 
21 1 1 1 278 4 348 5 211 1 259 1 143 1 27 1 193 1 195 2 264 1 10 1 29 1 216 1 107 2 109 1 269 2 91 1 271 3 94 1 298 1 341 1 114 5 115 2 325 1 40 1 61 1 227 3 255 1 66 1 365 1 69 2 
21 2 278 6 1 2 348 8 211 2 143 2 26 1 27 1 193 1 195 4 8 1 264 2 10 2 216 1 152 4 129 1 107 4 109 2 91 2 156 1 271 6 57 1 298 2 137 4 114 8 341 1 115 4 138 1 223 1 40 2 61 5 227 6 66 2 365 4 69 4 
21 1 278 2 1 1 348 3 211 1 143 1 193 1 195 2 125 1 264 1 10 1 29 1 11 1 107 2 269 1 109 1 13 1 91 1 271 3 298 1 114 3 115 3 139 1 138 1 325 1 40 2 227 4 66 1 365 1 69 2 
21 1 1 1 278 1 348 2 211 1 143 1 195 2 8 1 264 1 10 1 29 1 107 2 269 1 109 1 91 1 271 3 298 1 114 2 115 2 138 1 325 1 40 2 227 4 66 1 365 1 69 2 
15 1 
258 1 251 1 172 1 
253 1 176 1 172 1 
23 1 172 1 
4 1 172 1 
176 1 172 1 
253 1 176 1 251 2 363 1 95 1 172 3 
220 3 319 1 42 3 0 1 211 1 35 1 112 2 58 2 46 1 240 1 82 4 102 7 248 1 316 1 98 1 196 1 207 1 66 1 
21 3 0 1 42 15 211 4 282 1 119 1 46 2 240 5 82 16 351 1 242 1 102 31 248 1 196 1 151 1 50 4 319 1 220 10 109 3 35 2 297 1 358 1 112 3 58 5 298 3 60 2 305 1 224 1 273 1 98 2 140 1 275 3 207 2 66 4 
42 4 0 1 70 1 211 1 119 2 46 1 240 1 82 5 242 1 102 9 248 1 151 2 220 4 319 1 35 1 112 2 58 3 60 4 362 1 224 2 98 1 140 2 207 1 66 1 
220 3 319 1 42 3 0 1 211 1 35 1 112 2 58 2 46 1 240 1 82 4 102 7 248 1 98 1 196 1 207 1 66 1 
220 3 319 1 42 3 0 1 211 1 35 1 112 2 58 2 46 1 240 1 82 4 102 7 248 1 98 1 196 1 207 1 66 1 
118 1 310 1 155 2 176 1 281 1 270 1 44 1 25 1 93 1 339 2 146 1 322 1 299 1 287 1 172 1 14 1 194 1 263 2 87 1 206 1 229 2 217 1 127 1 
118 1 257 1 24 1 281 1 44 1 25 1 189 1 144 1 313 1 287 1 215 1 84 1 263 1 87 1 86 1 155 1 93 1 199 1 339 1 322 1 324 1 37 1 63 1 18 2 206 1 229 1 
118 1 155 1 71 1 281 1 189 1 199 1 339 1 144 1 322 1 313 1 263 1 63 1 87 1 86 1 229 1 
118 1 257 1 24 1 281 3 44 1 25 1 189 1 3 1 144 1 313 1 287 1 215 1 84 1 263 1 87 2 217 1 155 1 93 1 339 1 322 1 324 1 37 1 63 1 18 2 64 2 206 1 229 1 
257 1 155 1 24 1 281 2 44 1 25 1 93 1 339 1 144 1 3 1 324 1 313 1 287 1 37 1 215 1 84 1 263 1 18 2 64 2 87 1 206 1 229 1 
200 1 
1 1 348 4 311 1 74 1 169 1 77 3 170 2 27 2 260 1 191 1 193 1 264 1 10 1 317 1 268 2 290 1 175 1 106 1 130 1 52 1 53 5 55 1 133 1 177 1 111 1 271 1 158 1 341 1 114 4 115 1 179 1 97 1 344 3 40 2 61 5 17 2 163 1 364 2 65 1 309 3 142 1 69 1 
1 1 348 4 311 1 74 1 169 1 77 3 170 2 27 2 260 1 191 1 193 1 264 1 10 1 317 1 268 2 290 1 175 1 106 1 130 1 52 1 53 5 55 1 133 1 177 1 111 1 271 1 158 1 341 1 114 4 115 1 179 1 97 1 344 3 40 2 61 5 17 2 163 1 364 2 65 1 309 3 142 1 69 1 
1 1 328 2 191 1 193 1 10 1 290 1 106 1 53 4 52 1 111 1 114 4 341 1 115 1 344 2 61 4 163 1 309 2 69 1 348 4 169 1 77 2 170 2 260 1 27 2 262 1 124 1 264 1 317 1 175 1 130 1 133 1 177 1 271 1 179 1 97 1 225 2 227 2 364 2 142 1 
1 1 44 2 191 1 193 1 287 1 288 1 10 1 290 1 291 1 197 1 106 1 52 1 53 4 111 1 299 1 114 5 341 1 115 2 344 2 61 6 17 2 307 1 163 1 206 1 309 2 69 2 348 5 74 1 25 2 169 1 77 2 170 2 27 3 260 1 172 1 124 1 264 1 317 1 268 2 127 1 175 1 130 1 176 1 91 1 270 2 177 1 133 1 93 2 271 2 179 1 97 1 40 2 227 2 364 2 142 1 
348 3 169 1 77 1 260 1 191 1 27 1 317 1 290 1 175 1 106 1 130 1 131 1 52 1 53 2 133 1 177 1 114 3 179 1 97 1 61 2 163 1 142 1 
348 3 169 1 260 1 191 1 27 1 193 1 317 1 290 1 175 1 106 1 130 1 131 1 52 1 53 3 133 1 177 1 114 3 115 1 179 1 97 1 61 1 163 1 309 1 142 1 
348 3 169 1 77 1 27 1 260 1 191 1 193 1 317 1 290 1 175 1 106 1 131 1 130 1 52 1 53 3 133 1 177 1 114 3 115 1 179 1 97 1 344 1 61 2 163 1 309 1 142 1 
1 1 191 1 193 5 10 1 290 1 106 1 53 6 52 1 55 1 111 1 157 1 158 1 114 5 341 1 115 5 344 4 61 7 163 1 17 2 65 1 309 4 69 1 348 5 311 1 74 1 169 1 77 4 170 2 27 3 260 1 264 1 317 1 268 2 175 1 131 1 130 1 133 1 177 1 271 1 179 1 97 1 40 2 364 2 142 1 
1 1 191 1 193 1 10 1 290 1 106 1 53 4 52 1 111 1 114 4 341 1 115 2 344 2 61 4 163 1 17 2 309 2 69 1 348 4 74 1 169 1 77 2 170 2 260 1 27 2 124 1 264 1 317 1 268 2 175 1 130 1 133 1 177 1 271 1 179 1 97 1 40 2 227 2 364 2 142 1 
1 1 348 4 311 1 74 1 169 1 77 2 170 2 27 2 260 1 191 1 193 1 264 1 10 1 317 1 268 2 290 1 175 1 106 1 130 1 52 1 53 4 55 1 133 1 177 1 111 1 271 1 158 1 114 4 341 1 115 1 179 1 344 2 97 1 61 4 40 2 17 2 163 1 364 2 309 2 142 1 69 1 
1 1 348 4 311 1 74 1 169 1 77 2 170 2 27 2 260 1 191 1 193 1 264 1 10 1 317 1 268 2 290 1 175 1 106 1 130 1 52 1 53 4 55 1 133 1 177 1 111 1 271 1 158 1 114 4 341 1 115 1 179 1 344 2 97 1 61 4 40 2 17 2 163 1 364 2 309 2 142 1 69 1 
1 1 328 2 348 4 312 1 169 1 77 2 170 2 27 2 260 1 191 1 193 1 262 1 264 1 10 1 317 1 290 1 175 1 106 1 130 1 52 1 53 4 110 1 133 1 177 1 111 1 271 1 158 1 114 4 341 1 115 1 179 1 344 2 97 1 61 4 163 1 225 2 227 2 364 2 309 2 142 1 69 1 
270 1 44 1 293 1 25 1 93 1 119 1 333 1 192 1 82 1 60 2 102 1 39 1 224 1 140 1 141 1 151 1 
154 1 21 1 42 1 211 1 109 1 13 1 2 1 119 1 298 1 192 1 82 1 60 2 102 2 224 1 140 1 66 1 141 1 151 1 354 1 
220 1 319 1 0 1 258 1 112 1 119 1 58 1 46 1 192 1 82 2 60 2 102 2 304 1 224 1 248 1 98 1 140 1 66 1 141 1 151 1 
42 1 119 1 192 1 300 1 82 1 60 2 102 2 224 1 140 1 275 1 141 1 151 1 50 1 354 1 32 1 
347 1 99 1 42 1 44 1 25 1 119 1 260 1 172 1 287 1 192 1 333 1 47 1 82 1 102 2 123 1 151 1 354 1 153 1 176 1 249 1 34 1 270 1 133 2 93 1 160 1 96 1 253 1 343 1 60 2 224 1 140 1 228 1 206 1 141 1 67 1 183 1 142 2 41 1 
0 1 42 10 99 2 44 3 236 2 46 1 286 2 240 4 333 1 192 3 287 2 334 1 102 20 248 1 151 3 49 7 153 1 249 1 109 2 112 1 58 4 160 7 298 2 253 2 343 1 60 6 203 2 206 2 67 1 66 3 21 2 22 1 211 3 25 3 119 3 260 1 172 2 261 2 82 10 173 1 354 1 319 1 220 8 176 2 270 1 34 2 133 3 93 3 96 2 37 1 180 2 224 3 98 1 140 3 183 1 141 3 184 7 142 3 41 2 
109 1 119 1 192 1 82 1 60 2 102 1 304 1 224 1 306 1 140 1 141 1 151 1 66 1 
42 1 211 1 119 1 298 1 192 1 60 2 102 1 304 1 224 1 226 1 140 1 141 1 151 1 
21 1 42 1 211 1 109 1 119 1 298 1 192 1 82 1 60 2 102 2 304 1 224 1 140 1 141 1 151 1 66 1 
109 1 293 1 119 1 192 1 82 1 60 2 102 1 224 1 306 1 140 1 141 1 151 1 66 1 
42 1 211 1 293 1 119 1 298 1 192 1 60 2 102 1 224 1 226 1 140 1 141 1 151 1 
21 1 42 1 211 1 109 1 293 1 119 1 298 1 192 1 82 1 60 2 102 2 224 1 140 1 141 1 151 1 66 1 
21 1 42 1 211 1 109 1 119 1 298 1 192 1 82 1 60 2 102 2 224 1 140 1 141 1 151 1 66 1 
44 1 270 1 203 1 93 1 25 1 
320 1 44 1 270 1 93 1 25 1 
21 1 42 1 211 1 109 1 119 1 298 1 192 1 82 1 60 2 102 2 224 1 140 1 141 1 151 1 66 1 354 1 
71 1 203 1 236 1 
154 1 21 1 42 1 211 1 109 1 13 1 214 1 119 1 298 1 192 1 82 1 60 2 102 2 224 1 140 1 66 1 141 1 151 1 354 1 
336 1 70 1 60 2 345 1 352 1 224 1 359 1 119 1 140 1 151 1 
336 1 70 1 60 2 345 1 352 1 224 1 359 1 119 1 140 1 151 1 
336 1 70 1 60 2 345 1 352 1 224 1 359 1 119 1 140 1 151 1 
336 1 70 1 60 2 345 1 352 1 224 1 359 1 119 1 140 1 151 1 
336 1 70 1 60 2 345 1 352 1 224 1 359 1 119 1 140 1 151 1 
43 1 150 1 121 1 356 1 145 1 19 1 79 1 360 1 284 1 126 1 
321 1 88 1 
355 1 150 1 330 1 85 1 145 1 19 1 360 1 284 1 126 1 
231 1 348 1 54 1 356 1 145 1 79 1 360 1 284 1 114 1 115 1 315 1 150 1 121 1 162 1 103 2 104 1 19 1 126 1 
231 1 348 1 54 1 356 1 145 1 79 1 360 1 284 1 114 1 115 1 315 1 150 1 121 1 162 1 103 2 104 1 19 1 126 1 
231 1 348 1 54 1 356 1 145 1 79 1 360 1 284 1 114 1 115 1 315 1 150 1 121 1 162 1 103 2 104 1 19 1 126 1 
178 1 187 1 266 1 
178 1 187 1 266 1 
349 1 135 1 
187 1 349 1 135 1 
342 1 208 1 
231 1 278 1 348 1 145 1 284 1 260 2 81 1 150 1 103 1 88 1 126 1 54 1 133 2 321 1 357 1 360 1 94 1 114 1 96 1 342 1 19 1 255 1 183 2 67 2 142 2 365 1 208 1 
178 1 266 1 
187 1 349 1 135 1 
210 1 167 1 256 2 42 1 44 2 25 2 119 1 260 2 287 1 172 1 192 1 333 1 82 1 100 1 102 2 9 1 151 1 30 1 335 1 354 1 176 1 133 2 93 2 343 1 60 2 39 1 224 1 140 1 206 1 141 1 142 2 
176 1 270 1 44 1 25 1 93 1 134 1 299 1 287 1 172 1 194 1 205 1 206 1 229 1 127 1 
257 1 24 1 44 1 283 1 25 1 93 1 134 1 189 1 144 1 324 1 287 1 37 1 83 1 215 1 84 1 18 2 206 1 229 1 
37 1 71 1 83 1 44 1 283 1 134 1 93 1 25 1 189 1 144 1 229 1 
257 1 24 1 44 1 25 1 93 1 189 1 144 1 324 1 287 1 37 1 122 1 83 1 215 1 84 1 18 2 206 1 229 1 
48 1 
337 1 1 1 271 1 340 1 341 1 193 1 115 1 264 1 10 1 69 1 
21 2 107 5 211 2 109 2 212 2 271 5 286 1 298 2 5 1 115 5 195 5 40 5 227 10 66 2 69 5 
348 1 61 1 27 1 114 1 115 1 193 1 
1 2 327 1 348 3 44 4 25 4 285 2 27 2 287 1 172 1 149 1 314 1 264 2 10 2 127 1 291 1 197 1 176 1 270 2 91 2 93 4 271 2 341 1 114 3 299 1 138 1 61 4 307 2 206 1 69 2 
337 1 258 1 271 1 340 1 115 1 193 1 69 1 
139 1 221 1 44 1 270 1 13 1 203 1 93 1 25 1 
1 1 107 2 91 1 271 1 112 1 341 1 193 2 115 4 195 2 40 2 307 1 227 4 264 1 10 1 69 2 
1 1 348 1 74 1 27 1 193 1 264 1 10 1 268 1 271 1 341 1 114 1 115 2 40 1 61 1 17 1 227 1 69 1 
327 1 1 4 232 2 44 1 190 2 4 3 286 2 193 2 287 1 5 2 245 1 195 6 10 4 337 1 107 6 109 2 251 2 340 1 341 4 114 5 298 2 115 8 253 1 61 5 307 1 62 1 206 2 66 2 69 8 21 2 348 5 71 1 211 2 212 2 25 1 27 3 172 6 120 2 264 4 176 1 91 2 270 1 93 1 271 9 136 2 323 2 179 2 40 6 363 1 227 12 274 1 
277 1 21 2 1 2 348 1 211 2 282 1 212 2 78 1 27 1 5 1 193 2 195 5 264 2 10 2 267 1 50 1 107 5 109 2 91 1 271 8 252 1 114 1 341 2 298 2 202 1 115 5 301 1 61 1 40 3 307 1 227 6 275 1 254 1 66 2 69 5 
0 1 1 1 11 1 348 1 211 1 55 1 13 1 212 2 271 2 46 1 114 1 341 1 139 1 125 1 247 1 264 1 98 1 10 1 66 1 69 1 
342 1 356 1 145 1 284 1 117 1 
145 1 289 1 284 1 
145 1 289 1 284 1 
145 1 289 1 284 1 
28 1 145 1 284 1 
28 1 145 1 284 1 
28 1 145 1 284 1 
145 1 284 1 
150 1 126 1 
220 5 42 5 0 1 70 1 211 2 119 1 46 2 58 3 240 2 82 5 60 2 102 10 224 1 247 1 98 2 140 1 151 1 66 2 
220 1 70 1 109 1 119 1 240 1 82 2 60 2 102 2 224 1 140 1 151 1 66 1 
220 2 21 1 42 2 70 1 211 1 109 1 119 1 58 1 298 1 240 1 82 2 60 2 102 4 224 1 140 1 151 1 66 1 
220 2 42 2 70 1 338 1 119 3 46 1 58 1 240 1 242 1 82 1 60 6 102 3 246 1 224 3 98 1 140 3 151 3 
21 3 0 2 42 18 70 1 211 5 282 1 119 5 46 3 240 5 242 2 351 1 82 16 102 34 246 1 248 1 151 5 50 4 31 1 319 1 220 12 109 3 338 1 358 1 297 1 112 1 58 7 298 3 60 10 273 1 224 5 98 3 140 5 275 3 66 5 
42 4 0 1 70 1 211 1 282 1 119 1 46 1 82 4 102 8 248 1 151 1 50 1 319 1 220 2 112 1 58 2 202 1 60 2 224 1 98 1 140 1 275 1 66 1 
21 1 0 1 42 5 70 1 211 1 282 1 119 2 46 1 240 1 82 6 102 11 248 1 151 2 50 2 31 1 319 1 220 3 109 1 297 1 112 1 58 2 202 1 60 4 224 2 98 1 140 2 275 1 66 2 
21 2 0 1 42 10 70 1 211 3 282 1 119 3 78 1 46 1 240 1 82 9 242 1 102 19 248 1 151 3 31 1 50 1 319 1 220 4 109 2 252 1 112 1 58 3 298 2 202 1 301 1 60 6 224 3 98 1 140 3 275 1 254 1 66 3 
21 2 0 1 42 7 70 1 211 2 282 1 119 3 78 1 46 1 240 2 242 1 82 10 102 17 248 1 151 3 31 1 50 1 319 1 220 5 109 2 252 1 112 1 58 3 298 1 202 1 301 1 60 6 224 3 98 1 140 3 275 1 254 1 66 3 
42 4 0 1 70 1 211 1 282 1 119 1 46 1 82 4 102 8 248 1 151 1 50 1 319 1 220 2 112 1 58 2 202 1 60 2 224 1 98 1 140 1 275 1 66 1 
21 2 42 6 70 1 211 2 282 1 119 1 78 1 240 1 82 6 102 12 151 1 50 1 220 2 109 2 252 1 58 1 298 2 202 1 301 1 60 2 224 1 140 1 275 1 254 1 66 2 
21 2 0 1 42 8 70 1 211 2 282 1 78 1 119 4 46 1 240 2 82 10 242 2 102 18 248 1 151 4 50 1 31 1 319 1 220 5 109 2 252 1 112 1 58 3 298 1 202 1 301 1 60 8 224 4 98 1 140 4 275 1 254 1 66 3 
21 3 42 7 70 1 211 2 282 1 78 1 119 4 240 3 82 9 242 2 102 16 246 1 151 4 50 1 220 6 109 3 252 1 58 3 298 2 202 1 301 1 60 8 224 4 140 4 275 1 254 1 66 3 
319 1 220 6 42 4 0 1 211 1 46 3 58 3 240 3 82 3 102 7 248 2 98 3 66 1 
21 2 0 1 42 8 70 1 211 2 282 1 78 1 119 4 46 1 240 1 82 10 242 2 102 18 246 1 248 1 151 4 50 1 319 1 220 4 109 2 252 1 112 1 58 3 298 1 202 1 301 1 60 8 224 4 98 1 140 4 275 1 254 1 66 3 
220 3 319 1 0 1 42 4 211 1 112 1 119 2 58 2 46 1 240 1 82 4 242 1 60 4 102 8 224 2 248 1 98 1 140 2 66 1 151 2 
319 1 220 2 42 3 258 1 0 1 211 1 112 1 46 1 58 2 82 3 102 6 248 1 98 1 66 1 
220 2 21 1 42 2 211 1 109 1 119 1 58 1 298 1 240 1 82 2 60 2 102 4 224 1 140 1 151 1 66 1 31 1 
21 1 220 2 42 4 211 1 282 1 109 1 297 1 58 1 298 1 240 1 82 3 102 7 275 1 66 1 50 2 
21 2 0 1 42 12 211 3 119 2 46 2 240 4 82 11 242 2 102 23 248 1 151 2 50 2 128 1 319 1 220 9 109 2 338 1 297 1 112 1 58 5 298 2 300 1 60 4 224 2 98 2 140 2 275 2 66 3 
42 1 102 1 50 1 
82 1 102 1 275 1 
21 1 220 3 42 3 211 1 109 1 119 1 58 2 286 1 240 1 298 1 82 3 60 2 102 6 224 1 140 1 151 1 66 1 31 1 
21 2 42 6 70 1 211 2 282 1 119 1 78 1 240 1 82 6 102 12 151 1 50 1 220 2 109 2 252 1 58 1 298 2 202 1 301 1 60 2 224 1 140 1 275 1 254 1 66 2 
220 2 0 1 42 3 211 1 46 1 58 1 240 1 82 3 102 6 98 1 66 1 
220 2 319 1 42 2 338 1 119 1 58 1 46 1 240 1 82 1 242 1 60 2 102 3 224 1 248 1 98 1 140 1 151 1 
96 1 133 1 168 1 260 1 317 1 142 1 105 1 
12 1 294 1 133 1 75 1 168 1 113 1 260 1 148 1 96 1 317 1 105 1 142 1 
33 1 71 1 176 1 270 1 44 1 25 1 93 1 201 1 299 1 287 1 172 1 253 1 303 1 206 2 276 1 
33 1 176 1 44 2 25 2 93 2 285 1 201 1 172 1 287 1 334 1 253 1 303 1 206 2 276 1 
257 1 215 1 44 1 270 1 18 1 93 1 25 1 206 1 324 1 287 1 
37 1 71 1 44 1 93 1 25 1 
71 1 44 1 270 1 93 1 25 1 
71 1 44 1 270 1 93 1 25 1 9 1 45 1 
258 1 176 1 44 1 270 1 93 1 25 1 206 1 299 1 287 1 172 1 127 1 
99 1 176 1 249 1 270 1 44 1 34 1 133 2 25 1 93 1 260 1 172 1 287 1 96 1 253 1 206 1 183 1 67 1 142 2 
99 1 23 1 44 1 25 1 285 1 260 2 191 1 287 1 172 3 106 1 52 2 249 1 176 2 34 1 133 2 93 1 96 1 253 2 204 1 206 1 182 1 67 2 183 1 142 2 
99 1 23 1 44 1 25 1 285 1 260 2 191 1 287 1 172 3 106 1 52 2 198 1 249 1 176 2 133 2 93 1 96 1 253 2 204 1 206 1 182 1 67 2 183 1 142 2 
348 2 23 1 44 1 25 1 239 1 285 1 171 1 4 1 287 1 172 4 193 1 125 1 11 1 176 1 13 1 251 1 93 1 114 2 115 1 253 1 139 1 179 1 61 1 204 1 206 1 
348 2 23 1 44 1 25 1 285 1 4 1 287 1 172 4 193 1 125 1 11 1 176 1 13 1 251 1 93 1 323 1 114 2 115 1 253 1 139 1 179 1 61 1 204 1 206 1 
89 1 44 1 93 1 25 1 206 1 287 1 
71 1 33 1 176 1 270 2 44 2 295 1 25 2 93 2 59 1 172 1 287 1 253 1 16 1 363 1 9 1 206 2 276 1 
71 1 249 1 133 1 119 1 260 1 192 1 60 2 224 1 140 1 151 1 183 1 67 1 141 1 142 1 30 1 354 1 
1 2 327 1 278 1 348 3 232 1 44 1 25 1 190 1 27 1 4 1 193 1 172 2 264 2 10 2 337 1 270 1 251 1 93 1 271 1 136 1 323 1 340 1 341 2 114 3 115 1 179 1 61 2 69 1 
89 1 71 1 176 1 44 1 251 1 25 1 93 1 172 2 287 1 253 1 62 1 363 1 206 2 
99 1 176 1 249 1 198 1 270 1 44 1 133 2 25 1 93 1 260 1 172 1 287 1 96 1 253 1 206 1 183 1 67 1 142 2 
33 1 176 1 44 1 295 1 25 1 93 1 285 1 172 1 287 1 253 1 363 1 206 2 276 1 
96 1 132 1 244 1 116 1 241 1 
106 1 278 1 348 2 329 1 52 1 132 2 222 1 332 1 191 1 114 2 115 1 193 1 241 2 96 1 161 1 179 1 116 1 244 2 290 1 
167 1 132 1 133 1 260 1 100 1 244 1 116 1 335 1 142 1 
116 1 222 1 332 1 
118 1 280 1 281 1 92 1 326 1 199 1 87 1 322 1 
118 1 280 2 234 1 281 4 92 2 36 1 322 1 147 1 361 1 326 3 265 1 64 2 87 4 209 1 
118 1 280 1 90 1 281 2 92 1 296 1 199 1 322 1 326 1 87 2 64 1 353 1 
118 1 280 1 361 2 234 1 73 1 281 3 92 1 326 1 199 1 265 2 87 3 322 1 
326 2 159 2 185 1 51 1 
118 1 302 1 281 1 199 1 87 1 322 1 
118 1 280 1 243 1 281 2 92 1 326 1 199 1 64 1 87 2 322 1 
219 1 
118 1 280 1 281 1 92 1 326 1 199 1 87 1 322 1 
258 1 280 1 92 1 326 1 
118 1 280 1 281 1 92 1 326 1 87 1 322 1 
263 1 339 1 87 1 
118 1 280 1 234 1 281 3 92 1 199 1 322 1 361 2 326 1 265 1 87 3 68 1 
118 1 280 1 281 2 92 1 326 1 56 1 64 1 87 2 322 1 
272 1 118 1 257 1 281 1 84 1 18 1 326 1 199 1 87 1 322 1 209 1 
118 1 280 1 281 1 326 1 199 1 87 1 322 1 
118 1 280 2 281 1 92 1 199 1 87 1 322 1 
186 1 166 1 118 2 280 1 6 1 281 2 326 1 199 1 87 2 322 2 
118 1 233 1 280 1 281 3 92 1 199 1 36 1 322 1 243 1 326 2 87 3 64 2 209 1 
118 1 257 1 280 1 24 1 281 2 92 1 199 1 322 1 80 1 324 1 84 1 326 1 18 2 87 2 64 1 
118 2 280 1 281 4 92 1 326 2 199 1 36 1 56 1 213 1 64 2 87 4 322 2 209 1 
118 1 280 1 281 3 92 1 199 1 322 1 361 1 243 1 326 1 64 1 87 3 
326 1 36 1 147 1 209 1 
280 1 326 1 

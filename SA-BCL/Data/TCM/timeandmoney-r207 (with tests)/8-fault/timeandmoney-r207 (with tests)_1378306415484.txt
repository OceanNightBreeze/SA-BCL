#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (89,213,231,234) (89,213,231,234) (89,213,231,234) 316 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (89,213,231,234) (89,213,231,234) (89,213,231,234) 316 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (89,213,231,234) (89,213,231,234) (89,213,231,234) 316 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (89,213,231,234) (89,213,231,234) (89,213,231,234) 316 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (89,213,231,234) (89,213,231,234) (89,213,231,234) 316 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (89,213,231,234) (89,213,231,234) (89,213,231,234) 316 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (89,213,231,234) (89,213,231,234) (89,213,231,234) 316 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (89,213,231,234) (89,213,231,234) (89,213,231,234) 316 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (89,213,231,234) (89,213,231,234) (89,213,231,234) 316 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 312 205 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 312 42 301 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 312 42 301 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 312 42 301 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 312 42 301 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 312 42 301 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (89,213,231,234) (89,213,231,234) (89,213,231,234) (81,93) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (89,213,231,234) (89,213,231,234) (89,213,231,234) 316 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (89,213,231,234) (89,213,231,234) (89,213,231,234) 316 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (89,213,231,234) (89,213,231,234) (89,213,231,234) (81,93) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (89,213,231,234) (89,213,231,234) (81,93) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 22 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 312 205 287 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 312 43 252 271 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 177 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 312 96 193 108 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 312 205 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 312 43 252 271 62 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 312 43 252 289 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 312 43 252 271 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 312 43 252 289 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 312 43 252 271 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 312 43 252 271 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 312 205 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 312 205 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 312 43 252 271 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 312 43 252 271 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 312 43 252 271 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 312 274 201 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 312 274 201 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 312 274 201 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 312 274 201 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 312 274 201 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 312 205 287 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 312 96 258 251 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 312 96 258 251 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 312 96 258 251 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 312 96 258 251 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 312 96 258 251 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 312 96 258 251 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 312 96 258 251 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 312 96 258 251 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 163 285 141 (59,218) (59,218) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 312 96 258 251 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 312 43 257 78 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 312 43 252 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 312 43 252 271 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 163 285 141 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 312 96 258 184 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 163 285 141 (59,218) (59,218) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 177 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 312 43 252 271 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 312 96 258 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 312 96 193 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 312 96 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 312 43 252 271 62 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 312 96 258 251 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 312 43 257 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 163 285 141 (59,218) (59,218) 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 312 43 257 (59,218) (59,218) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
25 1 231 1 89 1 234 1 316 1 
25 1 231 1 89 1 234 1 316 1 
25 1 231 1 89 1 234 1 316 1 
25 1 231 1 89 1 234 1 316 1 
25 1 231 1 89 1 234 1 316 1 
25 1 231 1 89 1 234 1 316 1 
25 1 231 1 89 1 234 1 316 1 
25 1 231 1 89 1 234 1 316 1 
25 1 231 1 89 1 234 1 316 1 
135 1 103 1 157 1 104 1 222 1 142 1 107 1 181 1 256 1 111 1 308 1 235 1 153 1 170 1 
40 1 
174 1 175 1 135 2 40 1 28 1 235 2 226 1 170 1 
174 1 175 1 135 5 119 1 40 1 226 2 185 2 52 1 306 1 283 2 232 1 114 1 235 5 288 2 154 1 170 2 117 1 156 1 131 1 
174 1 40 1 177 1 
51 1 
256 2 103 2 104 2 222 2 142 2 181 2 44 1 153 1 
172 1 171 1 38 1 103 2 276 1 104 2 222 2 142 3 181 3 182 1 44 1 10 1 189 1 197 1 198 1 236 2 153 1 292 1 86 1 118 1 120 1 204 1 158 1 205 1 245 1 61 1 162 2 211 2 255 1 95 1 256 2 66 1 27 1 312 1 313 1 315 1 36 1 
103 1 157 1 104 1 222 1 142 1 181 1 107 1 256 1 308 1 153 1 
270 1 174 1 135 1 103 1 40 1 104 2 222 1 77 1 142 2 107 2 181 2 49 1 190 1 111 1 235 1 200 1 153 1 244 1 157 1 256 1 308 1 
174 1 270 1 135 2 103 2 244 1 157 1 40 1 104 2 222 2 142 2 77 1 181 2 107 2 256 2 111 1 190 1 308 1 235 2 153 1 
135 1 235 1 106 1 226 1 170 1 
174 1 175 1 135 2 40 1 235 2 226 1 126 1 170 1 
135 1 235 1 226 1 
103 1 295 1 104 2 222 1 248 1 142 2 181 2 44 2 256 1 
164 1 224 1 99 1 
171 1 158 1 142 1 181 1 182 1 44 1 61 1 162 1 211 1 10 1 26 1 27 1 236 1 315 1 36 1 86 1 
177 1 44 1 
171 1 158 1 104 1 222 1 5 1 142 2 181 2 182 1 61 1 162 1 211 1 256 1 10 1 27 1 261 1 236 1 315 1 36 1 99 1 86 1 
256 3 103 1 104 3 261 1 222 3 142 3 181 3 44 1 
256 1 308 1 104 1 222 1 142 1 107 1 181 1 
103 1 295 1 104 1 222 1 142 1 248 1 181 1 107 1 256 1 
172 1 171 1 270 1 103 2 135 1 276 1 104 3 222 3 142 4 5 1 77 1 181 4 107 1 182 1 44 1 278 1 10 1 189 1 190 1 235 1 197 1 198 1 236 1 153 1 292 1 86 1 120 1 244 1 295 1 204 1 158 1 245 1 61 1 162 1 211 1 95 1 256 3 66 1 27 1 261 1 313 1 315 1 217 1 36 1 
256 1 104 2 222 1 261 1 160 1 142 2 181 2 200 1 44 1 
270 1 103 1 135 1 244 1 295 1 40 1 104 3 222 3 5 1 142 3 77 1 107 1 181 3 278 1 256 3 190 1 235 1 261 2 18 1 
256 1 103 1 295 1 104 1 222 1 142 1 181 1 99 1 
171 1 158 1 142 1 181 1 182 1 44 1 61 1 162 1 211 1 10 1 27 1 236 1 315 1 36 1 86 1 
171 1 158 1 142 1 181 1 44 1 162 1 211 1 10 1 27 1 311 1 236 1 315 1 97 1 36 1 86 1 
172 1 120 1 204 1 245 1 140 1 21 1 224 1 60 1 210 1 95 1 164 1 67 1 189 2 68 1 198 1 313 2 69 1 99 1 292 1 
104 1 222 1 142 1 77 1 181 1 107 1 94 1 256 1 
103 1 295 1 104 5 222 4 160 1 142 5 5 1 181 5 44 1 125 1 256 4 109 1 261 2 200 1 
256 1 308 1 104 1 222 1 142 1 107 1 181 1 
147 1 230 1 115 1 
148 1 230 2 149 1 115 2 169 1 116 1 
230 1 115 1 
230 1 115 1 
148 1 116 1 
148 1 116 1 
148 1 116 1 
230 1 167 1 115 1 
230 1 167 1 115 1 
230 1 167 1 115 1 
230 1 233 1 115 1 
230 1 233 1 115 1 
230 1 233 1 115 1 
135 2 203 1 40 1 176 1 297 1 90 2 300 2 280 2 84 1 188 1 165 2 230 2 149 1 235 2 30 3 115 2 314 2 152 1 290 1 
135 1 275 1 176 1 104 2 222 2 90 1 223 1 142 2 181 2 300 1 44 1 280 1 256 2 147 1 110 1 165 1 230 1 112 1 235 1 30 1 115 1 199 1 240 1 293 1 
102 2 229 1 29 1 92 2 291 1 
134 1 102 1 29 1 
134 1 102 1 229 1 
102 3 229 1 29 2 76 1 92 1 291 1 
102 2 229 1 29 1 262 1 92 1 291 1 
101 1 174 1 271 1 175 1 135 5 275 1 40 2 137 2 223 1 43 1 143 1 45 1 226 1 185 1 144 1 51 3 53 1 283 1 114 1 235 5 196 1 199 1 16 2 288 1 154 3 156 2 249 2 252 1 68 1 69 1 170 4 130 1 
101 2 174 1 271 3 135 9 175 1 136 1 40 5 106 5 43 3 143 1 226 6 185 2 51 9 53 2 283 2 113 1 235 9 114 1 196 3 284 5 199 4 16 6 288 2 154 8 156 6 119 1 57 1 249 6 122 1 250 1 252 3 214 1 68 3 69 3 170 7 
101 1 174 1 103 1 135 3 271 1 40 2 104 1 137 1 222 1 142 1 107 1 181 1 43 1 144 1 185 1 51 3 111 1 53 1 283 1 235 3 196 1 199 1 288 1 16 2 153 1 154 3 156 2 119 1 157 1 249 2 252 1 256 1 308 1 68 1 69 1 170 2 130 1 
135 4 137 2 222 1 142 1 144 1 235 4 16 4 154 5 153 1 156 4 157 1 249 4 250 1 252 2 256 1 170 3 101 1 174 1 271 2 103 1 40 3 104 1 107 1 181 1 43 2 185 1 51 6 53 1 111 1 283 1 113 1 196 2 199 2 288 1 119 1 57 1 308 1 68 2 69 2 130 1 
194 1 
177 1 70 1 315 1 
272 1 315 1 
158 1 315 1 
158 1 192 1 74 1 70 2 315 3 86 1 
158 1 315 1 86 1 
315 1 23 1 
42 1 312 1 17 1 301 1 266 1 
42 1 312 1 301 1 266 1 
42 1 312 1 301 1 266 1 
42 1 312 1 301 1 266 1 
42 1 312 1 301 1 266 1 
81 1 25 1 231 1 89 1 234 1 
25 1 231 1 89 1 234 1 316 1 
25 1 231 1 89 1 234 1 316 1 
81 1 25 1 231 1 89 1 234 1 
25 1 89 1 93 1 213 1 
31 1 
135 3 4 1 142 1 77 1 226 2 9 1 80 1 10 1 235 3 236 2 150 1 15 1 154 2 156 2 243 1 244 1 158 1 161 1 162 2 253 1 259 1 27 2 36 1 101 1 270 1 174 1 175 1 40 2 104 1 277 1 181 1 107 1 279 2 185 1 49 1 51 1 186 1 190 1 283 1 114 1 196 1 200 1 288 1 58 1 298 1 209 1 211 2 215 1 315 1 129 1 128 1 
270 1 174 1 175 1 135 3 40 1 104 1 142 1 77 1 181 1 107 1 226 2 279 2 49 1 80 1 190 1 235 3 237 1 200 1 150 1 243 1 244 1 58 1 161 1 28 1 
243 1 174 1 270 1 135 2 244 1 40 1 58 1 104 1 77 1 142 1 107 1 181 1 161 1 279 3 49 1 80 1 190 1 235 2 150 1 200 1 98 1 
270 1 174 1 175 1 135 3 40 1 104 1 142 1 77 1 181 1 107 1 226 2 279 3 49 1 80 1 190 1 235 3 237 1 200 1 150 1 243 1 244 1 88 1 58 1 161 1 28 1 98 1 
135 5 222 1 77 1 142 2 226 7 7 1 9 1 80 1 235 5 237 4 150 1 153 1 154 1 156 1 243 1 244 1 88 4 157 1 91 1 161 1 253 1 256 1 28 1 259 2 98 3 267 1 269 2 174 3 270 1 103 1 175 3 40 3 104 2 277 2 107 2 181 2 279 5 185 1 49 1 111 1 190 1 283 1 114 1 196 2 200 1 288 1 58 1 209 2 212 1 305 1 308 1 
270 1 174 1 135 2 40 2 104 1 277 1 142 1 77 1 181 1 107 1 279 2 185 1 9 1 49 1 80 1 51 1 190 1 283 1 114 1 235 2 196 1 150 1 200 1 288 1 154 1 156 1 243 1 244 1 58 1 161 1 209 1 253 1 215 1 259 1 
269 2 270 1 174 2 175 2 135 4 40 2 104 1 277 2 142 1 77 1 181 1 107 1 226 4 7 1 279 4 185 1 9 1 49 1 80 1 190 1 283 1 235 4 114 1 196 2 237 2 200 1 150 1 288 1 154 1 156 1 243 1 88 2 244 1 58 1 91 1 161 1 209 2 253 1 259 2 98 2 267 1 
269 2 270 1 174 2 175 2 135 4 40 2 104 1 277 2 142 1 77 1 181 1 107 1 226 4 7 1 279 4 185 1 9 1 49 1 80 1 190 1 283 1 235 4 114 1 196 2 237 2 200 1 150 1 288 1 154 1 156 1 243 1 88 2 244 1 58 1 91 1 161 1 209 2 253 1 259 2 98 2 267 1 
243 1 174 1 270 1 135 2 244 1 40 1 58 1 104 1 77 1 142 1 107 1 181 1 22 1 161 1 279 2 49 1 80 1 190 1 235 2 150 1 200 1 
269 2 270 1 174 2 175 2 135 4 40 2 104 1 277 2 142 1 77 1 181 1 107 1 7 1 226 5 279 5 185 1 9 1 49 1 80 1 190 1 283 1 114 1 235 4 196 2 237 3 200 1 150 1 288 1 154 1 156 1 243 1 244 1 88 3 58 1 91 1 161 1 209 2 253 1 305 1 259 2 267 1 98 3 
269 2 270 1 174 2 175 2 135 4 40 2 104 1 277 2 142 1 77 1 181 1 107 1 7 1 226 5 279 5 185 1 9 1 49 1 80 1 190 1 283 1 114 1 235 4 196 2 237 3 200 1 150 1 288 1 154 1 156 1 243 1 244 1 88 3 58 1 91 1 161 1 209 2 253 1 305 1 259 2 267 1 98 3 
135 4 77 1 142 1 226 4 80 1 83 2 235 4 237 2 150 1 154 1 156 1 243 1 244 1 88 2 19 1 161 1 253 1 259 2 98 2 174 2 270 1 175 2 40 2 104 1 277 2 107 1 181 1 279 4 185 1 49 1 51 2 190 1 283 1 114 1 200 1 288 1 202 2 58 1 215 1 
172 1 120 1 204 1 205 1 245 1 162 1 211 1 95 1 27 1 198 1 236 1 312 1 287 1 71 1 292 1 
172 1 271 1 120 1 103 1 295 1 204 1 104 1 245 1 222 1 142 1 181 1 43 1 252 1 95 1 256 1 168 1 198 1 312 1 33 1 292 1 
172 1 120 1 204 1 245 1 177 1 141 1 59 1 43 1 60 1 210 1 95 1 67 1 257 1 198 1 312 1 285 1 218 1 292 1 
172 1 221 1 120 1 204 1 245 1 108 1 224 1 95 1 164 1 189 1 193 1 96 1 198 1 312 1 313 1 33 1 99 1 292 1 
172 1 120 1 204 1 205 1 276 1 104 1 245 1 222 1 5 1 142 1 181 1 254 1 256 1 95 1 189 1 261 1 198 1 312 1 286 1 313 1 33 1 292 1 
171 1 172 2 271 1 104 1 276 1 222 1 142 2 5 1 181 2 43 1 182 1 224 1 79 1 10 1 189 2 197 1 195 1 198 2 236 1 86 1 292 2 120 2 158 1 204 2 245 2 61 1 162 1 252 1 211 1 62 1 95 2 256 1 164 1 27 1 310 1 261 1 312 1 313 2 33 1 315 1 263 1 36 1 99 1 
95 1 172 1 120 1 204 1 245 1 198 1 312 1 43 1 60 1 252 1 289 1 292 1 
172 1 120 1 204 1 245 1 140 1 224 1 60 1 210 1 95 1 164 1 67 1 189 2 68 1 198 1 313 2 69 1 99 1 292 1 
95 1 172 1 271 1 120 1 204 1 245 1 198 1 312 1 43 1 60 1 252 1 292 1 
95 1 172 1 120 1 204 1 245 1 198 1 312 1 43 1 71 1 252 1 289 1 292 1 
172 1 120 1 204 1 245 1 140 1 224 1 210 1 95 1 164 1 67 1 189 2 68 1 198 1 313 2 69 1 71 1 99 1 292 1 
95 1 172 1 271 1 120 1 204 1 245 1 198 1 312 1 43 1 71 1 252 1 292 1 
95 1 172 1 271 1 120 1 204 1 245 1 198 1 312 1 43 1 252 1 292 1 
171 1 172 1 276 1 142 1 181 1 182 1 44 1 10 1 189 1 197 1 236 1 198 1 86 1 292 1 120 1 158 1 204 1 205 1 245 1 61 1 162 1 211 1 95 1 27 1 312 1 313 1 315 1 36 1 
171 1 172 1 276 1 142 1 181 1 44 1 10 1 189 1 236 1 198 1 86 1 292 1 120 1 158 1 204 1 205 1 245 1 299 1 162 1 211 1 95 1 27 1 311 1 312 1 313 1 315 1 97 1 36 1 
95 1 172 1 271 1 120 1 204 1 245 1 198 1 312 1 33 1 43 1 252 1 292 1 
171 1 172 1 271 1 142 1 181 1 43 1 182 1 79 1 10 1 197 1 236 1 198 1 86 1 292 1 120 1 158 1 204 1 245 1 61 1 162 1 252 1 211 1 24 1 95 1 312 1 315 1 36 1 
172 1 271 1 120 1 103 1 295 1 204 1 104 1 245 1 222 1 142 1 181 1 43 1 252 1 95 1 256 1 127 1 198 1 312 1 33 1 292 1 
120 1 274 1 245 1 124 1 95 1 82 1 189 1 198 1 312 1 313 1 35 1 201 1 241 1 292 1 
120 1 274 1 245 1 124 1 95 1 82 1 189 1 198 1 312 1 313 1 35 1 201 1 241 1 292 1 
120 1 274 1 245 1 124 1 95 1 82 1 189 1 198 1 312 1 313 1 35 1 201 1 241 1 292 1 
120 1 274 1 245 1 124 1 95 1 82 1 189 1 198 1 312 1 313 1 35 1 201 1 241 1 292 1 
120 1 274 1 245 1 124 1 95 1 82 1 189 1 198 1 312 1 313 1 35 1 201 1 241 1 292 1 
230 1 165 1 149 1 90 1 115 1 238 1 300 1 152 1 290 1 280 1 
147 1 240 1 
0 1 294 1 230 1 165 1 90 1 247 1 115 1 300 1 280 1 
135 1 40 1 176 1 297 1 90 1 300 1 280 1 84 1 188 1 165 1 230 1 149 1 235 1 30 2 115 1 314 1 152 1 290 1 
135 1 40 1 176 1 297 1 90 1 300 1 280 1 84 1 188 1 165 1 230 1 149 1 235 1 30 2 115 1 314 1 152 1 290 1 
135 1 40 1 176 1 297 1 90 1 300 1 280 1 84 1 188 1 165 1 230 1 149 1 235 1 30 2 115 1 314 1 152 1 290 1 
167 1 309 1 169 1 
167 1 309 1 169 1 
187 1 233 1 
187 1 233 1 169 1 
112 1 293 1 
135 1 275 1 104 2 222 2 142 2 223 1 181 2 44 1 280 1 281 1 147 1 230 1 110 1 235 1 112 1 115 1 199 1 240 1 293 1 297 1 90 1 300 1 256 2 165 1 30 1 314 1 170 1 
167 1 309 1 
187 1 233 1 169 1 
100 1 172 1 120 1 204 1 205 1 104 2 245 1 142 2 20 1 181 2 123 1 303 1 95 1 198 1 312 1 33 1 287 1 292 1 
56 1 158 1 162 1 211 1 146 1 10 1 186 1 27 1 236 1 315 1 239 1 36 1 268 1 129 1 
133 1 134 1 102 2 56 1 139 1 76 1 162 1 211 1 146 1 10 1 229 1 191 1 29 1 260 1 236 1 85 1 36 1 72 1 
133 1 134 1 102 2 56 1 139 1 76 1 162 2 211 2 24 1 146 1 10 1 229 1 191 1 29 1 260 1 236 2 85 1 36 1 72 1 
133 1 134 1 102 2 56 1 73 1 139 1 76 1 162 1 211 1 10 1 229 1 191 1 29 1 236 1 85 1 36 1 72 1 
1 1 
174 1 40 1 185 1 52 1 283 1 114 1 288 1 154 1 131 1 156 1 
271 1 40 1 249 2 43 1 252 1 51 3 196 1 68 1 69 1 16 2 154 2 156 2 
174 1 135 1 175 1 40 1 235 1 226 1 
101 2 175 2 135 3 4 1 226 4 47 1 185 2 10 1 186 1 283 2 114 1 235 3 236 4 288 2 154 2 87 1 156 2 119 1 158 1 298 1 246 2 162 4 211 4 27 2 315 1 36 1 128 2 129 1 220 1 
174 1 52 1 40 1 177 1 154 1 156 1 131 1 
40 1 209 1 185 1 9 1 51 1 283 1 114 1 196 1 288 1 154 1 156 1 
135 5 226 5 10 2 235 5 236 1 14 2 16 6 154 8 86 1 156 7 158 1 159 2 249 6 162 1 252 2 27 1 264 1 36 1 101 2 174 1 173 2 272 3 175 3 271 2 40 7 39 2 179 2 43 2 185 3 51 12 190 2 283 3 192 1 114 3 196 6 288 3 121 1 208 2 211 1 62 2 68 2 70 2 69 2 315 6 128 1 219 1 
221 1 174 1 135 1 175 1 271 2 39 1 40 4 43 2 226 1 185 2 145 1 50 1 51 6 283 2 235 1 114 2 196 3 16 5 288 2 151 1 154 7 156 4 249 5 251 1 252 2 63 1 258 1 68 2 96 1 69 2 34 1 
135 1 103 1 39 2 104 1 141 1 222 1 142 1 107 1 181 1 43 2 185 1 78 1 111 1 283 1 114 1 235 1 285 1 288 1 154 2 153 1 242 1 156 2 157 1 91 1 256 1 257 1 308 1 69 1 
171 1 172 1 103 2 276 1 104 2 222 2 142 3 181 3 182 1 44 1 10 1 189 1 197 1 198 1 236 1 153 1 292 1 86 1 120 1 158 1 204 1 245 1 61 1 162 1 211 1 95 1 256 2 66 1 27 1 313 1 315 1 36 1 
101 1 174 2 40 4 42 1 249 2 185 1 51 4 283 1 114 1 196 2 16 2 288 1 154 1 128 1 156 2 
282 1 90 1 300 1 152 1 293 1 
227 1 90 1 300 1 
227 1 90 1 300 1 
227 1 90 1 300 1 
65 1 90 1 300 1 
65 1 90 1 300 1 
65 1 90 1 300 1 
90 1 300 1 
230 1 115 1 
221 1 120 1 245 1 251 1 124 1 95 1 189 1 258 1 198 1 96 1 312 1 313 1 292 1 
221 1 120 2 245 2 251 1 124 1 95 2 189 1 307 1 258 1 96 1 198 2 312 1 313 1 292 2 
221 1 120 1 245 1 251 1 124 1 95 1 189 1 258 1 198 1 96 1 312 1 313 1 292 1 
221 1 120 1 245 1 251 1 124 1 95 1 189 1 258 1 198 1 96 1 312 1 313 1 292 1 
221 1 120 1 245 1 251 1 124 1 95 1 189 1 258 1 198 1 96 1 312 1 313 1 292 1 
221 1 120 1 245 1 251 1 124 1 95 1 189 1 258 1 198 1 96 1 312 1 313 1 292 1 
221 1 120 2 245 2 251 1 124 1 95 2 189 1 307 1 258 1 96 1 198 2 312 1 313 1 292 2 
221 1 120 2 245 2 207 1 251 1 124 1 95 2 189 1 258 1 96 1 198 2 312 1 313 1 292 2 
67 1 141 1 285 1 59 1 210 1 163 1 218 1 
221 1 120 2 245 2 207 1 251 1 124 1 95 2 189 1 258 1 96 1 198 2 312 1 313 1 292 2 
67 1 257 1 141 1 312 1 285 1 43 1 210 1 78 1 
95 1 120 1 245 1 198 1 312 1 43 1 252 1 124 1 292 1 
95 1 271 1 120 1 245 1 198 1 312 1 43 1 252 1 124 1 292 1 
120 2 245 2 141 1 207 1 124 1 210 1 163 1 95 2 67 1 198 2 285 1 292 2 
221 1 120 3 245 3 207 1 124 1 184 1 95 3 189 1 307 1 258 1 96 1 198 3 312 1 313 1 292 3 
120 2 245 2 141 1 6 1 59 1 210 1 163 1 95 2 67 1 198 2 285 1 218 1 292 2 
67 1 257 1 141 1 177 1 312 1 285 1 59 1 43 1 210 1 218 1 
95 1 271 1 120 1 245 1 307 1 198 1 312 1 43 1 252 1 292 1 
221 1 189 1 258 1 96 1 312 1 313 1 
221 1 189 1 193 1 96 1 312 1 313 1 
221 1 189 1 313 1 
96 1 312 1 
271 1 189 1 312 1 313 1 43 1 252 1 62 1 
221 1 120 1 245 1 251 1 124 1 95 1 189 1 258 1 198 1 96 1 312 1 313 1 292 1 
257 1 312 1 43 1 
120 1 245 1 141 1 6 1 59 1 210 1 163 1 95 1 67 1 189 1 166 1 198 1 285 1 313 1 218 1 292 1 
104 1 160 1 142 1 32 1 181 1 200 1 44 1 
132 1 138 1 104 1 41 1 160 1 142 1 181 1 44 1 64 1 32 1 200 1 54 1 
158 1 162 4 211 4 302 1 24 1 10 1 186 1 27 1 236 4 315 1 36 1 129 1 37 1 
273 1 2 1 158 1 75 1 246 1 180 1 162 2 211 2 10 2 216 1 236 2 315 1 36 1 86 1 
134 1 102 1 10 1 229 1 191 1 27 1 236 1 162 1 36 1 211 1 
158 1 105 1 139 1 178 1 162 2 211 2 24 1 10 1 236 2 315 1 36 1 
158 2 178 1 246 1 162 4 8 1 211 5 302 1 24 1 186 1 10 2 11 1 27 1 236 5 315 3 36 2 129 1 
158 2 178 1 246 1 162 4 8 1 211 5 302 1 24 1 186 1 10 2 27 1 236 5 315 3 265 1 36 2 129 1 
10 1 186 1 158 1 27 1 177 1 236 1 315 1 162 1 36 1 211 1 129 1 
171 1 158 1 104 1 222 1 142 2 181 2 182 1 44 1 162 1 211 1 256 1 10 1 27 1 261 1 236 1 315 1 36 1 86 1 
171 1 270 1 158 2 104 2 222 2 77 1 142 2 246 1 107 1 181 2 182 1 44 1 162 1 211 1 23 1 256 1 10 1 261 1 236 1 315 3 155 1 36 1 86 2 
171 1 270 1 104 2 222 2 142 2 77 1 181 2 107 1 44 1 10 1 236 2 155 1 86 2 158 2 246 1 162 2 211 2 23 1 256 1 261 1 315 3 97 1 36 1 37 1 
174 1 272 1 135 2 40 1 3 1 226 1 183 1 10 1 190 1 235 2 236 3 155 1 86 1 158 1 246 1 162 3 211 3 23 1 27 1 70 1 315 4 36 1 37 1 
174 1 135 2 272 1 40 1 158 1 246 1 179 1 162 3 226 1 211 3 23 1 10 1 190 1 27 1 235 2 236 3 70 1 315 4 155 1 36 1 37 1 86 1 
10 1 236 1 162 1 55 1 36 1 211 1 
158 2 139 1 75 1 178 1 206 1 180 1 8 1 162 6 211 7 24 1 10 3 11 1 27 2 192 1 12 1 236 7 315 3 55 1 36 2 118 1 86 1 
171 1 172 2 100 1 104 1 141 1 222 1 142 2 181 2 43 1 182 1 79 1 10 1 195 1 197 1 198 2 236 1 285 1 86 1 292 2 120 2 158 1 204 2 245 2 59 1 61 1 162 1 210 1 211 1 24 1 95 2 256 1 67 1 257 1 261 1 312 1 33 1 315 1 36 1 218 1 
174 1 173 1 135 3 272 1 175 1 40 1 179 1 226 2 185 2 52 1 190 1 283 2 114 2 235 3 236 1 288 2 154 1 156 1 159 1 162 1 208 1 211 1 27 1 70 1 315 2 170 1 131 1 220 1 
158 1 162 2 211 2 24 1 10 2 192 1 236 2 70 1 315 2 264 1 55 1 36 1 86 1 
171 1 158 1 104 1 222 1 142 2 181 2 44 1 162 1 211 1 256 1 10 1 27 1 261 1 236 1 315 1 97 1 36 1 86 1 
158 1 75 1 246 1 180 1 162 1 211 1 10 2 192 1 12 1 236 1 315 1 36 1 86 1 
296 1 104 1 142 1 20 1 181 1 13 1 123 1 303 1 304 1 
296 1 46 1 48 1 
228 1 296 1 13 1 44 1 304 1 
270 1 174 1 103 1 135 2 40 1 104 1 222 1 142 1 77 1 181 1 107 2 225 1 278 1 46 1 48 1 228 1 190 1 111 1 235 2 13 1 153 1 244 1 296 1 157 1 304 1 256 1 308 1 170 1 

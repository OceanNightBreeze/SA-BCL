#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 194 25 30 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 194 25 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 206 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 194 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 194 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 194 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 194 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 194 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 194 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 194 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5972 | <= -> !=
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
20 2 22 2 296 2 110 2 245 1 298 1 113 1 201 1 302 1 170 1 209 5 274 1 341 1 10 9 252 1 125 2 177 2 153 1 98 9 33 1 310 6 127 1 311 4 16 1 348 1 57 3 289 1 355 2 
20 2 296 2 22 2 110 2 245 1 298 1 113 1 201 1 302 1 170 1 209 5 274 1 341 1 10 9 252 1 125 2 177 2 153 1 98 9 33 1 310 6 127 1 311 4 16 1 348 1 57 3 289 1 355 2 
20 2 296 2 22 2 110 2 245 1 298 1 113 1 201 1 302 1 170 1 209 6 274 1 341 1 10 10 252 1 125 2 177 2 153 1 98 10 33 1 310 7 127 1 311 5 16 1 348 1 57 4 289 1 355 2 
20 1 296 2 22 2 110 2 245 1 298 1 113 1 201 1 302 1 170 1 209 4 341 1 10 7 252 1 125 2 177 2 153 1 98 7 33 1 310 4 127 1 311 3 16 1 348 1 57 2 289 1 355 2 
252 1 20 2 110 1 125 1 22 1 296 1 177 1 98 4 310 3 201 1 311 2 16 1 348 1 57 1 289 1 209 3 274 1 10 4 
125 1 22 1 110 1 177 1 245 1 298 1 98 2 155 1 201 1 16 1 348 1 234 1 239 1 209 1 355 1 10 2 
125 2 22 2 98 3 310 1 201 1 311 1 16 1 348 1 57 1 209 2 341 1 355 1 10 3 
20 2 22 2 296 1 110 1 201 1 168 1 209 5 274 1 341 1 10 9 252 1 125 2 153 1 177 1 98 9 310 7 127 1 311 4 16 1 348 1 57 3 83 1 289 1 355 1 
20 2 22 2 296 1 110 1 201 1 168 1 209 5 274 1 341 1 10 9 252 1 125 2 153 1 177 1 98 9 310 7 127 1 311 4 16 1 348 1 57 3 83 1 289 1 355 1 
237 1 288 1 240 1 
338 1 
37 2 347 2 75 2 7 2 335 2 2 2 6 1 283 1 
198 2 335 2 42 1 222 1 2 3 112 2 297 1 137 1 6 1 266 1 143 1 44 1 300 1 225 1 7 2 72 1 52 1 275 1 277 1 278 2 227 1 75 2 175 2 342 1 345 1 96 1 100 1 283 1 37 2 347 3 235 1 328 1 158 1 330 1 258 2 133 1 260 1 
37 1 347 1 75 1 7 1 335 1 336 1 106 1 2 1 191 1 283 1 
2 1 78 1 185 1 286 1 347 1 204 1 237 1 270 1 167 1 119 1 7 1 106 1 240 1 251 1 
75 1 335 1 2 1 78 1 37 1 286 1 347 1 237 1 167 2 270 2 119 1 7 1 106 1 240 1 251 1 
167 1 270 1 210 1 219 1 319 1 
237 1 167 2 270 2 85 1 240 1 219 1 319 1 35 1 
167 1 270 1 319 1 
75 1 335 1 336 1 2 1 191 1 283 1 37 1 347 1 270 1 167 1 7 1 71 1 106 1 219 1 
237 1 
237 1 167 2 270 2 339 1 240 1 219 1 319 1 35 1 
109 1 176 1 221 1 184 1 99 1 142 1 35 1 237 1 270 5 167 5 58 2 159 1 303 1 73 2 240 1 219 2 305 1 319 2 107 2 
288 1 6 1 
75 1 335 1 2 2 6 2 37 1 347 2 205 1 238 1 7 2 
255 1 212 1 164 1 
227 1 198 1 175 1 2 1 112 1 345 1 297 1 6 1 266 1 100 1 347 1 236 1 225 1 275 1 133 1 260 1 
53 2 75 3 335 1 64 1 2 3 6 1 203 1 37 3 347 3 205 1 7 3 106 1 
37 2 347 2 75 2 312 1 7 2 336 1 106 1 2 2 
53 1 227 1 75 1 198 1 175 1 212 1 64 1 2 2 112 1 345 1 297 1 266 1 100 1 37 1 347 2 225 1 7 1 260 1 133 1 275 1 
53 1 37 3 347 3 75 3 335 1 7 3 2 3 6 1 
37 1 347 1 75 1 7 1 336 1 106 1 2 1 
37 1 347 1 205 1 75 1 238 1 7 1 335 1 106 1 2 1 
198 1 335 2 64 1 42 1 222 1 2 4 112 1 297 1 137 1 6 1 266 1 143 1 44 1 300 1 205 1 225 1 270 1 167 1 119 1 7 3 251 1 275 1 53 1 278 2 227 1 75 3 175 1 342 1 345 1 78 1 100 1 283 1 37 3 286 1 347 4 328 1 158 1 106 1 291 1 330 1 258 1 294 1 260 1 133 1 
37 1 53 1 347 2 204 1 75 1 7 2 2 2 6 1 213 1 
53 2 321 1 75 3 335 1 64 1 2 3 78 1 37 3 286 1 347 3 205 1 237 1 167 1 270 1 119 1 7 3 106 1 294 1 251 1 
53 1 75 2 335 1 212 1 2 2 37 2 347 2 255 1 205 1 7 2 
227 1 198 1 175 1 2 1 112 1 345 1 297 1 6 1 266 1 100 1 347 1 225 1 275 1 133 1 260 1 
227 1 198 1 175 1 2 1 112 1 297 1 6 1 308 1 266 1 100 1 347 1 225 1 318 1 133 1 260 1 
278 2 212 1 342 2 31 1 42 1 222 1 137 1 246 1 164 1 55 1 186 1 300 1 255 1 187 1 189 1 158 1 89 1 330 1 258 2 
37 1 347 1 75 1 312 1 7 1 106 1 2 1 251 1 
247 1 108 1 
247 1 108 1 
242 1 282 1 
242 1 282 1 
242 1 282 1 
307 1 247 1 108 1 
307 1 247 1 108 1 
124 1 247 1 108 1 
242 1 111 1 19 1 247 2 282 1 108 2 
307 1 247 1 108 1 
102 1 247 1 108 1 
102 1 247 1 108 1 
102 1 247 1 108 1 
249 1 167 1 270 1 194 1 182 1 30 1 25 1 247 1 108 1 
249 1 194 1 182 1 25 1 247 1 108 1 
110 1 296 1 177 1 
110 1 177 1 239 1 
296 2 177 3 239 1 114 1 333 1 223 1 
296 1 231 1 177 2 239 1 333 1 223 1 
296 1 177 2 239 1 333 1 223 2 
109 3 221 2 199 1 264 1 338 3 248 1 115 1 268 1 68 1 167 5 270 5 190 2 73 1 123 1 89 1 319 1 11 1 12 1 323 1 29 1 176 1 154 1 55 1 56 1 35 1 58 1 237 2 351 2 130 2 219 4 240 1 107 1 
109 8 221 6 66 1 264 1 338 9 248 3 142 1 115 2 116 1 68 4 167 9 270 9 190 6 73 2 89 3 210 5 319 6 11 3 12 2 323 3 29 3 94 1 176 1 126 1 97 1 55 3 35 1 237 5 58 2 160 5 130 6 256 1 219 7 240 1 107 2 
109 3 221 2 248 1 338 4 142 1 115 1 268 1 68 1 167 3 270 3 190 2 73 1 89 1 12 1 11 1 323 2 29 1 55 1 56 1 237 3 58 1 351 1 130 2 240 1 219 2 107 1 
109 5 221 4 338 7 248 2 142 1 115 1 116 1 268 1 68 2 167 4 270 4 190 4 73 1 89 2 12 1 11 2 323 3 29 2 94 1 97 1 55 2 56 1 237 4 58 1 351 2 130 4 240 1 219 3 107 1 
288 1 50 1 100 1 
316 1 100 1 
233 1 
227 1 297 1 100 1 
220 1 100 1 
297 1 100 1 
117 1 227 1 297 1 50 2 100 3 192 1 
163 1 63 1 228 1 29 1 342 3 246 3 138 1 186 2 214 2 216 1 72 4 89 1 161 1 51 1 258 7 293 1 259 1 
163 1 63 1 228 1 29 1 342 3 246 3 138 1 186 2 214 2 216 1 72 4 89 1 161 1 51 1 258 7 293 1 259 1 
163 1 63 1 228 1 29 1 342 3 246 3 138 1 186 2 301 1 214 2 216 1 72 4 89 1 161 1 51 1 258 7 293 1 259 1 
63 5 163 9 42 1 222 1 1 1 138 5 246 17 248 3 186 8 300 1 166 1 88 1 46 1 121 1 72 19 89 6 51 2 147 3 74 1 11 3 278 2 228 2 29 6 342 18 55 3 180 1 15 4 156 1 214 2 158 1 216 2 161 1 293 1 258 37 259 1 
63 1 163 1 241 1 228 1 278 4 29 1 342 4 343 1 42 2 222 2 138 1 246 4 186 3 300 2 214 2 46 1 158 2 216 1 72 5 89 1 161 1 51 1 258 9 259 1 
62 1 198 1 110 1 296 1 22 1 84 1 112 1 140 1 114 1 266 1 201 1 145 1 209 1 10 2 9 1 93 1 175 1 125 1 177 2 98 2 310 1 254 1 16 1 348 1 193 1 105 1 239 1 355 1 132 1 133 1 
62 1 198 1 110 1 296 1 22 1 84 1 112 1 24 1 114 1 140 1 266 1 201 1 202 1 145 1 209 1 10 3 93 1 175 1 125 1 177 2 98 3 310 2 254 1 80 1 348 1 193 1 239 1 355 1 132 1 133 1 
62 1 198 1 84 1 296 1 110 1 112 1 24 1 140 1 114 1 266 1 201 1 202 1 145 1 209 1 10 2 175 1 177 2 98 2 310 2 348 1 193 1 239 1 355 1 132 1 133 1 
198 1 175 1 125 1 22 1 344 1 112 1 297 1 98 1 140 2 266 1 100 1 224 1 80 1 193 2 225 1 287 1 60 1 353 1 332 1 355 2 133 1 10 1 132 2 
62 1 198 1 110 1 296 1 22 1 84 1 112 1 140 1 114 1 266 1 202 1 145 1 10 1 9 1 93 1 175 1 125 1 177 2 98 1 254 1 16 1 193 1 239 1 355 1 132 1 133 1 
59 1 
135 2 261 1 221 2 263 1 2 1 3 2 185 1 5 4 266 1 225 2 270 5 271 1 7 1 90 1 226 1 48 1 317 2 8 2 319 6 12 1 323 2 13 2 150 1 325 1 100 1 286 1 237 2 58 1 329 1 60 1 106 1 240 1 332 1 107 1 109 2 198 2 112 2 297 1 338 2 204 1 167 5 119 1 73 1 340 2 251 1 253 2 175 2 176 1 32 1 78 1 309 1 35 3 39 1 347 1 133 1 
261 1 263 1 2 1 78 1 5 2 185 1 35 1 286 1 347 1 204 1 270 3 167 3 329 1 119 1 271 1 7 1 339 1 106 1 226 1 317 1 319 2 251 1 
261 1 263 1 2 1 185 1 5 3 204 1 167 3 270 3 271 1 119 1 7 1 339 1 226 1 319 1 251 1 253 1 78 1 35 1 286 1 347 1 329 1 237 1 106 1 240 1 
253 1 261 1 263 1 2 1 78 1 3 1 5 3 185 1 35 1 286 1 347 1 204 1 237 1 270 3 167 3 329 1 119 1 271 1 7 1 339 1 106 1 226 1 317 1 240 1 319 2 251 1 
261 1 135 2 263 1 221 1 2 1 3 4 5 6 185 1 270 5 271 1 7 1 226 1 90 1 317 4 8 2 319 7 323 2 13 2 279 1 286 1 329 1 237 5 58 1 106 1 240 5 162 1 107 1 109 1 204 1 167 5 119 1 339 1 73 1 172 1 340 2 251 1 253 4 176 1 32 1 78 1 35 3 347 1 313 1 257 1 
261 1 135 2 263 1 221 1 2 1 3 2 5 4 185 1 270 4 271 1 7 1 226 1 90 1 8 2 317 2 319 4 323 2 13 2 150 1 286 1 58 1 329 1 237 2 106 1 240 1 107 1 109 1 338 2 204 1 167 4 119 1 73 1 340 2 251 1 253 2 176 1 32 1 78 1 35 2 347 1 
109 1 135 2 261 1 221 1 263 1 2 1 3 2 185 1 5 4 204 1 167 4 270 4 271 1 119 1 7 1 73 1 90 1 226 1 172 1 317 2 8 2 340 2 319 4 251 1 253 2 323 2 13 2 176 1 279 1 32 1 78 1 35 2 286 1 347 1 237 1 329 1 58 1 313 1 106 1 240 1 107 1 
109 1 135 2 261 1 221 1 263 1 2 1 3 2 185 1 5 4 204 1 167 4 270 4 271 1 119 1 7 1 73 1 90 1 226 1 172 1 317 2 8 2 340 2 319 4 251 1 253 2 323 2 13 2 176 1 279 1 32 1 78 1 35 2 286 1 347 1 237 1 329 1 58 1 313 1 106 1 240 1 107 1 
109 1 135 2 261 1 221 1 263 1 2 1 3 2 165 1 338 2 185 1 5 4 204 1 167 4 270 4 271 1 119 1 7 1 122 2 70 1 73 1 90 1 226 1 317 2 8 2 319 4 251 1 253 2 176 1 279 1 78 1 35 2 286 1 347 1 104 1 237 1 329 1 58 1 106 1 218 2 240 1 107 1 
109 1 135 2 261 1 221 1 263 1 2 1 3 3 185 1 5 5 204 1 167 4 270 4 271 1 119 1 7 1 73 1 90 1 226 1 172 1 8 2 317 3 340 2 251 1 319 5 253 3 323 2 13 2 176 1 279 1 32 1 78 1 35 2 286 1 347 1 237 1 58 1 329 1 313 1 106 1 240 1 257 1 107 1 
109 1 135 2 261 1 221 1 263 1 2 1 3 3 185 1 5 5 204 1 167 4 270 4 271 1 119 1 7 1 73 1 90 1 226 1 172 1 8 2 317 3 340 2 251 1 319 5 253 3 323 2 13 2 176 1 279 1 32 1 78 1 35 2 286 1 347 1 237 1 58 1 329 1 313 1 106 1 240 1 257 1 107 1 
109 1 135 2 261 1 221 1 263 1 2 1 3 2 165 1 338 2 185 1 5 4 204 1 167 4 270 4 271 1 119 1 7 1 122 2 73 1 90 1 226 1 317 2 8 2 319 4 251 1 253 2 150 1 176 1 78 1 35 2 286 1 347 1 237 1 329 1 58 1 106 1 218 2 240 1 107 1 
63 1 42 1 222 1 137 1 138 1 246 2 164 1 6 2 186 2 300 1 187 1 72 3 89 1 51 1 278 2 29 1 212 1 342 3 255 1 214 1 288 1 158 1 330 1 161 1 258 6 259 1 
163 2 42 2 1 1 222 2 137 1 164 12 246 2 6 1 248 3 44 1 300 2 45 1 72 10 273 1 147 3 11 3 277 1 278 4 29 3 342 5 212 12 79 1 179 1 180 2 15 4 81 1 255 3 158 2 330 2 258 15 
198 1 64 1 42 1 112 1 222 1 2 2 43 1 297 1 137 1 6 1 266 1 300 1 44 1 225 1 7 1 72 1 28 1 275 1 53 1 277 1 227 1 75 1 278 2 175 1 342 1 345 1 100 1 37 1 81 1 347 2 236 1 255 1 181 1 158 1 330 1 258 2 260 1 133 1 
42 2 2 2 222 2 137 2 266 1 186 1 44 1 225 1 7 1 275 1 53 1 11 1 278 4 227 1 100 1 328 1 158 2 330 2 163 2 198 1 64 1 112 1 297 1 164 2 246 3 248 1 26 1 300 2 206 1 72 3 75 1 175 1 29 1 76 1 342 2 212 2 345 1 178 1 346 1 37 1 347 2 81 1 255 2 258 5 133 1 260 1 
134 1 41 1 198 7 23 1 42 2 2 1 112 8 222 2 297 2 137 2 266 2 202 1 300 2 44 1 187 1 225 2 7 1 72 1 53 1 277 1 75 1 278 4 175 8 342 1 96 2 34 1 100 3 285 1 37 1 347 1 105 1 158 2 60 1 292 1 330 2 332 1 258 2 196 1 133 2 
335 1 42 1 222 1 2 1 137 1 246 1 164 1 248 1 186 1 300 1 205 1 7 1 72 1 89 1 11 1 75 1 278 2 29 1 212 1 342 2 55 1 101 1 37 1 81 1 347 1 255 1 158 1 330 1 258 3 
11 1 163 1 278 2 29 1 212 1 42 1 222 1 137 1 246 1 164 1 300 1 255 1 187 1 158 1 72 2 330 1 331 1 258 2 
278 2 212 1 31 1 342 2 42 1 222 1 137 1 246 1 164 1 55 1 186 1 300 1 255 1 187 1 158 1 89 1 330 1 258 2 
163 1 42 1 222 1 137 1 164 2 246 2 248 1 186 1 300 1 187 1 72 2 89 1 11 1 278 2 29 1 212 2 342 2 55 1 255 2 158 1 330 1 258 4 
11 1 163 1 278 2 29 1 212 1 42 1 222 1 137 1 246 1 164 1 300 1 255 1 158 1 72 2 330 1 331 1 258 2 196 1 
278 2 212 1 31 1 342 2 42 1 222 1 137 1 246 1 164 1 55 1 186 1 300 1 255 1 158 1 89 1 330 1 258 2 196 1 
11 1 163 1 278 2 29 1 212 1 42 1 222 1 137 1 246 1 164 1 248 1 300 1 255 1 158 1 72 2 330 1 258 2 196 1 
11 1 163 1 278 2 29 1 212 1 42 1 222 1 137 1 246 1 164 1 248 1 300 1 255 1 158 1 72 2 330 1 258 2 
198 1 42 1 112 1 2 1 222 1 297 1 137 1 6 1 266 1 300 1 44 1 225 1 72 1 275 1 277 1 227 1 278 2 175 1 342 1 345 1 100 1 347 1 328 1 158 1 330 1 258 2 260 1 133 1 
198 1 183 1 42 1 112 1 2 1 222 1 297 1 137 1 6 1 266 1 300 1 44 1 225 1 72 1 318 1 277 1 227 1 278 2 175 1 342 1 308 1 100 1 347 1 158 1 330 1 258 2 260 1 133 1 
11 1 163 1 278 2 29 1 212 1 42 1 222 1 137 1 246 1 164 1 248 1 300 1 81 1 255 1 158 1 72 2 330 1 258 2 
163 1 198 1 42 1 112 1 2 1 222 1 297 1 137 1 246 1 164 1 248 1 266 1 26 1 300 1 72 2 275 1 11 1 227 1 278 2 29 1 175 1 212 1 345 1 100 1 347 1 255 1 328 1 105 1 158 1 330 1 258 2 260 1 133 1 
163 1 335 1 42 1 222 1 2 1 137 1 246 1 164 1 248 1 300 1 205 1 7 1 72 2 11 1 75 1 278 2 324 1 29 1 212 1 37 1 81 1 347 1 255 1 158 1 330 1 258 2 
21 2 163 3 197 1 262 2 42 2 1 1 222 2 246 6 248 3 186 3 300 2 72 9 171 1 89 3 147 1 320 1 11 3 278 4 174 1 29 3 95 1 342 10 343 1 55 3 180 1 15 2 128 1 157 1 158 2 258 19 
21 4 163 2 295 1 197 1 262 1 42 3 222 3 1 2 337 1 246 4 248 3 186 2 300 3 144 1 250 1 46 2 72 14 89 2 147 2 173 1 11 3 278 6 174 2 29 3 95 1 342 12 343 1 55 2 128 2 15 2 157 1 158 3 18 1 258 26 
21 4 63 1 163 4 295 1 197 1 262 1 42 3 1 3 222 3 337 1 138 1 246 8 248 4 186 4 300 3 144 1 250 1 46 1 72 20 171 1 89 5 51 1 147 3 173 1 11 4 278 6 174 2 29 5 95 1 342 21 343 1 55 4 180 1 15 4 128 1 129 1 214 1 157 1 158 3 18 1 161 1 258 41 259 1 
21 4 63 1 163 3 295 1 197 1 262 1 42 4 1 3 222 4 337 1 138 1 246 7 248 4 186 4 300 4 144 1 250 1 46 2 72 20 171 1 89 4 51 1 147 3 173 1 11 4 278 8 174 2 29 5 95 1 342 18 343 1 55 3 180 1 15 4 128 1 129 1 214 1 157 1 158 4 18 1 161 1 258 38 259 1 
21 4 63 1 163 7 295 1 197 1 262 1 42 2 1 2 222 2 337 1 138 1 246 14 248 7 186 7 300 2 144 1 250 1 46 1 72 27 89 8 51 1 147 4 173 1 11 7 278 4 174 1 29 8 95 1 342 25 343 1 79 2 55 7 180 2 15 4 128 1 214 1 157 1 158 2 18 1 161 1 258 52 259 1 
41 1 198 2 42 1 112 2 2 2 222 1 297 1 137 1 266 1 300 1 44 1 69 1 7 2 72 1 277 1 278 2 229 1 175 2 342 1 96 2 100 1 284 1 81 1 347 2 350 1 82 1 158 1 292 1 330 1 258 2 133 1 
62 1 198 2 175 2 110 1 296 1 151 1 177 2 112 2 114 1 254 1 266 1 202 1 193 1 105 1 239 1 208 1 145 1 314 1 133 1 
62 1 198 1 175 1 110 1 296 1 151 1 177 2 112 1 299 1 114 1 254 1 266 1 202 1 193 1 239 1 145 1 133 1 
149 1 198 1 175 1 112 1 297 1 266 1 100 1 224 1 225 1 193 1 60 1 314 1 332 1 133 1 
62 1 198 1 175 1 110 1 296 1 151 1 177 2 112 1 114 1 254 1 266 1 202 1 193 1 239 1 208 1 145 1 314 1 133 1 
244 1 
109 1 237 1 288 1 221 1 184 1 240 1 99 1 
109 1 221 1 338 1 270 1 167 1 73 1 340 1 319 1 323 1 13 1 176 1 32 1 35 1 58 1 237 2 240 1 107 1 
109 1 227 1 198 1 175 1 176 1 112 1 297 1 136 1 266 2 100 2 117 1 225 1 58 1 206 1 73 1 316 1 49 1 133 1 107 1 276 1 
109 8 295 1 221 5 1 1 337 1 67 1 4 1 338 6 248 2 167 1 270 1 250 1 190 5 73 2 89 2 147 1 319 1 173 1 12 1 11 2 323 3 29 2 176 2 280 1 55 2 35 1 15 1 39 1 40 2 58 2 237 5 130 5 18 1 240 2 107 2 
109 2 63 1 335 1 221 2 336 1 2 1 138 1 167 1 270 1 7 1 71 1 73 1 89 1 51 1 74 1 75 1 29 2 176 1 280 1 191 1 283 1 37 1 347 1 40 2 58 1 313 1 106 1 107 1 
109 1 176 1 221 1 184 1 99 1 58 1 237 1 73 1 240 1 107 1 
11 2 109 5 323 5 29 2 221 5 280 1 248 2 338 10 55 2 40 2 237 5 206 1 190 5 130 5 89 2 
237 1 167 1 270 1 240 1 319 1 35 1 
109 2 198 4 221 2 112 4 297 1 142 1 266 1 225 2 118 1 27 2 270 3 167 3 73 2 48 1 319 4 12 2 175 4 176 1 309 1 100 1 35 2 39 2 349 1 17 1 58 2 60 1 332 1 133 1 107 2 
198 1 335 2 42 1 222 1 112 1 2 3 297 1 137 1 6 1 266 1 143 1 44 1 300 1 225 1 7 2 275 1 278 2 75 2 227 1 175 1 342 1 345 1 100 1 283 1 37 2 347 3 328 1 158 1 330 1 258 1 133 1 260 1 
12 1 109 1 323 2 176 1 221 2 338 4 39 1 214 1 58 1 237 4 190 2 130 2 73 1 240 2 107 1 
249 1 194 1 
249 1 194 1 
249 1 194 1 
249 1 194 1 
249 1 194 1 
249 1 194 1 
249 1 194 1 
249 1 194 1 
247 1 108 1 
163 1 63 1 278 4 29 1 342 4 42 2 222 2 246 3 138 1 186 2 300 2 214 1 158 2 46 1 72 4 89 1 161 1 51 1 258 8 259 1 
63 1 29 1 342 3 138 1 246 2 186 2 214 1 288 1 72 3 89 1 161 1 51 1 258 6 259 1 
11 1 163 1 278 2 29 1 342 2 42 1 222 1 246 2 200 1 55 1 248 1 186 1 300 1 158 1 72 2 89 1 258 4 
11 1 163 1 29 1 342 4 1 1 246 2 55 1 248 1 180 1 186 1 15 2 72 3 89 1 258 7 147 1 
63 2 163 4 42 2 222 2 138 2 246 9 248 2 186 5 300 2 188 1 46 2 72 11 89 3 273 1 51 1 147 2 11 2 278 4 29 3 342 12 79 1 55 2 180 1 15 2 214 1 158 2 161 1 258 23 259 1 
342 1 258 1 15 1 
72 1 258 1 147 1 
11 1 163 1 278 2 29 1 342 3 42 1 222 1 200 1 246 3 248 1 55 1 186 2 300 1 206 1 158 1 72 3 89 1 258 6 
163 1 295 1 42 1 1 1 222 1 337 1 246 2 248 2 186 1 300 1 250 1 72 6 89 2 147 1 173 1 11 2 278 2 29 2 342 6 343 1 55 2 15 1 158 1 18 1 258 12 
163 1 63 1 29 1 342 3 72 3 89 1 246 2 138 1 258 6 51 1 186 1 
163 1 63 1 278 2 342 2 42 1 222 1 246 2 138 1 186 1 300 1 188 1 46 1 158 1 72 1 161 1 258 3 259 1 
63 2 163 2 278 2 29 2 342 5 42 1 343 1 222 1 138 2 246 5 186 3 300 1 158 1 72 5 89 2 258 10 51 1 74 1 
11 1 163 1 278 2 29 1 343 1 42 1 222 1 246 1 300 1 158 1 72 2 258 2 
11 1 163 1 278 2 29 1 342 2 343 1 42 1 222 1 246 2 55 1 248 1 186 1 300 1 158 1 72 2 89 1 258 4 
63 1 163 1 278 6 342 2 343 1 42 3 222 3 138 1 246 2 186 1 300 3 188 1 46 1 158 3 72 1 171 1 258 3 
63 2 163 5 42 4 1 1 222 4 138 2 200 1 246 10 248 3 186 5 166 1 300 4 46 1 88 1 72 13 171 1 89 4 51 1 147 3 11 3 278 8 29 4 342 14 343 1 55 3 180 1 15 4 214 1 156 1 158 4 161 1 258 27 259 1 
63 1 278 2 29 1 342 4 343 1 42 1 222 1 1 1 246 2 138 1 186 2 15 1 300 1 214 1 158 1 72 4 89 1 161 1 51 1 258 8 147 1 259 1 173 1 
63 1 163 1 42 2 1 1 222 2 138 1 200 1 246 3 248 1 186 2 300 2 72 6 89 1 51 1 147 1 173 1 11 1 278 4 29 2 342 5 343 1 180 1 15 2 214 1 158 2 161 1 258 11 259 1 
63 1 163 1 295 1 42 3 1 1 222 3 337 1 138 1 200 1 246 4 248 2 186 3 300 3 250 1 46 1 72 9 89 3 51 1 147 1 173 1 11 2 278 6 29 3 342 10 343 1 55 2 15 1 214 1 158 3 18 1 161 1 258 19 259 1 
63 1 163 2 295 1 42 3 1 1 222 3 337 1 138 1 200 1 246 5 248 2 186 3 300 3 250 1 46 1 72 10 89 2 51 1 147 1 173 1 11 2 278 6 29 3 342 7 343 1 55 1 15 1 214 1 158 3 18 1 161 1 258 17 259 1 
63 1 278 2 29 1 342 4 343 1 42 1 222 1 1 1 246 2 138 1 186 2 15 1 300 1 214 1 158 1 72 4 89 1 161 1 51 1 258 8 147 1 259 1 173 1 
163 1 295 1 42 1 1 1 222 1 337 1 246 2 248 2 186 1 300 1 250 1 72 6 89 2 147 1 173 1 11 2 278 2 29 2 342 6 343 1 55 2 15 1 158 1 18 1 258 12 
63 1 163 2 295 1 42 4 1 1 222 4 337 1 138 1 200 1 246 5 248 2 186 3 300 4 250 1 46 2 72 10 89 2 51 1 147 1 173 1 11 2 278 8 29 3 342 8 343 1 55 1 15 1 214 1 158 4 18 1 161 1 258 18 259 1 
163 3 295 1 42 4 1 1 222 4 337 1 246 6 248 3 186 3 300 4 250 1 46 2 72 9 171 1 89 2 147 1 173 1 11 3 278 8 29 3 342 7 343 1 55 2 15 1 158 4 18 1 258 16 
63 3 163 3 29 1 342 4 138 3 246 6 186 3 72 3 89 1 161 2 258 7 51 1 259 1 
63 1 163 1 295 1 42 4 1 1 222 4 337 1 138 1 246 4 248 2 186 3 300 4 250 1 46 2 72 10 171 1 89 2 51 1 147 1 173 1 11 2 278 8 29 3 342 8 343 1 55 1 15 1 214 1 158 4 18 1 161 1 258 18 259 1 
347 1 204 1 7 1 326 1 2 1 6 1 213 1 
211 1 326 1 2 1 6 1 327 1 213 1 347 1 204 1 7 1 120 1 354 1 91 1 
225 1 175 1 198 1 288 1 60 1 112 1 297 1 332 1 266 1 100 1 133 1 
53 1 227 1 75 1 198 1 175 1 2 2 112 1 297 1 6 1 266 1 100 1 37 1 347 2 225 1 7 1 260 1 275 1 133 1 
198 1 220 1 112 1 2 2 297 2 6 1 266 1 27 1 7 2 315 1 251 1 275 1 53 1 75 1 227 2 175 1 100 3 37 2 286 1 347 2 106 1 133 1 260 1 
198 2 220 1 65 1 112 2 2 2 297 2 6 1 266 1 27 1 7 2 315 1 318 1 251 1 53 1 75 1 227 2 175 2 100 3 37 2 286 1 347 2 106 1 133 1 260 1 
61 1 198 3 220 1 65 1 112 3 297 1 266 1 225 1 27 1 167 2 270 2 119 1 315 1 316 1 50 1 319 1 227 1 175 3 152 1 100 4 237 1 240 1 133 1 
227 1 220 1 198 3 175 3 65 1 112 3 297 1 266 1 100 4 225 1 237 1 270 2 167 2 27 1 119 1 315 1 316 1 240 1 50 1 319 1 306 1 133 1 
134 1 175 1 198 1 112 1 266 1 133 1 
134 1 41 1 227 1 334 1 198 6 175 7 23 1 112 7 96 1 297 2 34 1 266 3 202 1 100 3 285 1 117 1 103 1 225 2 105 1 304 1 133 2 
63 1 198 1 42 2 222 2 2 2 112 1 297 1 137 2 164 1 246 2 138 1 6 2 266 1 186 2 26 1 300 2 69 1 7 1 72 3 89 1 51 1 275 1 53 1 227 1 75 1 278 4 29 1 175 1 76 1 212 1 342 3 345 1 100 1 37 1 81 1 347 2 255 1 214 1 328 1 105 1 158 2 330 2 161 1 258 6 259 1 260 1 133 1 
109 1 198 1 221 1 112 1 184 1 225 1 87 1 167 3 270 3 272 1 119 1 73 2 316 1 50 1 319 2 306 1 322 1 175 1 176 2 99 1 100 2 35 1 349 1 237 1 58 2 240 1 219 1 107 2 
134 1 227 1 198 2 175 2 112 2 297 1 266 2 100 2 117 1 105 1 50 1 276 1 133 1 
225 1 105 1 175 4 198 4 169 1 65 1 60 1 112 4 297 1 332 1 266 1 100 1 133 1 
227 1 334 1 198 2 175 2 112 2 297 1 266 2 100 1 36 1 103 1 27 1 207 1 195 1 133 1 
62 1 225 1 175 1 198 1 110 1 177 1 239 1 112 1 266 1 133 1 
41 1 229 1 175 2 198 2 105 1 112 2 297 1 266 1 100 1 202 1 133 1 
41 1 198 4 175 5 112 5 297 2 266 2 34 1 100 3 285 1 225 1 27 1 105 1 169 1 60 1 332 1 133 2 
41 1 198 4 175 5 112 5 77 1 297 2 266 2 34 1 100 3 225 1 27 1 105 1 169 1 60 1 332 1 133 2 
53 1 227 1 75 1 198 1 175 1 2 2 112 1 297 1 6 1 266 1 100 1 37 1 347 2 225 1 7 1 318 1 260 1 133 1 
227 1 334 1 198 1 175 1 112 1 297 1 266 2 100 1 117 1 103 1 27 1 304 1 133 1 
284 1 347 1 267 1 350 1 82 1 7 1 47 1 2 1 265 1 
215 1 47 1 141 1 
267 1 230 1 47 1 6 1 265 1 
230 2 78 1 86 1 6 1 141 1 265 2 286 1 267 2 237 1 270 2 167 2 119 1 215 1 47 1 106 1 240 1 219 1 251 1 294 1 
348 1 288 1 209 1 201 1 
348 1 22 1 125 1 209 1 98 1 201 1 10 1 
355 1 132 1 10 1 
148 1 125 1 22 1 98 3 139 1 298 2 201 1 16 1 348 1 217 1 209 1 10 3 
348 1 20 1 22 1 125 1 209 1 98 2 310 1 201 1 10 2 
252 1 125 1 22 1 296 1 110 1 177 1 98 1 311 1 16 1 209 1 10 1 
348 1 22 1 125 1 209 1 98 1 10 1 16 1 
348 2 22 1 125 1 98 1 201 1 10 1 16 1 
54 1 125 2 22 2 98 2 16 1 348 1 38 1 290 1 209 1 10 2 
125 1 22 1 153 1 98 3 310 2 127 1 201 1 311 1 16 1 348 1 57 1 209 2 10 3 
0 1 125 1 22 1 296 1 110 1 177 2 98 2 114 1 310 1 201 1 16 1 348 1 239 1 209 1 10 2 
20 1 125 2 22 2 98 4 310 2 201 1 311 1 16 1 348 1 57 1 209 2 274 1 10 4 
348 1 22 1 125 1 209 1 98 1 201 1 10 1 16 1 
148 1 125 1 22 1 243 1 298 1 139 1 98 4 310 2 201 2 311 1 348 2 57 1 209 3 10 4 
125 1 22 1 281 1 98 2 310 1 201 1 16 1 348 1 83 1 209 1 146 1 10 2 
148 1 125 1 22 1 232 1 98 3 139 2 298 2 201 1 16 1 348 1 209 1 10 3 
92 1 14 2 209 2 352 1 
269 1 22 1 125 1 98 1 10 1 16 1 
348 1 22 1 125 1 209 1 98 2 310 1 127 1 201 1 10 2 16 1 
131 1 
348 1 22 1 125 1 209 1 98 1 201 1 10 1 16 1 
125 1 22 1 98 3 298 1 310 1 127 1 201 1 16 1 348 1 209 1 10 3 
57 1 243 1 209 1 311 1 
348 1 209 1 

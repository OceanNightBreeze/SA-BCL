#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 262 (21,207) (21,207) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 262 (21,207) (21,207) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 262 (21,207) (21,207) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 262 (21,207) (21,207) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 262 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 262 161 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 262 161 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (9,85,166) (9,85,166) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (9,85,166) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (9,85,166) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (163,321) (163,321) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (9,85,166) (9,85,166) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 351 198 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 351 198 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
23 2 96 4 309 2 146 9 262 1 47 1 212 2 263 4 6 1 126 1 356 3 317 1 338 1 153 2 74 1 360 2 201 1 296 9 37 2 20 2 21 1 367 1 207 1 42 6 169 1 332 1 
96 4 23 2 296 9 309 2 262 1 146 9 263 4 212 2 47 1 37 2 6 1 20 2 367 1 21 1 126 1 356 3 317 1 338 1 207 1 42 6 153 2 74 1 169 1 360 2 332 1 201 1 
96 4 23 2 296 9 309 2 262 1 146 9 263 4 212 2 47 1 37 2 6 1 20 2 367 1 21 1 126 1 356 3 317 1 338 1 207 1 42 6 153 2 74 1 169 1 360 2 332 1 201 1 
96 3 23 2 296 7 309 2 262 1 146 7 263 3 212 2 47 1 37 1 6 1 20 2 367 1 21 1 126 1 356 2 317 1 338 1 207 1 42 4 153 2 74 1 169 1 360 2 201 1 
23 1 96 2 296 4 146 4 262 1 212 1 263 2 6 1 37 2 20 1 356 1 338 1 153 1 42 3 360 1 332 1 
23 1 296 2 309 1 45 1 146 2 263 1 212 1 47 1 27 1 6 1 179 1 153 1 169 1 360 1 33 1 276 1 
96 1 356 1 23 2 296 3 309 1 45 1 146 3 42 1 263 2 212 2 6 1 33 1 367 1 
23 2 96 4 296 9 309 1 262 1 146 9 263 4 212 2 37 2 6 1 161 1 20 1 367 1 356 3 338 1 239 1 153 1 42 7 74 1 360 1 332 1 201 1 
23 2 96 4 296 9 309 1 262 1 146 9 263 4 212 2 37 2 6 1 161 1 20 1 367 1 356 3 338 1 239 1 153 1 42 7 74 1 360 1 332 1 201 1 
41 1 331 1 242 1 
116 1 331 1 52 2 
124 2 362 1 1 2 312 2 83 1 16 2 12 2 315 2 
289 2 235 1 349 1 259 1 124 2 1 3 312 3 354 1 336 1 315 2 68 1 130 1 216 1 150 1 293 2 180 1 181 1 182 1 12 2 185 1 279 1 362 1 283 1 83 1 16 2 15 1 18 1 300 1 19 1 117 1 205 1 303 1 208 2 231 2 257 1 141 1 233 2 
373 1 124 1 362 1 1 1 133 1 312 1 306 1 16 1 12 1 315 1 
124 1 1 1 334 1 312 1 4 1 162 1 292 1 204 1 373 1 206 1 41 1 305 1 107 1 331 1 
124 1 1 1 334 2 312 1 16 1 315 1 162 2 292 1 204 1 373 1 206 1 41 1 305 1 12 1 331 1 
122 1 171 1 334 1 162 1 22 1 
122 1 171 1 41 1 334 2 174 1 331 1 162 2 226 1 
171 1 334 1 162 1 
122 1 362 1 124 1 1 1 334 1 312 1 16 1 315 1 162 1 373 1 133 1 306 1 12 1 111 1 
331 1 
122 1 171 1 41 1 364 1 334 2 174 1 331 1 162 2 
122 2 171 2 334 5 174 1 100 1 162 5 214 1 38 1 10 1 240 1 41 1 330 1 331 1 109 1 108 2 361 2 78 1 377 2 79 1 
349 1 124 1 1 2 283 1 312 2 16 1 354 1 18 1 251 1 19 1 150 1 205 1 293 1 208 1 165 1 181 1 231 1 257 1 12 1 245 1 
83 1 242 1 
124 2 1 2 312 2 16 1 83 2 315 1 92 1 12 1 63 1 
119 1 165 1 267 1 
349 1 1 1 283 1 312 1 83 1 354 1 18 1 19 1 205 1 150 1 293 1 208 1 231 1 181 1 257 1 195 1 
124 3 1 3 312 3 83 1 16 3 251 1 315 1 12 3 
373 1 124 1 1 1 133 1 312 1 16 1 12 1 
373 1 124 1 1 1 312 1 16 1 92 1 12 1 315 1 63 1 
289 2 235 1 349 1 124 3 1 4 197 1 334 1 312 4 354 1 336 1 315 2 292 1 216 1 150 1 293 1 180 1 181 1 182 1 12 3 245 1 185 1 279 1 282 1 362 1 283 1 83 1 16 3 18 1 251 1 300 1 19 1 162 1 204 1 205 1 373 1 206 1 303 1 305 1 208 1 231 1 257 1 141 1 63 1 233 1 
124 2 1 2 312 2 83 1 4 1 323 1 16 1 251 1 12 1 
124 3 1 3 197 1 334 1 312 3 16 3 251 2 315 1 162 1 228 1 292 1 204 1 373 1 206 1 305 1 12 3 331 1 63 1 245 1 
124 2 1 2 312 2 16 2 251 1 267 1 315 1 165 1 12 2 63 1 
349 1 1 1 283 1 312 1 83 1 354 1 18 1 19 1 205 1 150 1 293 1 208 1 231 1 181 1 257 1 
349 1 1 1 312 1 83 1 354 1 18 1 225 1 19 1 150 1 293 1 208 1 231 1 181 1 257 1 278 1 
289 2 235 1 24 1 266 1 336 1 267 2 68 2 30 1 216 2 217 1 180 1 182 1 295 1 51 1 185 1 112 1 159 1 160 1 300 1 326 1 59 1 119 2 165 2 233 4 
204 1 373 1 124 1 1 1 312 1 16 1 12 1 137 1 
124 5 1 5 312 5 4 1 323 1 16 4 83 1 251 2 315 1 151 1 193 1 12 4 63 1 245 1 
373 1 124 2 1 2 133 1 312 2 16 2 137 1 12 2 
308 1 211 1 
308 1 211 1 
164 1 156 1 
164 1 156 1 
164 1 156 1 
14 1 308 1 211 1 
230 1 308 1 211 1 
118 1 164 1 173 1 308 2 211 2 156 1 
14 1 308 1 211 1 
14 1 308 1 211 1 
258 1 308 1 211 1 
258 1 308 1 211 1 
258 1 308 1 211 1 
81 2 334 2 299 1 290 2 324 1 5 1 138 1 302 1 252 2 162 2 31 2 8 1 140 2 118 1 121 1 331 1 211 2 308 2 247 3 
124 2 1 2 334 1 312 2 335 1 290 1 5 1 291 1 357 1 106 1 218 1 12 2 247 1 81 1 82 1 83 1 16 2 284 1 252 1 162 1 140 1 230 1 308 1 211 1 
153 1 360 1 20 1 
153 1 360 1 276 1 
350 1 132 1 360 3 20 2 276 1 50 1 
132 1 360 2 20 1 276 1 50 1 342 1 
132 1 360 2 20 1 276 1 50 2 
122 4 171 1 334 5 335 1 174 1 102 1 291 1 49 1 357 1 109 2 361 1 108 1 78 1 277 2 51 1 52 3 157 1 203 1 159 1 136 1 116 1 190 1 326 1 162 5 57 2 327 2 38 3 59 1 41 1 347 1 331 2 377 1 
122 7 171 6 334 9 46 1 335 4 174 1 102 2 214 1 316 1 177 1 109 6 108 2 361 2 78 1 51 3 52 9 186 1 157 1 203 3 159 3 116 3 326 3 224 1 344 1 162 9 57 6 22 5 327 6 139 5 38 8 59 3 41 1 347 2 331 5 377 2 
122 2 334 3 335 1 102 1 214 1 49 1 361 1 108 1 109 2 277 1 51 1 52 4 203 1 159 1 116 2 190 1 326 1 162 3 57 2 327 2 38 3 59 1 41 1 347 1 331 3 377 1 
122 3 334 4 46 1 335 2 102 1 214 1 49 1 361 1 108 1 109 4 277 2 51 2 52 7 186 1 203 2 159 2 116 3 190 1 326 2 344 1 162 4 57 4 327 4 38 5 59 2 41 1 347 1 331 4 377 1 
297 1 349 1 242 1 
349 1 271 1 
167 1 
349 1 19 1 
297 2 349 3 2 1 354 1 19 1 55 1 
349 1 354 1 19 1 
349 1 241 1 
188 1 288 1 66 2 159 1 266 2 325 1 148 1 176 1 68 4 215 1 192 1 216 3 217 3 62 1 51 1 233 7 280 1 
188 1 288 1 66 2 159 1 266 2 325 1 148 1 176 1 68 4 215 1 192 1 216 3 217 3 62 1 51 1 233 7 280 1 
288 1 188 1 66 2 159 1 250 1 266 2 325 1 148 1 176 1 68 4 215 1 192 1 216 3 217 3 62 1 51 1 233 7 280 1 
288 1 289 4 311 3 66 3 266 4 148 2 336 2 176 2 68 14 215 1 128 2 216 13 70 1 217 7 180 2 32 3 275 1 182 2 340 1 51 3 280 1 188 1 203 2 159 3 325 2 300 2 326 2 369 1 192 3 89 1 59 2 232 1 62 2 233 27 
289 4 288 1 66 2 26 1 266 3 336 2 148 1 176 1 68 5 128 1 215 1 216 4 217 4 180 2 75 1 182 2 51 1 188 1 159 1 325 1 300 2 192 1 62 1 233 9 
23 1 9 1 296 1 309 1 293 1 146 1 13 1 208 1 212 1 231 1 85 1 6 1 7 1 
23 1 196 1 296 2 309 1 115 1 146 2 13 1 212 1 84 1 9 1 293 1 208 1 42 1 231 1 
296 1 309 1 115 1 293 1 146 1 13 1 208 1 42 1 166 1 231 1 84 1 
23 1 196 1 296 1 309 2 310 1 146 1 13 2 212 1 163 1 293 1 208 1 231 1 321 1 257 1 
23 1 9 1 296 1 309 1 115 1 293 1 146 1 13 1 208 1 212 1 231 1 85 1 6 1 
91 1 
171 1 351 1 198 1 334 1 162 1 38 1 293 1 347 1 208 1 231 1 257 1 108 1 361 1 78 1 377 1 
348 1 171 2 124 1 1 1 334 3 312 1 174 1 4 1 149 1 292 1 107 1 155 1 322 1 158 2 364 1 365 1 366 1 162 3 204 1 373 1 206 1 305 1 
171 1 124 1 1 1 334 3 312 1 4 1 174 1 149 1 292 1 107 1 155 1 322 1 158 3 364 1 189 1 365 1 366 1 162 3 204 1 373 1 206 1 305 1 41 1 331 1 
348 1 171 2 124 1 1 1 334 3 312 1 174 1 4 1 149 1 292 1 107 1 155 1 322 1 158 3 364 1 189 1 365 1 366 1 162 3 204 1 373 1 206 1 346 1 305 1 41 1 331 1 
171 2 348 1 124 2 1 2 334 3 312 2 4 1 174 1 315 1 149 1 292 1 133 1 12 1 107 1 155 1 111 1 322 1 158 2 362 1 364 1 16 1 365 1 366 1 162 3 204 1 373 2 206 1 39 1 346 1 41 1 305 1 306 1 331 1 
144 2 1 1 334 4 4 1 149 1 292 1 200 1 107 1 108 1 155 1 109 1 52 2 158 4 116 2 162 4 253 1 58 2 204 1 206 1 346 2 305 1 171 4 348 2 124 1 312 1 174 2 265 1 361 1 78 1 322 1 281 2 189 2 366 1 365 1 373 1 38 1 41 1 331 2 377 1 287 2 
348 2 171 4 144 2 124 1 1 1 334 4 312 1 174 2 4 1 103 1 129 1 149 1 292 1 200 1 107 1 109 1 361 1 155 1 108 1 219 1 322 1 78 1 281 2 158 4 189 2 365 1 366 1 116 2 253 1 162 4 58 2 204 1 38 1 373 1 346 2 206 1 41 1 305 1 331 1 377 1 287 2 
348 2 171 4 144 2 124 1 1 1 334 4 312 1 174 2 4 1 103 1 129 1 149 1 292 1 200 1 107 1 109 1 361 1 155 1 108 1 219 1 322 1 78 1 281 2 158 4 189 2 365 1 366 1 116 2 253 1 162 4 58 2 204 1 38 1 373 1 346 2 206 1 41 1 305 1 331 1 377 1 287 2 
348 2 171 4 144 2 124 1 1 1 334 4 312 1 174 2 4 1 149 1 292 1 105 2 107 1 183 2 109 1 361 1 155 1 108 1 219 1 322 1 78 1 52 2 158 4 189 2 365 1 366 1 253 1 56 1 162 4 371 1 204 1 38 1 373 1 346 2 206 1 41 1 305 1 329 1 331 1 377 1 287 2 
144 2 348 3 171 5 124 1 1 1 334 4 312 1 174 2 4 1 103 1 129 1 149 1 292 1 200 1 107 1 109 1 361 1 108 1 155 1 219 1 78 1 322 1 281 2 158 5 189 3 365 1 366 1 116 2 253 1 162 4 58 2 204 1 38 1 373 1 206 1 229 1 346 3 41 1 305 1 331 1 377 1 287 2 
144 2 348 3 171 5 124 1 1 1 334 4 312 1 174 2 4 1 103 1 129 1 149 1 292 1 200 1 107 1 109 1 361 1 108 1 155 1 219 1 78 1 322 1 281 2 158 5 189 3 365 1 366 1 116 2 253 1 162 4 58 2 204 1 38 1 373 1 206 1 229 1 346 3 41 1 305 1 331 1 377 1 287 2 
348 2 171 4 144 2 124 1 1 1 334 4 312 1 174 2 4 1 265 1 149 1 292 1 105 2 107 1 183 2 109 1 155 1 361 1 108 1 322 1 78 1 52 2 158 4 189 2 365 1 366 1 253 1 162 4 56 1 204 1 38 1 373 1 346 2 206 1 41 1 305 1 331 1 377 1 287 2 
288 1 289 2 235 1 66 1 266 2 267 1 148 1 336 1 176 1 68 3 215 1 216 3 217 2 180 1 182 1 295 1 242 1 51 1 185 1 188 1 159 1 83 2 300 1 119 1 165 1 233 6 
123 1 289 4 235 2 0 1 311 3 266 1 336 2 267 4 68 8 236 1 130 1 216 6 319 1 131 1 217 2 180 2 32 3 182 2 51 1 185 1 203 2 135 1 159 2 83 1 300 2 326 2 369 1 192 1 59 1 303 1 119 11 165 11 233 14 
289 2 349 1 235 1 124 1 1 2 312 2 354 1 313 1 267 1 336 1 68 1 130 1 150 1 216 1 293 1 180 1 181 1 182 1 12 1 245 1 185 1 113 1 135 1 283 1 83 1 16 1 18 1 251 1 300 1 19 1 205 1 303 1 208 1 231 1 257 1 307 1 195 1 233 2 
288 1 289 6 235 3 1 3 148 1 336 3 150 2 293 3 11 2 12 1 51 3 245 1 343 1 203 2 115 1 298 2 159 3 16 1 251 1 18 2 300 3 19 2 205 2 59 2 303 1 119 7 208 3 304 2 165 7 257 1 170 2 124 1 349 2 260 1 66 1 312 3 354 2 266 4 267 7 176 1 68 10 215 1 130 1 216 10 178 1 217 8 180 3 181 2 182 3 185 3 279 2 188 1 135 1 283 2 83 2 326 2 192 4 231 3 233 20 
289 4 124 1 349 3 235 2 259 2 1 1 312 1 125 1 336 2 68 1 7 1 130 1 216 1 238 1 293 8 180 2 181 2 182 2 76 1 295 1 12 1 185 2 134 1 221 1 34 1 115 1 16 1 251 1 18 2 300 2 19 2 88 1 285 1 303 1 208 8 231 7 257 2 233 2 43 1 
289 2 235 1 124 1 1 1 312 1 266 1 267 1 315 1 336 1 68 1 216 2 217 1 180 1 182 1 12 1 51 1 185 1 203 1 135 1 159 1 16 1 300 1 326 1 59 1 119 1 60 1 165 1 63 1 233 3 
289 2 235 1 24 1 159 1 267 1 336 1 300 1 326 1 68 2 192 1 119 1 217 1 165 1 180 1 182 1 295 1 233 2 185 1 
289 2 235 1 266 1 267 1 336 1 300 1 30 1 216 2 59 1 119 1 217 1 165 1 180 1 182 1 295 1 233 2 51 1 185 1 
289 2 235 1 266 1 336 1 267 2 68 2 216 2 217 2 180 1 182 1 295 1 51 1 185 1 203 1 159 1 326 1 300 1 192 1 59 1 119 2 165 2 233 4 
289 2 235 1 24 1 159 1 125 1 267 1 336 1 300 1 326 1 68 2 192 1 119 1 217 1 165 1 180 1 182 1 233 2 185 1 
289 2 235 1 266 1 125 1 267 1 336 1 300 1 30 1 216 2 59 1 119 1 217 1 165 1 180 1 182 1 233 2 51 1 185 1 
289 2 235 1 125 1 266 1 336 1 267 2 68 2 216 2 217 2 180 1 182 1 51 1 185 1 203 1 159 1 326 1 300 1 192 1 59 1 119 2 165 2 233 4 
289 2 235 1 266 1 336 1 267 2 68 2 216 2 217 2 180 1 182 1 51 1 185 1 203 1 159 1 326 1 300 1 192 1 59 1 119 2 165 2 233 4 
289 2 349 1 235 1 1 1 312 1 354 1 336 1 68 1 130 1 150 1 216 1 293 1 180 1 181 1 182 1 279 1 185 1 283 1 83 1 18 1 300 1 19 1 205 1 303 1 208 1 231 1 257 1 233 2 
289 2 349 1 235 1 1 1 312 1 354 1 48 1 336 1 68 1 130 1 150 1 216 1 293 1 180 1 181 1 182 1 278 1 185 1 83 1 18 1 300 1 19 1 225 1 303 1 208 1 231 1 257 1 233 2 
289 2 235 1 266 1 336 1 267 2 68 2 216 2 217 2 180 1 182 1 51 1 185 1 203 1 135 1 159 1 326 1 300 1 192 1 59 1 119 2 165 2 233 4 
289 2 349 1 235 1 1 1 312 1 354 1 266 1 267 2 336 1 68 2 7 1 216 2 150 1 293 1 217 2 180 1 181 1 182 1 51 1 279 1 185 1 203 1 283 1 159 1 18 1 326 1 300 1 19 1 192 1 205 1 59 1 119 2 208 1 165 2 231 1 170 1 233 4 
289 2 235 1 124 1 1 1 312 1 315 1 336 1 267 1 268 1 68 2 216 1 217 1 180 1 182 1 12 1 51 1 185 1 203 1 135 1 159 1 16 1 300 1 326 1 192 1 59 1 119 1 165 1 63 1 233 3 
289 8 288 1 336 4 148 1 337 1 51 4 202 4 203 4 114 1 159 5 300 4 301 1 59 3 120 2 311 2 66 1 264 1 26 1 266 4 176 1 68 20 128 2 215 1 216 17 217 9 180 4 182 4 32 2 77 1 80 1 188 1 35 1 363 1 326 4 370 1 369 2 192 5 90 1 40 1 374 1 233 37 44 1 
289 6 311 2 264 1 26 1 266 2 336 3 337 2 68 14 128 2 216 12 217 4 180 3 182 3 32 2 77 1 51 2 80 1 202 4 203 3 114 1 35 1 159 3 300 3 326 3 301 1 369 2 370 1 192 2 90 1 59 2 120 1 40 1 374 2 233 26 
99 1 288 2 289 8 311 3 66 2 264 1 26 1 266 4 148 2 336 4 176 2 337 2 68 23 215 2 128 2 216 21 217 9 180 4 32 3 182 4 77 1 51 5 188 2 80 1 202 4 203 3 114 1 35 1 363 1 159 5 300 4 326 3 301 1 369 3 370 1 192 5 90 1 59 3 120 1 40 1 374 1 233 44 
99 1 288 2 289 8 311 3 66 2 264 1 26 1 266 4 148 2 336 4 176 2 337 2 68 22 215 2 128 2 216 18 217 8 180 4 32 3 182 4 77 1 51 4 188 2 80 1 202 4 203 3 114 1 35 1 363 1 159 5 300 4 326 3 301 1 369 3 370 1 192 4 90 1 59 2 120 1 40 1 374 1 233 40 
288 1 289 4 311 2 66 1 264 1 26 1 266 3 148 1 336 2 176 1 337 1 68 17 215 1 128 1 216 15 217 6 180 2 32 2 182 2 77 1 51 4 188 1 80 1 202 4 203 3 114 1 35 1 159 4 300 2 326 3 301 1 369 2 370 1 192 3 90 1 59 3 120 1 40 1 374 1 233 32 
8 1 140 1 118 1 81 1 299 1 358 1 290 1 308 1 211 1 252 1 
230 1 284 1 
140 1 81 1 290 1 71 1 314 1 308 1 211 1 252 1 341 1 
81 1 334 1 299 1 290 1 324 1 5 1 302 1 162 1 252 1 31 1 8 1 140 1 118 1 121 1 331 1 211 1 308 1 247 2 
81 1 334 1 299 1 290 1 324 1 5 1 302 1 162 1 252 1 31 1 8 1 140 1 118 1 121 1 331 1 211 1 308 1 247 2 
81 1 334 1 299 1 290 1 324 1 5 1 302 1 162 1 252 1 31 1 8 1 140 1 118 1 121 1 331 1 211 1 308 1 247 2 
14 1 173 1 147 1 
14 1 173 1 147 1 
258 1 376 1 
173 1 258 1 376 1 
82 1 218 1 
122 1 124 2 1 2 334 1 312 2 335 1 290 1 101 1 291 1 31 1 357 1 106 1 218 1 12 2 247 1 81 1 82 1 83 1 16 2 324 1 284 1 162 1 252 1 140 1 230 1 308 1 211 1 
14 1 147 1 
173 1 258 1 376 1 
65 1 289 2 349 1 235 1 124 2 259 2 261 1 1 2 312 2 353 1 336 1 68 1 130 1 216 1 293 2 154 1 180 1 181 1 182 1 76 1 246 1 185 1 134 1 135 1 18 1 300 1 19 1 303 1 208 2 231 2 233 2 
98 1 350 1 115 1 17 1 18 1 20 1 7 1 293 2 208 2 153 1 273 1 181 1 231 2 339 1 359 1 360 2 276 1 375 1 243 1 
98 1 350 1 115 1 17 1 18 1 20 1 293 1 208 1 153 1 273 1 231 1 181 1 359 1 360 2 276 1 243 1 220 1 
98 1 221 1 349 1 18 1 355 1 19 1 238 1 293 1 208 1 181 1 231 1 339 1 257 1 110 1 
98 1 350 1 115 1 17 1 18 1 20 1 293 1 208 1 153 1 273 1 181 1 231 1 339 1 359 1 360 2 276 1 375 1 243 1 
333 1 
38 1 10 1 240 1 41 1 331 1 109 1 242 1 
171 1 334 1 174 1 200 1 109 1 361 1 108 1 78 1 52 1 281 1 116 1 162 1 58 1 38 1 41 1 331 2 377 1 
171 1 349 3 334 1 213 1 174 1 354 1 69 1 293 1 271 2 272 1 72 1 181 2 11 1 109 3 361 2 108 2 78 2 51 1 52 6 187 1 203 1 249 1 159 1 223 1 116 3 18 1 326 1 19 1 162 1 55 1 57 3 327 3 87 1 38 4 59 1 208 1 347 1 231 1 257 1 331 3 377 2 
171 1 311 1 334 1 174 1 270 1 69 2 32 1 361 2 108 2 109 5 78 2 51 2 52 6 80 1 203 2 222 1 35 1 159 2 116 3 326 2 162 1 301 1 57 5 369 1 370 1 327 5 90 1 38 8 59 2 347 1 41 2 210 1 209 1 331 5 377 2 
95 1 124 1 1 1 334 1 312 1 148 1 315 1 176 1 103 1 215 1 69 2 133 1 12 1 361 1 108 1 109 2 78 1 111 1 51 1 362 1 159 2 16 1 162 1 373 1 38 2 210 1 306 1 377 1 
10 1 38 1 240 1 41 1 108 1 361 1 109 1 331 1 78 1 377 1 
203 2 159 2 116 5 326 2 57 5 327 5 69 2 38 5 59 2 210 1 11 1 109 5 331 5 51 2 52 10 
171 1 41 1 334 1 174 1 331 1 162 1 
64 1 171 1 351 1 198 1 38 1 293 1 347 1 208 1 231 1 257 1 108 1 361 1 78 1 377 1 
289 2 124 2 349 1 235 1 1 3 312 3 354 1 336 1 315 2 216 1 150 1 293 1 180 1 181 1 182 1 12 2 279 1 185 1 362 1 283 1 83 1 16 2 18 1 300 1 19 1 205 1 303 1 208 1 231 1 257 1 141 1 233 1 
222 1 66 1 116 2 57 2 327 2 38 1 347 1 41 2 109 2 108 1 361 1 331 4 78 1 377 1 52 4 
237 1 290 1 252 1 
8 1 152 1 82 1 290 1 252 1 
237 1 290 1 252 1 
237 1 290 1 252 1 
199 1 290 1 252 1 
199 1 290 1 252 1 
199 1 290 1 252 1 
290 1 252 1 
308 1 211 1 
289 4 188 1 288 1 66 1 159 1 266 2 336 2 300 2 148 1 176 1 68 4 215 1 128 1 192 1 216 4 217 3 180 2 182 2 51 1 233 8 
188 1 288 1 66 1 159 1 266 2 148 1 176 1 68 3 215 1 216 3 217 2 242 1 233 6 51 1 
289 2 145 1 203 1 159 1 266 1 336 1 300 1 326 1 68 2 192 1 216 2 59 1 217 2 180 1 182 1 51 1 233 4 
216 1 311 1 32 1 68 1 233 2 369 1 
288 1 123 1 289 2 0 1 311 2 66 1 266 4 148 2 336 1 176 2 68 10 215 1 128 1 319 1 216 10 217 6 180 1 32 2 182 1 51 3 188 1 203 2 159 3 326 2 300 1 192 2 59 2 233 20 
216 1 32 1 233 1 
311 1 68 1 233 1 
289 2 145 1 203 1 159 1 266 2 300 1 336 1 326 1 68 3 192 1 216 3 59 1 217 3 180 1 182 1 11 1 233 6 51 1 
289 2 311 1 26 1 266 1 336 1 68 6 216 6 217 2 180 1 32 1 182 1 51 2 80 1 203 2 35 1 159 2 300 1 326 2 301 1 369 1 370 1 192 1 90 1 59 2 233 12 
159 1 266 1 148 1 176 1 68 3 215 1 192 1 216 3 217 2 233 6 51 1 
288 1 289 2 188 1 266 1 148 1 336 1 300 1 176 1 68 1 128 1 192 1 216 2 89 1 217 2 180 1 182 1 233 3 
95 1 289 2 159 2 26 1 266 3 300 1 336 1 148 2 176 2 68 5 215 1 192 2 216 5 217 5 180 1 182 1 233 10 51 2 
289 2 159 1 26 1 336 1 300 1 326 1 68 2 192 1 217 1 180 1 182 1 233 2 
289 2 203 1 159 1 26 1 266 1 336 1 300 1 326 1 68 2 192 1 216 2 59 1 217 2 180 1 182 1 51 1 233 4 
289 6 363 1 26 1 266 1 336 3 300 3 148 1 176 1 68 1 128 1 192 1 216 2 89 1 217 2 180 3 182 3 233 3 
288 1 289 10 145 1 311 3 66 1 26 1 266 5 148 3 336 5 176 3 68 15 215 2 128 2 216 16 70 1 217 9 180 5 32 3 182 5 340 1 51 4 188 1 203 2 363 1 159 4 300 5 326 2 369 1 192 4 89 1 59 2 232 1 233 31 
289 2 288 1 311 1 66 1 26 1 266 2 336 1 148 1 176 1 68 4 215 1 216 4 217 2 180 1 32 1 182 1 51 1 188 1 159 1 300 1 301 1 369 1 233 8 
288 1 289 6 145 1 311 1 66 1 26 1 266 3 148 1 336 3 176 1 68 10 215 1 128 1 216 7 217 4 180 3 32 1 182 3 51 2 188 1 80 1 203 2 35 1 159 3 300 3 326 2 301 1 369 1 370 1 192 1 90 1 59 1 233 17 
288 1 289 6 145 1 311 1 66 1 26 1 266 3 148 1 336 3 176 1 68 9 215 1 128 1 216 10 217 4 180 3 32 1 182 3 51 3 188 1 80 1 203 2 35 1 159 3 300 3 326 2 301 1 369 1 370 1 192 1 90 1 59 2 233 19 
288 1 289 6 145 1 311 1 66 1 26 1 266 3 148 1 336 3 176 1 68 10 215 1 128 1 216 7 217 5 180 3 32 1 182 3 51 2 188 1 80 1 203 2 35 1 159 3 300 3 326 2 301 1 369 1 370 1 192 2 90 1 59 1 233 17 
289 2 288 1 311 1 66 1 26 1 266 2 336 1 148 1 176 1 68 4 215 1 216 4 217 2 180 1 32 1 182 1 51 1 188 1 159 1 300 1 301 1 369 1 233 8 
289 2 311 1 26 1 266 1 336 1 68 6 216 6 217 2 180 1 32 1 182 1 51 2 80 1 203 2 35 1 159 2 300 1 326 2 301 1 369 1 370 1 192 1 90 1 59 2 233 12 
288 1 289 8 145 1 311 1 66 1 26 1 266 3 148 1 336 4 176 1 68 10 215 1 128 2 216 8 217 5 180 4 32 1 182 4 51 2 188 1 80 1 203 2 35 1 159 3 300 4 326 2 301 1 369 1 370 1 192 2 90 1 59 1 233 18 
289 8 311 1 26 1 266 3 336 4 68 9 128 2 216 7 217 6 180 4 32 1 182 4 51 2 80 1 203 3 35 1 363 1 159 3 300 4 326 3 301 1 369 1 370 1 192 3 90 1 59 2 233 16 
188 1 288 2 159 1 266 3 148 3 176 3 68 3 215 1 192 3 216 4 217 6 51 1 233 7 
288 1 289 8 311 1 66 1 26 1 266 3 148 1 336 4 176 1 68 10 215 1 128 2 216 8 217 4 180 4 32 1 182 4 51 2 188 1 80 1 203 2 35 1 363 1 159 3 300 4 326 2 301 1 369 1 370 1 192 1 90 1 59 1 233 18 
124 1 1 1 312 1 83 1 4 1 323 1 3 1 
124 1 1 1 36 1 312 1 83 1 3 1 323 1 4 1 29 1 254 1 318 1 255 1 
221 1 349 1 238 1 293 1 208 1 181 1 231 1 18 1 257 1 19 1 242 1 
349 1 124 1 1 2 312 2 83 1 16 1 354 1 251 1 18 1 19 1 150 1 205 1 293 1 208 1 181 1 231 1 257 1 12 1 
124 2 349 3 1 2 312 2 354 2 150 1 293 1 241 1 181 1 12 2 83 1 16 1 18 1 251 1 19 2 86 1 204 1 205 1 373 1 208 1 305 1 231 1 94 1 
124 2 349 3 1 2 312 2 354 2 150 1 293 2 241 1 181 1 12 2 278 1 83 1 16 1 18 1 251 1 19 2 191 1 86 1 204 1 373 1 208 2 305 1 231 2 94 1 
171 1 349 4 334 2 354 1 293 3 241 1 271 1 181 1 248 1 297 1 18 1 19 1 191 1 162 2 345 1 86 1 206 1 208 3 41 1 231 3 257 1 94 1 331 1 
349 1 124 1 1 1 334 1 213 1 312 1 315 1 293 1 133 1 271 1 12 1 111 1 362 1 16 1 162 1 86 1 373 1 41 1 208 1 306 1 231 1 331 1 
293 1 208 1 181 1 231 1 18 1 43 1 
134 1 259 1 34 1 349 3 115 1 354 1 67 1 18 2 19 2 55 1 7 1 104 1 88 1 285 1 293 7 208 7 294 1 231 6 181 3 257 2 43 1 
289 4 288 1 235 2 1 2 336 2 148 1 7 1 150 1 293 1 12 1 51 1 159 1 16 1 251 1 18 1 300 2 19 1 205 1 119 1 304 1 208 1 165 1 170 1 124 1 349 1 261 1 66 1 312 2 354 1 266 2 267 1 176 1 68 3 215 1 216 3 217 2 180 2 181 1 182 2 279 1 185 2 188 1 135 1 283 1 83 2 231 1 233 6 
95 1 1 1 334 2 148 1 10 1 240 1 293 1 12 1 108 2 109 5 111 1 51 2 159 2 16 1 162 2 208 1 210 1 306 1 257 1 122 1 64 1 171 1 349 1 124 1 213 1 312 1 174 1 315 1 176 1 215 1 69 2 271 1 133 1 272 1 361 2 78 2 187 1 362 1 87 1 373 1 38 4 41 2 231 1 331 2 377 2 
297 1 349 2 249 1 354 1 18 1 19 1 55 1 7 1 293 2 208 2 231 2 181 2 43 1 
221 1 349 1 352 1 18 1 19 1 191 1 7 1 238 1 293 4 208 4 181 1 231 4 257 1 
343 1 349 1 354 1 67 1 18 1 19 1 86 1 372 1 293 2 208 2 294 1 256 1 231 2 181 2 
293 1 208 1 153 1 181 1 231 1 18 1 359 1 257 1 360 1 276 1 
134 1 65 1 349 1 115 1 293 2 208 2 181 1 231 2 18 1 19 1 7 1 
221 1 134 1 34 1 349 3 352 1 18 2 19 2 86 1 7 1 238 1 293 5 285 1 208 5 231 4 181 2 257 1 
221 1 134 1 349 3 352 1 18 2 19 2 86 1 7 1 238 1 293 5 285 1 208 5 231 4 181 2 257 1 143 1 
349 1 124 1 1 2 312 2 83 1 16 1 354 1 251 1 18 1 19 1 150 1 293 1 208 1 181 1 231 1 257 1 12 1 278 1 
349 1 354 1 67 1 18 1 19 1 55 1 86 1 104 1 293 1 208 1 294 1 231 1 181 2 
124 1 1 1 53 1 312 1 154 1 353 1 93 1 175 1 246 1 
320 1 286 1 93 1 
53 1 83 1 175 1 93 1 244 1 
122 1 197 1 334 2 53 2 83 1 175 2 162 2 204 1 292 1 373 1 206 1 41 1 305 1 320 1 93 1 286 1 331 1 244 2 184 1 
45 1 263 1 33 1 242 1 
23 1 296 1 45 1 146 1 263 1 212 1 33 1 
309 1 146 1 194 1 
23 1 296 3 45 1 146 3 263 1 212 1 54 1 6 1 227 1 73 1 169 2 33 1 
23 1 296 2 45 1 146 2 263 1 42 1 212 1 37 1 33 1 
96 1 23 1 296 1 338 1 146 1 153 1 263 1 212 1 360 1 6 1 20 1 
23 1 296 1 146 1 263 1 212 1 6 1 33 1 
23 1 296 1 45 1 146 1 212 1 6 1 33 2 
23 2 296 2 146 2 263 1 212 2 6 1 269 1 28 1 168 1 33 1 
96 1 356 1 23 1 296 3 45 1 146 3 263 2 42 2 212 1 74 1 6 1 33 1 201 1 
23 1 296 2 45 1 350 1 146 2 263 1 212 1 6 1 20 1 368 1 153 1 42 1 360 2 33 1 276 1 
23 2 96 1 296 4 45 1 146 4 212 2 263 2 6 1 37 1 356 1 42 2 33 1 332 1 
23 1 296 1 45 1 146 1 263 1 212 1 6 1 33 1 
234 1 23 1 96 1 296 4 45 2 146 4 54 1 212 1 263 3 356 1 42 2 73 1 169 1 33 2 
23 1 97 1 296 2 172 1 45 1 146 2 263 1 212 1 6 1 239 1 42 1 33 1 
23 1 296 3 45 1 146 3 54 1 263 1 212 1 25 1 6 1 73 2 169 2 33 1 
328 1 263 2 274 1 61 2 
23 1 296 1 146 1 212 1 6 1 127 1 
23 1 296 2 45 1 146 2 263 1 42 1 212 1 6 1 33 1 201 1 
142 1 
23 1 296 1 45 1 146 1 263 1 212 1 6 1 33 1 
23 1 296 3 45 1 146 3 212 1 263 1 6 1 42 1 169 1 33 1 201 1 
234 1 96 1 356 1 263 1 
263 1 33 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (93,115,326) (93,115,326) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (93,115,326) (93,115,326) 224 95 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (93,115,326) (93,115,326) 224 95 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (93,115,326) (93,115,326) 224 95 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (93,115,326) (93,115,326) 224 95 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (93,115,326) (93,115,326) 224 95 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (93,115,326) (93,115,326) 224 95 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (93,115,326) (93,115,326) 224 95 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (93,115,326) (93,115,326) 224 95 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (93,115,326) (93,115,326) 224 95 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (93,115,326) (93,115,326) 224 95 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (93,115,326) (93,115,326) 224 95 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (93,115,326) (93,115,326) 224 95 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 162 159 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 162 159 104 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 162 159 104 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 162 159 104 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
147 2 324 1 223 1 237 1 300 1 149 2 109 9 264 1 287 2 111 5 176 2 268 2 177 1 206 4 69 1 70 3 18 1 187 1 72 9 143 1 213 1 46 1 315 1 123 1 274 2 126 1 144 6 103 2 
147 2 324 1 223 1 237 1 149 2 300 1 109 9 264 1 287 2 111 5 176 2 268 2 177 1 206 4 69 1 70 3 18 1 187 1 72 9 143 1 213 1 46 1 315 1 123 1 274 2 126 1 144 6 103 2 
147 2 324 1 223 1 237 1 149 2 300 1 109 10 264 1 287 2 111 6 176 2 268 2 177 1 206 5 69 1 70 4 18 1 187 1 72 10 143 1 213 1 46 1 315 1 123 1 274 2 126 1 144 7 103 2 
147 1 324 1 223 1 237 1 149 2 300 1 109 7 264 1 287 2 111 4 176 2 268 2 177 1 206 3 70 2 18 1 187 1 72 7 143 1 213 1 46 1 315 1 123 1 274 2 126 1 144 4 103 2 
206 2 147 2 69 1 70 1 149 1 109 4 72 4 264 1 143 1 315 1 111 3 176 1 274 1 177 1 268 1 144 3 126 1 103 1 
0 1 187 1 109 2 30 1 72 2 165 1 264 1 143 1 287 1 111 1 123 1 274 1 176 1 177 1 268 1 103 1 
206 1 70 1 109 3 72 3 264 1 143 1 46 1 287 1 111 2 274 2 177 1 268 2 144 1 
206 4 296 1 147 2 69 1 70 3 18 1 237 1 149 1 109 9 72 9 264 1 143 1 46 1 287 1 315 1 111 5 176 1 274 2 177 1 268 2 126 1 144 7 103 1 182 1 
206 4 296 1 147 2 69 1 70 3 18 1 237 1 149 1 109 9 72 9 264 1 143 1 46 1 287 1 315 1 111 5 176 1 274 2 177 1 268 2 126 1 144 7 103 1 182 1 
297 1 225 1 231 1 
225 1 336 2 88 1 
66 2 80 2 307 1 276 1 97 2 320 2 141 2 241 2 
278 1 105 1 323 1 80 2 107 2 199 1 6 1 238 1 239 1 241 2 304 1 286 1 134 2 306 1 305 1 329 2 307 1 61 1 63 1 180 1 160 1 37 1 66 2 207 2 94 1 290 1 97 3 141 2 251 1 292 1 23 1 47 1 357 2 276 1 320 3 195 1 52 1 
66 1 2 1 80 1 163 1 307 1 97 1 320 1 141 1 90 1 241 1 
93 1 326 1 
321 2 66 1 93 1 80 1 3 1 115 2 163 1 231 1 141 1 97 1 241 1 303 1 22 1 225 1 320 1 
321 1 253 1 115 1 281 1 219 1 
302 1 321 2 253 1 225 1 115 2 281 1 231 1 166 1 
321 1 115 1 281 1 
321 1 66 1 2 1 80 1 115 1 163 1 141 1 97 1 201 1 241 1 253 1 307 1 320 1 90 1 
225 1 
302 1 321 2 253 1 225 1 115 2 281 1 55 1 231 1 
321 5 229 2 335 1 184 1 354 1 115 5 209 1 338 2 281 2 231 1 249 1 110 1 98 1 302 1 100 2 253 2 225 1 102 1 332 1 
297 1 276 1 
66 2 350 1 80 1 35 1 276 2 141 1 97 2 320 2 241 1 
318 1 87 1 246 1 
278 1 207 1 107 1 199 1 290 1 97 1 239 1 292 1 305 1 23 1 357 1 50 1 276 1 320 1 195 1 52 1 
278 1 66 1 207 1 80 1 107 1 199 1 290 1 239 1 141 1 97 2 292 1 23 1 305 1 357 1 60 1 360 1 195 1 320 2 246 1 52 1 
66 5 271 1 80 4 197 1 200 1 141 4 97 5 32 1 241 1 350 1 60 1 360 2 276 1 320 5 
66 2 2 1 80 2 163 1 97 2 320 2 141 2 91 1 
66 3 80 3 276 1 360 1 97 3 320 3 141 3 241 1 
66 1 2 1 80 1 163 1 97 1 320 1 141 1 
66 1 350 1 80 1 163 1 35 1 97 1 320 1 141 1 241 1 
278 1 321 1 105 1 80 3 3 1 107 1 199 1 238 1 239 1 241 2 303 1 304 1 134 2 306 1 305 1 350 1 329 1 60 1 61 1 307 1 63 1 160 1 37 1 66 3 93 1 207 1 94 1 115 1 163 1 290 1 97 4 141 3 120 1 292 1 23 1 22 1 47 1 357 1 192 1 276 1 360 1 195 1 320 4 52 1 
66 2 271 1 80 1 276 1 360 1 97 2 320 2 141 1 32 1 
321 1 66 3 93 1 80 3 3 1 115 1 163 1 29 1 141 3 97 3 120 1 241 1 303 1 22 1 350 1 225 1 60 1 360 2 320 3 
66 2 80 2 141 2 97 2 241 1 350 1 87 1 360 1 320 2 246 1 
278 1 207 1 107 1 199 1 290 1 97 1 239 1 292 1 305 1 23 1 357 1 276 1 320 1 195 1 52 1 
207 1 107 1 290 1 97 1 239 1 59 1 292 1 305 1 23 1 357 1 276 1 330 1 320 1 195 1 52 1 
343 1 146 1 105 1 323 2 260 1 284 1 304 1 134 2 155 1 329 4 87 2 63 1 246 2 36 1 65 1 37 1 160 2 94 1 186 1 272 1 47 1 318 2 101 1 170 1 
303 1 66 1 80 1 163 1 97 1 320 1 141 1 91 1 
349 1 230 1 
349 1 230 1 
279 1 16 1 
279 1 16 1 
279 1 16 1 
349 1 136 1 230 1 
349 1 136 1 230 1 
349 1 244 1 230 1 
279 1 16 1 349 2 62 1 230 2 12 1 
349 1 136 1 230 1 
349 1 230 1 257 1 
349 1 230 1 257 1 
349 1 230 1 257 1 
321 1 26 1 80 2 148 1 130 1 349 1 86 1 244 1 64 1 137 1 269 1 66 2 68 1 115 1 230 1 141 2 97 2 312 1 73 1 313 1 319 1 276 1 169 1 320 2 
321 2 68 2 298 1 130 2 115 2 230 2 58 1 99 1 242 2 86 2 349 2 73 1 33 1 225 1 256 1 319 2 169 3 12 1 308 1 
176 1 149 1 103 1 
0 1 176 1 103 1 
21 1 0 1 176 3 149 2 145 1 309 1 
133 1 21 1 0 1 176 2 149 1 145 1 
21 2 0 1 176 2 149 1 145 1 
146 1 343 1 321 5 106 2 260 1 281 1 110 1 302 1 225 2 157 1 88 1 137 1 65 1 269 1 229 1 14 1 38 2 335 2 336 3 115 5 338 1 96 2 42 1 231 1 249 3 117 1 356 1 212 1 313 1 100 1 253 4 193 1 
321 2 2 1 344 1 80 1 281 1 201 1 241 1 327 1 225 1 307 1 90 1 181 1 66 1 115 2 163 1 231 1 97 1 141 1 253 2 320 1 219 1 
146 1 321 3 343 1 106 2 260 1 225 3 157 1 88 2 137 1 65 1 229 1 14 1 335 2 38 2 354 1 115 3 336 4 338 1 96 1 231 1 249 3 356 1 212 1 100 1 253 2 193 1 
146 2 321 4 343 2 106 4 260 2 299 1 225 4 156 1 157 1 88 3 137 2 65 2 229 1 14 1 38 4 335 4 354 1 336 7 115 4 338 1 96 2 231 1 249 5 356 2 212 1 100 1 253 3 358 1 193 1 
297 1 116 1 292 1 
89 1 292 1 
291 1 
239 1 52 1 292 1 
233 1 292 1 
52 1 292 1 
24 1 116 2 158 1 239 1 52 1 292 3 
146 1 343 1 92 1 221 1 323 4 41 1 71 1 142 1 272 3 329 7 216 1 125 1 124 2 36 2 196 1 160 3 270 1 
146 1 343 1 92 1 221 1 323 4 41 1 71 1 142 1 272 3 329 7 216 1 125 1 124 2 36 2 196 1 160 3 270 1 
146 1 343 1 92 1 221 1 323 4 82 1 41 1 71 1 142 1 272 3 329 7 216 1 125 1 124 2 36 2 196 1 160 3 270 1 
323 1 221 1 329 1 138 1 124 1 125 2 196 1 
146 1 343 1 105 2 323 5 221 1 285 1 134 4 329 9 63 2 36 3 160 4 270 1 92 1 94 2 41 1 71 1 142 1 355 1 272 4 47 2 255 1 124 2 125 1 216 1 
128 1 129 1 0 1 280 1 107 1 149 1 5 1 109 2 264 1 287 1 111 1 176 2 268 1 177 1 353 1 204 1 309 1 114 1 207 1 72 2 143 1 23 1 357 1 274 1 215 1 144 1 195 1 103 1 25 1 295 1 
128 1 129 1 0 1 107 1 149 1 347 1 109 3 264 1 287 1 111 1 176 2 268 1 353 1 309 1 204 1 114 1 207 1 72 3 143 1 23 1 357 1 235 1 274 1 51 1 215 1 144 2 195 1 103 1 25 1 295 1 
129 1 0 1 107 1 149 1 347 1 109 2 264 1 287 1 111 1 176 2 353 1 204 1 309 1 114 1 207 1 72 2 143 1 23 1 357 1 235 1 215 1 144 2 195 1 295 1 103 1 
53 1 207 1 114 2 129 2 107 1 301 1 109 1 72 1 132 1 292 1 23 1 135 1 287 2 305 1 357 1 168 1 274 1 51 1 268 1 195 1 294 1 52 1 204 2 
128 1 129 1 0 1 280 1 107 1 149 1 347 1 109 1 287 1 176 2 268 1 177 1 353 1 204 1 309 1 114 1 207 1 72 1 23 1 357 1 274 1 215 1 195 1 103 1 25 1 295 1 
74 1 
321 2 173 1 53 1 107 2 281 2 224 1 326 1 110 1 132 1 302 1 305 2 229 1 14 1 335 1 93 1 207 2 17 1 115 2 95 1 338 1 311 1 249 1 292 1 23 1 357 2 100 1 214 1 195 1 76 1 52 1 
321 1 93 1 17 1 115 1 95 1 224 1 214 1 326 1 
321 1 93 1 17 1 115 1 95 1 224 1 214 1 326 1 
321 1 93 1 17 1 115 1 95 1 224 1 214 1 326 1 
302 1 321 2 93 1 17 1 115 2 95 1 281 1 55 1 224 1 214 1 326 1 
229 1 321 1 93 1 100 1 17 1 115 1 95 1 338 1 224 1 214 1 326 1 110 1 
321 1 93 1 17 1 115 1 95 1 224 1 214 1 326 1 
321 1 93 1 17 1 115 1 95 1 224 1 214 1 326 1 
321 1 93 1 17 1 115 1 95 1 224 1 214 1 326 1 
321 1 93 1 17 1 115 1 95 1 224 1 214 1 326 1 
321 1 93 1 17 1 115 1 95 1 224 1 214 1 326 1 
229 1 321 1 93 1 100 1 17 1 115 1 95 1 338 1 224 1 214 1 326 1 110 1 
343 1 146 1 105 1 297 1 323 3 284 1 304 1 134 2 329 6 87 1 63 1 246 1 36 2 270 1 37 1 160 3 92 1 94 1 41 1 142 1 272 2 47 1 318 1 216 1 276 2 124 1 
343 2 146 1 105 2 323 8 260 1 6 1 238 1 282 1 304 2 134 4 154 1 202 1 328 1 329 14 87 4 63 2 36 1 246 11 65 2 160 6 37 1 94 2 139 1 140 1 71 1 356 2 272 2 47 2 316 3 318 11 276 1 77 1 172 3 
278 1 105 1 323 1 80 1 107 1 199 1 238 1 6 1 7 1 239 1 304 1 305 1 134 2 10 1 329 2 60 1 87 1 63 1 37 1 160 1 66 1 207 1 94 1 290 1 232 1 97 2 141 1 292 1 23 1 357 1 47 1 50 1 276 1 360 1 195 1 320 2 77 1 52 1 
146 3 278 2 105 3 323 10 107 3 199 2 6 1 238 1 239 2 329 20 60 1 61 2 63 3 246 7 65 2 160 10 333 2 66 1 207 3 290 2 71 4 210 1 292 2 23 2 124 1 216 1 77 1 343 3 80 1 260 2 261 1 28 2 347 1 304 3 305 1 134 6 34 2 87 7 227 2 36 4 270 1 37 3 92 1 94 3 41 1 141 1 97 3 142 1 356 2 272 8 357 3 47 3 191 1 318 7 276 2 360 1 320 3 195 2 52 2 
53 1 105 2 323 1 80 1 345 1 107 8 346 1 325 1 5 1 6 1 238 1 347 1 240 1 284 1 132 1 304 2 305 2 134 4 329 2 63 2 37 2 160 1 66 1 207 8 94 2 164 1 97 1 141 1 118 1 251 2 292 3 211 1 23 2 357 7 47 2 360 1 320 1 195 2 52 2 
343 1 146 1 105 1 323 1 80 1 260 1 241 1 304 1 134 2 350 1 329 3 87 1 63 1 352 1 36 1 246 1 65 1 37 1 160 2 66 1 94 1 141 1 97 1 356 1 272 1 47 1 318 1 320 1 77 1 
343 1 105 1 323 2 94 1 71 1 284 1 272 1 304 1 134 2 47 1 329 2 318 1 87 1 63 1 246 1 170 1 65 1 37 1 
146 1 105 1 94 1 186 1 260 1 284 1 272 1 304 1 134 2 47 1 329 2 318 1 87 1 63 1 36 1 246 1 37 1 160 2 
343 1 146 1 105 1 323 2 260 1 284 1 304 1 134 2 329 4 87 2 63 1 246 2 36 1 65 1 37 1 160 2 94 1 71 1 356 1 272 2 47 1 318 2 
343 1 105 1 323 2 94 1 71 1 211 1 272 1 304 1 134 2 47 1 329 2 318 1 87 1 63 1 246 1 170 1 65 1 37 1 
146 1 105 1 94 1 186 1 260 1 211 1 272 1 304 1 134 2 47 1 329 2 318 1 87 1 63 1 36 1 246 1 37 1 160 2 
343 1 146 1 105 1 323 2 260 1 304 1 134 2 329 4 87 2 63 1 246 2 36 1 65 1 37 1 160 2 94 1 71 1 356 1 211 1 272 2 47 1 318 2 
343 1 146 1 105 1 323 2 260 1 304 1 134 2 329 4 87 2 63 1 246 2 36 1 65 1 37 1 160 2 94 1 71 1 356 1 272 2 47 1 318 2 
278 1 105 1 323 1 107 1 199 1 6 1 238 1 239 1 304 1 305 1 134 2 329 2 61 1 63 1 37 1 160 1 207 1 94 1 290 1 97 1 292 1 23 1 357 1 47 1 276 1 195 1 320 1 52 1 
105 1 323 1 107 1 6 1 238 1 239 1 59 1 304 1 305 1 134 2 329 2 330 1 63 1 37 1 160 1 207 1 40 1 94 1 290 1 97 1 292 1 23 1 357 1 47 1 276 1 195 1 320 1 52 1 
343 1 146 1 105 1 323 2 260 1 304 1 134 2 329 4 87 2 63 1 246 2 36 1 65 1 37 1 160 2 94 1 71 1 356 1 272 2 47 1 318 2 77 1 
146 1 343 1 278 1 105 1 323 2 107 1 260 1 199 1 28 1 5 1 239 1 304 1 134 2 329 4 87 2 61 1 63 1 36 1 246 2 65 1 160 2 37 1 207 1 94 1 71 1 290 1 97 1 292 1 356 1 272 2 23 1 357 1 47 1 318 2 195 1 320 1 52 1 
146 1 343 1 105 1 323 2 80 1 260 1 241 1 304 1 134 2 350 1 329 3 87 1 63 1 246 1 65 1 160 1 37 1 66 1 94 1 71 1 141 1 97 1 43 1 356 1 272 1 47 1 318 1 320 1 77 1 
343 3 146 3 104 1 105 2 323 9 260 3 266 1 134 4 328 1 174 2 329 19 63 2 112 1 159 1 331 1 36 3 65 3 160 10 15 1 94 2 139 1 71 3 119 1 355 1 356 3 272 6 47 2 316 1 359 2 172 2 
104 1 105 1 323 3 162 1 94 1 355 1 266 2 134 2 47 1 316 1 328 1 329 6 359 2 112 1 63 1 159 2 172 1 160 3 
343 2 146 2 104 1 105 2 323 9 81 1 260 2 266 2 134 4 328 2 174 1 329 19 63 2 112 1 159 1 331 1 36 1 65 2 160 10 15 1 162 1 94 2 139 1 71 2 355 1 356 2 272 3 47 2 316 2 359 3 172 3 
343 2 146 2 104 1 105 2 323 9 81 1 260 2 266 2 134 4 328 2 174 1 329 19 63 2 112 1 159 1 331 1 36 2 65 2 160 10 15 1 162 1 94 2 139 1 71 2 355 1 356 2 272 4 47 2 316 2 359 3 172 3 
343 3 146 3 104 1 105 1 323 11 260 2 266 1 134 2 202 1 328 1 329 21 63 1 112 1 159 1 36 3 65 2 270 1 160 10 92 1 162 1 94 1 41 1 139 1 71 2 142 1 355 1 356 2 272 5 47 1 316 2 359 2 124 1 216 1 172 2 
349 1 86 1 68 1 33 1 130 1 226 1 319 1 230 1 12 1 99 1 
26 1 244 1 
205 1 349 1 86 1 68 1 189 1 130 1 319 1 230 1 151 1 
136 1 194 1 
62 1 257 1 245 1 
321 1 68 1 298 1 130 1 115 1 230 1 58 1 99 1 242 1 86 1 349 1 73 1 33 1 225 1 319 1 169 2 12 1 308 1 
321 1 68 1 298 1 130 1 115 1 230 1 58 1 99 1 242 1 86 1 349 1 73 1 33 1 225 1 319 1 169 2 12 1 308 1 
321 1 68 1 298 1 130 1 115 1 230 1 58 1 99 1 242 1 86 1 349 1 73 1 33 1 225 1 319 1 169 2 12 1 308 1 
136 1 62 1 194 1 
136 1 62 1 194 1 
257 1 245 1 
62 1 257 1 245 1 
148 1 64 1 
321 1 26 1 148 1 80 2 130 1 58 1 242 1 349 1 86 1 244 1 11 1 64 1 137 1 269 1 66 2 68 1 115 1 230 1 97 2 141 2 312 1 313 1 253 1 319 1 276 1 169 1 320 2 
105 1 220 1 323 1 107 2 346 1 6 1 238 1 56 1 304 1 134 2 329 2 175 1 63 1 37 1 160 1 334 1 66 2 207 2 94 1 164 1 97 2 251 2 292 1 23 1 47 1 357 2 195 1 320 2 77 1 258 1 52 1 
207 2 0 1 129 1 208 1 107 2 149 1 5 1 347 1 23 1 357 2 340 1 176 2 215 1 195 1 103 1 309 1 183 1 25 1 295 1 
207 1 0 1 129 1 107 1 149 1 347 1 45 1 23 1 357 1 176 2 215 1 195 1 103 1 309 1 183 1 25 1 295 1 
53 1 207 1 129 1 208 1 107 1 132 1 292 1 265 1 23 1 305 1 135 1 357 1 195 1 52 1 
207 1 0 1 129 1 208 1 107 1 149 1 347 1 23 1 357 1 340 1 176 2 215 1 195 1 103 1 309 1 183 1 25 1 295 1 
84 1 
335 1 297 1 225 1 209 1 231 1 249 1 332 1 
321 1 281 1 110 1 302 1 225 2 88 1 289 1 229 1 335 1 39 1 336 1 115 1 338 1 231 1 249 1 100 1 218 1 
321 5 146 2 322 2 236 1 3 2 106 6 107 3 4 2 281 5 5 1 283 2 239 1 110 4 8 2 158 1 65 2 332 1 14 2 333 2 113 1 335 8 207 3 115 5 336 12 209 1 338 4 116 2 249 9 121 2 292 6 23 1 341 1 343 2 222 1 260 2 302 3 305 1 267 2 225 8 89 3 88 6 229 4 38 6 185 2 311 1 231 2 188 1 356 2 357 3 100 4 195 2 52 1 
321 1 343 2 146 2 106 5 260 2 281 1 152 1 110 2 8 2 302 1 243 1 267 1 328 1 225 5 351 1 88 3 65 2 14 1 229 2 38 5 335 5 67 1 115 1 336 6 337 1 338 2 19 1 311 1 231 2 249 8 356 2 314 1 100 2 316 1 172 1 
343 1 321 1 146 1 80 1 2 1 110 1 8 2 201 1 241 1 267 1 307 1 179 1 90 1 229 1 335 1 66 1 115 1 163 1 338 1 249 2 141 1 97 1 142 1 293 1 100 1 216 1 320 1 
229 1 335 1 338 1 209 1 231 1 249 1 110 1 100 1 225 1 332 1 
333 1 343 2 146 2 335 5 38 5 106 5 336 10 260 2 249 5 8 2 356 2 267 1 225 5 88 5 65 2 
321 1 302 1 225 1 115 1 281 1 231 1 
321 3 173 1 53 1 222 2 107 4 281 4 110 1 132 1 302 2 305 2 288 1 229 2 14 2 335 2 207 4 354 1 115 3 338 2 311 2 249 2 252 1 292 1 23 1 357 4 100 2 195 1 76 1 341 1 52 1 
278 1 105 1 80 2 107 1 199 1 238 1 239 1 241 2 304 1 134 2 305 1 306 1 329 1 307 1 61 1 63 1 160 1 37 1 66 2 207 1 94 1 290 1 97 3 141 2 292 1 23 1 47 1 357 1 276 1 320 3 195 1 52 1 
229 1 14 1 38 2 335 2 106 2 336 4 338 1 311 1 231 2 249 1 110 1 100 1 225 4 124 1 88 2 
85 1 68 1 319 1 
85 1 68 1 319 1 
9 1 68 1 33 1 319 1 64 1 
85 1 68 1 319 1 
68 1 319 1 348 1 
68 1 319 1 348 1 
68 1 319 1 348 1 
68 1 319 1 
349 1 230 1 
146 1 343 1 92 1 105 2 323 4 94 2 41 1 71 1 142 1 285 1 272 3 134 4 47 2 329 8 124 1 63 2 216 1 36 2 160 4 270 1 
343 1 146 1 92 1 297 1 323 3 41 1 142 1 272 2 329 6 124 1 216 1 36 2 160 3 270 1 
146 1 13 1 343 1 105 1 323 2 94 1 260 1 71 1 356 1 272 2 134 2 47 1 329 4 63 1 36 1 65 1 160 2 
146 1 343 1 323 3 260 1 139 1 71 1 356 1 272 2 328 1 316 1 329 7 36 1 65 1 172 2 160 4 
343 3 146 3 105 2 323 11 260 2 282 1 153 1 285 2 134 4 202 1 329 23 63 2 36 5 65 2 270 1 160 12 92 1 94 2 41 1 139 1 71 4 142 2 356 2 272 9 47 2 316 2 124 1 216 2 172 2 
329 1 160 1 172 1 
323 1 316 1 329 1 
13 1 333 1 343 1 146 1 105 1 323 3 94 1 260 1 71 1 356 1 272 3 134 2 47 1 329 6 63 1 36 2 65 1 160 3 
343 2 146 2 105 1 323 6 260 2 134 2 243 1 328 1 329 12 63 1 36 1 65 2 160 6 67 1 94 1 337 1 19 1 71 1 355 1 356 2 272 2 47 1 314 1 316 1 172 1 
343 1 146 1 92 1 323 3 71 1 142 1 272 2 329 6 216 1 36 1 160 3 
105 1 323 1 94 1 41 1 71 1 142 1 153 1 285 1 272 2 134 2 47 1 329 3 216 1 63 1 36 1 270 1 160 2 
146 1 343 1 105 1 323 3 94 1 71 2 142 1 355 1 272 4 134 2 47 1 329 6 63 1 216 1 179 1 36 2 160 3 
343 1 105 1 323 2 94 1 71 1 355 1 272 1 134 2 47 1 329 2 63 1 65 1 
146 1 343 1 105 1 323 2 94 1 260 1 71 1 355 1 356 1 272 2 134 2 47 1 329 4 63 1 36 1 65 1 160 2 
105 3 323 1 94 3 71 1 142 1 153 1 355 1 285 1 272 2 134 6 47 3 329 3 63 3 216 1 331 1 36 1 160 2 
343 5 146 5 105 5 323 16 260 3 153 1 285 2 134 10 328 1 329 34 63 5 203 1 331 1 36 7 65 3 270 1 160 18 13 1 92 2 94 5 41 1 139 1 71 5 142 3 355 1 356 3 272 12 47 5 316 3 317 1 124 1 216 3 259 1 172 4 
146 1 343 1 105 1 323 4 134 2 328 1 329 8 63 1 36 2 160 4 270 1 92 1 94 1 41 1 142 1 355 1 272 2 47 1 314 1 316 1 124 1 216 1 172 1 
146 1 343 2 105 2 323 6 134 4 328 1 329 11 63 2 36 2 65 1 270 1 160 5 13 1 92 1 94 2 41 1 139 1 71 1 142 1 355 1 356 1 272 3 47 2 314 1 316 1 124 1 216 1 172 2 
343 3 146 3 105 3 323 9 260 2 285 1 134 6 243 1 328 1 329 19 63 3 36 3 65 2 270 1 160 10 13 1 92 1 67 1 94 3 41 1 337 1 19 1 71 1 142 1 355 1 356 2 272 4 47 3 314 1 316 1 124 1 216 1 172 1 
343 3 146 2 105 3 323 10 260 1 285 1 134 6 243 1 328 1 329 17 63 3 36 3 65 2 270 1 160 7 13 1 92 1 67 1 94 3 41 1 337 1 19 1 71 2 142 1 355 1 356 2 272 5 47 3 314 1 316 1 124 1 216 1 172 1 
146 1 343 1 105 1 323 4 134 2 328 1 329 8 63 1 36 2 160 4 270 1 92 1 94 1 41 1 142 1 355 1 272 2 47 1 314 1 316 1 124 1 216 1 172 1 
343 2 146 2 105 1 323 6 260 2 134 2 243 1 328 1 329 12 63 1 36 1 65 2 160 6 67 1 94 1 337 1 19 1 71 1 355 1 356 2 272 2 47 1 314 1 316 1 172 1 
343 3 146 2 105 4 323 10 260 1 285 2 134 8 243 1 328 1 329 18 63 4 36 3 65 2 270 1 160 8 13 1 92 1 67 1 94 4 41 1 337 1 19 1 71 2 142 1 355 1 356 2 272 5 47 4 314 1 316 1 124 1 216 1 172 1 
343 3 146 2 105 4 323 9 260 2 285 2 134 8 243 1 328 1 329 16 63 4 331 1 36 3 65 3 160 7 67 1 94 4 337 1 19 1 71 3 355 1 356 3 272 6 47 4 314 1 316 1 172 1 
146 1 343 1 92 1 323 3 41 1 71 3 142 3 272 6 329 7 216 3 36 3 160 4 270 2 
343 3 146 2 105 4 323 10 260 1 285 2 134 8 243 1 328 1 329 18 63 4 331 1 36 3 65 2 270 1 160 8 92 1 67 1 94 4 41 1 337 1 19 1 71 1 142 1 355 1 356 2 272 4 47 4 314 1 316 1 124 1 216 1 172 1 
66 1 271 1 276 1 97 1 320 1 32 1 78 1 
66 1 247 1 271 1 108 1 262 1 97 1 32 1 75 1 276 1 320 1 277 1 78 1 
53 1 23 1 207 1 305 1 297 1 357 1 107 1 195 1 52 1 132 1 292 1 
278 1 66 1 207 1 80 1 107 1 290 1 239 1 141 1 97 2 292 1 305 1 23 1 357 1 276 1 360 1 195 1 320 2 52 1 
278 1 80 2 107 1 222 1 239 2 303 1 66 2 207 1 163 1 290 1 97 2 141 1 233 1 292 3 23 1 22 1 357 1 276 1 360 1 320 2 195 1 52 2 342 1 
80 2 107 2 222 1 239 2 303 1 330 1 66 2 207 2 163 1 290 1 97 2 141 1 233 1 292 3 23 1 22 1 357 2 276 1 360 1 320 2 195 1 171 1 52 2 342 1 
321 1 2 1 80 1 107 1 222 1 201 1 241 1 225 1 307 1 89 1 90 1 66 1 207 1 310 1 115 1 163 1 231 1 141 1 97 1 292 1 357 1 320 1 
321 1 2 1 80 1 107 1 222 1 201 1 241 1 225 1 307 1 89 1 90 1 66 1 207 1 185 1 115 1 163 1 231 1 141 1 97 1 292 1 357 1 320 1 
23 1 207 1 357 1 107 1 195 1 118 1 
207 7 345 1 107 7 346 1 325 1 5 1 347 1 240 1 239 1 118 1 57 1 251 1 292 3 305 2 23 2 357 6 48 1 49 1 158 1 195 3 52 2 
278 1 146 1 105 2 323 3 107 1 199 1 5 1 239 1 329 6 61 1 63 2 246 1 160 3 334 1 66 1 207 1 290 1 292 1 23 1 216 1 124 1 77 1 343 1 80 1 28 1 304 2 134 4 87 1 227 1 36 2 37 2 270 1 92 1 94 2 41 1 141 1 97 2 142 1 272 2 357 1 47 2 318 1 360 1 276 2 320 2 195 1 52 1 
321 3 3 1 107 1 4 1 281 2 283 1 110 2 302 1 305 1 225 1 89 1 332 1 229 2 335 1 207 1 185 1 115 3 209 1 338 2 231 1 116 1 249 1 121 1 292 2 357 1 100 2 253 1 341 1 
113 1 207 2 107 2 5 1 116 1 239 1 118 1 292 2 23 1 357 2 158 1 195 2 52 1 
53 1 207 4 107 4 54 1 5 1 132 1 292 1 305 1 23 1 357 4 195 1 171 1 52 1 
207 2 222 1 107 2 150 1 239 1 57 1 210 1 292 1 20 1 23 1 357 2 49 1 195 2 52 1 
23 1 207 1 305 1 0 1 357 1 107 1 176 1 195 1 103 1 295 1 
207 2 220 1 107 2 346 1 5 1 347 1 292 1 23 1 357 2 195 1 52 1 
53 1 207 5 345 1 222 1 107 5 54 1 346 1 5 1 240 1 132 1 292 3 305 1 23 2 357 4 195 2 52 2 
53 1 207 5 345 1 222 1 107 5 54 1 346 1 5 1 132 1 292 3 305 1 23 2 357 4 190 1 195 2 52 2 
66 1 207 1 80 1 107 1 290 1 239 1 141 1 97 2 292 1 305 1 23 1 357 1 276 1 360 1 330 1 195 1 320 2 52 1 
207 1 222 1 107 1 239 1 57 1 292 1 23 1 357 1 48 1 49 1 158 1 195 2 52 1 
44 1 198 1 275 1 276 1 228 1 
321 2 161 1 93 1 3 1 115 2 163 1 198 2 231 1 120 1 303 1 44 2 122 1 22 1 253 1 225 1 275 2 276 1 228 1 217 1 
44 1 66 1 198 1 175 1 97 1 320 1 56 1 228 1 258 1 
161 1 122 1 228 1 
143 1 297 1 111 1 264 1 
143 1 111 1 274 1 109 1 268 1 72 1 264 1 
287 1 114 1 109 1 
187 2 131 1 109 3 72 3 250 1 264 1 143 1 111 1 274 1 177 1 268 1 178 1 
143 1 147 1 111 1 274 1 109 2 268 1 144 1 72 2 264 1 
206 1 149 1 109 1 72 1 111 1 274 1 176 1 177 1 268 1 126 1 103 1 
143 1 111 1 274 1 109 1 268 1 177 1 72 1 
143 2 274 1 109 1 268 1 177 1 72 1 264 1 
109 2 31 1 72 2 143 1 167 1 273 1 111 1 274 2 177 1 268 2 
206 1 70 1 18 1 237 1 109 3 72 3 264 1 143 1 111 2 274 1 177 1 268 1 144 2 
0 1 149 1 109 2 72 2 264 1 143 1 111 1 176 2 274 1 177 1 268 1 144 1 127 1 309 1 103 1 
206 1 147 1 69 1 70 1 109 4 72 4 264 1 143 1 111 2 274 2 177 1 268 2 144 2 
143 1 111 1 274 1 109 1 268 1 177 1 72 1 264 1 
206 1 70 1 187 1 109 4 72 4 250 1 264 2 143 2 111 3 274 1 268 1 178 1 144 2 79 1 
296 1 109 2 72 2 264 1 234 1 143 1 254 1 111 1 274 1 177 1 268 1 144 1 
27 1 187 2 109 3 72 3 250 2 264 1 143 1 111 1 274 1 177 1 268 1 178 1 
1 1 111 2 83 2 248 1 
274 1 109 1 268 1 177 1 339 1 72 1 
143 1 111 1 18 1 274 1 109 2 268 1 177 1 144 1 72 2 264 1 
263 1 
143 1 111 1 274 1 109 1 268 1 177 1 72 1 264 1 
143 1 111 1 18 1 274 1 187 1 109 3 268 1 177 1 144 1 72 3 264 1 
206 1 111 1 70 1 79 1 
143 1 111 1 

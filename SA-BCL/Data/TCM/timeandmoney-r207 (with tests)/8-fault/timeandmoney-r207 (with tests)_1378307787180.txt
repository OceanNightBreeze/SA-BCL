#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 176 82 169 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 176 82 169 109 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 176 82 169 (0,159) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 176 82 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 176 82 169 (0,159) (0,159) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 283 (147,192,234) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 176 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 176 82 169 (0,159) (0,159) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 73 190 17 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 73 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 176 267 289 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 176 82 169 (0,159) (0,159) 128 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 176 82 169 109 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 184 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 176 59 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 176 59 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 176 59 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 176 59 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 176 59 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
3 1 197 1 278 1 199 2 49 1 118 1 52 1 12 2 170 2 55 1 245 1 58 2 173 6 21 1 22 2 91 3 254 9 96 1 137 5 72 2 180 1 99 4 102 1 187 2 269 1 325 1 274 9 224 1 
3 1 197 1 278 1 199 2 49 1 118 1 52 1 12 2 170 2 55 1 245 1 58 2 173 6 21 1 22 2 91 3 254 9 96 1 137 5 72 2 180 1 99 4 102 1 187 2 269 1 325 1 274 9 224 1 
3 1 197 1 278 1 199 2 49 1 118 1 52 1 12 2 170 2 55 1 245 1 58 2 173 7 21 1 22 2 91 4 254 10 96 1 137 6 72 2 180 1 99 5 102 1 187 2 269 1 325 1 274 10 224 1 
3 1 197 1 278 1 199 2 49 1 52 1 12 2 170 2 55 1 245 1 58 2 173 4 21 1 22 2 91 2 254 7 96 1 137 4 72 2 180 1 99 3 102 1 187 1 269 1 325 1 274 7 224 1 
254 4 278 1 199 1 137 3 118 1 72 1 99 2 102 1 170 1 245 1 187 2 269 1 58 1 173 3 274 4 22 1 91 1 224 1 
254 2 197 1 278 1 199 1 95 1 233 1 137 1 180 1 72 1 12 1 170 1 245 1 40 1 269 1 58 1 274 2 
254 3 278 1 199 2 137 2 99 1 12 1 55 1 245 1 269 1 58 2 173 1 274 3 91 1 
3 1 278 1 199 2 10 1 118 1 12 1 55 1 170 1 245 1 173 7 58 2 22 1 91 3 254 9 137 5 72 1 33 1 99 4 102 1 187 2 269 1 325 1 274 9 224 1 
3 1 278 1 199 2 10 1 118 1 12 1 55 1 170 1 245 1 173 7 58 2 22 1 91 3 254 9 137 5 72 1 33 1 99 4 102 1 187 2 269 1 325 1 274 9 224 1 
184 1 321 1 8 1 
123 1 321 1 294 2 
176 1 169 1 82 1 
176 1 169 1 82 1 109 1 
176 1 169 1 159 1 82 1 
7 1 8 1 138 1 312 1 181 1 119 1 54 1 321 1 264 1 293 1 295 1 329 1 300 1 249 1 
176 1 82 1 
177 1 6 1 300 1 111 1 54 1 
177 1 321 1 67 1 6 1 8 1 300 2 26 1 54 2 
177 1 300 1 54 1 
176 1 169 1 0 1 159 1 6 1 82 1 300 1 54 1 
321 1 
177 1 321 1 6 1 31 1 8 1 300 2 26 1 54 2 
177 2 277 1 209 2 6 2 237 1 136 1 260 1 8 1 98 1 54 5 315 1 124 1 242 2 321 1 89 1 298 1 300 5 26 1 331 2 
153 1 192 1 
153 1 192 1 
147 1 283 1 
147 1 283 1 
147 1 283 1 
153 1 192 1 299 1 
234 1 153 1 192 1 
147 1 283 1 153 1 192 1 
153 1 192 1 299 1 
153 1 192 1 299 1 
153 1 192 1 100 1 
153 1 192 1 100 1 
153 1 192 1 100 1 
176 1 93 1 185 1 323 1 179 1 140 1 42 1 153 1 192 1 300 1 54 1 
93 2 68 1 84 1 179 3 140 2 316 1 54 2 185 2 86 1 320 1 321 1 150 1 323 1 42 2 129 2 192 2 153 2 300 2 302 1 
170 1 72 1 22 1 
170 1 40 1 72 1 
170 3 319 1 231 1 40 1 22 2 36 1 
170 2 319 1 40 1 271 1 22 1 36 1 
170 2 319 2 40 1 22 1 36 1 
1 1 6 4 115 1 8 1 281 2 166 2 54 5 123 1 242 1 124 1 292 1 294 3 298 2 175 1 300 5 301 1 26 1 177 1 209 1 210 1 308 1 70 1 260 3 311 1 146 1 321 2 265 1 107 1 219 1 110 1 331 1 79 2 
0 1 159 1 6 4 82 1 115 1 8 1 281 1 166 1 54 5 169 1 242 1 124 1 247 1 294 1 298 2 300 5 26 1 177 3 176 1 209 1 208 2 210 1 30 1 308 1 70 1 260 1 311 1 321 1 265 1 219 1 111 2 331 1 
1 1 6 2 8 1 281 2 166 2 54 3 123 2 242 1 89 1 294 4 298 2 175 1 300 3 301 1 209 1 210 1 308 1 260 3 70 1 311 1 321 3 265 1 219 1 110 1 331 1 79 1 
1 2 6 3 8 1 281 4 239 1 166 4 54 4 123 3 242 1 16 1 290 1 89 1 294 7 298 4 175 2 300 4 301 1 209 1 210 1 308 1 260 5 70 2 311 2 321 4 265 2 219 2 110 1 331 1 79 2 
184 1 104 1 246 1 261 1 222 1 
104 1 139 1 
27 1 
104 1 142 1 121 1 
104 1 309 1 
104 1 142 1 
104 3 149 1 246 2 330 1 142 1 121 1 
229 6 162 1 128 1 297 14 175 3 61 1 206 1 63 1 178 2 258 8 311 3 212 5 143 1 38 2 215 2 154 2 273 4 77 1 
229 6 162 1 128 1 297 14 61 3 175 3 206 1 63 1 178 2 258 8 311 3 212 7 143 1 38 2 215 2 154 2 273 4 77 1 
229 6 162 1 14 1 128 1 297 14 61 1 175 3 206 1 63 1 178 2 258 8 311 3 212 5 143 1 38 2 215 2 154 2 273 4 77 1 
1 3 228 1 229 19 232 1 198 1 162 1 163 1 13 1 128 1 291 1 297 40 61 7 175 6 25 1 206 1 132 1 63 1 65 4 178 3 258 21 70 3 311 6 212 14 101 3 38 3 143 2 144 1 215 2 217 2 265 3 189 1 324 1 154 3 273 7 77 2 
228 2 229 7 232 2 162 1 282 1 13 2 128 1 297 16 175 3 61 2 25 1 63 1 178 2 258 9 311 3 212 7 75 1 143 1 38 2 144 2 215 2 217 4 154 2 273 5 77 1 
157 1 231 1 278 1 199 1 200 1 238 1 240 1 12 1 170 2 243 1 245 1 204 1 173 1 172 2 58 1 174 1 22 1 23 1 92 1 254 2 305 1 135 1 137 1 72 1 74 2 263 2 40 1 269 1 268 1 105 1 274 2 
276 1 231 1 278 1 199 1 200 1 238 1 83 1 201 1 240 1 12 1 170 2 245 1 204 1 172 1 58 1 173 2 174 1 22 1 23 1 92 1 254 3 305 1 137 1 72 1 74 1 263 1 40 1 268 1 105 1 274 3 
276 1 231 1 278 1 200 1 238 1 201 1 240 1 12 1 170 2 245 1 204 1 172 1 173 2 22 1 92 1 254 2 305 1 137 1 72 1 74 1 263 1 40 1 268 1 105 1 274 2 
254 1 199 1 200 2 238 2 83 1 9 1 240 1 142 1 314 1 74 1 120 1 12 2 263 1 104 1 204 2 125 1 58 1 172 1 126 1 274 1 248 1 92 1 112 1 
276 1 231 1 199 1 200 1 238 1 240 1 12 1 243 1 170 2 204 1 172 1 58 1 174 1 22 1 23 1 92 1 254 1 305 1 72 1 74 1 263 1 40 1 269 1 268 1 105 1 274 1 
34 1 
7 1 8 1 9 2 240 1 167 2 242 1 18 1 172 2 248 1 249 1 26 3 92 1 177 6 252 2 260 2 181 1 263 2 104 1 264 1 191 1 44 2 195 2 45 1 114 1 47 1 117 4 53 1 54 5 119 1 123 2 124 1 125 1 293 1 294 2 295 1 298 2 205 1 130 2 300 5 207 1 209 1 308 1 211 2 138 1 312 1 73 1 142 1 74 2 216 1 321 2 220 2 221 1 329 1 225 1 331 1 
177 2 114 1 7 1 31 1 211 1 138 1 117 2 312 1 181 1 54 3 119 1 216 1 264 1 293 1 191 1 295 1 205 1 221 1 300 3 329 1 249 1 26 1 
114 1 44 1 7 1 8 1 117 3 119 1 54 3 293 1 295 1 205 1 300 3 249 1 26 1 177 1 31 1 138 1 312 1 181 1 216 1 321 1 264 1 191 1 221 1 329 1 
114 1 44 1 7 1 8 1 117 3 119 1 54 3 293 1 295 1 205 1 300 3 249 1 26 1 177 2 252 1 31 1 138 1 211 1 312 1 181 1 216 1 321 1 264 1 191 1 221 1 329 1 
7 1 8 5 167 2 242 1 18 1 249 1 26 3 177 7 252 4 256 1 31 1 260 1 181 1 182 1 264 1 190 1 191 1 114 1 44 4 195 2 117 6 119 1 54 5 124 1 123 2 293 1 295 1 205 1 298 1 300 5 130 2 304 1 209 1 211 4 138 1 312 1 73 1 216 1 321 5 326 1 220 2 221 1 329 1 331 1 
7 1 8 1 167 2 242 1 18 1 249 1 26 2 177 4 252 2 260 1 181 1 264 1 191 1 114 1 195 2 44 2 117 4 119 1 54 4 53 1 124 1 123 2 293 1 295 1 294 2 205 1 298 1 300 4 130 2 209 1 138 1 211 2 312 1 73 1 216 1 321 2 220 2 221 1 329 1 331 1 
44 2 195 2 114 1 7 1 8 1 117 4 167 2 119 1 54 4 123 2 124 1 242 1 18 1 293 1 295 1 298 1 205 1 130 2 300 4 249 1 26 2 304 1 177 4 252 2 209 1 256 1 211 2 260 1 138 1 312 1 73 1 181 1 216 1 321 1 264 1 190 1 220 2 191 1 221 1 329 1 331 1 
44 2 195 2 114 1 7 1 8 1 117 4 167 2 119 1 54 4 123 2 124 1 242 1 18 1 293 1 295 1 298 1 205 1 130 2 300 4 249 1 26 2 304 1 177 4 252 2 209 1 256 1 211 2 260 1 138 1 312 1 73 1 181 1 216 1 321 1 264 1 190 1 220 2 191 1 221 1 329 1 331 1 
114 1 7 1 117 2 119 1 54 2 85 1 124 1 242 1 17 1 293 1 295 1 298 1 205 1 130 1 300 2 249 1 209 1 260 1 138 1 312 1 73 1 181 1 216 1 318 1 264 1 190 1 220 1 191 1 221 1 329 1 331 1 
195 2 114 1 44 3 7 1 8 1 117 5 167 2 119 1 54 4 123 2 242 1 124 1 18 1 293 1 295 1 298 1 205 1 130 2 300 4 249 1 26 2 304 1 177 5 252 3 209 1 256 1 260 1 138 1 211 3 312 1 73 1 181 1 216 1 321 1 264 1 326 1 190 1 220 2 191 1 221 1 329 1 331 1 
195 2 114 1 44 3 7 1 8 1 117 5 167 2 119 1 54 4 123 2 242 1 124 1 18 1 293 1 295 1 298 1 205 1 130 2 300 4 249 1 26 2 304 1 177 5 252 3 209 1 256 1 260 1 138 1 211 3 312 1 73 1 181 1 216 1 321 1 264 1 326 1 190 1 220 2 191 1 221 1 329 1 331 1 
114 1 7 1 117 2 54 2 119 1 85 1 242 1 124 1 293 1 295 1 298 1 205 1 130 1 300 2 249 1 209 1 260 1 138 1 312 1 73 1 181 1 216 1 264 1 220 1 191 1 221 1 329 1 331 1 
194 2 1 3 228 2 229 10 232 2 198 1 13 2 15 1 87 1 297 19 61 3 175 3 65 2 29 1 307 2 258 9 70 3 311 3 212 6 101 1 75 1 183 1 317 1 144 2 186 1 217 4 265 3 189 1 41 1 273 3 
194 4 1 2 229 12 228 3 232 3 236 1 13 3 203 1 297 26 61 2 175 2 25 2 65 2 29 1 66 1 307 1 258 14 70 3 311 3 212 4 101 2 75 1 183 1 103 1 317 2 214 1 144 3 186 2 217 6 266 1 265 3 189 2 41 1 273 2 
194 4 1 4 228 3 229 21 232 3 198 1 236 1 162 1 13 3 203 1 87 1 297 41 61 4 175 5 25 1 63 1 65 4 66 1 29 1 307 1 178 1 258 20 70 4 311 5 212 8 101 3 35 1 103 1 75 1 183 1 38 1 317 1 214 1 144 3 215 1 186 2 217 6 266 1 265 4 189 3 41 1 154 1 273 4 
194 4 1 3 228 4 229 18 232 4 198 1 236 1 162 1 13 4 203 1 87 1 297 38 61 3 175 4 25 2 63 1 65 4 66 1 29 1 307 1 178 1 258 20 70 4 311 5 212 7 101 3 35 1 103 1 75 1 183 1 38 1 317 1 214 1 144 4 215 1 186 2 217 8 266 1 265 4 189 3 41 1 154 1 273 4 
194 4 1 7 228 2 229 25 232 2 198 2 236 1 162 1 13 2 203 1 297 52 61 7 175 8 25 1 63 1 28 2 65 4 66 1 29 1 307 1 178 1 258 27 70 7 311 8 212 14 101 4 103 1 75 1 183 1 38 1 317 1 214 1 144 2 215 1 186 1 217 4 266 1 265 7 189 2 41 1 154 1 273 7 
93 1 185 1 320 1 148 1 68 1 140 1 42 1 153 1 192 1 316 1 
286 1 234 1 
93 1 185 1 19 1 171 1 328 1 140 1 42 1 153 1 192 1 
299 1 90 1 
20 1 11 1 100 1 
93 1 68 1 84 1 179 2 140 1 316 1 54 1 185 1 320 1 321 1 150 1 323 1 42 1 129 1 192 1 153 1 300 1 302 1 
93 1 68 1 84 1 179 2 140 1 316 1 54 1 185 1 320 1 321 1 150 1 323 1 42 1 129 1 192 1 153 1 300 1 302 1 
93 1 68 1 84 1 179 2 140 1 316 1 54 1 185 1 320 1 321 1 150 1 323 1 42 1 129 1 192 1 153 1 300 1 302 1 
20 1 299 1 90 1 
20 1 299 1 90 1 
11 1 100 1 
20 1 11 1 100 1 
227 1 155 1 
176 1 227 1 93 1 6 1 234 1 179 1 140 1 54 1 286 1 185 1 267 1 107 1 219 1 289 1 292 1 42 1 129 1 192 1 153 1 300 1 155 1 302 1 
157 2 158 1 228 1 229 1 232 1 235 1 116 1 240 1 51 1 119 2 13 1 285 1 172 2 88 1 293 2 297 2 92 1 250 1 253 1 258 1 312 2 313 1 97 1 142 1 74 2 37 1 144 1 263 2 104 1 217 2 272 1 
276 1 231 1 305 1 238 1 135 1 72 1 240 1 74 2 122 1 170 2 263 2 40 1 172 2 288 1 105 1 174 1 22 1 92 1 62 1 
276 1 231 1 305 1 238 1 72 1 240 1 74 1 170 2 263 1 40 1 172 1 288 1 105 1 174 1 22 1 92 1 226 1 
238 1 9 1 240 1 142 1 74 1 314 1 263 1 104 1 172 1 106 1 125 1 248 1 92 1 62 1 
276 1 231 1 305 1 238 1 72 1 240 1 74 1 122 1 170 2 263 1 40 1 172 1 288 1 105 1 174 1 22 1 62 1 92 1 
81 1 
277 1 184 1 321 1 237 1 260 1 8 1 298 1 
195 1 8 1 167 1 54 1 123 1 242 1 124 1 18 1 294 1 298 1 300 1 26 1 177 1 209 1 260 1 321 2 331 1 
1 2 4 2 237 1 8 2 9 1 240 4 166 6 242 4 172 3 246 2 175 2 92 3 26 3 177 5 255 2 260 9 181 2 262 2 263 3 104 10 265 2 108 2 188 1 193 2 277 1 196 2 48 1 281 6 202 2 284 1 54 5 121 3 124 4 123 6 294 12 298 8 300 5 209 4 308 2 135 1 309 2 69 2 70 2 71 1 139 3 311 2 142 3 74 3 145 1 321 8 149 1 152 2 225 1 331 4 
1 2 4 1 236 1 8 2 281 5 166 5 54 1 242 2 124 2 123 3 287 1 294 6 298 5 300 1 175 2 26 1 177 1 65 1 209 2 66 1 257 1 308 1 260 8 70 2 311 2 101 1 103 1 214 1 321 5 266 1 265 2 189 1 225 1 193 2 331 2 
176 1 0 1 209 1 159 1 82 1 178 1 260 2 311 1 54 1 169 1 38 1 124 1 242 1 215 1 128 1 298 1 175 1 300 1 304 1 331 1 193 2 
277 1 209 1 237 1 8 1 260 1 124 1 242 1 321 1 298 1 331 1 
1 2 4 1 255 1 70 2 260 5 311 2 281 5 166 5 123 5 321 5 265 2 294 10 298 5 175 2 193 2 
177 1 321 1 8 1 300 1 54 1 26 1 
45 1 47 1 9 2 240 1 168 1 54 3 242 2 124 1 172 4 125 1 89 1 298 2 300 3 248 1 92 1 26 2 177 4 209 2 308 2 260 2 71 2 142 1 74 4 145 1 263 4 104 1 322 1 331 2 225 2 
176 1 169 1 82 1 109 1 
209 1 308 1 260 1 8 2 281 2 166 2 123 2 124 1 242 1 321 4 294 4 154 1 298 2 331 1 225 1 
185 1 140 1 251 1 
227 1 185 1 320 1 140 1 303 1 
185 1 140 1 251 1 
185 1 140 1 251 1 
185 1 164 1 140 1 
185 1 164 1 140 1 
185 1 164 1 140 1 
185 1 140 1 
153 1 192 1 
228 2 229 8 232 2 162 1 13 2 128 1 297 17 61 3 175 3 25 1 63 1 178 2 258 9 311 3 212 7 38 2 144 2 215 2 217 4 273 4 154 1 
63 1 229 2 178 1 258 3 162 1 311 1 212 2 38 1 184 1 215 1 154 1 273 2 297 5 175 1 
1 1 229 2 228 1 232 1 258 2 70 1 311 1 165 1 212 2 13 1 144 1 217 2 265 1 273 1 297 4 175 1 61 1 
1 1 65 2 229 4 198 1 258 3 70 1 311 1 212 2 101 1 265 1 189 1 273 1 297 7 175 1 61 1 
1 2 229 12 228 1 198 1 232 1 162 1 13 1 128 1 297 25 175 5 61 2 25 1 63 1 65 2 28 1 178 2 258 13 70 2 311 5 212 7 101 2 38 2 144 1 215 2 217 2 265 2 154 1 273 5 223 1 
229 1 65 1 297 1 
258 1 297 1 101 1 
1 1 228 1 229 3 232 1 255 1 258 3 70 1 311 1 165 1 212 3 13 1 144 1 217 2 265 1 297 6 273 2 61 1 175 1 
1 2 229 6 228 1 232 1 236 1 13 1 297 12 61 1 175 2 65 1 66 1 258 6 70 2 311 2 212 2 101 1 103 1 75 1 144 1 214 1 217 2 265 2 266 1 189 1 273 1 
38 1 229 3 215 1 178 1 258 3 311 1 273 1 297 6 61 1 212 2 175 1 
63 1 229 2 228 1 232 1 178 1 258 1 162 1 212 2 13 1 38 1 144 1 217 2 218 1 273 1 297 3 61 1 25 1 
228 1 229 5 232 1 178 2 258 5 311 2 212 5 13 1 75 1 38 2 144 1 215 1 217 2 128 1 273 3 297 10 61 2 175 2 
228 1 232 1 258 2 70 1 311 1 212 1 75 1 13 1 144 1 217 2 297 2 61 1 
1 1 229 2 228 1 232 1 258 2 70 1 311 1 212 2 75 1 13 1 144 1 217 2 265 1 273 1 297 4 175 1 61 1 
229 2 228 3 232 3 178 1 258 1 212 2 75 1 13 3 38 1 144 3 217 6 218 1 87 1 297 3 273 1 61 1 25 1 
1 2 229 15 228 4 232 4 162 1 163 1 165 1 13 4 87 1 128 1 297 31 61 4 175 5 25 1 132 1 63 1 65 3 178 2 258 16 70 2 311 5 212 9 101 3 75 1 38 2 144 4 215 2 217 8 265 2 189 1 324 1 154 1 273 5 
229 7 228 1 232 1 162 1 13 1 128 1 297 15 61 1 175 3 63 1 65 1 178 2 258 8 311 3 212 5 101 1 103 1 75 1 38 2 144 1 215 2 217 2 189 1 154 1 273 4 
229 8 228 2 232 2 198 1 162 1 165 1 13 2 128 1 297 18 175 3 61 2 63 1 65 2 178 2 258 10 70 1 311 4 212 6 101 1 103 1 75 1 38 2 144 2 215 2 217 4 265 1 189 1 154 1 273 4 
1 2 229 13 228 3 232 3 236 1 162 1 165 1 13 3 128 1 297 26 61 2 175 5 25 1 63 1 65 1 66 1 178 2 258 13 70 2 311 5 212 7 101 1 103 1 75 1 38 2 144 3 214 1 215 2 217 6 266 1 265 2 189 1 154 1 273 5 
1 1 229 10 228 3 232 3 236 1 162 1 165 1 13 3 128 1 297 24 61 4 175 4 25 1 63 1 65 1 66 1 178 2 258 14 70 2 311 5 212 9 101 1 103 1 75 1 38 2 144 3 214 1 215 2 217 6 265 2 266 1 189 1 154 1 273 5 
229 7 228 1 232 1 162 1 13 1 128 1 297 15 61 1 175 3 63 1 65 1 178 2 258 8 311 3 212 5 101 1 103 1 75 1 38 2 144 1 215 2 217 2 189 1 154 1 273 4 
1 2 229 6 228 1 232 1 236 1 13 1 297 12 61 1 175 2 65 1 66 1 258 6 70 2 311 2 212 2 101 1 103 1 75 1 144 1 214 1 217 2 265 2 266 1 189 1 273 1 
1 1 229 11 228 4 232 4 236 1 162 1 165 1 13 4 128 1 297 25 61 2 175 4 25 2 63 1 65 1 66 1 178 2 258 14 70 2 311 5 212 7 101 1 103 1 75 1 38 2 214 1 144 4 215 2 217 8 266 1 265 2 189 1 154 1 273 5 
1 2 229 7 228 4 232 4 236 1 13 4 87 1 297 16 61 3 175 2 25 2 65 1 66 1 258 9 70 3 311 3 212 6 101 1 103 1 75 1 214 1 144 4 217 8 266 1 265 3 189 1 273 3 
63 2 229 4 178 3 258 3 162 1 311 1 212 6 38 3 215 1 297 7 273 3 175 1 61 3 
1 1 229 11 228 4 232 4 236 1 162 1 13 4 87 1 128 1 297 25 61 2 175 4 25 2 63 1 65 1 66 1 178 2 258 14 70 2 311 5 212 7 101 1 103 1 75 1 38 2 214 1 144 4 215 2 217 8 266 1 265 2 189 1 154 1 273 5 
213 1 312 1 293 1 151 1 329 1 119 1 78 1 
161 1 32 1 312 1 119 1 213 1 244 1 127 1 151 1 293 1 327 1 329 1 78 1 
184 1 263 1 104 1 125 1 172 1 9 1 240 1 248 1 142 1 74 1 92 1 
176 1 59 1 
176 1 59 1 
176 1 59 1 
2 1 8 1 9 1 240 1 54 2 121 1 246 1 172 3 296 1 300 2 92 1 177 1 309 1 139 1 71 1 181 1 74 3 142 1 263 3 104 4 321 1 152 1 43 1 
2 1 177 1 309 1 8 1 71 1 139 1 9 1 181 1 240 1 142 1 74 3 54 2 121 1 262 1 263 3 321 1 104 4 172 3 246 1 152 1 300 2 92 1 
263 1 57 1 172 1 240 1 74 1 92 1 
276 1 157 1 80 1 230 1 279 1 280 1 9 2 240 3 121 1 57 1 172 5 24 1 92 2 259 1 142 2 74 6 263 6 104 3 149 1 272 1 
176 1 59 1 
277 1 6 1 237 1 8 1 9 1 202 1 54 3 242 2 124 2 172 1 246 1 298 1 300 3 26 1 177 2 209 2 260 1 69 1 139 1 181 1 74 1 262 1 145 1 263 1 321 1 104 2 108 1 331 2 
135 1 240 2 74 2 142 1 121 1 263 2 104 2 57 1 149 1 246 1 172 2 188 1 92 1 
2 1 135 1 9 1 240 1 74 4 142 1 263 4 56 1 104 1 172 4 125 1 248 1 92 1 
80 1 46 1 133 1 134 1 279 1 71 1 240 2 74 2 142 1 121 1 263 2 104 1 172 2 92 1 
170 1 263 1 40 1 105 1 172 1 9 1 72 1 240 1 74 1 92 1 
276 1 263 2 104 1 172 2 135 1 272 1 240 1 97 1 142 1 74 2 92 1 
230 1 135 1 280 1 71 1 9 1 240 2 74 5 142 2 263 5 56 1 104 3 125 1 172 4 272 1 248 1 92 2 
230 1 135 1 71 1 9 1 240 2 74 5 142 2 263 5 56 1 104 3 125 1 172 4 76 1 272 1 248 1 92 2 
176 1 59 1 
80 1 279 1 259 1 71 1 240 2 74 1 142 1 121 1 263 1 104 1 149 1 172 1 92 1 
184 1 245 1 278 1 137 1 
245 1 254 1 278 1 199 1 58 1 137 1 274 1 
200 1 274 1 12 1 
156 1 245 1 64 1 254 3 278 1 199 1 269 1 58 1 137 1 180 2 141 1 274 3 
245 1 254 2 278 1 187 1 199 1 173 1 58 1 137 1 274 2 
254 1 199 1 137 1 72 1 99 1 170 1 269 1 58 1 274 1 22 1 224 1 
254 1 278 1 199 1 269 1 58 1 137 1 274 1 
245 1 254 1 278 2 199 1 269 1 58 1 274 1 
94 1 254 2 278 1 199 2 306 1 137 1 269 1 58 2 270 1 274 2 
3 1 254 3 278 1 199 1 137 2 99 1 245 1 269 1 58 1 173 2 325 1 274 3 91 1 
254 2 5 1 231 1 278 1 199 1 137 1 72 1 170 2 245 1 40 1 269 1 58 1 173 1 274 2 22 1 
254 4 278 1 199 2 137 2 118 1 99 1 245 1 187 1 269 1 58 2 173 2 274 4 91 1 
245 1 254 1 278 1 199 1 269 1 58 1 137 1 274 1 
64 1 254 4 278 2 160 1 199 1 137 3 180 1 141 1 99 1 245 2 173 2 58 1 274 4 91 1 
113 1 254 2 278 1 199 1 137 1 10 1 241 1 245 1 269 1 58 1 173 1 274 2 
64 1 254 3 199 1 278 1 137 1 310 1 141 2 180 2 245 1 269 1 58 1 274 3 
39 2 137 2 50 1 131 1 
254 1 199 1 269 1 58 1 60 1 274 1 
245 1 3 1 254 2 278 1 199 1 269 1 173 1 58 1 137 1 274 2 
275 1 
245 1 254 1 278 1 199 1 269 1 58 1 137 1 274 1 
3 1 254 3 199 1 278 1 137 1 180 1 245 1 269 1 173 1 58 1 274 3 
160 1 137 1 99 1 91 1 
278 1 137 1 

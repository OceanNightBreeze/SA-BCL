#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 53 (163,190,246) (71,162,216) (71,162,216) (71,162,216) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 53 (163,190,246) (163,190,246) (163,190,246) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 101 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5972 | <= -> !=
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
235 1 251 1 276 1 210 2 255 1 126 1 187 1 67 2 9 2 259 1 328 2 304 3 23 2 74 9 76 1 359 1 109 1 195 4 263 1 53 2 337 1 116 9 119 1 203 6 120 1 341 5 373 1 342 2 
235 1 251 1 210 2 276 1 255 1 126 1 187 1 67 2 9 2 259 1 328 2 304 3 23 2 74 9 76 1 359 1 109 1 195 4 263 1 53 2 337 1 116 9 119 1 203 6 120 1 341 5 373 1 342 2 
235 1 251 1 210 2 276 1 255 1 126 1 187 1 67 2 9 2 259 1 328 2 304 4 23 2 74 10 76 1 359 1 109 1 195 5 263 1 53 2 337 1 116 10 119 1 203 7 120 1 341 6 373 1 342 2 
235 1 251 1 210 2 276 1 255 1 126 1 187 1 67 2 9 2 259 1 328 2 304 2 23 1 74 7 76 1 109 1 195 3 263 1 53 2 337 1 116 7 119 1 203 4 120 1 341 4 373 1 342 2 
235 1 210 1 255 1 126 1 187 1 53 1 116 4 67 1 9 1 203 3 304 1 341 3 23 2 74 4 373 1 342 1 359 1 195 2 
235 1 126 1 187 1 53 1 116 2 337 1 65 1 67 1 9 1 70 1 120 1 328 1 341 1 74 2 343 1 342 1 
235 1 126 1 187 1 116 3 67 2 9 2 203 1 328 1 304 1 341 2 74 3 109 1 195 1 
235 1 251 1 210 1 255 1 87 1 126 1 187 1 67 2 9 2 304 3 328 1 23 2 74 9 195 4 109 1 359 1 53 1 116 9 119 1 203 7 341 5 122 1 373 1 342 1 
235 1 251 1 210 1 255 1 87 1 126 1 187 1 67 2 9 2 304 3 328 1 23 2 74 9 195 4 109 1 359 1 53 1 116 9 119 1 203 7 341 5 122 1 373 1 342 1 
284 1 55 1 98 1 
98 1 292 1 207 2 
270 2 233 2 282 1 309 2 31 2 113 2 280 2 181 1 
152 1 236 1 184 1 88 1 43 1 280 3 6 1 129 1 7 1 321 1 301 2 356 1 324 2 10 1 282 1 77 1 110 2 112 1 170 1 133 1 309 2 172 2 31 3 113 2 175 1 176 1 34 1 134 1 117 1 270 2 35 1 59 2 233 2 290 1 181 1 38 1 85 1 375 1 148 1 
270 1 288 1 193 1 233 1 309 1 31 1 113 1 280 1 181 1 
19 1 42 1 55 1 174 1 31 1 98 1 280 1 34 1 189 1 270 1 118 1 68 1 291 1 249 1 
19 1 42 2 309 1 55 1 113 1 31 1 98 1 280 1 34 1 189 1 270 1 118 2 68 1 233 1 249 1 
118 1 250 1 231 1 42 1 307 1 
118 2 250 1 231 1 42 2 185 1 55 1 98 1 240 1 
118 1 250 1 42 1 
42 1 309 1 113 1 31 1 280 1 366 1 118 1 270 1 288 1 231 1 193 1 233 1 181 1 
98 1 
118 2 250 1 231 1 42 2 185 1 55 1 98 1 275 1 
250 2 125 1 157 2 42 5 185 1 280 1 353 1 64 1 239 2 193 1 327 1 329 4 221 2 95 1 362 1 79 5 335 2 264 2 309 1 31 1 113 1 13 1 55 2 98 2 57 1 366 1 270 1 200 1 118 5 288 1 340 1 231 2 233 1 83 1 181 1 372 2 18 1 
284 1 282 1 
309 1 31 2 113 1 280 2 270 2 36 1 233 1 22 1 282 2 
229 1 220 1 214 1 
152 1 184 1 112 1 170 1 133 1 172 1 31 1 175 1 43 1 280 1 34 1 7 1 321 1 324 1 10 1 282 1 293 1 110 1 
112 1 184 1 237 1 170 1 133 1 172 1 43 1 175 1 113 1 31 2 256 1 280 2 7 1 270 1 229 1 321 1 324 1 233 1 10 1 110 1 
318 1 237 1 309 1 174 1 113 4 31 5 256 2 280 5 226 1 270 5 36 1 219 1 233 4 282 1 
270 1 193 1 233 1 31 1 113 1 280 1 
270 3 233 3 282 1 309 1 31 3 113 3 256 1 280 3 
270 1 193 1 233 1 31 1 113 1 280 1 
270 1 36 1 233 1 22 1 309 1 31 1 113 1 280 1 34 1 
19 1 236 1 184 1 237 1 42 1 43 1 88 1 280 4 256 1 6 1 160 1 189 1 7 1 68 1 321 1 301 1 324 1 10 1 282 1 77 1 110 1 283 1 112 1 170 1 133 1 309 2 172 1 175 1 31 4 113 3 134 1 34 1 117 1 270 3 118 1 35 1 59 2 36 1 233 3 290 1 181 1 85 1 249 1 148 1 
270 2 318 1 233 1 282 1 174 1 31 2 113 1 280 2 256 1 
19 1 237 1 42 1 309 1 113 3 31 3 310 1 98 1 256 2 280 3 34 1 160 1 189 1 118 1 270 3 68 1 36 1 233 3 249 1 
309 1 113 2 31 2 256 1 280 2 270 2 229 1 36 1 233 2 220 1 
152 1 184 1 112 1 170 1 172 1 133 1 31 1 175 1 43 1 280 1 34 1 7 1 321 1 324 1 10 1 282 1 110 1 
111 1 152 1 184 1 112 1 170 1 172 1 133 1 31 1 43 1 280 1 34 1 7 1 324 1 10 1 282 1 147 1 110 1 
349 1 214 2 6 1 355 1 301 4 239 1 220 2 77 1 241 1 261 1 285 1 306 1 54 1 134 1 117 1 59 2 229 2 274 1 290 1 142 1 372 1 85 1 375 2 148 2 
164 1 
217 1 139 1 
217 1 139 1 
245 1 123 1 
245 1 123 1 
245 1 123 1 
154 1 217 1 139 1 
154 1 217 1 139 1 
217 1 139 1 81 1 
245 1 123 1 217 2 12 1 139 2 33 1 
154 1 217 1 139 1 
199 1 217 1 139 1 
199 1 217 1 139 1 
199 1 217 1 139 1 
346 1 1 1 42 1 299 1 280 2 279 1 217 1 303 1 282 1 113 2 31 2 114 1 286 1 271 1 118 1 270 2 60 1 139 1 138 1 273 1 233 2 81 1 180 1 149 1 
346 2 42 2 186 1 299 2 98 1 33 1 80 2 286 1 118 2 271 3 202 1 258 1 60 2 217 2 105 1 138 2 139 2 92 1 315 1 
210 1 53 1 342 1 
53 1 342 1 343 1 
151 1 210 2 243 1 342 3 343 1 166 1 
151 1 210 1 130 1 342 2 343 1 166 1 
151 2 210 1 342 2 343 1 166 1 
250 1 39 1 3 1 157 1 42 5 185 1 66 2 218 1 239 1 325 2 303 1 24 1 329 3 223 1 169 1 79 2 335 1 264 1 55 1 98 2 365 1 118 5 231 4 274 1 142 1 180 1 372 1 18 1 292 1 61 2 207 3 149 1 
250 1 295 1 42 2 280 1 193 1 167 1 29 1 307 1 309 1 31 1 55 1 113 1 98 1 366 1 118 2 270 1 288 1 231 2 233 1 181 1 
39 1 157 1 42 3 64 1 66 1 218 1 239 1 325 2 24 1 329 3 223 1 79 2 335 1 264 1 55 1 98 3 365 1 118 3 231 2 274 1 142 1 180 1 372 1 292 2 61 2 207 4 
39 1 157 1 42 4 64 1 66 2 218 1 239 2 325 4 24 1 329 5 223 1 28 1 79 4 335 1 264 1 55 1 268 1 98 4 365 2 118 4 231 3 274 2 370 1 142 2 180 2 372 2 292 3 61 4 207 7 
62 1 284 1 133 1 
133 1 244 1 
352 1 
7 1 170 1 133 1 
133 1 99 1 
7 1 133 1 
62 2 7 1 312 1 2 1 170 1 133 3 
285 3 196 1 364 2 348 1 13 1 215 1 200 1 44 1 340 1 301 7 239 1 232 1 73 1 372 1 148 3 241 2 375 4 
285 3 196 1 364 2 348 1 13 1 215 1 200 1 44 1 340 1 301 7 239 1 232 1 73 1 372 1 148 3 241 2 375 4 
285 3 348 1 196 1 364 2 308 1 13 1 215 1 200 1 44 1 340 1 301 7 239 1 232 1 73 1 372 1 148 3 241 2 375 4 
348 1 320 4 127 1 6 1 215 5 44 1 301 31 239 4 46 1 73 2 305 1 360 1 241 5 224 1 285 10 364 3 196 2 13 2 134 1 117 1 365 3 200 1 340 2 59 2 232 1 290 1 141 1 142 3 274 3 372 4 206 1 100 3 148 15 375 16 
348 1 6 2 215 1 301 9 239 1 73 1 305 1 241 3 285 4 364 2 196 1 336 1 13 1 134 2 117 2 198 1 200 1 59 4 340 1 232 1 290 2 372 1 375 5 148 4 
210 1 184 1 126 1 43 1 67 1 216 1 9 1 162 1 71 1 324 1 328 1 74 1 110 1 363 1 225 1 53 1 172 1 243 1 116 1 136 1 15 1 246 1 316 1 343 1 342 2 317 1 
235 1 210 1 254 1 184 1 277 1 187 1 43 1 67 1 9 1 162 1 71 1 324 1 328 1 74 3 110 1 363 1 30 1 225 1 53 1 243 1 172 1 116 3 179 1 203 2 341 1 15 1 246 1 316 1 343 1 342 2 317 1 
235 1 210 1 254 1 184 1 187 1 43 1 162 1 324 1 328 1 74 2 110 1 363 1 30 1 225 1 172 1 243 1 53 1 116 2 179 1 203 2 341 1 246 1 316 1 343 1 342 2 317 1 
184 1 363 2 277 1 133 1 171 1 172 1 43 1 116 1 115 1 67 1 7 1 9 1 104 1 324 1 328 2 10 1 143 1 74 1 316 2 194 1 317 2 345 1 110 1 
210 1 184 1 126 1 43 1 67 1 216 1 9 1 162 1 71 1 324 1 328 1 74 1 110 1 363 1 30 1 225 1 53 1 172 1 243 1 116 1 15 1 246 1 316 1 343 1 342 2 317 1 
302 1 
39 1 184 1 42 5 185 3 319 1 43 1 280 1 189 1 7 1 281 1 324 2 191 1 10 2 329 2 330 1 93 2 331 2 332 4 335 1 51 1 52 2 133 1 55 1 98 2 137 1 145 2 16 1 18 1 291 1 292 2 207 2 249 1 250 6 19 1 296 1 253 2 155 1 157 1 212 2 159 1 350 1 68 1 104 1 222 2 110 2 79 2 264 1 171 1 172 2 174 1 31 1 34 1 118 5 270 1 374 1 
250 2 19 1 155 1 42 3 319 1 185 1 280 1 189 1 281 1 68 1 330 1 332 2 51 1 31 1 174 1 34 1 270 1 118 3 145 1 291 1 249 1 275 1 
250 1 19 1 155 1 42 3 212 1 319 1 185 1 280 1 189 1 281 1 68 1 330 1 332 3 51 1 31 1 174 1 55 1 98 1 34 1 270 1 118 3 291 1 249 1 275 1 
250 2 19 1 155 1 42 3 212 1 185 1 319 1 280 1 189 1 281 1 68 1 330 1 93 1 332 3 51 1 31 1 174 1 55 1 98 1 34 1 270 1 118 3 145 1 291 1 275 1 249 1 
42 5 319 1 185 3 280 2 189 1 238 1 281 1 323 1 193 1 330 1 329 1 93 4 50 1 332 4 331 2 335 1 51 1 52 2 55 1 98 1 288 1 137 1 145 4 18 1 291 1 292 2 249 1 250 7 19 1 253 2 155 1 157 1 212 2 159 1 68 1 222 2 79 1 264 1 309 1 113 1 31 2 174 1 34 1 366 1 178 1 118 5 270 2 369 1 233 1 181 1 275 1 
250 4 19 1 253 2 155 1 157 1 212 2 42 4 185 2 319 1 280 1 159 1 189 1 281 1 68 1 329 1 330 1 93 2 222 2 331 2 332 4 79 1 335 1 51 1 52 2 264 1 55 1 174 1 31 1 98 2 34 1 118 4 270 1 137 1 145 2 16 1 18 1 291 1 292 2 207 2 249 1 
42 4 319 1 185 2 280 2 189 1 238 1 281 1 323 1 193 1 330 1 329 1 93 2 332 4 331 2 335 1 51 1 52 2 55 1 98 1 288 1 137 1 145 2 18 1 291 1 292 2 249 1 250 4 19 1 253 2 155 1 157 1 212 2 159 1 68 1 222 2 79 1 264 1 309 1 113 1 174 1 31 2 34 1 366 1 118 4 270 2 369 1 233 1 181 1 
42 4 319 1 185 2 280 2 189 1 238 1 281 1 323 1 193 1 330 1 329 1 93 2 332 4 331 2 335 1 51 1 52 2 55 1 98 1 288 1 137 1 145 2 18 1 291 1 292 2 249 1 250 4 19 1 253 2 155 1 157 1 212 2 159 1 68 1 222 2 79 1 264 1 309 1 113 1 174 1 31 2 34 1 366 1 118 4 270 2 369 1 233 1 181 1 
86 1 42 4 319 1 185 2 280 2 189 1 281 1 193 1 330 1 329 1 93 2 332 4 331 2 335 1 51 1 55 1 98 1 338 1 288 1 289 1 145 2 248 2 18 1 291 1 249 1 207 2 250 4 19 1 155 1 157 1 212 2 159 1 68 1 107 2 222 2 79 1 264 1 309 1 113 1 174 1 31 2 34 1 366 1 118 4 270 2 369 1 233 1 181 1 
42 4 319 1 185 2 280 2 189 1 238 1 281 1 323 1 193 1 330 1 329 1 93 3 332 5 331 2 335 1 51 1 52 2 55 1 98 1 288 1 137 1 145 3 18 1 291 1 292 2 249 1 250 5 19 1 253 2 155 1 157 1 212 3 159 1 68 1 222 2 79 1 264 1 309 1 113 1 174 1 31 2 34 1 366 1 178 1 118 4 270 2 369 1 233 1 181 1 
42 4 319 1 185 2 280 2 189 1 238 1 281 1 323 1 193 1 330 1 329 1 93 3 332 5 331 2 335 1 51 1 52 2 55 1 98 1 288 1 137 1 145 3 18 1 291 1 292 2 249 1 250 5 19 1 253 2 155 1 157 1 212 3 159 1 68 1 222 2 79 1 264 1 309 1 113 1 174 1 31 2 34 1 366 1 178 1 118 4 270 2 369 1 233 1 181 1 
250 4 19 1 155 1 157 1 212 2 42 4 185 2 319 1 280 1 159 1 189 1 281 1 68 1 107 2 329 1 330 1 93 2 222 2 331 2 332 4 79 1 335 1 51 1 264 1 55 1 174 1 31 1 98 1 34 1 118 4 270 1 289 1 145 2 16 1 248 2 18 1 291 1 207 2 249 1 
348 1 214 1 6 1 301 6 239 1 220 1 282 2 77 1 241 2 261 1 284 1 285 2 364 1 13 1 134 1 117 1 200 1 340 1 59 2 229 1 232 1 290 1 372 1 85 1 375 3 148 3 
40 1 124 1 320 3 127 1 214 11 6 2 215 1 69 1 301 14 239 2 282 1 106 1 220 4 241 1 77 1 285 2 96 1 176 1 134 2 117 2 365 2 35 1 59 4 229 11 290 2 141 1 142 2 274 1 372 1 85 2 100 3 148 6 375 8 
184 1 237 1 43 1 188 1 280 2 6 1 7 1 321 1 324 1 10 1 282 1 96 1 133 1 134 1 59 2 290 1 293 1 148 1 152 1 153 1 297 1 256 1 301 2 220 1 77 1 110 1 112 1 170 1 172 1 113 1 31 2 175 1 176 1 34 1 117 1 270 1 35 1 233 1 85 1 375 1 
184 2 4 1 237 1 88 2 43 2 280 3 5 2 6 3 7 2 322 1 321 2 324 1 239 5 327 1 10 1 282 3 241 5 285 6 96 1 133 2 13 2 134 3 200 2 340 2 59 6 290 3 142 2 205 2 148 13 152 1 348 1 214 7 256 1 215 1 301 27 220 7 165 2 110 1 77 3 364 1 112 2 170 2 172 1 113 1 31 3 175 2 176 1 34 1 117 3 365 2 270 1 35 1 229 7 272 2 232 1 233 1 274 2 372 5 85 3 375 14 
184 2 43 3 6 1 7 2 103 1 301 2 104 1 324 2 10 1 75 1 361 1 110 2 77 1 78 1 170 1 133 2 172 2 171 1 176 1 134 1 117 1 14 1 287 1 59 2 35 1 290 1 38 1 85 1 375 1 148 1 
214 1 280 1 6 1 301 3 239 1 220 1 241 1 77 1 285 1 96 1 132 1 309 1 113 1 31 1 134 1 117 1 365 1 270 1 59 2 229 1 36 1 233 1 290 1 142 1 274 1 372 1 85 1 375 1 148 2 
261 1 285 1 214 1 6 1 134 1 117 1 215 1 59 2 229 1 355 1 301 2 239 1 290 1 142 1 220 1 85 1 77 1 375 2 
261 1 285 1 54 1 214 1 6 1 134 1 117 1 59 2 229 1 301 2 290 1 274 1 220 1 372 1 85 1 241 1 77 1 148 2 
261 1 285 2 214 2 6 1 134 1 117 1 365 1 215 1 59 2 229 2 301 4 239 1 274 1 290 1 142 1 220 2 372 1 85 1 241 1 148 2 77 1 375 2 
285 1 214 1 6 1 134 1 117 1 215 1 287 1 59 2 229 1 355 1 301 2 239 1 290 1 142 1 220 1 85 1 77 1 375 2 
285 1 54 1 214 1 6 1 134 1 117 1 287 1 59 2 229 1 301 2 290 1 274 1 220 1 372 1 85 1 241 1 77 1 148 2 
285 2 214 2 6 1 134 1 117 1 365 1 215 1 287 1 59 2 229 2 301 4 239 1 274 1 290 1 142 1 220 2 372 1 85 1 241 1 148 2 77 1 375 2 
285 2 214 2 6 1 134 1 117 1 365 1 215 1 59 2 229 2 301 4 239 1 274 1 290 1 142 1 220 2 372 1 85 1 241 1 148 2 77 1 375 2 
152 1 184 1 43 1 88 1 280 1 6 1 7 1 321 1 301 2 324 1 10 1 282 1 110 1 77 1 112 1 170 1 172 1 133 1 175 1 31 1 176 1 34 1 134 1 117 1 59 2 35 1 290 1 85 1 375 1 148 1 
152 1 184 1 43 1 280 1 6 1 7 1 301 1 324 1 10 1 282 1 110 1 77 1 111 1 112 1 170 1 172 1 133 1 31 1 34 1 134 1 117 1 59 2 35 1 121 1 290 1 147 1 85 1 148 1 
285 2 96 1 214 2 6 1 134 1 117 1 365 1 215 1 59 2 229 2 301 4 239 1 274 1 290 1 142 1 220 2 372 1 85 1 241 1 148 2 77 1 375 2 
184 1 214 2 43 1 88 1 280 1 6 1 7 1 321 1 301 4 239 1 324 1 220 2 241 1 110 1 77 1 285 1 112 1 170 1 172 1 133 1 175 1 31 1 134 1 117 1 365 1 136 1 59 2 229 2 272 1 274 1 142 1 290 1 372 1 85 1 148 2 375 2 
214 1 280 1 6 1 215 1 301 3 239 1 220 1 260 1 77 1 285 1 96 1 309 1 113 1 31 1 134 1 117 1 365 1 270 1 59 2 229 1 36 1 233 1 274 1 290 1 142 1 372 1 85 1 148 1 375 2 
320 2 127 1 6 2 102 1 215 1 354 1 301 13 239 2 241 2 242 1 285 3 265 1 134 2 117 2 365 2 198 1 59 4 82 1 290 2 141 1 142 2 274 2 146 1 372 2 100 1 183 1 234 1 148 7 375 6 
320 2 298 1 213 1 127 2 89 1 6 3 102 1 215 1 8 1 354 1 301 24 239 3 357 1 47 1 305 2 11 1 241 1 285 2 242 3 134 3 117 3 365 3 198 1 59 6 290 3 142 3 274 2 146 1 372 2 100 2 148 11 183 2 234 2 375 13 
320 2 127 1 89 1 6 2 102 1 215 1 354 1 301 13 239 2 241 1 242 1 285 2 134 2 117 2 365 2 198 1 59 4 82 1 290 2 141 1 142 2 274 2 146 1 372 2 100 1 183 1 234 1 148 7 375 6 
320 2 127 1 89 1 6 2 102 1 215 1 354 1 301 13 239 2 241 1 242 1 285 2 134 2 117 2 365 2 198 1 59 4 82 1 290 2 141 1 142 2 274 2 146 1 372 2 100 1 183 1 234 1 148 7 375 6 
348 1 320 4 298 1 213 1 127 2 89 1 6 2 102 1 215 7 8 1 69 2 354 1 301 50 239 8 357 1 47 1 305 1 11 1 241 6 242 3 285 13 364 1 13 1 134 2 117 2 365 7 198 1 200 1 340 1 59 4 232 1 290 2 141 2 142 7 274 7 146 1 372 8 100 4 183 1 234 1 148 24 375 26 
346 1 91 1 60 1 217 1 139 1 138 1 92 1 315 1 299 1 33 1 
81 1 114 1 
346 1 60 1 217 1 139 1 138 1 299 1 266 1 358 1 131 1 
154 1 17 1 
199 1 168 1 12 1 
346 1 42 1 186 1 299 1 98 1 33 1 80 1 286 1 118 1 271 2 258 1 60 1 217 1 105 1 138 1 139 1 92 1 315 1 
346 1 42 1 186 1 299 1 98 1 33 1 80 1 286 1 118 1 271 2 258 1 60 1 217 1 105 1 138 1 139 1 92 1 315 1 
346 1 42 1 186 1 299 1 98 1 33 1 80 1 286 1 118 1 271 2 258 1 60 1 217 1 105 1 138 1 139 1 92 1 315 1 
154 1 12 1 17 1 
154 1 12 1 17 1 
199 1 168 1 
199 1 168 1 12 1 
1 1 273 1 
346 1 1 1 42 1 186 1 299 1 280 2 279 1 217 1 303 1 282 1 26 1 31 2 114 1 113 2 80 1 118 1 271 1 270 2 60 1 231 1 139 1 138 1 273 1 81 1 233 2 180 1 149 1 
150 1 184 1 43 1 280 2 6 1 7 1 301 2 324 2 72 1 326 1 75 1 77 1 110 2 96 1 133 1 172 2 31 2 32 1 176 1 134 1 117 1 270 2 59 2 35 1 368 1 290 1 84 1 38 2 85 1 375 1 148 1 
210 1 184 1 30 1 225 1 53 1 243 1 172 2 43 1 227 1 136 1 190 1 324 2 163 1 15 1 246 1 342 2 343 1 316 1 110 2 
210 1 184 1 30 1 225 1 53 1 243 1 172 1 43 1 257 1 324 1 163 1 15 1 246 1 342 2 343 1 316 1 110 1 
184 1 133 1 172 1 171 1 43 1 227 1 7 1 104 1 324 1 10 1 143 1 25 1 316 1 110 1 
210 1 184 1 30 1 225 1 53 1 243 1 172 1 43 1 227 1 190 1 324 1 163 1 15 1 246 1 342 2 343 1 316 1 110 1 
128 1 
284 1 79 1 125 1 329 1 83 1 55 1 98 1 
250 1 253 1 157 1 42 1 185 1 329 1 79 1 335 1 264 1 52 1 55 1 98 2 118 1 137 1 18 1 292 1 207 1 
184 1 335 1 157 1 101 1 170 1 264 1 133 2 172 1 43 2 244 1 367 1 7 1 312 1 324 1 10 1 18 1 110 1 
39 1 250 1 296 1 157 2 42 1 185 1 320 1 298 1 213 1 127 1 8 1 239 2 325 5 47 1 221 2 329 8 11 1 79 5 335 2 264 2 55 2 311 1 98 5 365 2 57 1 56 1 118 1 142 2 274 2 18 2 372 2 61 5 292 3 207 6 100 1 
157 1 42 1 280 1 323 1 239 2 193 1 327 1 221 2 329 2 79 2 335 1 264 1 309 1 31 1 13 1 113 1 57 1 366 1 118 1 200 1 270 1 340 1 288 1 233 1 18 1 372 1 181 1 
79 1 125 1 335 1 157 1 264 1 55 1 98 1 83 1 329 1 18 1 
79 5 5 1 98 5 365 2 57 1 239 2 325 5 142 2 274 2 221 2 329 5 372 2 61 5 292 5 207 10 
118 1 250 1 42 1 185 1 55 1 98 1 
39 2 250 4 0 2 296 2 184 1 157 2 42 3 185 2 43 1 350 1 64 1 7 1 104 1 324 4 10 2 329 2 49 1 110 4 79 2 335 2 264 2 133 1 172 4 171 1 197 1 135 1 118 3 18 1 374 1 
236 1 184 1 88 1 43 1 280 3 6 1 7 1 321 1 301 1 324 1 10 1 282 1 110 1 77 1 112 1 170 1 172 1 309 2 133 1 31 3 113 2 175 1 134 1 117 1 270 2 35 1 59 2 233 2 290 1 181 1 85 1 148 1 
39 1 296 1 364 1 79 2 335 1 157 1 264 1 55 2 98 4 325 2 329 1 18 1 292 2 61 2 207 4 
346 1 313 1 299 1 
346 1 313 1 299 1 
346 1 300 1 1 1 315 1 299 1 
346 1 313 1 299 1 
346 1 299 1 177 1 
346 1 299 1 177 1 
346 1 299 1 177 1 
346 1 299 1 
217 1 139 1 
285 3 364 1 348 1 13 1 6 2 134 2 117 2 215 1 200 1 59 4 340 1 301 8 239 1 232 1 290 2 305 1 372 1 148 4 375 4 241 2 
284 1 285 2 364 1 348 1 13 1 200 1 340 1 301 6 232 1 239 1 372 1 148 3 241 2 375 3 
285 2 6 1 134 1 117 1 365 1 215 1 59 2 301 4 239 1 274 1 290 1 142 1 372 1 333 1 241 1 148 2 375 2 
285 2 320 2 127 1 365 1 215 1 301 7 239 1 274 1 141 1 142 1 372 1 100 1 241 1 148 4 375 3 
40 1 348 1 320 2 6 2 351 1 215 4 69 1 301 23 239 3 305 2 241 5 285 9 364 1 13 2 134 2 365 2 117 2 200 1 340 2 59 4 232 1 142 2 141 1 274 2 290 2 372 3 100 2 375 11 148 12 
301 1 320 1 148 1 
301 1 100 1 375 1 
285 3 5 1 134 1 6 1 117 1 365 1 215 1 59 2 301 6 239 1 290 1 142 1 274 1 372 1 333 1 148 3 375 3 241 2 
320 1 213 1 298 1 127 1 6 1 215 1 8 1 301 12 239 2 47 1 11 1 241 1 285 2 134 1 117 1 365 2 198 1 59 2 290 1 142 2 274 2 372 2 100 1 148 6 375 6 
285 2 13 1 215 1 200 1 340 1 301 6 239 1 372 1 375 3 148 3 241 1 
285 2 348 1 13 1 351 1 6 1 134 1 117 1 215 1 340 1 59 2 301 3 232 1 290 1 305 1 375 1 241 1 148 2 
285 5 13 2 134 1 6 1 117 1 198 1 215 2 200 1 59 2 340 2 301 10 239 2 327 1 290 1 372 2 241 3 375 5 148 5 
285 1 6 1 134 1 117 1 198 1 215 1 59 2 301 2 239 1 290 1 142 1 375 2 
285 2 6 1 134 1 117 1 365 1 198 1 215 1 59 2 301 4 239 1 274 1 290 1 142 1 372 1 241 1 148 2 375 2 
285 2 13 1 351 1 6 3 134 3 117 3 198 1 215 1 59 6 340 1 301 3 82 1 290 3 305 1 148 2 241 1 375 1 
348 1 320 4 127 1 351 1 6 5 215 5 301 34 239 5 46 1 305 2 360 1 333 1 241 7 224 1 285 12 364 1 13 3 134 5 117 5 365 3 198 1 200 2 340 3 59 10 232 1 82 1 290 5 141 1 142 3 274 3 372 5 100 3 148 18 375 16 
348 1 320 1 127 1 6 1 301 8 239 1 11 1 241 2 285 2 364 1 13 1 134 1 117 1 198 1 200 1 59 2 340 1 232 1 290 1 372 1 100 1 148 4 375 4 
348 1 320 2 127 1 6 2 215 1 301 11 239 2 11 1 333 1 241 2 285 3 364 1 13 1 134 2 117 2 365 1 198 1 200 1 340 1 59 4 232 1 290 2 141 1 142 1 372 1 100 1 148 5 375 6 
348 1 320 1 298 1 213 1 127 1 6 3 215 1 8 1 301 19 239 3 47 1 305 1 11 1 333 1 241 3 285 4 364 1 13 1 134 3 117 3 365 2 198 1 200 1 340 1 59 6 232 1 290 3 142 2 274 2 372 3 100 1 148 10 375 9 
348 1 320 1 213 1 298 1 127 1 6 3 215 2 8 1 301 17 239 3 47 1 305 1 11 1 333 1 241 3 285 5 364 1 13 1 134 3 117 3 365 2 198 1 200 1 340 1 59 6 232 1 290 3 142 2 274 1 372 2 100 1 148 7 375 10 
348 1 320 1 127 1 6 1 301 8 239 1 11 1 241 2 285 2 364 1 13 1 134 1 117 1 198 1 200 1 59 2 340 1 232 1 290 1 372 1 100 1 148 4 375 4 
320 1 213 1 298 1 127 1 6 1 215 1 8 1 301 12 239 2 47 1 11 1 241 1 285 2 134 1 117 1 365 2 198 1 59 2 290 1 142 2 274 2 372 2 100 1 148 6 375 6 
348 1 320 1 298 1 213 1 127 1 6 4 215 2 8 1 301 18 239 3 47 1 305 2 11 1 333 1 241 3 285 5 364 1 13 1 134 4 117 4 365 2 198 1 200 1 340 1 59 8 232 1 290 4 142 2 274 1 372 2 100 1 148 8 375 10 
320 1 298 1 213 1 127 1 6 4 215 3 8 1 301 16 239 3 47 1 305 2 11 1 241 3 285 6 134 4 117 4 365 3 198 1 59 8 290 4 82 1 142 3 274 2 372 2 100 1 148 7 375 9 
285 6 348 2 13 3 215 3 200 1 340 3 301 7 232 1 239 1 372 1 148 4 241 3 375 3 
348 1 320 1 298 1 213 1 127 1 6 4 215 1 8 1 301 18 239 3 47 1 305 2 11 1 241 3 285 4 364 1 13 1 134 4 117 4 365 2 198 1 200 1 340 1 59 8 232 1 290 4 82 1 142 2 274 1 372 2 100 1 148 8 375 10 
270 1 318 1 282 1 37 1 31 1 174 1 280 1 
294 1 318 1 174 1 31 1 20 1 280 1 58 1 270 1 282 1 371 1 37 1 344 1 
7 1 284 1 184 1 104 1 324 1 10 1 133 1 171 1 172 1 43 1 110 1 
152 1 112 1 184 1 170 1 133 1 172 1 43 1 113 1 31 2 175 1 256 1 280 2 34 1 7 1 270 1 324 1 233 1 10 1 282 1 110 1 
152 1 0 1 19 1 184 1 43 1 280 2 256 1 189 1 7 2 161 1 324 1 282 1 110 1 112 1 170 2 172 1 133 3 175 1 31 2 113 1 34 2 270 2 233 2 99 1 
152 1 0 1 19 1 184 1 43 1 280 2 256 1 189 1 7 2 161 1 324 1 282 1 110 1 112 1 170 2 172 1 133 3 31 2 113 1 34 2 270 2 233 2 147 1 99 1 
62 1 250 1 0 1 184 1 42 2 43 1 280 1 161 1 7 1 68 1 324 1 193 1 110 1 170 1 309 1 133 4 172 1 31 1 113 1 55 1 244 1 98 1 366 1 270 1 118 2 288 1 233 1 140 1 144 1 181 1 99 1 
62 1 250 1 0 1 184 1 42 2 43 1 280 1 161 1 7 1 68 1 324 1 193 1 110 1 262 1 170 1 309 1 133 4 172 1 31 1 113 1 55 1 244 1 98 1 366 1 270 1 118 2 288 1 233 1 181 1 99 1 
94 1 184 1 324 1 172 1 43 1 110 1 
78 1 184 1 170 1 172 1 133 1 43 2 312 1 7 1 324 1 10 1 334 1 110 1 361 1 
184 1 88 1 43 1 280 2 6 2 7 1 321 1 324 1 239 3 327 1 282 3 241 3 285 4 96 1 133 1 13 2 134 2 136 1 200 2 59 4 340 2 290 2 148 6 152 1 348 1 214 1 256 1 215 1 301 13 72 1 220 1 165 1 110 1 77 2 112 1 364 1 170 1 172 1 175 1 113 1 31 2 34 1 117 2 270 1 229 1 272 1 232 1 233 1 372 3 85 2 375 7 
62 1 250 2 211 1 125 1 157 2 42 3 185 1 68 1 324 1 10 1 329 1 108 1 110 1 79 1 335 2 262 1 264 2 172 1 133 2 55 1 98 1 244 1 135 1 118 3 314 1 231 1 83 1 18 2 
62 1 94 1 184 1 170 1 172 1 133 2 43 2 352 1 367 1 312 1 7 1 324 1 110 1 
78 1 184 2 170 1 172 2 171 1 133 2 43 3 14 1 136 1 7 2 103 1 104 1 324 2 10 1 361 1 110 2 
78 1 184 1 97 1 170 1 172 1 133 1 43 2 14 1 7 1 103 1 324 1 110 1 361 1 
184 1 225 1 172 1 53 1 43 1 324 1 10 1 343 1 342 1 110 1 
184 1 30 1 172 2 133 1 43 1 136 1 7 1 368 1 324 2 84 1 110 2 
208 1 184 3 278 1 43 4 7 3 103 1 104 1 324 3 10 1 110 2 361 1 78 1 170 1 133 4 172 3 171 1 14 1 136 1 368 1 
208 1 184 3 156 1 43 4 7 3 103 1 104 1 324 3 10 1 110 2 361 1 78 1 170 1 133 4 172 3 171 1 14 1 136 1 368 1 
152 1 112 1 184 1 170 1 133 1 172 1 43 1 113 1 31 2 256 1 280 2 34 1 7 1 270 1 324 1 233 1 10 1 282 1 147 1 110 1 
78 1 0 1 184 1 170 1 172 1 133 1 43 2 312 1 7 1 324 1 334 1 110 1 361 1 
45 1 204 1 282 1 173 1 21 1 
19 1 252 1 27 1 42 2 173 2 55 1 98 1 34 1 189 1 228 1 21 2 160 1 118 2 68 1 231 1 204 1 45 2 282 1 249 1 
150 1 173 1 31 1 32 1 280 1 270 1 45 1 204 1 326 1 
252 1 27 1 204 1 
235 1 284 1 341 1 187 1 
235 1 9 1 341 1 187 1 74 1 116 1 67 1 
363 1 328 1 116 1 
235 1 209 1 126 1 187 1 116 3 269 1 90 1 67 1 9 1 120 2 341 1 74 3 
235 1 9 1 203 1 341 1 187 1 23 1 74 2 116 2 67 1 
210 1 126 1 53 1 116 1 67 1 9 1 341 1 74 1 373 1 342 1 195 1 
9 1 126 1 341 1 187 1 74 1 116 1 67 1 
235 1 9 1 126 1 187 2 74 1 116 1 67 1 
126 1 187 1 267 1 116 2 67 2 9 2 230 1 341 1 48 1 74 2 
235 1 251 1 126 1 187 1 116 3 67 1 119 1 9 1 203 2 304 1 341 2 74 3 195 1 
235 1 210 1 126 1 187 1 243 1 53 1 116 2 67 1 9 1 203 1 192 1 341 1 74 2 343 1 342 2 
235 1 126 1 187 1 116 4 67 2 9 2 203 2 304 1 341 2 23 1 74 4 359 1 195 1 
235 1 9 1 126 1 341 1 187 1 74 1 116 1 67 1 
235 2 209 1 254 1 187 2 116 4 90 1 67 1 9 1 203 2 120 1 304 1 341 3 74 4 195 1 
235 1 126 1 158 1 187 1 116 2 67 1 9 1 203 1 341 1 74 2 122 1 182 1 
235 1 9 1 209 1 63 1 120 2 126 1 341 1 187 1 74 3 116 3 90 2 67 1 
41 1 341 2 247 1 339 2 
9 1 201 1 126 1 74 1 116 1 67 1 
235 1 251 1 9 1 203 1 126 1 341 1 187 1 74 2 116 2 67 1 
347 1 
235 1 9 1 126 1 341 1 187 1 74 1 116 1 67 1 
235 1 251 1 9 1 203 1 120 1 126 1 341 1 187 1 74 3 116 3 67 1 
254 1 304 1 341 1 195 1 
341 1 187 1 

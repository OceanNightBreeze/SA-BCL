#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 282 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 38 134 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 38 134 149 92 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException (104,165) 240 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (104,165) (104,165) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (104,165) 240 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (104,165) (104,165) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 6874 | = null
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
348 1 152 2 234 1 328 4 131 3 5 1 260 2 33 1 62 1 313 1 193 2 63 2 241 1 9 1 196 9 243 6 244 1 11 2 114 1 339 1 268 1 202 5 203 2 20 1 225 1 53 2 98 1 323 9 
348 1 152 2 234 1 328 4 131 3 5 1 260 2 33 1 62 1 313 1 193 2 63 2 241 1 9 1 196 9 243 6 244 1 11 2 114 1 339 1 268 1 202 5 203 2 20 1 225 1 53 2 98 1 323 9 
348 1 152 2 234 1 328 5 131 4 5 1 260 2 33 1 62 1 313 1 193 2 63 2 241 1 9 1 196 10 243 7 244 1 11 2 114 1 339 1 268 1 202 6 203 2 20 1 225 1 53 2 98 1 323 10 
348 1 152 2 234 1 328 3 131 2 5 1 260 2 33 1 62 1 313 1 193 2 63 2 9 1 196 7 243 4 244 1 11 2 114 1 339 1 268 1 202 4 203 1 20 1 225 1 53 2 98 1 323 7 
11 1 328 2 131 1 268 1 202 3 5 1 203 2 20 1 260 1 62 1 193 1 53 1 63 1 98 1 241 1 196 4 323 4 243 3 
244 1 112 1 11 1 338 1 152 1 202 1 268 1 5 1 20 1 260 1 61 1 193 1 53 1 196 2 323 2 9 1 
152 1 328 1 131 1 268 1 202 2 5 1 20 1 225 1 260 2 193 2 196 3 323 3 243 1 
345 1 152 1 234 1 328 4 131 3 5 1 260 2 62 1 193 2 63 1 138 1 241 1 243 7 196 9 11 1 114 1 268 1 202 5 203 2 20 1 225 1 53 1 98 1 323 9 
345 1 152 1 234 1 328 4 131 3 5 1 260 2 62 1 193 2 63 1 138 1 241 1 243 7 196 9 11 1 114 1 268 1 202 5 203 2 20 1 225 1 53 1 98 1 323 9 
282 1 93 1 353 1 
353 1 16 1 175 2 
65 1 249 2 13 2 256 2 274 1 261 2 277 2 130 2 
23 1 229 2 253 1 231 1 101 1 256 2 284 1 329 1 130 2 3 1 236 1 307 2 237 2 108 1 34 2 333 1 288 1 89 1 261 3 262 1 315 1 140 1 65 1 13 3 220 2 68 1 120 1 249 2 144 1 122 1 274 1 298 1 250 1 277 2 300 1 124 1 21 1 
249 1 50 1 13 1 256 1 274 1 261 1 277 1 94 1 130 1 125 1 
292 1 13 1 93 1 179 1 353 1 249 1 87 1 133 1 183 1 172 1 261 1 334 1 335 1 125 1 
13 1 93 1 256 1 179 1 353 1 130 1 249 1 87 1 133 2 183 1 172 2 261 1 277 1 335 1 125 1 
133 1 115 1 135 1 172 1 226 1 
133 2 93 1 115 1 172 2 226 1 353 1 360 1 211 1 
133 1 115 1 172 1 
13 1 256 1 94 1 130 1 133 1 50 1 249 1 226 1 172 1 274 1 358 1 261 1 277 1 125 1 
353 1 
133 2 93 1 115 1 172 2 226 1 180 1 353 1 211 1 
291 1 264 1 93 1 127 2 115 2 142 1 353 1 85 2 330 1 211 1 47 1 133 5 226 2 172 5 331 2 215 1 146 1 252 1 64 1 
317 1 229 1 253 1 101 1 13 2 256 1 295 1 236 1 3 1 237 1 249 1 34 1 122 1 332 1 89 1 261 2 277 1 262 1 124 1 21 1 
65 1 282 1 
65 2 245 1 13 2 256 1 130 1 249 2 261 2 277 1 242 1 
28 1 45 1 295 1 
65 1 229 1 253 1 13 1 101 1 27 1 3 1 236 1 237 1 34 1 122 1 89 1 261 1 262 1 124 1 21 1 
65 1 249 3 13 3 256 3 332 1 261 3 277 3 130 1 
249 1 13 1 256 1 261 1 277 1 94 1 125 1 
249 1 245 1 13 1 256 1 261 1 277 1 130 1 125 1 242 1 
253 1 229 1 231 1 101 1 25 1 256 3 130 2 236 1 3 1 307 2 237 1 87 1 133 1 172 1 34 1 333 1 332 1 89 1 261 4 262 1 315 1 335 1 140 1 317 1 65 1 245 1 13 4 220 1 179 1 68 1 120 1 249 3 183 1 162 1 144 1 122 1 298 1 274 1 250 1 277 3 300 1 124 1 21 1 125 1 
65 1 292 1 249 2 13 2 256 1 332 1 261 2 277 1 285 1 
317 1 245 1 13 3 256 3 179 1 67 1 130 1 353 1 133 1 249 3 87 1 183 1 172 1 162 1 332 2 261 3 277 3 335 1 125 1 
245 1 13 2 256 2 45 1 130 1 295 1 249 2 332 1 261 2 277 2 
65 1 229 1 253 1 13 1 101 1 3 1 236 1 237 1 34 1 122 1 89 1 261 1 262 1 124 1 21 1 
65 1 229 1 13 1 101 1 209 1 3 1 236 1 237 1 34 1 122 1 89 1 261 1 302 1 124 1 21 1 
231 1 102 1 220 2 68 2 187 1 28 1 367 1 45 1 295 1 120 1 307 2 270 1 144 1 333 1 8 1 250 1 97 1 37 1 315 1 
13 1 363 1 256 1 249 1 261 1 277 1 335 1 125 1 
317 1 65 1 292 1 245 1 66 1 13 5 256 4 283 1 285 1 130 1 249 5 332 2 261 5 277 4 
249 2 13 2 363 1 256 2 261 2 277 2 94 1 125 1 
265 1 251 1 
265 1 251 1 
153 1 60 1 265 1 251 1 
153 1 60 1 265 1 251 1 
153 1 60 1 
265 1 84 1 251 1 
265 1 84 1 251 1 
153 1 232 1 60 1 265 2 251 2 218 1 
7 1 265 1 251 1 
265 1 84 1 251 1 
265 1 163 1 251 1 
265 1 163 1 251 1 
265 1 163 1 251 1 
198 1 265 2 327 1 210 1 159 2 353 1 222 2 267 1 132 3 355 2 133 2 238 1 310 2 371 1 172 2 376 1 251 2 218 1 80 2 
256 2 83 1 59 1 132 1 355 1 133 1 259 1 310 1 172 1 7 1 36 1 261 2 65 1 176 1 13 2 336 1 265 1 222 1 249 2 371 1 277 2 251 1 301 1 80 1 
11 1 53 1 63 1 
112 1 11 1 53 1 
112 1 178 1 121 1 11 3 347 1 63 2 
112 1 178 1 11 2 347 1 359 1 63 1 
112 1 178 1 11 2 347 2 63 1 
167 1 150 1 127 1 58 1 83 1 85 1 353 1 211 1 212 1 31 2 133 5 134 1 172 5 331 1 8 1 38 1 175 1 291 3 176 1 115 1 93 1 142 1 248 1 47 1 49 1 270 1 370 1 341 1 226 4 78 1 301 1 
167 3 127 2 57 1 58 3 326 1 258 1 353 2 85 2 211 1 212 2 308 1 133 9 134 3 135 5 172 9 331 2 8 3 38 3 175 3 264 1 199 1 291 8 115 6 93 1 41 5 142 1 47 3 49 1 270 3 370 2 341 3 226 7 301 4 164 1 
167 1 150 1 127 1 58 1 353 2 85 1 212 1 31 1 133 3 134 1 172 3 331 1 8 1 38 1 175 2 264 1 291 3 93 1 16 1 47 1 370 1 270 1 226 2 341 1 78 1 301 1 
167 2 127 1 150 1 57 1 58 2 258 1 353 2 85 1 212 1 308 1 31 2 133 4 134 2 172 4 331 1 8 2 38 2 175 3 264 1 291 5 93 1 16 1 47 2 270 2 370 1 341 2 226 3 78 1 301 2 
181 1 282 1 21 1 
296 1 21 1 
151 1 
124 1 21 1 
181 2 122 1 206 1 299 1 124 1 21 3 
122 1 124 1 21 1 
46 1 21 1 
167 1 10 1 102 3 220 7 117 1 68 3 71 1 221 2 200 1 119 1 372 1 108 4 111 1 8 1 205 1 97 2 377 1 
167 1 10 1 102 3 220 7 117 1 68 3 71 1 221 2 200 1 119 1 372 1 108 4 111 1 8 1 205 1 97 2 377 1 
167 1 10 1 102 3 220 7 117 1 68 3 44 1 71 1 221 2 200 1 119 1 372 1 108 4 111 1 8 1 205 1 97 2 377 1 
166 1 167 4 231 1 100 1 102 6 350 4 129 1 307 2 134 3 108 13 111 1 333 1 8 4 38 3 315 1 314 1 10 1 220 28 117 2 68 15 221 3 71 2 200 1 119 2 269 1 270 3 372 2 320 3 144 1 205 2 342 1 184 1 97 4 377 1 
167 1 231 2 102 4 129 1 307 4 108 5 333 2 111 1 8 1 315 2 10 1 220 9 117 1 68 4 221 2 71 1 119 1 372 1 144 2 275 1 205 1 51 1 97 3 377 1 
99 1 229 1 230 1 101 1 349 1 152 1 236 1 237 1 5 1 260 1 34 1 193 1 63 1 243 1 196 2 139 1 112 1 11 2 202 1 268 1 75 1 121 1 20 1 204 1 375 1 53 1 55 1 186 1 227 1 323 2 
99 1 229 1 230 1 101 1 152 1 236 1 237 1 4 1 260 1 6 1 34 1 193 1 63 1 196 3 243 2 139 1 112 1 11 2 202 1 268 1 121 1 75 1 20 1 204 1 53 1 55 1 186 1 227 1 344 1 323 3 
99 1 229 1 230 1 101 1 152 1 236 1 237 1 6 1 34 1 63 1 196 2 243 2 112 1 11 2 202 1 268 1 75 1 121 1 20 1 53 1 55 1 186 1 227 1 344 1 323 2 
99 2 229 1 254 1 101 1 152 2 236 1 3 1 237 1 4 1 260 1 34 1 35 1 193 1 196 1 369 1 17 1 77 1 186 2 55 2 56 1 124 1 323 1 21 1 
99 1 229 1 230 1 101 1 349 1 152 1 236 1 237 1 5 1 260 1 34 1 193 1 63 1 196 1 139 1 112 1 11 2 75 1 121 1 204 1 53 1 55 1 186 1 227 1 344 1 323 1 
208 1 
147 1 229 2 281 1 101 1 103 1 286 1 3 2 236 1 237 2 107 2 331 1 289 1 334 1 335 1 291 2 292 1 113 1 13 1 115 6 116 1 157 4 118 2 16 2 17 1 249 1 297 1 124 1 21 1 125 1 207 1 254 1 82 1 304 2 127 1 353 2 85 1 30 2 211 3 212 1 133 5 87 1 309 1 311 2 172 5 173 2 34 2 261 1 175 2 93 1 179 1 142 1 368 1 182 2 47 2 183 1 
281 1 82 1 304 1 103 1 211 1 133 3 87 1 172 3 261 1 334 1 289 1 335 1 292 1 13 1 115 2 116 1 179 1 157 2 180 1 249 1 183 1 125 1 
281 1 82 1 103 1 353 1 211 1 133 3 87 1 172 3 261 1 334 1 289 1 335 1 292 1 13 1 115 1 93 1 116 1 179 1 157 3 180 1 118 1 249 1 183 1 125 1 
281 1 82 1 304 1 103 1 353 1 211 1 133 3 87 1 172 3 173 1 261 1 334 1 289 1 335 1 292 1 13 1 115 2 93 1 116 1 179 1 180 1 157 3 118 1 249 1 183 1 125 1 
281 1 103 1 2 1 286 1 107 2 331 1 289 1 334 1 335 1 291 1 292 1 12 1 13 1 115 7 116 1 157 6 158 1 118 4 16 2 249 1 79 1 125 1 82 1 304 4 127 1 353 5 85 1 211 3 30 2 87 1 133 5 309 1 172 5 311 2 173 4 261 1 219 1 93 5 179 1 180 1 142 1 47 1 182 2 183 1 
147 1 281 1 82 1 304 2 127 1 103 1 353 2 85 1 211 2 30 2 286 1 133 4 87 1 309 1 107 2 311 2 172 4 173 2 331 1 261 1 334 1 289 1 175 2 335 1 291 1 292 1 13 1 93 1 115 4 116 1 179 1 142 1 157 4 118 2 16 2 182 2 47 1 249 1 183 1 125 1 
281 1 82 1 304 2 127 1 103 1 353 1 85 1 2 1 211 2 30 2 286 1 309 1 133 4 87 1 107 2 311 2 172 4 173 2 331 1 261 1 334 1 289 1 335 1 291 1 292 1 12 1 13 1 93 1 115 4 116 1 179 1 157 4 142 1 158 1 118 2 16 2 182 2 47 1 249 1 183 1 125 1 
281 1 82 1 304 2 127 1 103 1 353 1 85 1 2 1 211 2 30 2 286 1 309 1 133 4 87 1 107 2 311 2 172 4 173 2 331 1 261 1 334 1 289 1 335 1 291 1 292 1 12 1 13 1 93 1 115 4 116 1 179 1 157 4 142 1 158 1 118 2 16 2 182 2 47 1 249 1 183 1 125 1 
281 1 82 1 304 2 127 1 26 2 103 1 353 1 85 1 211 2 30 2 286 1 105 1 133 4 87 1 311 2 172 4 173 2 331 1 261 1 334 1 289 1 175 2 335 1 291 1 292 1 12 1 13 1 93 1 115 4 155 1 116 1 179 1 157 4 142 1 118 2 74 2 47 1 249 1 183 1 279 1 125 1 
281 1 82 1 127 1 304 3 103 1 353 1 85 1 2 1 211 2 30 2 286 1 309 1 133 4 87 1 107 2 311 2 172 4 331 1 173 3 261 1 334 1 289 1 335 1 291 1 219 1 292 1 12 1 13 1 93 1 115 5 116 1 179 1 142 1 157 5 158 1 16 2 118 3 182 2 47 1 249 1 183 1 125 1 
281 1 82 1 127 1 304 3 103 1 353 1 85 1 2 1 211 2 30 2 286 1 309 1 133 4 87 1 107 2 311 2 172 4 331 1 173 3 261 1 334 1 289 1 335 1 291 1 219 1 292 1 12 1 13 1 93 1 115 5 116 1 179 1 142 1 157 5 158 1 16 2 118 3 182 2 47 1 249 1 183 1 125 1 
147 1 281 1 82 1 304 2 127 1 26 2 103 1 353 1 85 1 211 2 30 2 286 1 133 4 87 1 311 2 172 4 173 2 331 1 261 1 334 1 289 1 175 2 335 1 291 1 292 1 13 1 93 1 115 4 155 1 116 1 179 1 142 1 157 4 118 2 74 2 47 1 249 1 183 1 125 1 
282 1 167 1 231 1 102 2 28 1 307 2 108 3 111 1 333 1 8 1 37 1 315 1 10 1 65 2 220 6 117 1 68 3 221 1 45 1 295 1 119 1 120 1 144 1 250 1 97 2 377 1 
167 3 231 2 100 2 350 4 28 12 307 4 88 1 134 3 108 7 214 1 109 1 357 1 333 2 288 1 8 3 38 3 315 2 140 1 65 1 14 1 220 18 68 11 295 12 45 3 120 2 270 3 320 3 144 2 342 1 250 1 
253 1 229 1 231 1 101 1 256 1 27 1 236 1 3 1 237 1 307 2 190 1 108 1 109 1 34 1 333 1 332 1 89 1 288 1 261 2 262 1 315 1 195 1 317 1 140 1 65 1 13 2 362 1 220 2 68 1 45 1 120 1 249 1 122 1 144 1 250 1 277 1 124 1 21 1 
229 1 231 2 101 1 3 1 236 1 237 1 108 2 109 1 110 1 332 1 333 2 8 1 13 2 68 4 295 2 120 2 249 1 122 1 250 2 300 1 124 1 21 1 253 1 167 1 256 1 351 1 28 2 307 4 134 1 171 1 34 1 89 1 261 2 38 1 217 1 262 1 315 2 140 1 317 1 220 6 45 2 319 1 270 1 144 2 277 1 
229 7 254 1 231 2 101 2 169 1 256 1 170 1 329 2 236 2 3 2 235 1 237 8 307 4 108 1 34 8 136 1 332 1 333 2 288 1 261 1 37 1 315 2 140 1 13 1 220 2 42 1 68 1 70 1 120 2 249 1 17 1 373 1 144 2 250 2 277 1 375 1 124 2 344 1 21 3 
167 1 231 1 245 1 13 1 220 2 256 1 130 1 120 1 307 2 249 1 134 1 108 2 109 1 144 1 333 1 374 1 261 1 250 1 277 1 38 1 315 1 
167 1 231 1 220 1 120 1 307 2 108 1 144 1 333 1 137 1 250 1 37 1 38 1 315 1 
231 1 102 1 220 2 68 2 28 1 367 1 45 1 295 1 120 1 307 2 270 1 144 1 333 1 8 1 250 1 97 1 37 1 315 1 
167 1 231 1 102 1 28 1 307 2 134 1 108 1 333 1 8 1 38 1 37 1 315 1 220 3 68 2 295 1 45 1 120 1 270 1 144 1 250 1 97 1 
167 1 231 1 220 1 235 1 120 1 307 2 108 1 144 1 333 1 137 1 250 1 38 1 315 1 
231 1 102 1 220 2 68 2 28 1 367 1 45 1 295 1 235 1 120 1 307 2 270 1 144 1 333 1 8 1 250 1 97 1 315 1 
167 1 231 1 102 1 28 1 235 1 307 2 134 1 108 1 333 1 8 1 38 1 315 1 220 3 68 2 295 1 45 1 120 1 270 1 144 1 250 1 97 1 
167 1 231 1 102 1 220 3 68 2 28 1 45 1 295 1 120 1 307 2 270 1 134 1 108 1 144 1 333 1 8 1 250 1 97 1 38 1 315 1 
253 1 229 1 231 1 101 1 236 1 3 1 237 1 307 2 108 1 34 1 333 1 288 1 89 1 261 1 262 1 315 1 140 1 65 1 13 1 220 2 68 1 120 1 122 1 144 1 250 1 300 1 124 1 21 1 
229 1 231 1 101 1 209 1 236 1 3 1 237 1 307 2 108 1 34 1 333 1 288 1 89 1 261 1 315 1 140 1 65 1 13 1 220 2 68 1 120 1 122 1 76 1 144 1 250 1 302 1 124 1 21 1 
167 1 231 1 102 1 28 1 307 2 134 1 108 1 109 1 333 1 8 1 38 1 315 1 220 3 68 2 295 1 45 1 120 1 270 1 144 1 250 1 97 1 
167 1 253 1 229 1 231 1 101 1 102 1 28 1 236 1 237 1 307 2 134 1 108 1 34 1 333 1 8 1 89 1 261 1 38 1 262 1 217 1 315 1 13 1 220 3 68 2 45 1 295 1 120 1 270 1 122 1 144 1 250 1 97 1 300 1 375 1 124 1 21 1 
167 1 231 1 346 1 256 1 130 1 307 2 134 1 108 1 109 1 333 1 8 1 261 1 38 1 315 1 245 1 13 1 220 2 68 1 120 1 249 1 270 1 144 1 250 1 277 1 
167 2 231 2 100 1 325 1 102 1 350 2 1 2 307 4 134 2 154 1 108 5 333 2 8 2 90 1 91 1 38 2 315 2 220 13 68 8 223 1 270 2 320 1 144 2 342 1 51 1 97 1 54 1 321 1 
167 2 231 2 100 1 325 1 102 1 350 2 1 2 307 4 134 2 154 1 108 5 333 2 8 2 90 1 91 1 38 2 315 2 220 13 68 8 223 1 270 2 320 1 144 2 342 1 51 1 97 1 54 1 321 1 
167 8 231 1 100 2 149 1 255 1 325 1 102 6 350 4 1 3 307 2 134 7 154 1 108 18 111 1 333 1 8 8 90 1 38 7 315 1 10 1 177 1 92 1 14 2 220 42 117 1 68 24 221 1 119 1 223 1 143 1 270 7 320 4 144 1 342 2 51 1 97 6 377 1 54 1 321 1 280 1 
167 2 231 2 100 1 325 1 102 2 350 2 1 1 307 4 134 2 154 1 108 4 333 2 8 2 90 1 91 1 38 2 315 2 220 11 68 7 318 1 270 2 320 1 144 2 342 1 51 1 97 2 54 1 321 1 
167 3 231 2 149 1 102 1 325 2 255 1 350 2 129 1 1 4 307 4 134 3 154 2 108 10 333 2 8 3 90 1 38 3 315 2 177 1 92 1 220 24 68 14 223 1 143 1 270 3 320 2 144 2 342 2 51 1 97 1 54 1 321 1 280 1 
355 1 310 1 265 1 327 1 376 1 251 1 218 1 222 1 39 1 80 1 
7 1 59 1 
86 1 355 1 310 1 40 1 265 1 251 1 322 1 222 1 80 1 
198 1 265 1 327 1 210 1 159 1 353 1 222 1 132 2 133 1 355 1 238 1 310 1 371 1 172 1 376 1 251 1 218 1 80 1 
198 1 265 1 327 1 210 1 159 1 353 1 222 1 132 2 133 1 355 1 238 1 310 1 371 1 172 1 376 1 251 1 218 1 80 1 
198 1 265 1 327 1 210 1 159 1 353 1 222 1 132 2 133 1 355 1 238 1 310 1 371 1 172 1 376 1 251 1 218 1 80 1 
232 1 84 1 29 1 
232 1 84 1 29 1 
293 1 163 1 
232 1 293 1 163 1 
336 1 36 1 
22 1 256 2 83 1 59 1 132 1 238 1 133 1 355 1 259 1 310 1 172 1 7 1 36 1 261 2 65 1 176 1 13 2 336 1 265 1 159 1 222 1 249 2 226 1 277 2 251 1 301 1 80 1 
84 1 29 1 
232 1 293 1 163 1 
229 2 231 1 101 1 169 1 329 2 236 1 237 2 307 2 287 1 108 1 109 1 34 2 333 1 288 1 261 2 315 1 140 1 13 2 220 2 68 1 69 1 70 1 120 1 95 1 249 2 144 1 250 1 343 1 96 1 124 1 21 1 
112 1 229 2 11 2 230 1 361 1 101 1 246 1 128 1 236 1 237 2 121 1 75 1 34 2 375 1 53 1 63 1 55 1 344 1 139 1 
112 1 229 1 11 2 230 1 101 1 246 1 236 1 237 1 106 1 121 1 75 1 34 1 53 1 63 1 55 1 344 1 139 1 
229 1 254 1 168 1 101 1 128 1 236 1 3 1 237 1 17 1 34 1 35 1 55 1 124 1 21 1 
112 1 229 1 11 2 230 1 361 1 101 1 246 1 128 1 236 1 237 1 121 1 75 1 34 1 53 1 63 1 55 1 344 1 139 1 
185 1 
291 1 47 1 282 1 93 1 146 1 353 1 330 1 
291 1 93 1 115 1 127 1 142 1 353 2 85 1 211 1 16 1 47 1 182 1 133 1 309 1 107 1 172 1 331 1 175 1 
229 1 0 1 324 2 101 1 58 4 236 2 3 1 237 1 331 3 192 2 8 2 239 2 194 1 290 1 291 8 115 5 296 3 16 4 341 4 122 1 299 1 124 1 21 6 207 1 167 2 127 3 351 2 85 3 353 5 212 2 211 3 133 5 134 2 172 5 34 1 38 2 175 8 141 2 93 1 179 2 142 3 181 2 47 5 270 2 145 2 278 2 
167 1 291 2 92 1 149 1 255 1 127 1 58 3 142 1 350 1 353 2 85 1 16 2 47 3 134 1 341 3 320 1 331 1 342 1 38 1 175 4 
167 2 127 1 256 1 85 1 2 1 130 1 133 1 172 1 356 1 331 1 8 1 358 1 261 1 10 1 291 2 13 1 117 1 142 1 247 1 94 1 119 1 47 2 50 1 249 1 274 1 145 2 277 1 125 1 
291 1 127 1 93 1 142 1 85 1 353 1 330 1 47 1 331 1 146 1 
167 1 291 2 58 1 353 1 16 1 47 1 270 1 134 1 341 1 145 1 8 1 38 1 175 2 
133 1 93 1 172 1 115 1 353 1 211 1 
207 2 229 4 254 1 148 1 101 2 127 2 104 1 306 2 85 2 212 2 211 2 236 3 3 2 237 4 189 1 133 3 172 3 331 2 34 4 240 1 264 1 291 2 115 4 142 1 368 1 160 1 201 1 47 2 271 1 17 1 297 1 122 1 124 2 21 2 
229 1 253 1 231 1 101 1 256 2 130 2 3 1 236 1 307 2 237 1 34 1 333 1 89 1 261 3 262 1 315 1 140 1 65 1 13 3 220 1 68 1 120 1 249 2 274 1 298 1 122 1 144 1 250 1 277 2 300 1 124 1 21 1 
207 1 291 1 127 1 93 2 58 2 142 1 221 1 85 1 353 4 16 2 212 1 47 2 341 2 331 1 175 4 
355 1 310 1 123 1 
355 1 310 1 123 1 
355 1 310 1 312 1 36 1 327 1 
355 1 310 1 123 1 
355 1 310 1 174 1 
355 1 310 1 174 1 
355 1 310 1 174 1 
355 1 310 1 
265 1 251 1 
167 1 231 1 102 2 350 1 307 2 108 4 333 1 111 1 8 1 315 1 10 1 92 1 220 8 117 1 68 4 221 1 119 1 320 1 144 1 342 1 51 1 97 2 377 1 
167 4 231 2 100 1 149 1 255 1 102 3 350 2 307 4 134 4 108 7 333 2 8 4 38 4 315 2 177 1 92 1 220 18 14 1 68 11 143 1 224 1 270 4 320 2 144 2 342 1 51 1 97 3 
167 3 231 3 149 1 255 1 102 3 350 1 129 1 307 6 134 2 108 7 111 1 333 3 8 3 38 2 315 3 10 1 177 1 92 1 220 17 117 1 68 10 221 1 119 1 143 1 224 1 270 2 320 1 144 3 342 1 51 1 97 3 377 1 
167 2 231 2 149 1 255 1 102 1 350 1 307 4 134 2 108 4 333 2 8 2 38 2 315 2 177 1 92 1 220 10 68 6 143 1 224 1 270 2 320 1 144 2 342 1 51 1 97 1 
167 1 231 1 102 2 350 1 307 2 108 4 333 1 111 1 8 1 315 1 10 1 92 1 220 8 117 1 68 4 221 1 119 1 320 1 144 1 342 1 51 1 97 2 377 1 
167 2 231 1 149 1 255 1 102 1 350 1 307 2 134 2 108 4 333 1 8 2 38 2 315 1 177 1 92 1 220 10 68 6 143 1 270 2 320 1 144 1 342 1 51 1 97 1 
167 2 231 3 149 1 255 1 102 1 350 1 129 1 307 6 134 2 108 4 333 3 8 2 38 2 315 3 177 1 92 1 220 11 68 7 143 1 224 1 270 2 320 1 144 3 342 1 51 1 97 1 
167 2 231 3 149 1 255 1 102 2 350 1 129 1 307 6 134 2 108 4 333 3 8 2 91 1 38 2 315 3 177 1 92 1 220 11 68 7 143 1 270 2 320 1 144 3 342 1 51 1 97 2 
10 1 167 1 220 7 102 6 117 3 68 4 119 3 108 3 111 1 8 1 205 3 97 3 377 2 
167 2 231 3 149 1 255 1 102 1 350 1 129 1 307 6 134 2 108 4 333 3 8 2 91 1 38 2 315 3 177 1 92 1 220 11 68 7 143 1 270 2 320 1 144 3 342 1 51 1 97 1 
167 1 10 1 231 2 220 8 102 3 117 1 68 4 221 1 129 1 119 1 307 4 108 4 144 2 333 2 111 1 8 1 205 1 97 2 377 1 315 2 
282 1 10 1 167 1 102 2 220 6 117 1 68 3 221 1 119 1 108 3 111 1 8 1 97 2 377 1 
167 1 231 1 102 1 220 3 68 2 307 2 224 1 270 1 134 1 108 1 144 1 333 1 8 1 97 1 38 1 315 1 
167 1 100 1 102 1 220 6 68 4 350 2 270 1 134 1 108 2 320 1 342 1 8 1 97 1 38 1 
167 3 231 2 100 1 102 7 350 2 129 2 307 4 354 1 134 2 88 1 108 9 111 1 333 2 8 3 38 2 315 2 10 1 220 21 14 1 117 2 68 12 221 1 119 2 270 2 320 2 144 2 205 2 97 5 377 1 
220 1 68 1 350 1 
108 1 220 1 320 1 
167 1 231 1 220 5 102 2 68 3 351 1 307 2 224 1 270 1 134 1 108 2 333 1 144 1 8 1 38 1 97 2 315 1 
167 2 231 1 149 1 255 1 102 1 350 1 307 2 134 2 108 4 333 1 8 2 38 2 315 1 177 1 92 1 220 10 68 6 143 1 270 2 320 1 144 1 342 1 51 1 97 1 
10 1 167 1 220 6 102 2 117 1 68 3 119 1 108 3 8 1 205 1 97 1 
231 1 102 2 220 3 117 1 68 2 129 1 119 1 307 2 354 1 108 1 144 1 333 1 111 1 205 1 97 1 377 1 315 1 
10 1 167 2 231 1 102 5 220 10 117 2 68 5 247 1 119 2 307 2 108 5 333 1 144 1 205 2 8 2 51 1 97 3 315 1 
167 1 231 1 220 1 307 2 108 1 144 1 333 1 51 1 38 1 315 1 
167 1 231 1 102 1 220 3 68 2 307 2 270 1 134 1 108 1 144 1 333 1 8 1 51 1 97 1 38 1 315 1 
231 3 220 3 102 2 117 1 68 2 129 1 119 1 307 6 354 1 108 1 144 3 333 3 205 1 91 1 51 1 97 1 315 3 
166 1 167 5 231 5 100 1 102 8 350 4 129 2 307 10 354 1 134 3 108 14 111 1 333 5 8 5 91 1 38 3 315 5 314 1 10 2 220 33 117 3 68 19 221 1 119 3 269 1 224 1 270 3 320 3 144 5 205 3 342 1 51 1 97 5 377 1 
65 1 249 1 292 1 13 1 261 1 285 1 316 1 
65 1 24 1 292 1 13 1 233 1 285 1 48 1 249 1 213 1 273 1 261 1 316 1 
254 1 282 1 229 1 17 1 101 1 34 1 236 1 124 1 3 1 21 1 237 1 
65 1 229 1 13 2 101 1 256 1 236 1 3 1 237 1 249 1 34 1 122 1 332 1 89 1 261 2 277 1 262 1 124 1 21 1 
229 1 101 1 256 2 306 1 352 1 236 1 237 1 87 1 34 1 332 1 89 1 261 2 262 1 335 1 65 1 13 2 46 1 249 2 122 2 277 1 124 2 21 3 125 1 
228 1 229 2 101 1 256 2 306 1 352 1 236 1 237 2 87 1 34 2 332 1 89 1 261 2 335 1 65 1 13 2 46 1 249 2 122 2 277 1 302 1 124 2 21 3 125 1 
228 1 229 3 101 1 93 1 115 1 179 1 156 1 306 1 365 1 353 1 352 1 46 1 296 1 3 1 236 1 237 3 181 1 133 2 172 2 34 3 122 1 124 1 21 4 
228 1 229 3 141 1 101 1 93 1 115 1 179 1 306 1 353 1 352 1 46 1 296 1 3 1 236 1 237 3 181 1 133 2 172 2 34 3 122 1 124 1 21 4 
229 1 101 1 34 1 42 1 236 1 237 1 
165 1 229 1 271 1 101 1 34 1 122 1 104 1 299 1 236 2 124 1 3 1 21 1 237 1 
229 1 231 2 101 1 102 5 236 1 237 1 108 7 109 1 191 1 332 1 333 2 111 1 8 3 10 2 65 3 13 2 117 2 68 7 247 1 295 1 120 2 119 2 249 1 122 1 205 1 250 2 300 1 343 1 124 1 125 1 21 1 253 1 167 3 256 1 28 1 307 4 171 1 34 1 89 1 261 2 262 1 217 1 315 2 220 14 221 1 45 1 144 2 277 1 375 1 97 4 377 1 
229 1 324 1 127 2 353 1 85 2 330 1 211 1 3 1 237 1 133 3 172 3 34 1 331 2 192 1 239 1 291 1 141 1 93 1 115 2 179 1 142 2 160 1 296 1 181 1 47 1 226 1 146 1 21 2 
181 1 229 2 101 1 34 2 42 1 122 1 299 1 375 1 236 2 124 1 290 1 21 2 237 2 
228 1 229 4 254 1 101 1 15 1 236 1 3 1 237 4 17 1 34 4 375 1 124 1 21 1 
229 1 101 1 104 1 188 1 201 1 236 2 237 1 271 1 34 1 122 1 240 1 124 1 21 1 
112 1 229 1 11 1 230 1 101 1 34 1 53 1 236 1 3 1 237 1 
229 2 101 1 169 1 69 1 236 1 237 2 34 2 375 1 124 1 344 1 21 1 
254 1 229 4 101 2 169 1 15 1 170 1 306 1 3 1 236 2 237 5 17 1 34 5 136 1 375 1 124 2 21 3 
254 1 229 4 101 2 169 1 15 1 170 1 306 1 366 1 3 1 236 2 237 5 17 1 34 5 375 1 124 2 21 3 
65 1 229 1 13 2 101 1 256 1 236 1 3 1 237 1 249 1 34 1 122 1 332 1 89 1 261 2 277 1 302 1 124 1 21 1 
165 1 229 1 271 1 101 1 34 1 122 1 104 1 306 1 299 1 236 2 124 1 21 1 237 1 
65 1 19 1 272 1 216 1 266 1 
197 1 65 1 93 1 179 1 353 1 266 1 87 1 133 2 32 1 19 2 272 2 183 1 226 1 172 2 162 1 216 2 52 1 335 1 125 1 
13 1 266 1 95 1 287 1 249 1 272 1 216 1 261 1 96 1 
197 1 52 1 266 1 
202 1 268 1 282 1 20 1 
202 1 268 1 20 1 260 1 193 1 323 1 196 1 
152 1 186 1 323 1 
244 2 202 1 268 1 18 1 5 1 161 1 20 1 260 1 193 1 196 3 323 3 81 1 
202 1 268 1 203 1 20 1 260 1 193 1 243 1 323 2 196 2 
202 1 11 1 5 1 260 1 62 1 328 1 193 1 53 1 63 1 323 1 196 1 
202 1 268 1 5 1 260 1 193 1 323 1 196 1 
268 2 5 1 20 1 260 1 193 1 323 1 196 1 
305 1 294 1 202 1 268 1 5 1 260 2 193 2 196 2 323 2 263 1 
114 1 234 1 328 1 131 1 268 1 202 2 5 1 20 1 260 1 193 1 196 3 323 3 243 2 
112 1 11 2 257 1 202 1 268 1 5 1 121 1 20 1 260 1 193 1 63 1 53 1 196 2 323 2 243 1 
328 1 131 1 268 1 202 2 5 1 203 1 20 1 260 2 193 2 241 1 196 4 323 4 243 2 
202 1 268 1 5 1 20 1 260 1 193 1 323 1 196 1 
244 1 364 1 328 1 131 1 268 2 202 3 161 1 20 2 260 1 193 1 81 1 243 2 196 4 323 4 
345 1 43 1 202 1 268 1 5 1 20 1 260 1 276 1 193 1 196 2 323 2 243 1 
244 2 340 1 202 1 268 1 5 1 161 1 20 1 260 1 193 1 196 3 323 3 81 2 
202 2 337 1 73 1 303 2 
126 1 5 1 260 1 193 1 323 1 196 1 
202 1 268 1 5 1 20 1 260 1 114 1 193 1 243 1 323 2 196 2 
72 1 
202 1 268 1 5 1 20 1 260 1 193 1 323 1 196 1 
244 1 114 1 268 1 202 1 5 1 20 1 260 1 193 1 243 1 196 3 323 3 
202 1 364 1 328 1 131 1 
202 1 268 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 42 (14,71) (14,71) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 42 (14,71) (14,71) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 42 (14,71) (14,71) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 42 (14,71) (14,71) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 269 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
14 1 243 1 312 1 185 1 313 1 199 1 42 1 365 1 377 1 116 1 88 1 191 1 71 1 
14 1 243 1 312 1 185 1 313 1 199 1 42 1 365 1 377 1 116 1 88 1 191 1 71 1 
14 1 243 1 312 1 185 1 313 1 199 1 42 1 365 1 377 1 116 1 88 1 191 1 71 1 
14 1 243 1 312 1 185 1 313 1 199 1 42 1 365 1 377 1 116 1 88 1 191 1 71 1 
38 1 312 4 185 1 132 1 372 3 111 1 186 1 231 1 199 1 42 1 365 1 201 1 104 2 210 3 367 2 377 4 88 1 191 1 
219 1 243 1 38 1 312 2 372 1 185 1 15 1 186 1 1 1 313 1 199 1 365 1 42 1 352 1 377 2 191 1 
38 1 312 3 185 2 372 2 186 1 251 1 313 1 199 1 201 1 367 1 210 1 377 3 191 2 
312 9 290 1 251 1 313 1 199 1 365 1 201 3 367 4 104 2 10 1 38 1 185 2 372 5 132 1 111 1 186 1 231 1 163 1 42 1 136 1 210 7 377 9 88 1 191 2 
312 9 290 1 251 1 313 1 199 1 365 1 201 3 367 4 104 2 10 1 38 1 185 2 372 5 132 1 111 1 186 1 231 1 163 1 42 1 136 1 210 7 377 9 88 1 191 2 
192 1 64 1 287 1 
192 1 174 2 204 1 
22 2 281 1 59 2 195 2 18 1 125 2 55 2 224 2 
0 1 221 1 244 1 245 1 247 1 195 3 252 1 125 2 55 2 270 1 224 2 364 1 146 1 79 1 366 2 271 1 7 2 226 1 153 1 156 1 182 1 82 1 205 2 59 3 324 2 207 1 302 1 18 1 22 2 281 1 65 1 23 1 351 1 168 2 216 1 166 1 241 1 
22 1 59 1 195 1 196 1 18 1 143 1 125 1 55 1 343 1 224 1 
192 1 59 1 195 1 54 1 325 1 331 1 143 1 20 1 224 1 145 1 64 1 211 1 293 1 131 1 
192 1 59 1 195 1 54 1 325 1 331 1 55 1 125 1 143 1 224 1 145 2 22 1 64 1 211 1 131 2 
145 1 357 1 85 1 318 1 131 1 
145 2 192 1 64 1 81 1 30 1 85 1 318 1 131 2 
145 1 318 1 131 1 
59 1 195 1 196 1 234 1 18 1 143 1 55 1 125 1 224 1 145 1 22 1 85 1 131 1 343 1 
192 1 
145 2 192 1 64 1 176 1 30 1 85 1 318 1 131 2 
192 1 50 2 345 1 94 1 30 1 298 1 97 2 239 1 145 5 64 1 44 2 267 1 66 1 350 1 368 1 85 2 318 2 380 1 131 5 
205 1 244 1 59 2 133 1 195 2 125 1 364 1 224 1 22 1 366 1 103 1 271 1 226 1 7 1 153 1 216 1 166 1 182 1 12 1 82 1 
281 1 287 1 
59 2 195 2 74 1 55 1 125 1 224 2 22 1 281 2 70 1 
311 1 32 1 133 1 
205 1 59 1 244 1 195 1 364 1 78 1 281 1 366 1 226 1 7 1 271 1 153 1 216 1 166 1 182 1 82 1 
22 3 281 1 59 3 103 1 195 3 55 1 125 3 224 3 
22 1 59 1 195 1 196 1 143 1 125 1 224 1 
22 1 59 1 195 1 74 1 70 1 143 1 125 1 55 1 224 1 
0 1 221 1 244 1 245 1 195 4 54 1 74 1 331 1 252 1 55 2 125 3 143 1 364 1 224 3 145 1 146 1 366 1 103 1 271 1 226 1 7 1 153 1 156 1 182 1 12 1 131 1 82 1 205 1 322 1 59 4 324 2 302 1 325 1 19 1 18 1 22 3 281 1 65 1 211 1 23 1 168 1 216 1 166 1 241 1 
22 1 281 1 59 2 103 1 293 1 195 2 203 1 125 1 224 2 
192 1 59 3 195 3 74 1 54 1 325 1 19 1 331 1 55 1 143 1 125 3 224 3 145 1 22 3 103 2 211 1 317 1 12 1 131 1 
59 2 32 1 195 2 133 1 74 1 55 1 125 2 224 2 22 2 103 1 
205 1 59 1 244 1 195 1 364 1 281 1 366 1 226 1 7 1 271 1 153 1 166 1 216 1 182 1 82 1 
205 1 59 1 275 1 195 1 359 1 364 1 281 1 366 1 226 1 7 1 271 1 166 1 216 1 182 1 82 1 
311 2 221 1 32 2 53 1 252 2 146 1 156 1 181 1 261 1 371 1 324 2 133 2 187 1 207 2 161 1 263 1 65 1 23 1 240 1 46 1 353 1 286 1 168 4 241 1 
22 1 59 1 195 1 264 1 331 1 143 1 125 1 224 1 
59 5 195 5 112 1 74 1 125 4 55 1 224 5 22 4 281 1 103 2 293 1 203 1 118 1 12 1 
22 2 59 2 195 2 196 1 264 1 143 1 125 2 224 2 
110 1 215 1 
110 1 215 1 
128 1 107 1 
128 1 107 1 
128 1 107 1 
110 1 24 1 215 1 
110 1 24 1 215 1 
110 1 225 1 215 1 
274 1 110 2 180 1 128 1 215 2 107 1 
110 1 24 1 215 1 
110 1 215 1 13 1 
110 1 215 1 13 1 
110 1 215 1 13 1 
296 1 192 1 110 2 194 2 248 1 292 2 135 1 333 1 99 2 145 2 100 1 188 3 376 2 212 1 294 1 180 1 215 2 26 2 131 2 
140 1 72 1 194 1 289 1 195 2 125 2 99 1 224 2 145 1 225 1 294 1 57 1 131 1 259 1 59 2 110 1 22 2 281 1 188 1 326 1 376 1 378 1 215 1 26 1 
88 1 42 1 365 1 
219 1 42 1 365 1 
219 1 123 1 122 1 117 1 88 2 365 3 
219 1 123 1 282 1 117 1 88 1 365 2 
219 1 123 2 88 1 117 1 365 2 
169 1 72 1 50 1 192 2 94 1 30 1 358 1 53 1 174 3 2 1 124 1 97 1 77 2 145 5 338 1 295 2 204 1 318 1 57 1 131 5 229 1 345 2 262 1 263 1 44 1 64 1 326 1 267 3 46 1 85 4 353 1 49 2 
357 5 192 5 50 2 94 1 30 1 358 2 53 3 269 1 174 9 2 2 124 3 97 2 198 1 77 6 145 9 178 5 338 1 295 6 204 3 318 6 155 1 131 9 83 1 345 6 298 1 263 3 237 1 326 4 64 1 44 2 267 8 46 3 85 7 213 1 353 3 
192 3 50 1 195 1 358 1 196 1 53 1 2 1 174 4 124 1 97 1 143 1 125 1 55 1 77 2 224 1 145 3 295 2 204 2 343 1 131 3 59 1 229 1 345 2 262 1 298 1 263 1 234 1 18 1 22 1 64 1 44 1 326 1 267 3 85 2 46 1 353 1 49 1 
192 2 50 1 358 1 53 1 269 1 174 4 2 1 124 1 97 1 77 2 145 2 295 2 204 2 131 2 229 1 345 2 298 1 262 1 263 1 44 1 326 1 267 3 85 1 46 1 353 1 49 1 
134 1 287 1 216 1 
216 1 90 1 
361 1 
216 1 82 1 
328 1 271 1 134 2 216 3 82 1 37 1 
271 1 216 1 82 1 
216 1 236 1 
261 2 222 1 323 1 233 1 161 3 207 4 263 1 303 2 252 3 61 1 144 1 101 1 115 1 8 1 353 1 168 7 27 1 
261 2 222 1 323 1 233 1 161 3 207 4 263 1 303 2 252 3 61 1 144 1 101 1 115 1 8 1 353 1 168 7 27 1 
261 2 222 1 323 1 233 1 161 3 207 4 263 1 303 2 252 3 61 1 144 1 101 1 115 1 8 1 353 1 341 1 168 7 27 1 
220 1 222 5 52 3 53 3 124 3 362 1 252 15 144 2 101 2 146 1 8 1 127 4 156 1 261 5 369 1 323 1 324 2 300 1 233 1 207 16 161 10 303 3 263 4 279 1 61 2 115 1 65 1 164 1 46 3 285 1 353 4 168 31 27 2 241 1 
222 1 252 4 144 1 80 1 146 2 101 1 9 1 156 2 261 3 369 1 324 4 323 1 207 5 161 4 233 1 263 1 303 2 61 1 65 2 115 1 353 1 168 9 241 2 27 1 
92 1 219 1 121 1 312 2 122 1 313 1 199 1 364 1 365 2 5 1 4 1 366 1 7 1 154 1 205 1 38 1 372 1 185 1 230 1 186 1 299 1 113 1 280 1 42 1 210 1 377 2 88 1 89 1 166 1 191 1 
92 1 219 1 122 1 121 1 312 3 313 1 364 1 365 2 5 1 366 1 7 1 154 1 205 1 109 1 38 1 372 1 185 1 230 1 186 1 299 1 113 1 280 1 42 1 210 2 377 3 165 1 88 1 48 1 166 1 191 1 
92 1 219 1 121 1 312 2 122 1 313 1 364 1 365 2 5 1 366 1 7 1 154 1 205 1 109 1 38 1 372 1 186 1 299 1 280 1 42 1 210 2 377 2 88 1 48 1 166 1 
92 2 121 2 312 1 313 2 142 1 364 1 5 2 366 1 316 1 334 1 7 1 226 1 106 1 129 1 82 1 205 1 185 1 41 1 377 1 165 1 216 1 166 1 191 1 
92 1 219 1 121 1 312 1 122 1 313 1 199 1 364 1 365 2 5 1 4 1 366 1 7 1 154 1 205 1 185 1 230 1 299 1 113 1 280 1 42 1 377 1 88 1 48 1 166 1 191 1 
39 1 
192 2 50 1 94 1 195 1 54 1 249 1 96 2 97 1 142 1 331 1 143 1 145 5 335 1 337 1 293 1 7 2 152 1 204 2 258 1 342 2 260 1 205 2 59 1 345 2 17 1 266 1 20 1 305 1 64 1 267 2 211 1 214 1 216 1 166 1 307 4 310 1 30 3 358 1 360 2 174 2 76 2 364 1 224 1 366 2 226 2 318 6 131 5 227 1 82 1 273 2 325 1 41 1 44 1 137 2 47 2 
310 1 59 1 30 1 195 1 54 1 360 1 249 1 325 1 331 1 266 1 143 1 20 1 224 1 145 3 176 1 211 1 337 1 293 1 318 2 227 1 307 2 131 3 
310 1 192 1 59 1 30 1 195 1 54 1 249 1 325 1 331 1 266 1 143 1 20 1 224 1 145 3 64 1 176 1 211 1 337 1 293 1 47 1 318 1 227 1 307 3 131 3 
310 1 192 1 59 1 30 1 195 1 54 1 360 1 249 1 325 1 331 1 266 1 143 1 20 1 224 1 145 3 64 1 176 1 137 1 211 1 337 1 293 1 47 1 318 2 227 1 307 3 131 3 
192 5 50 1 94 1 195 1 54 1 249 1 96 2 97 1 331 1 143 1 145 5 337 1 293 1 255 1 204 2 342 2 260 1 59 1 345 1 160 1 17 1 266 1 20 1 64 5 267 1 211 1 307 6 310 1 170 1 30 3 360 4 76 2 224 1 176 1 318 7 227 1 131 5 273 2 183 1 325 1 44 1 137 4 189 1 47 4 
310 1 192 2 50 1 94 1 30 2 195 1 54 1 360 2 174 2 249 1 96 2 97 1 76 2 331 1 143 1 224 1 145 4 337 1 293 1 152 1 318 4 204 2 342 2 131 4 227 1 260 1 273 2 59 1 345 1 17 1 325 1 266 1 20 1 64 1 44 1 267 1 137 2 211 1 47 2 307 4 
310 1 170 1 192 1 50 1 94 1 30 2 195 1 54 1 360 2 249 1 96 2 97 1 76 2 331 1 143 1 224 1 145 4 293 1 337 1 255 1 318 4 204 2 342 2 131 4 227 1 260 1 273 2 183 1 59 1 345 1 17 1 325 1 266 1 20 1 64 1 44 1 267 1 137 2 211 1 47 2 307 4 
310 1 170 1 192 1 50 1 94 1 30 2 195 1 54 1 360 2 249 1 96 2 97 1 76 2 331 1 143 1 224 1 145 4 293 1 337 1 255 1 318 4 204 2 342 2 131 4 227 1 260 1 273 2 183 1 59 1 345 1 17 1 325 1 266 1 20 1 64 1 44 1 267 1 137 2 211 1 47 2 307 4 
310 1 192 1 50 1 94 1 30 2 195 1 54 1 360 2 174 2 249 1 96 2 97 1 331 1 332 1 143 1 224 1 200 2 145 4 177 1 293 1 337 1 318 4 130 2 131 4 227 1 260 1 273 2 183 1 59 1 345 1 325 1 266 1 20 1 64 1 44 1 267 1 137 2 211 1 47 2 25 1 307 4 
310 1 192 1 195 2 196 1 54 1 249 1 360 1 331 1 125 1 55 1 143 2 224 2 145 2 293 1 337 1 318 1 343 1 131 2 227 1 59 2 160 1 234 1 325 1 18 1 266 1 20 1 22 1 64 1 211 1 137 1 47 1 307 3 
310 1 192 1 195 2 196 1 54 1 249 1 360 1 331 1 125 1 55 1 143 2 224 2 145 2 293 1 337 1 318 1 343 1 131 2 227 1 59 2 160 1 234 1 325 1 18 1 266 1 20 1 22 1 64 1 211 1 137 1 47 1 307 3 
310 1 192 1 50 1 94 1 30 2 195 1 54 1 360 2 174 2 249 1 96 2 97 1 331 1 143 1 224 1 200 2 145 4 337 1 293 1 177 1 152 1 318 4 130 2 131 4 227 1 260 1 273 2 59 1 345 1 325 1 266 1 20 1 64 1 44 1 267 1 137 2 211 1 47 2 307 4 
311 1 221 1 32 1 252 3 146 1 156 1 261 2 323 1 324 2 133 1 161 2 233 1 207 3 263 1 303 1 61 1 115 1 65 1 281 2 23 1 240 1 353 1 287 1 168 6 241 1 27 1 
171 1 311 11 222 1 193 1 221 1 245 1 52 3 32 4 53 1 124 2 252 6 270 1 34 1 146 2 127 3 257 1 156 2 261 1 324 4 133 11 300 1 161 2 207 8 263 2 279 1 281 1 65 2 209 1 23 2 46 2 353 1 168 14 241 2 
244 1 51 1 221 1 245 1 32 1 195 2 197 1 125 1 252 1 364 1 34 1 224 1 270 1 78 1 146 1 366 1 103 1 271 1 7 1 226 1 153 1 156 1 182 1 12 1 82 1 205 1 59 2 324 2 207 1 22 1 281 1 65 1 23 1 138 1 216 1 166 1 168 2 241 1 
244 2 245 1 195 3 53 2 250 1 143 1 252 11 253 1 146 3 56 2 103 1 102 2 7 1 153 2 156 3 12 1 205 1 261 4 59 3 206 2 161 5 207 11 302 2 263 4 349 1 304 2 61 1 114 1 22 1 115 1 65 3 23 3 353 4 168 22 166 2 216 2 27 1 311 6 222 1 221 3 32 6 124 2 125 1 270 1 224 1 34 1 364 2 366 1 226 1 271 2 182 2 82 2 323 1 324 6 133 6 233 1 281 1 46 2 241 3 
205 1 366 1 7 1 226 1 277 1 
311 1 221 1 32 1 195 1 53 1 74 1 124 1 55 1 125 1 252 2 34 1 224 1 146 1 156 1 261 1 59 1 324 2 133 1 161 1 207 1 263 1 22 1 84 1 65 1 23 1 46 1 353 1 168 3 241 1 
311 1 222 1 221 1 324 2 32 1 133 1 161 1 207 2 263 1 146 1 65 1 240 1 23 1 46 1 286 1 168 2 156 1 241 1 
261 1 311 1 221 1 371 1 324 2 32 1 133 1 53 1 161 1 252 2 146 1 65 1 240 1 23 1 353 1 168 2 156 1 241 1 
261 1 311 2 222 1 221 1 324 2 32 2 133 2 53 1 161 2 207 2 124 1 263 1 252 2 146 1 65 1 240 1 23 1 46 1 353 1 168 4 156 1 241 1 
277 1 
277 1 
277 1 
261 1 311 2 222 1 221 1 324 2 32 2 133 2 53 1 161 2 207 2 124 1 263 1 252 2 146 1 65 1 23 1 46 1 353 1 156 1 168 4 241 1 
244 1 221 1 245 1 195 1 252 1 270 1 364 1 146 1 366 1 271 1 7 1 226 1 153 1 156 1 182 1 82 1 205 1 59 1 324 2 207 1 302 1 281 1 65 1 23 1 168 2 166 1 216 1 241 1 
221 1 245 1 359 1 195 1 252 1 270 1 364 1 146 1 366 1 271 1 7 1 226 1 156 1 182 1 82 1 205 1 275 1 59 1 324 2 346 1 207 1 281 1 65 1 23 1 168 2 166 1 216 1 241 1 
261 1 311 2 222 1 221 1 324 2 32 2 133 2 53 1 161 2 207 2 124 1 263 1 252 2 34 1 146 1 65 1 23 1 46 1 353 1 168 4 156 1 241 1 
311 2 222 1 244 1 221 1 32 2 195 1 53 1 124 1 252 2 364 1 146 1 366 1 102 1 271 1 7 1 153 1 156 1 182 1 82 1 261 1 205 1 59 1 324 2 133 2 161 2 207 2 263 1 302 1 65 1 23 1 46 1 353 1 89 1 168 4 166 1 216 1 241 1 
311 1 222 1 221 1 195 1 32 1 53 1 74 1 124 1 252 1 55 1 125 1 34 1 224 1 146 1 156 1 59 1 324 2 133 1 161 1 207 2 263 1 22 1 65 1 23 1 46 1 353 1 168 3 241 1 309 1 
119 1 222 3 52 1 53 3 124 3 252 10 98 1 146 2 147 1 127 2 9 1 156 2 157 1 261 3 324 4 373 1 347 1 300 1 207 9 161 6 263 3 278 1 279 1 208 2 65 2 46 3 353 3 354 2 168 19 241 2 
288 1 119 2 120 1 222 2 52 2 53 2 124 3 252 12 146 3 6 1 127 2 9 1 156 3 157 1 369 2 261 2 158 1 324 6 373 2 347 1 161 4 207 14 263 3 278 1 279 2 43 1 208 1 65 3 46 3 353 2 354 4 168 26 167 1 241 3 
288 1 52 3 53 4 252 21 146 3 147 1 6 1 9 1 156 3 157 1 261 4 158 1 347 1 300 1 161 8 207 20 263 5 303 1 61 1 208 1 65 3 115 1 353 5 168 41 354 4 167 1 27 1 119 2 120 1 222 4 124 4 127 4 369 1 324 6 323 1 373 1 233 1 278 1 279 3 43 1 46 4 86 1 241 3 
288 1 120 1 119 2 222 3 52 3 53 3 124 4 252 18 146 4 147 1 6 1 127 4 9 1 156 4 157 1 369 2 261 4 158 1 323 1 324 8 373 1 347 1 300 1 233 1 207 20 161 7 303 1 263 5 278 1 279 3 43 1 61 1 208 1 115 1 65 4 46 4 86 1 353 4 167 1 354 4 168 38 27 1 241 4 
288 1 120 1 119 1 222 7 52 4 53 7 124 7 252 25 146 2 6 1 127 4 9 1 156 2 157 1 369 1 261 7 158 1 323 1 324 4 373 1 347 1 300 2 233 1 207 27 161 14 303 1 263 8 278 1 279 2 43 1 61 1 208 1 115 1 65 2 209 2 46 7 353 8 167 1 354 4 168 52 27 1 241 2 
100 1 376 1 194 1 110 1 248 1 180 1 215 1 238 1 26 1 99 1 
225 1 378 1 
376 1 194 1 110 1 215 1 320 1 321 1 268 1 26 1 99 1 
296 1 192 1 110 1 194 1 248 1 292 1 135 1 99 1 145 1 100 1 188 2 376 1 212 1 294 1 180 1 215 1 131 1 26 1 
296 1 192 1 110 1 194 1 248 1 292 1 135 1 99 1 145 1 100 1 188 2 376 1 212 1 294 1 180 1 215 1 131 1 26 1 
296 1 192 1 110 1 194 1 248 1 292 1 135 1 99 1 145 1 100 1 188 2 376 1 212 1 294 1 180 1 215 1 131 1 26 1 
274 1 283 1 24 1 
274 1 283 1 24 1 
218 1 13 1 
274 1 218 1 13 1 
289 1 259 1 
140 1 72 1 194 1 289 1 173 1 195 2 292 1 125 2 99 1 224 2 145 1 225 1 57 1 131 1 259 1 296 1 59 2 110 1 22 2 281 1 188 1 326 1 376 1 85 1 378 1 215 1 26 1 
283 1 24 1 
274 1 218 1 13 1 
221 1 245 1 195 2 252 1 364 1 34 1 224 2 270 1 146 1 366 2 7 2 256 1 340 1 156 1 205 2 59 2 324 2 159 1 207 1 265 1 21 1 62 1 65 1 23 1 351 2 166 1 168 2 241 1 
219 1 205 2 122 1 60 1 374 1 113 1 280 1 42 1 365 2 364 1 5 1 366 2 7 2 88 1 327 1 89 1 154 1 166 1 48 1 
219 1 205 1 122 1 113 1 280 1 42 1 365 2 364 1 5 1 254 1 366 1 7 1 88 1 327 1 154 1 48 1 166 1 
205 1 60 1 33 1 142 1 364 1 41 1 5 1 366 1 226 1 7 1 106 1 166 1 216 1 82 1 
219 1 205 1 122 1 60 1 374 1 113 1 280 1 42 1 365 2 364 1 5 1 366 1 7 1 88 1 327 1 154 1 48 1 166 1 
356 1 
192 1 64 1 267 1 345 1 350 1 368 1 287 1 
192 2 50 1 94 1 345 1 30 1 174 1 97 1 17 1 76 1 145 1 64 1 44 1 267 1 318 1 204 1 131 1 342 1 
328 1 93 2 50 4 192 8 94 4 95 1 53 2 97 4 145 5 7 3 150 1 151 2 295 6 258 1 204 6 205 3 297 2 345 8 16 2 162 1 263 2 304 2 64 2 267 9 350 1 69 1 353 2 166 3 216 10 308 2 30 3 172 2 358 2 174 12 124 2 77 6 364 4 366 3 368 1 271 3 226 1 318 5 131 5 82 3 184 2 134 2 235 2 325 2 236 2 44 4 46 2 89 1 190 1 90 3 
120 1 50 2 192 5 94 2 52 1 30 1 358 1 53 2 174 6 124 2 97 2 77 5 145 1 6 1 127 1 295 5 258 1 318 1 204 3 58 1 131 1 158 1 184 2 345 5 16 1 263 2 348 1 279 1 43 1 44 2 64 2 267 8 46 2 353 2 167 1 
170 1 50 1 94 1 195 1 196 1 97 1 143 1 55 1 125 1 224 1 253 1 145 1 131 1 343 1 59 1 184 2 345 2 16 1 233 1 263 2 234 1 18 1 61 1 22 1 44 1 267 2 353 1 27 1 
50 1 192 1 94 1 345 1 97 1 44 1 64 1 267 1 350 1 368 1 
192 5 184 2 345 5 16 1 53 2 174 10 124 2 263 2 304 1 77 5 267 5 46 2 295 5 353 2 204 5 
145 1 192 1 64 1 30 1 318 1 131 1 
50 2 94 1 30 2 358 2 95 2 97 2 141 1 142 1 3 1 364 1 145 3 366 4 335 1 7 4 226 2 318 4 258 2 131 3 82 1 205 4 345 2 298 1 41 1 44 2 267 2 69 1 214 1 166 1 216 1 
0 1 244 1 221 1 245 1 195 3 252 1 125 2 55 2 224 2 364 1 146 1 366 1 7 1 226 1 271 1 153 1 156 1 182 1 82 1 205 1 59 3 324 2 302 1 18 1 22 2 281 1 65 1 23 1 168 1 166 1 216 1 241 1 
50 1 192 4 345 2 94 1 358 1 174 4 303 1 97 1 77 2 44 1 64 2 267 1 295 2 204 2 258 1 
194 1 31 1 26 1 
194 1 31 1 26 1 
194 1 248 1 301 1 259 1 26 1 
194 1 31 1 26 1 
194 1 223 1 26 1 
194 1 223 1 26 1 
194 1 223 1 26 1 
194 1 26 1 
110 1 215 1 
261 2 369 1 222 1 324 4 323 1 233 1 207 4 161 3 303 1 263 1 252 4 61 1 146 2 65 2 115 1 353 1 168 8 156 2 241 2 27 1 
261 2 323 1 161 2 233 1 207 3 303 1 263 1 252 3 61 1 115 1 353 1 287 1 168 6 27 1 
261 1 222 1 324 2 53 1 161 2 207 2 124 1 263 1 252 2 146 1 65 1 46 1 87 1 353 1 156 1 168 4 241 1 
261 1 222 1 52 1 53 1 300 1 207 3 161 2 124 1 263 1 279 1 252 4 46 1 127 2 353 1 168 7 
222 4 193 1 52 2 53 2 124 2 252 12 146 2 126 1 127 2 156 2 261 5 369 2 323 1 324 4 300 1 233 1 161 9 207 11 303 1 263 3 61 2 115 1 65 2 209 1 46 2 353 3 168 23 27 2 241 2 
127 1 168 1 252 1 
52 1 207 1 168 1 
261 2 222 1 324 2 53 1 207 3 161 3 124 1 263 1 304 1 252 3 146 1 65 1 46 1 87 1 353 1 156 1 168 6 241 1 
120 1 222 1 52 1 53 2 124 2 252 6 146 1 6 1 127 1 9 1 156 1 261 1 158 1 324 2 207 6 161 2 263 2 279 1 43 1 65 1 46 2 353 2 168 12 167 1 241 1 
261 1 61 1 222 1 161 2 207 3 233 1 353 1 263 1 168 6 27 1 252 3 
261 1 369 1 222 1 323 1 324 2 207 1 161 2 252 2 61 1 146 1 65 1 115 1 126 1 168 3 156 1 27 1 241 1 
261 3 222 2 324 2 161 5 207 5 233 1 263 2 252 5 253 1 61 2 146 1 65 1 9 1 353 2 156 1 168 10 241 1 27 2 
146 1 222 1 65 1 324 2 46 1 161 1 207 2 9 1 263 1 168 2 156 1 241 1 
261 1 222 1 324 2 53 1 161 2 207 2 124 1 263 1 252 2 146 1 65 1 46 1 9 1 353 1 156 1 168 4 241 1 
369 1 261 1 222 1 324 6 161 2 207 1 252 2 61 1 146 3 147 1 65 3 126 1 9 1 168 3 156 3 241 3 27 1 
220 1 222 5 52 3 53 3 124 3 362 1 252 18 146 5 147 1 126 1 127 4 9 1 156 5 369 2 261 7 323 1 324 10 300 1 233 2 207 16 161 12 303 1 263 5 279 1 61 3 115 1 65 5 46 3 285 1 87 1 353 5 168 34 27 3 241 5 
52 1 252 4 146 1 6 1 127 1 9 1 156 1 261 2 324 2 323 1 207 4 161 2 233 1 303 1 263 1 279 1 61 1 65 1 115 1 353 1 168 8 241 1 27 1 
222 1 52 1 124 1 252 5 146 2 6 1 127 2 9 1 156 2 261 2 323 1 324 4 300 1 233 1 207 6 161 3 303 1 263 2 279 1 61 1 115 1 65 2 46 1 87 1 353 1 168 11 27 1 241 2 
120 1 222 1 52 1 53 2 124 2 252 10 146 3 6 1 127 1 9 1 156 3 261 3 369 1 158 1 323 1 324 6 233 1 207 9 161 4 303 1 263 3 279 1 43 1 61 1 115 1 65 3 46 2 87 1 353 3 168 19 167 1 27 1 241 3 
120 1 222 2 52 1 53 1 124 2 252 7 146 3 6 1 127 1 9 1 156 3 369 1 261 3 158 1 323 1 324 6 233 1 207 10 161 5 303 1 263 3 279 1 43 1 61 1 115 1 65 3 46 2 87 1 353 2 168 17 167 1 27 1 241 3 
52 1 252 4 146 1 6 1 127 1 9 1 156 1 261 2 324 2 323 1 207 4 161 2 233 1 303 1 263 1 279 1 61 1 65 1 115 1 353 1 168 8 241 1 27 1 
120 1 222 1 52 1 53 2 124 2 252 6 146 1 6 1 127 1 9 1 156 1 261 1 158 1 324 2 207 6 161 2 263 2 279 1 43 1 65 1 46 2 353 2 168 12 167 1 241 1 
120 1 222 2 52 1 53 1 124 2 252 8 146 4 6 1 127 1 9 1 156 4 261 3 369 2 158 1 323 1 324 8 233 1 207 10 161 5 303 1 263 3 279 1 43 1 61 1 115 1 65 4 46 2 87 1 353 2 168 18 167 1 27 1 241 4 
120 1 222 3 52 1 53 2 124 3 252 7 146 4 147 1 6 1 127 1 9 1 156 4 261 3 369 2 158 1 324 8 207 9 161 6 263 3 279 1 43 1 65 4 46 3 353 2 168 16 167 1 241 4 
261 3 222 3 323 2 161 6 233 1 207 3 263 1 252 4 61 3 115 1 353 1 168 7 27 3 
120 1 222 1 52 1 53 1 124 2 252 8 146 4 147 1 6 1 127 1 9 1 156 4 261 3 369 2 158 1 323 1 324 8 233 1 207 10 161 4 303 1 263 3 279 1 43 1 61 1 115 1 65 4 46 2 353 2 168 18 167 1 27 1 241 4 
281 1 59 1 293 1 195 1 203 1 315 1 224 1 
329 1 59 1 195 1 315 1 224 1 36 1 281 1 306 1 293 1 139 1 179 1 203 1 
205 1 366 1 7 1 226 1 287 1 166 1 216 1 142 1 364 1 82 1 41 1 
205 1 59 2 244 1 195 2 125 1 364 1 224 1 22 1 281 1 366 1 103 1 271 1 226 1 7 1 216 1 166 1 182 1 82 1 
244 1 195 2 95 1 331 1 125 2 143 1 224 2 364 1 366 1 103 1 7 1 271 2 182 1 82 2 205 1 297 1 59 2 236 1 22 1 281 1 211 1 166 1 216 3 
359 1 195 2 95 1 331 1 363 1 125 2 143 1 224 2 364 1 366 2 103 1 7 2 271 2 182 1 82 2 205 2 297 1 59 2 236 1 22 1 281 1 211 1 166 1 216 3 
205 3 297 1 192 1 95 1 134 1 325 1 236 1 363 1 364 1 145 2 64 1 366 3 226 1 271 1 202 1 7 3 318 1 217 1 216 4 166 1 131 2 82 1 90 1 
205 3 297 1 93 1 192 1 95 1 134 1 325 1 236 1 363 1 364 1 145 2 64 1 366 3 226 1 271 1 7 3 318 1 216 4 166 1 131 2 82 1 90 1 
205 1 366 1 73 1 7 1 166 1 364 1 
205 6 328 1 73 1 276 1 291 1 364 3 366 7 148 1 351 1 149 1 226 2 7 7 271 1 105 1 272 1 89 1 48 1 216 3 166 2 381 1 82 2 
244 1 195 2 252 3 56 1 146 2 102 1 103 1 7 1 256 1 153 1 156 2 205 1 261 2 59 2 161 2 207 3 302 1 263 1 303 1 61 1 22 1 65 2 115 1 23 2 353 1 166 1 216 1 168 6 27 1 311 1 221 2 32 1 125 1 224 1 34 1 364 1 366 1 271 1 182 1 82 1 324 4 323 1 133 1 233 1 281 2 89 1 241 2 
93 1 192 1 50 2 94 2 30 1 97 2 145 3 366 1 368 1 226 1 7 1 151 1 318 2 131 3 205 1 345 1 134 1 235 1 325 1 64 1 44 2 267 1 350 1 85 1 69 1 216 2 308 1 90 1 
205 2 328 1 73 1 134 1 364 2 366 2 7 2 150 1 271 1 89 1 216 2 166 1 82 1 
205 4 375 1 142 1 363 1 364 1 41 1 366 4 226 1 7 4 89 1 216 1 166 1 82 1 
205 2 28 1 276 1 95 1 232 1 364 2 366 2 7 2 271 1 339 1 272 1 216 1 166 1 82 1 
219 1 205 1 366 1 7 1 226 1 166 1 280 1 42 1 365 1 364 1 
205 2 366 2 7 2 340 1 89 1 166 1 48 1 364 1 
205 4 95 1 291 1 375 1 142 1 41 1 364 2 366 5 149 1 226 1 7 5 89 1 216 3 166 2 381 1 82 2 
205 4 95 1 291 1 375 1 142 1 41 1 364 2 366 5 336 1 226 1 7 5 89 1 216 3 166 2 381 1 82 2 
205 1 59 2 195 2 359 1 125 1 364 1 224 1 22 1 281 1 366 1 103 1 271 1 226 1 7 1 216 1 166 1 182 1 82 1 
205 1 328 1 276 1 95 1 364 2 366 1 7 1 271 1 105 1 272 1 216 1 166 1 82 1 
21 1 62 1 370 1 59 1 195 1 265 1 11 1 108 1 224 1 
370 1 284 1 67 1 
91 1 370 1 281 1 11 1 108 1 
91 2 370 1 192 1 54 1 325 1 331 1 19 1 143 1 145 2 281 1 64 1 211 1 284 1 67 1 85 1 11 2 131 2 108 2 228 1 
38 1 372 1 186 1 287 1 
38 1 312 1 372 1 185 1 186 1 377 1 191 1 
121 1 312 1 313 1 
312 3 29 1 38 1 372 1 185 1 15 2 186 1 75 1 199 1 377 3 191 1 355 1 
38 1 312 2 372 1 210 1 104 1 185 1 186 1 377 2 191 1 
312 1 185 1 132 1 372 1 199 1 365 1 42 1 367 1 377 1 88 1 191 1 
38 1 312 1 372 1 185 1 377 1 191 1 199 1 
38 2 312 1 185 1 186 1 377 1 191 1 199 1 
38 1 312 2 372 1 185 2 199 1 35 1 63 1 377 2 191 2 344 1 
38 1 312 3 185 1 372 2 290 1 186 1 199 1 201 1 210 2 367 1 377 3 10 1 191 1 
219 1 38 1 312 2 122 1 372 1 185 1 186 1 199 1 314 1 365 2 42 1 210 1 377 2 88 1 191 1 
38 1 312 4 185 2 372 2 111 1 186 1 199 1 201 1 104 1 210 2 367 1 377 4 191 2 
38 1 312 1 372 1 185 1 186 1 377 1 191 1 199 1 
29 1 38 2 312 4 185 1 372 3 15 1 186 2 201 1 210 2 367 1 377 4 319 1 191 1 355 1 
38 1 312 2 372 1 185 1 186 1 330 1 199 1 163 1 210 1 377 2 379 1 191 1 
312 3 29 2 38 1 372 1 185 1 15 2 186 1 199 1 45 1 377 3 191 1 355 1 
372 2 68 1 40 2 175 1 
312 1 246 1 185 1 377 1 191 1 199 1 
38 1 312 2 372 1 210 1 185 1 290 1 186 1 377 2 191 1 199 1 
242 1 
38 1 312 1 372 1 185 1 186 1 377 1 191 1 199 1 
312 3 38 1 185 1 372 1 15 1 290 1 186 1 199 1 210 1 377 3 191 1 
201 1 372 1 367 1 319 1 
38 1 372 1 

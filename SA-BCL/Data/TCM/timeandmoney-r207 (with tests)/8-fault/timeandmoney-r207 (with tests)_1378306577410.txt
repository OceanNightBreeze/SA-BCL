#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 176 103 120 52 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 176 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 176 103 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 176 103 109 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 176 103 120 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 176 103 120 60 106 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 176 103 120 60 106 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 176 103 120 60 214 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 176 103 343 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 176 103 343 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 176 103 120 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 328 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 328 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
168 1 262 1 90 1 289 6 320 2 245 1 93 1 94 4 227 1 175 1 178 2 277 2 180 9 152 5 153 1 80 2 81 1 307 2 128 3 335 2 84 1 337 1 236 2 237 1 23 1 87 1 313 1 241 9 
168 1 262 1 90 1 289 6 320 2 245 1 93 1 94 4 227 1 175 1 178 2 277 2 180 9 152 5 153 1 80 2 81 1 307 2 128 3 335 2 84 1 337 1 236 2 237 1 23 1 87 1 313 1 241 9 
168 1 262 1 90 1 289 7 320 2 245 1 93 1 94 5 227 1 175 1 178 2 277 2 180 10 152 6 153 1 80 2 81 1 307 2 128 4 335 2 84 1 337 1 236 2 237 1 23 1 87 1 313 1 241 10 
168 1 262 1 90 1 289 4 320 1 245 1 93 1 94 3 175 1 178 2 277 2 180 7 152 4 153 1 80 2 81 1 307 2 128 2 335 2 84 1 337 1 236 2 237 1 23 1 87 1 313 1 241 7 
180 4 152 3 153 1 289 3 80 1 320 2 128 1 307 1 335 1 93 1 94 2 227 1 337 1 23 1 87 1 178 1 241 4 277 1 
152 1 180 2 153 1 307 1 335 1 172 1 186 1 337 1 132 1 175 1 236 1 237 1 87 1 178 1 241 2 277 1 
180 3 152 2 153 1 289 1 81 1 128 1 94 1 337 1 236 1 87 1 178 2 241 3 277 2 
262 1 289 7 320 2 270 1 245 1 93 1 94 4 227 1 178 2 277 2 16 1 180 9 152 5 153 1 80 1 81 1 128 3 307 1 335 1 337 1 236 1 23 1 87 1 241 9 
262 1 289 7 320 2 270 1 245 1 93 1 94 4 227 1 178 2 277 2 16 1 180 9 152 5 153 1 80 1 81 1 128 3 307 1 335 1 337 1 236 1 23 1 87 1 241 9 
352 1 291 1 328 1 
291 1 361 1 51 2 
322 2 205 1 27 2 196 1 71 2 276 2 293 2 14 2 
195 1 318 1 196 1 288 2 91 1 197 1 92 1 140 2 357 1 293 2 26 1 322 2 294 1 97 1 340 2 9 1 119 1 27 3 298 1 29 1 31 1 12 1 299 1 253 1 276 3 14 2 278 1 205 1 181 1 161 2 64 1 283 1 215 1 164 2 190 1 71 2 242 1 
322 1 27 1 30 1 196 1 71 1 149 1 329 1 276 1 293 1 14 1 
117 1 291 1 105 1 42 1 322 1 8 1 27 1 21 1 30 1 352 1 376 1 276 1 167 1 193 1 
117 1 291 1 105 1 293 1 8 2 322 1 27 1 21 2 30 1 352 1 71 1 276 1 14 1 167 1 193 1 
8 1 21 1 134 1 171 1 308 1 
8 2 21 2 352 1 291 1 171 1 349 1 308 1 338 1 
8 1 21 1 171 1 
196 1 308 1 224 1 293 1 8 1 322 1 21 1 27 1 30 1 149 1 71 1 329 1 276 1 14 1 
291 1 
8 2 107 1 21 2 352 1 291 1 171 1 349 1 308 1 
179 2 73 1 210 1 6 1 127 1 184 1 291 1 171 2 349 1 308 2 95 1 8 5 162 1 21 5 146 1 374 2 352 1 230 1 13 2 
205 1 328 1 
205 2 293 1 309 1 322 2 27 2 326 1 71 1 276 2 14 1 
89 1 232 1 96 1 
205 1 195 1 181 1 318 1 288 1 91 1 140 1 26 1 64 1 144 1 9 1 27 1 164 1 242 1 276 1 278 1 
195 1 89 1 181 1 318 1 288 1 139 1 91 1 140 1 82 1 293 1 26 1 64 1 322 1 9 1 27 2 164 1 71 1 242 1 276 2 278 1 
322 3 205 1 27 3 71 3 82 1 276 3 14 1 293 3 
322 1 27 1 30 1 71 1 329 1 276 1 293 1 
322 1 27 1 30 1 326 1 71 1 276 1 293 1 14 1 309 1 
195 1 318 1 196 1 288 1 139 1 91 1 117 1 92 1 141 1 140 1 357 1 293 3 26 1 322 3 8 1 294 1 340 2 9 1 27 4 298 1 30 1 31 1 326 1 12 1 299 1 253 1 276 4 14 2 278 1 205 1 181 1 82 1 105 1 129 1 161 1 64 1 283 1 21 1 164 1 190 1 71 3 242 1 167 1 193 1 
322 2 205 1 27 2 333 1 71 1 376 1 82 1 276 2 293 1 
304 1 139 1 117 1 291 1 82 2 105 1 129 1 293 3 8 1 322 3 21 1 27 3 30 1 326 1 71 3 276 3 14 1 167 1 193 1 
322 2 89 1 27 2 326 1 71 2 82 1 276 2 293 2 14 1 96 1 
205 1 195 1 181 1 318 1 288 1 91 1 140 1 26 1 64 1 9 1 27 1 164 1 242 1 276 1 278 1 
205 1 195 1 280 1 318 1 288 1 17 1 91 1 140 1 26 1 64 1 27 1 164 1 242 1 276 1 278 1 
89 2 92 1 356 1 357 2 96 2 199 1 294 1 97 2 340 2 299 1 253 1 58 1 232 2 306 1 161 4 259 1 65 1 188 1 283 1 67 1 190 1 216 1 70 1 286 1 
322 1 27 1 367 1 30 1 71 1 105 1 276 1 293 1 
205 1 333 1 139 1 82 2 50 1 293 4 322 5 27 5 311 1 326 1 71 4 376 1 276 5 14 1 
322 2 27 2 367 1 30 1 71 2 329 1 276 2 293 2 
267 1 301 1 
267 1 301 1 
323 1 116 1 
323 1 116 1 
323 1 116 1 
267 1 83 1 301 1 
267 1 290 1 301 1 
323 1 211 1 116 1 267 2 183 1 301 2 
267 1 83 1 301 1 
267 1 83 1 301 1 
36 1 267 1 301 1 
36 1 267 1 301 1 
36 1 267 1 301 1 
316 2 243 2 211 1 267 2 319 1 291 1 226 2 8 2 310 3 228 2 21 2 274 2 201 1 312 1 192 1 217 1 261 1 218 1 301 2 
1 1 24 1 316 1 243 1 267 1 4 1 319 1 290 1 293 2 226 1 8 1 322 2 27 2 274 1 276 2 301 1 205 1 281 1 310 1 350 1 21 1 45 1 165 1 71 2 
80 1 307 1 335 1 
307 1 335 1 172 1 
266 1 80 2 142 1 335 3 49 1 172 1 
80 1 250 1 142 1 335 2 49 1 172 1 
80 1 142 2 335 2 49 1 172 1 
47 1 196 1 291 1 171 1 143 1 293 1 224 1 51 1 322 1 8 5 145 1 27 1 146 2 30 1 121 1 149 1 329 1 276 1 13 1 14 1 254 1 345 1 179 1 125 1 62 2 184 1 349 1 308 4 86 1 162 1 21 5 67 1 165 1 374 1 352 1 71 1 286 1 
47 1 196 1 291 1 171 3 224 1 293 1 51 1 8 5 322 1 145 1 27 1 146 2 30 1 53 1 121 1 149 1 329 1 13 1 276 1 254 1 14 1 345 1 179 1 125 1 184 1 349 1 308 4 162 1 21 5 67 1 22 2 165 1 374 1 134 2 352 1 240 1 71 1 286 1 
47 1 291 3 143 1 95 1 51 4 8 3 145 2 146 2 121 1 361 2 13 1 179 1 345 2 62 1 125 1 184 3 308 2 259 1 188 1 86 1 21 3 67 1 165 1 374 1 352 1 286 1 
47 1 291 4 143 1 51 7 95 1 8 4 145 4 146 4 121 1 361 3 13 1 206 1 345 4 179 1 62 2 125 2 233 1 184 5 308 3 259 2 188 2 21 4 86 1 67 2 238 1 165 2 374 1 352 1 286 2 
91 1 328 1 160 1 
91 1 130 1 
231 1 
195 1 91 1 
195 1 318 1 256 1 91 3 156 1 160 2 
195 1 318 1 91 1 
91 1 255 1 
0 1 263 1 222 1 354 2 357 6 247 1 97 8 248 2 249 1 58 4 207 2 209 2 213 1 161 14 131 1 65 5 259 3 67 3 
0 1 263 1 222 1 354 2 357 6 247 1 97 8 248 2 249 1 58 4 207 2 209 2 213 1 161 14 131 3 65 7 259 3 67 3 
0 1 263 1 2 1 222 1 354 2 357 6 247 1 97 8 248 2 249 1 58 4 207 2 209 2 213 1 161 14 131 1 65 5 259 3 67 3 
263 1 0 1 72 3 317 1 220 1 354 3 222 2 321 1 357 17 294 1 247 1 340 2 200 1 97 21 248 3 249 1 122 4 299 1 253 1 58 6 125 3 209 2 207 3 213 2 161 38 131 6 65 12 259 5 20 1 283 1 188 2 67 6 286 3 353 1 88 1 
263 1 0 1 222 1 354 2 357 7 294 2 340 4 97 9 248 2 249 1 299 2 253 2 58 5 207 2 209 2 159 1 213 1 161 16 131 2 259 3 65 7 283 2 67 3 110 1 88 1 
288 1 25 1 289 1 137 1 266 1 5 1 140 1 355 1 172 1 10 1 325 1 178 1 151 1 277 1 278 1 152 1 180 2 257 1 78 1 153 1 80 1 307 1 335 2 41 1 337 1 236 1 164 1 87 1 241 2 242 1 
288 1 25 1 266 1 289 2 137 1 5 1 140 1 355 1 172 1 296 1 10 1 178 1 151 1 33 1 277 1 278 1 152 1 180 3 78 1 153 1 80 1 307 1 335 2 41 1 163 1 236 1 164 1 87 1 241 3 242 1 
288 1 289 2 266 1 5 1 140 1 355 1 172 1 296 1 10 1 151 1 33 1 278 1 152 1 180 2 78 1 153 1 80 1 307 1 335 2 41 1 236 1 164 1 87 1 241 2 242 1 
195 1 180 1 305 1 288 1 244 1 5 2 91 1 155 1 292 1 140 1 26 1 43 1 108 1 236 2 10 2 163 1 164 1 242 1 178 1 241 1 151 2 277 1 278 1 
180 1 78 1 257 1 25 1 288 1 266 1 137 1 5 1 80 1 140 1 307 1 335 2 355 1 172 1 41 1 337 1 296 1 236 1 10 1 164 1 242 1 178 1 241 1 151 1 277 1 278 1 
295 1 
195 1 47 1 288 2 138 1 91 1 292 1 140 2 48 1 51 1 8 4 146 2 52 1 13 1 303 1 103 1 305 1 212 1 347 1 158 1 105 1 19 1 349 2 66 1 21 4 162 1 164 2 166 1 167 1 74 1 117 1 171 3 26 2 322 1 27 1 120 1 30 1 176 1 177 1 361 1 123 1 276 1 278 1 179 1 184 2 39 1 42 1 374 1 376 1 242 1 377 2 193 1 
303 1 117 1 212 1 48 1 105 1 39 1 8 2 42 1 322 1 21 2 27 1 30 1 176 1 177 1 376 1 276 1 377 2 167 1 193 1 
314 1 117 1 48 1 291 1 171 1 322 1 8 3 27 1 30 1 177 1 276 1 303 1 212 1 105 1 39 1 349 1 42 1 107 1 21 3 352 1 376 1 167 1 377 3 193 1 
303 1 103 1 117 1 212 1 48 1 105 1 39 1 8 2 42 1 322 1 21 2 27 1 30 1 176 1 177 1 376 1 276 1 377 2 167 1 193 1 
303 1 103 1 117 1 212 1 48 1 105 1 39 1 171 1 349 1 8 3 42 1 322 1 107 1 109 1 27 1 21 3 30 1 176 1 177 1 376 1 276 1 377 2 167 1 193 1 
74 1 138 1 117 1 48 1 171 1 51 1 8 3 322 1 27 1 146 1 120 1 30 1 176 1 177 1 361 1 13 1 276 1 303 1 179 1 103 1 212 1 184 1 347 1 105 1 39 1 349 1 42 1 66 1 162 1 21 3 374 1 166 1 376 1 167 1 377 2 193 1 
74 1 138 1 117 1 48 1 171 1 322 1 8 3 27 1 146 1 120 1 30 1 176 1 177 1 361 1 13 1 276 1 303 1 346 1 179 1 60 1 103 1 212 1 184 1 347 1 105 1 39 1 349 1 42 1 106 1 66 1 21 3 162 1 374 1 166 1 376 1 167 1 377 2 193 1 
74 1 138 1 117 1 48 1 171 1 322 1 8 3 27 1 146 1 120 1 30 1 176 1 177 1 361 1 13 1 276 1 303 1 346 1 179 1 60 1 103 1 212 1 184 1 347 1 105 1 39 1 349 1 42 1 106 1 66 1 21 3 162 1 374 1 166 1 376 1 167 1 377 2 193 1 
74 1 117 1 48 1 171 1 51 1 322 1 8 3 27 1 146 1 120 1 30 1 176 1 177 1 13 1 276 1 303 1 179 1 60 1 103 1 366 1 212 1 184 1 105 1 39 1 349 1 214 1 42 1 66 1 21 3 162 1 112 1 239 1 374 1 376 1 167 1 377 2 194 1 193 1 
343 1 303 1 103 1 117 1 212 1 48 1 105 1 39 1 8 2 42 1 322 1 21 2 27 1 30 1 176 1 177 1 376 1 276 1 377 2 167 1 193 1 
343 1 303 1 103 1 117 1 212 1 48 1 105 1 39 1 8 2 42 1 322 1 21 2 27 1 30 1 176 1 177 1 376 1 276 1 377 2 167 1 193 1 
74 1 117 1 48 1 171 1 51 1 8 3 322 1 27 1 146 1 120 1 30 1 176 1 177 1 13 1 276 1 303 1 179 1 103 1 212 1 184 1 105 1 39 1 349 1 42 1 66 1 162 1 21 3 112 1 239 1 374 1 376 1 167 1 377 2 193 1 194 1 
205 2 58 2 0 1 209 1 207 1 92 1 354 1 356 1 357 2 161 5 259 1 65 2 294 1 248 1 97 3 340 2 283 1 67 1 190 1 249 1 299 1 328 1 253 1 
89 13 72 3 92 1 246 1 357 7 96 4 294 2 340 4 97 10 200 2 119 1 12 1 122 4 299 2 253 2 55 1 205 1 58 1 125 3 182 1 232 13 161 17 131 1 65 2 259 1 283 2 188 1 67 3 133 1 190 2 113 1 286 3 353 1 
195 1 318 1 288 1 139 1 91 1 140 1 92 1 26 1 293 1 357 1 96 1 322 1 144 1 294 1 9 1 340 2 97 1 27 2 359 1 119 1 12 1 299 1 253 1 55 1 276 2 278 1 205 1 181 1 82 1 161 2 64 1 283 1 68 1 164 1 190 1 71 1 242 1 136 1 
195 2 0 1 89 6 288 1 139 1 91 2 7 1 140 1 92 3 293 1 96 6 294 3 248 1 340 6 9 2 97 14 341 1 249 1 12 1 299 3 55 1 253 3 205 3 15 2 58 6 209 2 207 2 258 2 161 27 64 2 65 7 259 5 67 5 164 1 71 1 263 1 318 2 219 1 354 2 272 2 357 13 26 1 322 1 119 1 27 3 30 1 31 2 276 3 278 2 181 2 125 2 232 6 82 1 131 1 283 3 188 2 190 3 286 2 242 2 135 2 
195 3 288 7 197 1 91 4 292 1 92 2 140 6 293 1 294 2 97 1 340 4 296 1 12 1 299 2 300 1 203 1 253 2 61 1 305 1 154 1 348 1 161 2 164 7 71 1 315 1 318 1 356 1 357 1 26 2 322 1 174 1 119 1 27 1 325 1 276 1 278 4 35 1 368 1 82 1 44 1 283 2 373 1 190 2 242 3 
89 1 92 1 293 1 357 2 96 1 322 1 294 1 340 2 97 1 27 1 326 1 360 1 299 1 253 1 55 1 276 1 14 1 58 1 125 1 232 1 161 3 65 1 259 1 283 1 188 1 67 1 190 1 71 1 286 1 
89 1 232 1 92 1 356 1 96 1 161 2 131 1 65 1 294 1 340 2 97 2 283 1 67 1 190 1 216 1 299 1 286 1 253 1 
58 1 89 1 232 1 92 1 356 1 357 2 96 1 161 2 65 1 294 1 259 1 340 2 283 1 188 1 190 1 70 1 299 1 253 1 
58 1 89 2 125 1 232 2 92 1 356 1 357 2 96 2 161 4 131 1 259 1 65 2 294 1 340 2 97 2 188 1 283 1 67 1 190 1 299 1 286 1 253 1 
35 1 89 1 232 1 92 1 96 1 161 2 131 1 65 1 294 1 340 2 97 2 283 1 67 1 190 1 216 1 299 1 286 1 253 1 
58 1 35 1 89 1 232 1 92 1 357 2 96 1 161 2 65 1 294 1 259 1 340 2 283 1 188 1 190 1 70 1 299 1 253 1 
58 1 35 1 89 2 125 1 232 2 92 1 357 2 96 2 161 4 131 1 259 1 65 2 294 1 340 2 97 2 188 1 283 1 67 1 190 1 299 1 286 1 253 1 
58 1 89 2 125 1 232 2 92 1 357 2 96 2 161 4 131 1 259 1 65 2 294 1 340 2 97 2 188 1 283 1 67 1 190 1 299 1 286 1 253 1 
195 1 318 1 288 1 91 1 140 1 92 1 26 1 357 1 294 1 97 1 9 1 340 2 119 1 27 1 31 1 12 1 299 1 276 1 253 1 278 1 205 1 181 1 161 2 64 1 283 1 164 1 190 1 242 1 
195 1 280 1 318 1 288 1 17 1 91 1 79 1 140 1 26 1 64 1 27 1 164 1 242 1 276 1 278 1 
58 1 89 2 125 1 232 2 92 1 357 2 96 2 161 4 131 1 259 1 65 2 294 1 340 2 97 2 188 1 283 1 67 1 190 1 299 1 286 1 55 1 253 1 
195 1 89 2 318 1 288 1 91 1 140 1 92 1 357 2 96 2 294 1 97 2 9 1 340 2 27 1 325 1 31 1 299 1 276 1 253 1 278 1 58 1 181 1 125 1 232 2 161 4 131 1 64 1 259 1 65 2 188 1 283 1 67 1 164 1 190 1 286 1 242 1 135 1 
89 1 92 1 357 1 293 1 96 1 322 1 294 1 340 2 97 2 27 1 326 1 299 1 253 1 55 1 276 1 14 1 125 1 232 1 161 3 131 1 259 1 65 1 188 1 283 1 67 1 260 1 190 1 71 1 286 1 
72 1 268 2 269 1 357 8 173 1 358 1 294 2 340 4 97 9 200 1 229 1 122 2 32 1 299 2 252 2 253 2 58 2 125 3 157 1 159 1 161 17 131 2 259 2 65 4 188 2 283 2 234 1 67 3 286 3 353 1 
72 2 268 1 75 1 357 11 173 1 294 2 340 4 97 13 324 1 229 2 147 1 11 1 122 2 32 2 299 2 252 3 253 2 125 3 37 1 157 1 159 1 161 24 131 1 65 1 259 2 283 2 234 1 188 2 67 3 69 1 286 3 353 2 88 1 
72 3 268 1 269 1 75 1 357 16 173 1 294 2 340 4 97 17 200 2 324 1 229 2 147 1 11 1 122 5 32 1 299 2 252 3 253 2 77 1 125 5 37 1 157 1 159 1 161 33 131 2 65 2 259 3 188 3 283 2 234 1 67 5 69 1 286 5 353 3 
72 3 268 1 269 1 75 1 357 19 173 1 294 3 340 6 97 19 200 2 324 1 229 2 147 1 11 1 122 5 32 1 299 3 252 4 253 3 77 1 58 3 125 5 37 1 157 1 159 1 161 38 131 2 259 4 65 5 283 3 234 1 188 4 67 5 69 1 286 5 353 3 88 1 
0 1 72 2 268 1 354 1 75 1 357 15 173 1 294 1 248 1 340 2 97 17 200 1 324 1 229 1 249 1 147 1 11 1 122 3 32 1 299 1 252 3 253 1 58 3 125 4 209 1 207 1 37 1 157 1 159 1 161 32 131 2 65 5 259 4 188 3 283 1 234 1 67 5 69 1 286 4 353 2 
316 1 243 1 189 1 274 1 211 1 267 1 312 1 192 1 301 1 226 1 
290 1 281 1 
46 1 316 1 243 1 274 1 148 1 267 1 285 1 301 1 226 1 
316 1 243 1 211 1 267 1 319 1 291 1 226 1 8 1 310 2 228 1 21 1 274 1 312 1 192 1 217 1 261 1 218 1 301 1 
316 1 243 1 211 1 267 1 319 1 291 1 226 1 8 1 310 2 228 1 21 1 274 1 312 1 192 1 217 1 261 1 218 1 301 1 
316 1 243 1 211 1 267 1 319 1 291 1 226 1 8 1 310 2 228 1 21 1 274 1 312 1 192 1 217 1 261 1 218 1 301 1 
183 1 83 1 336 1 
183 1 83 1 336 1 
36 1 330 1 
36 1 183 1 330 1 
350 1 4 1 
1 1 24 1 316 1 243 1 267 1 4 1 290 1 293 2 226 1 8 1 322 2 228 1 27 2 76 1 274 1 276 2 301 1 205 1 281 1 308 1 310 1 350 1 21 1 45 1 165 1 71 2 218 1 
83 1 336 1 
36 1 183 1 330 1 
195 1 169 1 288 2 91 1 197 2 92 1 140 2 357 1 322 2 294 1 340 2 97 1 27 2 119 1 12 1 99 1 299 1 150 1 203 1 55 1 276 2 253 1 278 1 61 1 370 1 161 2 283 1 284 1 164 2 190 1 242 1 
101 1 344 1 78 1 288 2 25 1 266 1 80 1 140 2 307 1 335 2 172 1 41 1 296 1 10 1 164 2 325 1 242 1 34 1 278 1 
78 1 288 1 25 1 266 1 80 1 63 1 140 1 307 1 335 2 172 1 41 1 296 1 10 1 164 1 242 1 34 1 278 1 
195 1 344 1 288 1 305 1 244 1 91 1 140 1 292 1 26 1 10 1 164 1 351 1 242 1 278 1 
101 1 344 1 78 1 288 1 25 1 266 1 80 1 140 1 307 1 335 2 172 1 41 1 296 1 10 1 164 1 242 1 34 1 278 1 
104 1 
146 1 210 1 352 1 6 1 184 1 291 1 328 1 
138 1 291 2 171 1 51 1 8 1 146 1 361 1 13 1 179 1 184 1 347 1 349 1 162 1 21 1 374 1 166 1 352 1 
195 3 47 2 3 2 288 3 6 1 91 10 140 3 291 8 339 2 51 12 8 5 145 6 146 8 13 4 100 2 255 2 345 6 208 1 210 1 156 1 158 1 160 2 349 3 258 2 259 2 162 4 21 5 67 2 164 3 111 1 352 2 318 3 264 2 221 1 170 2 171 5 271 2 26 1 225 1 325 1 275 1 361 6 278 4 179 4 125 2 184 9 130 3 372 2 235 2 188 2 374 4 286 2 242 3 193 2 
72 1 291 4 75 1 51 6 145 5 146 4 147 1 11 1 122 1 361 3 13 1 345 5 179 1 125 2 37 1 184 7 259 2 162 1 188 2 67 2 69 1 374 1 352 1 286 2 353 1 
263 1 196 1 354 1 271 1 224 1 293 1 8 1 322 1 27 1 146 2 30 1 149 1 329 1 276 1 13 1 14 1 100 2 179 1 346 1 207 1 209 1 184 2 259 1 162 1 21 1 67 2 374 1 71 1 
179 1 210 1 6 1 291 1 184 1 162 1 146 1 374 1 352 1 13 1 
345 5 125 2 291 5 184 5 271 1 258 1 51 10 259 2 145 5 188 2 67 2 146 5 361 5 286 2 100 2 
8 1 21 1 352 1 291 1 171 1 349 1 
195 1 47 2 288 4 91 1 140 4 292 1 171 4 26 2 95 1 8 3 146 2 123 1 13 2 278 1 179 2 102 1 208 2 305 1 184 2 158 2 19 1 349 2 187 1 162 1 21 3 164 4 111 1 374 2 242 1 
195 1 318 1 288 1 196 1 91 1 140 1 92 1 357 1 26 1 293 2 322 2 294 1 340 2 9 1 27 3 298 1 31 1 12 1 299 1 253 1 276 3 14 2 278 1 205 1 181 1 161 1 64 1 283 1 164 1 190 1 71 2 242 1 
345 2 179 1 47 1 184 1 291 4 158 1 51 4 248 1 145 2 162 1 146 2 374 1 352 2 361 2 13 1 
28 1 243 1 274 1 
243 1 274 1 4 1 375 1 312 1 
28 1 243 1 274 1 
28 1 243 1 274 1 
243 1 274 1 56 1 
243 1 274 1 56 1 
243 1 274 1 56 1 
243 1 274 1 
267 1 301 1 
263 1 0 1 354 2 357 8 294 2 340 4 97 9 248 1 249 1 299 2 253 2 58 4 207 2 209 2 161 17 131 3 65 7 259 3 283 2 67 3 88 1 
58 2 0 1 207 1 209 1 354 1 357 2 161 5 65 2 259 1 248 1 97 3 67 1 249 1 328 1 
58 1 125 1 357 2 40 1 161 4 131 1 259 1 65 2 294 1 340 2 97 2 188 1 283 1 67 1 299 1 286 1 253 1 
58 1 72 1 125 1 357 4 161 7 65 1 259 1 97 3 200 1 188 1 67 1 122 2 286 1 353 1 
263 1 0 1 72 2 354 2 246 1 357 12 294 1 248 1 200 1 97 13 340 2 249 1 122 2 299 1 253 1 58 5 125 2 209 2 207 2 182 1 161 25 131 2 259 5 65 7 188 2 283 1 67 5 286 2 88 1 
122 1 357 1 161 1 
97 1 72 1 161 1 
58 2 125 1 258 1 40 1 357 3 161 6 131 1 294 1 65 3 259 1 340 2 97 3 283 1 188 1 67 1 299 1 286 1 253 1 
72 1 75 1 357 6 294 1 340 2 97 6 147 1 11 1 122 1 299 1 253 1 58 1 125 2 37 1 159 1 161 12 131 1 259 2 65 2 283 1 188 2 67 2 69 1 286 2 353 1 
58 1 209 1 207 1 354 1 357 3 161 6 131 1 259 1 65 2 97 3 67 1 
58 1 0 1 207 1 354 1 185 1 357 2 161 3 131 1 65 2 294 1 97 1 340 2 283 1 249 1 299 1 253 1 88 1 
58 3 263 1 207 2 209 1 354 2 159 1 357 5 161 10 131 2 294 1 65 5 259 2 340 2 97 5 283 1 67 2 299 1 253 1 
159 1 161 2 131 1 294 1 65 1 340 2 97 2 283 1 67 1 299 1 286 1 253 1 
58 1 125 1 159 1 357 2 161 4 131 1 259 1 65 2 294 1 340 2 97 2 188 1 283 1 67 1 299 1 286 1 253 1 
58 1 207 1 269 1 354 1 159 1 185 1 357 2 161 3 131 1 294 3 65 2 340 6 97 1 283 3 299 3 253 3 88 1 
263 1 0 1 72 3 317 1 220 1 354 2 269 1 357 16 294 4 248 1 340 8 97 18 200 1 249 1 122 4 299 4 253 4 58 5 125 3 209 2 207 2 159 1 40 1 161 34 131 4 20 1 65 9 259 5 283 4 188 2 67 6 286 3 353 1 88 1 
263 1 72 1 0 1 354 2 357 8 294 1 248 1 340 2 97 10 200 1 147 1 249 1 122 2 299 1 253 1 58 4 125 1 209 2 207 2 159 1 161 18 131 1 259 3 65 5 283 1 67 4 286 1 353 1 
263 1 72 1 0 1 354 2 357 7 294 2 248 1 340 4 97 8 147 1 249 1 122 1 299 2 253 2 58 4 209 2 207 2 159 1 40 1 161 15 131 1 259 3 65 5 283 2 67 3 353 1 
72 1 75 1 357 7 294 2 340 4 97 6 147 1 11 1 122 1 299 2 253 2 125 2 37 1 159 1 40 1 161 13 131 1 259 2 65 1 283 2 188 2 67 2 69 1 286 2 353 1 
263 1 0 1 72 1 354 2 75 1 357 10 294 3 248 1 340 6 97 14 249 1 147 1 11 1 122 1 299 3 253 3 58 5 125 2 209 2 207 2 37 1 159 1 40 1 161 24 131 4 259 4 65 9 283 3 188 1 67 5 69 1 286 2 353 1 88 1 
263 1 72 1 0 1 354 2 357 8 294 1 248 1 340 2 97 10 200 1 147 1 249 1 122 2 299 1 253 1 58 4 125 1 209 2 207 2 159 1 161 18 131 1 259 3 65 5 283 1 67 4 286 1 353 1 
72 1 75 1 357 6 294 1 340 2 97 6 147 1 11 1 122 1 299 1 253 1 58 1 125 2 37 1 159 1 161 12 131 1 259 2 65 2 283 1 188 2 67 2 69 1 286 2 353 1 
72 1 75 1 357 5 294 3 340 6 97 7 147 1 11 1 122 1 299 3 253 3 125 2 37 1 159 1 40 1 161 12 131 1 65 1 259 1 283 3 188 1 67 2 69 1 286 2 353 1 88 1 
72 1 269 1 75 1 357 5 294 3 340 6 97 7 147 1 11 1 122 1 299 3 253 3 58 2 125 2 37 1 159 1 161 12 131 2 259 1 65 4 283 3 188 1 67 2 69 1 286 2 353 1 88 1 
58 3 0 1 207 3 209 1 354 3 357 4 161 7 131 3 259 1 65 6 97 3 67 1 249 2 
72 1 269 1 75 1 357 5 294 3 340 6 97 7 147 1 11 1 122 1 299 3 253 3 125 2 37 1 159 1 161 12 131 1 65 1 259 1 283 3 188 1 67 2 69 1 286 2 353 1 88 1 
322 1 205 1 114 1 27 1 333 1 376 1 276 1 
124 1 205 1 59 1 114 1 18 1 333 1 198 1 322 1 27 1 363 1 376 1 276 1 
195 1 164 1 305 1 288 1 91 1 292 1 328 1 140 1 242 1 26 1 278 1 
205 1 195 1 318 1 288 1 91 1 140 1 82 1 293 1 26 1 64 1 322 1 9 1 27 2 164 1 71 1 242 1 276 2 278 1 
195 2 318 2 288 1 91 3 117 1 140 1 293 1 322 2 9 1 27 2 30 1 276 2 278 1 255 1 205 1 208 1 82 1 105 1 372 1 64 1 164 1 71 2 242 1 
195 2 318 2 288 2 91 3 117 1 140 2 293 1 322 2 27 2 30 1 362 1 276 2 278 1 255 1 205 1 280 1 208 1 82 1 105 1 372 1 64 1 164 2 71 2 242 1 
57 1 195 1 318 1 208 1 288 3 91 4 291 1 140 3 171 1 160 1 372 1 130 1 26 1 8 2 21 2 164 3 352 1 362 1 242 1 204 1 193 1 255 1 278 1 
195 1 318 1 208 1 288 3 91 4 291 1 140 3 170 1 171 1 160 1 372 1 130 1 26 1 8 2 21 2 164 3 352 1 362 1 242 1 193 1 255 1 278 1 
164 1 288 1 368 1 140 1 242 1 278 1 
195 2 318 1 288 6 91 3 140 5 26 2 174 1 296 1 325 1 300 1 203 1 278 3 279 1 368 1 154 1 156 1 348 1 44 1 164 6 242 2 
195 1 0 1 288 1 91 1 7 1 140 1 92 2 293 1 294 2 9 1 340 4 97 7 248 1 249 1 299 2 55 1 253 2 15 1 58 4 205 3 207 2 209 2 161 13 64 1 65 5 259 3 67 3 164 1 71 1 263 1 318 1 354 2 357 6 322 1 27 2 30 1 325 1 31 1 276 2 278 1 181 1 370 1 82 1 131 1 283 2 190 2 242 1 135 1 
264 1 288 1 6 1 91 2 291 1 140 1 170 1 171 2 26 1 339 1 8 3 146 1 13 2 179 2 210 1 184 1 160 1 130 1 349 1 308 1 162 2 21 3 235 1 164 1 111 1 374 2 352 1 193 1 
195 1 318 1 368 1 288 2 91 2 140 2 156 1 160 1 164 2 325 1 275 1 242 1 278 2 
195 1 115 1 288 4 305 1 91 1 140 4 292 1 26 1 164 4 325 1 362 1 242 1 278 1 
315 1 195 1 318 1 208 1 288 2 91 1 140 2 348 1 373 1 164 2 300 1 242 1 302 1 278 2 
164 1 288 1 140 1 307 1 335 1 242 1 172 1 26 1 278 1 41 1 
195 1 296 1 164 2 288 2 325 1 91 1 140 2 150 1 242 1 203 1 278 1 
195 2 115 1 208 1 305 1 288 5 91 3 154 1 292 1 140 4 26 1 174 1 164 5 325 1 203 1 242 2 278 2 
195 2 115 1 208 1 305 1 288 5 38 1 91 3 154 1 292 1 140 4 26 1 164 5 325 1 203 1 242 2 278 2 
205 1 195 1 318 1 280 1 288 1 91 1 140 1 82 1 293 1 26 1 64 1 322 1 27 2 164 1 71 1 242 1 276 2 278 1 
279 1 195 1 318 1 208 1 288 1 91 1 140 1 156 1 348 1 164 1 300 1 242 1 278 2 
205 1 365 1 54 1 85 1 282 1 
205 1 364 1 365 2 332 1 117 1 291 1 105 1 129 1 308 1 282 2 85 2 8 2 21 2 30 1 352 1 54 1 327 1 167 1 193 1 
169 1 282 1 85 1 322 1 27 1 284 1 54 1 99 1 276 1 
364 1 332 1 54 1 
152 1 153 1 87 1 328 1 
152 1 180 1 153 1 87 1 241 1 178 1 277 1 
180 1 236 1 5 1 
152 1 180 3 153 1 126 1 371 1 337 1 237 2 342 1 87 1 178 1 241 3 277 1 
152 1 180 2 153 1 289 1 87 1 320 1 241 2 178 1 277 1 
180 1 152 1 80 1 307 1 335 1 94 1 337 1 23 1 178 1 241 1 277 1 
337 1 152 1 180 1 87 1 241 1 178 1 277 1 
337 1 180 1 153 1 87 2 241 1 178 1 277 1 
152 1 180 2 265 1 337 1 297 1 98 1 87 1 178 2 241 2 277 2 
262 1 180 3 152 2 153 1 289 2 245 1 128 1 94 1 337 1 87 1 178 1 241 3 277 1 
152 1 180 2 153 1 266 1 289 1 80 1 334 1 307 1 335 2 172 1 337 1 87 1 178 1 241 2 277 1 
180 4 152 2 153 1 289 2 320 1 128 1 94 1 227 1 337 1 87 1 178 2 241 4 277 2 
337 1 152 1 180 1 153 1 87 1 241 1 178 1 277 1 
331 1 180 4 152 3 153 2 289 2 126 1 128 1 371 1 94 1 237 1 87 2 241 4 178 1 277 1 
152 1 180 2 289 1 153 1 270 1 337 1 273 1 87 1 202 1 178 1 241 2 277 1 
152 1 180 3 153 1 126 1 371 2 337 1 237 2 191 1 87 1 178 1 241 3 277 1 
152 2 369 1 223 2 118 1 
337 1 180 1 251 1 241 1 178 1 277 1 
337 1 152 1 180 2 153 1 289 1 87 1 245 1 241 2 178 1 277 1 
287 1 
337 1 152 1 180 1 153 1 87 1 241 1 178 1 277 1 
180 3 152 1 289 1 153 1 245 1 337 1 237 1 87 1 178 1 241 3 277 1 
331 1 152 1 128 1 94 1 
152 1 87 1 

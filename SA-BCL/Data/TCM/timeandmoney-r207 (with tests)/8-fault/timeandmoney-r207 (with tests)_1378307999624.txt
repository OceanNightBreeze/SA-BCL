#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (143,270) 215 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (143,270) 215 150 172 (143,270) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 0 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (143,270) 215 21 179 211 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (143,270) 215 251 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (143,270) 215 150 121 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (143,270) 215 167 71 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (143,270) 215 150 172 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (143,270) 215 167 121 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (143,270) 215 167 71 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (143,270) 215 150 172 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (143,270) 215 167 121 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (143,270) 215 167 121 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (143,270) 215 167 121 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (143,270) 215 167 121 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (143,270) 215 167 121 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 61 152 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 61 169 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 61 169 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 61 169 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 61 169 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (143,270) 215 325 (17,55) (17,55) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3602 | return null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1902 | = null
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
193 2 70 9 212 2 52 5 115 1 216 3 135 1 217 1 345 1 178 1 7 4 350 1 57 6 9 1 354 2 79 1 12 2 41 2 326 9 18 1 63 1 253 1 226 1 331 1 208 1 188 1 64 2 289 2 
193 2 70 9 212 2 52 5 115 1 216 3 135 1 217 1 345 1 178 1 7 4 350 1 57 6 9 1 354 2 79 1 12 2 41 2 326 9 18 1 63 1 253 1 226 1 331 1 208 1 188 1 64 2 289 2 
193 2 70 10 212 2 52 6 115 1 216 4 135 1 217 1 345 1 178 1 7 5 350 1 57 7 9 1 354 2 79 1 12 2 41 2 326 10 18 1 63 1 253 1 226 1 331 1 208 1 188 1 64 2 289 2 
193 1 70 7 212 2 52 4 115 1 216 2 217 1 345 1 178 1 7 3 350 1 57 4 9 1 354 2 79 1 12 2 41 2 326 7 18 1 63 1 253 1 226 1 331 1 208 1 188 1 64 2 289 2 
193 2 70 4 41 1 212 1 52 3 326 4 216 1 135 1 226 1 217 1 345 1 178 1 7 2 57 3 9 1 289 1 64 1 354 1 
70 2 12 1 41 1 212 1 52 1 326 2 342 1 226 1 217 1 76 1 350 1 9 1 289 1 159 1 354 1 79 1 
70 3 12 1 41 2 52 2 326 3 216 1 253 1 226 1 217 1 7 1 57 1 9 1 354 2 
193 2 70 9 12 1 41 2 212 1 52 5 326 9 216 3 135 1 18 1 253 1 226 1 217 1 345 1 308 1 178 1 188 1 7 4 57 7 9 1 289 1 64 1 354 2 264 1 
193 2 70 9 12 1 41 2 212 1 52 5 326 9 216 3 135 1 18 1 253 1 226 1 217 1 345 1 308 1 178 1 188 1 7 4 57 7 9 1 289 1 64 1 354 2 264 1 
200 1 0 1 185 1 
87 2 200 1 105 1 
129 2 50 1 72 2 98 1 181 2 333 2 373 2 151 2 
340 1 50 1 72 2 317 1 54 1 319 1 116 1 151 3 32 1 320 2 181 2 347 1 351 1 183 1 223 1 300 1 247 2 248 1 98 1 81 1 99 1 360 2 361 1 207 1 166 1 42 2 129 3 103 1 147 1 261 1 333 2 371 1 66 1 334 1 373 2 314 1 48 2 
129 1 23 1 50 1 72 1 181 1 333 1 123 1 373 1 151 1 38 1 
249 1 72 1 185 1 82 1 145 1 151 1 118 1 129 1 83 1 200 1 313 1 324 1 65 1 123 1 
72 1 185 1 82 1 151 1 118 1 129 1 83 1 200 1 181 1 333 1 324 2 313 2 65 1 123 1 373 1 
309 1 194 1 370 1 324 1 313 1 
309 1 200 1 194 1 4 1 185 1 324 2 313 2 140 1 
194 1 324 1 313 1 
50 1 72 1 204 1 151 1 129 1 23 1 309 1 181 1 333 1 313 1 324 1 123 1 373 1 38 1 
200 1 
309 1 200 1 194 1 4 1 185 1 324 2 313 2 362 1 
69 1 171 1 194 2 15 2 16 1 185 1 136 2 177 1 309 2 200 1 4 1 94 1 95 1 366 1 34 2 349 1 58 1 313 5 324 5 
98 1 0 1 
129 2 72 2 276 1 98 2 181 1 333 1 373 1 141 1 151 2 
215 1 143 1 
247 1 98 1 99 1 360 1 361 1 54 1 151 1 207 1 346 1 129 1 103 1 261 1 371 1 334 1 48 1 300 1 
247 1 72 1 99 1 143 1 360 1 54 1 361 1 151 2 207 1 129 2 103 1 156 1 261 1 371 1 333 1 352 1 334 1 373 1 48 1 300 1 
129 3 72 3 181 1 98 1 156 1 333 3 373 3 151 3 
129 1 23 1 72 1 333 1 123 1 373 1 151 1 
129 1 276 1 72 1 181 1 333 1 123 1 373 1 141 1 151 1 
340 1 50 1 72 3 317 1 54 1 151 4 118 1 32 1 320 2 181 2 156 1 347 1 351 1 183 1 324 1 352 1 123 1 223 1 141 1 300 1 247 1 248 1 98 1 99 1 81 1 82 1 360 1 361 1 207 1 42 1 129 4 83 1 103 1 84 1 147 1 261 1 371 1 333 3 313 1 65 1 334 1 373 3 48 1 191 1 
129 2 249 1 72 2 98 1 156 1 333 1 303 1 373 1 151 2 
72 3 73 1 82 1 151 3 118 1 129 3 83 1 200 1 181 1 156 2 333 3 324 1 313 1 352 1 65 1 123 1 141 1 373 3 191 1 
129 2 72 2 181 1 156 1 333 2 143 1 373 2 141 1 151 2 329 1 
247 1 98 1 99 1 360 1 361 1 54 1 151 1 207 1 129 1 103 1 261 1 371 1 334 1 48 1 300 1 
247 1 86 1 98 1 360 1 361 1 151 1 207 1 129 1 103 1 261 1 371 1 107 1 334 1 48 1 300 1 
150 1 301 1 97 1 215 1 143 1 172 1 317 1 270 1 42 2 32 1 320 2 147 2 347 1 351 1 183 1 223 1 
83 1 129 1 72 1 333 1 123 1 174 1 373 1 151 1 
249 1 111 1 72 5 98 1 303 1 151 5 129 5 181 1 156 2 333 4 352 1 373 4 141 1 290 1 
129 2 23 1 72 2 333 2 174 1 123 1 373 2 151 2 
24 1 277 1 
24 1 277 1 
203 1 271 1 
203 1 271 1 
203 1 271 1 
24 1 277 1 262 1 
24 1 277 1 93 1 
40 1 24 2 277 2 203 1 271 1 335 1 
24 1 277 1 262 1 
24 1 277 1 262 1 
24 1 269 1 277 1 
24 1 269 1 277 1 
24 1 269 1 277 1 
292 1 40 1 339 2 357 1 74 1 2 2 24 2 200 1 131 1 277 2 311 2 259 2 148 1 348 1 372 3 313 2 324 2 139 1 356 2 
339 1 72 2 98 1 2 1 93 1 151 2 306 1 219 1 129 2 24 1 277 1 311 1 25 1 259 1 348 1 372 1 333 2 244 1 313 1 324 1 122 1 265 1 266 1 373 2 
212 1 289 1 64 1 
212 1 342 1 289 1 
321 1 189 1 342 1 64 2 289 3 119 1 
321 1 342 1 64 1 289 2 119 1 288 1 
321 1 342 1 64 1 289 2 119 2 
69 3 150 1 87 3 295 1 194 1 136 1 173 1 219 1 4 1 200 2 95 2 34 1 324 5 121 1 161 1 125 2 301 1 15 1 359 1 302 1 185 1 144 2 165 2 167 1 309 4 105 1 366 1 43 1 313 5 265 1 266 1 291 1 
87 9 50 1 1 1 136 2 56 1 94 1 4 1 181 1 95 6 324 8 15 2 185 1 144 6 19 4 23 1 187 1 105 3 229 1 333 1 291 2 69 8 150 3 295 2 72 1 194 5 296 1 151 1 200 5 34 2 121 3 123 1 38 1 301 3 359 3 204 1 165 6 129 1 167 3 309 6 43 1 366 1 260 1 370 4 313 8 265 4 373 1 
69 3 150 1 295 1 87 4 136 1 173 1 200 3 94 1 95 2 34 1 324 3 121 1 125 1 301 1 15 1 185 1 302 1 359 1 144 2 165 2 167 1 309 2 105 2 313 3 265 1 291 1 
87 7 50 1 1 1 136 1 173 1 94 1 95 4 181 1 324 3 15 1 185 1 144 4 23 1 105 3 229 1 333 1 291 1 69 5 295 1 150 2 72 1 151 1 200 4 34 1 121 2 123 1 38 1 125 1 301 2 359 2 302 1 204 1 165 4 167 2 129 1 309 2 260 1 313 3 265 2 373 1 
0 1 68 1 207 1 
282 1 207 1 
299 1 
207 1 300 1 
103 1 91 1 68 2 108 1 207 3 300 1 
103 1 207 1 300 1 
337 1 207 1 
301 1 96 2 325 2 359 1 17 1 227 1 319 4 55 1 198 1 42 7 147 3 168 1 35 1 312 1 279 1 106 3 59 1 
301 1 96 2 325 2 359 1 17 1 227 1 319 4 55 1 198 1 42 7 147 3 168 1 35 1 312 1 279 1 106 3 59 1 
301 1 110 1 96 2 325 2 359 1 17 1 227 1 319 4 55 1 198 1 42 7 147 3 168 1 35 1 312 1 279 1 106 3 59 1 
29 1 317 1 319 3 198 1 220 1 320 2 154 1 35 2 347 1 279 1 351 1 59 1 223 1 96 1 284 1 325 1 254 1 21 1 42 6 44 1 147 3 168 1 312 1 106 2 
301 1 96 3 325 2 359 1 17 1 317 2 227 1 319 5 305 1 31 1 55 1 198 1 42 9 320 4 154 1 168 1 147 4 35 1 347 2 312 1 279 1 351 2 106 4 223 2 
236 1 70 2 212 1 52 1 342 1 297 1 217 1 240 1 241 1 57 1 9 1 354 1 160 1 247 1 12 1 41 1 326 2 360 1 226 1 126 1 100 1 206 1 371 1 189 1 64 1 289 2 334 1 48 1 267 1 336 1 
236 1 70 3 212 1 52 1 342 1 297 1 217 1 240 1 241 1 57 2 9 1 354 1 160 1 247 1 39 1 12 1 41 1 326 3 360 1 100 1 364 1 257 1 189 1 371 1 64 1 289 2 334 1 48 1 267 1 336 1 
236 1 247 1 70 2 12 1 212 1 52 1 326 2 342 1 360 1 297 1 100 1 217 1 241 1 364 1 257 1 189 1 371 1 57 2 9 1 64 1 289 2 334 1 160 1 48 1 336 1 
247 1 39 1 70 1 12 2 41 1 326 1 360 1 297 2 361 1 363 1 207 1 307 1 146 1 275 1 137 1 241 2 332 1 371 1 334 1 354 1 48 1 300 1 336 2 
236 1 70 1 212 1 342 1 297 1 240 1 241 1 354 1 160 1 247 1 12 1 41 1 326 1 360 1 226 1 126 1 100 1 257 1 371 1 189 1 64 1 289 2 334 1 48 1 267 1 336 1 
213 1 
87 2 90 1 214 1 315 1 136 1 275 1 137 1 4 3 95 2 324 5 14 2 15 1 287 2 185 1 328 1 145 1 105 2 65 1 334 1 27 1 291 1 69 2 338 1 194 6 72 1 75 2 151 1 118 1 153 1 200 2 33 2 34 1 242 4 120 2 243 1 245 2 123 1 300 1 247 2 249 1 80 2 162 1 82 1 360 2 127 1 205 1 361 2 207 1 129 1 83 1 366 1 209 1 371 1 313 5 48 2 
338 1 194 2 249 1 72 1 90 1 162 1 82 1 127 1 362 1 145 1 151 1 118 1 83 1 129 1 153 1 4 1 242 2 120 1 313 3 324 3 65 1 123 1 
338 1 194 1 72 1 90 1 151 1 118 1 153 1 200 1 4 1 242 3 33 1 324 3 123 1 249 1 162 1 82 1 185 1 127 1 145 1 362 1 129 1 83 1 313 3 65 1 
338 1 72 1 194 2 90 1 151 1 118 1 153 1 4 1 200 1 242 3 33 1 120 1 324 3 123 1 249 1 287 1 162 1 82 1 185 1 127 1 362 1 145 1 129 1 83 1 313 3 65 1 
338 1 50 1 72 2 194 3 90 1 151 2 118 1 153 1 200 1 4 1 181 1 242 2 120 2 324 3 123 2 38 1 13 1 249 1 287 2 162 1 185 1 82 1 204 1 127 1 145 1 362 1 129 2 83 1 23 1 367 1 333 1 313 3 65 1 373 1 
87 2 90 1 315 1 136 1 4 2 95 1 324 4 15 1 14 2 287 2 185 1 328 1 145 1 105 2 65 1 69 1 338 1 72 1 194 4 75 2 151 1 118 1 153 1 200 2 242 4 34 1 33 2 120 2 245 2 123 1 249 1 80 2 162 1 82 1 127 1 205 1 83 1 129 1 366 1 313 4 
50 1 90 1 53 1 315 1 136 1 4 2 181 1 95 1 324 4 15 1 14 2 287 2 185 1 328 1 145 1 23 1 105 2 333 1 65 1 69 1 338 1 72 2 194 4 298 1 75 2 151 2 118 1 153 1 200 1 242 4 34 1 33 2 120 2 158 1 245 2 123 2 38 1 249 1 80 2 162 1 82 1 204 1 127 1 83 1 129 2 366 1 313 4 373 1 
50 1 90 1 53 1 315 1 136 1 4 2 181 1 95 1 324 4 15 1 14 2 287 2 185 1 328 1 145 1 23 1 105 2 333 1 65 1 69 1 338 1 72 2 194 4 298 1 75 2 151 2 118 1 153 1 200 1 242 4 34 1 33 2 120 2 158 1 245 2 123 2 38 1 249 1 80 2 162 1 82 1 204 1 127 1 83 1 129 2 366 1 313 4 373 1 
87 2 50 1 90 1 53 1 315 1 136 1 92 2 274 1 4 2 181 1 95 1 324 4 15 1 14 2 287 2 185 1 145 1 228 1 102 2 23 1 333 1 65 1 69 1 338 1 72 2 194 4 117 1 151 2 118 1 153 1 200 1 242 4 34 1 33 2 120 2 123 2 38 1 249 1 80 2 162 1 82 1 204 1 127 1 83 1 129 2 366 1 313 4 373 1 
50 1 90 1 53 1 315 1 136 1 4 2 181 1 95 1 324 4 15 1 14 2 287 3 185 1 328 1 145 1 23 1 105 2 333 1 65 1 69 1 338 1 194 5 72 2 298 1 75 2 151 2 118 1 153 1 200 1 33 3 242 5 34 1 120 3 158 1 245 2 123 2 38 1 249 1 80 2 162 1 82 1 204 1 127 1 83 1 129 2 367 1 366 1 313 4 373 1 
50 1 90 1 53 1 315 1 136 1 4 2 181 1 95 1 324 4 15 1 14 2 287 3 185 1 328 1 145 1 23 1 105 2 333 1 65 1 69 1 338 1 194 5 72 2 298 1 75 2 151 2 118 1 153 1 200 1 33 3 242 5 34 1 120 3 158 1 245 2 123 2 38 1 249 1 80 2 162 1 82 1 204 1 127 1 83 1 129 2 367 1 366 1 313 4 373 1 
69 1 87 2 338 1 194 4 72 1 90 1 315 1 136 1 92 2 151 1 118 1 153 1 200 1 4 2 95 1 33 2 34 1 242 4 120 2 324 4 123 1 249 1 14 2 15 1 287 2 80 2 162 1 185 1 82 1 127 1 205 1 145 1 228 1 102 2 129 1 83 1 366 1 313 4 65 1 
0 1 215 1 317 1 319 3 55 1 198 1 32 1 320 2 347 1 351 1 183 1 223 1 301 1 96 2 97 1 98 2 325 1 359 1 143 1 17 1 227 1 42 6 147 3 312 1 106 2 
215 1 143 1 317 1 21 1 42 1 32 1 320 2 179 1 147 1 347 1 231 1 351 1 183 1 223 1 211 1 
340 1 72 1 317 1 54 1 151 2 116 1 319 1 197 1 346 1 32 1 320 2 156 1 347 1 351 1 183 1 352 1 223 1 300 1 124 1 247 1 98 1 99 1 360 1 361 1 207 1 329 1 129 2 42 2 103 1 147 1 261 1 371 1 231 1 333 1 334 1 234 1 373 1 48 1 
340 1 72 1 112 1 215 1 317 2 318 1 54 1 151 2 32 2 320 4 156 1 347 2 351 2 183 2 352 1 223 2 300 1 247 1 248 1 99 1 251 1 143 1 360 1 361 1 207 1 42 2 129 2 103 1 147 2 261 1 371 1 231 1 333 1 334 1 374 1 373 1 48 1 149 1 
340 1 72 1 51 1 317 2 151 1 116 1 319 1 32 2 137 1 275 1 320 4 182 1 156 1 347 2 322 1 351 2 36 1 183 2 281 1 246 1 223 2 300 2 247 8 224 1 97 1 360 8 361 2 206 1 207 3 129 1 42 2 257 1 147 1 333 1 371 2 334 2 373 1 48 7 314 2 
150 1 72 1 215 1 317 1 151 1 319 1 32 1 320 2 181 1 347 1 351 1 183 1 121 1 141 1 223 1 301 1 359 1 143 1 129 1 167 1 42 3 147 2 333 1 231 1 45 1 373 1 
71 1 97 1 215 1 359 1 143 1 317 1 319 2 42 2 167 1 32 1 320 2 347 1 351 1 183 1 223 1 
150 1 301 1 97 1 215 1 143 1 172 1 317 1 42 2 32 1 320 2 147 2 347 1 351 1 183 1 223 1 
97 1 215 1 359 1 143 1 317 1 319 2 42 2 167 1 32 1 320 2 347 1 351 1 183 1 121 1 223 1 
224 1 71 1 215 1 359 1 143 1 317 1 319 2 42 2 167 1 32 1 320 2 347 1 351 1 183 1 223 1 
224 1 150 1 301 1 215 1 143 1 172 1 317 1 42 2 32 1 320 2 147 2 347 1 351 1 183 1 223 1 
224 1 215 1 359 1 143 1 317 1 319 2 42 2 167 1 32 1 320 2 347 1 351 1 183 1 121 1 223 1 
215 1 359 1 143 1 317 1 319 2 167 1 42 2 32 1 320 2 347 1 351 1 183 1 121 1 223 1 
340 1 317 1 54 1 319 1 116 1 151 1 32 1 320 2 347 1 351 1 183 1 223 1 300 1 247 1 248 1 98 1 99 1 360 1 361 1 207 1 42 2 129 1 103 1 147 1 261 1 371 1 334 1 48 1 
86 1 340 1 317 1 319 1 116 1 151 1 32 1 320 2 347 1 351 1 323 1 183 1 223 1 300 1 247 1 98 1 360 1 361 1 207 1 42 2 129 1 103 1 147 1 261 1 371 1 107 1 334 1 48 1 
215 1 359 1 143 1 317 1 319 2 42 2 167 1 32 1 320 2 347 1 231 1 351 1 183 1 121 1 223 1 
215 1 317 1 318 1 54 1 319 2 151 1 32 1 320 2 347 1 351 1 183 1 121 1 223 1 300 1 247 1 248 1 99 1 359 1 143 1 360 1 206 1 207 1 42 2 167 1 129 1 103 1 261 1 371 1 334 1 48 1 
294 1 72 1 215 1 359 1 143 1 317 1 319 2 151 1 42 2 167 1 129 1 32 1 320 2 181 1 347 1 231 1 351 1 333 1 183 1 121 1 373 1 223 1 141 1 
150 2 89 1 29 2 317 4 319 15 218 1 152 1 55 1 198 1 273 1 220 2 221 1 320 8 154 2 347 4 202 1 351 4 121 2 223 4 301 3 96 2 325 1 358 1 61 1 359 3 17 1 62 1 227 1 21 2 305 1 330 1 42 29 167 2 310 1 168 3 147 14 312 1 190 1 106 5 26 1 46 3 
150 1 89 2 29 2 317 3 319 11 218 1 273 1 220 2 221 1 320 6 154 2 347 3 202 1 351 3 121 2 223 3 301 1 96 1 358 1 61 1 359 2 62 1 305 1 21 2 330 2 42 20 167 2 310 1 169 1 168 1 147 9 190 1 106 2 46 3 
150 2 89 1 29 2 317 4 319 15 218 1 55 1 198 1 273 1 220 2 221 1 320 8 154 2 347 4 202 1 351 4 121 2 223 4 301 3 96 2 325 1 358 1 61 1 359 3 17 1 62 1 227 1 21 2 305 1 330 1 42 29 167 2 310 1 169 1 168 3 147 14 312 1 190 1 106 5 26 1 46 3 
150 2 89 1 29 2 317 4 319 15 218 1 55 1 198 1 273 1 220 2 221 1 320 8 154 2 347 4 202 1 351 4 121 2 223 4 301 3 96 2 325 1 358 1 61 1 359 3 17 1 62 1 227 1 21 2 305 1 330 1 42 29 167 2 310 1 169 1 168 3 147 14 312 1 190 1 106 5 26 1 46 3 
150 2 89 1 29 2 317 3 319 11 218 1 273 1 220 2 221 1 320 6 154 2 347 3 202 1 351 3 121 2 223 3 301 2 96 1 358 1 61 1 359 2 62 1 21 2 305 1 330 1 42 22 167 2 310 1 169 1 168 2 147 11 190 1 106 3 46 3 
292 1 40 1 339 1 24 1 85 1 311 1 277 1 259 1 2 1 139 1 
93 1 306 1 
339 1 24 1 180 1 311 1 277 1 286 1 259 1 2 1 375 1 
292 1 40 1 339 1 357 1 2 1 24 1 200 1 131 1 277 1 311 1 259 1 148 1 348 1 372 2 313 1 324 1 139 1 356 1 
292 1 40 1 339 1 357 1 2 1 24 1 200 1 131 1 277 1 311 1 259 1 148 1 348 1 372 2 313 1 324 1 139 1 356 1 
292 1 40 1 339 1 357 1 2 1 24 1 200 1 131 1 277 1 311 1 259 1 148 1 348 1 372 2 313 1 324 1 139 1 356 1 
365 1 262 1 335 1 
365 1 262 1 335 1 
269 1 155 1 
269 1 155 1 335 1 
244 1 122 1 
339 1 72 2 2 1 316 1 151 2 93 1 219 1 277 1 324 1 244 1 122 1 356 1 357 1 98 1 306 1 129 2 309 1 24 1 311 1 259 1 25 1 372 1 333 2 313 1 265 1 266 1 373 2 
365 1 262 1 
269 1 155 1 335 1 
340 1 72 2 51 1 195 1 317 1 151 2 116 1 319 1 176 1 199 1 32 1 320 2 182 1 5 1 347 1 351 1 183 1 223 1 300 1 247 2 360 2 207 1 101 1 129 2 42 2 147 1 371 1 231 1 334 1 314 2 48 2 
247 2 236 1 212 1 163 1 342 1 360 2 206 1 128 1 241 1 257 1 189 1 371 1 64 1 289 2 334 1 160 1 48 2 78 1 267 1 
247 1 236 1 212 1 342 1 360 1 128 1 241 1 257 1 368 1 189 1 371 1 64 1 289 2 334 1 160 1 48 1 267 1 
247 1 49 1 163 1 360 1 361 1 207 1 241 1 137 1 275 1 332 1 371 1 334 1 48 1 300 1 
247 1 236 1 212 1 163 1 342 1 360 1 128 1 241 1 257 1 189 1 371 1 64 1 289 2 334 1 160 1 48 1 78 1 267 1 
20 1 
69 1 200 1 95 1 16 1 0 1 185 1 58 1 
69 1 87 1 194 1 15 1 185 1 136 1 75 1 328 1 4 1 200 2 105 1 366 1 95 1 34 1 324 1 313 1 245 1 
87 12 136 4 272 2 3 2 4 3 95 8 278 2 280 1 58 1 324 5 282 3 15 4 285 2 16 1 185 2 144 6 103 3 105 6 334 3 233 1 27 1 108 1 68 2 291 2 69 9 337 2 109 1 28 2 150 2 194 5 341 2 200 8 34 4 121 2 77 1 300 3 247 3 301 2 251 2 82 2 359 2 360 3 165 6 361 1 206 1 207 10 167 2 366 4 371 4 313 5 132 2 48 3 47 1 
69 8 87 6 150 2 194 1 29 1 113 2 136 2 218 1 273 1 220 1 3 1 4 1 200 5 95 5 202 1 34 2 324 1 121 2 301 2 15 2 327 1 359 2 185 2 144 5 62 1 165 5 21 1 167 2 105 3 310 1 366 2 313 1 27 1 67 1 291 1 
69 2 50 1 72 1 113 2 136 1 151 1 198 1 3 1 95 2 181 1 34 1 158 1 324 1 123 1 38 1 301 1 15 1 359 2 204 1 227 1 129 1 23 1 366 1 312 1 333 1 313 1 263 1 373 1 
69 1 200 1 95 1 15 1 366 1 16 1 34 1 185 1 58 1 136 1 
69 5 87 10 150 2 301 2 251 1 359 2 144 5 165 5 167 2 3 1 105 5 200 5 95 5 121 2 
200 1 194 1 4 1 185 1 324 1 313 1 
293 1 69 2 194 4 214 1 343 1 136 2 137 1 275 1 94 1 4 2 95 2 34 2 280 2 324 3 300 1 247 4 15 2 360 4 361 2 207 1 366 1 209 1 371 1 313 3 334 1 233 1 27 2 48 4 291 2 
340 1 50 1 72 2 317 1 54 1 151 3 32 1 320 2 181 2 347 1 351 1 183 1 223 1 300 1 247 1 248 1 98 1 81 1 99 1 360 1 361 1 207 1 42 1 129 3 103 1 147 1 261 1 333 2 371 1 334 1 373 2 48 1 
69 1 87 4 15 1 325 1 185 2 144 2 136 1 165 2 105 2 200 4 95 2 366 1 34 1 27 1 291 1 
339 1 311 1 252 1 
339 1 311 1 122 1 355 1 139 1 
339 1 311 1 252 1 
339 1 311 1 252 1 
339 1 311 1 369 1 
339 1 311 1 369 1 
339 1 311 1 369 1 
339 1 311 1 
24 1 277 1 
301 1 96 2 325 1 359 1 17 1 317 2 227 1 319 4 55 1 42 8 198 1 320 4 154 1 147 4 168 1 347 2 351 2 312 1 106 3 223 2 
301 1 96 2 325 1 0 1 359 1 17 1 227 1 319 3 55 1 198 1 42 6 147 3 312 1 106 2 
301 1 150 1 238 1 359 1 317 1 319 2 167 1 42 4 320 2 147 2 347 1 351 1 121 1 223 1 
42 2 220 1 29 1 147 1 319 1 21 1 
150 2 29 2 317 1 319 13 55 1 198 2 320 2 179 1 154 1 347 1 351 1 121 2 223 1 301 5 96 4 325 1 359 5 225 1 17 1 227 2 21 2 167 2 42 25 130 1 147 12 168 4 312 2 106 8 263 1 
42 1 147 1 21 1 
42 1 29 1 319 1 
150 1 301 1 251 1 238 1 359 1 317 1 319 3 42 6 167 1 320 2 147 3 168 1 347 1 351 1 106 1 121 1 223 1 
150 2 29 1 317 1 319 6 218 1 273 1 220 1 320 2 202 1 347 1 351 1 121 2 223 1 301 2 359 2 62 1 21 1 305 1 42 12 167 2 310 1 147 6 168 1 106 1 
301 1 96 1 359 1 227 1 319 3 42 6 198 1 147 3 168 1 312 1 106 2 
96 1 17 1 317 1 319 1 55 1 198 1 42 3 320 2 154 1 168 1 44 1 147 2 347 1 312 1 351 1 106 2 223 1 
301 2 96 3 359 2 317 1 227 1 305 1 319 5 198 2 42 10 320 2 168 2 147 5 347 1 351 1 312 2 106 5 263 1 223 1 
359 1 317 1 305 1 319 2 167 1 42 2 320 2 168 1 347 1 351 1 106 1 223 1 
301 1 150 1 359 1 317 1 305 1 319 2 167 1 42 4 320 2 147 2 168 1 347 1 351 1 106 1 121 1 223 1 
96 1 317 3 305 1 319 1 42 3 198 1 320 6 154 1 44 1 147 2 168 1 347 3 351 3 312 1 106 2 26 1 223 3 
29 1 238 1 317 4 319 7 55 1 198 2 220 1 320 8 154 1 347 4 351 4 223 4 301 2 96 3 359 2 17 1 227 1 254 1 21 1 305 1 42 15 168 3 147 8 44 1 312 2 106 6 263 1 26 1 
150 1 29 1 317 2 319 14 218 1 55 1 198 2 273 1 220 1 320 4 154 1 202 1 347 2 351 2 121 2 223 2 301 4 96 4 325 1 359 5 17 1 62 1 227 2 21 1 305 1 42 24 167 2 310 1 147 10 168 4 312 2 106 8 263 1 
150 1 29 1 238 1 317 3 319 10 218 1 55 1 198 1 273 1 220 1 320 6 154 1 202 1 347 3 351 3 121 2 223 3 301 2 96 2 325 1 359 3 17 1 62 1 227 1 21 1 305 1 42 17 167 2 310 1 147 7 168 1 312 1 106 3 
150 2 29 1 238 1 317 3 319 9 218 1 55 1 198 1 273 1 220 1 320 6 154 1 202 1 347 3 351 3 121 2 223 3 301 3 96 3 325 1 359 3 17 1 62 1 227 1 21 1 305 1 42 19 167 2 310 1 168 1 147 10 312 1 106 4 
150 1 29 1 238 1 317 3 319 10 218 1 55 1 198 1 273 1 220 1 320 6 154 1 202 1 347 3 351 3 121 2 223 3 301 2 96 2 325 1 359 3 17 1 62 1 227 1 21 1 305 1 42 17 167 2 310 1 147 7 168 2 312 1 106 4 
150 1 29 1 317 2 319 14 218 1 55 1 198 2 273 1 220 1 320 4 154 1 202 1 347 2 351 2 121 2 223 2 301 4 96 4 325 1 359 5 17 1 62 1 227 2 21 1 305 1 42 24 167 2 310 1 147 10 168 4 312 2 106 8 263 1 
150 2 29 1 317 1 319 6 218 1 273 1 220 1 320 2 202 1 347 1 351 1 121 2 223 1 301 2 359 2 62 1 21 1 305 1 42 12 167 2 310 1 147 6 168 1 106 1 
150 1 29 1 238 1 317 4 319 10 218 1 55 1 198 1 273 1 220 1 320 8 154 2 202 1 347 4 351 4 121 2 223 4 301 2 96 3 325 1 359 3 17 1 62 1 227 1 21 1 305 1 42 18 167 2 310 1 168 2 147 8 312 1 106 5 
150 1 29 1 317 3 319 7 218 1 273 1 220 1 320 6 154 1 202 1 347 3 351 3 121 2 223 3 301 1 359 2 62 1 21 1 305 1 42 11 167 2 310 1 147 4 168 2 106 2 26 1 
301 1 96 3 359 1 17 1 227 1 319 3 55 2 42 7 198 3 147 4 168 3 312 3 106 6 
150 1 29 1 317 4 319 10 218 1 55 1 198 1 273 1 220 1 320 8 154 2 202 1 347 4 351 4 121 2 223 4 301 2 96 3 325 1 359 3 17 1 62 1 227 1 21 1 305 1 42 18 167 2 310 1 168 1 147 8 312 1 106 4 26 1 
129 1 72 1 249 1 98 1 157 1 303 1 151 1 
237 1 249 1 72 1 98 1 196 1 303 1 151 1 129 1 201 1 8 1 157 1 11 1 
247 1 275 1 137 1 0 1 371 1 360 1 334 1 361 1 48 1 207 1 300 1 
247 1 72 1 98 1 360 1 361 1 54 1 151 2 207 1 129 2 103 1 156 1 261 1 371 1 333 1 334 1 373 1 48 1 300 1 
337 1 247 1 72 2 98 1 341 1 360 1 54 1 151 2 118 1 207 3 83 1 129 2 103 2 156 1 261 1 371 1 333 1 280 1 123 1 334 1 373 2 48 1 300 2 
337 1 247 2 88 1 72 2 98 1 341 1 360 2 151 2 118 1 207 3 83 1 129 2 103 2 156 1 261 1 371 1 333 1 280 1 107 1 123 1 334 1 373 2 48 2 300 2 
337 1 88 1 133 1 194 1 341 1 200 1 280 1 324 2 300 1 247 3 282 1 82 1 185 1 360 3 361 1 207 4 22 1 103 1 371 1 313 2 334 1 68 1 48 3 
337 1 247 3 88 1 282 1 194 1 185 1 82 1 341 1 360 3 361 1 207 4 103 1 200 1 278 1 371 1 280 1 313 2 324 2 334 1 48 3 68 1 300 1 
247 1 371 1 322 1 360 1 334 1 48 1 
247 7 114 1 360 7 361 2 206 1 207 3 103 1 257 1 182 1 230 1 322 1 371 3 36 1 281 1 246 1 210 1 334 2 314 1 48 6 108 1 300 2 
72 1 215 1 317 2 318 1 54 1 319 3 151 2 55 1 198 1 32 2 320 4 156 1 347 2 351 2 183 2 223 2 300 1 247 1 301 1 248 1 96 2 98 2 325 1 99 1 359 1 143 1 17 1 360 1 227 1 206 1 207 1 101 1 42 6 129 2 103 1 147 3 261 1 312 1 371 1 231 1 333 1 106 2 334 1 373 1 48 1 149 1 
69 1 28 1 194 2 136 2 272 1 200 1 4 1 95 1 278 1 34 2 58 1 324 3 247 1 282 1 15 2 16 1 185 1 82 1 360 1 361 1 207 2 309 1 366 2 313 3 132 1 233 1 48 1 68 1 
247 2 360 2 206 1 207 2 103 1 322 1 371 2 334 1 68 1 48 2 47 1 108 1 300 1 
247 4 88 1 250 1 360 4 361 1 206 1 207 1 137 1 275 1 371 1 334 1 48 4 300 1 
247 2 268 1 142 1 360 2 207 1 103 1 230 1 371 2 280 1 37 1 210 1 334 1 48 2 300 1 
247 1 212 1 371 1 342 1 289 1 360 1 334 1 160 1 361 1 48 1 
247 2 360 2 206 1 207 1 257 1 5 1 182 1 371 1 334 1 48 2 300 1 
247 5 250 1 360 5 361 1 206 1 207 3 275 1 137 1 182 1 371 2 280 1 36 1 281 1 334 2 48 4 300 2 
247 5 250 1 360 5 361 1 206 1 207 3 275 1 137 1 256 1 182 1 371 2 280 1 281 1 334 2 48 4 300 2 
247 1 72 1 98 1 360 1 361 1 151 2 207 1 129 2 103 1 156 1 261 1 371 1 333 1 107 1 334 1 373 1 48 1 300 1 
247 1 114 1 360 1 207 1 103 1 230 1 371 2 280 1 210 1 334 1 48 1 108 1 300 1 
192 1 98 1 184 1 170 1 239 1 
192 1 134 1 98 1 185 1 82 1 239 2 344 1 118 1 83 1 309 1 200 1 6 1 170 2 184 2 313 2 324 2 65 1 123 1 191 1 
176 1 192 1 129 1 199 1 72 1 195 1 184 1 170 1 151 1 
192 1 6 1 344 1 
52 1 0 1 9 1 217 1 
70 1 41 1 52 1 326 1 9 1 354 1 217 1 
70 1 12 1 336 1 
70 3 41 1 52 1 326 3 164 1 226 1 217 1 255 1 350 2 138 1 9 1 354 1 
193 1 70 2 41 1 52 1 326 2 57 1 9 1 354 1 217 1 
70 1 41 1 212 1 52 1 7 1 326 1 289 1 64 1 354 1 226 1 345 1 
70 1 41 1 52 1 326 1 9 1 354 1 226 1 
70 1 41 1 326 1 9 2 354 1 226 1 217 1 
70 2 186 1 41 2 283 1 52 1 326 2 9 1 30 1 354 2 226 1 
70 3 41 1 52 2 326 3 216 1 18 1 226 1 217 1 188 1 7 1 57 2 9 1 354 1 
70 2 41 1 212 1 52 1 326 2 342 1 304 1 226 1 217 1 189 1 57 1 9 1 289 2 64 1 354 1 
193 1 70 4 41 2 52 2 326 4 216 1 135 1 226 1 217 1 7 1 57 2 9 1 354 2 
70 1 41 1 52 1 326 1 9 1 354 1 226 1 217 1 
70 4 60 1 41 1 52 3 326 4 216 1 217 2 255 1 7 1 350 1 57 2 138 1 9 2 354 1 
70 2 41 1 52 1 326 2 226 1 175 1 217 1 57 1 9 1 222 1 354 1 264 1 
70 3 41 1 52 1 326 3 226 1 217 1 255 2 350 2 138 1 9 1 353 1 354 1 
104 1 52 2 10 1 235 2 
70 1 41 1 326 1 232 1 354 1 226 1 
70 2 41 1 52 1 326 2 57 1 9 1 18 1 354 1 226 1 217 1 
258 1 
70 1 41 1 52 1 326 1 9 1 354 1 226 1 217 1 
70 3 41 1 52 1 326 3 18 1 226 1 217 1 57 1 350 1 9 1 354 1 
60 1 52 1 7 1 216 1 
52 1 9 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 288 (21,129,162) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 288 176 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 288 176 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 300 106 25 183 202 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 288 (21,129,162) 295 337 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 288 (21,129,162) 295 337 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 288 (21,129,162) 295 337 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 288 (21,129,162) 295 337 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 288 (21,129,162) 295 337 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 288 (21,129,162) 295 337 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 288 (21,129,162) 295 337 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 288 (21,129,162) 295 337 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 288 (21,129,162) 295 337 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 288 (21,129,162) 295 337 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 288 (21,129,162) 295 337 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 288 (21,129,162) 295 337 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 217 135 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 316 158 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 300 106 25 183 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 288 176 174 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 288 176 174 220 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 184 (82,274) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (82,274) 330 3 (275,315) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 217 135 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | == -> <=
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
182 2 91 2 93 6 94 1 186 2 189 1 347 1 192 4 50 5 348 1 229 1 165 2 193 2 306 1 307 2 166 1 354 3 212 1 234 1 213 1 149 1 105 9 79 1 359 1 200 2 177 1 294 1 246 9 
182 2 91 2 93 6 94 1 186 2 189 1 347 1 192 4 50 5 348 1 229 1 193 2 165 2 306 1 307 2 166 1 354 3 212 1 234 1 213 1 149 1 105 9 79 1 359 1 200 2 177 1 294 1 246 9 
182 2 91 2 93 7 94 1 186 2 189 1 347 1 192 5 50 6 348 1 229 1 193 2 165 2 306 1 307 2 166 1 354 4 212 1 234 1 213 1 149 1 105 10 79 1 359 1 200 2 177 1 294 1 246 10 
182 2 91 2 93 4 94 1 186 2 189 1 347 1 192 3 50 4 348 1 229 1 193 2 165 1 306 1 307 2 166 1 354 2 234 1 213 1 149 1 105 7 79 1 359 1 200 2 177 1 294 1 246 7 
354 1 182 1 212 1 91 1 93 3 149 1 105 4 79 1 347 1 192 2 50 3 193 1 165 2 200 1 307 1 306 1 294 1 246 4 
234 1 91 1 149 1 186 1 105 2 79 1 347 1 50 1 348 1 193 1 200 1 352 1 307 1 232 1 73 1 246 2 
354 1 91 2 93 1 149 1 94 1 186 1 105 3 79 1 347 1 192 1 50 2 200 2 246 3 
182 1 91 2 93 7 94 1 186 1 189 1 347 1 192 4 50 5 165 2 193 1 306 1 307 1 354 3 212 1 149 1 105 9 79 1 358 1 216 1 200 2 177 1 294 1 246 9 
182 1 91 2 93 7 94 1 186 1 189 1 347 1 192 4 50 5 165 2 193 1 306 1 307 1 354 3 212 1 149 1 105 9 79 1 358 1 216 1 200 2 177 1 294 1 246 9 
128 1 254 1 206 1 
278 2 206 1 250 1 
143 2 152 1 113 2 305 2 70 2 52 2 157 2 286 1 
224 1 269 1 133 1 61 2 205 1 113 2 137 1 274 1 138 1 139 1 65 1 280 1 97 1 209 1 305 2 210 1 70 3 52 2 8 1 329 2 353 2 143 2 10 2 145 1 311 1 171 1 355 1 241 1 242 1 56 1 286 1 15 1 151 1 152 1 201 2 18 1 157 3 
143 1 40 1 154 1 113 1 305 1 70 1 52 1 95 1 157 1 286 1 
21 1 288 1 
19 2 143 1 206 1 113 1 162 2 95 1 4 1 191 1 128 1 129 1 305 1 70 1 52 1 194 1 157 1 
19 1 296 1 34 1 219 1 162 1 
19 2 320 1 128 1 296 1 34 1 331 1 206 1 162 2 
19 1 296 1 162 1 
19 1 40 1 143 1 34 1 162 1 113 1 95 1 286 1 154 1 305 1 70 1 52 1 72 1 157 1 
206 1 
19 2 320 1 128 1 296 1 34 1 206 1 162 2 31 1 
39 1 19 5 319 2 320 1 88 1 211 1 168 1 34 2 296 2 89 2 206 1 322 1 162 5 136 1 128 1 301 1 153 1 279 1 68 2 
152 1 254 1 
267 1 143 1 113 1 152 2 350 1 305 1 70 2 52 2 157 2 
49 1 44 1 26 1 
224 1 110 1 145 1 311 1 61 1 355 1 274 1 139 1 56 1 152 1 201 1 97 1 210 1 70 1 157 1 353 1 
143 3 152 1 204 1 113 3 305 1 70 3 52 3 157 3 
143 1 154 1 113 1 70 1 52 1 95 1 157 1 
267 1 143 1 350 1 113 1 305 1 70 1 52 1 95 1 157 1 
19 1 224 1 269 1 321 1 61 1 204 1 205 1 113 3 162 1 274 1 138 1 139 1 95 1 4 1 65 1 277 1 48 1 191 1 350 1 280 1 97 1 209 1 305 2 210 1 70 4 52 3 194 1 8 1 329 2 353 1 143 3 10 1 145 1 311 1 355 1 242 1 56 1 286 1 15 1 151 1 152 1 129 1 201 1 157 4 
143 1 204 1 288 1 176 1 113 1 70 1 52 1 157 1 
19 1 143 3 204 2 206 1 162 1 113 3 4 1 95 1 277 1 48 1 191 1 129 1 350 1 264 1 305 1 70 3 52 3 194 1 157 3 
143 2 204 1 113 2 44 1 49 1 350 1 305 1 70 2 52 2 157 2 
145 1 224 1 311 1 61 1 355 1 274 1 139 1 56 1 152 1 201 1 97 1 210 1 70 1 157 1 353 1 
145 1 224 1 311 1 61 1 355 1 56 1 28 1 152 1 201 1 97 1 210 1 70 1 157 1 353 1 179 1 
269 1 248 1 205 2 185 1 44 2 138 1 26 2 65 1 326 1 49 2 300 1 280 1 303 1 209 1 231 1 329 2 10 4 121 1 241 2 242 1 287 1 78 1 317 1 339 1 
143 1 191 1 113 1 70 1 52 1 251 1 95 1 157 1 
143 1 224 1 145 1 311 1 61 1 204 1 113 1 355 1 274 1 139 1 56 1 277 1 49 1 97 1 201 1 210 1 70 2 52 1 157 2 353 1 
143 4 204 2 113 4 323 1 207 1 277 1 152 1 288 1 350 1 176 1 305 1 70 4 52 4 157 4 
143 2 154 1 113 2 70 2 251 1 52 2 95 1 157 2 
62 1 240 1 
62 1 240 1 
101 1 259 1 
101 1 259 1 
101 1 259 1 
62 1 77 1 240 1 
62 1 77 1 240 1 
62 1 77 1 240 1 
62 1 343 1 240 1 
62 1 187 1 240 1 
62 2 101 1 259 1 325 1 276 1 240 2 
62 1 343 1 240 1 
62 1 343 1 240 1 
19 2 120 2 62 2 206 1 162 2 2 2 325 1 14 1 114 1 240 2 173 1 188 1 5 2 225 1 226 2 156 1 108 1 257 3 338 2 
19 1 341 1 62 1 271 1 42 1 113 2 162 1 187 1 5 1 226 1 70 2 52 2 255 1 257 1 143 2 120 1 240 1 152 1 17 1 290 1 156 1 130 1 157 2 338 1 
182 1 193 1 307 1 
193 1 307 1 352 1 
182 2 349 1 69 1 307 3 352 1 253 1 
182 1 349 1 228 1 69 1 307 2 352 1 
182 1 349 1 69 2 307 2 352 1 
38 1 319 1 19 5 320 1 296 1 247 2 89 1 42 1 248 1 271 1 206 2 250 1 322 1 162 5 278 3 164 2 300 1 327 1 68 1 279 3 168 2 34 4 78 1 57 1 128 1 17 1 106 1 83 2 84 1 59 1 109 1 339 1 
19 9 319 2 320 1 296 6 247 6 89 2 248 3 271 4 206 5 250 3 162 9 322 1 278 9 164 6 300 3 301 1 68 2 279 8 140 1 167 1 119 1 313 1 168 6 34 7 170 1 78 3 57 1 128 1 106 3 219 5 86 5 59 2 109 2 339 3 203 1 
319 1 19 3 89 1 247 2 248 1 271 1 206 3 250 2 162 3 278 4 300 1 164 2 327 1 301 1 68 1 279 3 34 2 168 2 78 1 128 1 83 1 106 1 84 1 59 1 109 1 339 1 
319 1 19 4 247 4 89 1 248 2 271 2 206 4 250 3 162 4 278 7 164 4 300 2 327 1 301 1 68 1 279 5 140 1 167 1 313 1 34 3 168 4 78 2 128 1 83 2 106 2 84 1 59 1 109 1 339 2 
224 1 254 1 37 1 
340 1 224 1 
155 1 
224 1 311 1 
224 3 346 1 311 1 37 2 239 1 56 1 
224 1 311 1 56 1 
224 1 80 1 
180 1 10 7 12 1 205 3 125 1 102 1 103 1 76 1 46 1 241 4 298 1 287 3 78 1 316 1 292 2 231 2 339 1 
180 1 10 7 12 1 205 3 125 1 102 1 103 1 76 1 46 1 241 4 298 1 287 3 78 1 316 1 292 2 231 2 339 1 
180 1 10 7 12 1 205 3 125 1 161 1 102 1 103 1 76 1 46 1 241 4 298 1 287 3 78 1 316 1 292 2 231 2 339 1 
10 11 310 1 312 2 100 1 248 1 205 4 183 1 25 1 76 1 46 2 241 7 287 2 298 1 78 2 300 2 106 2 98 2 292 1 202 1 231 1 339 1 
180 1 269 2 205 4 46 1 65 2 298 1 209 2 231 3 118 1 329 4 10 9 147 1 12 1 102 1 148 1 103 1 76 1 242 2 241 5 287 4 78 1 316 1 292 2 339 1 
182 1 61 1 90 1 91 1 160 1 112 1 93 1 186 1 253 1 347 1 50 1 116 1 193 1 230 1 97 1 352 1 307 2 353 1 258 1 355 1 149 1 127 1 105 2 79 1 199 1 335 1 201 1 200 1 246 2 266 1 
0 1 182 1 61 1 90 1 91 1 160 1 112 1 93 2 186 1 253 1 115 1 347 1 50 1 116 1 193 1 230 1 97 1 352 1 307 2 353 1 258 1 309 1 355 1 149 1 127 1 105 3 201 1 200 1 246 3 266 1 
0 1 258 1 182 1 61 1 90 1 112 1 93 2 355 1 149 1 186 1 253 1 127 1 115 1 105 2 347 1 50 1 116 1 193 1 230 1 97 1 201 1 307 2 352 1 246 2 353 1 
224 1 61 1 181 1 90 2 91 1 186 2 345 1 116 2 97 1 210 1 353 1 258 2 309 1 146 1 311 1 355 1 105 1 244 1 201 1 200 1 265 1 60 1 246 1 
0 1 182 1 61 1 90 1 91 1 160 1 112 1 186 1 253 1 116 1 193 1 230 1 97 1 352 1 307 2 353 1 258 1 355 1 127 1 105 1 79 1 199 1 201 1 200 1 246 1 266 1 
169 1 
221 1 319 1 19 2 224 1 320 1 21 1 61 2 296 2 181 1 89 1 322 1 162 2 68 1 279 1 97 1 210 2 283 1 353 2 311 1 11 1 168 1 284 1 355 1 215 1 288 1 201 2 337 1 109 1 60 1 295 1 
221 1 19 1 21 1 11 1 288 1 162 1 337 1 295 1 
221 1 19 1 21 1 11 1 288 1 162 1 337 1 295 1 
221 1 19 1 21 1 11 1 288 1 162 1 337 1 295 1 
221 1 19 2 320 1 21 1 11 1 296 1 288 1 162 2 31 1 337 1 295 1 
221 1 319 1 19 1 21 1 11 1 89 1 288 1 68 1 322 1 162 1 337 1 295 1 
221 1 19 1 21 1 11 1 288 1 162 1 337 1 295 1 
221 1 19 1 21 1 11 1 288 1 162 1 337 1 295 1 
221 1 19 1 21 1 11 1 288 1 162 1 337 1 295 1 
221 1 19 1 21 1 11 1 288 1 162 1 337 1 295 1 
221 1 19 1 21 1 11 1 288 1 162 1 337 1 295 1 
221 1 319 1 19 1 21 1 11 1 89 1 288 1 68 1 322 1 162 1 337 1 295 1 
180 1 269 1 205 3 44 1 138 1 26 1 65 1 49 1 254 1 280 1 303 1 209 1 231 2 329 2 10 6 12 1 102 1 103 1 242 1 241 3 287 2 78 1 316 1 152 2 292 1 339 1 
268 1 269 2 134 1 205 6 248 1 272 1 44 4 138 1 26 11 298 1 65 2 49 11 300 2 280 2 98 3 209 2 231 1 8 1 53 1 329 4 310 1 10 14 312 3 100 1 172 1 242 2 241 8 287 2 78 2 152 1 106 2 18 1 339 1 
224 1 110 1 61 1 269 1 297 1 204 1 205 1 113 1 274 1 44 1 138 1 139 1 65 1 277 1 280 1 97 1 51 1 210 1 209 1 70 2 52 1 8 1 53 1 353 1 329 2 143 1 145 1 10 2 311 1 355 1 242 1 241 1 56 1 152 1 107 1 201 1 157 2 18 1 
0 1 180 1 224 2 269 3 273 1 274 2 44 7 138 3 139 2 277 1 49 7 280 3 97 2 231 4 52 1 8 1 53 1 329 6 9 2 143 1 10 20 145 2 12 1 102 1 235 1 103 1 242 3 241 10 56 2 287 8 15 2 152 2 106 2 201 3 292 1 18 1 157 3 339 3 61 3 204 1 205 10 248 2 23 2 113 1 26 7 65 3 298 4 300 2 29 2 210 1 209 3 70 3 353 3 311 2 355 2 78 3 315 2 263 1 316 1 
0 1 224 3 61 8 269 2 181 1 204 1 205 1 92 1 113 1 137 2 45 1 138 2 344 1 65 2 208 1 7 1 280 2 303 1 97 2 210 2 209 2 70 1 52 1 8 1 353 8 329 4 74 1 143 1 10 2 311 2 355 2 242 2 241 1 217 1 335 1 201 7 157 1 18 1 60 1 
20 1 269 1 248 1 205 2 113 1 44 1 138 1 26 1 65 1 49 1 300 1 350 1 280 1 305 1 209 1 70 1 231 1 52 1 53 1 329 2 143 1 10 3 242 1 241 1 287 1 78 1 106 1 157 1 339 1 
10 2 269 1 121 1 44 1 138 1 26 1 242 1 241 2 287 1 298 1 65 1 78 1 49 1 300 1 280 1 303 1 209 1 329 2 
10 2 269 1 248 1 205 2 44 1 138 1 26 1 242 1 287 1 65 1 49 1 317 1 280 1 303 1 209 1 231 1 329 2 339 1 
269 1 248 1 205 2 44 2 138 1 26 2 65 1 298 1 300 1 49 2 280 1 303 1 209 1 231 1 329 2 10 4 241 2 242 1 287 2 78 1 106 1 339 1 
10 2 269 1 121 1 44 1 138 1 26 1 242 1 241 2 287 1 298 1 65 1 78 1 49 1 300 1 280 1 209 1 74 1 329 2 
10 2 269 1 248 1 205 2 44 1 138 1 26 1 242 1 287 1 65 1 49 1 317 1 280 1 209 1 231 1 74 1 329 2 339 1 
269 1 248 1 205 2 44 2 138 1 26 2 65 1 298 1 300 1 49 2 280 1 209 1 231 1 329 2 74 1 10 4 241 2 242 1 287 2 78 1 106 1 339 1 
10 4 269 1 205 2 248 1 44 2 138 1 26 2 242 1 241 2 287 2 298 1 65 1 78 1 49 2 300 1 106 1 280 1 209 1 231 1 339 1 329 2 
224 1 61 1 269 1 205 1 274 1 138 1 139 1 65 1 280 1 97 1 210 1 209 1 70 1 8 1 353 1 329 2 10 2 145 1 311 1 355 1 241 1 242 1 56 1 15 1 152 1 201 1 18 1 157 1 
224 1 61 1 269 1 205 1 138 1 65 1 28 1 280 1 97 1 210 1 209 1 70 1 8 1 353 1 329 2 10 2 145 1 311 1 355 1 333 1 241 1 242 1 56 1 152 1 201 1 18 1 157 1 179 1 
269 1 248 1 205 2 44 2 138 1 26 2 65 1 298 1 300 1 49 2 280 1 209 1 231 1 53 1 329 2 10 4 241 2 242 1 287 2 78 1 106 1 339 1 
224 1 61 1 269 1 205 2 248 1 44 2 274 1 138 1 26 2 139 1 298 1 65 1 49 2 300 1 29 1 280 1 97 1 209 1 70 1 231 1 353 1 329 2 10 4 145 1 311 1 355 1 241 2 242 1 287 2 56 1 78 1 15 1 335 1 106 1 201 1 157 1 339 1 
269 1 205 1 248 1 113 1 44 1 138 1 26 1 298 1 65 1 300 1 49 1 350 1 280 1 305 1 209 1 70 1 52 1 53 1 329 2 143 1 10 3 242 1 241 2 287 1 78 1 58 1 106 1 157 1 339 1 
222 1 223 2 269 2 22 1 205 10 248 3 65 2 298 3 300 3 66 1 282 2 98 2 209 2 231 3 329 4 310 1 10 19 312 1 123 1 147 1 100 1 238 1 242 2 241 9 287 6 78 3 106 3 336 1 87 1 339 3 
222 1 223 1 269 3 111 1 205 12 22 2 248 2 298 2 65 3 47 1 300 3 66 1 281 1 282 4 98 2 209 3 231 2 329 6 55 1 10 26 310 2 312 2 147 1 148 2 150 1 242 3 241 14 287 4 78 3 218 1 106 3 336 2 87 1 339 2 
180 1 222 1 223 1 41 1 269 3 111 1 22 1 205 21 248 4 65 3 298 4 47 1 300 4 66 1 281 1 282 4 98 4 209 3 231 4 329 6 55 1 310 3 10 41 312 3 123 1 12 1 147 1 100 1 102 1 148 1 103 1 150 1 242 3 241 20 287 8 78 5 316 1 218 1 106 4 336 2 292 1 87 1 339 5 
180 1 222 1 223 1 41 1 269 4 111 1 22 1 205 18 248 3 65 4 298 3 47 1 300 4 66 1 281 1 282 4 98 4 209 4 231 4 329 8 55 1 310 3 10 38 312 3 123 1 12 1 147 1 100 1 102 1 148 2 103 1 150 1 242 4 241 20 287 7 78 5 316 1 218 1 106 4 336 2 292 1 87 1 339 4 
180 1 222 1 223 1 269 2 111 1 22 1 205 25 248 7 272 2 65 2 298 7 47 1 300 7 66 1 281 1 282 4 98 4 209 2 231 7 329 4 55 1 310 2 10 52 312 4 12 1 147 1 100 2 102 1 148 1 103 1 150 1 242 2 241 27 287 14 78 8 316 1 218 1 106 7 336 1 292 1 87 1 339 8 
5 1 62 1 120 1 226 1 325 1 14 1 108 1 163 1 240 1 338 1 
341 1 187 1 
5 1 122 1 302 1 62 1 120 1 226 1 99 1 240 1 338 1 
19 1 120 1 62 1 206 1 162 1 2 1 325 1 14 1 114 1 240 1 188 1 5 1 225 1 226 1 156 1 108 1 257 2 338 1 
19 1 120 1 62 1 206 1 162 1 2 1 325 1 14 1 114 1 240 1 188 1 5 1 225 1 226 1 156 1 108 1 257 2 338 1 
19 1 120 1 62 1 206 1 162 1 2 1 325 1 14 1 114 1 240 1 188 1 5 1 225 1 226 1 156 1 108 1 257 2 338 1 
36 1 276 1 77 1 
36 1 276 1 77 1 
343 1 291 1 
343 1 291 1 276 1 
290 1 255 1 
19 1 341 1 62 1 271 1 42 1 2 1 162 1 113 2 187 1 225 1 5 1 226 1 304 1 70 2 255 1 52 2 257 1 143 2 34 1 120 1 240 1 152 1 17 1 290 1 130 1 157 2 338 1 
36 1 77 1 
343 1 291 1 276 1 
61 2 269 1 205 1 135 1 137 2 138 1 344 1 65 1 280 1 209 1 70 2 52 2 256 1 8 1 53 1 328 1 353 2 329 2 10 2 242 1 241 1 104 1 217 1 201 2 318 1 157 2 18 1 
0 1 182 1 61 2 160 1 112 1 355 1 252 1 253 1 299 1 335 1 116 1 30 1 193 1 230 1 97 1 201 2 307 2 352 1 353 2 
0 1 182 1 61 1 160 1 112 1 355 1 252 1 253 1 116 1 193 1 230 1 201 1 141 1 97 1 307 2 352 1 353 1 
224 1 311 1 61 1 181 1 355 1 299 1 116 1 227 1 97 1 201 1 210 1 265 1 60 1 353 1 
0 1 182 1 61 1 160 1 112 1 355 1 252 1 253 1 299 1 116 1 30 1 193 1 230 1 97 1 201 1 307 2 352 1 353 1 
334 1 
39 1 128 1 168 1 153 1 279 1 254 1 206 1 
319 1 19 1 320 1 296 1 89 1 206 2 250 1 322 1 162 1 278 1 279 1 68 1 233 1 168 1 124 1 16 1 128 1 
340 1 319 1 224 2 311 1 61 1 89 1 322 1 355 1 56 1 346 1 6 1 68 1 97 2 201 1 351 1 210 1 353 1 
19 1 319 2 320 1 296 1 111 1 247 5 89 2 63 1 248 2 206 5 162 1 322 2 250 3 47 1 278 6 164 5 300 2 279 8 68 2 281 1 98 1 54 1 310 1 312 1 168 5 284 1 236 1 150 1 214 2 78 2 128 2 218 1 106 2 109 1 339 2 
19 1 319 1 180 1 168 2 89 1 162 1 322 1 103 1 314 1 78 1 214 1 316 1 279 2 68 1 158 1 339 1 
319 1 39 1 168 1 89 1 206 1 322 1 128 1 153 1 68 1 279 1 
168 5 247 5 63 1 248 2 23 1 206 5 250 5 214 2 78 2 278 10 300 2 164 5 106 2 279 5 339 2 
19 1 320 1 128 1 296 1 206 1 162 1 
319 2 19 3 224 1 320 2 61 4 296 4 181 1 89 2 322 1 162 3 301 1 68 2 279 2 97 1 210 2 283 1 195 2 353 4 311 1 168 2 284 2 355 1 237 1 260 1 35 1 215 1 201 4 109 2 60 1 
224 1 269 1 61 1 205 1 113 2 274 1 138 1 139 1 65 1 280 1 97 1 210 1 305 2 209 1 70 3 52 2 8 1 329 2 353 1 143 2 10 1 145 1 311 1 355 1 242 1 286 1 56 1 15 1 151 1 152 1 201 1 157 3 
319 1 168 2 247 2 89 1 284 1 206 4 250 2 322 1 278 4 164 2 128 2 68 1 279 1 292 1 109 1 
81 1 226 1 338 1 
81 1 226 1 338 1 
81 1 226 1 338 1 
226 1 64 1 338 1 
226 1 175 1 290 1 14 1 338 1 
226 1 64 1 338 1 
226 1 64 1 338 1 
226 1 338 1 
62 1 240 1 
180 1 10 8 269 2 12 1 205 4 102 1 148 1 103 1 241 4 242 2 298 1 287 3 65 2 78 1 316 1 209 2 292 1 231 2 339 1 329 4 
180 1 10 6 12 1 205 3 102 1 103 1 241 3 287 2 78 1 316 1 254 1 292 1 231 2 339 1 
10 4 269 1 205 2 248 1 332 1 242 1 241 2 287 2 65 1 298 1 78 1 300 1 106 1 209 1 231 1 339 1 329 2 
310 1 10 7 312 1 100 1 248 1 205 4 241 3 298 1 287 2 78 1 300 1 106 1 98 2 231 1 339 1 
180 2 268 1 269 2 205 12 248 2 272 1 298 4 65 2 300 2 98 2 209 2 231 5 329 4 10 23 312 2 12 1 100 1 102 1 148 2 103 2 241 11 242 2 287 9 78 3 316 1 106 2 292 1 339 3 245 1 
10 1 205 1 98 1 
10 1 312 1 241 1 
10 6 269 1 205 3 248 1 23 1 332 1 242 1 241 3 65 1 298 1 287 3 78 1 300 1 106 1 209 1 231 2 329 2 339 1 
269 1 111 1 205 6 248 2 298 1 65 1 47 1 300 2 281 1 98 1 209 1 231 1 329 2 10 12 310 1 312 1 147 1 150 1 242 1 241 6 287 2 78 2 218 1 106 2 339 2 
180 1 10 6 205 3 103 1 241 3 287 2 298 1 78 1 316 1 231 1 339 1 
180 1 10 3 269 1 12 1 205 2 102 1 148 1 103 1 241 1 242 1 298 1 287 2 65 1 209 1 231 1 245 1 329 2 
180 2 10 10 269 1 147 1 205 5 103 2 242 1 241 5 65 1 287 5 298 2 78 2 316 1 209 1 231 3 158 1 329 2 339 2 
10 2 269 1 147 1 242 1 241 2 65 1 298 1 287 1 78 1 300 1 209 1 329 2 
10 4 269 1 147 1 205 2 248 1 242 1 241 2 287 2 65 1 298 1 78 1 300 1 106 1 209 1 231 1 339 1 329 2 
180 1 10 3 269 3 123 1 147 1 205 2 148 1 103 1 242 3 241 1 65 3 287 2 298 1 209 3 231 1 245 1 329 6 
10 5 310 1 312 2 269 3 147 1 123 1 205 1 183 1 25 1 332 1 241 4 242 3 65 3 78 1 300 1 106 1 98 1 209 3 329 6 
180 1 269 1 205 4 65 1 47 1 98 1 209 1 231 2 329 2 10 8 310 1 312 1 147 1 12 1 102 1 103 1 242 1 241 4 287 2 78 1 316 1 292 1 339 1 
180 1 269 2 205 5 65 2 298 1 47 1 300 1 98 2 209 2 231 2 329 4 10 11 310 1 312 1 12 1 147 1 100 1 102 1 103 1 332 1 242 2 241 6 287 3 78 2 316 1 106 1 292 1 339 1 
180 1 269 3 111 1 205 10 248 2 298 1 65 3 47 1 300 2 281 1 98 1 209 3 231 3 329 6 10 19 310 1 312 1 12 1 147 1 102 1 148 1 103 1 332 1 150 1 242 3 241 9 287 4 78 3 316 1 218 1 106 2 292 1 339 3 
180 1 269 3 111 1 205 7 248 1 298 2 65 3 47 1 300 2 281 1 98 1 209 3 231 3 329 6 10 17 310 1 312 1 12 1 147 1 102 1 148 1 103 1 332 1 150 1 242 3 241 10 287 5 78 3 316 1 218 1 106 2 292 1 339 2 
180 1 269 1 205 4 65 1 47 1 98 1 209 1 231 2 329 2 10 8 310 1 312 1 147 1 12 1 102 1 103 1 242 1 241 4 287 2 78 1 316 1 292 1 339 1 
269 1 111 1 205 6 248 2 298 1 65 1 47 1 300 2 281 1 98 1 209 1 231 1 329 2 10 12 310 1 312 1 147 1 150 1 242 1 241 6 287 2 78 2 218 1 106 2 339 2 
180 1 269 4 111 1 205 8 248 1 298 2 65 4 47 1 300 2 281 1 98 1 209 4 231 3 329 8 10 18 310 1 312 1 12 1 147 1 102 1 148 2 103 1 150 1 332 1 242 4 241 10 287 5 78 3 316 1 218 1 106 2 292 1 339 2 
269 4 111 1 205 7 248 2 298 3 65 4 47 1 300 3 281 1 98 1 209 4 231 3 329 8 10 16 310 1 312 1 147 1 123 1 148 2 150 1 242 4 241 9 287 6 78 3 218 1 106 3 339 2 
180 3 10 7 12 1 205 4 102 2 103 3 241 3 287 6 298 3 78 1 316 1 231 3 339 1 
180 1 269 4 111 1 205 8 248 1 298 1 65 4 47 1 300 2 281 1 98 1 209 4 231 3 329 8 10 18 310 1 312 1 12 1 147 1 123 1 102 1 148 2 103 1 150 1 242 4 241 10 287 4 78 3 316 1 218 1 106 2 292 1 339 2 
174 1 288 1 176 1 
174 1 288 1 176 1 126 1 24 1 220 1 308 1 27 1 
224 1 311 1 181 1 61 1 254 1 97 1 201 1 355 1 210 1 60 1 353 1 
143 1 224 1 145 1 311 1 61 1 204 1 113 1 355 1 274 1 56 1 152 1 97 1 201 1 210 1 70 2 52 1 157 2 353 1 
143 1 224 3 145 1 311 2 61 1 204 1 113 2 355 1 184 1 274 1 95 1 56 2 191 1 80 1 152 1 97 1 201 1 70 2 194 1 52 2 157 2 195 1 353 1 
143 1 224 3 145 1 311 2 61 2 204 1 113 2 355 1 184 1 95 1 56 2 96 1 191 1 80 1 152 1 97 1 201 2 70 2 194 1 52 2 157 2 195 1 353 2 179 1 
19 2 340 1 224 4 311 1 61 3 296 1 43 1 206 1 162 2 355 1 184 1 4 1 56 1 96 1 128 1 80 1 97 1 201 3 210 1 37 1 195 1 196 1 353 3 
19 1 340 1 224 4 311 1 61 1 162 1 355 1 184 1 56 1 80 1 82 1 201 1 97 1 37 1 195 1 353 1 
61 1 92 1 97 1 201 1 355 1 353 1 
0 1 224 3 311 2 61 7 270 1 92 1 137 1 324 1 355 2 45 1 56 1 261 1 346 1 217 1 335 1 208 1 7 1 201 6 97 3 210 2 353 7 
180 1 224 1 269 2 44 1 274 1 138 2 139 1 49 1 280 2 97 1 52 1 231 2 53 1 329 4 143 1 145 1 10 6 12 1 102 1 103 1 242 2 241 3 56 1 287 2 15 1 335 1 152 2 201 1 292 1 157 2 339 1 61 1 204 1 205 3 113 1 26 1 65 2 29 1 209 2 70 2 353 1 311 1 355 1 78 1 315 1 316 1 318 1 
340 1 19 1 319 1 224 2 330 1 34 1 61 1 89 1 162 1 322 1 275 1 237 1 3 1 82 1 68 1 201 1 210 1 37 1 353 1 
224 2 311 1 61 2 92 1 355 1 56 1 346 1 335 1 6 1 201 2 97 2 37 1 353 2 
224 1 311 1 61 4 181 1 355 1 96 1 335 1 97 1 201 4 210 1 32 1 60 1 353 4 
224 1 311 1 61 2 270 1 159 1 355 1 56 1 261 1 263 1 201 2 97 2 71 1 195 1 353 2 
61 1 193 1 230 1 97 1 201 1 355 1 210 1 307 1 352 1 353 1 
0 1 61 2 217 1 335 1 135 1 201 2 353 2 
224 3 311 2 181 1 61 5 355 2 45 1 335 1 217 1 7 1 201 4 97 2 210 1 32 1 195 1 60 1 353 5 
224 3 311 2 181 1 61 5 355 2 45 1 335 1 217 1 201 4 85 1 97 2 210 1 32 1 195 1 60 1 353 5 
143 1 224 1 145 1 311 1 61 1 204 1 113 1 355 1 56 1 152 1 97 1 201 1 210 1 70 2 52 1 157 2 353 1 179 1 
224 1 311 1 61 1 270 1 324 1 355 1 56 1 261 1 346 1 201 1 97 2 195 1 353 1 
104 1 262 1 142 1 70 1 256 1 52 1 328 1 157 1 132 1 
262 1 342 1 249 1 
262 1 152 1 142 1 356 1 132 1 
19 2 34 1 342 1 206 1 162 2 249 1 4 1 95 1 356 2 48 1 191 1 128 1 262 1 152 1 129 1 142 2 194 1 33 1 132 2 
347 1 50 1 254 1 149 1 
347 1 50 1 91 1 200 1 149 1 246 1 105 1 
90 1 186 1 246 1 
79 1 347 1 50 1 75 1 348 2 91 1 13 1 200 1 149 1 131 1 246 3 105 3 
347 1 50 1 91 1 165 1 93 1 200 1 149 1 246 2 105 2 
182 1 91 1 105 1 79 1 192 1 50 1 193 1 200 1 306 1 307 1 246 1 
79 1 50 1 91 1 200 1 149 1 246 1 105 1 
79 1 347 1 91 1 200 1 149 2 246 1 105 1 
197 1 91 2 149 1 105 2 79 1 357 1 50 1 200 2 117 1 246 2 
354 1 91 1 93 2 149 1 105 3 189 1 79 1 347 1 192 1 50 2 200 1 177 1 246 3 
182 1 91 1 93 1 149 1 253 1 105 2 190 1 79 1 347 1 50 1 193 1 200 1 352 1 307 2 246 2 
354 1 212 1 91 2 93 2 149 1 105 4 79 1 347 1 192 1 50 2 165 1 200 2 246 4 
79 1 347 1 50 1 91 1 200 1 149 1 246 1 105 1 
354 1 75 1 91 1 13 1 285 1 93 2 149 2 105 4 347 2 192 1 50 3 348 1 200 1 246 4 
79 1 347 1 358 1 50 1 67 1 91 1 93 1 200 1 149 1 178 1 246 2 105 2 
75 2 91 1 13 1 149 1 198 1 105 3 79 1 347 1 50 1 348 2 200 1 246 3 
144 2 50 2 289 1 293 1 
79 1 91 1 1 1 200 1 246 1 105 1 
79 1 347 1 50 1 91 1 93 1 200 1 149 1 189 1 246 2 105 2 
243 1 
79 1 347 1 50 1 91 1 200 1 149 1 246 1 105 1 
91 1 93 1 149 1 105 3 189 1 79 1 347 1 50 1 348 1 200 1 246 3 
192 1 354 1 50 1 285 1 
50 1 149 1 

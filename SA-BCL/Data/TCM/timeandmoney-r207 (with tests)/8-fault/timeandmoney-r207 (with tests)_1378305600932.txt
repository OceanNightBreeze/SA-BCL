#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 30 (243,330) (243,330) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 30 (243,330) (243,330) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 30 (243,330) (243,330) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 30 (243,330) (243,330) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 68 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 68 339 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | STATEMENT | 698 | stmt -> ;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
32 1 54 1 74 1 85 1 61 1 150 1 275 1 376 1 243 1 30 1 330 1 
32 1 54 1 74 1 85 1 61 1 150 1 275 1 376 1 243 1 30 1 330 1 
32 1 54 1 74 1 85 1 61 1 150 1 275 1 376 1 243 1 30 1 330 1 
32 1 54 1 74 1 85 1 61 1 150 1 275 1 376 1 243 1 30 1 330 1 
54 1 150 4 343 1 77 1 298 1 272 2 264 1 82 1 234 1 85 4 275 1 374 1 376 1 62 2 287 3 26 2 
54 1 74 1 1 1 357 1 150 2 77 1 122 1 272 1 32 1 362 1 180 1 234 1 85 2 275 1 200 1 376 1 
54 2 74 1 357 1 150 3 298 1 272 2 372 1 180 1 85 3 275 2 376 1 26 1 287 1 
54 2 74 1 76 1 343 1 150 9 77 1 298 3 272 4 264 1 82 1 372 1 334 1 234 1 71 1 85 9 374 1 275 2 376 1 62 2 257 1 287 7 26 4 
54 2 74 1 76 1 343 1 150 9 77 1 298 3 272 4 264 1 82 1 372 1 334 1 234 1 71 1 85 9 374 1 275 2 376 1 62 2 257 1 287 7 26 4 
101 1 70 1 320 1 
302 1 
212 2 22 2 315 1 98 2 121 2 369 2 25 2 156 1 
108 1 312 1 247 2 3 1 315 1 29 1 291 1 360 1 59 2 60 1 113 1 254 1 142 1 34 2 165 1 143 1 209 1 145 1 256 1 183 2 295 1 212 2 96 1 215 1 98 2 121 2 369 3 346 1 219 1 172 1 22 3 105 1 174 2 25 2 156 1 157 1 49 1 
212 1 22 1 375 1 202 1 315 1 98 1 121 1 369 1 25 1 273 1 
27 1 331 1 358 1 98 1 369 1 163 1 273 1 70 1 320 1 22 1 363 1 350 1 204 1 90 1 
212 1 358 2 98 1 121 1 369 1 163 1 273 1 70 1 320 1 22 1 363 1 350 1 25 1 204 2 90 1 
280 1 7 1 95 1 358 1 204 1 
280 1 70 1 320 1 95 1 36 1 358 2 79 1 204 2 
95 1 358 1 204 1 
280 1 212 1 358 1 315 1 98 1 121 1 369 1 273 1 22 1 375 1 202 1 182 1 25 1 204 1 
70 1 
280 1 373 1 70 1 320 1 95 1 358 2 79 1 204 2 
280 2 355 2 95 2 327 1 358 5 79 1 162 2 359 1 5 1 70 1 20 1 252 1 319 2 224 1 320 1 72 1 377 1 204 5 38 1 
101 1 156 1 
184 1 212 1 98 2 121 1 369 2 22 2 86 1 25 1 156 2 
353 1 211 1 261 1 
295 1 108 1 247 1 3 1 369 1 360 1 60 1 113 1 22 1 172 1 165 1 89 1 174 1 156 1 183 1 49 1 
353 1 295 1 108 1 247 1 3 1 98 1 121 1 369 2 371 1 360 1 113 1 60 1 172 1 22 2 165 1 174 1 25 1 183 1 91 1 49 1 
212 1 331 1 98 5 121 4 369 5 371 1 112 1 22 5 86 1 129 1 271 1 25 4 156 1 91 2 
83 1 22 2 375 1 98 2 121 2 369 2 25 2 273 1 
212 1 22 3 98 3 121 3 369 3 25 3 156 1 91 1 
22 1 375 1 98 1 121 1 369 1 25 1 273 1 
184 1 212 1 22 1 86 1 98 1 121 1 369 1 25 1 273 1 
108 1 312 1 247 1 3 1 358 1 315 1 29 1 291 1 163 1 360 1 273 1 59 1 113 1 60 1 141 1 142 1 363 1 34 2 165 1 86 1 209 1 183 1 90 1 91 1 295 1 212 2 96 1 98 3 121 3 369 4 371 1 346 1 219 1 172 1 22 4 103 1 350 1 105 1 174 1 25 3 156 1 204 1 157 1 49 1 
22 2 331 1 98 2 121 1 369 2 271 1 25 1 156 1 91 1 
212 1 358 1 98 3 121 3 163 1 369 3 371 1 273 1 70 1 22 3 363 1 86 1 103 1 350 1 25 3 11 1 204 1 91 2 90 1 
353 1 211 1 212 1 98 2 121 2 369 2 22 2 86 1 25 2 91 1 
295 1 108 1 247 1 3 1 369 1 360 1 60 1 113 1 22 1 172 1 165 1 174 1 156 1 183 1 49 1 
295 1 108 1 247 1 328 1 369 1 360 1 60 1 113 1 22 1 172 1 165 1 104 1 174 1 156 1 183 1 
353 2 29 1 291 1 59 4 181 1 114 1 142 1 34 2 145 2 211 2 166 1 93 1 240 1 261 2 281 1 67 1 346 2 219 1 102 1 304 1 105 1 228 1 244 1 157 1 
83 1 363 1 22 1 98 1 121 1 369 1 25 1 273 1 
266 1 161 1 
266 1 161 1 
21 1 97 1 
21 1 97 1 
21 1 97 1 
266 1 161 1 324 1 
266 1 161 1 324 1 
266 1 161 1 333 1 
21 1 136 1 266 2 116 1 161 2 97 1 
266 1 161 1 324 1 
69 1 266 1 161 1 
69 1 266 1 161 1 
69 1 266 1 161 1 
358 1 161 1 164 1 333 1 207 1 322 1 37 1 296 1 366 1 120 1 98 2 121 2 369 2 265 1 284 1 22 2 266 1 269 1 24 1 25 2 156 1 378 1 204 1 230 1 
258 1 259 1 311 1 296 2 149 1 2 1 136 1 358 2 161 2 70 1 265 1 198 2 266 2 269 2 37 2 48 1 378 2 204 2 230 3 
234 1 343 1 77 1 
234 1 77 1 122 1 
92 1 214 1 234 3 343 2 152 1 122 1 
92 1 214 1 13 1 234 2 343 1 122 1 
92 2 214 1 234 2 343 1 122 1 
135 2 355 1 0 1 358 5 79 1 162 1 164 1 5 1 361 1 319 1 320 1 181 1 207 1 278 1 322 1 280 4 65 1 40 1 240 1 95 1 263 1 218 1 67 1 302 3 20 2 70 2 225 2 128 2 244 1 47 1 377 3 204 5 
280 1 151 1 358 1 204 1 
135 2 355 1 0 1 358 3 162 1 361 2 319 1 252 1 320 1 181 1 207 1 280 2 40 1 240 1 263 1 218 1 67 1 302 4 70 3 20 2 225 1 128 2 47 1 377 3 244 1 204 3 
288 1 135 4 355 1 0 1 358 4 162 1 317 1 361 3 319 1 252 1 320 1 181 2 207 2 280 3 40 1 240 2 344 1 263 1 218 2 67 2 302 7 70 4 20 4 225 2 128 4 47 1 377 5 244 2 204 4 
251 1 101 1 360 1 
335 1 360 1 
124 1 
295 1 172 1 360 1 
332 1 360 1 
295 1 360 1 
251 2 295 1 172 1 137 1 292 1 360 3 
166 3 188 1 75 2 240 1 15 1 177 1 178 1 346 3 67 1 59 7 233 1 253 1 282 1 304 2 199 1 145 4 279 1 
166 3 188 1 75 2 240 1 15 1 177 1 178 1 346 3 67 1 59 7 233 1 253 1 282 1 304 2 199 1 145 4 279 1 
166 3 188 1 75 2 240 1 15 1 177 1 178 1 346 3 67 1 233 1 59 7 253 1 282 1 304 2 199 1 145 4 309 1 279 1 
75 3 28 1 177 2 291 1 178 2 80 1 233 1 59 31 253 1 142 1 181 3 34 2 145 16 279 2 294 4 341 1 166 10 188 5 94 3 240 4 15 2 217 1 218 3 346 15 67 4 220 1 348 1 282 1 304 5 199 1 131 1 105 1 244 3 157 1 
75 2 291 2 177 1 178 1 6 1 59 9 233 1 253 1 142 2 34 4 145 5 279 1 237 1 166 4 188 1 240 1 15 1 67 1 346 4 348 1 304 3 199 1 105 2 157 2 
107 1 54 1 108 1 74 1 247 1 357 1 109 1 313 1 77 1 31 1 272 1 81 1 180 1 234 2 85 2 275 1 165 1 277 1 183 1 167 1 343 1 150 2 152 1 153 1 122 1 349 1 376 1 174 1 132 1 287 1 
107 1 54 1 108 1 74 1 247 1 357 1 313 1 77 1 176 1 31 1 272 1 81 1 180 1 234 2 85 3 275 1 165 1 277 1 10 1 183 1 167 1 343 1 150 3 152 1 153 1 122 1 174 1 132 1 50 1 287 2 
108 1 74 1 247 1 357 1 313 1 77 1 176 1 31 1 272 1 81 1 180 1 234 2 85 2 165 1 277 1 183 1 167 1 150 2 343 1 152 1 153 1 122 1 174 1 287 2 50 1 
108 1 54 1 74 2 247 1 360 1 81 2 274 1 60 1 85 1 275 1 165 1 10 1 183 1 295 1 167 2 150 1 241 1 190 1 153 2 329 1 174 1 286 1 133 1 
107 1 54 1 108 1 74 1 247 1 109 1 313 1 77 1 176 1 31 1 81 1 234 2 85 1 275 1 165 1 277 1 183 1 167 1 343 1 150 1 152 1 153 1 122 1 376 1 174 1 132 1 
44 1 
52 1 108 1 247 2 4 2 331 1 162 1 290 1 163 1 5 1 58 2 60 2 165 1 8 2 9 1 12 2 295 1 300 2 263 1 171 4 302 2 18 1 70 2 19 2 20 2 22 1 173 1 267 1 350 1 307 1 174 2 352 2 27 1 310 1 355 1 358 5 79 3 316 1 360 1 273 1 361 2 319 1 320 1 363 1 321 1 183 2 90 1 364 1 239 1 95 6 98 1 329 1 369 1 286 1 377 2 204 5 
27 1 52 1 95 2 358 3 331 1 79 1 98 1 163 1 369 1 171 2 273 1 373 1 18 1 19 1 321 1 363 1 22 1 350 1 307 1 9 1 204 3 90 1 
27 1 52 1 95 1 358 3 331 1 79 1 98 1 163 1 369 1 171 3 273 1 373 1 18 1 70 1 320 1 321 1 363 1 22 1 350 1 307 1 8 1 9 1 204 3 90 1 
27 1 52 1 4 1 331 1 358 3 79 1 163 1 273 1 320 1 363 1 321 1 9 1 8 1 90 1 95 2 98 1 369 1 171 3 373 1 18 1 19 1 70 1 22 1 350 1 307 1 204 3 
52 1 4 4 331 1 162 1 163 1 5 1 111 1 58 2 9 1 8 4 12 2 210 1 300 2 171 6 17 1 18 1 222 1 19 4 70 5 20 1 22 1 350 1 307 1 352 2 27 1 310 1 355 1 358 5 79 3 273 1 361 2 319 1 320 5 321 1 363 1 90 1 364 1 95 7 98 1 369 1 192 1 373 1 377 1 204 5 
27 1 52 1 310 1 355 1 4 2 358 4 331 1 79 2 162 1 163 1 316 1 5 1 273 1 58 2 361 2 319 1 320 1 363 1 321 1 8 2 9 1 12 2 90 1 364 1 95 4 98 1 300 2 369 1 171 4 302 2 18 1 70 2 19 2 20 1 22 1 350 1 307 1 352 2 377 1 204 4 
27 1 310 1 52 1 355 1 4 2 331 1 358 4 79 2 162 1 163 1 5 1 273 1 58 2 361 2 319 1 320 1 363 1 321 1 8 2 9 1 12 2 90 1 364 1 95 4 98 1 300 2 369 1 192 1 171 4 17 1 222 1 18 1 70 1 19 2 20 1 22 1 350 1 307 1 352 2 377 1 204 4 
27 1 310 1 52 1 355 1 4 2 331 1 358 4 79 2 162 1 163 1 5 1 273 1 58 2 361 2 319 1 320 1 363 1 321 1 8 2 9 1 12 2 90 1 364 1 95 4 98 1 300 2 369 1 192 1 171 4 17 1 222 1 18 1 70 1 19 2 20 1 22 1 350 1 307 1 352 2 377 1 204 4 
27 1 52 1 53 1 355 1 4 2 331 1 358 4 79 2 249 2 162 1 163 1 5 1 273 1 58 2 318 1 319 1 320 1 363 1 321 1 8 2 9 1 12 2 90 1 364 1 95 4 342 1 119 2 98 1 369 1 171 4 302 2 222 1 18 1 70 1 19 2 20 1 22 1 350 1 307 1 204 4 
27 1 310 1 52 1 355 1 4 3 331 1 358 4 79 2 162 1 163 1 5 1 273 1 58 2 361 2 319 1 320 1 363 1 321 1 9 1 8 3 12 2 90 1 210 1 364 1 95 5 98 1 300 2 369 1 192 1 17 1 171 5 222 1 18 1 70 1 20 1 19 3 22 1 350 1 307 1 352 2 377 1 204 4 
27 1 310 1 52 1 355 1 4 3 331 1 358 4 79 2 162 1 163 1 5 1 273 1 58 2 361 2 319 1 320 1 363 1 321 1 9 1 8 3 12 2 90 1 210 1 364 1 95 5 98 1 300 2 369 1 192 1 17 1 171 5 222 1 18 1 70 1 20 1 19 3 22 1 350 1 307 1 352 2 377 1 204 4 
27 1 52 1 355 1 4 2 358 4 331 1 79 2 249 2 162 1 163 1 316 1 5 1 273 1 58 2 318 1 319 1 320 1 363 1 321 1 8 2 9 1 12 2 90 1 364 1 95 4 119 2 98 1 369 1 171 4 302 2 18 1 70 1 19 2 20 1 22 1 350 1 307 1 204 4 
353 1 75 1 29 1 291 1 177 1 233 1 59 6 253 1 142 1 34 2 145 3 211 1 166 2 93 1 240 1 261 1 15 1 67 1 346 3 101 1 219 1 304 2 199 1 105 1 156 2 157 1 
353 11 28 1 29 1 139 1 291 2 59 14 254 1 142 2 181 1 336 1 34 4 337 1 145 8 294 3 166 2 211 4 188 1 94 3 261 11 240 2 96 1 66 1 218 2 346 6 67 1 219 2 304 1 131 1 105 2 245 1 244 2 156 1 157 2 
108 1 247 1 3 1 29 1 291 1 360 1 113 1 60 1 59 2 142 1 254 1 165 1 34 2 89 1 145 1 183 1 91 1 295 1 211 1 96 1 98 1 121 1 369 2 371 1 346 1 219 1 172 1 22 2 306 1 46 1 45 1 105 1 174 1 245 1 25 1 156 1 49 1 157 1 
108 2 247 3 3 2 291 3 60 1 59 20 113 2 253 1 254 1 165 2 209 2 295 2 211 7 166 8 261 7 15 1 262 1 121 1 218 2 67 3 346 10 219 3 126 2 303 1 304 4 22 3 172 2 174 3 25 1 353 7 75 1 78 2 29 3 176 1 177 1 360 2 233 1 142 3 181 2 34 6 144 2 145 10 183 3 146 2 91 1 188 4 240 3 96 1 98 1 369 3 371 1 199 1 105 3 245 1 244 2 246 1 156 2 157 3 49 2 
158 1 108 2 247 8 29 2 176 1 291 2 360 3 232 1 60 2 59 2 142 2 254 1 165 2 34 4 87 1 145 1 183 7 91 1 295 2 93 1 96 1 98 1 215 2 121 1 369 1 329 1 42 1 346 1 349 1 223 1 219 2 22 1 105 2 227 1 174 8 23 1 286 1 25 1 157 2 
353 1 29 1 291 1 59 3 142 1 181 1 86 1 34 2 145 1 166 1 211 1 212 1 261 1 240 1 98 1 121 1 369 1 218 1 67 1 346 2 43 1 219 1 304 1 22 1 105 1 245 1 244 1 25 1 157 1 
353 1 166 1 211 1 93 1 188 1 261 1 240 1 281 1 29 1 291 1 59 2 219 1 142 1 34 2 105 1 145 2 244 1 157 1 
353 1 166 1 211 1 93 1 261 1 29 1 291 1 67 1 346 2 59 2 219 1 304 1 142 1 181 1 34 2 105 1 228 1 157 1 
353 2 166 2 211 2 93 1 188 1 261 2 240 1 29 1 291 1 218 1 346 2 67 1 59 4 219 1 304 1 181 1 142 1 34 2 105 1 145 2 244 1 157 1 
353 1 166 1 211 1 188 1 261 1 240 1 281 1 29 1 291 1 59 2 219 1 142 1 87 1 34 2 105 1 145 2 244 1 157 1 
353 1 166 1 211 1 261 1 29 1 291 1 67 1 346 2 59 2 219 1 304 1 142 1 181 1 87 1 34 2 105 1 228 1 157 1 
353 2 166 2 211 2 188 1 261 2 240 1 29 1 291 1 218 1 346 2 67 1 59 4 219 1 304 1 181 1 142 1 87 1 34 2 105 1 145 2 244 1 157 1 
353 2 166 2 211 2 188 1 261 2 240 1 29 1 291 1 218 1 346 2 67 1 219 1 59 4 304 1 181 1 142 1 34 2 105 1 145 2 244 1 157 1 
108 1 247 1 3 1 29 1 291 1 360 1 59 2 113 1 60 1 254 1 142 1 165 1 34 2 209 1 145 1 183 1 295 1 96 1 369 1 346 1 219 1 172 1 22 1 105 1 174 1 156 1 49 1 157 1 
108 1 247 1 29 1 291 1 360 1 59 2 113 1 60 1 254 1 142 1 165 1 34 2 145 1 183 1 295 1 39 1 96 1 328 1 369 1 346 1 219 1 172 1 22 1 104 1 105 1 174 1 156 1 157 1 
353 2 166 2 211 2 188 1 261 2 240 1 29 1 291 1 218 1 346 2 67 1 59 4 219 1 304 1 181 1 142 1 34 2 105 1 145 2 245 1 244 1 157 1 
353 2 108 1 247 1 3 1 29 1 291 1 360 1 59 4 113 1 181 1 142 1 165 1 34 2 209 1 145 2 183 1 295 1 166 2 211 2 188 1 261 2 240 1 369 1 218 1 346 2 67 1 126 1 349 1 219 1 304 1 172 1 22 1 105 1 174 1 244 1 49 1 157 1 
353 1 314 1 29 1 291 1 59 3 181 1 142 1 86 1 34 2 145 2 166 1 212 1 211 1 188 1 240 1 261 1 98 1 121 1 369 1 218 1 346 1 67 1 219 1 22 1 105 1 245 1 244 1 25 1 157 1 
73 1 356 1 160 1 28 1 291 2 6 1 59 19 84 1 142 2 181 3 34 4 145 9 147 2 294 2 166 6 188 3 94 1 240 3 189 1 123 1 218 3 346 10 67 3 125 1 304 3 131 1 105 2 244 3 229 2 157 2 
73 1 160 2 291 3 6 1 33 1 59 26 84 2 142 3 181 2 34 6 145 14 63 1 147 1 294 2 293 1 166 4 188 2 94 2 240 3 168 1 368 1 193 1 123 1 218 3 67 2 346 12 348 2 125 1 304 2 131 2 105 3 244 3 229 4 157 3 
160 2 291 3 6 1 59 41 253 1 117 1 63 1 294 4 293 1 166 8 15 1 168 1 123 1 218 4 67 5 346 21 125 1 348 1 304 4 131 3 229 4 73 1 75 1 28 1 177 1 33 1 233 1 84 1 181 4 142 3 34 6 145 20 147 1 188 4 94 3 240 5 189 1 368 1 193 1 199 1 105 3 244 4 157 3 
73 1 75 1 160 2 28 1 177 1 291 4 6 1 233 1 33 1 59 38 253 1 84 1 142 4 181 3 34 8 117 1 145 20 63 1 147 1 293 1 294 4 166 7 188 3 94 3 240 5 189 1 15 1 168 1 368 1 193 1 123 1 218 4 346 18 67 4 348 2 125 1 304 4 199 1 131 3 105 4 244 4 229 4 157 4 
73 1 75 1 160 1 28 2 177 1 139 2 291 2 6 1 233 1 33 1 59 52 253 1 84 1 142 2 181 7 34 4 145 27 63 1 147 1 293 1 294 4 166 14 188 7 94 4 240 8 15 1 168 1 368 1 193 1 123 1 218 7 346 25 67 8 348 1 125 1 304 7 199 1 131 2 105 2 244 7 229 4 157 2 
311 1 296 1 136 1 266 1 161 1 269 1 37 1 48 1 378 1 106 1 
24 1 333 1 
197 1 296 1 56 1 266 1 161 1 269 1 100 1 37 1 378 1 
236 1 324 1 
69 1 116 1 370 1 
258 1 259 1 311 1 296 1 149 1 136 1 358 1 161 1 70 1 265 1 198 1 266 1 269 1 37 1 48 1 204 1 378 1 230 2 
258 1 259 1 311 1 296 1 149 1 136 1 358 1 161 1 70 1 265 1 198 1 266 1 269 1 37 1 48 1 204 1 378 1 230 2 
258 1 259 1 311 1 296 1 149 1 136 1 358 1 161 1 70 1 265 1 198 1 266 1 269 1 37 1 48 1 204 1 378 1 230 2 
236 1 116 1 324 1 
236 1 116 1 324 1 
69 1 370 1 
69 1 116 1 370 1 
284 1 120 1 
358 1 161 1 164 1 333 1 207 1 340 1 322 1 37 1 259 1 280 1 296 1 366 1 120 1 98 2 121 2 369 2 198 1 284 1 22 2 266 1 269 1 24 1 25 2 156 1 204 1 378 1 230 1 
158 1 289 1 108 1 247 2 29 1 206 1 291 1 360 1 232 1 59 2 142 1 254 1 165 1 35 1 255 1 34 2 145 1 183 2 295 1 96 1 98 2 215 2 369 2 346 1 219 1 22 2 105 1 174 2 245 1 157 1 134 1 
108 1 167 1 247 2 365 1 343 1 313 1 77 1 152 1 122 1 176 1 191 1 349 1 234 2 165 1 277 1 351 1 174 2 183 2 132 1 
108 1 167 1 247 1 365 1 343 1 313 1 77 1 152 1 122 1 176 1 234 2 165 1 277 1 174 1 270 1 183 1 132 1 
295 1 108 1 167 1 247 1 190 1 191 1 329 1 57 1 360 1 60 1 165 1 174 1 286 1 183 1 
108 1 167 1 247 1 365 1 343 1 313 1 77 1 152 1 122 1 176 1 191 1 234 2 165 1 277 1 351 1 174 1 183 1 132 1 
159 1 
101 1 70 1 20 1 320 1 327 1 377 1 38 1 
310 1 355 1 95 1 358 1 79 1 162 1 300 1 5 1 302 1 361 1 70 2 319 1 20 1 320 1 352 1 377 1 204 1 
108 3 247 3 332 1 162 4 163 2 5 4 251 2 60 1 335 3 165 2 115 1 295 2 260 2 213 1 216 1 169 2 263 2 218 2 67 2 349 1 302 12 70 8 20 8 172 2 173 1 128 6 268 1 174 3 226 1 308 2 135 6 355 4 358 5 78 2 79 3 137 1 138 2 140 2 360 8 361 6 319 4 320 2 181 2 183 3 38 1 187 1 238 2 95 5 240 2 327 1 201 2 377 9 244 2 204 5 
354 1 135 5 355 2 358 1 79 1 162 2 138 1 5 2 33 1 361 3 319 2 320 2 181 2 63 1 294 1 293 1 94 1 95 1 240 2 168 1 263 1 368 1 218 2 67 2 302 6 70 5 20 5 173 1 128 5 131 1 203 1 377 8 244 2 308 2 204 1 
355 1 358 1 315 1 162 1 138 1 177 1 5 1 273 1 319 1 253 1 182 1 212 1 240 2 15 1 98 1 99 1 121 1 369 1 17 1 67 1 20 2 22 1 375 1 202 1 377 2 308 2 25 1 204 1 
70 1 20 1 319 1 320 1 355 1 327 1 162 1 377 1 5 1 38 1 
135 5 240 2 78 1 138 1 218 2 67 2 302 10 361 5 20 5 70 5 181 2 128 5 244 2 377 5 308 2 
70 1 320 1 95 1 358 1 79 1 204 1 
108 1 355 2 247 4 358 3 79 2 162 2 5 1 360 1 60 2 252 1 319 2 165 1 115 2 183 4 295 1 213 1 239 1 95 4 299 1 263 2 329 1 20 2 127 1 173 2 267 1 174 4 377 2 286 1 204 3 
108 1 247 1 312 1 3 1 315 1 29 1 291 1 360 1 59 1 60 1 113 1 142 1 34 2 165 1 209 1 183 1 295 1 212 2 96 1 98 2 121 2 369 3 346 1 219 1 22 3 172 1 105 1 174 1 25 2 156 1 49 1 157 1 
75 1 135 2 355 1 162 1 263 1 5 1 361 2 302 4 20 2 319 1 70 4 320 2 128 2 173 1 377 1 
195 1 296 1 37 1 
195 1 296 1 37 1 
296 1 284 1 323 1 37 1 48 1 
195 1 296 1 37 1 
296 1 154 1 37 1 
296 1 154 1 37 1 
296 1 154 1 37 1 
296 1 37 1 
266 1 161 1 
166 3 75 1 188 1 240 1 15 1 291 2 177 1 67 1 346 4 59 8 348 1 233 1 253 1 304 2 142 2 34 4 199 1 105 2 145 4 157 2 
166 2 75 1 240 1 15 1 177 1 346 3 67 1 101 1 233 1 59 6 253 1 304 2 199 1 145 3 
166 2 188 1 240 1 291 1 218 1 346 2 67 1 59 4 283 1 304 1 181 1 142 1 34 2 105 1 145 2 244 1 157 1 
294 2 166 2 188 1 94 1 240 1 28 1 218 1 67 1 346 4 59 7 304 1 181 1 131 1 145 3 244 1 
75 1 28 1 177 2 139 1 291 2 233 1 59 23 253 1 181 2 142 2 336 1 34 4 145 11 294 2 166 9 188 4 94 2 240 3 15 2 218 2 346 12 67 3 348 2 304 5 199 1 155 1 105 2 244 2 157 2 
346 1 294 1 59 1 
59 1 94 1 145 1 
166 3 188 1 240 1 78 1 291 1 218 1 346 3 67 1 59 6 283 1 142 1 181 1 304 2 34 2 105 1 145 3 244 1 157 1 
291 1 6 1 59 12 33 1 142 1 181 2 34 2 145 6 63 1 294 1 293 1 166 2 188 1 94 1 240 2 168 1 368 1 218 2 346 6 67 2 304 1 131 1 105 1 244 2 157 1 
166 2 188 1 240 1 15 1 177 1 67 1 346 3 59 6 253 1 304 1 145 3 
166 2 188 1 15 1 177 1 291 1 346 2 233 1 59 3 348 1 304 1 142 1 34 2 199 1 155 1 105 1 145 1 157 1 
166 5 188 2 240 2 15 2 99 1 291 1 177 2 6 1 346 5 67 2 59 10 253 1 142 1 304 3 34 2 105 1 145 5 157 1 
166 1 188 1 240 1 291 1 6 1 59 2 142 1 34 2 105 1 145 2 244 1 157 1 
166 2 188 1 240 1 291 1 218 1 346 2 67 1 6 1 59 4 304 1 181 1 142 1 34 2 105 1 145 2 244 1 157 1 
166 2 188 1 189 1 15 1 291 3 177 1 346 2 6 1 348 1 59 3 142 3 304 1 34 6 155 1 105 3 145 1 157 3 
75 1 28 1 177 3 291 5 80 1 6 1 233 1 59 34 253 2 142 5 181 3 34 10 145 16 294 4 341 1 166 12 188 5 94 3 240 5 15 3 189 1 218 3 346 18 67 5 348 2 220 1 283 1 304 7 199 1 155 1 131 1 105 5 244 3 157 5 
75 1 291 1 177 1 6 1 59 8 233 1 253 1 142 1 34 2 145 4 294 1 166 2 94 1 240 1 15 1 368 1 67 1 346 4 304 2 199 1 131 1 105 1 157 1 
75 1 28 1 177 1 291 2 6 1 233 1 59 11 253 1 142 2 34 4 145 6 294 2 166 3 188 1 94 1 240 2 15 1 368 1 218 1 67 1 346 5 283 1 304 2 199 1 131 1 105 2 244 1 157 2 
75 1 177 1 291 3 6 1 233 1 59 19 33 1 253 1 142 3 181 2 34 6 145 9 63 1 294 1 293 1 166 4 188 1 94 1 240 3 15 1 168 1 368 1 218 2 346 10 67 3 348 1 283 1 304 3 199 1 131 1 105 3 244 2 157 3 
75 1 177 1 291 3 6 1 233 1 59 17 33 1 253 1 142 3 181 1 34 6 145 10 63 1 294 1 293 1 166 5 188 2 94 1 240 3 15 1 168 1 368 1 218 2 346 7 67 2 348 1 283 1 304 3 199 1 131 1 105 3 244 2 157 3 
75 1 291 1 177 1 6 1 59 8 233 1 253 1 142 1 34 2 145 4 294 1 166 2 94 1 240 1 15 1 368 1 67 1 346 4 304 2 199 1 131 1 105 1 157 1 
291 1 6 1 59 12 33 1 142 1 181 2 34 2 145 6 63 1 294 1 293 1 166 2 188 1 94 1 240 2 168 1 368 1 218 2 346 6 67 2 304 1 131 1 105 1 244 2 157 1 
75 1 177 1 291 4 6 1 233 1 33 1 59 18 253 1 142 4 181 1 34 8 145 10 63 1 294 1 293 1 166 5 188 2 94 1 240 3 15 1 168 1 368 1 218 2 346 8 67 2 348 2 283 1 304 3 199 1 131 1 105 4 244 2 157 4 
291 4 6 1 33 1 59 16 142 4 181 2 34 8 145 9 63 1 294 1 293 1 166 6 188 3 94 1 240 3 189 1 168 1 368 1 218 3 346 7 67 2 348 2 304 3 131 1 105 4 244 3 157 4 
166 6 188 3 240 1 15 3 177 3 346 4 67 1 59 7 233 2 253 1 304 3 199 1 145 3 
75 1 177 1 291 4 6 1 233 1 33 1 59 18 253 1 142 4 181 1 34 8 145 10 63 1 294 1 293 1 166 4 188 1 94 1 240 3 15 1 189 1 168 1 368 1 218 2 346 8 67 2 348 2 304 3 199 1 131 1 105 4 244 2 157 4 
68 1 
186 1 185 1 68 1 339 1 242 1 170 1 
295 1 108 1 101 1 60 1 247 1 165 1 174 1 286 1 329 1 183 1 360 1 
295 1 108 1 247 1 3 1 98 1 121 1 369 2 360 1 113 1 60 1 172 1 22 2 165 1 174 1 25 1 156 1 183 1 91 1 
108 1 247 1 3 1 332 1 360 3 273 1 113 1 363 1 165 1 115 1 183 1 91 1 295 2 98 2 121 1 369 2 22 2 172 2 350 1 174 1 226 1 25 2 156 1 
108 1 247 2 332 1 360 3 273 1 113 1 363 1 165 1 115 1 338 1 183 2 91 1 295 2 98 2 121 1 369 2 22 2 172 2 350 1 104 1 174 2 226 1 25 2 156 1 
295 1 108 1 247 3 95 1 332 1 358 2 163 1 360 4 251 1 196 1 60 1 221 1 70 1 320 1 172 1 335 1 165 1 115 1 338 1 226 1 174 3 204 2 183 3 
295 1 108 1 247 3 95 1 332 1 358 2 163 1 140 1 360 4 251 1 60 1 70 1 320 1 172 1 335 1 165 1 115 1 338 1 226 1 174 3 204 2 183 3 
108 1 247 1 165 1 174 1 23 1 183 1 
295 2 55 1 108 3 247 7 16 1 215 1 137 1 176 1 42 1 360 3 232 1 349 1 223 1 60 2 172 1 276 1 165 2 227 1 174 7 23 1 183 6 
108 1 247 1 3 1 291 2 113 1 59 6 253 1 165 1 209 1 295 1 211 1 166 2 261 1 15 1 121 1 67 1 346 3 126 1 349 1 219 2 22 2 172 1 304 2 174 1 25 1 134 1 353 1 75 1 29 2 177 1 360 1 233 1 142 2 34 4 145 3 146 1 183 1 91 1 240 1 98 1 369 2 199 1 105 2 245 1 156 2 49 1 157 2 
355 2 247 1 358 3 79 1 162 2 163 1 140 1 5 2 360 2 251 1 60 1 319 2 320 1 335 1 183 1 38 1 280 1 260 1 213 1 95 2 327 1 169 1 70 1 20 1 201 1 174 1 377 1 204 3 
295 1 108 2 247 2 137 1 216 1 360 2 251 1 349 1 172 1 165 1 174 2 23 1 183 2 
295 1 108 1 247 4 329 1 360 1 194 1 60 1 349 1 165 1 338 1 174 4 286 1 183 4 
295 1 108 2 247 2 14 1 16 1 262 1 301 1 360 1 172 1 276 1 165 1 115 1 174 2 183 2 
108 1 60 1 234 1 247 1 165 1 77 1 277 1 122 1 174 1 183 1 
295 1 108 1 247 2 176 1 360 1 232 1 349 1 35 1 165 1 174 2 183 2 
295 2 108 2 247 5 329 1 42 1 360 3 194 1 232 1 60 1 349 1 165 2 115 1 174 5 227 1 286 1 183 4 
295 2 108 2 247 5 329 1 360 3 194 1 232 1 60 1 349 1 165 2 115 1 174 5 118 1 227 1 286 1 183 4 
295 1 108 1 247 1 98 1 121 1 369 2 360 1 113 1 60 1 172 1 22 2 165 1 104 1 174 1 25 1 156 1 183 1 91 1 
295 1 55 1 108 2 247 1 16 1 137 1 360 1 172 1 276 1 165 1 115 1 174 1 183 1 
326 1 235 1 175 1 156 1 345 1 
51 1 280 1 326 2 297 1 358 2 175 2 163 1 273 1 345 1 70 1 320 1 363 1 235 2 350 1 130 1 103 1 156 1 204 2 90 1 
289 1 326 1 22 1 255 1 98 1 206 1 175 1 369 1 345 1 
51 1 297 1 345 1 
101 1 180 1 357 1 272 1 
54 1 180 1 85 1 357 1 150 1 275 1 272 1 
74 1 150 1 153 1 
54 1 1 2 150 3 357 1 272 1 347 1 180 1 85 3 275 1 88 1 376 1 285 1 
54 1 180 1 85 2 357 1 150 2 275 1 62 1 272 1 287 1 
54 1 150 1 343 1 77 1 272 1 82 1 234 1 85 1 275 1 376 1 26 1 
54 1 180 1 85 1 150 1 275 1 376 1 272 1 
54 1 180 2 85 1 357 1 150 1 275 1 376 1 
54 2 148 1 150 2 367 1 272 1 231 1 180 1 85 2 275 2 376 1 
54 1 76 1 357 1 150 3 298 1 272 2 334 1 180 1 85 3 275 1 376 1 287 2 26 1 
54 1 357 1 150 2 343 1 77 1 152 1 122 1 272 1 179 1 180 1 234 2 85 2 275 1 376 1 287 1 
54 2 357 1 150 4 298 1 272 2 264 1 180 1 85 4 275 2 376 1 62 1 287 2 26 1 
54 1 180 1 85 1 357 1 150 1 275 1 376 1 272 1 
54 1 1 1 357 2 150 4 298 1 250 1 272 3 347 1 180 2 85 4 275 1 285 1 287 2 26 1 
54 1 150 2 357 1 272 1 180 1 85 2 275 1 305 1 376 1 257 1 325 1 287 1 
64 1 54 1 1 2 150 3 357 1 272 1 347 1 180 1 85 3 275 1 376 1 285 2 
248 1 208 1 272 2 205 2 
54 1 85 1 110 1 150 1 275 1 376 1 
54 1 180 1 76 1 85 2 357 1 150 2 275 1 376 1 272 1 287 1 
41 1 
54 1 180 1 85 1 357 1 150 1 275 1 376 1 272 1 
54 1 76 1 1 1 150 3 357 1 272 1 180 1 85 3 275 1 376 1 287 1 
298 1 250 1 272 1 26 1 
180 1 272 1 

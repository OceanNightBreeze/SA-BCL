#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 287 243 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 287 243 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 287 243 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 287 243 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 287 243 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 287 243 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 287 243 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 287 243 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 287 243 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 287 243 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 287 243 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 287 243 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 248 180 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 64 234 85 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 248 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4914 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
264 1 204 2 50 4 245 2 247 2 161 2 75 6 185 1 28 1 320 1 55 1 209 1 343 3 192 1 250 5 126 2 11 1 254 1 255 1 233 2 307 1 330 9 218 9 63 2 20 1 285 1 68 1 358 1 
264 1 204 2 50 4 245 2 247 2 161 2 75 6 185 1 28 1 320 1 55 1 209 1 343 3 192 1 250 5 126 2 11 1 254 1 255 1 233 2 307 1 330 9 218 9 63 2 20 1 285 1 68 1 358 1 
264 1 204 2 50 5 245 2 247 2 161 2 75 7 185 1 28 1 320 1 55 1 209 1 343 4 192 1 250 6 126 2 11 1 254 1 255 1 233 2 307 1 330 10 218 10 63 2 20 1 285 1 68 1 358 1 
264 1 204 1 50 3 245 2 247 2 161 2 75 4 185 1 28 1 320 1 55 1 209 1 343 2 192 1 250 4 126 2 11 1 254 1 255 1 233 2 307 1 330 7 218 7 63 2 20 1 285 1 358 1 
264 1 204 2 50 2 245 1 247 1 161 1 75 3 185 1 233 1 320 1 307 1 330 4 218 4 343 1 20 1 68 1 250 3 126 1 
264 1 205 1 245 1 161 1 40 1 233 1 320 1 330 2 218 2 55 1 63 1 20 1 250 1 126 1 276 1 358 1 
264 1 50 1 75 1 233 2 320 1 330 3 218 3 63 1 343 1 20 1 192 1 250 2 126 2 
264 1 204 2 50 4 245 1 247 1 75 7 161 1 185 1 320 1 209 1 343 3 192 1 250 5 126 2 233 2 307 1 330 9 173 1 218 9 63 1 235 1 20 1 285 1 68 1 
264 1 204 2 50 4 245 1 247 1 75 7 161 1 185 1 320 1 209 1 343 3 192 1 250 5 126 2 233 2 307 1 330 9 173 1 218 9 63 1 235 1 20 1 285 1 68 1 
319 1 
182 1 350 2 206 1 
332 2 261 2 289 2 78 2 93 2 288 1 79 1 356 2 
203 2 179 1 73 2 74 1 289 2 207 1 78 3 79 1 106 1 230 1 273 1 125 1 231 2 111 1 37 1 145 1 149 1 112 1 300 1 301 1 302 1 12 2 41 1 13 2 132 1 16 1 117 1 88 2 118 1 155 2 332 3 261 3 333 1 159 1 220 2 45 1 93 2 95 1 120 1 288 1 356 3 
149 1 332 1 124 1 261 1 289 1 78 1 93 1 291 1 79 1 356 1 
300 1 112 1 149 1 2 1 206 1 281 1 331 1 237 1 332 1 261 1 108 1 34 1 46 1 356 1 
300 1 112 1 149 1 289 1 206 1 281 1 78 1 331 2 332 1 261 1 108 1 34 2 93 1 46 1 356 1 
331 1 34 1 241 1 8 1 308 1 
331 2 279 1 34 2 206 1 241 1 8 1 46 1 48 1 
331 1 34 1 241 1 
149 1 289 1 78 1 291 1 79 1 331 1 227 1 332 1 124 1 261 1 34 1 8 1 93 1 356 1 
206 1 
331 2 34 2 206 1 241 1 8 1 46 1 24 1 48 1 
266 1 316 2 4 1 206 1 306 2 53 1 331 5 323 1 271 1 296 1 34 5 241 2 8 2 46 1 165 1 48 1 299 1 335 1 38 2 
203 2 78 2 268 1 230 1 109 1 231 2 111 1 300 1 112 1 149 1 301 1 302 1 12 1 13 2 328 1 117 1 88 1 118 1 155 1 332 2 261 2 93 1 120 1 356 2 
319 1 
332 2 222 1 289 1 261 2 51 1 78 1 93 1 288 2 356 2 
116 1 268 1 357 1 
149 1 112 1 300 1 203 2 301 1 302 1 12 1 13 2 78 1 117 1 88 1 118 1 295 1 155 1 332 1 230 1 261 1 231 2 120 1 288 1 111 1 356 1 
222 1 289 1 78 4 328 1 340 1 237 1 332 5 211 1 109 2 261 5 93 4 9 1 288 1 356 5 
149 1 332 2 124 1 261 2 318 1 78 2 93 2 356 2 
332 3 289 1 109 1 261 3 78 3 93 3 288 1 356 3 
149 1 332 1 124 1 261 1 78 1 93 1 356 1 
149 1 332 1 222 1 51 1 261 1 289 1 78 1 93 1 356 1 
203 2 179 1 73 2 74 1 222 1 289 2 207 1 78 4 79 1 123 1 106 1 230 1 108 1 109 1 273 1 34 1 231 2 111 1 300 2 112 2 149 2 302 1 301 1 12 1 41 1 13 2 281 1 328 1 132 1 16 1 117 1 88 1 118 1 331 1 155 1 200 1 332 4 261 4 159 1 220 1 45 1 93 3 120 1 288 1 356 4 
237 1 332 2 211 1 261 2 109 1 78 1 93 1 288 1 356 2 
149 1 300 1 112 1 222 1 289 1 206 1 281 1 328 1 78 3 123 1 331 1 332 3 109 2 261 3 108 1 34 1 93 3 347 1 356 3 
222 1 289 1 78 2 116 1 268 1 332 2 109 1 261 2 93 2 356 2 
149 1 112 1 300 1 203 2 301 1 302 1 12 1 13 2 78 1 117 1 88 1 118 1 155 1 332 1 230 1 261 1 231 2 120 1 288 1 111 1 356 1 
149 1 112 1 300 1 203 2 325 1 12 1 13 2 78 1 117 1 88 1 118 1 142 1 155 1 332 1 230 1 261 1 231 2 120 1 288 1 111 1 356 1 
73 2 74 1 76 1 268 2 122 1 342 1 225 1 106 1 58 1 273 1 278 1 167 1 114 1 41 1 87 1 16 1 132 2 116 2 217 1 333 2 137 1 45 1 220 4 357 2 
149 1 112 1 332 1 261 1 318 1 78 1 93 1 356 1 
138 1 322 1 
138 1 322 1 
216 1 103 1 
216 1 103 1 
216 1 103 1 
138 1 322 1 208 1 
138 1 322 1 345 1 
138 2 322 2 143 1 216 1 329 1 103 1 
138 1 322 1 208 1 
138 1 322 1 208 1 
138 1 322 1 352 1 
138 1 322 1 352 1 
138 1 322 1 352 1 
138 1 121 1 139 1 186 1 78 2 105 1 322 1 81 1 345 1 34 1 130 1 326 1 197 1 18 1 331 1 332 2 238 1 261 2 22 1 201 1 92 1 93 2 288 1 356 2 
138 2 139 1 326 2 206 1 294 1 322 2 105 2 331 2 81 3 353 1 143 1 238 2 44 1 274 1 34 2 22 2 71 1 277 1 36 2 
245 1 247 1 161 1 
245 1 205 1 161 1 
245 3 205 1 191 1 247 2 158 1 339 1 
245 2 205 1 191 1 247 1 346 1 339 1 
245 2 205 1 247 1 191 1 339 2 
316 1 182 1 27 2 186 1 206 2 101 1 53 3 225 1 34 5 8 4 165 1 35 1 127 2 38 1 278 1 130 1 350 3 306 1 217 1 331 5 153 1 136 2 65 1 137 1 311 1 262 1 241 1 92 1 46 1 48 1 335 2 263 1 
0 1 221 1 316 2 4 1 182 3 184 5 27 6 206 5 53 8 225 3 34 9 8 7 59 1 165 1 194 1 38 2 278 3 350 9 306 2 217 3 308 5 331 9 153 2 174 1 354 1 136 6 65 2 137 3 311 3 92 4 241 6 46 1 48 1 335 6 263 1 
316 1 4 1 182 2 27 2 206 3 101 1 53 3 225 1 34 3 8 2 127 1 38 1 278 1 350 4 306 1 217 1 331 3 153 1 65 1 136 2 137 1 262 1 92 1 311 1 46 1 335 2 
0 1 316 1 4 1 182 3 27 4 206 4 101 1 53 5 225 2 34 4 8 3 127 2 38 1 278 2 350 7 306 1 217 2 331 4 153 1 174 1 354 1 136 4 65 1 137 2 262 1 92 2 311 2 46 1 335 4 
319 1 
232 1 231 1 
60 1 
203 1 13 1 231 1 
31 1 231 1 
203 1 231 1 
203 1 60 1 199 1 13 1 131 2 283 1 231 3 
278 1 1 1 336 1 39 1 76 3 77 1 132 3 122 2 341 1 258 1 225 1 19 1 177 1 260 2 67 1 333 4 220 7 
278 1 1 1 336 1 39 1 76 3 77 1 132 3 122 2 341 1 258 1 225 1 19 1 177 1 260 2 67 1 333 4 220 7 
278 1 1 1 336 1 39 1 76 3 77 1 132 3 122 2 341 1 258 1 225 1 19 1 286 1 177 1 260 2 67 1 333 4 220 7 
1 1 336 1 73 2 74 1 76 2 100 1 122 1 341 1 106 1 273 1 349 1 214 1 39 1 132 3 234 1 64 1 258 1 284 1 260 1 333 3 67 2 220 6 45 1 314 1 
73 4 336 1 74 2 76 4 77 1 122 3 341 1 225 1 106 2 273 2 166 1 278 1 148 1 214 1 39 1 132 4 258 1 19 1 177 1 260 2 333 5 67 1 45 2 220 9 
264 1 205 1 245 2 247 1 75 1 161 1 223 1 99 1 320 1 102 1 162 1 344 1 230 1 250 1 126 1 111 1 129 1 12 1 61 1 233 1 88 1 330 2 218 2 63 1 257 1 155 1 20 1 158 1 70 1 25 1 
264 1 205 1 245 2 247 1 161 1 75 2 29 1 99 1 320 1 102 1 344 1 230 1 250 1 126 1 111 1 129 1 12 1 61 1 15 1 233 1 88 1 330 3 218 3 63 1 257 1 155 1 158 1 312 1 70 1 25 1 
264 1 205 1 245 2 247 1 75 2 161 1 29 1 320 1 102 1 344 1 230 1 250 1 111 1 129 1 12 1 61 1 88 1 330 2 218 2 63 1 257 1 155 1 158 1 312 1 25 1 
203 1 84 1 169 1 86 1 12 1 15 1 152 1 233 1 17 1 102 2 88 1 330 1 218 1 63 2 155 1 344 2 230 1 91 1 231 1 120 1 126 1 111 1 25 2 
245 2 205 1 247 1 161 1 12 1 61 1 99 1 223 1 233 1 102 1 88 1 330 1 218 1 257 1 63 1 20 1 155 1 344 1 230 1 158 1 312 1 70 1 126 1 111 1 25 1 129 1 
280 1 
203 1 2 1 316 1 3 1 183 1 53 1 188 1 230 1 108 1 34 3 275 1 231 1 348 1 165 1 111 1 38 1 149 1 112 1 300 1 303 1 12 2 281 1 306 1 17 1 88 2 331 3 155 2 332 1 237 1 65 1 91 1 287 1 261 1 241 2 120 2 356 1 48 1 243 1 335 1 
149 1 112 1 300 1 2 1 3 1 303 1 281 1 331 2 237 1 332 1 287 1 261 1 108 1 34 2 275 1 356 1 243 1 
149 1 112 1 300 1 2 1 3 1 303 1 281 1 331 2 237 1 332 1 287 1 261 1 108 1 34 2 275 1 356 1 243 1 
149 1 112 1 300 1 2 1 3 1 303 1 281 1 331 2 237 1 332 1 287 1 261 1 108 1 34 2 275 1 356 1 243 1 
149 1 112 1 300 1 2 1 3 1 303 1 281 1 331 3 237 1 332 1 287 1 108 1 261 1 34 3 241 1 275 1 24 1 356 1 48 1 243 1 
149 1 112 1 300 1 2 1 316 1 3 1 303 1 281 1 306 1 331 2 332 1 237 1 287 1 108 1 261 1 34 2 275 1 165 1 356 1 38 1 243 1 
149 1 112 1 300 1 2 1 3 1 303 1 281 1 331 2 237 1 332 1 287 1 261 1 108 1 34 2 275 1 356 1 243 1 
149 1 112 1 300 1 2 1 3 1 303 1 281 1 331 2 237 1 332 1 287 1 261 1 108 1 34 2 275 1 356 1 243 1 
149 1 112 1 300 1 2 1 3 1 303 1 281 1 331 2 237 1 332 1 287 1 261 1 108 1 34 2 275 1 356 1 243 1 
149 1 112 1 300 1 2 1 3 1 303 1 281 1 331 2 237 1 332 1 287 1 261 1 108 1 34 2 275 1 356 1 243 1 
149 1 112 1 300 1 2 1 3 1 303 1 281 1 331 2 237 1 332 1 287 1 261 1 108 1 34 2 275 1 356 1 243 1 
149 1 112 1 300 1 2 1 316 1 3 1 303 1 281 1 306 1 331 2 332 1 237 1 287 1 108 1 261 1 34 2 275 1 165 1 356 1 38 1 243 1 
106 1 73 2 74 1 273 1 114 1 319 1 41 1 45 1 16 1 
73 4 74 2 76 1 100 2 141 1 268 6 122 1 106 2 225 2 273 2 298 1 37 1 149 1 278 1 252 1 41 2 132 5 16 1 116 2 217 2 42 1 64 2 236 1 135 1 333 7 159 1 202 1 311 2 137 1 45 2 220 12 288 1 357 6 
106 1 229 1 230 1 109 1 273 1 231 2 111 1 112 1 149 1 12 1 13 2 328 1 16 1 116 1 117 1 118 1 155 1 332 2 157 1 239 1 333 1 159 1 120 1 288 1 203 2 73 2 74 1 78 2 295 1 37 1 300 1 301 1 302 1 41 1 132 1 88 1 42 1 261 2 220 2 45 1 93 1 356 2 
179 2 49 1 187 2 52 2 268 7 106 3 225 3 230 2 109 1 273 3 231 4 111 2 278 3 112 2 149 2 195 1 12 3 13 4 328 1 16 3 116 7 117 2 118 2 19 1 155 3 332 3 333 10 159 1 120 1 288 2 203 4 73 6 74 3 76 8 77 1 78 3 122 4 341 1 37 1 300 2 301 2 302 2 39 1 305 2 41 3 132 10 217 2 88 3 42 1 258 4 175 1 177 1 178 2 260 1 261 3 312 1 137 2 311 2 45 3 93 1 220 20 356 3 357 7 
203 2 73 4 74 2 78 1 162 1 106 2 163 1 230 2 109 1 273 2 82 1 231 3 193 1 111 2 37 1 145 2 150 1 12 8 114 1 41 2 16 2 132 1 17 1 88 7 155 8 259 1 332 1 91 1 261 1 333 1 312 1 21 1 159 1 93 1 45 2 220 2 120 2 72 1 356 1 
140 1 73 2 74 1 222 1 76 1 289 1 78 1 268 1 122 1 106 1 225 1 273 1 278 1 41 1 116 1 16 1 132 2 217 1 42 1 332 1 261 1 333 1 311 1 137 1 93 1 45 1 220 3 356 1 357 1 
167 1 73 2 74 1 76 1 114 1 41 1 116 1 268 1 16 1 217 1 258 1 106 1 225 1 273 1 333 2 220 2 45 1 357 1 
278 1 73 2 74 1 76 1 114 1 41 1 116 1 268 1 16 1 132 2 122 1 106 1 58 1 273 1 137 1 220 2 45 1 357 1 
73 2 74 1 76 2 268 2 122 1 225 1 106 1 273 1 278 1 114 1 41 1 16 1 116 2 132 2 217 1 258 1 333 2 311 1 137 1 45 1 220 4 357 2 
167 1 73 2 74 1 76 1 41 1 116 1 268 1 16 1 217 1 258 1 106 1 225 1 273 1 333 2 220 2 193 1 45 1 357 1 
278 1 73 2 74 1 76 1 41 1 116 1 268 1 16 1 132 2 122 1 106 1 58 1 273 1 137 1 220 2 193 1 45 1 357 1 
73 2 74 1 76 2 268 2 122 1 225 1 106 1 273 1 193 1 278 1 41 1 16 1 116 2 132 2 217 1 258 1 333 2 311 1 137 1 45 1 220 4 357 2 
73 2 74 1 76 2 268 2 122 1 225 1 106 1 273 1 278 1 41 1 16 1 116 2 132 2 217 1 258 1 333 2 311 1 137 1 220 4 45 1 357 2 
203 2 179 1 73 2 74 1 78 1 106 1 230 1 273 1 231 2 111 1 37 1 300 1 112 1 149 1 302 1 301 1 12 1 13 2 41 1 132 1 16 1 117 1 88 1 118 1 155 1 332 1 261 1 333 1 159 1 220 2 45 1 120 1 288 1 356 1 
203 2 73 2 74 1 78 1 190 1 106 1 142 1 230 1 273 1 231 2 111 1 37 1 300 1 112 1 149 1 325 1 12 1 13 2 41 1 132 1 16 1 117 1 88 1 118 1 155 1 332 1 261 1 333 1 159 1 220 2 45 1 120 1 288 1 356 1 
73 2 74 1 76 2 268 2 122 1 225 1 106 1 273 1 278 1 41 1 16 1 116 2 132 2 217 1 42 1 258 1 333 2 311 1 137 1 45 1 220 4 357 2 
179 1 203 2 73 2 74 1 76 2 78 1 268 2 122 1 225 1 106 1 162 1 230 1 273 1 231 2 111 1 278 1 300 1 112 1 149 1 302 1 301 1 12 1 13 2 41 1 132 2 116 2 16 1 217 1 117 1 88 1 258 1 118 1 155 1 178 1 332 1 261 1 333 2 137 1 311 1 220 4 45 1 356 1 357 2 
73 2 74 1 222 1 76 1 289 1 78 1 268 1 106 1 225 1 273 1 278 1 41 1 132 1 16 1 116 1 217 1 42 1 258 1 332 1 261 1 333 2 137 1 311 1 93 1 45 1 220 3 242 1 356 1 357 1 
160 1 244 1 73 6 74 3 5 1 76 7 77 1 100 4 141 1 122 4 341 1 226 1 106 3 225 5 107 1 297 4 273 3 146 1 166 1 278 5 214 1 113 2 251 1 39 1 85 1 10 1 351 1 282 1 132 21 217 4 234 3 89 1 258 3 64 3 19 1 177 1 260 1 333 20 334 1 311 4 137 4 45 3 220 41 
160 1 244 1 73 8 74 4 5 1 76 6 77 1 100 4 141 1 122 4 341 1 226 1 106 4 225 5 107 1 297 4 273 4 146 1 166 1 278 4 214 2 113 2 251 1 39 1 85 1 10 1 351 1 282 1 132 18 217 4 234 3 89 1 258 2 64 3 19 1 177 1 260 1 333 20 334 1 311 4 137 3 45 4 220 38 
160 1 244 1 73 4 74 2 76 12 77 3 100 3 141 1 122 7 341 3 226 1 106 2 225 8 297 4 273 2 146 1 166 1 278 8 214 1 113 1 251 1 39 3 85 1 10 1 351 1 282 1 132 24 217 5 234 2 89 1 64 3 258 5 19 3 177 3 260 3 135 1 333 28 334 1 311 5 137 5 45 2 220 52 
244 1 73 4 74 2 76 5 338 1 100 3 141 1 122 3 106 2 225 3 107 1 297 4 273 2 146 2 166 1 278 3 113 1 251 1 85 1 351 1 282 1 132 13 217 3 234 2 89 1 258 2 64 2 333 12 311 3 137 3 45 2 220 25 
160 1 244 1 73 6 74 3 76 4 100 2 122 2 106 3 226 1 225 3 297 4 273 3 146 1 166 1 278 2 214 2 113 2 251 1 85 1 10 1 351 1 282 2 132 12 217 3 234 2 89 1 258 2 64 2 333 14 334 1 311 3 137 2 45 3 220 26 
105 1 138 1 322 1 143 1 326 1 238 1 44 1 267 1 22 1 277 1 
345 1 18 1 
105 1 138 1 322 1 326 1 7 1 238 1 22 1 94 1 47 1 
355 1 208 1 
329 1 172 1 352 1 
138 1 139 1 326 1 206 1 294 1 331 1 322 1 105 1 81 2 143 1 238 1 44 1 274 1 34 1 22 1 71 1 277 1 36 1 
138 1 139 1 326 1 206 1 294 1 331 1 322 1 105 1 81 2 143 1 238 1 44 1 274 1 34 1 22 1 71 1 277 1 36 1 
138 1 139 1 326 1 206 1 294 1 331 1 322 1 105 1 81 2 143 1 238 1 44 1 274 1 34 1 22 1 71 1 277 1 36 1 
355 1 329 1 208 1 
355 1 329 1 208 1 
172 1 352 1 
329 1 172 1 352 1 
121 1 197 1 
138 1 121 1 186 1 78 2 105 1 322 1 81 1 345 1 34 1 8 1 36 1 130 1 326 1 197 1 18 1 331 1 332 2 261 2 238 1 69 1 22 1 201 1 92 1 93 2 288 1 71 1 356 2 
203 1 73 2 74 1 106 1 269 1 163 1 230 1 57 1 273 1 231 1 111 1 37 1 145 2 12 2 41 1 16 1 132 1 88 2 42 1 43 1 155 2 259 1 332 2 309 1 261 2 333 1 159 1 45 1 220 2 23 1 356 2 
245 2 205 1 247 1 161 1 12 2 61 1 99 1 102 1 88 2 104 1 162 1 155 2 210 1 230 1 158 1 212 1 312 1 111 1 129 1 
245 2 205 1 247 1 161 1 12 1 61 1 99 1 102 1 88 1 155 1 176 1 210 1 230 1 158 1 312 1 111 1 129 1 
203 1 84 1 12 1 102 1 17 1 88 1 104 1 134 1 155 1 230 1 91 1 231 1 120 1 111 1 
245 2 205 1 247 1 161 1 12 1 61 1 99 1 102 1 88 1 104 1 155 1 210 1 230 1 158 1 212 1 312 1 111 1 129 1 
310 1 
319 1 
316 1 182 1 206 2 53 1 80 1 34 1 213 1 165 1 83 1 38 1 350 1 306 1 331 1 241 1 46 1 48 1 335 1 
180 1 155 1 316 1 230 1 248 1 12 1 306 1 120 1 165 1 111 1 88 1 38 1 
316 1 182 1 85 1 350 2 27 1 206 1 100 1 306 1 53 1 234 1 64 1 136 1 165 1 335 1 38 1 
316 1 289 1 249 1 78 1 53 2 291 1 79 1 6 1 341 1 225 2 227 1 228 1 124 1 34 1 165 1 38 1 149 1 278 1 39 1 306 1 331 1 19 1 119 2 332 1 261 1 93 1 356 1 335 2 
266 1 316 1 206 1 306 1 53 1 271 1 46 1 165 1 38 1 335 1 
278 2 182 5 350 10 27 5 187 1 249 1 206 5 53 5 217 2 225 2 119 2 136 5 311 2 137 2 335 5 
331 1 34 1 206 1 241 1 46 1 48 1 
203 1 181 2 316 2 4 1 183 1 53 2 188 2 321 1 230 1 34 3 110 1 231 1 348 1 165 1 111 1 38 2 12 4 306 2 17 1 88 4 331 3 155 4 65 2 91 1 240 1 241 4 120 2 48 2 335 2 
179 1 203 2 73 2 74 1 289 2 207 1 78 3 79 1 106 1 230 1 273 1 231 2 111 1 300 1 112 1 149 1 301 1 302 1 12 1 41 1 13 2 132 1 16 1 117 1 88 1 118 1 155 1 332 3 261 3 159 1 220 1 45 1 93 2 120 1 288 1 356 3 
316 1 182 2 350 4 27 2 206 4 306 1 53 1 188 1 260 1 136 2 65 1 46 2 165 1 335 2 38 1 
105 1 22 1 14 1 
105 1 197 1 22 1 277 1 128 1 
105 1 22 1 14 1 
105 1 22 1 14 1 
105 1 246 1 22 1 
105 1 246 1 22 1 
105 1 246 1 22 1 
105 1 22 1 
138 1 322 1 
160 1 73 4 74 2 76 9 77 1 100 1 122 5 6 1 341 2 106 2 226 1 225 5 273 2 166 1 278 4 214 1 39 2 85 1 10 1 132 10 217 2 234 1 258 4 64 1 19 2 177 1 260 1 333 14 311 2 137 1 334 1 220 24 45 2 
160 1 73 6 74 3 76 4 77 1 100 1 122 3 293 1 341 1 106 3 226 1 225 3 273 3 166 1 278 2 214 1 39 1 85 1 10 1 132 7 217 2 234 1 258 1 64 1 19 1 177 1 260 1 333 10 334 1 311 2 137 1 220 17 45 3 
160 1 73 6 74 3 76 4 77 1 100 1 122 3 293 1 341 1 106 3 226 1 225 3 273 3 166 1 278 3 214 1 39 1 85 1 10 1 132 10 217 2 234 1 258 1 64 1 19 1 177 1 260 1 333 9 334 1 311 2 137 2 220 19 45 3 
160 1 73 6 74 3 76 5 77 1 100 1 122 3 293 1 341 1 106 3 226 1 225 3 273 3 166 1 278 2 214 1 39 1 85 1 10 1 132 7 217 2 234 1 258 2 64 1 19 1 177 1 260 1 333 10 311 2 137 1 334 1 220 17 45 3 
160 1 73 4 74 2 76 9 77 1 100 1 122 5 6 1 341 2 106 2 226 1 225 5 273 2 166 1 278 4 214 1 39 2 85 1 10 1 132 10 217 2 234 1 258 4 64 1 19 2 177 1 260 1 333 14 311 2 137 1 334 1 220 24 45 2 
160 1 73 2 74 1 76 2 100 1 122 1 106 1 226 1 225 2 273 1 166 1 278 2 85 1 10 1 132 6 217 2 234 1 258 1 64 1 333 6 311 2 137 2 334 1 220 12 45 1 
160 1 73 8 74 4 76 5 77 1 100 1 122 3 293 1 341 1 106 4 226 1 225 3 273 4 166 1 278 2 214 2 39 1 85 1 10 1 132 8 217 2 234 1 258 2 64 1 19 1 177 1 260 1 333 10 334 1 311 2 137 1 220 18 45 4 
160 1 73 8 74 4 76 6 100 1 122 3 106 4 226 1 225 3 107 1 273 4 166 1 278 2 214 2 85 1 10 1 132 7 217 3 234 1 258 3 64 1 333 9 334 1 311 3 137 2 220 16 45 4 
278 1 39 3 76 6 77 2 132 4 122 3 341 3 258 3 19 1 225 1 177 1 333 3 220 7 
160 1 73 8 74 4 76 4 77 1 100 1 122 3 341 1 106 4 226 1 225 3 107 1 273 4 166 1 278 2 214 2 39 1 85 1 10 1 132 8 217 2 234 1 258 1 64 1 19 1 177 1 260 1 333 10 334 1 311 2 137 1 220 18 45 4 
278 1 214 1 73 4 74 2 39 1 76 3 77 1 132 4 122 2 341 1 258 1 225 1 19 1 106 2 177 1 260 1 333 4 273 2 220 8 45 2 
319 1 
278 1 73 2 74 1 76 2 132 2 122 1 217 1 293 1 258 1 106 1 225 1 273 1 333 2 137 1 311 1 45 1 220 4 
64 1 333 1 100 1 220 2 132 1 234 1 
73 2 74 1 76 7 77 1 100 2 141 1 122 5 6 1 341 2 225 5 106 1 273 1 278 5 214 1 39 2 132 13 217 2 64 2 258 2 19 2 236 1 177 1 260 1 135 1 333 13 137 2 311 2 220 26 45 1 
100 1 220 1 132 1 
64 1 333 1 220 1 
278 1 73 2 74 1 76 3 187 1 132 3 217 1 122 2 293 1 258 1 106 1 225 1 273 1 333 3 311 1 137 1 45 1 220 6 
160 1 73 2 74 1 76 2 100 1 122 1 106 1 226 1 225 2 273 1 166 1 278 2 85 1 10 1 132 6 217 2 234 1 258 1 64 1 333 6 311 2 137 2 334 1 220 12 45 1 
278 1 39 1 76 2 132 3 122 1 341 1 258 1 19 1 225 1 333 3 220 6 
214 1 73 2 39 1 74 1 76 2 77 1 132 2 122 1 341 1 258 1 106 1 284 1 177 1 333 1 273 1 220 3 45 1 
278 2 73 2 74 1 39 2 76 5 132 5 122 3 6 1 341 2 258 2 106 1 19 1 225 2 273 1 333 5 45 1 220 10 166 1 
73 2 74 1 76 1 217 1 258 1 106 1 225 1 273 1 333 2 45 1 220 2 166 1 
278 1 73 2 74 1 76 2 132 2 122 1 217 1 258 1 106 1 225 1 273 1 333 2 137 1 311 1 45 1 220 4 166 1 
214 1 73 6 74 3 39 1 76 2 132 2 122 1 341 1 258 1 106 3 284 1 107 1 273 3 333 1 220 3 45 3 166 1 
73 8 74 4 76 6 77 1 100 1 122 3 293 1 6 1 341 2 225 2 106 4 107 1 273 4 166 1 278 2 214 1 39 2 132 8 234 1 258 3 64 1 19 1 284 1 177 1 333 7 45 4 220 15 314 1 
332 1 237 1 261 1 211 1 288 1 356 1 147 1 
170 1 62 1 133 1 270 1 237 1 332 1 211 1 261 1 288 1 96 1 356 1 147 1 
155 1 12 1 319 1 120 1 88 1 
149 1 112 1 300 1 203 2 302 1 12 1 13 2 78 2 117 1 88 1 118 1 155 1 230 1 332 2 109 1 261 2 231 2 93 1 120 1 288 1 111 1 356 2 
203 1 181 1 78 1 230 1 109 1 231 1 111 1 149 1 302 1 252 1 12 1 13 1 88 1 118 1 155 1 332 1 261 2 93 1 288 1 356 2 
203 1 181 1 78 1 142 1 230 1 109 1 231 1 111 1 149 1 252 1 12 1 13 1 88 1 118 1 155 1 332 1 261 2 93 1 288 1 356 2 
203 1 265 1 181 1 12 3 232 1 206 1 281 1 13 1 131 1 290 1 117 1 88 3 331 2 31 1 155 3 230 1 34 2 144 1 241 1 231 4 120 1 46 1 111 1 
203 1 181 1 168 1 12 3 232 1 206 1 281 1 13 1 131 1 290 1 117 1 88 3 331 2 31 1 155 3 230 1 34 2 241 1 231 4 120 1 46 1 111 1 
155 1 230 1 12 1 82 1 111 1 88 1 
203 2 150 1 12 7 13 1 283 1 88 6 189 1 162 1 155 7 259 1 230 3 66 1 33 1 82 1 312 1 21 1 231 3 120 2 111 2 145 1 72 1 
179 1 268 1 106 2 225 1 230 1 109 1 273 2 231 2 111 1 112 1 149 1 278 1 12 1 13 2 116 1 16 2 117 1 118 1 19 1 155 1 332 2 333 3 23 1 288 2 203 2 73 4 74 2 76 2 77 1 78 2 122 2 341 1 162 1 300 1 302 1 301 1 39 1 305 1 41 2 132 3 88 1 42 1 178 1 177 1 260 1 261 2 45 2 93 1 220 6 356 2 357 1 
266 1 316 2 206 1 53 1 271 1 56 1 34 3 8 1 231 2 165 2 38 2 168 1 215 1 12 1 232 1 131 1 281 1 306 2 171 1 88 1 331 3 155 1 240 1 241 2 46 1 120 1 48 1 335 1 
155 1 230 1 248 1 12 1 82 1 111 1 88 1 
203 1 98 1 12 4 290 1 17 1 88 4 162 1 155 4 230 1 91 1 231 1 120 1 111 1 
203 1 181 1 195 1 12 2 304 1 13 1 88 2 155 2 230 2 66 1 33 1 231 1 111 1 97 1 
155 1 245 1 205 1 230 1 161 1 12 1 120 1 111 1 88 1 129 1 
203 1 12 2 88 2 162 1 269 1 155 2 259 1 230 1 312 1 231 1 111 1 
203 2 181 1 98 1 12 5 17 1 88 4 162 1 155 5 259 1 230 2 91 1 21 1 231 3 120 1 111 2 72 1 
203 2 181 1 98 1 12 5 17 1 88 4 162 1 155 5 259 1 230 2 91 1 21 1 231 3 120 1 164 1 111 2 
149 1 112 1 300 1 203 2 12 1 13 2 78 2 117 1 88 1 118 1 142 1 155 1 230 1 332 2 109 1 261 2 231 2 93 1 120 1 288 1 111 1 356 2 
203 1 181 1 12 1 13 1 283 1 88 1 189 1 155 1 230 2 66 1 33 1 231 1 111 1 
26 1 30 1 156 1 151 1 288 1 
149 1 112 1 300 1 26 1 337 1 198 1 317 1 206 1 281 1 151 2 123 1 331 2 30 2 156 2 108 1 34 2 8 1 46 1 288 1 
43 1 26 1 30 1 332 1 309 1 57 1 156 1 261 1 356 1 
26 1 198 1 317 1 
319 1 
264 1 250 1 233 1 320 1 126 1 330 1 218 1 
63 1 344 1 330 1 
264 1 233 1 320 1 256 1 330 3 218 3 20 1 32 1 313 1 250 1 126 1 358 2 
264 1 204 1 75 1 250 1 233 1 320 1 126 1 330 2 218 2 
50 1 245 1 247 1 161 1 185 1 233 1 330 1 218 1 20 1 250 1 126 1 
20 1 250 1 233 1 320 1 126 1 330 1 218 1 
264 1 20 1 233 1 320 2 126 1 330 1 218 1 
233 2 320 1 330 2 218 2 224 1 20 1 154 1 324 1 250 1 126 2 
264 1 50 1 75 2 233 1 320 1 330 3 218 3 209 1 343 1 20 1 285 1 250 2 126 1 
264 1 205 1 245 2 247 1 253 1 161 1 75 1 233 1 320 1 330 2 218 2 20 1 158 1 250 1 126 1 
264 1 204 1 50 1 75 2 233 2 320 1 330 4 218 4 343 1 20 1 68 1 250 2 126 2 
264 1 20 1 250 1 233 1 320 1 126 1 330 1 218 1 
264 2 50 1 75 2 233 1 320 2 256 1 330 4 218 4 343 1 272 1 32 1 250 3 126 1 358 1 
264 1 196 1 75 1 233 1 320 1 330 2 218 2 235 1 20 1 219 1 250 1 126 1 
264 1 315 1 20 1 32 1 250 1 233 1 320 1 126 1 256 2 330 3 358 2 218 3 
327 1 250 2 292 1 54 2 
20 1 115 1 233 1 126 1 330 1 218 1 
264 1 209 1 20 1 75 1 250 1 233 1 320 1 126 1 330 2 218 2 
90 1 
264 1 20 1 250 1 233 1 320 1 126 1 330 1 218 1 
264 1 75 1 233 1 320 1 330 3 218 3 209 1 20 1 250 1 126 1 358 1 
343 1 50 1 272 1 250 1 
250 1 320 1 

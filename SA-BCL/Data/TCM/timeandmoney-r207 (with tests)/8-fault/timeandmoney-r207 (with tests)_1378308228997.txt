#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (30,128,223,269) (30,128,223,269) (91,124,205,317) 216 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (30,128,223,269) (30,128,223,269) (91,124,205,317) 216 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 255 306 149 49 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 360 231 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 360 231 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 360 231 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 360 231 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 360 231 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 166 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (30,128,223,269) (30,128,223,269) (91,124,205,317) (91,124,205,317) (91,124,205,317) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
128 2 20 2 205 1 269 2 348 3 52 1 136 1 294 9 349 2 237 1 119 1 30 9 191 1 303 1 280 1 163 1 142 1 13 4 222 1 223 6 69 2 147 1 72 1 338 5 17 1 312 2 364 1 19 2 
128 2 20 2 205 1 269 2 348 3 52 1 136 1 294 9 349 2 237 1 119 1 30 9 191 1 303 1 280 1 163 1 142 1 13 4 222 1 223 6 69 2 147 1 72 1 338 5 17 1 312 2 364 1 19 2 
128 2 20 2 205 1 269 2 348 4 52 1 136 1 294 10 349 2 237 1 119 1 30 10 191 1 303 1 280 1 163 1 142 1 13 5 222 1 223 7 69 2 147 1 72 1 338 6 17 1 312 2 364 1 19 2 
128 2 20 2 205 1 269 2 348 2 52 1 136 1 294 7 349 2 237 1 119 1 30 7 191 1 303 1 280 1 163 1 142 1 13 3 223 4 69 2 147 1 72 1 338 4 17 1 312 1 364 1 19 2 
191 1 20 1 128 1 303 1 205 1 280 1 269 1 348 1 13 2 222 1 294 4 223 3 349 1 338 3 17 1 312 2 19 1 30 4 
191 1 128 1 20 1 303 1 8 1 280 1 304 1 142 1 269 1 294 2 69 1 362 1 338 1 147 1 30 2 19 1 
191 1 128 2 303 1 280 1 269 2 348 1 13 1 294 3 223 1 69 1 338 2 364 1 30 3 
128 1 223 1 294 1 280 1 216 1 269 1 124 1 30 2 
128 1 223 1 294 1 280 1 216 1 269 1 124 1 30 2 
248 1 311 1 254 1 
255 2 248 1 46 1 
213 2 144 2 345 2 263 2 322 2 352 2 293 1 82 1 
345 2 180 2 133 1 293 1 235 1 214 1 213 3 134 2 93 1 96 1 188 1 322 2 352 2 323 1 58 1 118 1 82 1 164 1 281 1 194 1 121 1 105 1 334 1 144 3 42 2 226 1 227 1 145 1 361 1 168 1 170 1 263 2 109 2 266 2 267 1 341 1 246 1 
213 1 144 1 108 1 345 1 351 1 263 1 322 1 352 1 193 1 82 1 
90 1 248 1 207 1 254 1 65 1 153 1 79 1 213 1 144 1 108 1 322 1 55 1 81 1 139 1 
90 2 248 1 345 1 207 1 254 1 65 1 213 1 144 1 108 1 263 1 352 1 322 1 55 2 81 1 139 1 
90 1 55 1 290 1 252 1 265 1 
90 2 248 1 123 1 55 2 290 1 265 1 353 1 254 1 
90 1 55 1 290 1 
90 1 345 1 193 1 213 1 144 1 108 1 262 1 351 1 263 1 352 1 322 1 55 1 265 1 82 1 
248 1 
90 2 248 1 181 1 55 2 290 1 265 1 353 1 254 1 
90 5 248 1 192 1 220 2 62 1 232 1 290 2 291 1 254 1 242 2 15 2 95 1 97 1 27 1 55 5 56 1 265 2 189 1 353 1 
2 1 345 1 293 1 79 1 213 5 144 5 350 1 273 1 263 4 352 4 322 5 309 2 74 1 343 1 
213 2 144 2 108 1 206 1 263 2 322 2 352 2 193 1 
2 1 164 1 180 1 281 1 133 1 235 1 213 2 134 1 144 2 168 1 263 1 352 1 322 1 109 1 309 1 73 1 323 1 58 1 341 1 246 1 
311 1 293 1 
83 1 345 1 293 2 213 2 144 2 350 1 263 1 322 2 352 1 
271 1 73 1 132 1 
180 1 164 1 281 1 133 1 293 1 235 1 213 1 134 1 144 1 168 1 109 1 323 1 58 1 341 1 175 1 246 1 
213 3 144 3 345 1 263 3 322 3 352 3 309 1 293 1 
213 1 144 1 108 1 263 1 322 1 352 1 193 1 
213 1 83 1 144 1 350 1 108 1 345 1 263 1 322 1 352 1 
2 1 90 1 345 2 180 1 207 1 133 1 293 1 235 1 214 1 213 4 134 1 93 1 350 1 96 1 188 1 322 3 352 3 55 1 323 1 58 1 81 1 139 1 82 1 164 1 36 1 281 1 121 1 63 1 105 1 65 1 334 1 144 4 42 1 108 1 226 1 227 1 145 1 168 1 263 3 109 1 309 1 266 2 341 1 246 1 
79 1 213 2 144 2 263 1 322 2 352 1 309 1 293 1 343 1 
90 1 2 1 248 1 345 1 36 1 23 1 207 1 65 1 213 3 350 1 144 3 108 1 263 3 352 3 322 3 55 1 309 2 81 1 139 1 
345 1 213 2 350 1 144 2 271 1 263 2 352 2 322 2 309 1 73 1 
180 1 164 1 281 1 133 1 293 1 235 1 213 1 134 1 144 1 168 1 109 1 323 1 58 1 341 1 246 1 
258 1 180 1 22 1 164 1 281 1 133 1 293 1 235 1 213 1 134 1 144 1 168 1 109 1 323 1 58 1 
326 1 327 1 249 1 318 1 250 1 37 1 268 1 194 2 355 1 132 2 105 1 93 1 334 1 42 4 226 2 145 1 227 1 271 2 115 1 188 1 245 1 73 2 266 2 126 1 
213 1 144 1 108 1 206 1 263 1 322 1 352 1 139 1 
179 1 244 1 
179 1 244 1 
259 1 64 1 
259 1 64 1 
259 1 64 1 
179 1 244 1 152 1 
179 1 244 1 363 1 
257 1 179 2 259 1 244 2 64 1 340 1 
179 1 244 1 152 1 
179 1 244 1 152 1 
179 1 199 1 244 1 
179 1 199 1 244 1 
179 1 199 1 244 1 
112 1 90 1 76 1 179 1 129 1 50 1 293 1 213 2 352 2 322 2 55 1 158 1 140 1 325 1 61 1 329 1 10 1 241 1 67 1 144 2 198 1 263 2 244 1 363 1 
257 1 0 1 325 2 90 2 248 1 179 2 76 3 61 2 129 1 130 1 208 1 10 2 50 2 284 2 297 1 244 2 55 2 29 1 176 1 
20 1 349 1 19 1 
20 1 362 1 19 1 
349 2 362 1 59 1 19 3 51 1 357 1 
349 1 362 1 19 2 51 1 357 1 221 1 
349 1 362 1 19 2 357 1 51 2 
90 5 248 2 249 1 250 1 289 2 268 1 290 1 321 1 291 2 254 1 25 1 255 3 97 1 55 5 138 1 56 3 353 1 158 1 140 1 141 1 328 1 220 1 282 2 242 1 15 1 198 1 245 1 310 1 265 4 366 2 288 1 46 1 
90 9 248 5 249 3 250 3 268 3 290 6 252 5 291 6 254 1 186 1 255 9 5 1 272 1 97 1 55 9 138 2 56 8 189 1 353 1 140 4 141 2 328 3 220 2 354 1 282 6 359 5 242 2 15 2 16 1 245 3 265 7 366 6 148 1 288 1 46 3 
90 3 248 3 249 1 250 1 289 1 268 1 291 2 254 1 25 1 255 4 55 3 138 1 56 3 189 1 140 1 141 1 328 1 220 1 282 2 242 1 15 1 310 1 245 1 265 2 366 2 46 2 
90 4 248 4 249 2 250 2 289 2 268 2 291 4 254 1 186 1 25 1 255 7 272 1 55 4 138 1 56 5 189 1 140 2 141 1 328 2 220 1 354 1 282 4 242 1 15 1 310 1 245 2 265 3 366 4 46 3 
281 1 323 1 58 1 
44 1 58 1 
114 1 58 1 311 1 
58 1 278 1 
85 1 
281 1 58 1 
114 2 187 1 281 1 323 1 58 3 209 1 
326 2 101 1 250 1 37 3 194 4 12 1 285 2 42 7 226 3 70 1 245 1 28 1 324 1 313 1 125 1 160 1 33 1 
326 2 101 1 250 1 37 3 194 4 12 1 285 2 42 7 226 3 70 1 245 1 28 1 324 1 313 1 125 1 160 1 33 1 
326 2 101 1 150 1 250 1 37 3 194 4 12 1 285 2 42 7 226 3 70 1 245 1 28 1 324 1 313 1 125 1 160 1 33 1 
47 1 177 4 75 3 249 3 319 1 250 4 268 3 93 1 188 1 28 2 99 1 324 1 217 1 160 2 302 1 33 2 100 1 101 1 328 3 326 5 37 10 194 16 40 1 12 2 285 3 334 1 42 31 227 1 226 15 70 5 245 4 266 2 313 1 125 1 
101 1 326 3 250 1 37 4 194 5 12 1 285 2 93 2 225 1 334 2 42 9 226 4 227 2 70 1 188 2 245 1 28 1 324 1 217 1 266 4 313 1 342 1 160 1 33 1 
20 1 128 1 180 1 269 1 184 1 133 1 235 1 134 1 294 2 349 1 94 1 218 1 30 2 59 1 191 1 303 1 162 1 280 1 143 1 223 1 197 1 69 1 167 1 71 1 362 1 109 1 43 1 338 1 203 1 19 2 
20 1 128 1 180 1 269 1 184 1 133 1 235 1 134 1 294 3 349 1 94 1 117 1 296 1 218 1 59 1 30 3 191 1 303 1 143 1 106 1 223 2 197 1 69 1 167 1 362 1 109 1 43 1 338 1 203 1 19 2 
20 1 180 1 133 1 235 1 134 1 294 2 349 1 94 1 117 1 218 1 30 2 59 1 191 1 303 1 143 1 106 1 223 2 69 1 197 1 362 1 109 1 43 1 338 1 203 1 19 2 
128 1 180 1 281 1 269 1 133 1 235 1 134 1 185 1 294 1 69 2 197 2 94 2 168 1 337 1 296 1 109 1 201 1 58 1 276 1 218 2 219 1 30 1 161 1 
20 1 128 1 180 1 269 1 184 1 133 1 235 1 134 1 294 1 349 1 94 1 117 1 218 1 30 1 59 1 280 1 143 1 197 1 69 1 167 1 71 1 362 1 109 1 43 1 203 1 19 2 
87 1 
315 2 48 1 229 2 90 5 180 2 233 1 133 1 235 1 134 2 97 1 322 1 55 5 236 4 56 2 274 1 58 1 276 1 139 1 141 1 281 1 331 1 65 1 242 1 15 1 144 1 108 1 109 2 18 1 204 1 344 2 248 2 77 2 78 2 207 1 290 6 291 2 254 1 153 1 79 1 213 1 255 2 298 1 219 1 353 3 299 1 120 1 81 1 220 1 165 2 306 1 168 2 169 1 173 2 127 1 46 2 
48 1 344 1 90 3 181 1 233 1 207 1 290 2 153 1 213 1 79 1 322 1 55 3 236 2 299 1 353 1 81 1 120 1 139 1 65 1 144 1 108 1 169 1 
48 1 90 3 248 1 181 1 233 1 207 1 290 1 254 1 153 1 213 1 79 1 322 1 55 3 236 3 299 1 353 1 81 1 120 1 139 1 65 1 144 1 108 1 169 1 173 1 
315 1 48 1 344 1 90 3 248 1 181 1 233 1 207 1 290 2 254 1 153 1 213 1 79 1 322 1 55 3 236 3 353 1 299 1 81 1 120 1 139 1 65 1 144 1 108 1 169 1 173 1 
315 4 48 1 90 5 229 2 181 1 233 1 135 1 97 1 322 1 98 1 236 6 55 5 56 1 139 1 11 1 65 1 242 1 144 1 15 1 108 1 18 1 149 1 344 4 248 5 77 2 207 1 78 2 290 7 291 1 254 5 153 1 213 1 79 1 353 3 299 1 81 1 120 1 220 1 165 2 306 1 358 1 169 1 173 4 46 2 
315 2 48 1 90 4 229 2 233 1 97 1 322 1 236 4 55 4 56 1 139 1 65 1 242 1 144 1 15 1 108 1 18 1 344 2 248 2 77 2 207 1 78 2 290 4 291 1 254 1 153 1 213 1 79 1 255 2 298 1 299 1 353 2 81 1 120 1 220 1 165 2 306 1 169 1 173 2 46 2 
315 2 48 1 344 2 229 2 90 4 248 1 77 2 78 2 233 1 207 1 290 4 291 1 254 1 153 1 213 1 79 1 135 1 97 1 322 1 98 1 55 4 236 4 56 1 353 2 299 1 81 1 120 1 139 1 220 1 165 2 306 1 65 1 242 1 15 1 144 1 108 1 169 1 173 2 18 1 46 2 149 1 
315 2 48 1 344 2 229 2 90 4 248 1 77 2 78 2 233 1 207 1 290 4 291 1 254 1 153 1 213 1 79 1 135 1 97 1 322 1 98 1 55 4 236 4 56 1 353 2 299 1 81 1 120 1 139 1 220 1 165 2 306 1 65 1 242 1 15 1 144 1 108 1 169 1 173 2 18 1 46 2 149 1 
48 1 90 2 77 1 49 1 78 1 233 1 207 1 291 1 153 1 213 1 79 1 255 1 53 1 97 1 322 1 55 2 236 2 56 1 299 1 238 1 81 1 120 1 139 1 32 1 220 1 306 1 65 1 242 1 15 1 144 1 108 1 169 1 149 1 
315 3 48 1 344 3 229 2 90 4 248 1 77 2 78 2 233 1 207 1 290 5 291 1 254 1 153 1 213 1 79 1 135 1 97 1 98 1 322 1 55 4 236 5 56 1 353 2 299 1 81 1 120 1 139 1 220 1 165 2 306 1 11 1 65 1 242 1 15 1 144 1 108 1 169 1 173 3 18 1 46 2 149 1 
315 3 48 1 344 3 229 2 90 4 248 1 77 2 78 2 233 1 207 1 290 5 291 1 254 1 153 1 213 1 79 1 135 1 97 1 98 1 322 1 55 4 236 5 56 1 353 2 299 1 81 1 120 1 139 1 220 1 165 2 306 1 11 1 65 1 242 1 15 1 144 1 108 1 169 1 173 3 18 1 46 2 149 1 
315 2 48 1 90 4 233 1 53 1 97 1 322 1 236 4 55 4 56 1 139 1 238 2 65 1 242 1 144 1 15 1 108 1 344 2 248 1 77 2 207 1 78 2 290 4 291 1 254 1 153 1 213 1 79 1 255 2 298 1 299 1 353 2 81 1 120 1 34 2 220 1 306 1 169 1 173 2 
250 1 132 1 293 2 93 1 271 1 115 1 188 1 28 1 324 1 101 1 326 2 37 2 194 3 105 1 12 1 285 1 334 1 42 6 227 1 145 1 226 3 245 1 73 1 311 1 266 2 313 1 
177 3 75 3 249 2 319 1 250 1 268 1 24 1 132 11 293 1 92 1 214 1 93 2 271 4 188 2 99 1 6 1 326 1 328 2 37 2 194 8 105 2 195 1 334 2 42 14 226 6 227 2 145 1 70 1 245 2 73 11 266 4 267 1 314 1 
21 1 2 1 180 1 133 1 293 1 235 1 134 1 213 2 214 1 93 1 271 1 322 1 352 1 188 1 323 1 58 1 6 1 7 1 164 1 281 1 194 1 105 1 334 1 144 2 42 2 168 1 227 1 145 1 226 1 263 1 308 1 109 1 309 1 266 2 341 1 267 1 175 1 246 1 
2 1 180 3 182 2 268 2 132 7 133 2 235 2 270 2 134 3 93 3 271 7 188 3 322 1 323 2 324 1 58 2 6 1 101 1 326 4 328 2 281 2 194 10 105 3 12 1 285 1 144 3 334 3 145 3 70 4 109 3 200 1 245 3 73 7 341 2 246 2 249 2 250 3 293 2 214 1 213 3 155 1 117 1 352 1 116 2 28 1 35 1 164 2 37 8 166 2 121 2 42 20 226 10 168 1 227 3 263 1 309 1 266 6 313 1 267 1 
316 1 180 7 183 1 133 4 235 3 134 7 93 2 188 2 322 1 323 1 58 4 276 1 9 1 281 3 194 1 105 2 107 1 196 1 334 2 144 1 145 2 109 6 214 1 213 1 154 1 113 1 115 1 117 1 352 1 219 1 300 1 162 1 260 1 307 1 42 2 226 1 227 2 168 2 170 2 263 1 309 1 266 4 267 1 
345 1 249 1 250 1 268 1 132 1 213 1 93 1 350 1 271 1 188 1 352 1 322 1 6 1 326 1 328 1 37 1 194 1 105 1 334 1 122 1 144 1 42 3 227 1 145 1 226 2 263 1 245 1 73 1 266 2 
249 1 37 1 194 2 132 1 355 1 105 1 93 1 334 1 42 2 145 1 227 1 70 1 271 1 115 1 188 1 245 1 73 1 266 2 
326 1 250 1 37 1 268 1 132 1 105 1 93 1 334 1 42 2 145 1 227 1 226 2 271 1 115 1 188 1 73 1 266 2 126 1 
249 1 250 1 268 1 132 2 93 1 115 1 271 2 188 1 328 1 326 1 37 2 194 2 105 1 334 1 42 4 227 1 145 1 226 2 70 1 245 1 73 2 266 2 
249 1 9 1 37 1 194 2 132 1 355 1 105 1 93 1 334 1 42 2 145 1 227 1 70 1 271 1 188 1 245 1 73 1 266 2 
326 1 9 1 250 1 37 1 268 1 132 1 105 1 93 1 334 1 42 2 145 1 227 1 226 2 271 1 188 1 73 1 266 2 126 1 
249 1 250 1 268 1 132 2 93 1 271 2 188 1 328 1 326 1 9 1 37 2 194 2 105 1 334 1 42 4 227 1 145 1 226 2 70 1 245 1 73 2 266 2 
249 1 250 1 268 1 132 2 93 1 271 2 188 1 328 1 326 1 37 2 194 2 105 1 334 1 42 4 227 1 145 1 226 2 70 1 245 1 73 2 266 2 
180 1 133 1 293 1 235 1 134 1 213 1 214 1 93 1 188 1 323 1 58 1 164 1 281 1 194 1 121 1 105 1 144 1 334 1 42 2 168 1 145 1 227 1 226 1 109 1 266 2 267 1 341 1 246 1 
258 1 180 1 22 1 164 1 281 1 194 1 105 1 133 1 293 1 235 1 214 1 213 1 134 1 93 1 334 1 144 1 42 2 226 1 227 1 145 1 168 1 188 1 109 1 323 1 58 1 266 2 157 1 267 1 
249 1 250 1 268 1 132 2 93 1 271 2 188 1 6 1 328 1 326 1 37 2 194 2 105 1 334 1 42 4 227 1 145 1 226 2 70 1 245 1 73 2 266 2 
249 1 180 1 250 1 182 1 268 1 132 2 133 1 235 1 134 1 213 1 93 1 271 2 188 1 323 1 58 1 162 1 326 1 328 1 164 1 37 2 281 1 194 2 121 1 105 1 144 1 334 1 42 4 226 2 145 1 227 1 70 1 109 1 245 1 73 2 266 2 341 1 246 1 
345 1 249 1 250 1 268 1 346 1 132 1 213 1 93 1 350 1 271 1 188 1 352 1 322 1 6 1 328 1 37 1 194 2 105 1 334 1 144 1 42 3 226 1 227 1 145 1 70 1 263 1 245 1 73 1 266 2 
93 1 334 1 225 1 360 1 231 1 227 1 188 1 266 2 210 1 
93 1 334 1 225 1 360 1 231 1 227 1 188 1 266 2 210 1 
93 1 334 1 225 1 360 1 231 1 227 1 188 1 266 2 210 1 
93 1 334 1 225 1 360 1 231 1 227 1 188 1 266 2 210 1 
93 1 334 1 225 1 360 1 231 1 227 1 188 1 266 2 210 1 
180 2 320 1 183 1 133 1 235 1 134 2 213 2 214 1 93 1 26 1 322 2 188 1 58 1 6 1 301 1 281 1 194 1 105 1 307 1 41 1 334 1 144 2 42 2 145 1 227 1 226 1 170 2 146 1 109 2 266 2 267 1 
20 1 162 1 180 2 234 1 131 1 184 1 133 1 235 1 134 2 349 1 94 1 362 1 117 1 109 2 43 1 59 1 19 2 203 1 159 1 
20 1 180 1 131 1 184 1 133 1 235 1 134 1 349 1 243 1 94 1 362 1 117 1 109 1 43 1 59 1 19 2 203 1 
180 1 281 1 234 1 133 1 88 1 235 1 134 1 94 1 168 1 109 1 58 1 276 1 219 1 161 1 
20 1 180 1 234 1 131 1 184 1 133 1 235 1 134 1 349 1 94 1 362 1 117 1 109 1 43 1 59 1 19 2 203 1 159 1 
335 1 
248 1 95 1 192 1 56 1 311 1 291 1 254 1 
229 1 90 1 248 2 290 1 291 1 254 1 255 1 97 1 55 1 56 1 353 1 220 1 165 1 242 1 15 1 18 1 46 1 
84 1 180 1 220 1 166 1 281 1 251 1 347 1 133 2 235 1 134 1 242 1 15 1 168 1 187 1 97 1 109 1 56 1 323 1 58 2 278 1 
177 1 247 1 90 1 230 1 248 5 75 1 249 2 319 1 250 2 268 2 290 1 291 5 254 2 255 6 54 1 97 2 55 1 56 8 353 1 141 1 328 2 220 2 330 2 282 5 240 1 242 2 15 2 110 1 264 1 245 2 111 1 365 1 366 5 127 1 46 3 
90 1 345 1 250 1 291 2 213 1 351 1 97 1 98 1 352 1 322 1 55 1 28 1 56 2 82 1 220 1 193 1 330 2 12 1 66 1 242 1 144 1 15 1 108 1 262 1 263 1 245 2 365 1 313 1 
248 1 192 1 220 1 291 1 254 1 242 1 15 1 95 1 97 1 56 1 
248 5 328 2 249 2 250 2 268 2 166 1 330 2 291 5 282 5 255 10 245 2 56 5 365 1 366 5 46 5 
90 1 248 1 55 1 290 1 353 1 254 1 
90 3 180 4 290 4 291 2 133 3 235 2 134 4 113 1 97 1 55 3 323 1 274 1 56 2 189 1 58 2 276 1 353 2 219 1 300 1 141 2 220 2 86 1 281 2 261 1 196 1 107 1 242 2 15 2 168 2 171 2 109 4 174 1 204 1 127 2 
345 2 180 1 133 1 293 1 235 1 214 1 134 1 213 3 93 1 96 1 188 1 322 2 352 2 323 1 58 1 82 1 164 1 281 1 121 1 105 1 144 3 334 1 42 1 226 1 227 1 168 1 145 1 263 2 109 1 266 2 341 1 246 1 
141 1 248 4 220 1 282 2 291 2 254 2 285 1 242 1 15 1 255 4 97 1 56 1 366 2 127 1 46 2 
325 1 61 1 172 1 
325 1 61 1 277 1 176 1 67 1 
325 1 61 1 172 1 
325 1 61 1 172 1 
325 1 61 1 39 1 
325 1 61 1 39 1 
325 1 61 1 39 1 
325 1 61 1 
179 1 244 1 
177 1 75 1 230 1 250 1 319 1 93 1 188 1 28 1 324 1 101 1 326 2 37 2 194 4 12 1 285 1 334 1 225 1 42 8 226 4 227 1 245 1 266 2 313 1 
177 2 230 1 75 1 249 1 250 1 319 1 93 2 188 2 28 1 99 1 324 1 326 2 101 1 60 1 328 1 37 3 194 6 12 1 285 1 225 1 334 2 42 11 226 5 227 2 70 1 245 2 266 4 313 1 
177 1 247 1 75 1 230 1 249 2 319 1 250 3 268 2 93 3 54 1 188 3 28 1 324 1 217 1 101 1 60 1 328 2 326 3 37 4 194 9 240 1 12 1 285 1 334 3 225 1 42 19 226 10 227 3 70 1 264 1 245 3 266 6 313 1 
177 1 247 1 75 1 230 1 249 2 319 1 250 2 268 1 93 3 54 1 188 3 28 1 324 1 217 1 101 1 60 1 328 2 326 3 37 5 194 10 240 1 12 1 285 1 334 3 225 1 42 17 226 7 227 3 70 2 264 1 245 3 266 6 313 1 
177 1 75 1 230 1 250 1 319 1 93 1 188 1 28 1 324 1 101 1 326 2 37 2 194 4 12 1 285 1 334 1 225 1 42 8 226 4 227 1 245 1 266 2 313 1 
177 1 247 1 75 1 230 1 249 2 319 1 250 2 268 2 93 1 54 1 188 1 328 2 326 1 37 2 194 6 240 1 334 1 225 1 42 12 226 6 227 1 70 1 264 1 245 2 266 2 
177 1 247 1 230 1 75 1 249 2 319 1 250 2 268 1 93 4 54 1 188 4 28 1 324 1 217 2 101 1 60 1 328 2 326 3 37 5 194 10 240 1 12 1 285 1 334 4 225 1 42 18 226 8 227 4 70 2 264 1 245 3 266 8 313 1 
177 1 247 1 230 1 75 1 249 3 319 1 250 2 268 2 93 4 54 1 188 4 217 2 328 3 326 3 37 6 103 1 194 9 240 1 225 1 334 4 42 16 226 7 227 4 70 3 264 1 245 3 266 8 
101 1 326 3 250 1 37 6 194 3 12 3 42 7 226 4 70 3 245 1 28 3 324 2 313 1 
177 1 247 1 230 1 75 1 249 2 319 1 250 2 268 1 93 4 54 1 188 4 28 1 324 1 217 2 101 1 328 2 326 3 37 4 103 1 194 10 240 1 12 1 285 1 225 1 334 4 42 18 226 8 227 4 70 1 264 1 245 3 266 8 313 1 
326 2 101 1 250 1 37 3 194 4 12 1 285 1 93 2 334 2 42 8 226 4 227 2 70 1 188 2 245 1 28 1 324 1 266 4 217 1 313 1 
285 1 42 6 226 3 326 2 101 1 250 1 245 1 37 2 28 1 194 3 324 1 311 1 313 1 12 1 
326 1 60 1 328 1 249 1 250 1 268 1 37 2 194 2 93 1 334 1 42 4 226 2 227 1 70 1 188 1 245 1 266 2 
177 2 75 1 326 1 328 1 249 1 250 1 319 1 268 1 37 2 194 3 42 7 226 4 70 1 245 1 99 1 
177 2 75 2 249 2 250 3 268 2 92 1 93 2 295 1 188 2 28 2 99 1 324 1 217 2 101 1 328 2 326 5 37 9 194 11 12 2 285 1 334 2 42 23 226 12 227 2 70 4 245 3 266 4 313 1 314 1 
177 1 42 1 226 1 
42 1 75 1 194 1 
60 1 328 1 326 2 249 1 250 1 37 3 268 1 166 1 194 3 93 1 334 1 42 6 227 1 226 3 70 1 188 1 245 1 266 2 
177 1 247 1 75 1 230 1 249 2 319 1 250 2 268 2 93 1 54 1 188 1 328 2 326 1 37 2 194 6 240 1 334 1 225 1 42 12 226 6 227 1 70 1 264 1 245 2 266 2 
326 1 250 1 37 2 194 3 12 1 42 6 226 3 70 1 245 1 28 1 313 1 
326 1 101 1 37 2 194 1 12 1 93 1 295 1 334 1 42 3 226 2 227 1 70 1 188 1 28 1 324 1 217 1 266 2 
326 3 250 2 37 5 194 5 12 2 66 1 93 1 334 1 225 1 42 10 227 1 226 5 70 2 188 1 245 2 28 2 266 2 313 1 
249 1 37 1 194 2 93 1 225 1 334 1 42 2 227 1 70 1 188 1 245 1 266 2 
326 1 328 1 249 1 250 1 268 1 37 2 194 2 93 1 225 1 334 1 42 4 226 2 227 1 70 1 188 1 245 1 266 2 
326 1 37 2 103 1 194 1 12 1 93 3 295 1 225 1 334 3 42 3 226 2 227 3 70 1 188 3 28 1 217 1 266 6 
47 1 177 4 75 3 249 3 319 1 250 5 268 3 93 5 295 1 188 5 28 3 99 1 324 1 217 2 100 1 101 1 60 1 328 3 326 7 37 12 103 1 194 16 40 1 12 3 285 1 334 5 225 1 42 34 226 18 227 5 70 5 245 5 266 10 313 2 
213 1 79 1 144 1 322 1 287 1 293 1 343 1 
178 1 283 1 293 1 79 1 213 1 144 1 137 1 322 1 339 1 190 1 287 1 343 1 
258 1 164 1 180 1 281 1 133 1 293 1 235 1 213 2 134 1 144 2 168 1 263 1 352 1 322 1 109 1 309 1 323 1 58 1 
180 1 281 1 133 2 235 1 134 1 196 1 113 1 4 1 187 1 171 1 109 1 323 1 58 1 
134 1 168 1 180 1 109 1 281 1 58 1 311 1 276 1 133 1 219 1 235 1 
164 1 180 1 281 1 133 1 293 1 235 1 213 2 134 1 144 2 168 1 263 1 352 1 322 1 109 1 309 1 323 1 58 1 341 1 
102 1 164 1 180 1 207 1 281 2 133 1 293 1 235 1 213 2 134 1 144 2 108 1 263 1 44 1 352 2 322 2 171 1 109 1 309 1 323 2 58 3 139 1 341 1 
180 2 207 1 133 1 293 1 235 1 134 2 213 2 322 2 352 2 323 2 58 3 139 1 258 1 164 1 102 1 281 2 144 2 108 1 263 1 109 2 171 1 44 1 309 1 45 1 
90 2 248 1 180 3 290 1 133 1 254 1 235 1 211 1 134 3 114 1 55 2 323 1 58 4 278 1 102 1 281 1 65 1 68 1 168 1 109 3 171 1 44 1 45 1 
90 2 248 1 102 1 180 3 281 1 290 1 133 1 254 1 65 1 235 1 134 3 168 1 114 1 44 1 171 1 109 3 55 2 45 1 323 1 58 4 156 1 278 1 
134 1 1 1 180 1 109 1 133 1 235 1 
316 1 180 6 133 3 235 2 134 6 113 1 154 1 4 1 187 1 117 1 323 1 58 3 162 1 260 1 281 2 307 1 196 1 168 2 170 1 109 5 
180 1 182 1 132 1 133 1 235 1 134 1 93 2 271 1 188 2 322 1 323 1 58 1 324 1 6 1 101 1 326 2 281 1 194 3 105 2 12 1 285 1 144 2 334 2 145 2 109 1 245 1 73 1 341 1 246 1 250 1 293 2 213 2 26 1 116 1 352 1 28 1 162 1 164 1 37 2 121 1 42 6 227 2 226 3 263 1 309 1 266 4 313 1 
90 3 248 1 180 1 151 1 290 2 291 1 254 1 134 1 215 1 95 1 114 1 97 2 55 3 56 1 58 2 156 1 353 1 278 1 192 1 220 2 261 1 65 1 242 2 15 2 168 1 336 1 109 1 265 1 
1 1 162 1 180 2 251 1 281 1 133 2 235 1 134 2 114 1 187 1 109 2 323 1 58 2 
162 1 180 4 281 1 133 1 235 1 134 4 224 1 168 1 109 4 45 1 58 1 276 1 219 1 
180 2 281 1 133 2 235 1 134 2 196 1 107 1 113 1 155 1 171 1 109 2 323 1 58 1 300 1 
20 1 134 1 168 1 362 1 180 1 109 1 133 1 19 1 203 1 235 1 
162 1 180 2 281 1 320 1 133 1 307 1 235 1 134 2 109 2 117 1 58 1 
316 1 162 1 180 5 281 2 133 2 307 1 235 2 134 5 224 1 154 1 168 1 171 1 109 4 58 3 276 1 219 1 
89 1 162 1 180 5 281 2 133 2 307 1 235 2 134 5 224 1 154 1 168 1 171 1 109 4 58 3 276 1 219 1 
292 1 293 1 31 1 256 1 239 1 
90 2 248 1 36 1 207 1 292 1 253 1 293 1 254 1 65 1 212 1 108 1 55 2 57 1 265 1 139 1 81 1 256 2 31 2 239 2 
213 1 41 1 144 1 146 1 322 1 292 1 301 1 31 1 256 1 
212 1 292 1 253 1 
191 1 303 1 338 1 311 1 
191 1 128 1 294 1 303 1 338 1 269 1 30 1 
294 1 69 1 218 1 
128 1 191 1 303 1 280 1 142 2 269 1 14 1 294 3 286 1 3 1 338 1 30 3 
191 1 128 1 223 1 294 2 303 1 338 1 269 1 312 1 30 2 
128 1 20 1 205 1 280 1 269 1 13 1 294 1 349 1 338 1 30 1 19 1 
191 1 128 1 294 1 280 1 338 1 269 1 30 1 
191 2 128 1 294 1 303 1 280 1 269 1 30 1 
191 1 128 2 280 1 305 1 269 2 38 1 294 2 338 1 202 1 30 2 
191 1 128 1 303 1 280 1 269 1 348 1 13 1 294 3 223 2 338 2 237 1 119 1 30 3 
191 1 128 1 20 1 303 1 280 1 269 1 333 1 294 2 223 1 349 1 362 1 338 1 19 2 30 2 59 1 
191 1 128 2 303 1 280 1 269 2 348 1 13 1 222 1 294 4 223 2 338 2 312 1 30 4 
191 1 128 1 294 1 303 1 280 1 338 1 269 1 30 1 
191 2 128 1 303 2 142 1 269 1 348 1 13 1 356 1 14 1 223 2 294 4 3 1 338 3 30 4 
128 1 223 1 294 1 280 1 317 1 91 1 269 1 124 1 30 2 
128 1 191 1 303 1 280 1 142 2 269 1 14 2 294 3 3 1 338 1 228 1 30 3 
279 1 338 2 80 1 332 2 
128 1 294 1 280 1 269 1 275 1 30 1 
191 1 128 1 223 1 294 2 303 1 280 1 338 1 269 1 119 1 30 2 
104 1 
191 1 128 1 294 1 303 1 280 1 338 1 269 1 30 1 
128 1 191 1 303 1 280 1 142 1 269 1 223 1 294 3 338 1 119 1 30 3 
338 1 348 1 13 1 356 1 
191 1 338 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 32 83 22 88 209 322 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 306 48 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (2,264) 26 32 83 22 12 219 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 32 83 22 88 216 232 145 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 32 83 22 88 216 232 145 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 32 83 22 88 216 232 145 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 32 83 22 88 216 232 145 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 32 83 11 82 232 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 306 48 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 32 83 22 88 82 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 32 83 11 82 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 32 83 11 82 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 32 83 11 82 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 32 83 22 88 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 32 83 22 12 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
130 2 205 1 67 5 245 1 309 7 153 3 76 9 159 1 328 1 280 1 314 1 138 1 288 1 362 9 292 1 109 2 125 1 218 1 87 1 200 1 172 4 237 1 222 2 204 1 
130 2 205 1 67 5 245 1 309 7 153 3 76 9 159 1 328 1 280 1 314 1 138 1 288 1 362 9 292 1 109 2 125 1 218 1 87 1 200 1 172 4 237 1 222 2 204 1 
130 2 205 2 243 1 67 5 177 1 225 1 179 1 245 1 309 6 153 3 76 9 159 1 328 1 138 1 288 2 362 9 292 2 195 1 109 2 125 1 218 1 87 1 200 2 172 4 237 1 222 2 320 1 204 1 
130 2 205 2 243 1 67 5 177 1 225 1 179 1 245 1 309 6 153 3 76 9 159 1 328 1 138 1 288 2 362 9 292 2 195 1 109 2 125 1 218 1 87 1 200 2 172 4 237 1 222 2 320 1 204 1 
130 2 205 2 243 1 67 6 177 1 225 1 179 1 245 1 309 7 153 4 76 10 159 1 328 1 138 1 288 2 362 10 292 2 195 1 109 2 125 1 218 1 87 1 200 2 172 5 237 1 222 2 320 1 204 1 
130 2 205 2 243 1 67 4 177 1 225 1 179 1 245 1 309 4 153 2 76 7 159 1 328 1 288 2 362 7 292 2 195 1 109 2 125 1 218 1 87 1 200 2 172 3 237 1 222 1 320 1 204 1 
138 1 130 1 205 1 67 3 292 1 362 4 245 1 309 3 109 1 153 1 218 1 87 1 200 1 76 4 159 1 172 2 237 1 222 2 
130 1 288 1 67 1 362 2 292 1 195 1 245 1 334 1 109 1 218 1 200 1 312 1 76 2 278 1 159 1 320 1 
130 2 288 1 67 2 362 3 245 1 309 1 109 2 153 1 218 1 76 3 159 1 172 1 204 1 
347 1 68 1 121 1 
290 2 121 1 223 1 
242 2 37 2 260 1 341 2 16 2 36 1 129 2 240 2 
242 2 41 1 72 1 307 1 133 1 47 1 247 2 231 1 155 1 157 2 351 1 28 1 29 1 158 1 188 1 357 1 251 1 331 1 140 1 258 2 166 1 259 1 260 1 261 2 124 1 36 1 294 1 15 1 37 2 127 1 202 2 341 2 239 1 16 3 129 3 240 2 64 1 
242 1 367 1 37 1 260 1 132 1 341 1 16 1 183 1 129 1 240 1 
103 1 68 1 271 1 132 1 366 1 201 1 60 1 300 1 121 1 212 1 16 1 268 1 240 1 129 1 
242 1 103 1 68 1 271 1 132 1 366 1 37 1 60 2 201 2 300 1 121 1 341 1 16 1 240 1 129 1 
33 1 337 1 60 1 201 1 196 1 
337 1 146 1 68 1 70 1 60 2 201 2 121 1 196 1 
60 1 201 1 196 1 
242 1 260 1 132 1 183 1 337 1 367 1 37 1 201 1 60 1 339 1 341 1 16 1 240 1 129 1 
121 1 
337 1 68 1 70 1 332 1 60 2 201 2 121 1 196 1 
53 1 191 2 68 1 70 1 315 1 19 2 73 2 44 1 336 1 196 2 337 2 185 1 369 1 201 5 60 5 147 1 121 1 100 1 114 1 
66 1 42 1 258 1 72 1 259 1 261 1 264 1 247 1 351 1 37 1 29 1 158 1 188 1 357 1 239 1 341 1 16 2 240 1 129 2 64 1 
347 1 36 1 
242 1 46 1 36 2 23 1 37 1 341 1 16 2 240 2 129 2 
264 1 26 1 69 1 
115 1 258 1 72 1 259 1 261 1 36 1 247 1 351 1 29 1 188 1 158 1 357 1 239 1 16 1 129 1 64 1 
242 1 66 1 37 3 341 3 16 3 36 1 129 3 240 3 
37 1 132 1 341 1 16 1 183 1 129 1 240 1 
242 1 37 1 132 1 341 1 46 1 16 1 129 1 240 1 23 1 
242 2 41 1 66 1 305 1 42 1 72 1 271 1 307 1 46 1 132 1 47 1 247 1 155 1 157 2 351 1 29 1 28 1 158 1 188 1 357 1 251 1 284 1 103 1 331 1 258 1 166 1 259 1 260 1 261 1 36 1 294 1 366 1 15 1 37 3 201 1 60 1 202 1 300 1 239 1 341 3 16 4 129 4 240 3 64 1 
66 1 27 1 37 1 341 1 16 2 36 1 268 1 129 2 240 2 
242 1 286 1 66 2 103 1 305 1 42 1 271 1 46 1 132 1 366 1 37 3 60 1 201 1 300 1 121 1 341 3 16 3 240 3 129 3 
242 1 66 1 69 1 46 1 264 1 37 2 341 2 16 2 240 2 129 2 
258 1 72 1 259 1 261 1 36 1 247 1 351 1 29 1 188 1 158 1 357 1 239 1 16 1 129 1 64 1 
359 1 258 1 165 1 259 1 261 1 36 1 247 1 351 1 188 1 158 1 357 1 239 1 16 1 129 1 64 1 
173 1 69 2 2 1 325 1 133 2 47 2 24 1 75 1 26 2 155 1 157 2 251 1 32 1 331 1 104 1 141 1 166 1 107 1 294 1 14 1 264 2 15 1 202 4 241 1 
103 1 37 1 226 1 132 1 341 1 16 1 129 1 240 1 
242 1 66 2 42 1 333 1 46 1 36 1 49 1 27 1 37 4 341 4 16 5 268 1 240 5 129 5 
37 2 226 1 132 1 341 2 16 2 183 1 129 2 240 2 
7 1 277 1 
7 1 277 1 
190 1 20 1 
190 1 20 1 
190 1 20 1 
7 1 228 1 277 1 
308 1 7 1 277 1 
190 1 353 1 211 1 20 1 7 2 277 2 
7 1 228 1 277 1 
7 1 228 1 277 1 
18 1 7 1 277 1 
18 1 7 1 277 1 
18 1 7 1 277 1 
150 1 269 3 287 1 78 2 215 1 142 2 291 1 335 2 364 1 275 2 277 2 327 1 317 1 201 2 60 2 211 1 121 1 63 2 7 2 
269 1 3 1 308 1 180 1 275 1 277 1 31 1 250 1 7 1 78 1 215 1 164 1 142 1 36 1 37 2 60 1 201 1 113 1 341 2 63 1 16 2 240 2 129 2 40 1 
200 1 205 1 292 1 
200 1 312 1 292 1 
205 2 200 3 312 1 221 1 238 1 303 1 
205 1 200 2 312 1 238 1 144 1 303 1 
205 1 200 2 312 1 238 2 303 1 
173 1 68 1 70 1 71 1 178 1 19 1 73 1 119 2 249 2 31 1 250 1 121 2 32 1 53 3 191 1 55 1 192 2 164 1 315 2 290 3 83 1 84 1 105 1 107 1 196 1 337 4 60 5 201 5 267 1 241 1 223 1 114 1 
242 1 68 1 132 1 183 1 121 1 33 1 260 1 196 1 86 1 337 2 298 1 367 1 368 1 37 1 60 2 201 2 339 1 341 1 16 1 129 1 240 1 
173 1 68 1 71 1 19 1 73 1 119 2 185 1 249 2 121 3 32 1 53 3 55 1 191 1 192 1 164 1 315 2 290 4 83 1 84 1 107 1 337 2 60 3 201 3 267 1 241 1 223 2 
173 2 68 1 71 1 19 1 73 1 244 1 119 4 185 1 249 4 121 4 137 1 32 2 53 5 191 1 55 1 192 2 164 2 57 1 315 4 290 7 83 2 84 1 107 2 337 3 60 4 201 4 267 1 241 2 223 3 
263 1 347 1 351 1 
351 1 58 1 
59 1 
351 1 158 1 
263 2 199 1 351 3 158 1 259 1 274 1 
351 1 158 1 259 1 
351 1 39 1 
253 1 104 2 342 1 325 3 10 2 107 1 133 4 47 3 262 1 202 7 329 1 5 1 203 1 301 1 99 1 149 1 241 1 
253 1 104 2 342 1 325 3 10 2 107 1 133 4 47 3 262 1 202 7 329 1 5 1 203 1 301 1 99 1 149 1 241 1 
253 1 104 2 342 1 224 1 325 3 10 2 107 1 133 4 47 3 262 1 202 7 329 1 5 1 203 1 301 1 99 1 149 1 241 1 
322 1 253 1 206 1 83 1 10 1 107 1 133 4 22 1 47 1 295 1 209 1 88 1 202 5 149 2 32 1 
1 1 325 5 181 1 133 6 47 5 155 1 157 2 233 1 329 1 5 1 99 1 253 1 331 1 104 3 162 1 166 1 10 1 107 2 294 1 262 1 202 11 203 1 301 2 149 1 241 2 
130 1 205 1 67 1 323 1 176 1 272 1 245 1 118 1 309 1 247 1 25 1 184 1 312 1 76 2 159 1 136 1 357 1 101 1 288 1 289 1 258 1 292 1 261 1 362 2 109 1 218 1 200 2 221 1 319 1 239 1 
130 1 205 1 67 1 323 1 176 1 43 1 272 1 74 1 118 1 309 2 247 1 184 1 352 1 312 1 76 3 159 1 136 1 357 1 101 1 288 1 258 1 292 1 261 1 362 3 109 1 218 1 200 2 221 1 319 1 239 1 
205 1 67 1 323 1 176 1 43 1 272 1 309 2 247 1 184 1 352 1 312 1 76 2 159 1 357 1 101 1 288 1 258 1 261 1 362 2 292 1 218 1 200 2 221 1 319 1 239 1 
0 1 101 2 130 1 54 1 288 2 131 1 163 1 258 1 362 1 261 1 272 2 74 1 109 1 170 1 247 1 351 1 76 1 158 1 319 2 357 1 239 1 64 1 17 1 
130 1 205 1 323 1 176 1 272 1 245 1 118 1 247 1 184 1 352 1 312 1 76 1 136 1 357 1 101 1 288 1 289 1 258 1 292 1 261 1 362 1 109 1 200 2 221 1 319 1 239 1 
96 1 
68 1 151 3 70 2 324 1 271 1 19 1 343 2 73 1 132 1 4 1 326 2 229 5 230 1 94 1 311 1 187 3 95 1 121 1 6 1 212 1 234 2 53 1 102 1 103 1 191 1 257 1 315 1 81 2 196 5 13 3 366 1 236 1 60 4 201 4 128 1 300 1 16 1 129 1 240 1 268 1 223 2 114 1 
68 1 151 3 70 2 324 1 271 1 19 1 343 2 73 1 132 1 4 1 326 2 229 5 230 1 94 1 311 1 187 3 95 1 121 1 6 1 212 1 234 2 53 1 102 1 103 1 191 1 257 1 315 1 81 2 196 5 13 3 366 1 236 1 60 4 201 4 128 1 300 1 16 1 129 1 240 1 268 1 223 2 114 1 
271 1 324 1 132 1 4 1 326 2 229 4 230 1 186 2 187 2 95 1 102 1 53 1 103 1 8 1 191 1 290 2 196 4 13 2 201 4 60 4 300 1 16 1 240 1 114 1 151 2 68 1 70 2 19 1 73 1 343 2 248 2 121 1 212 1 257 1 315 1 366 1 89 1 129 1 268 1 
191 1 306 1 70 1 315 1 258 1 19 1 73 1 261 1 196 2 197 1 48 1 247 1 201 2 60 2 64 1 114 1 
70 1 324 1 271 1 132 1 4 1 229 2 187 1 95 1 212 1 102 1 103 1 257 1 332 1 196 2 366 1 60 3 201 3 300 1 16 1 129 1 240 1 268 1 
68 1 70 1 324 1 271 1 132 1 4 1 229 3 95 1 121 1 212 1 102 1 103 1 257 1 332 1 196 1 13 1 366 1 60 3 201 3 300 1 16 1 129 1 240 1 268 1 
151 1 68 1 70 1 324 1 271 1 132 1 4 1 229 3 187 1 95 1 121 1 212 1 102 1 103 1 332 1 257 1 196 2 13 1 366 1 60 3 201 3 300 1 16 1 129 1 240 1 268 1 
271 1 324 1 132 1 4 1 326 2 229 6 230 1 94 1 187 4 95 1 6 1 234 2 102 1 53 1 103 1 191 1 332 1 196 7 13 4 236 1 201 5 60 5 300 1 16 1 240 1 114 1 151 4 68 5 70 3 19 1 73 1 343 2 208 1 311 1 121 5 212 1 257 1 315 1 81 2 366 1 128 1 129 1 268 1 223 2 
271 1 324 1 132 1 4 1 326 2 229 4 230 1 187 2 95 1 234 2 102 1 53 1 103 1 191 1 290 2 196 4 13 2 201 4 60 4 300 1 16 1 240 1 114 1 151 2 68 1 70 2 19 1 73 1 343 2 121 2 212 1 257 1 315 1 81 2 366 1 89 1 128 1 129 1 268 1 223 2 
68 1 151 2 70 2 324 1 271 1 19 1 343 2 73 1 132 1 4 1 326 2 229 4 230 1 311 1 187 2 95 1 121 1 6 1 212 1 234 2 53 1 102 1 103 1 191 1 257 1 315 1 81 2 196 4 13 2 366 1 236 1 60 4 201 4 128 1 300 1 16 1 129 1 240 1 268 1 223 2 114 1 
68 1 151 2 70 2 324 1 271 1 19 1 343 2 73 1 132 1 4 1 326 2 229 4 230 1 311 1 187 2 95 1 121 1 6 1 212 1 234 2 53 1 102 1 103 1 191 1 257 1 315 1 81 2 196 4 13 2 366 1 236 1 60 4 201 4 128 1 300 1 16 1 129 1 240 1 268 1 223 2 114 1 
68 1 151 2 70 2 324 1 271 1 19 1 343 2 73 1 132 1 4 1 326 2 229 4 230 1 248 2 349 1 186 2 311 1 187 2 95 1 121 1 212 1 53 1 102 1 103 1 8 1 191 1 257 1 315 1 290 2 196 4 13 2 366 1 60 4 201 4 300 1 112 1 16 1 129 1 240 1 268 1 114 1 
69 1 325 2 133 3 47 3 347 1 26 1 155 1 157 2 329 1 5 1 99 1 251 1 331 1 104 2 166 1 10 1 107 1 294 1 36 2 262 1 264 1 14 1 15 1 202 6 203 1 241 1 
331 1 206 1 166 1 83 1 12 1 107 1 133 3 22 1 294 1 295 1 47 1 264 4 15 1 26 4 155 1 157 2 219 1 202 4 160 1 32 1 251 1 
115 1 41 1 66 1 42 1 69 1 72 1 133 1 47 1 247 1 155 1 157 2 351 1 29 1 158 1 188 1 357 1 160 1 251 1 331 1 140 1 258 1 259 1 166 1 261 1 106 1 36 1 294 1 169 1 15 1 111 1 37 1 202 2 239 1 341 1 16 2 64 1 129 2 240 1 
41 1 173 2 42 1 325 8 133 10 47 10 188 2 329 1 5 1 99 1 104 4 331 3 140 1 10 1 107 3 294 3 15 3 202 20 203 1 301 4 62 1 341 1 239 2 16 3 64 1 240 1 241 3 66 1 69 7 72 2 307 2 247 3 26 7 155 3 157 6 352 1 351 2 29 2 30 1 158 2 120 1 357 2 313 2 160 1 251 3 32 2 123 2 258 3 166 3 259 2 261 3 83 2 363 2 36 2 262 1 316 2 264 7 37 1 129 3 
0 1 41 1 66 1 131 1 344 1 133 1 47 1 25 1 247 8 154 1 155 2 157 4 352 1 351 3 158 2 357 2 161 1 251 2 331 2 256 1 140 1 258 8 166 2 261 7 124 2 294 2 14 1 126 1 15 2 297 1 37 1 90 1 202 2 341 1 239 2 16 1 129 1 240 1 64 2 
242 1 173 1 69 1 325 1 46 1 133 1 276 1 47 2 26 1 155 1 157 2 160 1 251 1 32 1 104 1 331 1 166 1 83 1 107 1 294 1 264 1 15 1 37 1 202 3 341 1 16 1 240 1 129 1 241 1 
331 1 69 1 141 1 325 1 166 1 107 1 133 2 294 1 264 1 14 1 15 1 26 1 155 1 157 2 202 2 301 1 251 1 32 1 
173 1 104 1 331 1 69 1 325 1 166 1 294 1 47 2 264 1 14 1 15 1 75 1 26 1 155 1 157 2 202 2 251 1 241 1 
173 1 69 2 325 2 133 2 47 2 26 2 155 1 157 2 32 1 251 1 331 1 104 1 166 1 83 1 107 1 294 1 14 1 264 2 15 1 202 4 301 1 241 1 
331 1 69 1 141 1 325 1 344 1 166 1 107 1 133 2 294 1 264 1 15 1 26 1 155 1 157 2 202 2 301 1 251 1 32 1 
173 1 104 1 331 1 69 1 325 1 344 1 166 1 294 1 47 2 264 1 15 1 75 1 26 1 155 1 157 2 202 2 251 1 241 1 
173 1 69 2 344 1 325 2 133 2 47 2 26 2 155 1 157 2 32 1 251 1 331 1 104 1 166 1 83 1 107 1 294 1 264 2 15 1 202 4 301 1 241 1 
173 1 104 1 331 1 69 2 325 2 166 1 83 1 107 1 133 2 294 1 47 2 264 2 15 1 26 2 155 1 157 2 202 4 301 1 241 1 251 1 32 1 
41 1 72 1 307 1 133 1 47 1 247 1 155 1 157 2 351 1 29 1 158 1 188 1 357 1 251 1 331 1 140 1 258 1 259 1 166 1 261 1 36 1 294 1 15 1 202 2 239 1 16 1 64 1 129 1 
41 1 133 1 47 1 247 1 155 1 157 2 351 1 158 1 188 1 357 1 251 1 359 1 331 1 140 1 9 1 258 1 165 1 259 1 166 1 261 1 36 1 294 1 15 1 202 2 239 1 16 1 64 1 129 1 
173 1 69 2 325 2 133 2 47 2 26 2 155 1 157 2 160 1 32 1 251 1 331 1 104 1 166 1 83 1 107 1 294 1 264 2 15 1 202 4 301 1 241 1 
173 1 69 2 72 1 325 2 307 1 133 2 47 2 247 1 25 1 26 2 155 1 157 2 351 1 29 1 188 1 158 1 357 1 32 1 251 1 104 1 331 1 258 1 259 1 166 1 261 1 83 1 363 1 107 1 294 1 264 2 15 1 202 4 301 1 239 1 16 1 129 1 241 1 
242 1 173 1 69 1 325 1 345 1 46 1 133 2 47 1 26 1 155 1 157 2 160 1 251 1 32 1 331 1 166 1 83 1 107 1 294 1 264 1 15 1 37 1 202 3 301 1 341 1 16 1 240 1 129 1 241 1 
331 2 216 1 206 1 166 2 83 1 107 1 133 4 181 1 22 1 294 2 295 1 47 2 145 1 110 1 155 2 157 4 88 1 232 1 202 6 266 1 321 1 32 1 
331 2 216 1 206 1 166 2 83 1 107 1 133 4 181 1 22 1 294 2 295 1 47 2 145 1 110 1 155 2 157 4 88 1 232 1 202 6 266 1 321 1 32 1 
206 1 325 1 181 1 133 7 22 1 47 4 155 1 157 2 232 1 329 1 5 1 99 1 32 1 104 1 331 1 216 1 166 1 10 1 83 1 107 2 294 1 295 1 262 1 145 1 110 1 88 1 202 11 266 1 203 1 241 1 
331 2 216 1 206 1 166 2 83 1 107 1 133 4 181 1 22 1 294 2 295 1 47 2 145 1 110 1 155 2 157 4 88 1 232 1 202 6 266 1 321 1 32 1 
173 1 1 1 91 1 206 2 325 1 92 1 181 1 133 9 47 8 155 1 157 2 232 2 213 1 32 2 104 1 331 1 216 2 166 1 11 1 82 1 83 2 107 2 294 1 295 2 145 1 110 1 88 2 202 17 266 2 241 1 
65 1 287 1 78 1 142 1 211 1 364 1 7 1 63 1 275 1 277 1 
308 1 113 1 
285 1 338 1 175 1 78 1 142 1 7 1 63 1 275 1 277 1 
269 2 287 1 215 1 78 1 142 1 291 1 335 1 364 1 275 1 277 1 327 1 317 1 201 1 60 1 211 1 121 1 63 1 7 1 
269 2 287 1 215 1 78 1 142 1 291 1 335 1 364 1 275 1 277 1 327 1 317 1 201 1 60 1 211 1 121 1 63 1 7 1 
269 2 287 1 215 1 78 1 142 1 291 1 335 1 364 1 275 1 277 1 327 1 317 1 201 1 60 1 211 1 121 1 63 1 7 1 
353 1 355 1 228 1 
353 1 355 1 228 1 
18 1 246 1 
353 1 18 1 246 1 
3 1 40 1 
269 1 3 1 45 1 308 1 180 1 275 1 277 1 327 1 31 1 250 1 7 1 78 1 164 1 142 1 335 1 36 1 337 1 37 2 60 1 201 1 113 1 341 2 16 2 63 1 129 2 40 1 240 2 
355 1 228 1 
353 1 18 1 246 1 
41 1 133 1 47 1 247 2 155 1 157 2 351 1 158 1 357 1 97 1 160 1 189 1 161 1 251 1 331 1 256 1 140 1 258 2 166 1 261 2 124 2 108 1 294 1 15 1 265 1 61 1 202 2 239 1 16 2 129 2 240 2 
205 1 176 1 258 2 292 1 261 2 365 1 247 2 25 1 184 1 200 2 156 1 312 1 352 1 221 1 319 1 356 1 357 1 136 1 239 1 
205 1 176 1 258 1 292 1 261 1 93 1 365 1 247 1 184 1 200 2 312 1 352 1 221 1 319 1 136 1 357 1 239 1 
0 1 54 1 131 1 258 1 261 1 247 1 156 1 351 1 158 1 319 1 357 1 239 1 52 1 64 1 
205 1 176 1 258 1 292 1 261 1 365 1 247 1 184 1 200 2 156 1 312 1 352 1 221 1 319 1 356 1 136 1 357 1 239 1 
252 1 
242 2 41 1 72 1 307 1 47 1 247 1 155 1 157 2 351 1 28 1 29 1 188 1 158 1 357 1 251 1 331 1 258 1 260 1 259 1 166 1 261 1 36 1 294 1 15 1 37 2 202 1 341 2 239 1 16 3 64 1 129 3 240 2 
53 1 191 1 68 2 315 2 19 1 290 4 73 1 10 1 197 1 119 2 249 2 121 4 267 1 223 2 114 1 
347 1 53 1 68 1 369 1 315 1 121 1 100 1 
68 1 70 1 19 1 73 1 121 2 234 1 53 1 191 1 315 1 290 1 81 1 196 1 201 1 60 1 128 1 223 1 114 1 
173 2 273 2 274 1 330 2 100 1 53 9 191 4 193 2 58 3 290 12 197 1 196 5 107 2 296 2 299 1 201 5 60 5 239 4 64 1 114 4 241 2 68 2 70 3 19 4 73 4 207 1 152 1 25 1 247 3 119 6 249 6 351 10 354 2 158 3 357 3 121 8 32 2 34 2 255 2 123 2 360 1 258 3 315 8 79 1 259 3 261 3 83 2 85 2 263 2 366 2 369 1 267 2 39 2 223 6 
173 2 68 1 91 1 70 1 206 1 19 2 73 2 92 1 273 1 119 5 249 5 121 4 213 1 32 2 53 7 191 2 143 1 315 4 290 6 11 1 82 1 83 2 196 1 107 2 295 1 88 1 60 1 201 1 114 2 223 3 241 2 
242 1 19 1 73 1 132 1 183 1 273 2 354 1 329 1 5 1 53 2 191 1 162 1 315 2 260 1 107 2 367 1 236 1 37 1 60 1 201 1 339 1 203 1 341 1 16 1 129 1 240 1 114 1 241 1 
53 1 191 1 68 1 315 1 19 1 73 1 369 1 121 1 100 1 114 1 
173 2 53 5 123 1 315 5 290 10 83 2 107 2 273 2 119 5 249 5 354 1 121 5 32 2 223 5 241 2 
68 1 60 1 201 1 70 1 121 1 196 1 
191 1 306 1 70 1 315 1 258 1 79 1 19 1 73 1 261 1 196 2 197 1 48 1 247 1 60 1 201 1 64 1 114 1 
350 1 78 1 142 1 
287 1 78 1 142 1 227 1 40 1 
350 1 78 1 142 1 
350 1 78 1 142 1 
139 1 78 1 142 1 
139 1 78 1 142 1 
139 1 78 1 142 1 
78 1 142 1 
7 1 277 1 
206 1 325 2 181 1 133 4 47 4 155 1 157 2 329 1 5 1 99 1 331 1 104 2 166 1 10 1 82 1 107 1 294 1 295 1 262 1 88 1 202 8 203 1 241 1 
331 2 206 1 166 2 83 1 82 1 107 1 133 3 181 1 22 1 310 1 294 2 295 1 47 1 155 2 157 4 88 1 202 4 32 1 
173 2 1 1 91 1 206 1 325 5 92 1 181 1 133 10 310 1 47 11 155 2 157 4 329 1 5 1 99 1 213 1 32 2 331 2 104 3 162 1 166 2 82 1 83 2 11 1 107 4 294 2 262 1 295 1 88 1 202 21 203 1 301 2 241 4 
173 1 104 2 331 1 1 1 91 1 206 1 325 2 166 1 11 1 83 2 82 1 92 1 107 2 133 6 181 1 294 1 47 5 295 1 155 1 157 2 88 1 202 11 213 1 241 1 32 2 
206 1 325 2 181 1 133 4 47 4 155 1 157 2 329 1 5 1 99 1 331 1 104 2 166 1 10 1 82 1 107 1 294 1 295 1 262 1 88 1 202 8 203 1 241 1 
173 2 1 1 91 1 206 1 325 3 92 1 181 1 133 6 47 7 155 1 157 2 213 1 32 2 331 1 104 2 166 1 82 1 83 2 11 1 107 2 294 1 295 1 88 1 202 13 301 1 241 2 
173 1 1 1 91 1 206 1 325 1 92 1 181 1 133 6 310 1 47 5 155 2 157 4 213 1 32 2 331 2 104 1 166 2 11 1 82 1 83 2 107 2 294 2 295 1 88 1 202 11 241 1 
173 1 1 2 91 1 206 1 325 4 92 1 181 1 133 7 47 5 155 2 157 4 213 1 32 2 331 2 104 2 166 2 11 1 82 1 83 2 107 2 294 2 295 1 88 1 202 12 301 2 321 1 241 1 
104 3 325 6 107 1 133 3 47 4 262 2 202 7 329 3 5 3 301 3 203 1 99 1 241 1 
173 1 1 1 91 1 206 1 325 1 92 1 181 1 133 6 47 5 155 2 157 4 213 1 32 2 331 2 104 1 166 2 11 1 82 1 83 2 107 2 294 2 295 1 88 1 202 11 321 1 241 1 
1 1 325 4 133 5 47 5 155 1 157 2 329 1 5 1 99 1 331 1 104 2 162 1 166 1 107 2 294 1 262 1 202 10 301 2 203 1 241 2 
104 2 325 2 10 1 107 1 133 3 47 3 262 1 347 1 202 6 329 1 5 1 203 1 99 1 241 1 
173 1 104 1 331 1 325 2 166 1 83 1 107 1 133 2 310 1 294 1 47 2 155 1 157 2 202 4 301 1 241 1 32 1 
88 1 202 4 206 1 83 1 107 1 133 3 22 1 32 1 295 1 47 1 
202 4 206 1 83 1 12 1 107 1 133 3 22 1 32 1 295 1 47 1 
202 1 206 1 47 1 
202 1 133 1 295 1 
173 1 331 1 123 1 104 2 166 1 325 3 83 1 107 1 133 3 294 1 310 1 47 3 155 1 157 2 202 6 301 1 32 1 241 1 
173 2 1 1 91 1 206 1 325 3 92 1 181 1 133 6 47 7 155 1 157 2 213 1 32 2 331 1 104 2 166 1 82 1 83 2 11 1 107 2 294 1 295 1 88 1 202 13 301 1 241 2 
104 1 325 2 107 1 133 3 47 3 202 6 329 1 5 1 203 1 301 1 241 1 
1 1 202 1 302 1 47 1 
331 1 104 3 162 1 166 1 325 5 181 1 133 5 107 2 294 1 47 5 155 1 157 2 202 10 329 2 5 2 301 2 203 1 241 2 
331 1 166 1 325 1 181 1 107 1 133 2 294 1 155 1 157 2 202 2 301 1 32 1 
173 1 104 1 331 1 325 2 166 1 83 1 181 1 107 1 133 2 294 1 47 2 155 1 157 2 202 4 301 1 241 1 32 1 
331 2 104 1 1 1 166 2 325 2 181 1 133 1 294 2 47 2 155 2 157 4 202 3 329 1 5 1 301 1 302 1 321 1 
173 2 1 1 206 3 116 1 325 6 181 1 133 12 310 1 47 12 209 1 155 3 157 6 329 1 5 1 99 1 32 2 282 1 104 3 331 3 162 1 166 3 83 2 107 4 294 3 262 1 295 3 88 1 202 24 203 1 301 3 321 1 241 4 
171 1 27 1 16 1 36 1 129 1 240 1 268 1 
293 1 36 1 171 1 50 1 27 1 38 1 340 1 77 1 16 1 268 1 240 1 129 1 
0 1 347 1 247 1 131 1 351 1 158 1 258 1 357 1 261 1 239 1 64 1 
66 1 258 1 259 1 261 1 36 1 247 1 351 1 37 1 29 1 158 1 188 1 357 1 239 1 341 1 16 2 240 1 129 2 64 1 
34 1 103 1 66 1 360 1 271 1 258 1 259 2 261 1 132 1 36 1 247 1 351 3 37 1 29 1 158 2 188 1 357 1 239 1 341 2 39 1 16 2 240 2 129 2 
34 1 103 1 66 1 360 1 271 1 258 2 165 1 259 2 261 2 132 1 36 1 247 2 351 3 37 1 158 2 188 1 357 1 239 1 341 2 39 1 16 2 240 2 129 2 122 1 
34 1 68 1 360 1 258 3 259 1 80 1 58 1 261 3 196 1 168 1 366 1 263 1 247 3 351 4 201 2 60 2 158 1 121 1 357 1 239 1 39 1 64 1 122 1 
34 1 68 1 360 1 258 3 259 1 58 1 261 3 196 1 296 1 366 1 263 1 247 3 351 4 201 2 60 2 158 1 121 1 357 1 239 1 39 1 64 1 122 1 
247 1 258 1 90 1 357 1 261 1 239 1 
256 1 258 7 259 1 261 6 124 1 274 1 25 1 126 1 247 7 297 1 154 1 352 1 351 3 318 1 90 1 158 2 357 2 98 1 239 3 281 1 64 2 
66 1 69 1 72 1 325 2 307 1 133 3 47 3 25 1 247 1 26 1 155 2 157 4 351 1 29 1 158 1 188 1 329 1 5 1 357 1 99 1 160 1 251 2 104 2 331 2 258 1 259 1 166 2 10 1 261 1 363 1 107 1 36 2 294 2 262 1 264 1 316 1 15 2 265 1 37 1 202 6 203 1 239 1 341 1 16 2 129 2 240 1 241 1 
68 1 70 1 19 2 73 2 247 1 351 2 330 1 121 1 100 1 53 1 191 2 255 1 315 1 258 1 79 1 58 1 261 1 85 1 196 2 296 1 263 1 366 1 337 1 369 1 60 3 201 3 64 1 114 2 
258 2 259 1 261 2 274 1 263 1 152 1 25 1 247 2 351 2 90 1 158 1 357 1 239 2 
0 1 56 1 131 1 258 4 261 4 247 4 25 1 351 1 158 1 357 1 239 1 64 1 122 1 
360 1 214 1 258 2 259 1 261 2 247 2 351 1 135 1 158 1 120 1 357 1 98 1 239 2 281 1 
247 1 200 1 312 1 176 1 258 1 292 1 357 1 261 1 239 1 64 1 
247 2 25 1 351 1 256 1 352 1 158 1 258 2 357 1 97 1 261 2 239 1 
0 1 56 1 131 1 360 1 256 1 258 5 261 4 247 5 25 1 297 1 154 1 351 3 158 2 357 2 239 2 64 1 
0 1 56 1 131 1 360 1 256 1 258 5 261 4 247 5 25 1 154 1 351 3 158 2 148 1 357 2 239 2 64 1 
66 1 258 1 165 1 259 1 261 1 36 1 247 1 351 1 37 1 158 1 188 1 357 1 239 1 341 1 16 2 240 1 129 2 64 1 
360 1 258 1 259 1 261 1 274 1 247 1 351 1 318 1 158 1 357 1 98 1 239 2 281 1 
346 1 35 1 61 1 117 1 16 1 129 1 240 1 189 1 108 1 
358 1 279 1 117 1 
346 1 348 1 35 1 117 1 36 1 
358 1 103 1 35 2 305 1 68 1 271 1 117 1 132 1 36 1 366 1 346 2 337 1 348 2 210 1 201 2 60 2 279 1 300 1 121 1 
125 1 218 1 130 1 67 1 76 3 159 1 362 3 195 1 245 1 309 1 109 1 
134 1 153 1 67 1 172 1 
218 1 67 1 
347 1 218 1 67 1 159 1 
218 1 130 1 67 1 76 1 159 1 362 1 109 1 
288 1 76 1 272 1 
130 1 67 1 270 1 362 3 361 1 245 1 195 2 235 1 109 1 218 1 76 3 159 1 
218 1 130 1 67 1 76 2 159 1 222 1 362 2 309 1 109 1 
87 1 130 1 200 1 205 1 67 1 76 1 172 1 292 1 362 1 245 1 109 1 
218 1 130 1 67 1 76 1 362 1 245 1 109 1 
218 2 130 1 76 1 159 1 362 1 245 1 109 1 
304 1 218 1 130 2 220 1 67 1 76 2 362 2 245 1 167 1 109 2 
130 1 67 2 362 3 245 1 309 2 109 1 125 1 153 1 218 1 76 3 159 1 172 1 328 1 
130 1 205 1 174 1 67 1 362 2 292 1 245 1 309 1 109 1 218 1 200 2 312 1 76 2 159 1 221 1 
138 1 130 2 67 2 362 4 245 1 309 2 109 2 153 1 218 1 76 4 159 1 172 1 222 1 
218 1 130 1 67 1 76 1 159 1 362 1 245 1 109 1 
130 1 67 3 270 1 361 1 362 4 195 1 309 2 109 1 134 1 153 1 218 2 76 4 159 2 172 1 
218 1 130 1 67 1 76 2 159 1 21 1 362 2 217 1 245 1 280 1 309 1 109 1 
130 1 254 1 67 1 270 2 361 1 362 3 245 1 195 2 109 1 218 1 76 3 159 1 
67 2 51 2 198 1 182 1 
130 1 194 1 76 1 362 1 245 1 109 1 
125 1 218 1 130 1 67 1 76 2 159 1 362 2 245 1 309 1 109 1 
283 1 
218 1 130 1 67 1 76 1 159 1 362 1 245 1 109 1 

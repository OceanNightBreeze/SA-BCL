#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 162 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 282 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 67 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (48,322) (48,322) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 115 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 245 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 69 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 272 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 272 144 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 192 319 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 175 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 175 215 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 143 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 143 251 264 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 143 251 264 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 143 251 197 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 175 215 29 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 175 215 29 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 143 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException (88,248) 44 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (48,322) (48,322) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (48,322) (48,322) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (48,322) (48,322) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 115 314 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 162 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 154 2 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 261 257 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (126,243) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (8,183) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (178,259) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (88,248) (88,248) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (88,248) 44 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (88,248) (88,248) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
43 6 249 5 85 2 83 2 130 1 91 1 177 1 134 1 137 2 227 4 311 1 15 2 149 1 63 1 232 1 318 2 152 2 233 1 158 2 116 1 288 9 324 1 32 1 292 9 332 1 120 1 296 1 81 3 
43 6 249 5 85 2 83 2 130 1 91 1 177 1 134 1 137 2 227 4 311 1 15 2 149 1 63 1 232 1 318 2 152 2 233 1 158 2 116 1 288 9 324 1 32 1 292 9 332 1 120 1 296 1 81 3 
43 7 249 6 85 2 83 2 130 1 91 1 177 1 134 1 137 2 227 5 311 1 15 2 149 1 63 1 232 1 318 2 152 2 233 1 158 2 116 1 288 10 324 1 32 1 292 10 332 1 120 1 296 1 81 4 
43 4 249 4 85 2 83 2 130 1 91 1 177 1 134 1 137 1 227 3 15 2 149 1 63 1 232 1 318 2 152 2 233 1 158 2 116 1 288 7 324 1 32 1 292 7 332 1 120 1 296 1 81 2 
43 3 249 3 318 1 83 1 85 1 152 1 130 1 91 1 158 1 137 2 288 4 324 1 227 2 32 1 311 1 292 4 296 1 81 1 
249 1 232 1 83 1 85 1 318 1 91 1 160 1 158 1 134 1 288 2 324 1 15 1 313 1 292 2 296 1 271 1 
43 1 249 2 83 2 85 2 91 1 177 1 288 3 324 1 227 1 15 1 292 3 296 1 81 1 
43 7 249 5 85 2 83 2 130 1 91 1 177 1 137 2 227 4 15 1 311 1 106 1 318 1 23 1 233 1 152 1 158 1 288 9 324 1 32 1 292 9 120 1 296 1 81 3 
43 7 249 5 85 2 83 2 130 1 91 1 177 1 137 2 227 4 15 1 311 1 106 1 318 1 23 1 233 1 152 1 158 1 288 9 324 1 32 1 292 9 120 1 296 1 81 3 
162 1 
26 1 306 1 203 1 286 1 50 1 325 1 141 1 103 1 209 1 102 1 216 1 60 1 
92 1 203 1 286 2 184 1 50 1 325 1 141 1 101 1 103 1 209 1 102 2 216 1 60 1 
102 1 94 1 286 1 
102 1 94 1 286 1 
102 1 286 1 
102 1 94 1 286 1 
102 1 94 1 286 1 
174 1 198 1 75 1 102 2 93 1 94 1 286 2 
162 1 168 1 
111 1 92 1 203 2 184 1 289 1 101 1 168 2 216 2 60 2 
303 1 59 1 150 1 
317 2 171 1 151 1 173 2 28 1 203 1 178 1 66 1 281 1 242 1 263 1 267 1 190 1 168 1 169 1 108 1 333 1 60 1 123 2 
317 1 171 1 173 1 28 1 203 2 178 1 281 1 309 1 184 1 242 1 101 1 267 1 190 1 269 1 169 1 333 1 150 1 216 1 60 2 123 1 
184 3 101 3 269 1 92 1 168 1 203 3 60 3 216 3 
184 1 125 1 101 1 209 1 203 1 60 1 216 1 
184 1 289 1 111 1 101 1 209 1 92 1 203 1 60 1 216 1 
300 1 111 1 92 1 203 2 309 1 282 1 286 1 184 2 50 1 141 1 325 1 101 2 102 1 209 1 103 1 269 1 216 2 60 2 
184 1 101 1 118 1 306 1 269 1 168 1 203 2 60 2 216 2 
300 1 203 1 67 1 309 1 286 1 184 1 50 1 325 1 141 1 101 1 102 1 209 1 103 1 269 1 216 1 60 1 
184 2 111 1 101 2 269 1 92 1 203 2 59 1 150 1 60 2 216 2 
317 1 171 1 173 1 28 1 203 1 178 1 281 1 242 1 267 1 190 1 168 1 169 1 333 1 60 1 123 1 
317 1 173 1 28 1 203 1 281 1 183 1 74 1 242 1 267 1 190 1 168 1 169 1 333 1 60 1 123 1 
0 2 303 2 250 1 131 2 222 1 224 1 226 1 260 4 100 1 145 2 59 2 150 2 195 1 21 1 277 1 202 1 113 1 237 1 285 1 165 1 290 1 164 1 326 1 334 1 
184 1 101 1 188 1 209 1 103 1 203 1 60 1 216 1 
111 1 306 1 92 1 203 5 309 1 184 4 186 1 101 4 118 1 269 2 168 1 148 1 216 5 60 5 
184 2 125 1 188 1 101 2 209 1 203 2 60 2 216 2 
163 1 31 1 
163 1 31 1 
105 1 27 1 
105 1 27 1 
105 1 27 1 
163 1 234 1 31 1 
163 1 234 1 31 1 
163 1 31 1 58 1 
274 1 163 2 176 1 105 1 27 1 31 2 
163 1 234 1 31 1 
217 1 163 1 31 1 
217 1 163 1 31 1 
217 1 163 1 31 1 
124 1 320 2 322 1 48 1 31 2 68 2 286 2 240 1 163 2 207 2 228 1 102 2 57 2 244 2 
320 1 203 1 31 1 68 1 286 1 115 1 184 1 240 1 163 1 207 1 101 1 102 1 57 1 244 1 60 1 216 1 
318 1 152 1 158 1 
318 1 158 1 271 1 
52 1 318 3 152 2 271 1 205 1 316 1 
52 1 318 2 152 1 308 1 271 1 205 1 
52 1 318 2 152 1 271 1 205 2 
102 1 94 1 245 1 286 1 
102 2 252 1 94 2 69 1 109 1 286 2 
247 1 218 1 174 1 198 1 93 1 94 1 179 1 286 2 75 1 102 2 213 1 272 1 
247 1 218 1 174 1 198 1 93 1 179 1 286 1 75 1 102 1 144 1 213 1 272 1 
162 1 169 1 155 1 
154 1 169 1 
291 1 
169 1 281 1 
242 1 155 2 169 3 30 1 295 1 281 1 
242 1 169 1 281 1 
169 1 167 1 
42 1 195 1 302 1 250 3 45 1 131 3 47 1 114 1 285 2 7 1 260 7 165 1 208 1 145 4 16 1 230 2 41 1 
42 1 195 1 302 1 250 3 45 1 131 3 47 1 114 1 285 2 7 1 260 7 165 1 208 1 145 4 16 1 230 2 41 1 
42 1 195 1 302 1 250 3 45 1 131 3 47 1 114 1 285 2 7 1 260 7 165 1 54 1 208 1 16 1 145 4 230 2 41 1 
42 5 0 2 302 2 127 1 250 10 45 1 84 3 1 1 131 15 47 1 3 1 222 3 224 1 135 4 7 2 225 3 226 1 260 31 261 1 16 1 145 16 312 1 230 3 195 4 112 1 202 3 114 1 237 1 285 5 164 1 165 4 208 2 328 1 41 2 
42 1 0 4 302 1 250 4 45 1 131 4 47 1 224 2 182 1 7 1 226 2 260 9 145 5 16 1 230 2 195 1 65 1 237 2 285 3 165 1 164 2 208 1 328 1 41 1 
43 1 173 1 249 1 85 1 83 1 91 1 132 1 6 1 96 1 15 1 267 1 271 1 191 1 316 1 317 1 20 1 318 2 276 1 152 1 28 1 158 1 288 2 324 1 73 1 117 1 166 1 36 1 292 2 296 1 123 1 
43 2 173 1 249 1 85 1 83 1 254 1 91 1 6 1 96 1 15 1 267 1 271 1 316 1 317 1 19 1 20 1 318 2 276 1 152 1 28 1 158 1 288 3 73 1 117 1 166 1 36 1 292 3 211 1 296 1 123 1 
317 1 19 1 43 2 173 1 249 1 20 1 318 2 152 1 254 1 28 1 91 1 158 1 6 1 96 1 288 2 267 1 117 1 15 1 36 1 166 1 292 2 296 1 271 1 316 1 123 1 
317 1 173 1 20 2 83 1 85 1 28 1 204 1 281 1 5 1 96 2 288 1 10 1 99 1 267 1 15 2 77 1 166 2 211 1 292 1 169 1 333 1 214 1 123 1 
317 1 173 1 20 1 318 2 83 1 85 1 276 1 152 1 254 1 28 1 132 1 158 1 6 1 96 1 288 1 73 1 324 1 267 1 117 1 15 1 36 1 166 1 292 1 271 1 316 1 123 1 
156 1 
317 1 218 1 173 1 174 1 319 1 93 1 286 1 256 1 75 1 102 1 213 1 333 1 192 1 123 1 
61 1 219 1 110 1 175 1 87 1 26 1 201 1 306 1 203 1 286 2 50 1 141 1 325 1 209 1 103 1 102 2 216 1 60 1 
61 1 219 1 110 1 87 1 26 1 201 1 306 1 203 1 4 1 286 2 50 1 141 1 325 1 209 1 103 1 102 2 216 1 60 1 
61 1 219 1 110 1 175 1 87 1 26 1 201 1 306 1 203 1 286 2 50 1 141 1 325 1 209 1 103 1 102 2 215 1 216 1 60 1 
102 1 286 1 
219 1 174 1 304 1 87 1 306 1 93 1 223 1 256 1 50 1 53 1 141 1 142 1 143 1 102 2 103 1 60 1 61 1 110 1 26 1 201 1 203 1 161 1 286 2 325 1 75 1 209 1 213 1 216 1 
219 1 174 1 304 1 251 1 87 1 306 1 93 1 223 1 256 1 50 1 53 1 141 1 142 1 143 1 264 1 102 2 103 1 60 1 61 1 110 1 26 1 201 1 157 1 203 1 161 1 286 2 325 1 75 1 209 1 213 1 216 1 
219 1 174 1 304 1 251 1 87 1 306 1 93 1 223 1 256 1 50 1 53 1 141 1 142 1 143 1 264 1 102 2 103 1 60 1 61 1 110 1 26 1 201 1 157 1 203 1 161 1 286 2 325 1 75 1 209 1 213 1 216 1 
219 1 174 1 304 1 251 1 87 1 255 1 306 1 93 1 223 1 256 1 50 1 53 1 141 1 143 1 102 2 103 1 60 1 61 1 110 1 197 1 25 1 26 1 201 1 203 1 286 2 325 1 75 1 209 1 210 1 213 1 216 1 
61 1 219 1 110 1 175 1 87 1 26 1 201 1 306 1 29 1 203 1 286 2 50 1 141 1 325 1 209 1 103 1 102 2 215 1 216 1 60 1 
61 1 219 1 110 1 175 1 87 1 26 1 201 1 306 1 29 1 203 1 286 2 50 1 141 1 325 1 209 1 103 1 102 2 215 1 216 1 60 1 
219 1 174 1 304 1 87 1 306 1 255 1 93 1 223 1 256 1 50 1 53 1 141 1 143 1 102 2 103 1 60 1 61 1 110 1 25 1 26 1 201 1 203 1 286 2 325 1 75 1 209 1 213 1 216 1 
195 1 0 2 303 1 302 1 250 2 21 1 45 1 277 1 131 3 47 1 224 1 237 1 285 2 162 1 7 1 226 1 260 6 165 1 164 1 145 3 16 1 230 1 168 2 334 1 59 1 150 1 
42 1 0 4 303 11 250 2 84 2 131 6 221 1 3 1 222 2 224 2 135 3 180 1 225 3 226 2 12 1 260 14 261 1 145 8 59 4 150 11 195 2 21 1 199 1 202 1 237 2 285 1 323 1 164 2 165 1 168 1 294 1 334 2 80 1 
171 1 173 1 0 2 220 1 131 1 221 1 178 1 224 1 180 1 309 1 184 1 226 1 260 2 12 1 101 1 267 1 145 1 190 1 269 1 59 1 60 2 317 1 21 1 28 1 203 2 66 1 236 1 281 1 237 1 164 1 242 1 168 1 169 1 170 1 333 1 334 1 123 1 216 1 
171 2 173 3 0 6 250 8 84 2 254 1 178 2 180 1 184 1 7 1 12 1 260 20 101 1 16 1 267 2 268 1 269 1 190 2 195 3 21 3 28 2 202 2 203 3 281 2 285 4 284 2 35 1 123 3 216 1 42 4 302 1 303 7 45 1 128 2 131 10 47 1 221 1 222 2 224 3 309 1 226 3 139 2 145 10 230 1 59 7 60 3 150 7 317 3 237 3 241 2 165 3 164 3 242 2 168 2 331 2 169 2 333 1 334 3 335 1 
173 6 0 4 44 1 88 1 254 1 131 1 221 1 224 2 184 1 226 2 12 1 260 2 10 1 262 1 101 1 267 3 145 1 269 1 108 2 191 1 60 1 317 7 275 1 21 2 22 1 277 1 28 3 203 1 159 1 280 1 237 2 281 3 164 2 242 1 119 1 169 4 333 2 334 2 122 1 214 1 216 1 123 7 
0 2 303 1 250 1 84 1 131 2 92 1 222 1 224 1 180 1 184 1 226 1 260 3 101 1 145 1 59 1 150 1 60 1 195 1 21 1 111 1 202 1 203 1 237 1 285 1 164 1 165 1 76 1 334 1 216 1 
42 1 195 1 0 2 303 1 250 1 21 1 277 1 222 1 113 1 224 1 237 1 226 1 260 2 164 1 145 2 334 1 59 1 150 1 
0 2 303 1 250 1 21 1 277 1 131 2 202 1 224 1 237 1 285 1 226 1 260 2 164 1 165 1 326 1 334 1 59 1 150 1 
42 1 195 1 0 2 303 2 250 2 21 1 84 1 277 1 131 2 202 1 222 1 224 1 237 1 285 1 226 1 260 4 165 1 164 1 145 2 334 1 59 2 150 2 
42 1 195 1 0 2 303 1 250 1 21 1 222 1 113 1 159 1 224 1 237 1 226 1 260 2 164 1 145 2 334 1 59 1 150 1 
0 2 303 1 250 1 21 1 131 2 202 1 159 1 224 1 237 1 285 1 226 1 260 2 164 1 165 1 326 1 334 1 59 1 150 1 
42 1 195 1 0 2 303 2 250 2 21 1 84 1 131 2 202 1 222 1 159 1 224 1 237 1 285 1 226 1 260 4 165 1 164 1 145 2 334 1 59 2 150 2 
42 1 195 1 0 2 303 2 250 2 21 1 84 1 131 2 202 1 222 1 224 1 237 1 285 1 226 1 260 4 165 1 164 1 145 2 334 1 59 2 150 2 
171 1 173 1 0 2 131 1 221 1 178 1 224 1 226 1 12 1 260 2 145 1 267 1 190 1 60 1 317 1 21 1 28 1 203 1 281 1 237 1 241 1 164 1 242 1 168 1 169 1 333 1 334 1 123 1 
173 1 0 2 131 1 221 1 224 1 183 1 226 1 12 1 260 2 187 1 145 1 267 1 190 1 60 1 317 1 21 1 28 1 203 1 281 1 237 1 164 1 242 1 74 1 168 1 169 1 333 1 334 1 123 1 
42 1 195 1 0 2 303 2 250 2 21 1 84 1 131 2 202 1 222 1 224 1 180 1 237 1 285 1 226 1 260 4 165 1 164 1 145 2 334 1 59 2 150 2 
42 1 171 1 173 1 0 2 303 2 250 2 84 1 131 2 222 1 178 1 224 1 139 1 226 1 260 4 145 2 267 1 190 1 59 2 150 2 191 1 60 1 317 1 195 1 21 1 28 1 202 1 203 1 281 1 237 1 285 1 241 1 165 1 164 1 242 1 169 1 334 1 123 1 
42 1 0 2 303 1 250 1 84 1 131 1 92 1 222 1 224 1 180 1 184 1 226 1 260 3 101 1 145 2 270 1 59 1 60 1 150 1 195 1 21 1 111 1 202 1 203 1 237 1 165 1 164 1 334 1 216 1 
42 3 301 1 0 4 250 6 84 3 131 10 3 1 222 3 224 2 135 2 138 1 9 2 225 1 226 2 260 19 261 1 145 9 146 1 194 1 195 3 62 1 200 1 279 1 65 1 202 3 237 2 285 3 164 2 165 3 39 2 
42 2 301 1 0 6 250 4 84 3 129 1 131 12 90 1 222 3 224 3 135 2 95 1 138 1 257 1 9 4 225 2 226 3 260 26 261 2 13 1 145 14 194 2 195 3 62 2 279 1 65 1 202 2 283 1 237 3 285 2 165 2 164 3 328 2 39 1 
42 4 301 1 0 6 302 1 250 8 45 1 84 4 129 1 89 1 131 21 90 1 47 1 3 1 222 4 224 3 135 4 95 1 257 1 138 1 7 1 9 4 225 3 226 3 260 41 261 3 13 1 16 1 145 20 146 1 230 1 194 2 195 5 62 1 279 1 65 1 202 4 283 1 237 3 285 4 164 3 165 5 328 1 39 1 
42 3 301 1 0 8 302 1 250 7 45 1 84 4 129 1 89 1 131 18 90 1 47 1 3 1 222 4 224 4 135 4 95 1 257 1 138 1 7 1 9 4 225 3 226 4 260 38 261 3 13 1 16 1 145 20 146 1 230 1 194 2 195 5 62 1 279 1 65 1 202 3 283 1 237 4 285 4 164 4 165 4 328 2 39 1 
42 7 301 1 0 4 302 1 250 14 45 1 84 7 129 1 131 25 90 1 47 1 3 2 222 7 224 2 135 4 95 1 257 1 138 1 7 1 9 4 225 4 226 2 260 52 261 2 13 1 16 1 145 27 230 1 194 1 195 8 62 1 279 1 65 1 202 7 283 1 237 2 285 7 164 2 165 8 328 1 294 2 39 1 
274 1 163 1 207 1 320 1 57 1 37 1 49 1 17 1 31 1 68 1 
307 1 58 1 
287 1 51 1 163 1 207 1 24 1 320 1 57 1 31 1 68 1 
124 1 320 1 322 1 48 1 31 1 68 1 286 1 240 1 163 1 207 1 228 1 102 1 57 1 244 2 
124 1 320 1 322 1 48 1 31 1 68 1 286 1 240 1 163 1 207 1 228 1 102 1 57 1 244 2 
124 1 320 1 322 1 48 1 31 1 68 1 286 1 240 1 163 1 207 1 228 1 102 1 57 1 244 2 
176 1 234 1 329 1 
176 1 234 1 329 1 
217 1 293 1 
217 1 176 1 293 1 
97 1 315 1 
124 1 320 1 94 1 31 1 68 1 286 1 115 1 163 1 207 1 228 1 102 1 244 1 57 1 314 1 
234 1 329 1 
217 1 176 1 293 1 
0 2 173 2 131 1 221 1 224 1 180 1 226 1 12 1 260 2 267 1 145 1 189 1 147 1 108 2 60 2 317 2 21 1 28 1 203 2 280 1 281 1 70 1 237 1 164 1 33 1 327 1 169 1 334 1 122 1 123 2 216 2 
317 2 173 2 318 2 276 1 152 1 153 1 254 1 28 1 158 1 206 1 6 1 96 1 267 1 117 1 271 1 316 1 123 2 191 1 273 1 
317 1 173 1 318 2 276 1 152 1 305 1 254 1 28 1 158 1 206 1 6 1 96 1 117 1 267 1 271 1 316 1 123 1 
317 1 173 1 153 1 28 1 204 1 281 1 239 1 96 1 10 1 267 1 169 1 333 1 214 1 123 1 
317 1 173 1 318 2 276 1 152 1 153 1 254 1 28 1 158 1 206 1 6 1 96 1 117 1 267 1 271 1 316 1 123 1 273 1 
55 1 
162 1 126 1 243 1 223 1 
174 1 142 1 75 1 93 1 223 1 213 1 161 1 256 1 
317 1 173 1 174 1 154 1 28 1 2 1 93 1 30 1 281 1 256 1 98 1 242 1 75 1 267 1 169 1 333 1 123 1 
257 1 225 1 174 1 261 1 75 1 93 1 223 1 213 1 135 1 256 1 
195 2 174 1 302 1 64 1 47 1 157 1 93 1 223 2 286 1 256 1 7 1 140 1 165 1 75 1 102 1 213 1 246 2 
174 1 75 1 243 1 93 1 223 1 256 1 
195 1 165 1 84 1 202 1 222 1 213 1 223 1 
317 1 173 1 333 1 123 1 
218 1 174 1 75 1 14 1 93 1 223 1 213 1 256 1 
207 1 320 1 78 1 
207 1 320 1 78 1 
207 1 320 1 278 1 37 1 315 1 
207 1 320 1 78 1 
207 1 320 1 336 1 
207 1 320 1 336 1 
207 1 320 1 336 1 
207 1 320 1 
163 1 31 1 
42 1 195 1 0 4 302 1 250 3 45 1 131 4 47 1 224 2 237 2 285 2 7 1 226 2 260 8 165 1 164 2 145 4 16 1 230 1 328 1 
195 1 302 1 250 2 45 1 131 3 47 1 285 2 162 1 7 1 260 6 165 1 16 1 145 3 230 1 
42 1 195 1 0 2 250 2 84 1 131 2 321 1 202 1 222 1 224 1 237 1 285 1 226 1 260 4 165 1 164 1 145 2 
42 1 195 1 250 2 84 1 131 4 202 1 3 1 222 1 135 2 285 1 225 1 260 7 165 1 261 1 145 3 
42 4 0 4 302 2 250 9 45 1 84 2 131 12 47 1 222 2 3 1 46 1 224 2 135 2 7 2 225 2 226 2 260 23 16 1 145 11 230 1 195 3 202 2 237 2 285 5 165 3 164 2 328 2 294 1 80 1 
260 1 131 1 135 1 
225 1 260 1 145 1 
42 1 195 1 0 2 250 3 84 1 131 3 321 1 222 1 202 1 224 1 237 1 284 1 285 2 226 1 260 6 164 1 165 1 145 3 
42 1 0 2 250 2 84 2 129 1 131 6 222 2 224 1 135 1 95 1 257 1 225 1 226 1 260 12 261 1 13 1 145 6 195 2 65 1 202 2 237 1 283 1 285 1 164 1 165 2 
42 1 195 1 302 1 250 2 131 3 47 1 285 1 7 1 260 6 165 1 145 3 
42 1 0 2 302 1 250 2 45 1 131 2 46 1 224 1 237 1 285 1 7 1 226 1 260 3 164 1 145 1 16 1 328 1 
42 2 195 2 0 2 302 2 250 5 131 5 65 1 47 1 224 1 237 1 285 3 7 2 226 1 140 1 260 10 164 1 165 2 145 5 
42 1 195 1 0 2 250 1 65 1 222 1 224 1 237 1 226 1 260 2 164 1 145 2 
42 1 195 1 0 2 250 2 84 1 131 2 202 1 65 1 222 1 224 1 237 1 285 1 226 1 260 4 165 1 164 1 145 2 
42 1 0 6 302 1 250 2 131 2 46 1 65 1 224 3 237 3 285 1 7 1 226 3 260 3 164 3 145 1 328 1 146 1 
42 5 0 10 302 3 250 12 45 1 84 3 1 1 131 18 47 2 46 1 3 1 222 3 224 5 135 4 7 3 225 3 226 5 260 34 261 1 16 1 312 1 145 16 230 1 146 1 195 5 112 1 321 1 65 1 202 3 237 5 285 7 164 5 165 5 328 2 
0 2 302 1 250 2 45 1 131 4 47 1 224 1 135 1 257 1 225 1 7 1 226 1 260 8 261 1 145 4 16 1 230 1 195 1 65 1 237 1 285 2 165 1 164 1 
42 1 0 4 302 1 250 3 45 1 84 1 131 5 47 1 3 1 222 1 224 2 135 2 257 1 7 1 225 1 226 2 260 11 261 1 16 1 145 6 230 1 195 2 321 1 65 1 237 2 285 2 165 1 164 2 
42 1 0 6 302 1 250 4 45 1 84 2 129 1 131 10 47 1 222 2 224 3 135 1 95 1 257 1 7 1 225 1 226 3 260 19 261 1 13 1 16 1 145 9 230 1 195 3 321 1 65 1 202 2 283 1 237 3 285 3 164 3 165 3 328 1 
42 2 0 6 302 1 250 5 45 1 84 2 129 1 131 7 47 1 222 2 224 3 135 1 95 1 257 1 7 1 225 1 226 3 260 17 261 1 13 1 16 1 145 10 230 1 195 3 321 1 65 1 202 1 237 3 283 1 285 3 164 3 165 2 328 1 
0 2 302 1 250 2 45 1 131 4 47 1 224 1 135 1 257 1 225 1 7 1 226 1 260 8 261 1 145 4 16 1 230 1 195 1 65 1 237 1 285 2 165 1 164 1 
42 1 0 2 250 2 84 2 129 1 131 6 222 2 224 1 135 1 95 1 257 1 225 1 226 1 260 12 261 1 13 1 145 6 195 2 65 1 202 2 237 1 283 1 285 1 164 1 165 2 
42 2 0 8 302 1 250 5 45 1 84 2 129 1 131 8 47 1 222 2 224 4 135 1 95 1 257 1 7 1 225 1 226 4 260 18 261 1 13 1 16 1 145 10 230 1 195 3 321 1 65 1 202 1 283 1 237 4 285 3 164 4 165 2 328 2 
42 3 0 8 250 6 84 3 129 1 131 7 222 3 224 4 135 1 95 1 257 1 225 1 226 4 260 16 261 1 13 1 145 9 146 1 195 3 65 1 202 2 283 1 237 4 285 3 164 4 165 2 328 2 
42 3 195 1 302 3 250 6 45 1 131 4 47 1 285 3 7 3 260 7 165 1 16 2 145 3 
42 1 0 8 302 1 250 4 45 1 84 2 129 1 131 8 47 1 222 2 224 4 135 1 95 1 257 1 7 1 225 1 226 4 260 18 261 1 13 1 16 1 145 10 230 1 146 1 195 3 65 1 202 1 283 1 237 4 285 3 164 4 165 2 328 2 
118 1 306 1 168 1 203 1 60 1 216 1 181 1 
86 1 266 1 118 1 306 1 330 1 168 1 203 1 133 1 212 1 60 1 216 1 181 1 
317 1 162 1 173 1 10 1 267 1 28 1 169 1 333 1 281 1 214 1 123 1 
317 1 173 1 28 1 203 2 178 1 281 1 184 1 242 1 101 1 267 1 190 1 269 1 168 1 169 1 333 1 216 1 60 2 123 1 
173 1 178 1 184 2 185 1 141 1 101 1 267 1 103 1 269 1 190 1 60 2 317 1 28 1 203 2 281 2 242 2 209 1 168 1 169 3 167 1 40 1 123 1 216 2 
173 2 183 1 184 2 185 1 141 1 101 1 267 1 103 1 269 1 190 1 60 2 193 1 317 2 28 1 203 2 281 2 242 2 209 1 168 1 169 3 167 1 40 1 123 2 216 2 
317 1 8 1 173 1 102 1 154 1 169 1 40 1 123 1 286 1 
317 1 259 1 173 1 102 1 154 1 169 1 40 1 123 1 286 1 
317 1 173 1 267 1 104 1 28 1 123 1 
317 1 173 1 248 1 242 1 267 1 88 1 28 1 169 1 30 1 333 1 281 1 123 1 
171 1 0 4 173 1 303 1 302 1 250 2 45 1 131 3 47 1 224 2 178 1 180 1 184 1 7 1 226 2 139 1 260 6 101 1 145 3 16 1 267 1 230 1 190 1 269 1 59 1 150 1 60 2 191 1 317 1 195 1 21 2 28 1 203 2 281 1 237 2 285 2 241 1 165 1 164 2 242 1 33 1 168 2 169 1 331 1 334 2 216 1 123 1 
102 1 94 1 286 1 
317 1 173 1 28 1 155 1 30 1 281 1 98 1 242 1 291 1 267 1 104 1 169 1 123 1 
193 1 317 4 173 4 82 1 28 1 281 1 10 1 267 1 169 1 333 1 214 1 123 4 191 1 
317 1 173 1 44 1 242 1 22 1 267 1 88 1 28 1 169 1 281 1 123 1 335 1 
6 1 317 1 173 1 318 1 267 1 28 1 333 1 158 1 271 1 123 1 
317 2 173 2 267 1 254 1 28 1 169 1 281 1 122 1 70 1 123 2 191 1 
317 5 173 4 82 1 275 1 28 2 281 2 10 1 267 2 119 1 169 3 333 1 40 1 214 1 122 1 123 5 191 1 
317 5 173 4 82 1 28 2 281 2 10 1 267 2 119 1 169 3 333 1 40 1 214 1 297 1 122 1 123 5 191 1 
317 1 173 1 28 1 203 2 281 1 184 1 183 1 242 1 101 1 267 1 190 1 269 1 168 1 169 1 333 1 216 1 60 2 123 1 
317 1 173 1 248 1 242 1 267 1 88 1 28 1 169 1 30 1 40 1 281 1 123 1 
72 1 327 1 189 1 147 1 107 1 203 1 121 1 60 1 216 1 
72 1 258 1 265 1 
72 1 229 1 168 1 107 1 121 1 
300 1 94 1 286 2 72 1 71 1 258 1 50 1 141 1 325 1 265 1 209 1 103 1 102 2 229 2 168 1 107 2 121 2 
162 1 249 1 91 1 296 1 
288 1 249 1 85 1 83 1 292 1 91 1 296 1 
288 1 15 1 166 1 
249 1 232 1 83 1 85 1 91 1 136 1 288 2 324 1 34 1 292 2 231 1 296 1 298 1 
137 1 43 1 288 2 249 1 85 1 83 1 292 2 91 1 296 1 
288 1 249 1 227 1 324 1 32 1 318 1 85 1 83 1 152 1 292 1 158 1 
288 1 249 1 324 1 85 1 83 1 292 1 296 1 
288 1 324 1 85 1 83 1 292 1 91 1 296 2 
18 1 249 1 83 2 85 2 238 1 288 2 324 1 292 2 296 1 79 1 
43 2 288 3 249 2 227 1 324 1 85 1 83 1 233 1 292 3 91 1 120 1 296 1 81 1 
43 1 249 1 318 2 83 1 85 1 152 1 91 1 158 1 288 2 324 1 310 1 292 2 296 1 271 1 316 1 
137 1 43 2 288 4 249 2 227 1 324 1 85 2 83 2 311 1 292 4 91 1 296 1 81 1 
288 1 249 1 324 1 85 1 83 1 292 1 91 1 296 1 
43 2 249 3 232 1 83 1 85 1 91 2 136 1 288 4 227 1 34 1 292 4 231 1 296 2 81 1 
43 1 249 1 83 1 85 1 23 1 91 1 288 2 324 1 11 1 56 1 292 2 296 1 
172 1 249 1 232 2 83 1 85 1 91 1 136 1 288 3 324 1 292 3 231 2 296 1 
249 2 235 1 38 2 299 1 
288 1 324 1 196 1 85 1 83 1 292 1 
43 1 288 2 249 1 324 1 85 1 83 1 292 2 91 1 120 1 296 1 
253 1 
288 1 249 1 324 1 85 1 83 1 292 1 91 1 296 1 
43 1 288 3 249 1 324 1 232 1 85 1 83 1 292 3 91 1 120 1 296 1 
249 1 227 1 34 1 81 1 
249 1 296 1 

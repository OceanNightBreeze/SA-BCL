#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 182 36 282 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 259 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (61,165) 173 74 103 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 182 209 65 85 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 182 30 65 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 182 209 65 85 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 182 209 65 85 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 182 209 65 85 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 182 36 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 182 30 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 182 30 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 182 30 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 182 30 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 182 30 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 182 30 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 182 30 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 259 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 182 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 74 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 182 30 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
139 1 216 2 177 3 327 1 337 1 64 1 7 2 286 2 219 1 354 1 171 1 303 1 45 3 
216 2 280 1 177 9 327 6 7 2 286 5 219 4 39 1 102 2 354 2 268 1 44 1 46 2 45 9 139 1 270 1 111 1 47 2 335 1 114 1 337 1 64 1 22 1 122 2 192 1 277 1 171 1 303 3 
216 2 280 1 177 9 327 6 7 2 286 5 219 4 39 1 102 2 354 2 268 1 44 1 46 2 45 9 139 1 270 1 111 1 47 2 335 1 114 1 337 1 64 1 22 1 122 2 192 1 277 1 171 1 303 3 
216 2 280 1 177 10 327 7 7 2 286 6 219 5 39 1 102 2 354 2 268 1 44 1 46 2 45 10 139 1 270 1 111 1 47 2 335 1 114 1 337 1 64 1 22 1 122 2 192 1 277 1 171 1 303 4 
216 2 280 1 177 7 327 4 7 2 286 4 219 3 39 1 102 2 354 2 268 1 44 1 46 2 45 7 139 1 270 1 111 1 47 2 114 1 337 1 64 1 22 1 122 1 192 1 277 1 171 1 303 2 
216 1 177 4 47 1 111 1 335 1 327 3 114 1 337 1 64 1 7 1 286 3 219 2 102 1 122 2 303 1 171 1 45 4 46 1 
216 1 292 1 177 2 47 1 337 1 64 1 286 1 7 1 102 1 354 1 135 1 268 1 277 1 171 1 96 1 45 2 
321 1 216 2 280 1 177 9 327 7 7 2 286 5 219 4 102 1 354 1 44 1 45 9 46 1 139 1 111 1 47 1 335 1 114 1 254 1 337 1 64 1 122 2 303 3 171 1 
321 1 216 2 280 1 177 9 327 7 7 2 286 5 219 4 102 1 354 1 44 1 45 9 46 1 139 1 111 1 47 1 335 1 114 1 254 1 337 1 64 1 122 2 303 3 171 1 
151 1 153 1 125 1 250 1 63 1 328 1 253 1 275 1 265 1 363 1 336 1 255 1 210 1 72 1 
170 1 
290 1 77 1 323 1 250 2 59 1 170 1 253 1 265 2 
214 1 290 1 152 1 33 1 250 5 323 2 204 2 359 1 253 2 265 5 285 1 316 1 198 1 59 1 69 2 170 1 71 1 306 1 213 2 
259 1 59 1 170 1 
220 2 170 1 312 1 
336 2 151 2 255 2 153 2 125 1 328 2 329 1 275 2 
31 1 32 1 97 1 151 3 153 2 125 1 126 1 346 1 38 1 328 2 329 1 349 2 79 2 288 2 9 2 137 1 242 1 11 1 162 1 246 1 81 2 203 1 106 1 166 1 275 2 19 1 336 3 255 2 145 1 168 1 299 1 230 1 26 1 301 1 169 1 95 1 211 1 
336 1 363 1 151 1 255 1 153 1 125 1 63 1 210 1 328 1 275 1 
258 1 151 1 153 1 343 1 250 1 226 1 239 1 63 1 184 1 265 1 336 1 300 1 59 1 170 1 
151 1 153 1 250 2 226 1 239 1 63 1 328 1 184 1 275 1 265 2 336 1 255 1 300 1 59 1 170 1 
323 1 250 1 200 1 253 1 265 1 
290 1 323 1 68 1 250 2 59 1 170 1 253 1 265 2 
323 1 250 1 265 1 
151 2 1 1 153 2 328 1 275 1 329 2 336 2 255 1 229 1 
165 1 173 1 138 1 
97 1 81 1 151 1 203 1 106 1 126 1 329 1 336 1 76 1 349 1 145 1 288 1 169 1 137 1 95 1 211 1 
259 1 329 1 
97 1 81 1 151 2 165 1 203 1 106 1 153 1 126 1 328 1 296 1 336 2 145 1 255 1 349 1 288 1 137 1 169 1 211 1 278 1 95 1 
336 3 151 3 255 3 153 3 278 1 328 3 275 1 329 1 
336 1 151 1 255 1 153 1 63 1 210 1 328 1 
336 1 151 1 255 1 1 1 153 1 229 1 63 1 328 1 275 1 
31 1 97 1 1 1 151 4 153 3 125 1 126 1 34 1 239 1 38 1 328 3 329 1 265 1 349 1 79 2 201 1 288 1 9 1 137 1 242 1 11 1 162 1 246 1 81 1 203 1 106 1 250 1 226 1 166 1 63 1 184 1 275 2 296 1 19 1 336 4 145 1 255 3 168 1 299 1 300 1 169 1 211 1 95 1 278 1 
336 2 314 1 151 2 255 1 153 2 343 1 328 1 278 1 329 1 
1 1 151 3 153 3 250 1 34 1 226 1 16 1 239 1 63 1 184 1 328 3 275 1 296 1 265 1 336 3 255 3 300 1 170 1 278 2 
1 1 151 2 165 1 153 2 328 2 275 1 336 2 255 2 278 1 138 1 
97 1 81 1 151 1 203 1 106 1 126 1 329 1 336 1 349 1 145 1 288 1 169 1 137 1 95 1 211 1 
97 1 81 1 151 1 203 1 106 1 126 1 329 1 336 1 115 1 349 1 276 1 288 1 169 1 137 1 211 1 
260 1 215 1 173 2 156 1 346 2 281 1 6 1 79 2 9 4 242 1 162 1 138 2 14 1 246 2 61 1 165 2 104 1 166 1 112 1 19 1 168 1 366 1 299 1 341 1 
336 1 151 1 255 1 153 1 176 1 226 1 63 1 328 1 
151 5 1 1 153 5 343 1 328 4 275 1 329 1 296 1 336 5 314 1 255 4 70 1 330 1 278 2 
336 2 151 2 255 2 153 2 176 1 63 1 210 1 328 2 
319 1 98 1 208 1 
98 2 225 1 208 2 339 1 185 1 228 1 
98 1 208 1 
98 1 208 1 
185 1 228 1 
185 1 228 1 
185 1 228 1 
98 1 208 1 174 1 
98 1 208 1 174 1 
98 1 208 1 174 1 
98 1 208 1 25 1 
98 1 208 1 25 1 
98 1 208 1 25 1 
98 2 110 1 108 2 100 2 250 2 86 1 91 1 54 2 129 2 143 1 265 2 120 1 208 2 121 2 339 1 317 1 170 1 256 1 358 3 
98 1 151 2 3 1 153 2 172 1 100 1 54 1 328 2 129 1 329 1 130 1 265 1 43 1 317 1 357 1 202 1 358 1 108 1 250 1 336 2 319 1 255 2 21 1 208 1 
352 1 292 1 47 2 80 2 46 1 
102 1 47 1 46 1 
102 1 292 1 47 1 
352 1 292 1 47 3 194 1 80 1 46 2 
352 1 292 1 238 1 47 2 80 1 46 1 
214 3 151 1 215 1 153 1 125 1 323 1 281 1 328 1 312 1 265 5 220 3 198 2 42 1 59 1 221 1 357 1 14 1 13 2 290 1 107 2 250 5 204 1 89 2 142 1 333 1 63 1 275 1 253 4 336 1 363 1 255 1 366 1 189 1 69 1 71 1 170 2 210 1 72 1 212 1 213 1 
151 1 153 1 323 3 281 1 328 1 198 2 59 1 200 2 14 1 13 2 290 1 250 5 204 1 63 1 253 4 336 1 255 1 69 1 170 2 71 1 72 1 210 1 212 1 213 1 214 3 215 1 125 1 265 5 312 1 350 1 266 2 220 3 42 1 357 1 271 1 142 1 89 2 275 1 363 1 366 1 189 1 
151 1 214 3 33 1 215 1 153 1 125 1 281 1 328 1 312 1 265 3 198 2 220 3 59 1 42 1 221 1 357 1 14 1 13 2 107 1 250 3 204 1 333 1 142 1 89 2 63 1 275 1 253 2 336 1 363 1 255 1 366 1 189 1 69 1 170 2 210 1 72 1 213 1 
150 1 214 5 33 1 215 2 281 2 313 1 312 3 265 4 220 7 198 4 59 1 42 1 221 1 357 2 14 2 13 4 107 2 250 4 204 1 89 4 333 1 142 1 113 1 253 3 366 2 189 2 69 1 170 4 213 1 
262 1 
259 1 106 1 353 1 
56 1 106 1 
106 1 137 1 
309 1 203 1 106 2 262 1 338 1 353 2 137 1 
203 1 106 1 137 1 
106 1 24 1 
260 5 215 3 346 8 281 3 311 1 199 2 9 15 12 1 246 7 104 4 15 1 109 2 141 2 332 1 295 1 23 1 207 2 302 1 304 1 
246 1 315 1 248 1 207 1 15 2 36 1 346 2 9 3 282 1 295 1 182 1 
260 5 215 2 236 1 281 2 346 6 311 1 199 1 79 2 161 1 9 11 12 1 246 5 104 3 105 1 109 1 15 1 141 1 332 2 166 1 295 1 19 1 168 1 23 1 207 1 299 1 
260 5 215 3 346 8 281 3 311 1 199 2 9 15 12 1 246 7 104 4 15 1 109 2 141 2 332 1 295 1 23 1 207 2 302 1 
260 7 215 3 346 8 281 3 311 1 199 2 9 15 12 1 246 7 104 4 15 1 109 2 141 2 332 3 295 1 23 1 207 2 302 1 
149 1 97 1 81 1 318 1 106 1 4 1 155 1 216 1 177 1 158 2 348 2 349 1 78 1 197 2 7 1 354 2 231 1 288 1 169 1 137 1 211 1 163 1 45 1 
154 1 216 1 322 1 177 1 158 1 194 1 348 1 349 1 197 1 7 1 102 1 354 1 288 1 8 1 46 1 45 1 81 1 140 1 62 1 292 1 47 2 252 1 169 1 171 1 211 1 233 1 
154 1 216 1 322 1 177 2 158 1 194 1 327 1 348 1 349 1 286 1 197 1 7 1 102 1 354 1 288 1 8 1 46 1 45 2 81 1 62 1 292 1 293 1 47 2 252 1 337 1 64 1 169 1 171 1 211 1 233 1 
4 1 154 1 216 1 322 1 177 3 158 1 194 1 348 1 327 2 349 1 286 1 197 1 7 1 102 1 354 1 288 1 8 1 46 1 45 3 81 1 140 1 292 1 47 2 252 1 362 1 337 1 64 1 169 1 211 1 233 1 
322 1 177 2 158 1 194 1 348 1 327 2 349 1 286 1 197 1 102 1 354 1 288 1 8 1 45 2 46 1 81 1 140 1 292 1 47 2 362 1 337 1 64 1 169 1 211 1 233 1 
196 1 
149 1 97 2 193 1 151 1 153 1 323 6 157 1 324 2 239 1 195 1 101 2 198 2 59 1 288 2 290 3 106 1 250 5 204 1 63 1 17 1 336 1 116 4 298 2 167 1 300 1 69 1 169 1 170 2 71 1 211 1 257 2 213 1 258 1 214 2 261 1 343 1 310 1 127 1 217 1 312 2 265 5 349 2 220 2 42 1 137 1 223 2 81 2 226 1 90 2 184 1 48 1 188 1 231 1 147 2 148 1 
258 1 151 1 153 1 343 1 323 2 157 1 127 1 239 1 195 1 265 3 77 1 290 1 250 3 226 1 90 1 63 1 184 1 336 1 116 2 167 1 188 1 300 1 
258 1 151 1 153 1 323 1 343 1 157 1 127 1 239 1 195 1 265 3 77 1 59 1 290 1 250 3 226 1 63 1 184 1 336 1 116 3 167 1 188 1 300 1 170 1 257 1 
258 1 151 1 153 1 343 1 323 2 157 1 127 1 239 1 195 1 265 3 77 1 59 1 290 1 250 3 226 1 90 1 63 1 184 1 336 1 116 3 167 1 188 1 300 1 147 1 170 1 257 1 
151 2 234 1 153 2 323 7 157 1 324 2 239 1 195 1 328 1 198 1 101 2 59 1 290 3 291 1 250 5 204 1 63 2 17 1 336 2 255 1 116 4 167 1 298 2 67 1 300 1 69 1 170 1 71 1 210 1 72 1 257 2 213 1 258 1 214 1 125 1 343 1 127 1 217 1 265 5 312 2 77 1 40 1 223 2 84 1 226 1 90 4 184 1 275 1 363 1 188 1 147 4 
151 1 153 1 323 4 157 1 324 2 239 1 195 1 198 1 101 2 59 1 290 2 250 4 204 1 17 1 63 1 336 1 116 4 167 1 298 2 300 1 69 1 71 1 170 2 257 2 213 1 258 1 214 1 343 1 127 1 217 1 265 4 312 2 220 2 223 2 226 1 90 2 184 1 48 1 188 1 147 2 
258 1 214 1 151 1 153 1 323 4 343 1 157 1 324 2 127 1 239 1 195 1 217 1 312 2 265 4 101 2 198 1 40 1 59 1 223 2 290 2 291 1 84 1 250 4 226 1 204 1 90 2 17 1 63 1 184 1 336 1 116 4 298 2 167 1 188 1 300 1 69 1 170 1 147 2 71 1 257 2 213 1 
258 1 214 1 151 1 153 1 323 4 343 1 157 1 324 2 127 1 239 1 195 1 217 1 312 2 265 4 101 2 198 1 40 1 59 1 223 2 290 2 291 1 84 1 250 4 226 1 204 1 90 2 17 1 63 1 184 1 336 1 116 4 298 2 167 1 188 1 300 1 69 1 170 1 147 2 71 1 257 2 213 1 
258 1 214 1 151 1 235 2 153 1 323 4 237 1 343 1 157 1 324 2 127 1 239 1 195 1 217 1 265 4 131 2 220 2 101 2 198 1 40 1 58 1 59 1 245 1 290 2 250 4 226 1 204 1 90 2 63 1 184 1 336 1 116 4 167 1 188 1 300 1 69 1 170 1 147 2 71 1 257 2 213 1 
151 2 153 2 323 5 157 1 324 2 239 1 195 1 328 1 198 1 101 2 59 1 290 2 291 1 250 4 204 1 63 2 17 1 336 2 255 1 116 5 167 1 298 2 67 1 300 1 69 1 71 1 170 1 210 1 72 1 257 3 213 1 258 1 214 1 125 1 343 1 127 1 217 1 265 4 312 2 40 1 223 2 84 1 226 1 90 3 184 1 275 1 363 1 188 1 147 3 
151 2 153 2 323 5 157 1 324 2 239 1 195 1 328 1 198 1 101 2 59 1 290 2 291 1 250 4 204 1 63 2 17 1 336 2 255 1 116 5 167 1 298 2 67 1 300 1 69 1 71 1 170 1 210 1 72 1 257 3 213 1 258 1 214 1 125 1 343 1 127 1 217 1 265 4 312 2 40 1 223 2 84 1 226 1 90 3 184 1 275 1 363 1 188 1 147 3 
151 1 235 2 153 1 237 1 323 4 157 1 324 2 239 1 195 1 198 1 101 2 59 1 290 2 250 4 204 1 63 1 336 1 116 4 167 1 300 1 69 1 71 1 170 1 257 2 213 1 258 1 214 1 343 1 127 1 217 1 265 4 131 2 220 2 226 1 90 2 184 1 48 1 188 1 147 2 
97 2 31 1 149 1 151 1 153 1 99 1 346 1 328 1 283 1 349 8 79 4 288 7 9 2 137 2 269 1 242 2 289 1 162 2 81 8 246 1 140 1 106 3 249 1 293 1 166 2 294 1 336 1 19 2 255 1 364 1 168 2 299 2 230 1 231 1 169 2 301 2 278 1 211 2 341 1 
260 1 1 1 151 1 215 1 153 1 173 1 346 1 281 1 328 1 79 2 10 1 9 3 242 1 138 1 162 1 14 1 246 2 104 1 165 1 272 1 166 1 275 1 19 1 336 1 255 1 168 1 366 1 189 1 299 1 
259 1 260 2 215 1 173 1 346 3 281 1 329 2 311 1 199 1 79 2 9 6 242 1 138 1 162 1 246 3 165 1 104 2 109 1 141 1 166 1 19 1 168 1 23 1 207 1 299 1 341 1 
246 1 103 1 165 3 74 1 248 1 173 3 346 1 166 1 19 1 168 1 315 1 79 2 299 1 9 2 10 1 242 1 162 1 
97 1 31 1 151 2 153 1 126 1 326 1 346 1 328 1 329 1 76 1 349 1 57 1 79 2 134 1 288 1 137 1 10 1 9 2 242 1 138 1 162 1 81 1 246 1 203 1 106 1 166 1 296 1 336 2 19 1 145 1 255 1 168 1 299 1 230 1 169 1 211 1 95 1 278 1 
97 1 151 3 153 1 281 5 328 1 329 3 199 2 288 1 10 1 9 28 242 3 11 2 12 1 162 3 246 14 14 2 165 7 104 6 203 2 106 2 109 2 332 1 166 3 63 1 205 2 296 1 19 3 336 3 255 1 297 2 168 3 23 1 207 1 299 3 169 2 211 2 31 1 260 7 215 5 342 1 126 2 173 7 35 2 346 14 311 1 349 1 79 6 355 1 137 2 138 7 81 1 141 2 88 2 145 2 366 2 189 2 94 1 230 1 278 1 95 2 
260 1 165 1 215 1 173 1 332 1 346 2 166 1 112 1 19 1 168 1 366 1 79 2 299 1 9 2 242 1 138 1 162 1 341 1 
14 1 246 2 260 1 104 1 165 1 173 1 281 1 166 1 19 1 168 1 6 1 79 2 299 1 9 2 242 1 138 1 162 1 341 1 
260 2 215 1 173 2 346 2 281 1 79 2 9 4 242 1 162 1 138 2 14 1 246 2 165 2 104 1 332 1 166 1 19 1 366 1 168 1 189 1 299 1 341 1 
260 1 165 1 215 1 173 1 332 1 346 2 166 1 112 1 19 1 364 1 168 1 366 1 79 2 299 1 9 2 242 1 138 1 162 1 
14 1 246 2 260 1 104 1 165 1 173 1 281 1 166 1 19 1 364 1 168 1 6 1 79 2 299 1 9 2 242 1 138 1 162 1 
260 2 215 1 173 2 346 2 281 1 79 2 9 4 242 1 162 1 138 2 14 1 246 2 165 2 104 1 332 1 166 1 19 1 364 1 366 1 168 1 189 1 299 1 
260 2 215 1 173 2 346 2 281 1 79 2 9 4 242 1 162 1 138 2 14 1 246 2 165 2 104 1 332 1 166 1 19 1 366 1 168 1 189 1 299 1 
97 1 31 1 151 1 126 1 346 1 329 1 349 1 79 2 288 1 9 2 137 1 11 1 242 1 162 1 81 1 246 1 203 1 106 1 166 1 336 1 19 1 145 1 168 1 299 1 230 1 169 1 211 1 95 1 
97 1 31 1 151 1 126 1 346 1 329 1 349 1 79 2 288 1 9 2 137 1 242 1 244 1 162 1 81 1 246 1 203 1 106 1 166 1 115 1 336 1 19 1 168 1 299 1 230 1 276 1 169 1 211 1 
260 2 215 1 173 2 346 2 281 1 79 2 10 1 9 4 242 1 162 1 138 2 14 1 246 2 165 2 104 1 332 1 166 1 19 1 366 1 168 1 189 1 299 1 
260 2 151 1 215 1 173 2 126 1 281 1 346 2 349 1 79 2 288 1 9 4 137 1 11 1 242 1 138 2 162 1 246 2 14 1 81 1 104 1 165 2 203 1 106 1 332 1 293 1 166 1 336 1 19 1 145 1 297 1 366 1 168 1 189 1 299 1 169 1 211 1 95 1 
260 1 1 1 151 1 215 1 153 1 173 1 281 1 346 2 328 1 79 2 10 1 9 3 242 1 162 1 138 1 246 1 14 1 165 1 273 1 332 1 166 1 275 1 19 1 336 1 255 1 168 1 366 1 189 1 299 1 
246 2 85 1 248 1 251 1 346 2 166 1 347 1 19 1 168 1 65 1 315 1 79 2 299 1 209 1 161 1 9 4 182 1 
246 4 248 2 85 1 346 4 251 2 166 1 347 1 19 1 168 1 65 2 315 2 79 2 299 1 209 2 161 1 9 8 30 1 182 2 
246 2 85 1 248 1 251 1 346 2 166 1 347 1 19 1 168 1 65 1 315 1 79 2 299 1 209 1 161 1 9 4 182 1 
246 2 85 1 248 1 251 1 346 2 166 1 347 1 19 1 168 1 65 1 315 1 79 2 299 1 209 1 161 1 9 4 182 1 
246 2 85 1 248 1 251 1 346 2 166 1 347 1 19 1 168 1 65 1 315 1 79 2 299 1 209 1 161 1 9 4 182 1 
98 1 351 1 100 1 208 1 108 1 339 1 91 1 54 1 129 1 143 1 
319 1 202 1 
98 1 100 1 208 1 108 1 37 1 54 1 320 1 179 1 129 1 
98 1 110 1 250 1 108 1 100 1 86 1 91 1 54 1 129 1 143 1 265 1 208 1 121 1 339 1 317 1 170 1 256 1 358 2 
98 1 110 1 250 1 108 1 100 1 86 1 91 1 54 1 129 1 143 1 265 1 208 1 121 1 339 1 317 1 170 1 256 1 358 2 
98 1 110 1 250 1 108 1 100 1 86 1 91 1 54 1 129 1 143 1 265 1 208 1 121 1 339 1 317 1 170 1 256 1 358 2 
225 1 174 1 345 1 
225 1 174 1 345 1 
331 1 25 1 
225 1 331 1 25 1 
3 1 172 1 
151 2 98 1 3 1 153 2 172 1 100 1 54 1 129 1 328 2 329 1 130 1 265 1 43 1 357 1 202 1 358 1 250 1 108 1 86 1 253 1 336 2 319 1 21 1 255 2 208 1 121 1 49 1 
174 1 345 1 
225 1 331 1 25 1 
31 1 151 2 153 2 346 1 264 1 240 1 349 2 284 1 79 2 288 2 137 1 10 1 9 2 242 1 289 1 162 1 81 2 246 1 106 1 249 1 166 1 336 2 19 1 168 1 299 1 230 1 169 1 232 1 301 2 211 1 51 1 
97 1 81 1 149 1 224 1 318 1 106 1 349 1 180 1 197 1 231 1 288 1 169 1 137 1 211 1 
81 1 0 1 140 1 154 1 292 1 322 1 47 2 194 1 349 1 180 1 197 1 102 1 288 1 28 1 8 1 169 1 211 1 46 1 
81 2 0 1 140 1 154 1 292 1 322 1 47 2 293 1 194 1 349 2 180 1 197 1 102 1 288 2 28 1 8 1 169 1 211 1 46 1 
81 1 0 1 140 1 154 1 292 1 322 1 47 2 194 1 349 1 197 1 181 1 102 1 288 1 8 1 169 1 211 1 46 1 
123 1 
214 1 204 1 316 1 198 1 59 1 69 1 71 1 170 1 213 1 306 1 
13 5 14 2 214 5 215 2 247 1 88 1 89 5 281 2 274 2 312 5 366 2 189 2 198 5 220 10 170 5 
290 1 250 1 323 1 59 1 170 1 265 1 
97 2 149 1 193 1 214 2 33 1 323 4 310 2 265 3 349 4 159 1 267 2 198 2 42 2 288 4 137 1 81 4 290 2 106 1 250 3 204 2 66 1 119 1 231 1 69 2 169 1 71 1 211 1 148 1 213 2 
259 1 214 1 316 1 198 1 59 1 170 1 306 1 
214 1 323 1 312 1 265 1 198 1 220 1 59 1 223 1 290 1 250 1 204 1 17 1 298 1 69 1 71 1 170 2 213 1 
97 1 81 1 203 1 106 2 204 1 87 1 56 1 349 1 338 1 69 1 288 1 169 1 137 1 71 1 211 2 213 1 305 1 
214 8 215 2 323 1 310 1 325 1 281 2 265 1 312 3 132 1 315 1 220 6 198 5 42 1 59 2 243 1 182 1 13 5 14 2 290 1 247 1 248 1 250 1 204 2 89 5 334 1 274 2 93 1 186 1 366 2 189 2 69 2 71 2 170 5 30 1 213 2 
151 1 214 2 215 2 153 1 125 1 281 1 328 1 265 1 199 1 198 2 12 1 247 1 84 1 109 1 250 1 141 1 204 1 63 1 274 2 275 1 336 1 363 1 255 1 69 1 71 1 210 1 72 1 213 1 
31 1 97 1 151 3 153 2 125 1 126 1 38 1 328 2 329 1 349 1 79 2 288 1 9 1 137 1 11 1 242 1 162 1 246 1 81 1 203 1 106 1 166 1 275 2 19 1 336 3 255 2 145 1 168 1 299 1 169 1 95 1 211 1 
13 2 214 1 310 1 204 1 89 2 312 2 220 4 198 2 207 1 42 1 59 2 69 1 71 1 170 4 213 1 
172 1 100 1 191 1 54 1 143 1 
100 1 54 1 206 1 
100 1 54 1 206 1 
100 1 54 1 206 1 
60 1 100 1 54 1 
60 1 100 1 54 1 
60 1 100 1 54 1 
100 1 54 1 
98 1 208 1 
246 5 260 5 104 3 215 2 109 2 141 1 332 2 346 5 281 2 166 1 19 1 168 1 79 2 199 2 299 1 161 1 9 10 12 1 
260 1 215 1 332 1 346 2 166 1 19 1 168 1 366 1 79 2 299 1 161 1 9 2 
246 2 14 1 260 2 104 1 215 1 332 1 281 1 346 2 166 1 19 1 168 1 366 1 189 1 79 2 299 1 161 1 9 4 
246 2 260 2 104 1 236 1 124 1 109 1 332 1 346 1 166 2 18 1 19 2 168 2 79 4 199 1 299 2 161 1 9 3 
246 1 82 1 124 1 248 1 36 1 346 1 166 3 19 3 168 3 315 1 79 6 299 3 161 1 9 2 182 1 
246 1 19 1 168 1 315 1 248 1 79 2 299 1 161 1 346 1 166 1 9 2 182 1 30 1 
246 1 19 2 82 1 168 2 315 1 248 1 79 4 299 2 161 1 346 1 166 2 9 2 182 1 30 1 
260 2 215 2 236 1 325 1 346 6 281 2 315 1 79 4 161 1 9 13 243 1 182 1 246 7 14 2 82 1 104 1 248 1 332 1 166 2 93 1 19 2 186 1 168 2 366 2 189 2 299 2 30 1 
246 1 19 1 168 1 315 1 248 1 79 2 299 1 161 1 346 1 166 1 9 2 182 1 30 1 
246 1 19 1 168 1 315 1 248 1 79 2 299 1 161 1 346 1 166 1 9 2 182 1 30 1 
260 2 215 2 325 1 346 6 281 2 315 1 79 2 161 1 9 12 243 1 182 1 246 6 14 2 104 1 248 1 332 1 166 1 93 1 19 1 186 1 168 1 366 2 189 2 299 1 30 1 
246 1 19 2 82 1 168 2 315 1 248 1 79 4 299 2 161 1 346 1 166 2 9 2 182 1 30 1 
246 1 124 1 248 1 346 1 166 2 19 2 168 2 315 1 79 4 299 2 161 1 9 2 30 1 182 1 
246 4 260 6 104 3 215 1 109 3 141 1 332 3 281 1 346 3 311 1 23 2 199 3 9 7 
246 1 124 1 248 1 346 1 166 2 19 2 168 2 315 1 79 4 299 2 161 1 9 2 30 1 182 1 
260 4 236 1 215 2 346 5 281 2 311 1 79 2 199 1 9 10 12 1 246 5 104 2 109 1 141 1 332 2 166 1 19 1 168 1 23 1 299 1 
246 3 259 1 260 2 104 2 215 1 109 1 141 1 346 3 281 1 311 1 23 1 199 1 207 1 9 6 
246 2 14 1 260 2 82 1 104 1 215 1 332 1 281 1 346 2 166 1 19 1 168 1 366 1 189 1 79 2 299 1 9 4 
246 1 315 1 248 1 346 1 9 2 182 1 
246 1 74 1 315 1 248 1 346 1 9 2 
246 1 248 1 9 1 
315 1 346 1 9 1 
246 3 14 1 82 1 260 3 104 2 215 1 332 1 88 1 346 3 281 1 166 1 19 1 168 1 366 1 189 1 79 2 299 1 9 6 
246 1 19 1 168 1 315 1 248 1 79 2 299 1 161 1 346 1 166 1 9 2 182 1 30 1 
246 3 260 2 104 1 215 1 109 1 141 1 332 1 346 3 281 1 199 1 9 6 
246 1 236 1 9 1 18 1 
336 1 151 1 314 1 153 1 343 1 360 1 329 1 
183 1 151 1 2 1 153 1 343 1 360 1 329 1 336 1 314 1 365 1 117 1 27 1 
97 1 81 4 149 1 106 1 293 1 349 4 231 1 367 1 288 4 137 1 169 1 211 1 368 1 
81 2 308 1 203 1 279 1 106 1 178 1 349 2 118 1 146 1 267 1 288 2 137 1 169 1 211 2 
81 1 97 1 349 1 102 1 292 1 322 1 47 1 288 1 169 1 211 1 
81 2 140 1 106 1 249 1 293 1 349 2 288 2 232 1 137 1 169 1 211 1 
149 1 97 1 81 5 106 3 249 1 99 1 293 1 294 1 349 5 267 1 231 1 288 4 137 2 169 2 211 2 368 1 
149 1 97 1 81 5 106 3 249 1 99 1 293 1 218 1 349 5 267 1 231 1 288 4 137 2 169 2 211 2 368 1 
149 1 259 1 81 1 97 1 349 1 106 1 231 1 288 1 169 1 137 1 211 1 
97 1 81 1 151 2 203 1 106 1 153 1 126 1 328 1 329 1 336 2 255 1 349 1 145 1 288 1 137 1 169 1 211 1 278 1 
81 1 151 2 203 2 106 3 153 2 126 1 226 1 63 1 328 2 329 1 336 2 255 1 349 1 145 1 267 1 300 1 24 1 190 1 288 1 137 2 169 1 211 1 278 1 
151 2 153 2 126 1 328 2 329 1 349 2 267 1 288 2 137 2 81 2 203 2 106 3 226 1 63 1 115 1 336 2 255 1 300 1 24 1 367 1 190 1 169 1 278 1 211 1 
52 1 97 1 307 1 323 1 265 2 56 1 349 3 267 1 353 1 59 1 288 3 137 1 81 3 203 1 106 4 250 2 184 1 24 1 367 1 190 1 169 1 170 1 211 1 
97 1 81 3 203 1 106 4 250 2 323 1 184 1 265 2 349 3 56 1 267 1 353 1 59 1 24 1 367 1 190 1 288 3 340 1 137 1 169 1 170 1 211 1 
81 1 283 1 349 1 288 1 169 1 211 1 
97 2 81 7 308 1 140 1 203 1 106 3 99 1 249 1 293 1 178 1 294 1 283 1 55 1 349 7 338 1 288 6 301 1 137 2 169 2 269 1 211 3 
151 2 153 1 281 3 328 1 329 3 284 1 199 2 288 1 10 1 9 14 11 1 242 2 12 1 162 2 246 7 104 4 165 1 203 1 106 1 109 2 332 1 293 1 166 2 63 1 205 1 19 2 336 2 297 1 255 1 168 2 23 1 207 1 299 2 169 1 211 1 260 5 215 3 126 1 173 1 346 7 311 1 349 1 79 4 137 1 138 1 81 1 141 2 145 1 94 1 95 1 278 1 
97 1 214 1 323 2 263 1 265 3 349 1 56 1 316 1 198 1 353 1 59 1 288 1 356 1 81 1 290 1 106 2 250 3 204 2 184 1 253 1 20 1 119 1 69 2 340 1 170 1 71 2 306 1 213 2 
81 2 203 1 106 2 293 1 87 1 283 1 349 2 338 1 353 1 288 2 137 1 169 1 211 2 
97 1 81 1 151 2 203 1 106 1 153 1 126 1 328 1 329 1 336 2 115 1 255 1 349 1 288 1 137 1 169 1 211 1 278 1 
81 1 308 1 203 1 106 1 178 1 55 1 349 1 338 1 267 1 288 1 137 1 169 1 211 2 
241 1 287 1 5 1 136 1 329 1 
250 2 34 1 226 1 239 1 5 2 63 1 184 1 329 1 253 1 361 1 265 2 241 1 187 1 287 2 300 1 59 1 136 2 170 1 73 1 
336 1 240 1 241 1 151 1 153 1 5 1 264 1 136 1 51 1 
241 1 361 1 73 1 
337 1 64 1 286 1 7 1 216 1 177 1 171 1 45 1 
83 1 344 1 216 1 177 4 327 2 337 2 64 2 7 1 286 3 219 1 277 1 29 1 303 1 45 4 
164 1 321 1 216 1 177 2 327 1 144 1 337 1 64 1 286 1 7 1 171 1 45 2 
83 1 216 1 177 3 64 1 337 1 286 1 7 1 277 2 50 1 171 1 29 2 45 3 
286 2 75 1 222 2 227 1 
7 1 216 1 175 1 177 1 171 1 45 1 
337 1 64 1 286 1 7 1 216 1 177 2 44 1 327 1 171 1 45 2 
53 1 
337 1 64 1 286 1 7 1 216 1 177 1 171 1 45 1 
259 1 337 1 64 1 286 1 
337 1 64 1 286 1 7 1 216 1 177 1 45 1 
354 1 177 1 348 1 
83 1 216 1 177 3 64 1 337 1 286 1 7 1 133 1 277 2 171 1 29 1 45 3 
337 1 64 1 286 1 7 1 216 1 177 2 122 1 327 1 45 2 
286 1 7 1 219 1 102 1 216 1 177 1 47 1 111 1 171 1 46 1 45 1 
337 1 286 1 7 1 216 1 177 1 171 1 45 1 
337 2 64 1 7 1 216 1 177 1 171 1 45 1 
216 2 177 2 128 1 92 1 337 1 286 1 7 2 160 1 171 1 45 2 
216 1 280 1 177 3 327 2 337 1 64 1 7 1 286 2 219 1 44 1 171 1 303 1 45 3 
292 1 216 1 177 2 47 2 194 1 327 1 337 1 64 1 286 1 7 1 102 1 41 1 171 1 45 2 46 1 
216 2 177 4 335 1 327 2 337 1 64 1 7 2 286 2 219 1 122 1 171 1 303 1 45 4 
216 1 177 3 327 1 64 1 337 1 7 1 286 1 277 1 44 1 171 1 45 3 
286 1 219 1 344 1 303 1 
337 1 286 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 305 18 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 305 100 262 193 288 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 305 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 305 100 262 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 305 100 262 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 305 100 262 193 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 305 100 262 193 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 48 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 130 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 130 299 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 48 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | ASSIGN | 1192 | = null
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
232 3 365 2 128 1 129 1 63 3 40 1 11 1 325 2 164 2 340 1 45 1 184 1 351 1 
3 1 232 9 257 1 211 1 365 5 36 1 142 1 63 9 40 1 11 1 12 1 325 2 164 2 302 1 45 3 184 4 303 2 351 6 221 2 327 2 307 1 128 1 129 1 378 1 20 1 105 1 340 2 228 2 
3 1 232 9 257 1 211 1 365 5 36 1 142 1 63 9 40 1 11 1 12 1 325 2 164 2 302 1 45 3 184 4 303 2 351 6 221 2 327 2 307 1 128 1 129 1 378 1 20 1 105 1 340 2 228 2 
3 1 232 10 257 1 211 1 365 6 36 1 142 1 63 10 40 1 11 1 12 1 325 2 164 2 302 1 45 4 184 5 303 2 351 7 221 2 327 2 307 1 128 1 129 1 378 1 20 1 105 1 340 2 228 2 
3 1 232 7 257 1 211 1 365 4 36 1 142 1 63 7 40 1 11 1 12 1 325 2 164 2 302 1 45 2 184 3 303 2 351 4 221 1 327 2 307 1 128 1 129 1 20 1 105 1 340 2 228 2 
221 2 327 1 232 4 307 1 365 3 128 1 129 1 378 1 63 4 11 1 12 1 325 1 164 1 45 1 228 1 184 2 303 1 351 3 
86 1 245 1 232 2 3 1 181 1 365 1 128 1 36 1 129 1 63 2 11 1 325 1 164 1 340 1 228 1 303 1 
232 9 114 1 365 5 63 9 40 1 11 1 12 1 325 2 164 2 302 1 184 4 45 3 303 1 351 7 221 2 327 1 307 1 128 1 129 1 378 1 105 1 340 1 228 1 229 1 
232 9 114 1 365 5 63 9 40 1 11 1 12 1 325 2 164 2 302 1 184 4 45 3 303 1 351 7 221 2 327 1 307 1 128 1 129 1 378 1 105 1 340 1 228 1 229 1 
88 1 59 1 196 1 249 1 377 1 268 1 83 1 348 1 220 1 324 1 133 1 369 1 368 1 31 1 
371 1 
123 1 268 2 157 1 371 1 76 1 324 1 54 1 368 2 
123 1 157 1 50 2 371 1 112 1 290 1 76 2 334 2 91 2 234 1 60 1 268 5 226 1 324 2 132 1 361 1 97 1 368 5 253 1 
157 1 371 1 295 1 
353 2 371 1 252 1 
377 2 52 1 348 2 59 2 220 2 196 2 133 1 249 2 
2 1 256 1 58 1 59 2 291 1 275 2 258 1 9 1 216 1 144 1 348 2 96 2 219 1 220 2 42 1 122 2 370 1 222 1 328 1 192 1 149 1 167 1 196 2 373 2 333 1 249 3 377 3 169 1 52 1 339 2 133 1 28 1 227 1 362 1 379 1 30 1 107 1 
377 1 88 1 83 1 348 1 59 1 220 1 196 1 133 1 369 1 249 1 
157 1 344 1 148 1 371 1 33 1 213 1 79 1 249 1 377 1 268 1 348 1 369 1 368 1 146 1 
157 1 344 1 59 1 371 1 33 1 196 1 79 1 249 1 377 1 268 2 348 1 220 1 369 1 368 2 146 1 
268 1 53 1 76 1 324 1 368 1 
123 1 166 1 268 2 157 1 371 1 76 1 324 1 368 2 
268 1 76 1 368 1 
59 1 196 1 249 2 377 2 52 2 238 1 348 2 220 1 29 1 
380 1 160 1 296 1 
122 1 2 1 167 1 373 1 258 1 249 1 377 1 52 1 10 1 96 1 219 1 28 1 227 1 42 1 30 1 107 1 
52 1 295 1 
122 1 2 1 167 1 196 1 373 1 258 1 296 1 249 2 377 2 348 1 96 1 219 1 23 1 220 1 42 1 227 1 28 1 301 1 30 1 107 1 
148 1 59 1 196 4 375 1 249 5 377 5 81 1 52 1 200 1 348 5 23 2 220 4 29 1 301 1 
377 2 88 1 348 2 220 2 196 2 171 1 369 1 249 2 
377 3 52 1 348 3 59 1 23 1 220 3 196 3 249 3 
377 1 88 1 348 1 220 1 196 1 369 1 249 1 
377 1 238 1 348 1 59 1 220 1 196 1 369 1 29 1 249 1 
2 1 175 1 344 1 256 1 59 2 33 1 275 2 258 1 216 1 144 1 348 3 96 1 219 1 220 3 42 1 301 1 369 1 368 1 146 1 122 1 222 1 328 1 192 1 167 1 149 1 196 3 373 1 333 1 79 1 249 4 377 4 169 1 268 1 52 1 23 1 204 1 339 1 227 1 28 1 133 1 362 1 29 1 30 1 107 1 
377 2 81 1 52 1 348 2 148 1 23 1 220 1 196 1 249 2 
175 1 344 1 59 1 371 1 33 1 196 3 79 1 249 3 377 3 268 1 312 1 348 3 23 2 220 3 29 1 368 1 369 1 301 1 146 1 
59 1 196 2 160 1 249 2 296 1 377 2 348 2 23 1 220 2 29 1 
122 1 2 1 167 1 373 1 258 1 249 1 377 1 52 1 96 1 219 1 28 1 227 1 42 1 30 1 107 1 
122 1 174 1 373 1 258 1 249 1 282 1 377 1 52 1 96 1 219 1 28 1 227 1 42 1 30 1 107 1 
1 1 291 2 90 1 275 2 296 2 160 2 64 1 144 1 216 2 120 1 222 1 328 1 192 1 168 1 126 1 150 1 281 1 169 1 201 1 24 1 271 1 339 4 362 1 380 2 
377 1 348 1 220 1 196 1 171 1 369 1 146 1 249 1 
316 1 43 1 212 1 
316 2 22 1 329 1 17 1 212 2 266 1 
316 1 212 1 
316 1 212 1 
22 1 17 1 
22 1 17 1 
22 1 17 1 
316 1 210 1 212 1 
316 1 210 1 212 1 
316 1 210 1 212 1 
316 1 66 1 212 1 
316 1 66 1 212 1 
316 1 66 1 212 1 
316 1 212 1 140 1 117 1 278 1 348 2 220 2 368 1 43 1 260 1 187 1 196 2 127 1 332 1 356 1 249 2 151 1 377 2 268 1 52 1 104 1 225 1 203 1 251 1 
316 2 371 1 356 2 212 2 266 1 92 1 277 1 151 2 298 1 268 2 104 1 93 2 225 2 203 3 106 1 338 1 368 2 251 2 85 1 
86 1 327 1 218 2 246 1 228 2 
327 1 228 1 303 1 
86 1 228 1 303 1 
86 1 327 2 218 1 337 1 246 1 228 3 
19 1 86 1 327 1 218 1 246 1 228 2 
342 1 1 1 157 1 178 2 289 1 90 1 112 3 113 1 91 1 346 2 117 1 278 1 349 2 324 4 41 1 368 5 123 1 353 3 50 1 309 1 16 1 371 2 76 1 372 1 332 1 281 1 334 1 268 5 201 1 361 2 252 1 253 1 
342 2 1 3 157 1 178 6 289 1 90 3 112 8 91 2 234 1 346 6 278 4 324 7 279 1 368 9 44 1 123 1 353 9 50 2 124 1 194 1 309 3 195 5 371 5 76 6 372 2 281 3 334 2 82 1 268 9 201 3 53 5 285 1 361 6 252 3 253 1 
342 1 1 1 157 1 178 2 90 1 112 3 91 1 234 1 346 2 278 1 349 1 324 2 41 1 368 3 353 4 50 1 371 3 16 1 309 1 372 1 334 1 281 1 268 3 201 1 361 2 252 2 
342 1 1 2 157 1 178 4 90 2 112 5 91 1 346 4 234 1 278 2 349 2 41 1 324 3 279 1 368 4 353 7 50 1 124 1 371 4 16 1 309 2 372 1 334 1 281 2 268 4 201 2 285 1 361 4 252 3 
248 1 
219 1 139 1 295 1 
118 1 219 1 
219 1 42 1 107 1 
147 1 219 1 
219 1 42 1 
110 1 219 3 42 1 320 1 139 2 107 1 
1 1 176 1 190 1 291 4 233 1 250 1 269 1 143 2 64 2 359 1 216 3 201 1 21 1 24 3 162 1 240 1 339 7 69 1 
1 4 364 1 176 1 291 16 90 3 275 2 233 5 115 1 143 3 64 5 144 1 216 15 162 1 240 2 69 2 242 4 190 1 222 1 192 1 309 3 125 1 331 1 281 3 250 2 310 1 269 2 359 1 201 4 24 10 27 3 339 31 362 1 286 1 155 1 
1 1 176 1 291 5 275 4 233 1 143 2 64 3 144 2 216 4 162 1 240 1 69 1 350 1 186 1 222 2 190 1 192 2 250 1 310 1 269 1 201 1 24 4 339 9 362 2 
1 1 176 1 190 1 291 4 233 1 250 1 269 1 143 2 64 2 359 1 216 3 201 1 24 3 162 1 240 1 339 7 69 1 
1 1 176 1 190 1 291 4 233 1 250 1 269 1 143 2 64 2 359 1 216 3 201 1 24 3 162 1 240 1 339 7 69 1 
0 1 122 1 343 1 232 1 75 2 354 2 179 1 5 1 373 1 258 1 293 1 35 2 322 1 63 1 154 1 96 1 219 1 28 1 42 1 325 1 340 2 164 1 30 1 
86 1 232 1 35 1 94 1 119 1 63 1 96 1 11 1 182 1 325 1 164 1 303 1 122 1 327 1 75 1 354 1 373 1 247 1 152 1 270 1 337 1 28 1 340 1 30 1 228 2 209 1 
86 1 232 2 365 1 35 1 94 1 119 1 63 2 215 1 96 1 11 1 325 1 164 1 303 1 351 1 122 1 327 1 75 1 354 1 373 1 247 1 128 1 152 1 129 1 270 1 337 1 28 1 340 1 30 1 228 2 209 1 
86 1 232 3 5 1 365 1 35 1 94 1 119 1 63 3 96 1 182 1 325 1 164 1 303 1 351 2 122 1 327 1 75 1 354 1 373 1 247 1 128 1 335 1 152 1 129 1 337 1 28 1 340 1 30 1 228 2 209 1 
86 1 232 2 365 1 35 1 63 2 96 1 182 1 303 1 351 2 122 1 327 1 75 1 354 1 373 1 247 1 128 1 335 1 152 1 129 1 337 1 28 1 340 1 30 1 228 2 209 1 
98 1 
0 1 344 1 112 2 258 2 8 1 213 1 348 1 219 1 68 1 71 1 72 1 122 2 123 1 305 1 76 2 79 1 357 1 18 1 268 3 361 2 28 1 173 1 30 1 32 1 274 1 179 1 319 1 33 1 91 1 37 2 96 2 42 1 368 3 369 1 146 1 189 1 50 1 148 1 372 1 373 2 280 1 334 1 198 1 249 1 377 1 253 1 
231 1 123 1 189 1 344 1 148 1 33 1 76 2 280 1 198 1 213 1 79 1 249 1 37 2 377 1 268 3 348 1 54 1 369 1 368 3 173 1 146 1 71 1 
123 1 189 1 157 1 261 1 344 1 148 1 371 1 33 1 76 1 280 1 198 1 213 1 79 1 249 1 37 3 377 1 268 3 348 1 54 1 369 1 368 3 173 1 146 1 71 1 
231 1 344 1 157 1 33 1 213 1 37 3 348 1 368 3 369 1 146 1 71 1 47 1 123 1 189 1 261 1 148 1 371 1 76 2 280 1 79 1 198 1 249 1 377 1 268 3 54 1 173 1 
156 1 231 2 274 1 344 1 288 1 319 1 33 1 112 1 91 1 213 1 37 2 348 1 68 1 368 3 369 1 146 1 72 1 71 1 47 2 189 1 123 1 305 1 50 1 262 1 148 1 100 1 193 1 76 3 280 1 334 1 198 1 79 1 249 1 377 1 268 3 361 1 173 1 54 1 253 1 
274 1 344 1 319 1 33 1 112 1 213 1 91 1 37 2 348 1 68 1 368 2 369 1 146 1 71 1 72 1 189 1 305 1 50 1 148 1 280 1 198 1 334 1 79 1 249 1 377 1 268 2 361 1 173 1 253 1 
156 1 274 1 344 1 319 1 33 1 112 1 91 1 213 1 37 2 348 1 68 1 368 2 369 1 146 1 72 1 71 1 189 1 305 1 148 1 262 1 50 1 100 1 280 1 79 1 198 1 334 1 249 1 377 1 268 2 361 1 173 1 253 1 
156 1 274 1 344 1 319 1 33 1 112 1 91 1 213 1 37 2 348 1 68 1 368 2 369 1 146 1 72 1 71 1 189 1 305 1 148 1 262 1 50 1 100 1 280 1 79 1 198 1 334 1 249 1 377 1 268 2 361 1 173 1 253 1 
231 2 157 1 344 1 4 1 319 2 33 1 112 1 91 1 213 1 37 4 348 1 161 2 68 2 368 4 369 1 146 1 47 2 71 1 123 2 189 1 305 1 261 2 353 2 148 1 50 1 371 1 100 1 76 4 224 1 280 1 79 1 198 1 334 1 249 1 376 1 377 1 268 4 361 1 173 1 253 1 314 2 
156 1 231 1 274 1 344 1 319 1 33 1 112 1 91 1 213 1 37 3 348 1 68 1 368 2 369 1 146 1 72 1 71 1 47 1 189 1 305 1 261 1 50 1 148 1 262 1 100 1 193 1 76 1 280 1 334 1 79 1 198 1 249 1 377 1 268 2 361 1 173 1 253 1 
156 1 231 1 274 1 344 1 319 1 33 1 112 1 91 1 213 1 37 3 348 1 68 1 368 2 369 1 146 1 72 1 71 1 47 1 189 1 305 1 261 1 50 1 148 1 262 1 100 1 193 1 76 1 280 1 334 1 79 1 198 1 249 1 377 1 268 2 361 1 173 1 253 1 
231 2 157 1 344 1 319 2 33 1 112 1 213 1 91 1 37 4 348 1 161 2 68 2 368 4 369 1 146 1 47 2 71 1 123 2 189 1 305 1 261 2 353 2 50 1 148 1 371 1 76 4 280 1 224 1 198 1 334 1 79 1 249 1 377 1 268 4 313 1 361 1 173 1 253 1 314 2 
0 1 58 1 179 1 291 1 275 4 258 1 215 1 144 2 216 1 348 1 96 3 219 1 220 1 42 1 48 1 122 3 370 1 222 2 328 2 192 2 196 1 373 3 333 1 249 1 377 1 267 1 169 2 23 1 26 1 271 1 28 1 339 2 362 2 30 1 
1 1 59 1 291 1 90 1 275 2 160 1 296 1 64 1 144 1 216 2 348 1 220 1 352 1 222 1 328 1 192 1 309 1 196 1 197 1 281 1 249 1 377 1 169 1 201 1 24 1 339 3 29 1 362 1 380 1 
1 1 176 1 291 3 275 2 160 1 296 1 295 1 143 1 64 2 144 1 216 3 162 1 69 1 190 1 222 1 328 1 192 1 269 1 169 1 52 2 201 1 24 2 271 1 339 6 362 1 380 1 
1 1 287 1 291 6 90 1 275 2 233 1 296 8 160 3 64 1 216 4 144 1 242 2 14 1 222 1 328 1 192 1 309 2 197 1 331 1 199 1 281 2 51 1 169 1 201 2 24 2 27 2 339 10 362 1 380 8 
2 1 58 1 291 1 275 2 258 1 160 1 144 1 347 1 216 1 96 1 10 1 348 1 219 1 220 1 42 1 301 1 122 1 222 1 328 1 15 1 192 1 167 1 196 1 101 1 373 1 197 1 333 1 249 2 377 2 169 1 52 1 23 1 227 1 28 1 339 2 362 1 30 1 107 1 
1 3 2 2 255 2 58 1 111 2 291 10 258 1 214 1 296 7 160 7 61 2 64 4 216 10 348 1 219 2 162 1 220 1 301 1 69 1 122 3 222 3 167 2 309 2 77 1 269 1 169 3 131 1 23 1 24 8 28 2 227 2 362 3 30 2 176 1 90 2 275 6 233 4 38 2 143 1 144 3 96 3 182 1 42 2 190 1 328 3 192 3 149 2 196 1 373 3 197 1 333 1 281 2 249 3 377 3 52 2 201 3 339 20 380 7 107 2 
328 1 222 1 192 1 291 2 275 2 233 1 281 1 160 1 296 1 169 1 144 1 201 1 120 1 24 1 339 2 271 1 362 1 380 1 
1 1 328 1 222 1 192 1 168 1 90 1 275 2 160 1 296 1 169 1 64 1 144 1 216 2 24 1 339 2 271 1 362 1 380 1 
1 1 291 2 90 1 275 2 233 1 296 2 160 2 64 1 144 1 216 2 222 1 328 1 192 1 309 1 281 1 169 1 201 1 24 2 271 1 339 4 362 1 380 2 
328 1 222 1 192 1 291 2 275 2 233 1 281 1 160 1 296 1 267 1 169 1 144 1 201 1 120 1 24 1 339 2 362 1 380 1 
1 1 328 1 222 1 192 1 168 1 90 1 275 2 160 1 296 1 267 1 169 1 64 1 144 1 216 2 24 1 339 2 362 1 380 1 
1 1 291 2 90 1 275 2 233 1 296 2 160 2 64 1 144 1 216 2 222 1 328 1 192 1 309 1 281 1 267 1 169 1 201 1 24 2 339 4 362 1 380 2 
1 1 291 2 90 1 275 2 233 1 296 2 160 2 64 1 144 1 216 2 222 1 328 1 192 1 309 1 281 1 169 1 201 1 24 2 339 4 362 1 380 2 
2 1 58 1 291 1 275 2 258 1 144 1 216 1 96 1 219 1 42 1 122 1 328 1 222 1 192 1 167 1 149 1 373 1 333 1 249 1 377 1 169 1 52 1 339 2 227 1 28 1 362 1 30 1 107 1 
174 1 58 1 291 1 275 2 258 1 367 1 144 1 216 1 96 1 219 1 42 1 122 1 328 1 222 1 192 1 373 1 333 1 282 1 249 1 377 1 169 1 52 1 339 2 227 1 28 1 362 1 30 1 107 1 
1 1 291 2 90 1 275 2 233 1 296 2 160 2 64 1 144 1 216 2 222 1 328 1 192 1 309 1 197 1 281 1 169 1 201 1 24 2 339 4 362 1 380 2 
1 1 2 1 111 1 90 1 291 2 275 2 233 1 160 2 296 2 64 1 216 2 215 1 144 1 96 1 219 1 42 1 122 1 328 1 222 1 192 1 167 1 149 1 309 1 373 1 281 1 249 1 377 1 169 1 201 1 24 2 339 4 227 1 28 1 362 1 30 1 380 2 107 1 
1 1 59 1 90 1 291 2 275 2 233 1 296 1 160 1 216 1 144 1 348 1 220 1 222 1 328 1 192 1 309 1 196 1 197 1 80 1 281 1 249 1 377 1 169 1 201 1 24 1 339 3 29 1 362 1 380 1 
1 2 291 6 90 2 275 4 233 1 62 1 259 1 64 1 144 2 216 7 145 1 183 1 242 2 186 1 222 2 192 2 309 2 331 1 281 2 201 2 24 2 27 1 339 13 56 1 362 2 286 1 363 1 254 1 230 1 
57 1 1 2 180 1 291 14 90 2 275 6 233 2 294 1 321 1 62 1 259 1 64 2 216 12 144 3 183 2 242 2 186 1 304 1 222 3 192 3 309 3 265 1 281 3 310 2 201 3 24 4 27 2 339 26 362 3 286 2 363 2 84 1 254 4 230 1 
57 1 1 5 291 20 294 1 7 1 62 1 64 4 259 1 216 21 162 1 69 1 304 1 222 3 309 4 265 1 310 1 269 1 24 8 27 3 362 3 363 1 84 1 230 1 176 1 90 4 180 1 275 6 233 4 321 1 143 1 144 3 183 2 242 4 186 1 190 1 192 3 331 1 281 4 201 5 339 41 56 1 286 3 254 4 
57 1 1 4 176 1 180 1 291 20 90 3 275 8 233 3 7 1 294 1 321 1 62 1 143 1 259 1 64 4 144 4 216 18 162 1 183 2 69 1 242 4 186 1 304 1 190 1 222 4 192 4 309 4 265 1 331 1 281 4 310 2 269 1 201 5 24 7 27 3 339 38 56 1 362 4 286 3 84 1 363 1 254 4 230 1 
57 1 1 8 176 1 180 1 291 27 90 7 275 4 233 7 294 1 321 1 62 1 143 1 259 1 64 7 144 2 216 25 162 1 183 1 69 1 242 4 186 1 304 1 190 1 222 2 192 2 309 7 265 1 331 2 281 7 310 1 51 2 269 1 201 8 24 14 27 4 339 52 362 2 286 2 84 1 363 1 254 4 230 1 
316 1 225 1 338 1 70 1 212 1 356 1 251 1 266 1 85 1 151 1 
127 1 43 1 
316 1 300 1 225 1 345 1 212 1 356 1 251 1 207 1 151 1 
210 1 137 1 
66 1 329 1 315 1 
316 1 371 1 356 1 212 1 266 1 92 1 151 1 298 1 268 1 104 1 93 1 225 1 203 2 106 1 338 1 368 1 251 1 85 1 
316 1 371 1 356 1 212 1 266 1 92 1 151 1 298 1 268 1 104 1 93 1 225 1 203 2 106 1 338 1 368 1 251 1 85 1 
316 1 371 1 356 1 212 1 266 1 92 1 151 1 298 1 268 1 104 1 93 1 225 1 203 2 106 1 338 1 368 1 251 1 85 1 
329 1 210 1 137 1 
329 1 210 1 137 1 
66 1 315 1 
66 1 329 1 315 1 
187 1 140 1 
316 1 212 1 92 1 140 1 117 1 93 1 278 1 348 2 220 2 324 1 368 1 43 1 260 1 187 1 196 2 127 1 332 1 356 1 249 2 151 1 377 2 268 1 52 1 225 1 202 1 203 1 251 1 
58 1 291 1 34 1 275 2 144 1 216 1 348 2 96 2 219 1 42 1 241 1 46 1 122 2 370 2 328 1 222 1 192 1 264 1 373 2 197 1 374 1 102 1 333 1 249 2 377 2 169 1 26 1 28 1 339 2 362 1 30 1 
0 1 122 1 191 1 75 1 179 1 373 1 258 1 39 1 322 1 96 1 219 1 28 1 42 1 30 1 
86 1 122 1 327 1 318 1 191 1 75 1 373 1 152 1 119 1 96 1 337 1 182 1 28 1 228 2 30 1 208 1 303 1 209 1 
86 1 122 2 327 1 318 1 191 1 75 1 373 2 152 1 119 1 215 1 96 2 337 1 182 1 28 1 228 2 30 1 208 1 303 1 209 1 
86 1 122 1 327 1 318 1 75 1 373 1 152 1 119 1 96 1 337 1 182 1 28 1 228 2 206 1 30 1 303 1 209 1 
236 1 
157 1 50 1 371 1 112 1 334 1 91 1 226 1 97 1 361 1 253 1 
1 2 136 1 353 10 178 5 309 2 371 5 90 2 112 5 281 2 346 5 38 1 201 2 163 2 361 5 252 5 
268 1 123 1 157 1 371 1 76 1 368 1 
32 2 0 1 158 1 179 1 112 2 292 1 258 2 8 1 91 2 234 1 96 4 219 1 42 1 368 3 185 1 122 4 123 2 50 2 263 2 372 2 76 4 373 4 334 2 357 1 268 3 28 1 361 2 30 1 253 1 
157 1 226 1 371 1 112 1 361 1 97 1 295 1 
274 1 50 1 112 1 361 1 91 1 334 1 253 1 72 1 
1 2 112 7 258 1 159 1 346 6 118 2 219 4 13 1 163 2 122 1 123 1 353 12 309 2 76 2 268 2 170 1 25 1 28 1 361 6 30 2 272 1 178 6 33 1 90 2 320 1 139 1 91 2 141 2 38 2 96 1 42 1 368 2 50 2 371 6 372 1 373 1 334 2 281 2 336 1 201 2 252 6 253 2 107 1 108 1 
32 1 57 1 1 2 87 1 136 1 157 2 178 5 112 8 90 2 294 1 91 2 346 5 321 1 163 2 368 1 242 1 244 1 123 1 304 1 353 6 50 2 371 5 309 2 372 1 76 1 334 2 281 2 268 1 201 2 27 1 361 5 286 1 252 3 253 2 84 1 
156 1 1 1 88 1 136 1 176 1 59 1 112 2 91 1 348 1 220 1 163 2 369 1 368 1 69 1 50 1 196 1 334 1 249 1 377 1 269 1 268 1 83 1 201 2 361 2 133 1 205 1 253 1 31 1 
2 1 256 1 59 2 275 2 258 1 216 1 144 1 96 1 348 2 219 1 220 2 42 1 122 1 222 1 328 1 192 1 149 1 167 1 196 2 373 1 333 1 249 3 377 3 169 1 52 1 339 1 133 1 28 1 227 1 362 1 30 1 107 1 
32 1 157 2 353 4 178 2 50 1 371 4 372 1 112 1 334 1 91 1 346 2 143 1 361 2 252 2 253 1 
225 1 341 1 140 1 85 1 151 1 
225 1 55 1 151 1 
225 1 55 1 151 1 
225 1 55 1 151 1 
225 1 67 1 151 1 
225 1 67 1 151 1 
225 1 67 1 151 1 
225 1 151 1 
316 1 212 1 
1 2 222 1 176 1 192 1 291 5 275 2 233 2 269 2 64 3 144 1 216 5 201 2 24 5 339 10 362 1 205 1 69 2 186 1 
222 1 192 1 291 2 275 2 233 1 281 1 144 1 201 1 24 1 339 2 362 1 186 1 
1 1 222 1 192 1 309 1 90 1 291 2 275 2 233 1 281 1 64 1 216 2 144 1 201 1 24 2 339 4 362 1 186 1 
121 1 222 3 192 3 291 1 275 6 233 1 310 1 269 1 64 1 216 2 144 3 24 2 339 3 56 1 362 3 69 1 186 1 
1 5 317 1 176 2 291 16 90 3 275 10 233 5 115 1 143 1 64 7 216 18 144 5 162 1 69 3 242 4 186 1 121 1 190 1 222 5 192 5 125 1 309 3 331 1 281 3 310 2 269 3 201 5 24 12 27 3 339 34 56 1 362 5 286 1 155 1 
1 1 176 1 291 4 275 2 294 1 143 1 64 2 216 4 144 1 162 1 242 1 69 1 186 1 222 1 190 1 192 1 269 1 201 1 24 2 27 1 339 8 362 1 286 1 
1 1 317 1 176 1 291 6 275 4 233 1 294 1 143 1 64 2 216 5 144 2 162 1 69 1 242 2 186 1 190 1 222 2 192 2 309 1 331 1 281 1 269 1 201 2 24 3 27 1 339 11 362 2 286 1 
57 1 1 3 317 1 176 1 291 9 90 2 275 6 233 1 294 1 321 1 143 1 64 3 216 10 144 3 162 1 69 1 242 1 186 1 304 1 190 1 222 3 192 3 309 2 281 2 310 1 269 1 201 3 24 4 27 1 339 19 362 3 286 1 84 1 
57 1 1 2 317 1 176 1 291 10 90 1 275 6 233 2 294 1 321 1 143 1 64 3 216 7 144 3 162 1 69 1 242 1 186 1 304 1 190 1 222 3 192 3 309 2 281 2 310 1 269 1 201 3 24 5 27 1 339 17 362 3 286 1 84 1 
1 1 176 1 291 4 275 2 294 1 143 1 64 2 216 4 144 1 162 1 242 1 69 1 186 1 222 1 190 1 192 1 269 1 201 1 24 2 27 1 339 8 362 1 286 1 
57 1 1 2 291 6 90 2 275 2 233 1 294 1 321 1 64 1 216 6 144 1 242 1 186 1 304 1 222 1 192 1 309 2 281 2 201 2 24 2 27 1 339 12 362 1 286 1 84 1 
57 1 1 2 317 1 176 1 291 10 90 1 275 8 233 2 294 1 321 1 143 1 64 3 216 8 144 4 162 1 69 1 242 1 186 1 304 1 190 1 222 4 192 4 309 2 281 2 310 2 269 1 201 3 24 5 27 1 339 18 362 4 286 1 84 1 
57 1 1 2 291 9 90 2 275 8 233 3 294 1 321 1 64 3 216 7 144 4 242 1 186 1 304 1 222 4 192 4 309 3 281 3 310 2 201 3 24 6 27 1 339 16 362 4 56 1 286 1 84 1 
1 1 190 2 176 1 291 3 233 3 269 3 64 3 216 4 201 1 162 1 24 6 339 7 69 3 
57 1 1 2 176 1 291 10 90 1 275 8 233 1 294 1 321 1 143 1 64 3 216 8 144 4 162 1 69 1 242 1 186 1 304 1 190 1 222 4 192 4 309 2 281 2 310 2 269 1 201 3 24 4 27 1 339 18 362 4 56 1 286 1 84 1 
1 1 176 1 222 2 190 1 192 2 291 4 275 4 233 1 310 1 269 1 143 1 64 2 201 1 216 4 144 2 24 3 162 1 339 8 362 2 69 1 
1 1 190 1 176 1 291 3 295 1 269 1 143 1 64 2 216 3 201 1 162 1 24 2 339 6 69 1 
1 1 317 1 222 1 192 1 309 1 90 1 291 2 275 2 233 1 281 1 64 1 216 2 144 1 201 1 24 2 339 4 362 1 
1 1 309 1 90 1 291 3 331 1 233 1 281 1 64 1 216 4 201 1 24 2 27 1 339 7 286 1 242 2 
1 3 176 1 291 11 90 2 275 4 233 4 143 1 64 5 216 12 144 2 162 1 69 2 242 2 121 1 190 1 222 2 192 2 309 2 331 1 281 2 199 1 51 1 310 2 269 2 201 3 24 9 27 2 339 23 362 2 
216 1 339 1 242 1 
291 1 27 1 339 1 
1 1 317 1 222 1 192 1 309 1 291 3 90 1 275 2 233 1 281 1 38 1 64 2 144 1 216 3 201 1 24 3 339 6 362 1 
57 1 1 2 291 6 90 2 275 2 233 1 294 1 321 1 64 1 216 6 144 1 242 1 186 1 304 1 222 1 192 1 309 2 281 2 201 2 24 2 27 1 339 12 362 1 286 1 84 1 
1 1 269 1 64 1 216 3 201 1 176 1 24 2 291 3 339 6 233 1 69 1 
121 1 190 1 222 1 192 1 291 1 275 2 233 1 310 1 269 1 64 1 216 2 144 1 24 2 162 1 339 3 362 1 69 1 
130 1 
103 1 299 1 153 1 130 1 172 1 135 1 
0 1 122 4 73 1 179 1 373 4 258 1 215 1 96 4 219 1 360 1 42 1 28 1 30 1 
122 2 306 1 263 1 77 1 373 2 355 1 65 1 96 2 219 1 42 1 28 1 30 2 107 1 134 1 
86 1 122 1 152 1 96 1 28 1 373 1 258 1 228 1 30 1 303 1 
122 2 215 1 96 2 219 1 182 1 28 1 42 1 373 2 30 1 102 1 46 1 
0 1 122 5 223 1 179 1 263 1 373 5 258 1 215 1 96 4 219 3 323 1 360 1 42 2 28 2 30 2 46 1 
0 1 122 5 179 1 263 1 373 5 258 1 78 1 215 1 96 4 219 3 323 1 360 1 42 2 28 2 30 2 46 1 
0 1 122 1 96 1 219 1 179 1 28 1 42 1 373 1 258 1 30 1 295 1 
122 1 167 1 196 1 373 1 258 1 249 2 377 2 52 1 348 1 96 1 219 1 23 1 220 1 42 1 227 1 28 1 30 1 107 1 
147 1 122 1 344 1 167 1 263 1 196 1 373 1 249 2 283 1 377 2 52 1 348 2 96 1 219 3 23 1 220 2 42 2 227 1 28 1 369 1 30 1 146 1 107 2 
147 1 122 2 174 1 73 1 344 1 263 1 196 1 373 2 249 2 283 1 377 2 52 1 348 2 96 2 219 3 23 1 220 2 42 2 227 1 28 1 369 1 30 1 146 1 107 2 
147 1 122 3 73 1 157 1 371 1 33 1 263 1 76 1 373 3 258 1 139 1 283 1 358 1 268 2 118 1 96 3 219 4 42 1 28 1 368 2 30 1 243 1 107 1 
147 1 122 3 73 1 157 1 371 1 33 1 263 1 76 1 373 3 258 1 139 1 283 1 268 2 118 1 336 1 96 3 219 4 42 1 28 1 368 2 30 1 107 1 
122 1 74 1 96 1 28 1 373 1 30 1 
48 1 122 2 306 1 373 2 320 1 258 1 235 1 215 1 96 2 219 1 42 1 28 1 30 2 107 1 134 1 
2 1 1 1 111 1 291 3 160 1 296 1 61 1 64 2 215 1 216 3 348 1 219 1 220 1 162 1 69 1 122 1 222 2 167 1 264 1 169 2 269 1 23 1 24 2 28 1 227 1 362 2 30 1 176 1 275 4 143 1 144 2 96 1 42 1 328 2 190 1 192 2 149 1 196 1 373 1 197 1 249 2 377 2 52 2 201 1 339 6 380 1 107 1 
157 1 158 1 33 1 112 1 258 1 139 1 91 2 118 1 96 1 219 2 324 1 97 1 368 3 122 1 123 1 50 2 371 1 76 2 373 1 334 2 268 3 336 1 226 1 25 1 361 1 253 2 272 1 108 1 
122 2 74 1 373 2 320 1 159 1 139 1 215 1 96 2 219 2 42 1 28 1 30 2 107 1 
122 1 174 1 196 1 373 1 258 1 249 2 377 2 52 1 348 1 96 1 219 1 23 1 220 1 42 1 227 1 28 1 30 1 107 1 
122 1 306 1 263 1 373 1 320 1 235 1 96 1 219 1 42 1 28 1 30 2 107 1 134 1 
52 1 99 1 366 1 165 1 326 1 
99 2 175 1 157 1 344 1 371 1 33 1 276 1 79 1 297 1 268 2 52 1 237 1 366 1 324 1 369 1 368 2 165 2 326 2 146 1 
377 1 366 1 348 1 34 1 241 1 374 1 165 1 326 1 249 1 
175 1 99 1 344 1 366 1 33 1 369 1 165 1 276 1 79 1 326 1 146 1 297 1 
129 1 63 1 232 1 11 1 325 1 164 1 365 1 128 1 
188 1 232 4 365 3 36 1 128 2 129 2 63 4 239 1 325 1 164 1 45 1 184 1 273 1 351 2 
232 2 138 1 365 1 311 1 128 1 129 1 63 2 11 1 325 1 164 1 229 1 351 1 
232 3 89 1 365 1 36 2 128 1 129 1 63 3 239 1 11 1 325 1 164 1 273 2 
49 1 217 1 6 2 365 2 
63 1 232 1 11 1 308 1 325 1 164 1 
129 1 63 2 232 2 105 1 11 1 325 1 164 1 365 1 128 1 351 1 
177 1 
129 1 63 1 232 1 11 1 325 1 164 1 365 1 128 1 
129 1 365 1 295 1 128 1 
129 1 63 1 232 1 325 1 164 1 365 1 128 1 
63 1 340 1 35 1 
232 3 365 1 36 2 128 1 129 1 284 1 63 3 239 1 11 1 325 1 164 1 273 1 
221 1 129 1 63 2 232 2 325 1 164 1 365 1 128 1 351 1 
327 1 232 1 307 1 365 1 63 1 11 1 325 1 164 1 184 1 228 1 303 1 
129 1 63 1 232 1 11 1 325 1 164 1 365 1 
129 2 63 1 232 1 11 1 325 1 164 1 128 1 
109 1 232 2 330 1 365 1 129 1 63 2 95 1 11 1 325 2 164 2 
232 3 365 2 128 1 129 1 63 3 105 1 11 1 325 1 164 1 302 1 45 1 184 1 351 2 
86 1 327 1 232 2 365 1 128 1 116 1 129 1 63 2 11 1 337 1 325 1 164 1 228 2 303 1 351 1 
221 1 232 4 365 2 128 1 129 1 378 1 63 4 11 1 325 2 164 2 45 1 184 1 351 2 
232 3 365 1 36 1 128 1 129 1 63 3 105 1 11 1 325 1 164 1 351 1 
188 1 184 1 45 1 365 1 
129 1 365 1 

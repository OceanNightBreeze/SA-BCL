#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 265 131 108 156 (61,255) (61,255) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 265 131 108 156 (61,255) (61,255) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 265 131 108 156 (61,255) (61,255) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 265 131 108 156 (61,255) (61,255) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 265 131 108 156 213 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 265 131 108 156 213 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 167 270 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 167 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException 265 131 108 156 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money; | RETURN | 5040 | return null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
131 2 208 1 330 4 238 1 156 1 61 1 304 1 27 2 92 2 108 2 49 1 255 1 256 4 346 1 348 1 138 1 148 1 265 2 232 1 34 1 310 1 87 2 
131 2 208 1 330 4 238 1 156 1 61 1 304 1 27 2 92 2 108 2 49 1 255 1 256 4 346 1 348 1 148 1 138 1 265 2 232 1 34 1 310 1 87 2 
131 2 208 1 330 4 238 1 156 1 61 1 304 1 27 2 92 2 108 2 49 1 255 1 256 4 346 1 348 1 148 1 138 1 265 2 232 1 34 1 310 1 87 2 
131 2 208 1 330 4 238 1 156 1 61 1 304 1 27 2 92 2 108 2 49 1 255 1 256 4 346 1 348 1 148 1 138 1 265 2 232 1 34 1 310 1 87 2 
131 2 330 4 208 3 238 1 359 1 27 1 108 1 190 1 256 4 348 1 138 1 8 2 265 3 34 1 205 1 367 1 80 1 87 1 
164 1 330 2 238 1 27 1 92 1 190 1 256 2 346 1 179 1 348 1 265 1 170 1 34 1 310 1 80 1 87 1 
131 1 330 3 208 1 27 2 92 1 108 1 190 1 256 3 348 1 265 2 232 1 80 1 87 2 
131 2 330 4 208 2 156 1 27 2 92 1 108 2 49 1 256 4 348 1 213 1 265 2 232 1 312 1 87 2 
131 2 330 4 208 2 156 1 27 2 92 1 108 2 49 1 256 4 348 1 213 1 265 2 232 1 312 1 87 2 
299 1 218 1 110 1 
76 2 320 1 218 1 
153 2 366 2 6 1 98 2 119 2 78 2 201 1 298 2 
329 1 153 2 173 1 1 2 89 1 94 1 50 1 306 1 307 1 78 3 201 1 5 1 366 2 6 1 32 1 98 2 119 3 79 1 234 2 35 1 36 1 236 1 239 1 315 1 189 1 126 1 318 1 40 2 66 2 298 2 42 1 273 1 300 2 352 1 44 1 23 1 252 1 
153 1 11 1 78 1 201 1 298 1 366 1 31 1 98 1 274 1 119 1 
226 1 78 1 41 1 299 1 376 1 366 1 322 1 31 1 119 1 150 1 55 1 218 1 22 1 141 1 
153 2 226 1 78 2 201 1 4 1 366 2 31 2 98 2 119 2 55 2 141 1 11 1 41 1 298 2 322 1 299 1 274 1 150 2 218 1 
68 1 55 1 150 1 15 1 365 1 
299 1 55 2 150 2 109 1 218 1 15 1 163 1 365 1 
55 1 150 1 15 1 
153 1 11 1 78 1 201 1 298 1 365 1 4 1 366 1 31 1 98 1 274 1 119 1 150 1 55 1 
218 1 
299 1 139 1 55 2 150 2 218 1 15 1 163 1 365 1 
113 1 223 2 225 1 95 1 373 2 211 1 96 1 365 2 67 1 15 2 299 1 17 1 275 1 150 5 55 5 356 2 218 1 24 1 163 1 
6 1 110 1 
153 1 26 1 372 1 78 2 298 1 366 2 31 1 6 1 99 1 98 1 119 2 
350 1 240 1 128 1 
236 1 239 1 94 1 165 1 40 1 306 1 78 1 307 1 66 1 273 1 6 1 119 1 234 1 23 1 252 1 36 1 
236 1 153 1 239 1 303 1 94 1 306 1 40 1 307 1 78 2 66 1 298 1 273 1 366 1 350 1 119 2 327 1 234 1 36 1 23 1 252 1 
153 2 78 2 298 2 366 2 31 1 6 1 99 1 119 2 327 1 
153 1 366 1 31 1 274 1 119 1 78 1 298 1 
153 1 26 1 372 1 78 1 298 1 366 1 31 1 98 1 119 1 
153 3 303 1 1 1 89 1 94 1 226 1 306 1 50 1 307 1 78 4 201 1 308 1 5 1 366 3 6 1 31 1 32 1 98 2 119 4 79 1 55 1 234 1 141 1 35 1 36 1 236 1 370 1 239 1 372 1 318 1 40 1 41 1 66 1 298 3 42 1 273 1 322 1 300 2 352 1 327 1 150 1 44 1 252 1 23 1 
153 1 78 2 280 1 298 1 366 2 31 1 6 1 99 1 119 2 327 1 22 1 
153 3 303 1 226 1 372 1 78 3 41 1 298 3 308 1 366 3 322 1 31 1 98 1 119 3 289 1 55 1 150 1 327 2 218 1 141 1 
153 2 240 1 372 1 78 2 298 2 366 2 98 1 350 1 119 2 327 1 
236 1 239 1 94 1 40 1 306 1 78 1 307 1 66 1 273 1 6 1 119 1 234 1 23 1 252 1 36 1 
236 1 239 1 48 1 94 1 40 1 78 1 307 1 66 1 273 1 6 1 119 1 234 1 276 1 23 1 36 1 
1 4 3 1 177 1 178 1 363 1 228 1 283 1 180 1 5 1 32 1 79 1 35 1 339 1 291 1 240 2 63 1 126 2 318 2 321 1 128 2 350 2 300 2 352 1 44 1 
153 1 226 1 78 1 298 1 366 1 31 1 119 1 73 1 
153 4 303 1 372 1 280 1 78 5 282 1 298 4 366 5 31 1 6 1 99 1 98 1 246 1 119 5 327 2 22 1 
153 1 366 1 31 1 274 1 119 1 78 1 298 1 
91 1 284 1 
91 1 284 1 
269 1 258 1 
269 1 258 1 
269 1 258 1 
91 1 93 1 284 1 
91 1 107 1 284 1 
269 1 91 2 64 1 258 1 220 1 284 2 
91 1 93 1 284 1 
91 1 93 1 284 1 
91 1 242 1 284 1 
91 1 242 1 284 1 
91 1 242 1 284 1 
369 2 332 2 74 1 91 2 371 1 305 1 157 1 77 1 64 1 375 1 244 2 284 2 192 3 214 1 288 2 150 2 55 2 218 1 219 2 
153 2 332 1 91 1 305 1 78 2 284 1 51 1 366 2 31 1 6 1 99 1 119 2 288 1 55 1 209 1 107 1 343 1 39 1 12 1 298 2 244 1 192 1 325 1 150 1 328 1 219 1 
238 1 138 1 34 1 
164 1 238 1 34 1 
164 1 238 3 138 2 266 1 317 1 337 1 
164 1 238 2 138 1 266 1 53 1 337 1 
164 1 238 2 138 1 266 1 337 2 
223 1 225 3 3 1 76 3 228 1 283 1 180 1 365 4 183 1 33 1 233 1 55 5 163 1 188 1 237 2 316 1 209 1 343 1 62 2 373 1 39 1 320 1 212 1 14 1 15 1 299 1 17 1 275 2 19 2 356 1 150 5 218 2 
223 2 225 8 3 3 257 1 76 9 228 3 283 3 180 3 365 7 183 1 233 3 55 9 122 1 142 1 290 5 163 1 237 6 60 1 39 4 373 2 320 3 212 2 14 2 15 6 68 5 299 1 17 1 323 1 275 6 249 1 19 6 150 9 356 2 218 5 24 1 
223 1 225 3 3 1 76 4 228 1 283 1 180 1 365 2 55 3 233 1 188 1 237 2 316 1 62 1 373 1 39 1 320 2 212 1 14 1 299 1 275 2 19 2 356 1 150 3 218 3 24 1 
223 1 225 5 3 2 257 1 76 7 228 2 283 2 180 2 365 3 55 4 233 2 142 1 188 1 237 4 316 1 62 2 373 1 39 2 320 3 212 1 14 1 299 1 275 4 249 1 19 4 356 1 150 4 218 4 24 1 
236 1 362 1 110 1 
236 1 136 1 
267 1 
236 1 307 1 
236 2 362 2 227 1 307 1 273 1 267 1 185 1 
236 1 307 1 273 1 
236 1 137 1 
86 1 106 1 1 7 318 3 363 3 126 4 296 1 283 1 180 1 30 2 230 1 111 1 368 1 54 1 207 1 88 1 339 2 
86 1 106 1 1 7 318 3 363 3 126 4 296 1 283 1 180 1 30 2 230 1 111 1 368 1 54 1 207 1 88 1 339 2 
86 1 106 1 1 7 318 3 363 3 126 4 296 1 283 1 180 1 16 1 30 2 230 1 111 1 368 1 54 1 207 1 88 1 339 2 
25 1 1 29 3 2 200 1 334 1 363 8 228 3 283 4 180 3 5 1 230 1 97 1 30 3 32 1 368 1 79 1 54 2 233 3 123 3 207 4 339 4 86 2 106 2 318 13 126 16 374 1 296 2 111 1 195 4 196 1 300 2 352 1 358 1 88 1 
86 1 106 1 1 9 363 4 318 4 126 5 296 1 283 1 180 1 5 2 230 1 30 2 18 1 32 2 111 1 196 1 352 2 300 4 79 2 54 1 184 1 207 1 88 1 339 3 
330 2 133 1 154 1 27 1 92 1 333 1 94 1 256 2 138 1 265 1 34 1 80 1 206 1 234 1 162 1 36 1 164 1 208 1 238 2 317 1 190 1 40 1 66 1 348 1 193 1 248 1 353 1 216 1 87 1 221 1 
330 3 133 1 154 1 27 1 92 1 333 1 94 1 256 3 138 1 265 1 34 1 80 1 206 1 120 1 234 1 162 1 36 1 164 1 208 2 238 2 317 1 190 1 344 1 166 1 40 1 66 1 193 1 353 1 216 1 87 1 
330 2 133 1 154 1 92 1 94 1 256 2 138 1 265 1 34 1 80 1 206 1 234 1 162 1 36 1 164 1 208 2 238 2 317 1 190 1 344 1 166 1 40 1 66 1 193 1 216 1 
236 1 330 1 133 2 92 2 27 1 94 1 256 1 40 1 319 1 307 1 271 1 66 1 145 1 182 1 117 1 206 2 120 1 216 2 234 1 36 1 152 1 87 1 23 1 
164 1 330 1 238 2 154 1 133 1 317 1 92 1 27 1 94 1 333 1 256 1 344 1 40 1 66 1 348 1 193 1 138 1 34 1 353 1 206 1 216 1 162 1 234 1 36 1 87 1 221 1 
112 1 
223 1 225 2 94 1 335 1 182 1 55 4 234 2 236 1 66 2 243 1 14 1 15 6 146 1 17 1 147 1 247 1 250 2 150 4 356 1 301 1 302 1 23 2 253 2 114 2 199 2 76 2 307 1 203 1 268 1 82 2 36 1 163 3 314 1 37 2 124 2 210 1 373 1 40 2 320 2 271 1 215 2 275 2 43 1 218 1 
314 1 210 1 243 1 15 2 146 1 139 1 150 2 55 2 268 1 82 1 163 1 
314 1 146 1 199 1 210 1 250 1 55 1 150 1 268 1 243 1 
314 1 114 1 199 1 210 1 243 1 15 2 146 1 139 1 150 2 55 2 250 1 268 1 82 1 163 1 
223 1 2 1 225 1 4 1 338 1 98 1 139 1 55 4 11 1 243 1 298 1 15 7 146 1 299 2 17 1 149 1 247 1 356 1 250 3 150 4 301 1 20 1 253 2 153 1 114 4 199 3 78 1 201 1 366 1 31 1 119 1 82 4 268 1 163 3 314 1 37 2 124 2 38 1 210 1 373 1 320 2 215 2 274 1 275 1 218 2 
114 2 223 1 199 2 225 1 76 2 203 1 55 3 82 2 268 1 163 2 314 1 37 2 124 2 210 1 373 1 320 2 243 1 15 4 299 1 146 1 17 1 215 2 247 1 275 1 250 2 356 1 150 3 301 1 218 2 253 2 
114 2 223 1 199 2 225 1 338 1 55 3 82 2 268 1 163 2 314 1 37 2 124 2 38 1 210 1 373 1 320 2 243 1 15 4 299 1 146 1 17 1 215 2 149 1 247 1 275 1 250 2 150 3 356 1 301 1 218 1 253 2 
114 2 223 1 199 2 225 1 338 1 55 3 82 2 268 1 163 2 314 1 37 2 124 2 38 1 210 1 373 1 320 2 243 1 15 4 299 1 146 1 17 1 215 2 149 1 247 1 275 1 250 2 150 3 356 1 301 1 218 1 253 2 
114 2 223 1 199 2 225 1 76 2 338 1 55 3 82 2 268 1 163 2 314 1 37 2 292 1 210 1 373 1 243 1 272 2 15 4 299 1 146 1 17 1 245 1 215 2 351 1 247 1 275 1 250 2 150 3 356 1 218 1 71 2 
114 3 223 1 199 3 225 1 338 1 55 3 82 3 268 1 163 2 37 2 314 1 124 2 38 1 210 1 373 1 320 2 243 1 15 5 299 1 146 1 17 1 215 2 247 1 149 1 275 1 150 3 250 3 356 1 20 1 301 1 218 1 253 2 
114 3 223 1 199 3 225 1 338 1 55 3 82 3 268 1 163 2 37 2 314 1 124 2 38 1 210 1 373 1 320 2 243 1 15 5 299 1 146 1 17 1 215 2 247 1 149 1 275 1 150 3 250 3 356 1 20 1 301 1 218 1 253 2 
114 2 223 1 199 2 225 1 76 2 203 1 55 3 82 2 268 1 163 2 314 1 37 2 292 1 210 1 373 1 243 1 272 2 15 4 299 1 146 1 17 1 215 2 247 1 275 1 250 2 356 1 150 3 218 1 71 2 
1 6 363 2 283 1 180 1 5 1 230 1 6 2 30 1 32 1 79 1 35 1 339 2 86 1 106 1 240 1 126 3 318 3 321 1 110 1 128 1 350 1 111 1 300 2 352 1 44 1 88 1 
25 1 329 1 89 1 1 17 3 1 200 2 363 2 228 3 281 1 283 3 180 1 5 2 6 1 32 2 79 2 233 3 207 1 35 1 123 3 339 1 58 1 143 1 105 1 240 4 318 7 126 10 13 1 128 13 350 13 195 4 300 4 352 2 44 2 
153 1 329 1 303 1 89 1 1 2 47 1 94 1 306 1 307 1 78 2 263 1 366 1 5 1 6 1 32 1 119 2 79 1 234 1 35 1 36 1 236 1 239 1 105 1 240 1 165 1 318 1 126 1 40 1 66 1 297 1 298 1 273 1 352 1 300 2 327 1 44 1 252 1 23 1 
329 1 89 1 1 20 176 2 94 2 3 2 228 2 283 3 180 3 5 3 6 2 230 1 231 2 233 2 234 3 339 4 235 1 236 2 106 1 105 1 239 2 240 7 344 1 66 3 298 1 350 7 111 1 300 6 352 3 357 2 23 1 252 2 153 1 303 1 363 8 306 2 78 3 307 2 366 1 30 1 32 3 119 3 79 3 81 1 35 3 207 4 36 2 84 2 86 1 318 10 126 10 40 3 42 2 273 2 128 7 169 1 327 1 44 3 88 1 
153 1 329 1 173 2 1 2 89 1 94 2 78 1 307 2 366 1 5 2 182 1 264 1 32 2 119 1 7 1 79 2 140 1 234 8 35 2 36 2 236 3 104 1 342 1 344 1 126 1 318 1 40 8 191 1 321 1 66 7 271 1 298 1 248 1 300 4 352 2 327 1 70 1 44 2 23 2 
153 1 1 3 3 1 363 1 228 1 78 1 283 1 180 1 5 1 366 1 98 1 32 1 119 1 79 1 233 1 35 1 339 1 105 1 240 1 372 1 126 1 318 2 298 1 128 1 350 1 300 2 352 1 44 1 45 1 
1 2 240 1 178 1 363 1 126 2 228 1 321 1 283 1 128 1 5 1 350 1 32 1 352 1 300 2 79 1 44 1 207 1 35 1 
1 2 240 1 177 1 3 1 363 1 318 2 321 1 180 1 128 1 5 1 350 1 32 1 352 1 300 2 79 1 44 1 35 1 339 1 
1 4 3 1 363 2 228 1 283 1 180 1 5 1 32 1 79 1 233 1 35 1 207 1 339 1 240 2 126 2 318 2 321 1 128 2 350 2 300 2 352 1 44 1 
1 2 240 1 178 1 363 1 126 2 228 1 191 1 283 1 128 1 5 1 350 1 32 1 352 1 300 2 79 1 44 1 207 1 35 1 
1 2 240 1 177 1 3 1 363 1 318 2 191 1 180 1 128 1 5 1 350 1 32 1 352 1 300 2 79 1 44 1 35 1 339 1 
1 4 3 1 363 2 228 1 283 1 180 1 5 1 32 1 79 1 233 1 35 1 207 1 339 1 240 2 126 2 318 2 191 1 128 2 350 2 300 2 352 1 44 1 
1 4 3 1 363 2 228 1 283 1 180 1 5 1 32 1 79 1 233 1 35 1 207 1 339 1 240 2 126 2 318 2 128 2 350 2 300 2 352 1 44 1 
329 1 1 2 89 1 94 1 306 1 307 1 78 1 5 1 6 1 32 1 119 1 79 1 234 1 35 1 36 1 236 1 239 1 126 1 318 1 40 1 66 1 42 1 273 1 352 1 300 2 44 1 252 1 23 1 
329 1 1 2 90 1 89 1 48 1 94 1 307 1 78 1 5 1 6 1 32 1 119 1 79 1 234 1 35 1 36 1 236 1 239 1 126 1 318 1 40 1 66 1 273 1 352 1 300 2 276 1 44 1 23 1 
1 4 3 1 363 2 228 1 283 1 180 1 5 1 32 1 79 1 233 1 35 1 207 1 339 1 105 1 240 2 126 2 318 2 128 2 350 2 300 2 352 1 44 1 
1 4 3 1 94 1 176 1 363 2 228 1 306 1 307 1 78 1 283 1 180 1 5 1 32 1 119 1 79 1 233 1 234 1 207 1 35 1 36 1 339 1 236 1 239 1 240 2 318 2 126 2 40 1 66 1 42 1 128 2 273 1 350 2 248 1 352 1 300 2 44 1 252 1 
153 1 1 3 3 1 363 1 228 1 78 1 283 1 180 1 5 1 366 1 98 1 32 1 119 1 79 1 233 1 207 1 35 1 187 1 105 1 240 1 372 1 318 1 126 2 298 1 128 1 350 1 300 2 352 1 44 1 
25 3 155 1 1 42 3 3 158 1 200 2 363 6 228 5 262 1 283 6 135 1 180 4 5 3 30 1 230 1 159 1 32 3 101 1 79 3 56 2 311 1 233 5 184 1 207 3 123 3 85 4 339 3 86 1 106 1 318 20 126 22 65 1 347 1 129 1 111 1 195 5 196 1 69 1 300 6 352 3 197 1 326 1 88 1 
25 3 155 1 1 43 3 4 158 1 200 2 363 7 228 5 262 1 283 6 135 1 180 5 5 4 30 1 230 1 159 1 32 4 101 1 79 4 56 2 311 1 233 5 184 1 207 2 123 3 85 4 339 5 86 1 106 1 318 21 126 22 65 1 347 1 129 1 111 1 195 5 196 2 69 1 300 8 352 4 197 1 326 1 88 1 
25 2 155 1 1 32 3 3 200 1 363 5 228 4 262 1 283 5 135 1 180 4 5 1 30 1 230 1 159 1 32 1 101 1 79 1 56 1 311 1 233 4 184 1 207 2 123 2 85 3 339 3 86 1 106 1 318 15 126 17 65 1 129 1 111 1 195 3 69 1 300 2 352 1 197 1 326 1 88 1 
25 1 155 1 1 17 3 2 200 1 158 1 28 1 363 4 228 3 283 3 135 1 180 2 5 2 32 2 79 2 56 1 311 1 233 3 184 1 207 2 123 1 85 2 339 2 318 8 126 9 195 2 69 1 300 4 352 2 197 2 
25 2 155 2 1 26 3 2 363 4 228 3 262 1 283 3 135 1 180 2 5 3 159 1 32 3 101 1 79 3 56 2 311 1 233 3 184 1 207 2 123 2 85 4 339 2 318 12 126 14 65 1 129 1 195 2 196 2 69 1 300 6 352 3 197 1 326 1 
214 1 332 1 74 1 91 1 288 1 64 1 217 1 244 1 219 1 284 1 
107 1 12 1 
116 1 52 1 332 1 287 1 91 1 288 1 244 1 219 1 284 1 
369 1 332 1 74 1 91 1 371 1 305 1 157 1 64 1 375 1 244 1 284 1 192 2 214 1 288 1 150 1 55 1 218 1 219 1 
369 1 332 1 74 1 91 1 371 1 305 1 157 1 64 1 375 1 244 1 284 1 192 2 214 1 288 1 150 1 55 1 218 1 219 1 
369 1 332 1 74 1 91 1 371 1 305 1 157 1 64 1 375 1 244 1 284 1 192 2 214 1 288 1 150 1 55 1 218 1 219 1 
93 1 125 1 220 1 
93 1 125 1 220 1 
242 1 115 1 
242 1 115 1 220 1 
51 1 325 1 
153 2 0 1 332 1 91 1 78 2 365 1 284 1 51 1 366 2 31 1 6 1 99 1 119 2 288 1 55 1 369 1 209 1 107 1 343 1 39 1 12 1 375 1 244 1 298 2 192 1 325 1 150 1 328 1 219 1 
93 1 125 1 
242 1 115 1 220 1 
329 1 173 2 174 1 1 2 89 1 94 1 307 1 78 2 366 2 5 1 32 1 309 1 119 2 7 1 79 1 234 2 35 1 36 1 236 1 104 1 105 1 126 1 318 1 40 2 66 2 377 1 324 1 352 1 300 2 44 1 379 1 
164 1 238 2 133 1 154 1 317 1 94 1 295 1 344 1 40 2 66 2 349 1 138 1 248 1 34 1 354 1 353 1 234 2 162 1 36 1 
164 1 238 2 133 1 154 1 317 1 94 1 295 1 344 1 40 1 66 1 138 1 34 1 353 1 234 1 162 1 251 1 36 1 
236 1 133 1 134 1 94 1 40 1 307 1 66 1 271 1 145 1 349 1 182 1 234 1 36 1 23 1 
164 1 238 2 133 1 154 1 317 1 94 1 295 1 344 1 40 1 66 1 349 1 138 1 34 1 354 1 353 1 234 1 162 1 36 1 
9 1 
299 1 225 1 275 1 95 1 218 1 96 1 110 1 
124 1 223 1 225 1 76 1 373 1 320 1 15 1 299 1 17 1 275 1 55 1 150 1 356 1 301 1 218 2 253 1 163 1 
223 1 94 1 270 1 373 1 167 1 40 1 66 1 17 1 356 1 234 1 23 1 36 1 
25 1 223 2 225 8 3 2 76 6 228 2 364 1 261 1 283 2 180 2 159 1 101 1 55 1 233 2 123 1 163 1 237 5 293 2 373 2 65 1 320 3 14 1 15 1 129 1 299 2 17 2 194 1 195 1 43 1 275 5 326 1 19 5 150 1 356 2 218 5 
153 1 222 1 223 1 225 2 78 1 364 1 201 1 283 2 180 1 4 1 366 1 31 1 98 1 119 1 55 1 86 1 106 1 293 2 11 1 373 1 298 1 17 1 274 1 111 1 149 1 275 2 356 1 150 1 
223 1 225 1 95 1 373 1 96 1 299 1 17 1 275 1 356 1 218 1 
237 5 293 2 225 5 3 2 76 10 228 2 320 5 364 1 283 2 180 2 275 5 19 5 233 2 218 5 84 1 
299 1 55 1 150 1 218 1 15 1 163 1 
278 1 132 1 223 2 225 2 94 1 307 1 229 2 182 1 55 3 234 4 36 1 163 2 236 1 373 2 40 4 66 4 271 1 14 2 15 4 147 1 17 1 43 2 275 2 356 2 150 3 151 1 302 1 24 1 23 2 
153 2 1 1 89 1 94 1 50 1 306 1 78 3 307 1 201 1 5 1 366 2 6 1 32 1 98 2 119 3 79 1 234 1 35 1 36 1 236 1 239 1 318 1 40 1 66 1 298 2 42 1 273 1 300 2 352 1 44 1 23 1 252 1 
237 2 223 1 225 1 76 4 373 1 320 2 14 1 299 2 30 1 17 1 275 2 43 1 19 2 356 1 218 4 
332 1 244 1 29 1 
332 1 325 1 244 1 
332 1 244 1 29 1 
332 1 244 1 29 1 
59 1 332 1 244 1 
59 1 332 1 244 1 
59 1 332 1 244 1 
332 1 244 1 
91 1 284 1 
25 1 1 11 200 1 363 2 228 1 283 2 180 1 5 1 30 1 230 1 32 1 79 1 233 1 184 1 123 1 339 2 86 1 106 1 318 5 126 6 65 1 111 1 195 2 300 2 352 1 88 1 
25 1 1 8 279 1 363 2 283 1 180 1 5 2 30 1 230 1 32 2 79 2 184 1 123 1 339 2 86 1 106 1 318 4 126 4 65 1 111 1 195 1 300 4 352 2 88 1 
25 1 1 19 279 1 3 2 363 4 228 2 283 3 180 3 5 3 30 1 230 1 159 1 32 3 101 1 79 3 233 2 184 1 207 1 123 1 339 3 86 1 106 1 318 10 126 9 65 1 129 1 111 1 195 1 196 1 300 6 352 3 326 1 88 1 
25 1 1 17 279 1 3 1 363 5 228 2 283 3 180 2 5 3 30 1 230 1 159 1 32 3 101 1 79 3 233 2 184 1 207 2 123 1 339 3 86 1 106 1 318 7 126 10 65 1 129 1 111 1 195 1 196 1 300 6 352 3 326 1 88 1 
25 1 1 11 200 1 363 2 228 1 283 2 180 1 5 1 30 1 230 1 32 1 79 1 233 1 184 1 123 1 339 2 86 1 106 1 318 5 126 6 65 1 111 1 195 2 300 2 352 1 88 1 
25 1 1 12 3 2 363 2 228 2 283 2 180 2 5 1 159 1 32 1 101 1 79 1 233 2 184 1 207 1 123 1 339 1 318 6 126 6 65 1 129 1 195 1 300 2 352 1 326 1 
25 1 1 18 279 1 3 1 363 5 228 2 283 3 180 2 5 4 30 1 230 1 159 1 32 4 101 1 79 4 233 2 184 1 207 2 123 1 339 3 86 1 106 1 318 8 126 10 65 1 129 1 111 1 195 1 196 2 300 8 352 4 326 1 88 1 
25 1 1 16 3 2 158 1 363 6 228 3 283 3 180 2 5 4 159 1 32 4 101 1 79 4 233 3 184 1 207 3 123 1 339 3 318 7 126 9 65 1 129 1 195 1 196 2 300 8 352 4 326 1 
86 3 106 3 1 7 318 4 363 6 126 3 283 1 180 1 230 1 111 1 207 3 88 2 339 3 
25 1 1 18 3 1 158 1 363 4 228 2 283 3 180 2 5 4 30 1 230 1 159 1 32 4 101 1 79 4 233 2 184 1 207 1 123 1 339 3 86 1 106 1 318 8 126 10 65 1 129 1 111 1 195 1 196 2 300 8 352 4 326 1 88 1 
86 1 106 1 1 8 318 4 126 4 363 3 283 1 180 1 5 2 30 1 230 1 32 2 111 1 196 1 352 2 300 4 79 2 207 1 88 1 339 2 
86 1 106 1 1 6 318 3 363 2 126 3 283 1 180 1 110 1 30 1 230 1 111 1 88 1 339 2 
1 4 3 1 279 1 318 2 363 2 126 2 228 1 283 1 180 1 5 1 32 1 352 1 300 2 79 1 233 1 207 1 339 1 
25 1 1 7 3 1 200 1 363 1 318 4 126 3 228 1 283 1 180 1 195 2 233 1 123 1 339 1 
1 23 3 2 200 1 363 9 228 2 281 1 283 3 180 3 5 2 30 1 230 1 32 2 79 2 233 2 207 4 123 2 339 5 86 2 143 1 106 2 341 1 126 11 318 12 111 1 195 2 196 2 352 2 300 4 88 1 
1 1 195 1 318 1 
1 1 126 1 123 1 
1 6 279 1 3 1 318 3 126 3 363 3 228 1 283 1 180 1 5 1 32 1 300 2 352 1 79 1 233 1 207 1 84 1 339 2 
25 1 1 12 3 2 363 2 228 2 283 2 180 2 5 1 159 1 32 1 101 1 79 1 233 2 184 1 207 1 123 1 339 1 318 6 126 6 65 1 129 1 195 1 300 2 352 1 326 1 
86 1 106 1 1 6 126 3 318 3 363 2 283 1 180 1 111 1 207 1 339 1 
86 1 106 1 341 1 1 3 126 1 363 2 318 2 5 1 230 1 32 1 196 1 352 1 300 2 79 1 207 1 88 1 339 1 
86 2 106 2 222 1 1 10 363 5 126 5 318 5 283 2 180 2 5 1 32 1 111 1 300 2 352 1 79 1 184 1 207 2 339 3 
1 2 126 2 363 1 228 1 283 1 5 1 32 1 352 1 300 2 79 1 184 1 207 1 
1 4 3 1 318 2 363 2 126 2 228 1 283 1 180 1 5 1 32 1 352 1 300 2 79 1 233 1 184 1 207 1 339 1 
86 1 341 1 106 1 1 3 158 1 318 2 363 2 126 1 5 3 32 3 196 1 352 3 300 6 79 3 184 1 207 1 339 1 
25 1 1 32 279 1 3 2 334 1 158 1 200 1 363 10 228 3 283 5 180 4 5 5 30 1 230 1 32 5 79 5 233 3 184 1 123 3 207 4 339 6 86 3 106 3 341 1 318 16 126 16 374 1 111 2 195 4 196 2 300 10 352 5 358 1 88 1 
366 1 6 1 119 1 361 1 78 1 280 1 22 1 
361 1 280 1 78 1 127 1 144 1 285 1 366 1 6 1 119 1 355 1 22 1 57 1 
236 1 182 1 94 1 40 1 307 1 234 1 271 1 66 1 36 1 23 1 110 1 
236 1 153 1 239 1 94 1 40 1 306 1 307 1 78 2 66 1 298 1 273 1 366 1 6 1 119 2 327 1 234 1 23 1 36 1 
153 2 360 1 94 1 226 1 306 1 78 2 307 2 229 1 366 2 137 1 6 1 31 2 99 1 119 2 234 1 36 1 236 3 239 1 40 1 66 1 41 1 298 1 273 2 327 1 
153 2 48 1 360 1 94 1 226 1 78 2 307 2 229 1 366 2 137 1 6 1 31 2 99 1 119 2 234 1 36 1 236 3 239 1 40 1 66 1 41 1 298 1 273 2 327 1 
236 4 360 1 94 1 362 1 40 3 307 1 66 3 229 1 273 1 15 1 136 1 299 1 137 1 150 2 55 2 171 1 161 1 234 3 218 1 141 1 10 1 23 1 36 1 
236 4 360 1 94 1 362 1 40 3 307 1 66 3 229 1 273 1 15 1 136 1 299 1 137 1 130 1 150 2 55 2 234 3 218 1 141 1 10 1 23 1 36 1 
342 1 94 1 40 1 234 1 66 1 36 1 
236 3 173 1 104 1 342 1 254 1 94 3 344 1 227 1 40 7 307 2 66 6 273 1 264 1 248 1 204 1 140 1 70 1 234 7 103 1 23 2 36 2 
153 1 1 6 94 1 176 1 363 2 306 1 307 1 78 2 283 1 180 1 366 1 5 2 30 1 6 2 230 1 32 2 231 1 119 2 79 2 234 1 35 2 36 1 339 2 86 1 236 1 106 1 239 1 105 1 240 1 318 3 126 3 40 1 66 1 298 1 42 1 128 1 273 1 350 1 111 1 377 1 248 1 352 2 300 4 327 1 44 2 88 1 252 1 
223 2 75 1 225 1 95 1 362 1 336 1 96 1 365 1 136 1 55 3 234 1 83 1 141 1 163 1 236 2 373 2 40 1 66 1 15 2 299 1 17 2 130 1 275 1 356 2 150 3 151 1 218 1 23 1 
342 1 94 1 167 1 40 1 234 1 66 1 36 1 
236 1 182 1 175 1 248 1 94 1 40 4 307 1 234 4 271 1 66 4 10 1 36 1 23 1 
236 1 254 1 94 2 294 1 40 2 307 1 66 2 229 1 273 1 81 1 234 2 172 1 103 1 36 1 
164 1 238 1 154 1 34 1 94 1 40 1 234 1 66 1 36 1 23 1 
236 1 104 1 174 1 94 1 344 1 40 2 307 1 66 2 248 1 234 2 36 1 
236 3 104 1 175 1 94 2 40 5 307 2 271 1 66 4 229 1 182 1 248 1 140 1 234 5 70 1 23 1 36 2 
277 1 236 3 104 1 175 1 94 2 40 5 307 2 271 1 66 4 229 1 182 1 248 1 234 5 70 1 23 1 36 2 
236 1 153 1 239 1 48 1 94 1 40 1 307 1 78 2 66 1 298 1 273 1 366 1 6 1 119 2 327 1 234 1 23 1 36 1 
236 1 254 1 94 2 227 1 40 1 307 1 66 1 229 1 273 1 204 1 234 1 103 1 36 1 
366 1 119 1 324 1 309 1 224 1 241 1 121 1 78 1 379 1 
202 1 241 1 340 1 
6 1 224 1 160 1 241 1 121 1 
153 1 224 1 226 1 78 1 201 1 308 1 365 1 202 1 4 1 366 1 31 2 98 1 119 1 160 1 55 2 121 1 141 1 340 1 241 1 11 1 41 1 298 1 322 1 299 1 274 1 150 2 218 1 72 1 
265 1 80 1 190 1 110 1 
330 1 265 1 27 1 80 1 190 1 256 1 87 1 
330 1 92 1 216 1 
330 3 27 1 256 3 190 1 345 1 346 2 348 1 265 1 80 1 21 1 87 1 313 1 
208 1 330 2 265 1 8 1 27 1 80 1 190 1 256 2 87 1 
131 1 330 1 238 1 138 1 265 1 27 1 34 1 367 1 256 1 348 1 87 1 
330 1 265 1 27 1 80 1 256 1 348 1 87 1 
330 1 27 1 80 2 190 1 256 1 348 1 87 1 
330 2 331 1 27 2 256 2 348 1 265 1 80 1 186 1 87 2 46 1 
131 1 330 1 265 1 156 1 27 1 108 1 49 1 256 1 348 1 87 1 
164 1 330 2 208 1 238 2 27 1 317 1 190 1 256 2 348 1 138 1 265 1 100 1 34 1 80 1 87 1 
131 1 330 4 208 2 359 1 27 2 108 1 190 1 256 4 348 1 8 1 265 2 80 1 87 2 
330 1 265 1 27 1 80 1 190 1 256 1 348 1 87 1 
131 1 208 2 330 4 27 1 108 1 190 2 256 4 345 1 346 1 265 3 80 2 198 1 313 1 87 1 
330 2 208 1 27 1 256 2 190 1 348 1 181 1 265 1 80 1 312 1 102 1 87 1 
330 3 27 1 256 3 190 1 345 2 346 2 348 1 265 1 80 1 378 1 313 1 87 1 
168 1 118 2 265 2 259 1 
286 1 330 1 27 1 256 1 348 1 87 1 
330 1 27 1 49 1 256 1 190 1 348 1 198 1 80 1 87 1 
260 1 
330 1 265 1 27 1 80 1 190 1 256 1 348 1 87 1 
330 2 265 1 27 1 49 1 80 1 190 1 256 2 346 1 348 1 87 1 
131 1 265 1 108 1 198 1 
265 1 80 1 

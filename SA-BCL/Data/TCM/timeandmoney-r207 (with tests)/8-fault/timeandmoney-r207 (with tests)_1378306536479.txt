#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (176,333) (176,333) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 240 59 211 (157,174) 27 (154,185) 208 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 240 59 211 (157,174) 27 61 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 240 59 211 (157,174) 27 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 240 59 211 (157,174) 27 (154,185) 208 266 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 240 59 211 (157,174) 27 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 240 59 211 (166,294) 289 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 213 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 347 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 240 59 147 70 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 240 59 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (129,316,321) (63,271,284) (63,271,284) (63,271,284) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (129,316,321) (63,271,284) (63,271,284) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (129,316,321) (63,271,284) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 240 281 137 (220,246) (218,227) (218,227) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (129,316,321) (63,271,284) (63,271,284) (63,271,284) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 240 281 137 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 240 59 211 (157,174) 27 61 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 240 59 211 (157,174) 27 (154,185) (154,185) (194,351) 31 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 240 281 137 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 240 59 211 (157,174) 27 (154,185) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 240 59 211 (166,294) 289 113 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 240 59 211 (157,174) 27 (154,185) (154,185) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 240 34 91 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (129,316,321) (129,316,321) (129,316,321) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (129,316,321) (129,316,321) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 240 281 137 (220,246) (220,246) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (129,316,321) (129,316,321) (129,316,321) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 240 59 147 344 198 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 240 281 137 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 240 59 211 (157,174) 27 (154,185) 208 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 213 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 240 59 211 (157,174) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 240 59 211 (157,174) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 240 59 211 (166,294) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 347 (166,294) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 347 (157,174) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 240 59 147 336 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 240 59 211 (157,174) 27 (154,185) (154,185) (194,351) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 347 (157,174) 64 251 (194,351) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 240 59 147 344 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 240 281 137 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 240 59 305 327 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 240 34 91 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 240 34 223 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 240 34 151 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 240 59 211 (166,294) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 240 59 147 336 
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 119 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 119 49 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 127 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
165 1 200 1 62 9 229 1 100 1 170 1 343 2 231 2 42 3 44 2 205 1 23 1 300 1 7 2 179 1 26 2 145 1 11 4 48 1 105 1 28 9 123 2 283 1 337 1 188 1 268 2 93 5 76 6 
165 1 200 1 62 9 229 1 100 1 170 1 343 2 231 2 42 3 44 2 205 1 23 1 300 1 7 2 179 1 26 2 145 1 11 4 48 1 105 1 28 9 123 2 283 1 337 1 188 1 268 2 93 5 76 6 
165 1 200 1 62 10 229 1 100 1 170 1 343 2 231 2 42 4 44 2 205 1 23 1 300 1 7 2 179 1 26 2 145 1 11 5 48 1 105 1 28 10 123 2 283 1 337 1 188 1 268 2 93 6 76 7 
165 1 200 1 62 7 100 1 170 1 343 1 231 2 42 2 44 2 205 1 23 1 300 1 7 2 179 1 26 2 145 1 11 3 48 1 105 1 28 7 123 2 283 1 337 1 188 1 268 2 93 4 76 4 
123 1 62 4 229 1 100 1 343 2 42 1 231 1 283 1 44 1 205 1 7 1 337 1 93 3 26 1 145 1 11 2 76 3 28 4 
7 1 268 1 62 1 176 1 179 1 303 1 145 1 333 1 231 1 28 1 
62 3 100 1 170 1 231 2 42 1 205 1 7 2 268 1 93 2 145 1 11 1 76 1 28 3 
62 9 229 1 100 1 170 1 343 2 42 3 231 2 44 1 205 1 7 2 26 1 145 1 11 4 148 1 48 1 28 9 123 1 283 1 337 1 188 1 268 1 93 5 76 7 77 1 
62 9 229 1 100 1 170 1 343 2 42 3 231 2 44 1 205 1 7 2 26 1 145 1 11 4 148 1 48 1 28 9 123 1 283 1 337 1 188 1 268 1 93 5 76 7 77 1 
308 1 213 1 191 1 
308 1 187 2 134 1 
139 2 186 2 195 2 257 1 5 1 6 2 173 2 335 2 
139 1 21 1 5 1 6 1 173 1 174 1 117 1 208 1 144 2 240 1 304 1 27 1 104 2 211 1 348 1 186 1 185 1 16 1 335 1 195 1 59 1 97 2 245 1 
139 1 68 1 186 1 279 1 195 1 4 1 5 1 6 1 173 1 335 1 
308 1 139 1 260 1 186 1 243 1 263 1 19 1 323 1 173 1 206 1 88 1 234 1 191 1 279 1 
308 1 139 1 260 1 186 1 243 1 19 1 6 1 335 1 173 1 206 2 88 2 234 1 191 1 195 1 279 1 
206 1 88 1 190 1 69 1 142 1 
308 1 206 2 88 2 98 1 190 1 191 1 217 1 69 1 
206 1 88 1 190 1 
139 1 186 1 295 1 4 1 5 1 6 1 335 1 173 1 206 1 88 1 68 1 69 1 279 1 195 1 
308 1 
308 1 206 2 88 2 190 1 191 1 217 1 69 1 109 1 
139 1 295 1 115 2 143 1 65 1 4 1 5 1 275 2 6 1 22 1 345 1 173 1 299 2 206 5 278 1 88 5 68 1 235 1 69 2 255 1 279 1 241 5 47 1 106 2 308 2 259 1 150 2 186 1 217 1 108 4 335 1 55 2 92 1 190 2 191 2 193 1 195 1 161 1 
213 1 257 1 
79 1 139 2 186 2 195 1 257 2 6 1 136 1 335 1 173 2 
87 1 72 1 180 1 
174 1 348 1 117 1 144 1 16 1 240 1 59 1 27 1 61 1 104 1 211 1 97 1 
348 1 139 1 186 1 16 1 6 1 173 1 174 1 117 1 178 1 144 1 240 1 195 1 59 1 256 1 27 1 104 1 211 1 97 1 
139 3 186 3 195 3 256 1 257 1 6 3 335 1 173 3 
139 1 186 1 279 1 195 1 4 1 6 1 173 1 
79 1 139 1 186 1 279 1 195 1 6 1 136 1 173 1 335 1 
139 3 292 1 19 1 5 1 6 3 173 3 174 1 206 1 117 1 88 1 208 1 234 1 178 1 144 1 240 1 279 1 256 1 27 1 104 1 211 1 348 1 260 1 185 1 186 3 16 1 243 1 335 2 266 1 195 3 59 1 136 1 97 1 
139 2 186 2 195 1 126 1 256 1 257 1 6 1 323 1 173 2 
308 1 139 3 260 1 292 1 186 3 243 1 19 1 6 3 335 1 173 3 206 1 73 1 88 1 234 1 178 1 279 1 195 3 256 2 136 1 
139 2 186 2 6 2 335 1 173 2 87 1 195 2 256 1 180 1 136 1 
174 1 348 1 117 1 144 1 16 1 240 1 59 1 27 1 104 1 211 1 97 1 
348 1 117 1 166 1 144 1 16 1 240 1 59 1 289 1 104 1 211 1 97 1 
201 1 164 1 29 4 138 1 212 1 114 1 150 1 72 2 167 2 262 1 342 2 115 1 141 1 354 1 297 1 276 1 87 2 301 2 326 1 120 1 36 1 224 1 180 2 50 1 
139 1 214 1 186 1 279 1 195 1 19 1 6 1 173 1 
139 5 319 1 186 5 126 1 6 4 323 1 173 5 335 1 178 1 195 4 256 2 257 1 330 1 136 1 
139 2 214 1 186 2 279 1 195 2 4 1 6 2 173 2 
14 1 156 1 
14 1 156 1 
51 1 244 1 
51 1 244 1 
51 1 244 1 
14 1 156 1 312 1 
14 1 156 1 312 1 
14 1 156 1 153 1 
51 1 14 2 244 1 156 2 37 1 252 1 
14 1 156 1 312 1 
14 1 57 1 156 1 
14 1 57 1 156 1 
14 1 57 1 156 1 
308 1 14 2 71 3 125 1 274 2 206 2 24 1 313 1 267 1 88 2 112 2 156 2 258 2 37 1 329 1 340 1 78 1 307 2 270 2 
14 1 139 2 71 1 249 1 242 1 186 2 282 1 54 1 274 1 6 2 153 1 173 2 206 1 24 1 88 1 112 1 58 1 156 1 195 2 257 1 196 1 95 1 307 1 270 1 
123 1 26 1 44 1 
303 1 
303 1 
303 1 
303 1 
18 1 0 2 168 1 115 1 141 1 275 1 101 1 297 1 299 1 206 5 88 5 235 1 69 4 241 2 308 2 150 1 350 2 15 2 217 1 282 1 108 3 187 3 55 1 189 1 190 1 191 1 58 1 94 1 158 1 35 1 95 1 134 1 
247 1 18 1 0 6 291 1 168 3 115 3 141 3 142 5 275 2 297 3 206 9 299 2 278 1 88 9 235 1 69 7 241 6 308 5 150 3 350 6 217 1 282 4 108 8 187 9 152 1 55 2 219 1 190 6 191 1 94 2 74 1 35 2 133 5 134 3 339 1 
0 2 168 1 115 1 141 1 275 1 101 1 297 1 299 1 206 3 88 3 278 1 69 2 241 2 308 3 150 1 350 2 15 1 282 1 108 3 187 4 55 1 191 1 94 1 158 1 35 1 134 2 
247 1 0 4 291 1 168 2 115 2 141 2 275 1 101 1 297 2 299 1 206 4 88 4 278 1 69 3 241 4 308 4 150 2 350 4 15 2 282 2 108 5 187 7 55 1 219 1 191 1 94 1 158 1 35 1 134 3 
213 1 149 1 
347 1 
177 1 
240 1 
240 1 59 1 147 1 70 1 
240 1 59 1 
116 1 
259 1 29 7 150 1 114 2 216 2 167 3 342 4 115 1 296 1 285 1 92 1 8 1 25 1 255 1 10 1 224 3 13 1 
259 1 29 7 150 1 114 2 216 2 167 3 342 4 115 1 296 1 285 1 92 1 8 1 25 1 255 1 10 1 224 3 13 1 
259 1 29 7 150 1 114 2 216 2 167 3 342 4 115 1 296 1 285 1 92 1 8 1 25 1 255 1 10 1 290 1 224 3 13 1 
201 1 39 1 138 1 114 5 167 15 168 3 342 16 115 4 141 3 296 1 297 3 253 1 324 1 301 2 67 1 25 1 8 2 255 1 10 1 237 4 146 3 50 1 13 5 259 2 29 31 150 4 216 3 311 1 262 1 285 2 92 2 338 1 224 10 226 1 
201 2 39 1 138 2 114 3 167 4 342 5 115 1 296 1 301 4 8 1 25 1 255 1 50 2 13 1 29 9 259 1 150 1 216 2 262 2 285 1 92 1 75 1 224 4 199 1 
62 1 107 1 63 1 16 1 231 1 284 1 117 1 7 1 355 1 268 1 144 1 9 1 303 1 145 1 238 1 132 1 316 1 104 1 96 1 97 1 271 1 28 1 
62 2 107 1 63 1 16 1 231 1 284 1 117 1 7 1 355 1 268 1 346 1 144 1 9 1 303 1 122 1 132 1 76 1 222 1 316 1 104 1 96 1 97 1 28 2 
62 1 107 1 63 1 16 1 117 1 355 1 268 1 346 1 144 1 9 1 303 1 132 1 76 1 222 1 316 1 104 1 97 1 28 1 
137 1 348 1 246 1 62 1 231 1 218 1 355 2 7 1 268 2 144 1 9 2 240 1 281 1 122 1 132 2 358 1 104 1 97 1 227 1 28 1 
62 1 107 1 63 1 16 1 231 1 284 1 117 1 7 1 355 1 268 1 144 1 9 1 303 1 145 1 132 1 222 1 316 1 104 1 96 1 97 1 271 1 28 1 
20 1 
137 1 348 2 217 1 108 1 275 1 206 2 299 1 55 1 110 1 88 2 190 2 325 1 235 1 144 2 94 1 240 1 281 1 241 1 104 2 97 2 359 1 
139 1 248 1 81 1 19 1 173 1 323 1 206 3 88 3 302 1 234 1 279 1 260 1 310 2 124 1 217 1 186 1 243 1 263 1 109 1 190 2 60 1 221 1 
139 1 248 1 81 1 19 1 173 1 323 1 206 3 88 3 234 1 254 1 279 1 308 1 260 1 310 3 124 1 186 1 217 1 243 1 263 1 109 1 190 1 191 1 60 1 221 1 
139 1 248 1 81 1 19 1 173 1 323 1 206 3 88 3 302 1 234 1 210 1 254 1 279 1 308 1 260 1 310 3 124 1 217 1 186 1 243 1 263 1 109 1 190 2 191 1 60 1 221 1 
139 1 272 1 248 1 293 2 1 2 81 1 19 1 2 1 3 1 43 2 275 1 323 1 173 1 299 1 206 5 88 5 302 4 234 1 235 1 210 4 254 4 279 1 241 1 12 1 308 5 309 1 184 2 260 1 310 6 124 1 353 1 217 3 186 1 243 1 108 1 263 1 109 1 55 1 190 7 191 5 60 1 221 1 134 2 225 1 
81 1 1 2 2 1 275 1 43 2 173 1 323 1 88 4 234 1 235 1 279 1 241 1 184 2 124 1 186 1 243 1 187 2 55 1 190 4 191 1 60 1 134 2 139 1 248 1 293 2 19 1 206 4 299 1 302 2 210 2 254 2 103 1 308 2 260 1 310 4 217 2 263 1 108 1 221 1 225 1 
139 1 248 1 293 2 1 2 81 1 19 1 2 1 43 2 275 1 173 1 323 1 206 4 299 1 302 2 88 4 234 1 210 2 235 1 254 2 279 1 241 1 12 1 308 1 309 1 184 2 260 1 310 4 124 1 217 2 186 1 353 1 243 1 108 1 263 1 55 1 190 4 191 1 60 1 221 1 134 2 225 1 
139 1 248 1 293 2 1 2 81 1 19 1 2 1 43 2 275 1 173 1 323 1 206 4 299 1 302 2 88 4 234 1 210 2 235 1 254 2 279 1 241 1 12 1 308 1 309 1 184 2 260 1 310 4 124 1 217 2 186 1 353 1 243 1 108 1 263 1 55 1 190 4 191 1 60 1 221 1 134 2 225 1 
139 1 248 1 293 2 81 1 19 1 250 2 2 1 43 2 275 1 86 2 173 1 323 1 206 4 299 1 302 2 88 4 234 1 210 2 235 1 254 2 239 1 279 1 241 1 308 1 309 1 260 1 310 4 124 1 217 2 186 1 243 1 108 1 263 1 187 2 265 1 55 1 190 4 191 1 60 1 221 1 317 1 
139 1 248 1 293 2 1 2 81 1 19 1 2 1 3 1 43 2 275 1 173 1 323 1 299 1 206 4 88 4 302 3 234 1 235 1 210 3 254 3 279 1 241 1 12 1 308 1 309 1 184 2 260 1 310 5 124 1 217 2 186 1 353 1 243 1 108 1 263 1 55 1 190 5 191 1 60 1 221 1 134 2 225 1 
139 1 248 1 293 2 1 2 81 1 19 1 2 1 3 1 43 2 275 1 173 1 323 1 299 1 206 4 88 4 302 3 234 1 235 1 210 3 254 3 279 1 241 1 12 1 308 1 309 1 184 2 260 1 310 5 124 1 217 2 186 1 353 1 243 1 108 1 263 1 55 1 190 5 191 1 60 1 221 1 134 2 225 1 
81 1 2 1 275 1 43 2 173 1 323 1 86 2 88 4 234 1 235 1 279 1 241 1 124 1 186 1 243 1 187 2 55 1 190 4 191 1 60 1 139 1 248 1 293 2 19 1 250 2 206 4 299 1 302 2 210 2 254 2 103 1 308 1 260 1 310 4 217 2 263 1 108 1 221 1 317 1 
201 1 138 1 114 2 167 3 342 3 115 1 296 1 87 1 301 2 25 1 120 1 326 1 255 1 257 2 180 1 50 1 259 1 29 6 150 1 213 1 216 1 262 1 72 1 92 1 36 1 224 2 
201 2 138 2 114 1 167 6 168 2 169 1 342 8 115 2 141 1 66 1 297 2 232 1 87 11 67 1 301 4 120 1 237 3 146 3 257 1 180 4 331 1 13 1 50 2 29 14 150 1 262 2 72 11 264 1 192 1 338 1 315 1 36 2 224 2 
201 1 139 1 138 1 167 1 342 1 203 1 322 1 6 1 173 1 232 1 174 1 117 1 301 2 144 1 120 1 178 1 240 1 256 1 27 1 104 1 180 1 211 1 331 1 50 1 348 1 29 2 262 1 186 1 16 1 192 1 195 1 59 1 61 1 36 1 97 1 162 1 
201 1 139 1 138 1 167 1 6 1 173 1 174 1 117 1 301 2 120 1 178 1 144 1 240 1 256 1 27 1 104 1 211 1 331 1 50 1 348 1 29 1 31 1 351 1 262 1 185 1 186 1 16 1 154 1 192 1 195 1 59 1 36 1 97 1 
137 1 201 1 348 1 29 2 138 1 167 1 262 1 342 1 232 1 233 1 301 2 192 1 120 1 144 2 240 1 281 1 304 1 36 1 104 2 97 2 318 1 50 1 
201 1 138 1 139 1 114 1 168 1 167 2 342 1 115 1 141 1 6 1 297 1 173 1 87 1 301 2 120 1 180 1 331 1 50 1 29 3 150 1 72 1 262 1 186 1 335 1 56 1 195 1 36 1 224 1 136 1 
201 1 29 2 138 1 72 1 262 1 342 2 115 1 276 1 297 1 87 1 301 2 326 1 120 1 36 1 224 1 180 1 13 1 50 1 
201 1 29 2 138 1 114 1 150 1 72 1 262 1 167 2 141 1 354 1 87 1 301 2 326 1 120 1 36 1 224 1 180 1 50 1 
201 1 138 1 114 1 168 1 167 2 342 2 115 1 141 1 297 1 87 2 301 2 120 1 326 1 180 2 50 1 13 1 29 4 150 1 262 1 72 2 36 1 224 2 
201 1 29 2 138 1 72 1 262 1 342 2 115 1 276 1 297 1 87 1 301 2 120 1 36 1 224 1 180 1 13 1 318 1 50 1 
201 1 29 2 138 1 114 1 150 1 72 1 262 1 167 2 141 1 354 1 87 1 301 2 120 1 36 1 224 1 180 1 318 1 50 1 
201 1 138 1 114 1 168 1 167 2 342 2 115 1 141 1 297 1 87 2 301 2 120 1 180 2 50 1 13 1 29 4 150 1 262 1 72 2 36 1 224 2 318 1 
201 1 138 1 29 4 114 1 150 1 167 2 72 2 262 1 168 1 342 2 115 1 141 1 297 1 87 2 301 2 120 1 36 1 224 2 180 2 13 1 50 1 
174 1 348 1 117 1 144 1 185 1 16 1 240 1 59 1 27 1 104 1 211 1 97 1 
348 1 117 1 166 1 144 1 16 1 240 1 59 1 289 1 104 1 211 1 113 1 97 1 
201 1 138 1 114 1 168 1 167 2 342 2 115 1 141 1 297 1 87 2 301 2 120 1 180 2 331 1 50 1 13 1 29 4 150 1 262 1 72 2 36 1 224 2 
174 1 117 1 144 1 185 1 16 1 238 1 240 1 59 1 27 1 104 1 211 1 97 1 154 1 
201 1 138 1 139 1 167 1 168 1 342 2 115 1 141 1 6 1 297 1 173 1 87 1 301 2 120 1 180 1 331 1 13 1 50 1 29 3 150 1 262 1 72 1 186 1 33 1 335 1 195 1 36 1 224 1 136 1 
201 2 138 2 114 3 167 10 168 3 342 9 115 3 141 3 230 1 297 3 84 2 85 1 67 1 301 4 237 2 146 1 89 1 328 1 50 2 13 3 29 19 349 1 150 3 262 2 32 2 332 1 338 1 160 1 224 6 199 1 
39 2 201 3 138 3 114 2 167 12 168 3 342 14 115 3 141 2 230 2 297 3 84 4 85 1 301 6 67 2 237 2 146 2 89 1 328 2 13 2 50 3 29 26 181 1 150 2 262 3 32 1 314 1 357 1 160 1 197 1 224 4 135 1 163 1 199 1 
39 1 201 3 138 3 114 4 167 21 168 4 342 20 115 5 141 4 230 2 296 1 297 4 84 4 85 1 67 3 301 6 25 1 255 1 237 4 146 3 89 1 328 1 50 3 13 4 259 1 181 1 29 41 150 5 216 1 262 3 32 1 332 1 128 1 92 1 338 1 314 1 357 1 160 1 197 1 224 8 135 1 163 1 199 1 
39 2 201 4 138 4 114 4 167 18 168 4 342 20 115 5 141 3 230 2 296 1 297 4 84 4 85 1 67 3 301 8 25 1 255 1 237 4 146 3 89 1 328 1 50 4 13 3 259 1 181 1 29 38 150 4 216 1 262 4 32 1 332 1 128 1 92 1 338 1 314 1 357 1 160 1 197 1 224 7 135 1 163 1 199 1 
39 1 201 2 138 2 114 7 167 25 168 7 169 2 342 27 115 8 141 7 230 1 296 1 297 7 84 4 85 1 67 2 301 4 25 1 255 1 237 4 146 4 89 1 328 1 50 2 13 7 259 1 181 1 29 52 150 8 216 1 262 2 32 1 92 1 338 2 314 1 357 1 160 1 197 1 224 14 135 1 163 1 199 1 
14 1 209 1 112 1 156 1 274 1 37 1 340 1 78 1 270 1 307 1 
242 1 153 1 
14 1 112 1 140 1 280 1 156 1 274 1 171 1 270 1 307 1 
308 1 14 1 71 2 125 1 274 1 206 1 24 1 313 1 267 1 88 1 112 1 156 1 258 1 37 1 340 1 78 1 307 1 270 1 
308 1 14 1 71 2 125 1 274 1 206 1 24 1 313 1 267 1 88 1 112 1 156 1 258 1 37 1 340 1 78 1 307 1 270 1 
308 1 14 1 71 2 125 1 274 1 206 1 24 1 313 1 267 1 88 1 112 1 156 1 258 1 37 1 340 1 78 1 307 1 270 1 
46 1 312 1 252 1 
46 1 312 1 252 1 
111 1 57 1 
111 1 57 1 252 1 
249 1 54 1 
139 2 249 1 274 1 6 2 173 2 45 1 206 1 88 1 69 1 257 1 258 1 307 1 14 1 71 1 125 1 186 2 242 1 282 1 54 1 153 1 112 1 58 1 156 1 195 2 196 1 95 1 270 1 
46 1 312 1 
111 1 57 1 252 1 
201 1 17 1 139 2 138 1 167 1 342 1 173 2 232 1 233 1 301 2 120 1 144 2 236 1 240 1 304 2 104 2 331 1 90 1 50 1 91 1 29 2 262 1 186 2 34 1 286 1 192 1 36 1 97 2 
40 1 107 1 16 1 321 1 117 1 355 1 144 2 129 1 303 1 238 1 222 1 316 1 104 2 97 2 96 1 
107 1 16 1 321 1 355 1 117 1 144 1 356 1 303 1 222 1 316 1 104 1 97 1 96 1 
348 1 137 1 40 1 246 1 355 1 144 1 220 1 240 1 281 1 104 1 97 1 
40 1 107 1 16 1 321 1 117 1 355 1 144 1 129 1 303 1 222 1 316 1 104 1 97 1 96 1 
155 1 
308 1 213 1 191 1 193 1 108 1 241 1 143 1 
1 1 275 1 299 1 206 1 88 1 235 1 241 1 308 2 184 1 217 1 108 1 187 1 55 1 190 1 191 1 134 1 225 1 
348 1 55 1 299 1 144 1 235 1 240 1 59 1 147 1 344 1 275 1 104 1 97 1 198 1 
0 8 168 4 169 1 115 4 141 4 65 1 275 2 297 4 206 1 299 2 88 1 67 1 235 2 237 2 146 2 241 8 306 1 308 7 106 5 181 1 350 8 150 4 352 1 217 1 108 13 187 13 55 2 190 1 191 2 338 1 94 1 314 1 357 1 197 1 134 8 359 1 163 1 
139 1 115 2 295 1 65 1 4 1 275 1 5 1 6 1 173 1 299 1 206 1 88 1 68 1 235 1 255 1 279 1 241 2 47 1 12 1 106 2 259 1 150 1 186 1 108 2 335 1 55 1 92 1 195 1 
308 1 108 1 143 1 275 1 299 1 55 1 235 1 191 1 193 1 241 1 
106 2 308 5 350 5 150 2 0 5 168 2 115 2 141 2 41 1 108 5 187 10 65 1 297 2 241 5 134 5 
308 1 206 1 88 1 190 1 191 1 217 1 
137 1 275 1 299 1 206 1 88 1 325 1 235 1 144 2 240 1 281 1 241 1 104 2 348 2 183 1 217 1 108 1 55 1 110 1 190 2 94 1 97 2 359 1 
348 1 139 1 185 1 186 1 16 1 5 1 6 1 335 1 173 1 174 1 117 1 208 1 144 1 240 1 195 1 59 1 27 1 104 1 211 1 97 1 
308 4 350 2 0 2 216 1 108 1 187 4 275 1 299 1 55 1 235 1 191 2 94 1 241 2 134 2 359 1 
207 1 274 1 270 1 
207 1 274 1 270 1 
228 1 54 1 274 1 340 1 270 1 
207 1 274 1 270 1 
274 1 298 1 270 1 
274 1 298 1 270 1 
274 1 298 1 270 1 
274 1 270 1 
14 1 156 1 
201 2 39 1 29 8 138 2 259 1 150 1 114 2 216 1 167 4 262 2 342 4 115 1 296 1 301 4 25 1 92 1 255 1 224 3 13 1 50 2 
259 1 29 6 114 2 150 1 213 1 216 1 167 3 342 3 115 1 296 1 25 1 92 1 255 1 224 2 
201 1 138 1 29 4 114 1 150 1 261 1 167 2 262 1 168 1 342 2 115 1 141 1 297 1 301 2 224 2 50 1 13 1 
29 7 114 1 150 1 167 4 168 1 342 3 115 1 141 1 297 1 67 1 338 1 237 2 146 1 224 2 13 1 
39 2 201 2 138 2 341 1 114 5 168 2 167 12 342 11 169 1 115 3 141 2 296 1 66 1 297 2 301 4 25 1 255 1 237 2 146 2 13 4 50 2 259 2 29 23 150 3 216 1 262 2 92 2 338 1 224 9 
29 1 167 1 237 1 
29 1 342 1 146 1 
201 1 138 1 29 6 150 1 114 2 261 1 262 1 167 3 168 1 342 3 115 1 141 1 41 1 297 1 301 2 224 3 50 1 13 1 
201 1 138 1 114 1 167 6 168 2 342 6 115 2 141 2 297 2 67 1 301 2 237 1 146 1 13 1 50 1 29 12 181 1 150 2 262 1 314 1 357 1 197 1 224 2 199 1 163 1 
29 6 259 1 150 1 114 1 167 3 342 3 115 1 92 1 255 1 224 2 13 1 
39 1 201 1 259 1 341 1 29 3 138 1 114 1 167 2 262 1 342 1 296 1 301 2 92 1 25 1 224 2 13 1 50 1 
201 1 138 1 259 2 29 10 114 3 150 2 262 1 167 5 342 5 115 2 301 2 92 2 255 1 47 1 224 5 50 1 199 1 13 2 
201 1 138 1 29 2 262 1 342 2 115 1 297 1 301 2 224 1 199 1 50 1 13 1 
201 1 138 1 29 4 114 1 150 1 167 2 262 1 168 1 342 2 115 1 141 1 297 1 301 2 224 2 199 1 50 1 13 1 
39 1 201 3 341 1 29 3 138 3 259 1 114 1 167 2 262 3 342 1 332 1 301 6 92 1 224 2 199 1 50 3 13 1 
39 2 201 5 341 1 138 5 114 7 167 18 168 3 342 16 115 5 141 3 296 1 297 3 324 1 67 1 301 10 25 1 255 2 237 4 146 3 50 5 13 5 259 3 29 34 150 5 261 1 216 1 311 1 262 5 332 1 92 3 338 1 224 12 226 1 199 1 
201 1 138 1 114 2 167 4 342 4 115 1 296 1 67 1 301 2 25 1 237 1 255 1 146 1 50 1 29 8 259 1 150 1 216 1 262 1 92 1 197 1 224 2 199 1 
201 2 138 2 114 2 167 5 168 1 342 6 115 2 296 1 297 1 67 1 301 4 25 1 255 1 237 2 146 1 50 2 13 1 259 1 29 11 150 1 261 1 216 1 262 2 92 1 338 1 197 1 224 3 199 1 
201 3 39 1 138 3 114 3 167 10 168 2 342 9 115 3 141 2 296 1 297 2 67 1 301 6 25 1 255 1 237 1 146 1 13 1 50 3 259 1 29 19 181 1 150 3 261 1 216 1 262 3 92 1 314 1 357 1 197 1 224 4 199 1 163 1 
39 1 201 3 138 3 114 3 167 7 168 2 342 10 115 3 141 1 296 1 297 2 67 1 301 6 25 1 255 1 237 1 146 1 13 2 50 3 259 1 29 17 181 1 150 2 261 1 216 1 262 3 92 1 314 1 357 1 197 1 224 5 199 1 163 1 
201 1 138 1 114 2 167 4 342 4 115 1 296 1 67 1 301 2 25 1 237 1 255 1 146 1 50 1 29 8 259 1 150 1 216 1 262 1 92 1 197 1 224 2 199 1 
201 1 138 1 114 1 167 6 168 2 342 6 115 2 141 2 297 2 67 1 301 2 237 1 146 1 13 1 50 1 29 12 181 1 150 2 262 1 314 1 357 1 197 1 224 2 199 1 163 1 
201 4 39 2 138 4 114 3 167 8 168 2 342 10 115 3 141 1 296 1 297 2 67 1 301 8 25 1 255 1 237 1 146 1 13 2 50 4 259 1 29 18 181 1 150 2 261 1 216 1 262 4 92 1 314 1 357 1 197 1 224 5 163 1 199 1 
201 4 39 2 138 4 114 3 167 7 168 3 342 9 115 3 141 2 297 3 67 1 301 8 237 1 146 1 13 3 50 4 29 16 181 1 150 2 262 4 332 1 314 1 357 1 197 1 224 6 163 1 199 1 
29 7 259 3 150 1 114 3 167 4 342 3 115 1 296 2 25 1 92 3 255 1 224 6 13 3 
201 4 39 2 138 4 114 3 167 8 168 2 342 10 115 3 141 1 296 1 297 2 67 1 301 8 25 1 255 1 237 1 146 1 13 1 50 4 259 1 29 18 181 1 150 2 216 1 262 4 332 1 92 1 314 1 357 1 197 1 224 4 163 1 199 1 
139 1 320 1 186 1 126 1 257 1 173 1 323 1 
139 1 215 1 320 1 186 1 126 1 204 1 323 1 173 1 269 1 118 1 121 1 257 1 
137 1 348 1 213 1 144 1 240 1 281 1 104 1 97 1 
348 1 139 1 186 1 16 1 6 1 173 1 174 1 117 1 144 1 240 1 195 1 59 1 256 1 104 1 211 1 97 1 
139 1 186 1 16 1 6 1 173 1 174 1 117 1 144 1 240 1 195 1 130 1 59 1 256 1 104 1 211 1 97 1 
139 1 166 1 186 1 16 1 6 1 173 1 117 1 144 1 240 1 195 1 130 1 59 1 256 1 104 1 211 1 97 1 
206 1 88 1 144 1 294 1 130 1 347 1 104 1 97 1 
206 1 88 1 144 1 157 1 130 1 347 1 104 1 97 1 
117 1 144 1 16 1 334 1 104 1 97 1 
348 1 144 1 240 1 59 1 147 1 104 1 97 1 336 1 
201 1 17 1 139 1 138 1 6 1 173 1 174 1 117 1 301 2 120 1 144 1 238 1 240 1 256 1 27 1 104 1 211 1 331 1 50 1 262 1 351 1 186 1 185 1 16 1 154 1 195 1 59 1 36 1 97 1 
348 1 183 1 64 1 275 1 251 1 206 1 299 1 55 1 88 1 235 1 144 1 69 1 194 1 157 1 347 1 104 1 97 1 
144 1 240 1 59 1 334 1 147 1 344 1 104 1 97 1 
137 1 348 1 144 2 238 1 240 1 281 1 104 2 97 2 
144 1 240 1 59 1 327 1 83 1 305 1 104 1 97 1 
348 1 117 1 107 1 144 1 303 1 16 1 104 1 97 1 
91 1 144 2 238 1 240 1 222 1 104 2 97 2 34 1 
348 1 144 2 238 1 240 1 223 1 104 2 97 2 34 1 
348 1 144 2 151 1 238 1 240 1 104 2 97 2 34 1 
348 1 139 1 166 1 186 1 16 1 6 1 173 1 117 1 144 1 240 1 195 1 59 1 256 1 104 1 211 1 97 1 
144 1 240 1 130 1 59 1 147 1 104 1 97 1 336 1 
202 1 119 1 236 1 38 2 
206 1 88 1 202 1 99 1 119 1 287 1 236 1 69 1 49 1 38 2 
202 1 119 1 236 1 38 1 
287 1 49 1 38 1 
213 1 93 1 100 1 205 1 
7 1 62 1 93 1 100 1 231 1 205 1 28 1 
268 1 132 1 28 1 
52 1 200 2 182 1 30 1 62 3 100 1 231 1 205 1 7 1 93 1 145 1 28 3 
7 1 62 2 93 1 100 1 343 1 76 1 231 1 205 1 28 2 
123 1 62 1 231 1 44 1 7 1 337 1 93 1 26 1 145 1 11 1 28 1 
7 1 62 1 93 1 145 1 231 1 205 1 28 1 
7 1 62 1 100 1 145 1 231 1 205 2 28 1 
62 1 231 1 7 1 175 1 145 1 131 1 28 1 
62 3 100 1 231 1 42 1 205 1 7 1 188 1 93 2 145 1 11 1 76 2 48 1 28 3 
7 1 62 1 145 1 303 1 127 1 231 1 28 1 
62 4 229 1 100 1 343 1 231 2 42 1 205 1 7 2 93 2 145 1 11 1 76 2 28 4 
7 1 62 1 93 1 100 1 145 1 231 1 205 1 28 1 
200 1 182 1 30 1 62 4 100 2 231 1 42 1 205 2 102 1 7 1 93 3 11 1 76 2 28 4 
62 2 80 1 273 1 100 1 231 1 205 1 7 1 93 1 145 1 76 1 77 1 28 2 
200 2 182 2 7 1 30 1 62 3 93 1 100 1 82 1 145 1 231 1 205 1 28 3 
93 2 288 1 159 2 172 1 
7 1 62 1 145 1 231 1 277 1 28 1 
7 1 188 1 62 2 93 1 100 1 145 1 76 1 231 1 205 1 28 2 
53 1 
7 1 62 1 93 1 100 1 145 1 231 1 205 1 28 1 
200 1 62 3 100 1 231 1 205 1 7 1 188 1 93 1 145 1 76 1 28 3 
93 1 11 1 42 1 102 1 
93 1 205 1 

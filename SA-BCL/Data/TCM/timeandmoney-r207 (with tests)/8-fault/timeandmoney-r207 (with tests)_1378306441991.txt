#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (20,159) (20,159) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 160 113 92 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 160 113 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (7,33,321) (11,21,58) (11,21,58) (11,21,58) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (7,33,321) (11,21,58) (11,21,58) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (7,33,321) (11,21,58) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (7,33,321) (11,21,58) (11,21,58) (11,21,58) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 219 231 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 219 231 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 219 231 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 219 231 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 219 231 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 219 231 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 219 231 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 219 231 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 219 231 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 219 231 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 219 231 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 219 231 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (7,33,321) (7,33,321) (7,33,321) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (7,33,321) (7,33,321) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (7,33,321) (7,33,321) (7,33,321) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 160 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 160 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 160 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 160 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 160 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 160 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 160 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 117 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4780 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
214 2 249 1 51 1 180 2 223 1 108 1 13 1 190 1 19 2 121 4 228 9 70 6 198 1 277 2 161 2 326 1 133 2 170 1 35 3 242 9 38 2 331 1 330 1 244 1 333 1 175 4 
214 2 249 1 51 1 180 2 223 1 108 1 13 1 190 1 19 2 121 4 228 9 70 6 198 1 161 2 277 2 326 1 133 2 170 1 35 3 242 9 38 2 331 1 330 1 244 1 333 1 175 4 
214 2 249 1 51 1 180 2 223 1 108 1 13 1 190 1 19 2 121 4 228 9 70 6 198 1 161 2 277 2 326 1 133 2 170 1 35 3 242 9 38 2 331 1 330 1 244 1 333 1 175 4 
214 2 249 1 51 1 180 1 223 1 108 1 13 1 19 2 121 3 228 7 70 4 198 1 161 2 277 2 326 1 133 2 170 1 35 2 242 7 38 2 331 1 330 1 244 1 333 1 175 3 
70 3 214 1 161 1 180 2 13 1 133 1 170 1 190 1 35 1 38 1 242 4 19 1 331 1 121 2 228 4 175 2 
133 1 170 1 277 1 159 1 57 1 242 1 38 1 20 1 333 1 228 1 
70 1 249 1 277 1 186 1 168 1 133 2 170 1 35 1 38 2 242 3 121 2 228 3 175 1 
70 7 214 1 198 1 249 1 27 1 161 1 277 1 180 2 326 1 13 1 133 2 170 1 190 1 35 3 38 2 242 9 19 1 331 1 154 1 121 4 228 9 175 4 
70 7 214 1 198 1 249 1 27 1 161 1 277 1 180 2 326 1 13 1 133 2 170 1 190 1 35 3 38 2 242 9 19 1 331 1 154 1 121 4 228 9 175 4 
273 1 278 1 303 1 
215 2 273 1 52 1 
229 2 132 2 72 1 67 2 199 2 127 2 257 1 81 2 
245 1 48 1 222 1 257 1 106 1 110 1 148 1 63 1 260 2 188 1 66 2 67 2 195 1 310 1 316 1 123 1 229 3 270 2 72 1 73 1 199 2 77 1 322 1 165 1 127 2 164 1 81 3 203 1 166 1 132 2 206 2 207 1 172 1 287 1 241 2 37 1 90 1 
229 1 132 1 72 1 134 1 276 1 67 1 199 1 127 1 147 1 81 1 
229 1 273 1 298 1 276 1 100 1 253 1 303 1 81 1 132 1 236 1 167 1 36 1 309 1 311 1 
229 1 273 1 298 2 276 1 199 1 100 1 127 1 303 1 81 1 132 1 236 1 167 1 67 1 36 2 309 1 
230 1 85 1 298 1 36 1 128 1 
230 1 273 1 85 1 237 1 298 2 252 1 36 2 303 1 
230 1 298 1 36 1 
229 1 72 1 298 1 276 1 199 1 127 1 147 1 81 1 132 1 85 1 134 1 67 1 36 1 174 1 
273 1 
230 1 273 1 85 1 237 1 218 1 298 2 36 2 303 1 
42 2 298 5 8 1 144 1 145 1 56 2 147 1 105 2 303 2 259 1 67 1 308 1 265 1 229 1 315 1 156 5 230 2 72 1 124 2 273 2 274 1 276 1 199 1 127 1 81 1 131 1 132 1 204 2 85 2 134 1 237 1 171 1 139 2 36 5 174 1 291 1 211 1 243 5 
94 1 229 2 270 1 199 1 322 1 77 1 127 1 300 1 106 1 81 2 110 1 166 1 132 1 260 1 207 1 172 1 66 1 191 1 310 1 90 1 
278 1 257 1 
229 2 199 1 127 1 81 2 257 2 283 1 132 2 67 1 118 1 
94 1 197 1 163 1 
229 1 270 1 251 1 77 1 322 1 257 1 81 1 106 1 166 1 110 1 260 1 66 1 172 1 207 1 310 1 90 1 
229 5 49 1 50 1 199 4 127 4 253 1 300 1 81 5 257 1 234 1 132 5 191 2 67 1 118 1 
229 2 317 1 132 2 276 1 199 2 127 2 147 1 81 2 
229 3 132 3 67 1 191 1 199 3 127 3 257 1 81 3 
229 1 132 1 276 1 199 1 127 1 147 1 81 1 
283 1 229 1 132 1 276 1 67 1 199 1 118 1 127 1 81 1 
48 1 298 1 100 1 300 1 222 1 257 1 106 1 110 1 258 1 148 1 260 1 66 1 67 2 191 1 118 1 309 1 310 1 195 1 316 1 123 1 229 4 270 1 72 1 73 1 276 1 199 3 322 1 77 1 165 1 127 3 324 1 81 4 166 1 236 1 132 3 167 1 206 2 207 1 172 1 287 1 241 1 37 1 36 1 90 1 
234 1 229 2 132 2 191 1 199 1 127 1 253 1 257 1 81 2 
229 3 273 1 298 1 276 1 199 3 100 1 127 3 300 1 324 1 81 3 167 1 132 3 236 1 67 1 191 2 17 1 36 1 118 1 309 1 
229 2 94 1 163 1 199 2 127 2 81 2 132 2 191 1 67 1 118 1 
229 1 270 1 77 1 322 1 257 1 81 1 106 1 166 1 110 1 260 1 66 1 172 1 207 1 310 1 90 1 
229 1 270 1 318 1 142 1 322 1 257 1 81 1 106 1 166 1 110 1 260 1 66 1 207 1 310 1 90 1 
94 2 247 1 54 1 222 1 103 1 224 1 148 1 316 1 123 1 197 2 22 1 124 1 320 1 163 2 76 1 165 1 232 1 201 1 203 2 206 2 287 2 139 1 37 1 241 4 
229 1 317 1 132 1 276 1 100 1 199 1 127 1 81 1 
122 1 196 1 
122 1 196 1 
138 1 39 1 
138 1 39 1 
138 1 39 1 
3 1 122 1 196 1 
3 1 122 1 196 1 
4 1 122 1 196 1 
138 1 55 1 151 1 39 1 122 2 196 2 
3 1 122 1 196 1 
74 1 122 1 196 1 
74 1 122 1 196 1 
74 1 122 1 196 1 
269 1 113 1 298 1 160 1 75 1 36 1 92 1 122 1 196 1 
269 1 113 1 160 1 75 1 122 1 196 1 
214 1 161 1 19 1 
57 1 
57 1 
57 1 
57 1 
42 1 215 1 177 1 298 5 56 1 301 1 104 1 147 1 105 1 303 1 61 1 192 1 67 1 156 1 229 1 230 1 124 1 72 1 273 1 320 1 276 1 199 1 78 1 127 1 81 1 282 1 132 1 85 4 237 1 134 1 171 1 36 5 174 1 243 2 41 2 332 1 176 1 
42 1 215 1 177 1 298 5 56 1 146 2 105 1 147 1 256 1 303 1 61 1 192 1 67 1 156 1 229 1 230 3 124 1 72 1 273 1 320 1 276 1 199 1 78 1 127 1 128 2 81 1 282 1 83 1 132 1 85 4 237 1 134 1 171 1 36 5 174 1 243 2 332 1 176 1 
42 1 215 4 177 1 298 3 52 2 56 1 301 1 103 1 104 1 303 1 105 1 61 1 308 1 192 2 156 3 124 1 273 3 320 1 78 1 85 2 139 1 36 3 243 2 41 1 332 2 176 1 
42 1 215 7 177 1 298 4 143 1 52 3 56 1 301 1 255 1 103 2 104 1 303 1 105 1 61 1 192 4 308 1 156 5 124 2 273 4 320 2 78 2 284 1 85 3 139 2 36 4 243 4 41 2 332 4 176 2 
149 1 278 1 106 1 
47 1 106 1 
200 1 
110 1 207 1 106 1 
289 1 106 1 
110 1 106 1 
110 1 149 2 46 1 169 1 207 1 106 3 
315 1 1 1 247 3 124 1 25 1 274 1 97 1 224 2 203 4 32 1 86 1 287 3 139 1 87 1 241 7 291 1 329 2 
315 1 1 1 247 3 124 1 25 1 274 1 97 1 224 2 203 4 32 1 86 1 287 3 139 1 87 1 241 7 291 1 329 2 
315 1 1 1 247 3 124 1 25 1 274 1 97 1 224 2 203 4 32 1 86 1 287 3 139 1 87 1 241 7 291 1 329 2 312 1 
1 1 247 10 248 3 97 1 179 1 5 4 59 1 103 3 224 5 114 1 18 1 68 1 315 2 316 1 123 1 124 4 25 2 320 3 274 1 165 1 279 1 203 16 32 1 86 2 206 2 287 15 240 1 37 1 241 31 87 5 139 4 291 2 329 3 176 3 
1 1 247 4 97 1 224 3 194 1 68 1 316 2 123 2 315 1 124 1 25 1 274 1 165 2 203 5 286 1 86 1 206 4 287 4 139 1 37 2 241 9 87 1 291 1 329 2 
45 1 270 1 7 1 29 1 277 1 322 1 57 1 9 1 58 1 182 1 11 1 226 1 260 1 133 1 170 1 66 1 38 1 242 1 209 1 90 1 21 1 228 1 
212 1 70 1 45 1 270 1 7 1 29 1 99 1 277 1 322 1 57 1 58 1 182 1 281 1 11 1 226 1 260 1 133 1 66 1 38 1 242 2 209 1 90 1 228 2 
70 1 45 1 270 1 7 1 29 1 99 1 277 1 322 1 57 1 58 1 281 1 226 1 260 1 66 1 242 1 209 1 90 1 228 1 
212 1 140 1 293 1 102 1 106 1 107 1 226 2 110 1 260 1 15 1 66 1 228 1 270 1 29 2 277 2 322 1 166 1 133 1 88 1 209 2 242 1 38 1 90 1 
45 1 270 1 7 1 29 1 277 1 322 1 57 1 58 1 182 1 281 1 11 1 226 1 260 1 133 1 170 1 66 1 38 1 242 1 209 1 90 1 21 1 228 1 
158 1 
42 1 298 3 219 1 100 1 56 1 102 1 253 1 106 1 105 1 183 1 61 1 110 1 64 1 260 2 66 2 309 1 311 1 314 1 229 1 156 1 270 2 230 2 276 1 28 1 275 1 322 1 231 1 129 1 81 1 166 2 167 1 236 1 132 1 237 1 171 1 36 3 88 1 243 1 90 1 
229 1 298 2 219 1 276 1 28 1 100 1 231 1 253 1 81 1 183 1 64 1 167 1 132 1 236 1 36 2 309 1 311 1 
229 1 298 2 219 1 276 1 28 1 100 1 231 1 253 1 81 1 183 1 64 1 167 1 132 1 236 1 36 2 309 1 311 1 
229 1 298 2 219 1 276 1 28 1 100 1 231 1 253 1 81 1 183 1 64 1 167 1 132 1 236 1 36 2 309 1 311 1 
229 1 230 1 218 1 298 3 219 1 276 1 28 1 100 1 231 1 253 1 81 1 183 1 64 1 167 1 236 1 132 1 237 1 36 3 309 1 311 1 
229 1 42 1 298 2 219 1 276 1 28 1 100 1 56 1 231 1 253 1 81 1 105 1 183 1 64 1 167 1 236 1 132 1 171 1 36 2 309 1 311 1 
229 1 298 2 219 1 276 1 28 1 100 1 231 1 253 1 81 1 183 1 64 1 167 1 132 1 236 1 36 2 309 1 311 1 
229 1 298 2 219 1 276 1 28 1 100 1 231 1 253 1 81 1 183 1 64 1 167 1 132 1 236 1 36 2 309 1 311 1 
229 1 298 2 219 1 276 1 28 1 100 1 231 1 253 1 81 1 183 1 64 1 167 1 132 1 236 1 36 2 309 1 311 1 
229 1 298 2 219 1 276 1 28 1 100 1 231 1 253 1 81 1 183 1 64 1 167 1 132 1 236 1 36 2 309 1 311 1 
229 1 298 2 219 1 276 1 28 1 100 1 231 1 253 1 81 1 183 1 64 1 167 1 132 1 236 1 36 2 309 1 311 1 
229 1 42 1 298 2 219 1 276 1 28 1 100 1 56 1 231 1 253 1 81 1 105 1 183 1 64 1 167 1 236 1 132 1 171 1 36 2 309 1 311 1 
94 1 1 1 247 2 97 1 222 1 224 2 257 2 148 1 316 1 123 1 315 1 197 1 124 1 274 1 278 1 163 1 76 1 165 1 203 3 206 2 287 3 37 1 241 6 139 1 291 1 329 1 
94 11 245 1 44 1 247 2 216 1 248 3 5 3 222 1 59 1 103 1 257 1 224 1 148 2 152 1 316 2 123 2 197 11 124 2 73 1 320 2 163 4 279 1 165 2 203 8 206 4 173 1 287 6 288 1 87 1 37 2 241 14 139 1 176 2 
245 1 217 1 251 1 300 1 222 1 257 1 106 1 110 1 260 1 148 1 66 1 191 1 310 1 123 1 229 2 316 1 270 1 73 1 163 1 199 1 322 1 77 1 165 1 127 1 81 2 166 1 203 1 132 1 207 1 172 1 206 2 173 1 287 1 37 1 241 2 90 1 93 1 91 1 
94 7 1 1 245 1 247 8 97 1 103 2 257 2 106 2 109 1 110 2 12 2 260 3 191 1 195 2 123 3 197 7 270 3 125 2 124 3 274 1 199 1 127 1 281 1 203 10 132 1 206 6 207 2 287 10 139 3 37 3 291 1 294 1 53 2 300 1 222 3 224 4 227 2 148 3 66 3 310 2 153 1 315 1 316 3 229 3 73 1 320 2 163 7 77 2 322 2 165 3 81 3 166 1 172 2 173 1 241 20 87 4 329 1 90 2 176 2 
245 1 141 1 102 1 9 1 222 2 302 1 106 3 110 2 260 8 148 2 188 2 66 7 193 1 191 1 268 1 229 1 316 2 123 2 270 8 73 1 199 1 76 1 322 2 127 1 165 2 281 1 81 1 166 2 203 1 132 1 135 1 206 4 136 1 287 1 37 2 241 2 88 1 210 1 90 2 
94 1 247 1 222 1 103 1 224 1 62 1 148 1 67 1 118 1 197 1 316 1 123 1 229 1 124 1 320 1 163 1 199 1 165 1 127 1 81 1 203 1 132 1 206 2 173 1 287 2 37 1 241 3 139 1 176 1 
94 1 197 1 123 1 316 1 247 1 124 1 320 1 163 1 76 1 54 1 165 1 222 1 203 2 148 1 206 2 87 1 241 2 37 1 
94 1 197 1 123 1 316 1 247 1 163 1 76 1 165 1 232 1 222 1 103 1 224 1 148 1 206 2 287 2 241 2 37 1 139 1 
94 2 247 2 222 1 103 1 224 1 148 1 316 1 123 1 197 2 124 1 320 1 163 2 76 1 165 1 203 2 206 2 287 2 37 1 241 4 87 1 139 1 176 1 
94 1 197 1 123 1 316 1 247 1 124 1 320 1 141 1 163 1 54 1 165 1 222 1 203 2 148 1 206 2 87 1 241 2 37 1 
94 1 197 1 123 1 316 1 247 1 141 1 163 1 165 1 232 1 222 1 103 1 224 1 148 1 206 2 287 2 241 2 37 1 139 1 
94 2 247 2 141 1 222 1 103 1 224 1 148 1 316 1 123 1 197 2 124 1 320 1 163 2 165 1 203 2 206 2 287 2 37 1 241 4 87 1 139 1 176 1 
94 2 247 2 222 1 103 1 224 1 148 1 316 1 123 1 197 2 124 1 320 1 163 2 165 1 203 2 206 2 287 2 241 4 37 1 87 1 139 1 176 1 
245 1 222 1 257 1 106 1 110 1 260 1 148 1 66 1 310 1 195 1 229 1 123 1 316 1 270 1 73 1 322 1 77 1 165 1 81 1 203 1 166 1 207 1 172 1 206 2 287 1 241 2 37 1 90 1 
245 1 142 1 181 1 222 1 257 1 106 1 110 1 260 1 148 1 66 1 310 1 229 1 123 1 316 1 270 1 318 1 73 1 322 1 165 1 81 1 203 1 166 1 207 1 206 2 287 1 241 2 37 1 90 1 
94 2 247 2 222 1 103 1 224 1 148 1 316 1 123 1 197 2 124 1 320 1 163 2 165 1 203 2 206 2 173 1 287 2 37 1 241 4 87 1 139 1 176 1 
94 2 247 2 9 1 222 1 103 1 224 1 106 1 110 1 12 1 260 1 148 1 66 1 310 1 195 1 197 2 229 1 123 1 316 1 270 1 124 1 320 1 163 2 322 1 77 1 165 1 81 1 203 2 207 1 172 1 206 2 287 2 139 1 87 1 241 4 37 1 90 1 176 1 
94 1 247 1 222 1 103 1 148 1 67 1 118 1 316 1 123 1 229 1 197 1 124 1 320 1 199 1 163 1 165 1 127 1 79 1 81 1 203 2 132 1 206 2 173 1 287 1 139 1 87 1 37 1 241 3 176 1 
43 1 2 1 247 6 248 1 5 2 59 1 103 3 224 3 185 1 111 1 194 1 266 1 316 2 123 2 157 2 124 3 320 3 279 1 165 2 203 9 84 1 285 1 327 2 206 4 287 10 37 2 241 19 87 3 139 3 176 3 
43 2 247 4 2 2 295 1 248 2 5 2 103 2 224 2 111 1 305 1 189 1 306 1 68 2 194 1 266 1 120 1 316 3 123 3 157 1 124 3 320 3 165 3 279 2 203 14 84 1 31 1 327 4 206 6 287 12 87 2 139 2 37 3 241 26 176 3 
1 1 43 1 295 1 2 2 247 8 248 3 97 1 5 4 59 1 103 4 224 4 111 1 305 1 189 1 306 1 68 1 194 1 266 1 120 1 315 1 316 3 123 3 71 1 157 1 124 5 320 4 274 1 279 3 165 3 203 20 31 1 84 1 285 1 327 4 206 6 287 21 37 3 241 41 87 4 139 5 291 1 329 1 176 4 
1 1 43 1 295 1 2 2 247 7 248 3 97 1 5 4 59 1 103 3 224 4 111 1 305 1 189 1 306 1 68 2 194 1 266 1 120 1 315 1 316 4 123 4 71 1 157 1 124 5 320 4 274 1 279 3 165 4 203 20 31 1 84 1 285 1 327 4 206 8 287 18 37 4 241 38 87 3 139 4 291 1 329 1 176 4 
1 1 43 1 295 1 44 2 2 1 247 14 248 4 97 1 5 4 59 2 103 7 224 7 111 1 305 1 189 1 306 1 68 1 194 1 266 1 120 1 315 1 316 2 123 2 157 1 124 8 320 7 274 1 279 2 165 2 203 27 31 1 84 1 327 4 206 4 287 25 37 2 241 52 87 7 139 8 291 1 329 1 176 7 
245 1 222 1 106 1 110 1 112 1 260 2 148 1 14 1 261 1 65 1 188 2 66 2 123 1 229 2 316 1 270 2 73 1 322 1 165 1 81 2 203 1 132 2 34 1 206 2 136 1 173 1 287 1 37 1 241 2 210 1 90 1 
270 2 45 1 321 1 7 1 162 1 322 1 57 1 9 1 182 1 281 1 226 1 260 2 33 1 66 2 90 1 
226 1 45 1 270 1 260 1 66 1 7 1 321 1 322 1 57 1 233 1 90 1 182 1 281 1 
293 1 270 1 319 1 162 1 322 1 102 1 106 1 110 1 166 1 226 1 260 1 66 1 88 1 90 1 
226 1 45 1 270 1 260 1 33 1 66 1 7 1 321 1 162 1 322 1 57 1 90 1 182 1 281 1 
89 1 
156 1 273 1 278 1 243 1 211 1 303 1 131 1 
42 1 215 1 298 1 52 1 56 1 254 1 105 1 303 1 156 1 230 1 273 2 130 1 328 1 237 1 171 1 36 1 243 1 
103 2 106 6 105 3 110 1 260 1 192 6 119 2 270 1 125 2 124 2 24 2 273 7 275 1 207 1 36 5 139 2 213 2 42 3 47 3 297 1 215 12 298 5 52 6 56 3 303 1 61 2 304 1 149 2 66 1 313 2 156 8 230 5 320 2 322 2 166 1 167 2 169 1 238 2 237 3 171 3 239 1 243 7 90 1 332 6 176 2 
246 1 42 2 295 1 215 6 248 1 298 1 5 1 52 3 144 1 56 2 103 2 105 2 303 2 61 1 305 1 306 1 192 5 120 1 156 8 230 1 124 2 273 5 320 2 275 1 126 1 279 1 31 1 204 2 237 1 171 2 36 1 139 2 243 5 332 5 176 2 
42 1 298 1 8 1 144 1 56 1 147 1 105 1 67 1 229 1 315 1 156 2 69 1 124 2 72 1 274 1 276 1 199 1 127 1 81 1 204 2 132 1 134 1 171 1 36 1 139 1 174 1 291 1 243 2 
156 1 42 1 273 1 56 1 105 1 131 1 303 1 171 1 211 1 243 1 
156 5 125 1 124 2 215 10 273 5 320 2 52 5 103 2 192 5 139 2 243 5 332 5 176 2 
230 1 273 1 237 1 298 1 36 1 303 1 
42 2 298 3 98 1 56 2 102 1 106 1 105 2 110 1 61 2 260 4 66 4 308 1 314 1 156 2 270 4 230 4 272 1 275 2 322 1 129 1 166 2 235 1 237 2 171 1 290 2 36 3 88 1 243 2 90 1 
48 1 222 1 257 1 106 1 110 1 260 1 148 1 66 1 67 2 195 1 310 1 316 1 229 3 123 1 270 1 72 1 73 1 199 2 77 1 322 1 165 1 127 2 81 3 166 1 132 2 206 2 172 1 207 1 287 1 241 1 37 1 90 1 
156 1 42 1 215 2 273 2 275 1 52 1 56 1 105 1 303 1 61 1 171 1 192 1 243 1 
269 1 160 1 
269 1 160 1 
269 1 160 1 
269 1 160 1 
269 1 160 1 
269 1 160 1 
269 1 160 1 
269 1 160 1 
122 1 196 1 
123 2 316 2 315 1 1 1 247 3 124 1 274 1 97 1 165 2 224 2 203 4 206 4 287 4 139 1 241 8 87 1 37 2 68 1 291 1 329 1 
315 1 1 1 247 2 124 1 97 1 274 1 278 1 224 2 203 3 287 3 241 6 139 1 291 1 329 1 
123 1 316 1 247 2 124 1 320 1 165 1 103 1 224 1 203 2 206 2 287 2 139 1 37 1 241 4 87 1 155 1 176 1 
247 2 124 1 248 1 320 1 5 2 279 1 103 1 59 1 224 1 203 3 287 4 139 1 241 7 87 1 176 1 
1 1 247 9 44 1 248 2 97 1 5 2 59 1 103 2 224 5 68 2 315 2 123 2 316 2 124 3 320 2 274 1 165 2 203 11 206 4 287 12 288 1 87 4 241 23 139 3 37 2 291 2 329 1 40 1 176 2 
5 1 287 1 241 1 
203 1 248 1 241 1 
316 1 123 1 247 3 125 1 124 1 320 1 165 1 103 1 224 2 203 3 206 2 287 3 37 1 241 6 87 1 139 1 155 1 176 1 
295 1 247 2 248 1 5 1 103 2 224 1 305 1 306 1 194 1 120 1 316 1 123 1 124 2 320 2 279 1 165 1 203 6 31 1 206 2 287 6 87 1 241 12 37 1 139 2 176 2 
315 1 247 2 124 1 274 1 224 1 203 3 287 3 241 6 139 1 87 1 291 1 
315 1 123 1 316 1 1 1 247 2 97 1 165 1 224 1 203 1 206 2 287 2 87 1 241 3 68 1 37 1 291 1 40 1 
316 1 123 1 315 2 247 5 124 2 274 1 8 1 165 1 224 3 203 5 206 2 287 5 37 1 194 1 87 2 241 10 139 2 291 2 
123 1 316 1 247 1 124 1 320 1 165 1 203 2 206 2 194 1 37 1 241 2 87 1 
123 1 316 1 247 2 124 1 320 1 165 1 103 1 224 1 203 2 206 2 287 2 139 1 194 1 37 1 241 4 87 1 176 1 
123 3 316 3 315 1 247 2 165 3 224 1 203 1 285 1 206 6 287 2 68 1 241 3 194 1 37 3 87 1 291 1 40 1 
1 1 247 12 248 3 97 1 179 1 5 4 59 1 103 3 224 7 68 2 18 1 194 1 155 1 315 3 316 5 123 5 124 5 320 3 274 2 279 1 165 5 203 16 285 1 206 10 240 1 287 18 37 5 241 34 87 5 139 5 291 3 329 1 40 1 176 3 
1 1 295 1 247 2 248 1 97 1 5 1 224 2 194 1 316 1 123 1 315 1 124 1 274 1 279 1 165 1 203 4 206 2 287 4 139 1 241 8 37 1 291 1 329 1 
1 1 295 1 247 3 248 1 97 1 5 2 59 1 224 2 194 1 155 1 315 1 316 2 123 2 124 2 320 1 274 1 279 1 165 2 203 6 206 4 287 5 139 1 241 11 37 2 87 1 291 1 329 1 176 1 
1 1 295 1 247 4 248 1 97 1 5 1 103 2 224 3 305 1 306 1 194 1 68 1 120 1 155 1 315 1 316 3 123 3 124 3 320 2 274 1 279 1 165 3 203 9 31 1 206 6 287 10 87 1 241 19 37 3 139 3 291 1 329 1 176 2 
1 1 295 1 247 5 248 1 97 1 5 1 103 1 224 3 305 1 306 1 68 1 194 1 120 1 155 1 315 1 316 3 123 3 124 3 320 2 274 1 279 1 165 3 203 10 31 1 206 6 287 7 87 2 241 17 37 3 139 2 291 1 329 1 176 2 
1 1 295 1 247 2 248 1 97 1 5 1 224 2 194 1 316 1 123 1 315 1 124 1 274 1 279 1 165 1 203 4 206 2 287 4 139 1 241 8 37 1 291 1 329 1 
295 1 247 2 248 1 5 1 103 2 224 1 305 1 306 1 194 1 120 1 316 1 123 1 124 2 320 2 279 1 165 1 203 6 31 1 206 2 287 6 87 1 241 12 37 1 139 2 176 2 
1 1 295 1 247 5 248 1 97 1 5 1 103 1 224 3 305 1 306 1 194 1 68 2 120 1 155 1 315 1 316 4 123 4 124 3 320 2 274 1 279 1 165 4 203 10 31 1 206 8 287 8 87 2 241 18 37 4 139 2 291 1 329 1 176 2 
295 1 247 6 248 1 5 1 103 2 224 3 305 1 306 1 194 1 68 2 120 1 316 4 123 4 124 3 320 3 279 1 165 4 203 9 31 1 285 1 206 8 287 7 87 3 241 16 37 4 139 2 176 3 
315 3 1 2 247 6 124 1 97 1 274 1 224 3 203 3 287 4 139 1 241 7 87 3 291 3 
1 1 295 1 247 4 248 1 97 1 5 1 103 1 224 3 305 1 306 1 194 1 68 2 120 1 315 1 316 4 123 4 124 3 320 2 274 1 279 1 165 4 203 10 31 1 285 1 206 8 287 8 87 1 241 18 37 4 139 2 291 1 329 1 176 2 
229 1 234 1 0 1 132 1 253 1 257 1 81 1 
0 1 229 1 253 1 257 1 81 1 234 1 132 1 187 1 262 1 205 1 116 1 264 1 
110 1 166 1 270 1 260 1 66 1 278 1 322 1 88 1 102 1 90 1 106 1 
229 2 270 1 199 1 322 1 127 1 257 1 106 1 81 2 110 1 166 1 132 1 260 1 207 1 66 1 172 1 191 1 310 1 90 1 
100 1 10 1 257 1 106 3 110 2 260 1 66 1 191 1 309 1 310 1 229 2 270 1 276 1 199 1 322 1 127 2 81 2 132 2 172 1 207 2 289 1 290 1 90 1 
142 1 100 1 10 1 257 1 106 3 110 2 260 2 66 2 191 1 309 1 310 1 229 2 270 2 276 1 199 1 322 1 127 2 81 2 132 2 207 2 289 1 208 1 290 1 90 1 
47 1 298 2 10 1 106 4 303 1 110 1 149 1 260 3 66 3 267 1 230 1 270 3 273 1 26 1 322 1 166 1 167 1 207 1 289 1 208 1 290 1 36 2 90 1 
270 3 230 1 47 1 273 1 298 2 322 1 10 1 303 1 106 4 166 1 110 1 167 1 260 3 149 1 238 1 207 1 66 3 289 1 208 1 36 2 290 1 90 1 
270 1 260 1 66 1 322 1 90 1 268 1 
270 7 296 1 178 1 322 3 9 1 281 1 302 1 106 3 202 1 166 2 110 2 260 7 169 1 188 1 135 1 66 6 207 1 136 1 193 1 90 2 268 1 
94 1 1 1 247 2 97 1 9 1 106 1 257 2 110 1 12 1 260 1 14 1 191 1 195 1 123 2 197 1 270 1 124 1 274 1 199 1 127 1 203 3 132 1 206 4 207 1 287 3 37 2 139 1 291 1 53 1 222 2 224 2 148 2 66 1 310 1 316 2 229 2 315 1 163 1 77 1 322 1 165 2 81 2 172 1 173 1 241 6 329 1 90 1 
213 1 42 2 47 1 298 3 56 2 303 1 105 2 106 2 260 1 149 1 66 1 119 1 313 1 156 1 270 1 230 2 273 1 272 1 131 1 166 1 167 1 85 1 238 1 237 1 171 2 36 3 243 1 211 1 
270 2 322 2 9 1 106 2 110 1 149 1 260 2 169 1 66 2 239 1 207 1 90 1 268 1 
270 4 322 1 102 1 9 1 106 1 166 1 110 1 260 4 263 1 66 4 208 1 88 1 90 1 
270 2 296 1 322 2 280 1 106 1 202 1 109 1 110 1 260 2 115 1 66 2 207 1 290 1 90 1 
166 1 45 1 270 1 260 1 66 1 322 1 57 1 90 1 
270 2 322 1 9 1 281 1 106 1 110 1 260 2 112 1 66 2 136 1 90 1 
270 5 102 1 322 2 9 1 106 3 166 1 110 2 260 5 263 1 66 4 135 1 136 1 193 1 290 1 88 1 90 2 
270 5 250 1 102 1 322 2 9 1 106 3 166 1 110 2 260 5 263 1 66 4 136 1 193 1 290 1 88 1 90 2 
229 2 270 1 142 1 199 1 322 1 127 1 257 1 106 1 81 2 110 1 166 1 132 1 260 1 207 1 66 1 191 1 310 1 90 1 
270 1 296 1 178 1 322 2 106 1 202 1 110 1 260 1 169 1 66 1 207 1 290 1 90 1 
229 1 101 1 81 1 132 1 65 1 261 1 16 1 34 1 307 1 
101 1 292 1 323 1 
16 1 30 1 307 1 101 1 257 1 
273 1 298 2 276 1 30 2 100 1 101 1 323 1 324 1 257 1 303 1 82 1 167 1 236 1 85 1 16 2 307 2 36 2 309 1 292 1 
186 1 168 1 278 1 121 1 
186 1 168 1 133 1 242 1 38 1 121 1 228 1 
29 1 277 1 242 1 
6 1 51 2 225 1 80 1 168 1 186 1 133 1 170 1 38 1 242 3 121 1 228 3 
70 1 186 1 168 1 133 1 180 1 242 2 38 1 121 1 228 2 
214 1 133 1 170 1 161 1 242 1 38 1 19 1 331 1 121 1 175 1 228 1 
186 1 133 1 170 1 242 1 38 1 121 1 228 1 
186 2 168 1 133 1 170 1 242 1 38 1 228 1 
23 1 220 1 60 1 186 1 133 2 170 1 38 2 242 2 121 1 228 2 
70 2 198 1 326 1 186 1 168 1 133 1 170 1 35 1 38 1 242 3 121 2 228 3 175 1 
133 1 170 1 117 1 242 1 38 1 57 1 228 1 
70 2 180 1 186 1 168 1 133 2 170 1 190 1 35 1 38 2 242 4 121 2 228 4 175 1 
186 1 168 1 133 1 170 1 242 1 38 1 121 1 228 1 
70 2 51 1 6 1 80 1 325 1 186 2 168 2 133 1 35 1 242 4 38 1 121 3 228 4 175 1 
70 1 299 1 221 1 186 1 168 1 133 1 170 1 38 1 242 2 154 1 121 1 228 2 
95 1 6 1 51 2 80 2 168 1 186 1 133 1 170 1 38 1 242 3 121 1 228 3 
184 1 271 1 96 2 121 2 
133 1 170 1 137 1 242 1 38 1 228 1 
70 1 186 1 168 1 198 1 133 1 170 1 242 2 38 1 121 1 228 2 
150 1 
186 1 168 1 133 1 170 1 242 1 38 1 121 1 228 1 
70 1 198 1 186 1 168 1 133 1 170 1 51 1 242 3 38 1 121 1 228 3 
325 1 35 1 121 1 175 1 
186 1 121 1 

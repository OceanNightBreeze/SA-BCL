#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 308 84 121 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 308 84 121 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (191,239) 135 (292,321) (292,321) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (191,239) 135 (292,321) (292,321) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (191,239) 135 (292,321) (292,321) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (191,239) 135 (292,321) (292,321) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (231,328) 67 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (29,126) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (29,126) (29,126) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (231,328) 67 63 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 26 291 100 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 26 291 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (231,328) 67 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (29,126) (29,126) 329 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 26 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 26 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 26 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 26 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 26 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 26 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 26 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (29,126) (29,126) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5730 | return null
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
121 1 227 1 308 1 16 7 316 1 108 1 47 1 311 1 339 2 65 1 284 5 313 1 93 3 239 1 147 1 84 1 27 2 70 2 216 7 73 3 218 1 
121 1 227 1 308 1 16 7 316 1 108 1 47 1 311 1 339 2 65 1 284 5 313 1 93 3 239 1 147 1 84 1 27 2 70 2 216 7 73 3 218 1 
321 1 191 1 147 1 16 1 99 1 27 1 216 1 339 1 135 1 65 1 292 1 
321 1 191 1 147 1 16 1 99 1 27 1 216 1 339 1 135 1 65 1 292 1 
321 1 191 1 147 1 16 1 99 1 27 1 216 1 339 1 135 1 65 1 292 1 
321 1 191 1 147 1 16 1 99 1 27 1 216 1 339 1 135 1 65 1 292 1 
308 1 16 4 316 2 108 1 47 1 339 1 65 1 284 3 93 3 27 1 84 1 148 1 70 1 85 1 216 4 160 1 73 2 11 1 218 1 
141 1 308 1 16 2 99 1 47 1 339 1 282 1 65 1 203 1 93 1 147 1 27 1 148 1 85 1 167 1 216 2 
93 2 147 1 239 1 16 3 27 2 148 1 70 1 85 1 216 3 339 2 73 1 284 1 65 1 
76 1 119 1 42 1 
333 2 330 1 76 1 
315 1 263 1 194 1 165 1 341 1 81 1 314 1 21 1 334 1 136 1 
328 1 45 1 285 1 91 2 320 1 235 2 67 1 343 1 334 1 345 2 
334 1 29 1 
138 1 263 1 76 1 6 1 194 1 187 1 81 1 38 1 20 1 314 1 181 1 133 1 119 1 170 1 
138 1 263 1 76 1 187 2 194 1 165 1 81 1 38 1 20 2 314 1 181 1 21 1 133 1 136 1 119 1 
307 1 337 1 20 1 101 1 187 1 
228 1 337 1 20 2 101 1 76 1 187 2 119 1 169 1 
20 1 101 1 187 1 
337 1 20 1 334 1 126 1 29 1 187 1 
76 1 
228 1 337 1 20 2 101 1 76 1 255 1 187 2 119 1 
97 1 12 1 15 1 228 1 261 2 337 2 277 1 192 2 101 2 185 2 76 1 187 5 245 1 128 1 114 1 20 5 96 1 303 1 119 1 
341 1 42 1 
230 1 263 2 66 1 165 1 341 2 81 2 314 2 21 1 136 1 
229 1 90 1 300 1 
163 1 34 1 74 1 296 1 45 1 279 1 263 1 77 1 64 1 91 1 341 1 235 1 81 1 68 1 345 1 275 1 
295 2 262 1 263 5 66 1 165 4 341 1 236 1 81 5 314 5 272 1 21 1 136 4 170 1 87 1 
165 2 81 2 314 2 193 1 182 1 263 2 194 1 136 2 
163 1 74 1 34 1 262 1 295 1 296 1 45 1 279 1 90 1 263 2 77 1 91 1 165 1 235 1 81 2 68 1 314 1 345 1 136 1 275 1 
165 3 341 1 295 1 81 3 314 3 263 3 21 1 136 3 
165 1 81 1 314 1 182 1 263 1 194 1 136 1 
165 1 81 1 230 1 314 1 263 1 21 1 194 1 136 1 66 1 
138 1 262 1 295 1 328 1 45 1 263 2 63 1 187 1 194 1 66 1 91 1 165 2 256 1 235 1 38 1 81 2 67 1 20 1 314 2 181 1 133 1 21 1 334 1 345 1 136 2 
165 1 341 1 236 1 81 2 295 1 314 2 263 2 136 1 170 1 
138 1 262 1 295 2 263 3 76 1 187 1 194 1 102 1 66 1 165 3 256 1 81 3 38 1 20 1 314 3 181 1 21 1 133 1 136 3 
295 1 229 1 263 2 90 1 66 1 165 2 81 2 314 2 21 1 136 2 
163 1 34 1 74 1 45 1 296 1 279 1 263 1 77 1 91 1 341 1 235 1 81 1 68 1 345 1 275 1 
163 1 34 1 74 1 45 1 296 1 263 1 244 1 77 1 91 1 341 1 235 1 81 1 224 1 68 1 345 1 
317 1 199 1 90 2 143 1 23 1 3 1 266 1 109 1 300 2 166 1 207 2 324 1 118 1 208 1 348 1 56 1 229 2 58 1 155 1 195 4 352 1 104 2 212 1 41 2 
165 1 81 1 314 1 193 1 181 1 263 1 194 1 136 1 
53 1 62 1 
53 1 62 1 
72 1 
72 1 
72 1 
53 1 62 1 35 1 
179 1 53 1 72 1 62 1 184 1 
149 1 53 1 62 1 
53 1 62 1 35 1 
53 1 62 1 35 1 
53 1 62 1 137 1 
53 1 62 1 137 1 
53 1 62 1 137 1 
153 1 20 1 100 1 310 1 53 1 62 1 187 1 26 1 291 1 
153 1 310 1 53 1 62 1 26 1 291 1 
308 1 47 1 218 1 
308 1 141 1 47 1 
32 1 141 1 106 1 202 1 47 3 218 2 
140 1 32 1 327 1 141 1 202 1 47 1 
32 1 141 1 202 2 47 2 218 1 
261 1 337 4 142 1 23 1 185 1 3 1 187 5 92 1 49 1 113 1 166 1 28 1 96 1 274 1 346 1 119 1 209 2 97 3 15 2 228 1 192 1 101 1 330 1 125 2 155 1 76 2 17 2 176 1 20 5 333 3 357 1 86 1 
261 2 337 7 142 1 23 3 185 2 3 3 187 9 299 1 49 2 113 2 166 3 28 3 273 1 96 1 346 4 119 1 209 6 97 8 15 6 307 5 228 1 277 1 278 5 192 2 101 6 330 3 155 3 76 5 17 6 157 1 59 1 20 9 333 9 241 1 290 1 
261 1 337 2 185 1 23 1 3 1 187 3 49 1 113 1 166 1 28 1 346 1 119 1 97 3 209 2 15 2 192 1 277 1 330 2 125 1 76 3 155 1 17 2 176 1 20 3 333 4 86 1 
261 1 337 3 185 1 23 2 3 2 187 4 299 1 49 1 113 1 166 2 28 2 346 2 119 1 209 4 97 5 15 4 192 1 277 1 330 3 125 2 76 4 155 2 17 4 176 1 20 4 333 7 241 1 86 1 290 1 
232 1 296 1 42 1 
296 1 226 1 
69 1 
163 1 296 1 77 1 
296 1 355 1 
163 1 296 1 
232 2 163 1 294 1 296 3 158 1 77 1 
0 1 58 3 155 1 331 1 3 1 195 7 25 1 352 2 248 1 130 1 104 4 116 2 52 1 71 1 356 1 207 3 31 1 
0 1 58 3 155 1 331 1 3 1 195 7 25 1 352 2 248 1 130 1 104 4 116 2 52 1 71 1 356 1 207 3 31 1 
0 1 58 3 155 1 331 1 3 1 195 7 25 1 352 2 248 1 130 1 104 4 225 1 116 2 52 1 71 1 356 1 207 3 31 1 
0 5 23 3 266 1 109 1 3 4 319 1 25 1 189 1 248 2 166 3 116 3 28 3 52 1 71 2 168 1 207 15 10 1 117 3 324 1 31 2 171 4 56 1 124 1 58 10 331 2 155 4 36 1 195 31 352 5 83 1 130 1 104 16 356 1 41 2 
0 1 3 1 266 2 109 2 25 1 302 1 189 1 145 1 248 1 116 2 71 1 52 1 207 4 324 2 31 1 56 2 58 4 155 1 331 1 195 9 352 3 130 1 104 5 41 4 
335 1 141 1 264 1 47 2 339 1 65 1 91 1 204 1 93 1 147 1 269 1 27 1 148 1 206 1 345 1 55 1 308 1 14 1 34 1 74 1 16 2 75 1 312 1 284 1 235 1 131 1 106 1 85 1 216 2 218 1 
335 1 141 1 318 1 264 1 47 2 339 1 188 1 91 1 204 1 93 1 147 1 269 1 27 1 148 1 206 1 345 1 308 1 34 1 74 1 16 3 75 1 312 1 284 2 235 1 131 1 106 1 85 1 216 3 198 1 218 1 
335 1 141 1 318 1 264 1 47 2 188 1 91 1 204 1 93 1 147 1 269 1 148 1 206 1 345 1 308 1 34 1 74 1 16 2 284 2 235 1 131 1 106 1 85 1 216 2 218 1 
44 1 163 1 45 1 89 1 296 1 264 2 339 1 91 1 147 2 27 1 205 1 206 2 345 1 190 1 74 1 34 1 16 1 283 1 235 1 131 2 216 1 198 1 217 1 
335 1 141 1 318 1 264 1 47 2 339 1 65 1 91 1 204 1 147 1 269 1 27 1 206 1 345 1 308 1 14 1 34 1 74 1 16 1 75 1 312 1 235 1 131 1 106 1 216 1 218 1 
164 1 
61 1 138 1 261 1 221 1 186 2 185 1 263 1 2 3 6 1 187 4 112 3 223 2 94 1 96 1 323 1 119 1 170 1 304 2 97 1 306 5 13 1 15 1 228 2 211 1 122 1 192 1 101 5 330 2 76 1 194 1 156 1 19 3 129 2 81 1 38 1 20 4 314 1 40 1 181 1 259 1 133 1 22 1 
61 1 138 1 261 1 221 1 186 2 185 1 263 1 2 3 6 1 187 4 112 3 223 2 94 1 96 1 323 1 119 1 170 1 304 2 97 1 306 5 13 1 15 1 228 2 211 1 122 1 192 1 101 5 330 2 76 1 194 1 156 1 19 3 129 2 81 1 38 1 20 4 314 1 40 1 181 1 259 1 133 1 22 1 
138 1 261 1 263 1 185 1 186 2 2 2 6 1 187 4 323 1 96 1 325 1 97 1 13 1 15 1 228 2 192 1 101 4 194 1 19 2 288 2 20 4 333 2 22 1 242 1 24 2 112 2 170 1 119 1 306 4 211 1 76 1 129 2 38 1 81 1 314 1 40 1 181 1 133 1 259 1 
44 1 138 1 261 1 45 2 186 2 185 1 263 1 2 2 1 1 6 1 187 5 91 2 49 1 223 2 96 1 323 1 325 1 97 2 13 1 15 2 228 3 192 1 101 6 330 2 194 1 19 2 235 2 20 5 333 2 22 1 61 1 163 1 296 1 200 1 112 2 205 1 345 2 119 1 170 1 304 2 306 4 34 1 74 1 211 1 76 2 129 2 257 1 81 1 38 1 40 1 314 1 180 1 181 1 259 1 133 1 
138 1 263 1 2 1 6 1 187 3 323 1 170 1 306 2 13 1 228 1 101 2 194 1 255 1 81 1 38 1 20 3 314 1 40 1 181 1 259 1 133 1 22 1 
138 1 263 1 6 1 187 3 112 1 323 1 170 1 119 1 306 3 13 1 228 1 101 1 76 1 194 1 255 1 81 1 38 1 20 3 314 1 40 1 181 1 259 1 133 1 22 1 
138 1 263 1 2 1 6 1 187 3 112 1 323 1 170 1 119 1 306 3 13 1 228 1 101 2 76 1 255 1 194 1 19 1 81 1 38 1 20 3 314 1 40 1 181 1 259 1 133 1 22 1 
138 1 261 1 221 1 263 1 185 1 186 2 2 4 6 1 187 5 223 2 94 1 323 1 96 1 97 1 13 1 15 1 228 3 192 1 101 7 330 2 194 1 156 1 19 4 20 5 105 1 22 1 61 1 112 4 170 1 119 5 304 2 306 6 211 1 122 1 76 5 255 1 129 2 38 1 81 1 40 1 314 1 181 1 133 1 259 1 
138 1 261 1 263 1 185 1 186 2 2 2 6 1 187 4 223 2 323 1 96 1 325 1 97 1 13 1 15 1 228 2 192 1 101 4 330 2 194 1 19 2 20 4 333 2 22 1 61 1 112 2 170 1 119 1 304 2 306 4 211 1 76 2 129 2 38 1 81 1 314 1 40 1 181 1 133 1 259 1 
61 1 138 1 261 1 221 1 186 2 185 1 263 1 2 2 6 1 187 4 112 2 223 2 94 1 323 1 96 1 119 1 170 1 304 2 97 1 306 4 13 1 15 1 228 2 211 1 192 1 101 4 330 2 76 1 194 1 156 1 19 2 129 2 81 1 38 1 20 4 314 1 40 1 181 1 259 1 133 1 22 1 
61 1 138 1 261 1 221 1 186 2 185 1 263 1 2 2 6 1 187 4 112 2 223 2 94 1 323 1 96 1 119 1 170 1 304 2 97 1 306 4 13 1 15 1 228 2 211 1 192 1 101 4 330 2 76 1 194 1 156 1 19 2 129 2 81 1 38 1 20 4 314 1 40 1 181 1 259 1 133 1 22 1 
138 1 261 1 242 1 186 2 185 1 263 1 2 2 24 2 6 1 187 4 112 2 340 1 94 1 323 1 96 1 119 1 170 1 97 1 306 4 13 1 15 1 228 2 211 1 192 1 101 4 123 1 76 1 194 1 19 2 288 2 129 2 81 1 38 1 20 4 314 1 40 1 333 2 181 1 259 1 133 1 22 1 
199 1 90 1 266 1 109 1 3 1 25 1 300 1 341 2 248 1 116 1 71 1 52 1 207 3 324 1 118 1 348 1 56 1 229 1 58 2 155 1 195 6 352 2 130 1 104 3 41 2 42 1 
60 1 0 1 199 2 90 11 23 2 201 1 266 2 109 2 3 1 319 1 298 1 300 11 341 1 115 1 166 1 28 2 207 6 324 2 252 1 117 3 348 1 171 3 56 2 229 4 124 1 58 2 155 2 195 14 352 1 196 1 104 8 358 1 41 4 
163 1 295 1 262 1 296 1 45 1 199 1 263 2 109 1 266 1 64 1 91 1 165 1 341 1 68 1 115 1 345 1 207 1 324 1 252 1 275 1 348 1 56 1 74 1 34 1 229 1 279 1 77 1 195 2 235 1 81 2 314 1 196 1 104 1 132 1 159 1 136 1 359 1 41 2 
262 1 0 4 45 1 318 1 263 3 90 7 3 3 266 3 91 3 52 1 151 2 324 3 275 2 56 3 328 2 229 7 279 2 58 8 155 3 195 20 231 2 235 3 289 1 196 1 104 10 293 2 163 2 162 2 295 1 296 2 199 3 23 2 109 3 25 1 300 7 165 1 341 2 248 1 115 1 68 2 166 2 116 1 28 2 71 1 207 10 345 3 252 1 348 3 34 2 74 2 77 2 127 1 352 4 81 3 130 1 314 1 136 1 41 6 43 1 
44 1 163 2 295 1 296 3 45 2 318 1 199 2 263 1 338 1 266 2 109 2 91 7 165 1 144 1 115 1 205 1 345 8 207 1 118 1 324 2 55 1 348 2 326 1 56 2 210 1 74 2 34 2 98 1 154 1 195 2 285 2 235 8 237 1 81 1 314 1 196 1 104 1 136 1 41 4 
199 1 90 1 263 1 23 1 266 1 109 1 3 1 66 1 300 1 165 1 166 1 28 1 207 2 324 1 252 1 348 1 56 1 229 1 58 1 155 1 195 3 18 1 352 1 81 1 314 1 104 1 21 1 136 1 41 2 
56 1 0 1 229 1 199 1 58 1 90 1 143 1 23 1 155 1 109 1 266 1 195 2 300 1 104 2 118 1 324 1 41 2 348 1 
56 1 229 1 199 1 58 1 90 1 109 1 266 1 3 1 195 2 300 1 352 1 166 1 207 2 118 1 324 1 41 2 348 1 208 1 
56 1 0 1 229 2 199 1 58 2 90 2 23 1 155 1 3 1 109 1 266 1 195 4 300 2 352 1 166 1 104 2 28 1 207 2 118 1 324 1 41 2 348 1 
56 1 210 1 0 1 229 1 199 1 58 1 90 1 143 1 23 1 155 1 109 1 266 1 195 2 300 1 104 2 324 1 41 2 348 1 
56 1 210 1 229 1 199 1 58 1 90 1 109 1 266 1 3 1 195 2 300 1 352 1 166 1 207 2 324 1 41 2 348 1 208 1 
56 1 210 1 0 1 229 2 199 1 58 2 90 2 23 1 155 1 3 1 109 1 266 1 195 4 300 2 352 1 166 1 104 2 28 1 207 2 324 1 41 2 348 1 
56 1 0 1 229 2 199 1 58 2 90 2 23 1 155 1 3 1 109 1 266 1 195 4 300 2 352 1 166 1 104 2 28 1 207 2 324 1 41 2 348 1 
163 1 45 1 296 1 199 1 263 1 109 1 266 1 91 1 341 1 68 1 115 1 345 1 207 1 324 1 275 1 348 1 56 1 74 1 34 1 328 1 279 1 77 1 195 2 235 1 81 1 104 1 196 1 41 2 
163 1 45 1 296 1 199 1 244 1 263 1 265 1 109 1 266 1 91 1 341 1 224 1 68 1 115 1 345 1 207 1 324 1 348 1 56 1 74 1 34 1 77 1 195 2 235 1 81 1 104 1 196 1 41 2 
56 1 0 1 229 2 199 1 58 2 90 2 23 1 155 1 3 1 109 1 266 1 195 4 300 2 352 1 166 1 104 2 28 1 207 2 252 1 324 1 41 2 348 1 
163 1 0 1 296 1 199 1 90 2 23 1 263 1 3 1 109 1 266 1 300 2 91 1 166 1 68 1 28 1 207 2 345 1 324 1 275 1 55 1 348 1 56 1 74 1 34 1 229 2 328 1 279 1 58 2 155 1 77 1 195 4 231 1 352 1 235 1 81 1 104 2 41 2 
0 1 199 1 263 1 23 1 90 1 3 1 266 1 109 1 66 1 300 1 165 1 166 1 28 1 207 1 324 1 252 1 348 1 56 1 57 1 229 1 58 1 155 1 195 3 81 1 314 1 104 2 21 1 136 1 41 2 
0 3 243 1 23 3 266 2 109 2 3 3 110 2 319 1 342 1 302 1 166 3 9 2 28 3 150 1 207 10 324 2 117 1 120 1 171 2 56 2 124 1 58 6 155 3 332 1 195 19 352 3 39 1 354 1 104 9 41 4 
0 2 220 1 243 1 23 3 3 2 266 3 109 3 110 1 189 2 302 1 166 2 9 4 28 3 150 1 207 12 324 3 117 2 30 1 120 1 171 2 56 3 173 1 124 2 58 4 155 3 332 2 195 26 287 1 352 2 353 1 354 2 104 14 41 6 161 1 
0 4 220 1 3 5 266 3 319 1 189 1 9 4 150 1 52 1 324 3 56 3 58 8 155 5 280 1 332 1 195 41 287 1 104 20 161 1 243 1 23 4 109 3 110 1 25 1 302 1 342 1 248 1 166 4 28 4 116 1 71 1 207 21 117 3 30 1 120 1 171 4 124 3 173 1 352 4 353 1 130 1 354 2 41 6 
220 1 0 3 243 1 23 4 266 4 109 4 3 4 110 1 319 1 25 1 342 1 189 2 302 1 248 1 166 3 116 1 9 4 28 4 52 1 71 1 150 1 207 18 30 1 324 4 117 3 120 1 171 4 56 4 173 1 124 3 58 7 155 5 280 1 332 1 195 38 287 1 352 4 353 1 130 1 354 2 104 20 41 8 161 1 
60 2 220 1 0 7 243 1 23 7 266 2 109 2 3 8 110 1 319 2 25 1 189 1 302 1 248 1 166 7 116 1 9 4 28 7 52 1 71 1 150 1 207 25 30 1 324 2 117 4 120 1 171 4 56 2 173 1 124 2 58 14 155 8 332 1 195 52 287 1 352 7 353 1 130 1 354 1 104 27 41 4 161 1 
163 1 296 1 199 1 263 2 338 1 109 1 266 1 5 1 91 2 115 1 54 1 345 2 207 1 324 1 252 1 348 1 56 1 74 1 34 1 98 1 350 1 174 1 195 2 285 2 233 1 235 2 81 2 314 2 196 1 104 1 41 2 
260 1 335 1 308 1 141 1 74 1 34 1 318 1 47 2 312 1 91 2 204 1 235 2 131 1 344 1 106 1 345 2 107 1 55 1 218 1 
335 1 308 1 141 1 34 1 74 1 318 1 47 2 312 1 91 1 204 1 235 1 131 1 106 1 240 1 345 1 107 1 218 1 
260 1 44 1 163 1 74 1 34 1 296 1 45 1 91 1 301 1 235 1 131 1 205 1 345 1 217 1 
260 1 335 1 308 1 141 1 74 1 34 1 318 1 47 2 312 1 91 1 204 1 235 1 131 1 344 1 106 1 345 1 107 1 218 1 
351 1 
235 1 67 1 328 1 45 1 334 1 345 1 91 1 
209 2 97 1 15 2 261 1 192 1 330 2 185 1 76 4 17 2 49 1 116 1 333 4 180 1 96 1 119 2 
97 1 12 1 15 1 114 1 76 1 119 1 42 1 
61 1 261 1 185 1 187 1 223 1 96 1 119 1 304 1 97 1 15 1 228 1 192 1 101 1 330 1 76 2 20 1 333 1 
139 2 261 4 222 2 45 1 185 4 3 2 187 5 91 3 7 2 49 2 146 2 96 4 226 3 55 1 152 1 97 9 12 1 15 8 228 3 192 4 101 5 330 6 155 2 17 6 232 2 235 3 103 2 238 2 20 5 333 12 158 1 163 3 162 2 296 10 23 2 297 1 114 1 166 2 28 2 345 3 119 2 347 2 209 6 74 4 34 3 253 2 76 8 77 3 78 1 82 1 180 1 133 2 355 2 134 1 
139 1 220 1 261 2 185 2 23 2 3 2 111 1 187 1 49 1 166 2 28 2 96 2 117 1 30 1 119 2 209 5 97 8 171 1 15 5 228 1 192 2 101 1 124 1 330 3 76 5 155 2 17 5 80 1 287 1 353 1 238 2 20 1 180 1 333 6 161 1 
97 2 15 1 261 1 192 1 329 1 185 1 155 1 3 1 126 1 187 1 156 1 248 1 238 2 20 1 52 1 71 1 96 1 334 1 29 1 
97 1 12 1 15 1 261 1 192 1 185 1 76 1 114 1 96 1 119 1 
209 5 97 5 139 1 162 1 15 5 23 2 330 5 155 2 76 5 17 5 3 2 238 2 166 2 28 2 333 10 
228 1 20 1 101 1 76 1 187 1 119 1 
336 1 44 1 163 1 261 2 296 1 45 2 200 1 185 2 1 1 4 1 187 3 91 4 49 2 205 1 96 1 345 4 97 2 15 2 74 1 34 1 228 2 277 1 192 2 101 4 78 2 235 4 20 3 180 2 134 1 
310 1 26 1 
310 1 26 1 
310 1 26 1 
310 1 26 1 
310 1 26 1 
310 1 26 1 
310 1 26 1 
310 1 26 1 
53 1 62 1 
56 2 0 1 58 3 155 1 3 1 109 2 266 2 195 8 25 1 352 2 189 1 248 1 130 1 104 4 116 1 52 1 71 1 207 4 324 2 41 4 
352 2 248 1 130 1 104 3 116 1 52 1 58 2 71 1 155 1 3 1 207 3 195 6 25 1 42 1 
56 1 0 1 58 2 23 1 155 1 3 1 109 1 266 1 195 4 267 1 352 1 166 1 104 2 28 1 207 2 324 1 41 2 
171 2 0 1 124 1 23 1 58 2 155 1 3 1 319 1 195 7 352 1 166 1 104 3 28 1 207 4 117 1 
60 1 0 4 23 2 3 3 109 2 266 2 319 1 298 1 25 1 189 2 268 1 248 2 166 2 116 1 28 2 52 1 71 2 207 12 117 2 324 2 171 2 56 2 58 9 155 3 195 23 352 5 130 1 104 11 41 4 
171 1 207 1 195 1 
104 1 195 1 117 1 
56 1 162 1 0 1 23 1 58 3 155 1 266 1 109 1 3 1 195 6 267 1 352 2 104 3 166 1 28 1 207 3 324 1 41 2 
0 1 220 1 23 2 266 1 109 1 3 2 302 1 166 2 28 2 207 6 117 1 324 1 30 1 171 1 56 1 124 1 58 2 155 2 195 12 287 1 352 1 353 1 104 6 41 2 161 1 
0 1 58 2 155 1 3 1 195 6 352 1 248 1 104 3 52 1 71 1 207 3 
56 1 0 1 58 2 109 1 266 1 195 3 25 1 352 1 268 1 189 1 248 1 130 1 104 1 71 1 207 2 324 1 41 2 
56 1 0 2 329 1 58 5 155 2 266 1 109 1 3 2 195 10 302 1 352 3 248 2 104 5 71 2 52 1 207 5 324 1 41 2 
56 1 0 1 23 1 58 1 155 1 109 1 266 1 195 2 302 1 104 2 324 1 41 2 
56 1 0 1 58 2 23 1 155 1 3 1 109 1 266 1 195 4 352 1 302 1 166 1 104 2 28 1 207 2 324 1 41 2 
56 3 0 1 58 2 109 3 266 3 195 3 189 1 268 1 342 1 302 1 352 1 248 1 104 1 71 1 207 2 324 3 41 6 
0 5 23 3 266 5 109 5 3 5 319 1 25 1 267 1 268 1 189 2 342 1 302 1 248 3 166 3 116 1 28 3 52 2 71 3 168 1 207 18 10 1 324 5 117 3 171 4 56 5 124 1 58 12 155 5 195 34 352 7 83 1 130 1 104 16 41 10 
3 1 266 1 109 1 25 1 302 1 248 1 116 1 71 1 52 1 207 4 117 1 324 1 171 1 56 1 124 1 58 2 155 1 195 8 352 2 130 1 104 4 41 2 161 1 
0 1 23 1 3 1 266 2 109 2 319 1 25 1 267 1 302 1 248 1 116 1 28 1 52 1 71 1 207 5 324 2 117 1 171 2 56 2 124 1 58 3 155 2 195 11 352 2 130 1 104 6 41 4 161 1 
0 1 220 1 23 2 266 3 109 3 3 3 25 1 267 1 302 1 189 1 248 1 166 2 116 1 28 2 52 1 71 1 207 10 117 1 324 3 30 1 171 1 56 3 124 1 58 4 155 3 195 19 287 1 352 3 353 1 130 1 104 9 41 6 161 1 
0 2 220 1 23 2 266 3 109 3 3 2 25 1 267 1 189 1 302 1 248 1 166 1 116 1 28 2 52 1 71 1 207 7 117 1 324 3 30 1 171 1 56 3 124 1 58 5 155 3 195 17 287 1 352 3 353 1 130 1 104 10 41 6 161 1 
3 1 266 1 109 1 25 1 302 1 248 1 116 1 71 1 52 1 207 4 117 1 324 1 171 1 56 1 124 1 58 2 155 1 195 8 352 2 130 1 104 4 41 2 161 1 
0 1 220 1 23 2 266 1 109 1 3 2 302 1 166 2 28 2 207 6 117 1 324 1 30 1 171 1 56 1 124 1 58 2 155 2 195 12 287 1 352 1 353 1 104 6 41 2 161 1 
0 2 220 1 23 2 266 4 109 4 3 2 25 1 267 1 302 1 189 2 248 1 166 1 116 1 28 2 52 1 71 1 207 8 324 4 117 1 30 1 171 1 56 4 124 1 58 5 155 3 195 18 287 1 352 3 353 1 130 1 104 10 41 8 161 1 
0 3 220 1 23 3 266 4 109 4 3 2 302 1 342 1 189 2 166 2 28 3 207 7 324 4 117 1 30 1 171 1 56 4 124 1 58 6 155 3 195 16 287 1 352 3 353 1 104 9 41 8 161 1 
0 3 58 6 155 1 3 1 195 7 25 1 352 3 248 3 130 2 104 3 71 3 52 1 207 4 
0 1 220 1 23 2 266 4 109 4 3 2 25 1 302 1 342 1 189 2 248 1 166 1 116 1 28 2 52 1 71 1 207 8 324 4 117 1 30 1 171 1 56 4 124 1 58 4 155 3 195 18 287 1 352 3 353 1 130 1 104 10 41 8 161 1 
341 1 81 1 236 1 314 1 263 1 281 1 170 1 
219 1 263 1 281 1 341 1 258 1 236 1 81 1 178 1 250 1 314 1 95 1 170 1 
44 1 163 1 235 1 74 1 34 1 296 1 45 1 205 1 345 1 42 1 91 1 
163 1 74 1 295 1 34 1 296 1 45 1 279 1 263 2 77 1 91 1 165 1 341 1 235 1 81 2 68 1 314 1 345 1 136 1 
163 2 74 1 295 1 34 1 296 3 279 1 263 2 77 2 194 1 78 1 91 1 165 2 341 1 235 1 38 1 81 2 68 1 314 2 181 1 355 1 345 1 136 1 347 1 
305 1 163 2 74 1 295 1 34 1 296 3 263 2 244 1 77 2 194 1 78 1 91 2 165 2 341 1 235 2 38 1 81 2 68 1 314 2 181 1 355 1 345 2 136 1 347 1 
296 1 46 1 76 1 126 1 187 1 78 1 91 1 235 1 20 1 334 1 226 1 345 1 29 1 119 1 
305 1 163 1 74 1 34 1 45 1 296 4 101 1 76 1 77 1 187 2 78 1 91 3 232 1 235 3 146 1 20 2 133 1 355 1 226 1 345 3 119 1 347 1 
326 1 235 1 74 1 34 1 345 1 91 1 
326 1 163 2 172 1 34 2 74 3 98 1 45 2 296 3 318 1 154 1 77 1 37 1 285 1 91 6 286 1 144 1 235 7 237 1 158 1 345 7 55 1 
263 2 90 1 266 2 3 1 91 1 52 1 54 1 324 2 275 1 55 1 56 2 229 1 328 1 279 1 58 2 155 1 195 6 231 1 235 1 104 3 293 1 163 1 295 1 296 1 199 2 109 2 25 1 300 1 165 1 341 2 248 1 68 1 116 1 71 1 345 1 207 3 252 1 348 2 34 1 74 1 77 1 352 2 81 2 130 1 314 1 136 1 41 4 
261 2 337 1 45 1 222 1 296 2 185 2 187 3 91 1 7 1 114 1 146 1 96 2 226 1 345 1 119 1 97 1 12 1 15 1 228 1 192 2 101 2 253 1 76 1 232 1 235 1 20 3 133 1 134 1 
326 1 163 1 34 1 74 2 296 2 77 1 91 2 232 1 235 2 82 1 158 1 345 2 55 1 
305 1 44 1 163 1 74 1 34 1 45 1 296 1 175 1 91 4 235 4 205 1 345 4 55 1 
349 1 163 1 172 1 34 1 74 2 296 1 77 1 78 1 37 1 91 2 235 2 50 1 345 2 43 1 
335 1 308 1 141 1 235 1 74 1 34 1 45 1 47 1 345 1 91 1 
163 1 34 1 74 1 98 1 296 1 318 1 174 1 91 2 235 2 345 2 55 1 
44 1 163 2 34 2 74 2 98 1 45 1 296 3 154 1 175 1 78 1 91 4 235 5 144 1 205 1 345 5 55 1 
44 1 163 2 34 2 74 2 98 1 45 1 296 3 175 1 78 1 91 4 246 1 235 5 144 1 205 1 345 5 55 1 
163 1 74 1 295 1 34 1 296 1 45 1 263 2 244 1 77 1 91 1 165 1 341 1 235 1 81 2 68 1 314 1 345 1 136 1 
163 1 172 1 34 1 74 2 296 1 77 1 78 1 37 1 91 1 286 1 235 1 158 1 345 1 
350 1 263 1 5 1 233 1 249 1 81 1 314 1 213 1 251 1 
177 1 309 1 251 1 
341 1 88 1 249 1 213 1 251 1 
138 1 88 2 337 1 309 1 76 1 194 1 187 2 177 1 256 1 341 1 247 1 249 2 38 1 20 2 251 1 213 2 181 1 133 1 119 1 
16 3 339 1 284 1 65 1 203 1 313 1 93 1 27 1 148 1 85 1 216 3 
93 1 70 1 73 1 11 1 
93 1 148 1 
93 1 148 1 85 1 42 1 
93 1 16 1 27 1 148 1 85 1 216 1 339 1 
147 1 206 1 216 1 
16 3 254 1 339 1 65 1 203 2 93 1 322 1 27 1 215 1 148 1 85 1 216 3 
16 2 316 1 339 1 284 1 93 1 27 1 148 1 85 1 216 2 11 1 
308 1 93 1 16 1 27 1 108 1 47 1 216 1 339 1 73 1 65 1 218 1 
93 1 16 1 27 1 148 1 216 1 339 1 65 1 
16 1 27 1 148 2 85 1 216 1 339 1 65 1 
33 1 16 2 48 1 339 2 65 1 93 1 27 2 148 1 51 1 216 2 
16 3 339 1 311 1 65 1 284 2 313 1 93 2 27 1 148 1 70 1 85 1 216 3 73 1 
141 1 308 1 16 2 47 2 339 1 65 1 79 1 284 1 93 1 27 1 148 1 106 1 85 1 216 2 218 1 
16 3 316 1 339 1 65 1 284 2 93 2 27 1 148 1 70 1 85 1 216 3 160 1 73 1 11 1 
93 1 16 1 27 1 148 1 85 1 216 1 339 1 65 1 
16 4 254 1 339 1 284 2 203 1 93 3 322 1 27 1 148 2 70 1 85 2 216 4 73 1 11 1 
227 1 93 1 276 1 16 2 27 1 148 1 271 1 85 1 216 2 339 1 284 1 65 1 
16 3 254 1 339 1 65 1 203 2 234 1 93 1 322 2 27 1 148 1 85 1 216 3 
93 2 270 1 197 1 183 2 
16 1 27 1 214 1 216 1 339 1 65 1 
313 1 93 1 16 2 27 1 148 1 85 1 216 2 339 1 284 1 65 1 
8 1 
93 1 16 1 27 1 148 1 85 1 216 1 339 1 65 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 28 (37,169) 150 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 28 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 28 153 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 28 (37,169) 150 36 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 28 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 291 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 243 86 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (212,308) (42,182) (42,182) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 215 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 80 (75,135,204) (75,135,204) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 80 (75,135,204) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (60,317,323) (75,135,204) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (187,200) (5,61) (5,61) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 80 (75,135,204) (75,135,204) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 28 153 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 28 (37,169) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 291 164 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 28 (37,169) (37,169) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 297 104 137 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 297 104 137 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 297 104 137 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 297 104 137 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 297 104 137 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (212,308) (212,308) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 243 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 193 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 127 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 13 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (212,308) (42,182) (42,182) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (212,308) (42,182) (42,182) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (212,308) (42,182) (42,182) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 127 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 127 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 13 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 13 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 243 86 284 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 80 (60,317,323) (60,317,323) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 80 (60,317,323) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (187,200) (187,200) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 80 (60,317,323) (60,317,323) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 268 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 28 (37,169) 150 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 312 316 143 9 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 312 316 143 9 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 312 316 143 9 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 312 316 143 9 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 312 316 143 9 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 312 316 143 9 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 312 316 143 9 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 101 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
94 2 97 2 261 1 48 1 299 1 265 1 55 9 113 2 230 2 306 1 152 1 275 1 276 9 24 2 238 1 280 1 281 5 26 4 201 1 283 1 203 2 321 1 206 1 125 2 126 3 133 6 172 1 335 1 
94 2 97 2 261 1 48 1 299 1 265 1 55 9 113 2 230 2 306 1 152 1 275 1 276 9 24 2 238 1 280 1 281 5 26 4 201 1 283 1 203 2 321 1 206 1 125 2 126 3 133 6 172 1 335 1 
94 2 97 2 261 1 48 1 299 1 265 1 55 10 113 2 230 2 306 1 152 1 275 1 276 10 24 2 238 1 280 1 281 6 26 5 201 1 283 1 203 2 321 1 206 1 125 2 126 4 133 7 172 1 335 1 
94 2 97 2 261 1 48 1 265 1 55 7 113 2 230 2 306 1 152 1 275 1 276 7 24 2 238 1 280 1 281 4 26 3 201 1 283 1 203 2 321 1 206 1 125 1 126 2 133 4 172 1 335 1 
24 1 94 1 97 1 281 3 48 1 299 1 26 2 201 1 283 1 55 4 321 1 125 2 126 1 113 1 230 1 133 3 152 1 276 4 
309 1 238 1 24 1 138 1 94 1 281 1 97 1 48 1 283 1 55 2 203 1 230 1 293 1 152 1 276 2 275 1 
24 2 281 2 48 1 26 1 283 1 55 3 203 1 126 1 230 2 133 1 152 1 276 3 335 1 
94 1 97 1 48 1 299 1 55 9 113 1 230 2 63 1 152 1 276 9 24 2 280 1 281 5 26 4 201 1 283 1 203 1 321 1 125 2 126 3 165 1 133 7 172 1 335 1 
94 1 97 1 48 1 299 1 55 9 113 1 230 2 63 1 152 1 276 9 24 2 280 1 281 5 26 4 201 1 283 1 203 1 321 1 125 2 126 3 165 1 133 7 172 1 335 1 
51 1 101 1 179 1 
184 1 132 2 51 1 
175 2 118 2 112 2 218 2 188 2 82 2 231 1 234 1 
175 1 44 1 156 1 118 1 218 1 28 1 288 1 112 1 188 1 114 2 82 1 169 1 150 1 333 1 234 1 
175 1 107 1 118 1 195 1 112 1 218 1 188 1 82 1 301 1 234 1 
298 1 241 1 218 1 100 1 245 1 51 1 179 1 53 1 301 1 209 1 210 1 112 1 82 1 294 1 
175 1 118 1 241 1 218 1 245 2 51 1 179 1 53 1 301 1 209 1 210 2 112 1 188 1 82 1 294 1 
3 1 142 1 210 1 327 1 245 1 
3 1 325 1 210 2 327 1 245 2 51 1 179 1 151 1 
3 1 210 1 245 1 
175 1 107 1 118 1 195 1 210 1 112 1 218 1 327 1 188 1 82 1 245 1 301 1 296 1 234 1 
51 1 
3 1 210 2 98 1 327 1 245 2 51 1 179 1 151 1 
190 1 191 2 3 2 91 1 176 2 245 5 178 1 51 1 222 1 179 1 76 1 324 1 227 1 186 1 210 5 255 2 327 2 147 1 151 1 
175 1 44 1 59 1 112 1 218 1 188 1 114 1 82 1 161 1 28 1 
101 1 231 1 
175 1 118 1 67 1 218 2 112 2 188 1 82 2 231 2 307 1 
66 1 292 1 320 1 
153 1 44 1 114 1 28 1 
175 4 118 1 218 5 100 1 161 1 264 1 11 1 122 1 59 2 112 5 188 4 82 5 231 1 307 1 
175 2 195 1 19 1 112 2 218 2 188 2 82 2 301 1 
175 3 118 1 59 1 112 3 218 3 188 3 82 3 231 1 
175 1 195 1 112 1 218 1 188 1 82 1 301 1 
175 1 118 1 67 1 112 1 218 1 188 1 82 1 301 1 307 1 
175 3 44 1 118 2 241 1 218 3 245 1 161 1 28 1 301 1 53 1 270 1 59 1 210 1 209 1 112 3 188 3 36 1 114 1 82 3 169 1 150 1 294 1 307 1 234 1 
175 1 59 1 112 2 218 2 188 1 100 1 82 2 231 1 122 1 
175 3 118 1 198 1 241 1 218 3 245 1 161 1 51 1 301 1 53 1 270 1 59 2 210 1 209 1 112 3 188 3 82 3 307 1 294 1 
175 2 118 1 218 2 320 1 59 1 112 2 292 1 188 2 82 2 307 1 
44 1 114 1 28 1 
44 1 291 1 114 1 
0 1 260 1 266 1 58 1 305 1 232 1 274 1 66 2 312 1 196 1 25 1 157 1 242 2 202 4 247 2 320 2 129 1 130 2 131 1 292 2 211 1 213 1 40 1 173 1 
175 1 241 1 19 1 112 1 218 1 188 1 82 1 301 1 
311 1 38 1 
311 1 38 1 
89 1 22 1 
89 1 22 1 
89 1 22 1 
311 1 273 1 38 1 
322 1 311 1 38 1 
207 1 4 1 89 1 311 2 38 2 22 1 
311 1 273 1 38 1 
311 1 273 1 38 1 
90 1 311 1 38 1 
90 1 311 1 38 1 
90 1 311 1 38 1 
175 1 92 1 6 1 68 1 70 1 218 1 243 1 160 1 245 1 246 1 56 1 144 1 110 1 210 1 112 1 188 1 82 1 86 1 
42 1 136 1 92 2 6 2 70 2 160 2 47 1 245 2 51 1 56 2 182 1 110 1 210 2 308 1 
94 1 97 1 113 1 
94 1 97 1 293 1 
259 1 7 1 97 3 113 2 293 1 304 1 
259 1 7 1 97 2 113 1 99 1 293 1 
259 2 7 1 97 2 113 1 293 1 
258 1 3 1 176 1 260 1 51 2 178 3 179 1 263 2 180 1 302 1 106 1 58 1 144 1 184 1 186 2 151 1 232 1 191 1 190 1 312 1 313 1 68 1 316 1 245 5 244 1 246 1 319 2 123 2 210 5 255 1 327 4 132 3 
215 1 1 1 154 1 210 1 327 1 245 1 
258 1 176 1 260 1 51 3 178 3 179 1 180 1 263 2 106 1 58 1 184 2 186 2 147 1 232 1 191 1 312 1 68 1 316 1 245 3 244 1 319 2 123 1 210 3 255 1 327 2 132 4 
258 1 176 1 260 2 51 4 178 5 179 1 263 4 224 1 180 1 106 1 58 2 184 3 186 4 147 1 232 2 191 1 310 1 279 1 312 2 68 2 316 2 245 4 244 1 319 4 123 2 210 4 255 1 327 3 132 7 
217 1 167 1 101 1 
167 1 30 1 
257 1 
252 1 167 1 219 1 
167 1 31 1 
252 1 167 1 
216 1 217 2 252 1 167 3 219 1 34 1 
278 1 157 2 120 1 202 6 303 1 247 3 285 1 267 1 249 1 58 1 130 3 185 1 211 1 214 1 232 1 233 1 336 1 
278 1 157 2 120 1 202 6 303 1 247 3 285 1 267 1 249 1 58 1 130 3 185 1 211 1 214 1 232 1 233 1 336 1 
278 1 157 2 120 1 202 6 303 1 247 3 285 1 267 1 249 1 58 1 250 1 130 3 185 1 211 1 214 1 232 1 233 1 336 1 
0 1 88 1 260 3 303 1 266 1 267 2 58 4 17 1 185 1 233 2 232 4 192 1 194 1 312 3 278 5 120 2 157 9 242 2 316 3 159 1 202 30 247 15 121 1 285 2 249 1 78 1 79 3 130 15 131 1 329 4 211 4 214 1 40 1 336 2 
0 1 139 1 300 1 303 1 266 1 267 1 58 2 232 2 233 1 278 1 120 1 157 3 242 2 202 9 247 5 285 1 249 1 130 4 131 1 211 2 134 1 40 1 214 1 336 1 
24 1 239 1 27 1 283 1 55 1 204 1 203 1 80 1 166 1 230 1 114 1 272 1 135 1 276 1 
24 1 27 1 55 2 204 1 203 1 14 1 208 1 80 1 166 1 230 1 114 1 133 1 271 1 272 1 276 2 
323 1 14 1 208 1 166 1 114 1 27 1 133 1 272 1 75 1 55 1 203 1 276 1 
44 1 5 1 24 1 27 2 55 1 203 2 166 2 187 1 33 1 61 1 230 1 114 1 271 1 272 2 276 1 
24 1 27 1 283 1 55 1 204 1 203 1 14 1 80 1 166 1 230 1 114 1 272 1 135 1 276 1 
74 1 
3 6 93 1 176 1 95 1 8 2 262 2 100 1 178 2 179 1 181 1 106 1 16 1 186 2 184 2 112 1 114 2 20 2 190 1 191 1 199 2 29 1 286 2 210 5 209 1 132 2 294 1 44 2 298 1 140 1 218 1 51 2 53 1 301 1 57 1 151 3 155 1 241 1 245 5 318 2 255 1 328 1 82 1 331 1 256 2 84 1 171 4 85 1 
3 2 298 1 218 1 140 1 98 1 100 1 53 1 301 1 57 1 112 1 151 1 20 1 241 1 245 3 29 1 210 3 209 1 82 1 84 1 171 2 85 1 294 1 
3 1 298 1 218 1 140 1 98 1 100 1 51 1 53 1 301 1 179 1 57 1 112 1 151 1 241 1 245 3 29 1 210 3 209 1 82 1 84 1 171 3 256 1 85 1 294 1 
3 2 298 1 98 1 218 1 140 1 100 1 51 1 53 1 301 1 179 1 57 1 112 1 151 1 20 1 241 1 245 3 29 1 318 1 210 3 209 1 82 1 84 1 171 3 256 1 85 1 294 1 
3 7 176 1 95 1 98 1 8 2 262 2 100 1 178 1 179 5 186 1 184 2 112 1 20 4 190 1 191 1 197 1 199 2 29 1 286 2 209 1 210 5 294 1 41 1 298 1 218 1 140 1 223 1 51 5 301 1 53 1 57 1 62 1 151 3 241 1 245 5 318 4 255 1 328 1 82 1 83 1 171 6 84 1 256 4 85 1 
3 4 93 1 298 1 176 1 95 1 8 2 140 1 218 1 262 2 100 1 51 2 178 1 179 1 53 1 301 1 57 1 184 2 186 1 112 1 151 2 20 2 191 1 190 1 199 2 241 1 245 4 29 1 318 2 286 2 210 4 209 1 255 1 328 1 132 2 82 1 256 2 84 1 171 4 85 1 294 1 
3 4 298 1 176 1 95 1 8 2 218 1 140 1 262 2 100 1 51 1 178 1 179 1 53 1 301 1 57 1 184 2 186 1 112 1 151 2 20 2 190 1 191 1 197 1 199 2 241 1 245 4 29 1 318 2 286 2 210 4 209 1 255 1 328 1 82 1 83 1 256 2 84 1 171 4 85 1 294 1 41 1 
3 4 298 1 176 1 95 1 8 2 218 1 140 1 262 2 100 1 51 1 178 1 179 1 53 1 301 1 57 1 184 2 186 1 112 1 151 2 20 2 190 1 191 1 197 1 199 2 241 1 245 4 29 1 318 2 286 2 210 4 209 1 255 1 328 1 82 1 83 1 256 2 84 1 171 4 85 1 294 1 41 1 
3 4 298 1 176 1 8 2 218 1 140 1 100 1 51 1 178 1 179 1 53 1 301 1 57 1 186 1 229 1 18 1 112 1 151 2 20 2 190 1 191 1 199 2 241 1 245 4 29 1 318 2 248 2 77 2 210 4 209 1 255 1 328 1 132 2 82 1 83 1 256 2 84 1 171 4 85 1 295 1 294 1 
3 5 176 1 298 1 95 1 8 2 218 1 140 1 262 2 100 1 51 1 178 1 179 1 53 1 301 1 57 1 184 2 186 1 112 1 62 1 151 2 20 3 191 1 190 1 197 1 199 2 241 1 245 4 29 1 318 3 286 2 210 4 209 1 255 1 328 1 82 1 83 1 84 1 171 5 256 3 85 1 294 1 41 1 
3 5 176 1 298 1 95 1 8 2 218 1 140 1 262 2 100 1 51 1 178 1 179 1 53 1 301 1 57 1 184 2 186 1 112 1 62 1 151 2 20 3 191 1 190 1 197 1 199 2 241 1 245 4 29 1 318 3 286 2 210 4 209 1 255 1 328 1 82 1 83 1 84 1 171 5 256 3 85 1 294 1 41 1 
3 4 93 1 298 1 176 1 8 2 140 1 218 1 100 1 51 1 178 1 179 1 53 1 301 1 57 1 186 1 112 1 151 2 20 2 191 1 190 1 199 2 241 1 245 4 29 1 318 2 248 2 77 2 210 4 209 1 255 1 328 1 132 2 82 1 256 2 84 1 171 4 85 1 294 1 295 1 
0 1 157 1 120 1 25 1 242 2 101 1 202 5 303 1 247 2 266 1 285 1 249 1 58 1 130 3 131 1 211 1 213 1 231 2 40 1 214 1 232 1 274 1 
87 1 0 2 260 1 49 1 266 2 226 1 15 1 58 1 231 1 232 2 192 1 194 1 278 1 66 11 312 2 157 2 25 2 242 4 316 2 162 1 202 14 247 8 320 4 287 1 289 1 130 6 79 3 131 2 292 11 211 1 329 3 213 1 40 2 
0 1 175 1 44 1 218 1 49 1 266 1 59 1 145 1 112 1 188 1 114 1 153 1 277 1 237 1 25 1 242 2 161 1 28 1 162 1 202 2 320 1 247 1 287 1 130 1 131 1 82 1 213 1 40 1 
0 1 175 1 44 1 25 1 242 2 218 1 49 1 161 1 202 1 162 1 225 1 266 1 59 1 130 1 131 1 112 1 188 1 114 1 82 1 213 1 40 1 
0 2 175 1 44 2 218 1 49 1 266 2 59 1 112 1 188 1 114 4 274 1 235 1 239 1 25 2 158 1 242 4 202 2 247 1 205 1 287 1 130 1 288 1 131 2 82 1 213 2 40 2 
0 1 175 1 43 1 260 1 218 1 266 1 58 1 112 1 188 1 232 1 307 1 66 1 312 1 118 1 157 1 25 1 242 2 316 1 162 1 202 3 320 1 247 1 130 2 292 1 131 1 211 1 82 1 213 1 40 1 
0 1 278 1 66 1 312 1 157 1 25 1 242 2 202 2 320 1 266 1 247 2 292 1 131 1 213 1 40 1 173 1 232 1 274 1 
0 1 66 1 157 1 25 1 260 1 242 2 202 2 320 1 266 1 58 1 129 1 130 2 292 1 131 1 211 1 213 1 40 1 274 1 
0 1 260 1 266 1 58 1 232 1 274 1 312 1 66 2 278 1 25 1 157 2 242 2 316 1 202 4 247 2 320 2 130 2 131 1 292 2 211 1 213 1 40 1 
0 1 278 1 66 1 312 1 157 1 25 1 242 2 202 2 320 1 266 1 247 2 205 1 292 1 131 1 213 1 40 1 173 1 232 1 
0 1 66 1 157 1 25 1 260 1 242 2 202 2 320 1 266 1 205 1 58 1 129 1 130 2 292 1 131 1 211 1 213 1 40 1 
0 1 260 1 266 1 58 1 232 1 312 1 66 2 278 1 25 1 157 2 242 2 316 1 202 4 247 2 320 2 205 1 130 2 131 1 292 2 211 1 213 1 40 1 
0 1 278 1 66 2 312 1 260 1 157 2 25 1 242 2 316 1 202 4 320 2 266 1 247 2 58 1 130 2 292 2 131 1 211 1 213 1 40 1 232 1 
44 1 114 1 28 1 169 1 
44 1 291 1 114 1 164 1 
0 1 260 1 266 1 58 1 232 1 312 1 66 2 278 1 25 1 157 2 242 2 316 1 162 1 202 4 247 2 320 2 130 2 131 1 292 2 211 1 213 1 40 1 
239 1 114 1 28 1 169 1 37 1 
0 1 175 1 260 1 218 1 266 1 58 1 112 1 188 1 189 1 232 1 307 1 278 1 312 1 66 1 118 1 157 1 25 1 242 2 316 1 162 1 202 3 247 2 320 1 130 1 131 1 292 1 82 1 213 1 40 1 
297 1 137 1 0 1 45 1 131 1 242 2 300 1 40 1 104 1 266 1 
297 1 137 1 0 1 45 1 131 1 242 2 300 1 40 1 104 1 266 1 
297 1 137 1 0 1 45 1 131 1 242 2 300 1 40 1 104 1 266 1 
297 1 137 1 0 1 45 1 131 1 242 2 300 1 40 1 104 1 266 1 
297 1 137 1 0 1 45 1 131 1 242 2 300 1 40 1 104 1 266 1 
6 1 70 1 160 1 212 1 56 1 308 1 
243 1 
193 1 6 1 70 1 160 1 56 1 
127 1 
13 1 
42 1 136 1 92 2 6 1 70 1 160 1 47 1 245 1 51 1 56 1 182 1 110 1 210 1 308 1 
42 1 136 1 92 2 6 1 70 1 160 1 47 1 245 1 51 1 56 1 182 1 110 1 210 1 308 1 
42 1 136 1 92 2 6 1 70 1 160 1 47 1 245 1 51 1 56 1 182 1 110 1 210 1 308 1 
127 1 
127 1 
13 1 
13 1 
141 1 54 1 
136 1 92 1 6 1 68 1 70 1 243 1 160 1 47 1 245 1 246 1 56 1 284 1 144 1 210 1 327 1 86 1 
235 1 0 1 236 1 25 1 242 2 218 2 49 1 202 2 162 1 247 1 266 1 287 1 288 2 130 1 253 1 81 1 131 1 112 2 114 2 82 2 213 1 40 1 334 1 
14 1 251 1 80 1 239 1 60 1 114 2 317 1 27 1 
14 1 80 1 114 1 317 1 27 1 332 1 
44 1 251 1 187 1 114 1 27 1 200 1 
14 1 251 1 80 1 60 1 114 1 317 1 27 1 
21 1 
91 1 186 1 178 1 51 1 222 1 101 1 179 1 
3 1 176 1 95 1 262 1 178 1 51 2 179 1 184 1 186 1 151 1 191 1 190 1 245 1 286 1 210 1 255 1 132 1 
268 1 191 1 190 1 44 1 176 1 255 1 114 1 
176 1 260 2 9 1 177 1 178 6 51 1 10 1 263 4 143 1 58 2 184 1 186 4 232 2 191 1 190 1 194 1 312 2 314 1 316 2 319 4 79 1 255 1 132 2 329 1 
175 1 176 1 218 1 178 2 301 1 107 1 58 1 186 2 112 1 188 1 232 2 234 1 191 1 190 1 118 1 195 1 120 1 245 1 285 1 249 1 128 1 210 1 255 1 82 1 134 1 174 2 296 1 41 1 
190 1 191 1 91 1 176 1 222 1 51 1 178 1 179 1 186 1 255 1 
312 2 260 2 316 2 51 5 178 5 263 5 319 5 58 2 128 1 186 5 184 5 290 1 132 10 232 2 174 2 
3 1 210 1 245 1 51 1 179 1 151 1 
190 1 191 2 117 1 155 2 3 4 44 2 176 2 245 3 178 2 181 1 105 2 106 2 186 2 210 3 146 1 255 2 111 1 147 1 114 4 331 1 151 2 
175 1 44 1 118 1 112 1 218 1 188 1 114 1 82 1 28 1 169 1 150 1 234 1 
190 1 191 1 155 1 176 1 178 1 51 4 179 2 263 2 319 2 106 1 184 2 186 2 255 1 132 4 336 1 
6 1 103 1 56 1 
6 1 315 1 330 1 54 1 56 1 
6 1 103 1 56 1 
6 1 103 1 56 1 
6 1 163 1 56 1 
6 1 163 1 56 1 
6 1 163 1 56 1 
6 1 56 1 
311 1 38 1 
0 1 194 1 157 1 120 1 242 2 9 1 300 1 303 1 202 7 247 3 266 1 285 1 249 1 58 1 130 4 79 1 131 1 211 1 329 1 214 1 40 1 232 1 
0 2 9 1 300 1 303 1 266 2 58 1 232 2 192 1 194 1 312 1 278 1 120 1 157 2 242 4 69 1 316 1 202 10 247 5 285 1 249 1 130 5 79 1 131 2 211 1 329 2 214 1 40 2 
0 1 312 1 194 1 242 2 9 1 316 1 10 1 300 1 202 5 247 3 266 1 143 1 130 2 79 1 131 1 329 1 40 1 232 1 
0 1 312 1 194 1 242 2 9 1 316 1 10 1 300 1 202 5 247 3 266 1 143 1 130 2 79 1 131 1 329 1 40 1 232 1 
0 1 194 1 157 1 120 1 242 2 9 1 300 1 303 1 202 7 247 3 266 1 285 1 249 1 58 1 130 4 79 1 131 1 211 1 329 1 214 1 40 1 232 1 
0 1 312 1 194 1 242 2 9 1 316 1 10 1 300 1 202 5 247 3 266 1 143 1 130 2 79 1 131 1 329 1 40 1 232 1 
0 2 312 1 194 1 242 4 69 1 9 1 316 1 10 1 300 1 202 5 247 3 266 2 143 1 79 1 130 2 131 2 329 1 40 2 232 1 
0 2 312 1 65 1 194 1 242 4 9 1 316 1 10 1 300 1 202 5 247 3 266 2 143 1 79 1 130 2 131 2 329 1 40 2 232 1 
278 4 120 4 157 9 202 10 303 1 247 5 285 4 249 2 58 2 130 5 211 5 134 1 214 1 232 2 336 1 
0 2 312 1 65 1 194 1 242 4 9 1 316 1 10 1 300 1 202 5 247 3 266 2 143 1 79 1 130 2 131 2 329 1 40 2 232 1 
0 2 278 1 157 2 120 1 242 4 202 7 303 1 247 3 266 2 121 1 285 1 249 1 58 1 130 4 131 2 211 1 40 2 214 1 232 1 
249 1 58 1 130 3 157 1 120 1 211 1 101 1 214 1 202 5 232 1 303 1 247 2 285 1 
0 1 312 1 278 1 260 1 157 2 69 1 242 2 316 1 202 4 266 1 247 2 58 1 130 2 131 1 211 1 40 1 232 1 
192 1 194 1 312 1 278 1 260 1 157 2 316 1 202 7 247 3 58 1 130 4 79 1 211 1 329 2 232 1 
0 2 260 2 303 1 266 2 226 1 15 1 58 3 109 1 232 3 192 1 278 4 312 2 120 2 157 8 242 4 316 2 202 22 247 10 121 2 285 2 249 1 79 2 130 12 131 2 329 2 211 4 214 1 40 2 
130 1 329 1 202 1 
79 1 202 1 247 1 
0 1 312 1 278 1 157 3 260 1 242 2 69 1 316 1 202 6 266 1 247 3 58 1 130 3 290 1 131 1 211 2 40 1 232 1 
0 1 312 1 194 1 242 2 9 1 316 1 10 1 300 1 202 5 247 3 266 1 143 1 130 2 79 1 131 1 329 1 40 1 232 1 
278 1 120 1 157 2 202 6 247 3 285 1 249 1 58 1 130 3 211 1 232 1 
0 1 278 1 157 2 120 1 242 2 202 3 303 1 247 1 121 1 266 1 285 1 109 1 130 2 131 1 211 1 214 1 40 1 
0 1 278 2 120 2 157 5 242 2 300 1 202 10 266 1 247 5 285 2 249 1 58 2 130 5 131 1 211 3 134 1 40 1 232 2 
0 1 312 1 278 1 157 1 242 2 300 1 202 2 266 1 247 2 131 1 40 1 232 1 
0 1 312 1 278 1 260 1 157 2 242 2 316 1 300 1 202 4 266 1 247 2 58 1 130 2 131 1 211 1 40 1 232 1 
0 3 65 1 278 1 120 1 157 2 242 6 300 1 202 3 121 1 266 3 247 1 285 1 109 1 130 2 131 3 211 1 40 3 
0 5 260 3 300 1 303 1 266 5 17 1 58 5 109 1 232 5 192 1 194 1 65 1 312 3 278 5 120 3 157 11 69 1 242 10 159 1 316 3 202 33 121 2 247 15 285 3 249 2 78 1 130 18 79 3 131 5 329 4 211 6 214 1 40 5 
32 1 112 1 218 1 82 1 100 1 231 1 122 1 
23 1 46 1 218 1 100 1 122 1 168 1 32 1 112 1 35 1 148 1 82 1 231 1 
44 1 114 1 101 1 
175 1 44 1 59 1 112 1 218 1 188 1 114 1 82 1 
175 1 59 1 112 1 218 1 188 1 114 1 82 1 105 1 
175 1 59 1 112 1 218 1 188 1 114 1 82 1 105 1 
210 1 114 1 245 1 105 1 
210 1 114 1 245 1 105 1 
114 1 170 1 
44 1 114 1 
0 1 175 1 236 1 239 1 25 1 242 2 218 1 162 1 266 1 59 1 131 1 112 1 188 1 114 1 82 1 213 1 40 1 
191 1 190 1 44 1 176 1 210 1 255 1 111 1 327 1 114 1 245 1 
114 1 170 1 
183 1 44 1 239 1 114 4 12 1 
228 1 114 1 
44 1 114 1 
14 1 239 1 114 2 
44 1 239 1 114 2 
44 1 239 1 114 2 
175 1 44 1 59 1 112 1 218 1 188 1 114 1 82 1 
114 1 105 1 
218 1 50 1 221 1 102 1 253 1 81 1 112 1 82 1 334 1 
220 1 221 1 116 1 
50 1 221 1 149 1 231 1 102 1 
241 1 96 1 220 1 50 2 221 1 245 2 51 1 179 1 301 1 53 1 102 2 270 1 209 1 210 2 327 1 149 2 231 1 294 1 116 1 
281 1 48 1 101 1 152 1 
24 1 281 1 48 1 230 1 55 1 152 1 276 1 
272 1 55 1 203 1 
2 1 269 1 238 2 24 1 281 1 48 1 230 1 39 1 55 3 283 1 152 1 276 3 
125 1 24 1 281 1 48 1 230 1 133 1 55 2 152 1 276 2 
321 1 24 1 94 1 97 1 281 1 113 1 26 1 230 1 55 1 283 1 276 1 
24 1 281 1 48 1 230 1 55 1 283 1 276 1 
24 1 48 2 230 1 55 1 283 1 152 1 276 1 
24 2 281 1 48 1 73 1 282 1 283 1 55 2 254 1 230 2 276 2 
24 1 280 1 281 2 48 1 26 1 283 1 55 3 126 1 230 1 133 2 172 1 152 1 276 3 
24 1 94 1 281 1 97 2 48 1 283 1 55 2 304 1 113 1 293 1 230 1 133 1 115 1 152 1 276 2 
24 2 281 2 48 1 299 1 26 1 283 1 55 4 125 1 126 1 230 2 133 2 152 1 276 4 
24 1 281 1 48 1 230 1 55 1 283 1 152 1 276 1 
238 1 24 1 281 3 48 2 26 1 71 1 55 4 269 1 126 1 230 1 133 2 39 1 152 2 276 4 
119 1 24 1 281 1 48 1 230 1 133 1 63 1 52 1 55 2 283 1 152 1 276 2 
269 2 238 2 24 1 326 1 281 1 48 1 230 1 39 1 55 3 283 1 152 1 276 3 
108 2 240 1 281 2 64 1 
24 1 72 1 230 1 55 1 283 1 276 1 
24 1 281 1 48 1 230 1 133 1 172 1 55 2 283 1 152 1 276 2 
124 1 
24 1 281 1 48 1 230 1 55 1 283 1 152 1 276 1 
238 1 24 1 281 1 48 1 230 1 133 1 172 1 55 3 283 1 152 1 276 3 
126 1 281 1 26 1 71 1 
281 1 48 1 

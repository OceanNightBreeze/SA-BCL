#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 71 (120,296) (120,296) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 71 (120,296) (120,296) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 71 (120,296) (120,296) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 71 (120,296) (120,296) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 151 (162,178,336) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 39 260 212 22 23 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 39 260 212 22 23 156 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 39 260 212 22 23 156 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 39 260 212 22 23 156 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 90 212 22 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 39 260 212 22 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 39 260 212 22 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 39 260 212 22 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 39 260 212 22 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 39 260 212 22 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 39 260 212 22 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 39 260 212 22 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2408 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
71 1 296 1 204 1 233 1 120 1 359 1 249 1 333 1 369 1 222 1 37 1 
71 1 296 1 204 1 233 1 120 1 359 1 249 1 333 1 369 1 222 1 37 1 
71 1 296 1 204 1 233 1 120 1 359 1 249 1 333 1 369 1 222 1 37 1 
71 1 296 1 204 1 233 1 120 1 359 1 249 1 333 1 369 1 222 1 37 1 
321 1 38 2 1 3 30 2 198 1 199 1 160 3 45 1 369 4 273 1 290 1 177 1 125 1 249 1 359 1 333 4 136 1 37 1 
1 1 198 1 199 1 233 1 369 2 177 1 356 1 195 1 204 1 249 1 359 1 333 2 128 1 136 1 375 1 37 1 
290 1 38 1 177 1 1 2 198 1 160 1 233 1 262 1 359 2 249 2 333 3 369 3 37 1 
321 1 38 4 1 5 30 2 198 1 199 1 185 1 160 7 45 1 262 1 233 1 369 9 273 1 290 3 177 1 125 1 278 1 249 2 359 2 333 9 136 1 118 1 320 1 37 1 
321 1 38 4 1 5 30 2 198 1 199 1 185 1 160 7 45 1 262 1 233 1 369 9 273 1 290 3 177 1 125 1 278 1 249 2 359 2 333 9 136 1 118 1 320 1 37 1 
372 1 
226 1 340 2 361 1 
18 2 107 1 216 2 50 2 2 2 302 1 232 2 135 2 
197 1 255 1 2 2 3 2 302 1 232 3 271 1 105 1 107 1 108 1 238 1 353 1 126 1 355 1 12 2 61 2 35 1 84 1 180 1 18 2 283 1 241 1 365 2 88 1 89 1 213 1 187 1 47 1 216 3 293 1 50 2 116 1 371 1 93 1 97 1 135 2 56 2 
18 1 107 1 216 1 50 1 2 1 42 1 232 1 173 1 135 1 123 1 
301 1 18 1 253 1 28 1 285 1 210 1 313 1 42 1 111 1 131 1 232 1 216 1 248 1 361 1 
301 1 18 1 28 2 285 1 210 1 2 1 313 1 42 1 111 2 131 1 232 1 216 1 50 1 135 1 361 1 
28 1 40 1 219 1 163 1 111 1 
301 1 254 1 28 2 202 1 40 1 219 1 111 2 361 1 
28 1 219 1 111 1 
18 1 28 1 40 1 2 1 42 1 111 1 175 1 232 1 123 1 107 1 216 1 50 1 173 1 135 1 
361 1 
301 1 274 1 28 2 202 1 40 1 219 1 111 2 361 1 
301 1 223 1 28 5 86 2 311 1 40 2 31 1 111 5 366 1 230 1 176 1 272 1 202 1 51 2 219 2 266 1 317 2 154 1 361 1 
18 1 99 1 365 1 213 1 271 1 232 2 305 1 47 1 370 1 108 1 216 2 50 1 238 1 353 1 371 1 116 1 12 1 35 1 135 1 56 1 
372 1 
18 2 2 1 229 1 302 2 232 2 216 2 50 1 172 1 135 1 
129 1 55 1 305 1 
365 1 302 1 213 1 232 1 271 1 47 1 216 1 108 1 238 1 353 1 116 1 371 1 12 1 280 1 35 1 56 1 
18 3 99 1 216 3 50 3 2 1 302 1 232 3 135 3 
18 1 216 1 50 1 42 1 232 1 135 1 123 1 
18 1 216 1 50 1 2 1 42 1 229 1 172 1 232 1 135 1 
197 1 99 1 28 1 2 2 3 2 229 1 302 1 271 1 232 4 106 1 107 1 108 1 238 1 353 1 355 1 12 1 61 1 35 1 64 1 180 1 18 3 283 1 241 1 365 1 285 1 210 1 88 1 313 1 42 1 111 1 89 1 213 1 131 1 187 1 47 1 370 1 216 4 50 3 371 1 116 1 93 1 97 1 135 3 56 1 
190 1 18 2 253 1 216 2 99 1 50 1 302 1 232 2 135 1 
18 3 28 1 99 2 87 1 285 1 210 1 2 1 42 1 313 1 229 1 111 1 131 1 232 3 370 1 216 3 50 3 135 3 361 1 64 1 
18 2 99 1 2 1 229 1 232 2 305 1 216 2 50 2 55 1 135 2 
365 1 302 1 213 1 232 1 271 1 47 1 216 1 108 1 238 1 353 1 116 1 371 1 12 1 35 1 56 1 
365 1 302 1 231 1 213 1 232 1 271 1 237 1 216 1 108 1 238 1 353 1 371 1 12 1 35 1 56 1 
197 1 3 2 305 2 6 1 126 2 61 4 279 1 358 1 180 1 129 2 283 1 39 1 241 1 89 1 243 1 187 2 244 1 114 1 26 1 94 1 95 1 55 2 318 1 97 1 
8 1 18 1 216 1 50 1 210 1 42 1 232 1 135 1 
18 5 253 1 99 2 2 1 139 1 229 1 302 1 232 5 190 1 370 1 216 5 50 4 374 1 135 4 
8 1 18 2 216 2 50 2 42 1 232 2 135 2 123 1 
178 1 314 1 
178 1 314 1 
336 1 151 1 
336 1 151 1 
336 1 151 1 
80 1 178 1 314 1 
178 1 162 1 314 1 
336 1 178 1 314 1 151 1 
80 1 178 1 314 1 
80 1 178 1 314 1 
178 1 314 1 63 1 
178 1 314 1 63 1 
178 1 314 1 63 1 
150 3 362 1 310 2 28 2 158 1 119 2 111 2 269 1 314 2 258 1 337 1 91 1 92 1 178 2 164 2 221 2 36 1 299 2 361 1 
75 1 18 2 150 1 225 1 28 1 310 1 169 1 111 1 302 1 304 1 314 1 232 2 91 1 78 1 216 2 50 2 178 1 162 1 164 1 297 1 16 1 221 1 135 2 299 1 
199 1 136 1 273 1 
199 1 128 1 136 1 
354 1 11 1 128 1 288 1 273 2 136 3 
354 1 11 1 128 1 85 1 273 1 136 2 
11 1 354 2 128 1 273 1 136 2 
98 1 223 2 226 1 2 1 175 1 232 1 272 1 107 1 13 1 334 1 18 1 111 5 184 2 244 1 340 3 342 2 301 1 28 5 123 1 78 1 202 1 361 2 206 2 86 1 39 1 311 3 40 4 260 1 42 1 214 1 216 1 50 1 51 1 133 1 219 1 317 1 95 1 173 1 135 1 318 1 
301 1 28 2 2 1 175 1 232 1 123 1 107 1 163 1 81 1 361 1 18 1 40 2 42 1 111 2 189 1 216 1 50 1 219 1 152 1 173 1 135 1 
301 1 98 1 223 2 28 3 226 1 2 1 175 1 232 1 176 1 123 1 107 1 78 1 13 1 334 1 361 2 206 2 18 1 86 1 39 1 311 3 40 2 260 1 42 1 111 3 184 1 214 1 244 1 216 1 50 1 51 1 340 3 342 2 317 1 173 1 95 1 135 1 318 1 
301 1 98 1 223 4 28 4 226 3 176 1 142 1 78 2 13 1 334 1 361 4 206 4 181 1 109 1 86 1 39 2 311 5 40 3 260 2 111 4 184 2 214 1 244 2 51 1 340 7 342 4 317 1 95 2 318 2 
372 1 
353 1 325 1 
217 1 
353 1 213 1 
201 2 108 1 137 1 353 3 138 1 213 1 
108 1 353 1 213 1 
353 1 319 1 
209 1 41 1 174 1 215 1 6 2 187 3 263 1 122 2 192 1 307 1 126 4 341 1 61 7 358 3 360 1 95 1 318 1 
209 1 41 1 174 1 215 1 6 2 187 3 263 1 122 2 192 1 307 1 126 4 341 1 61 7 358 3 360 1 95 1 318 1 
209 1 41 1 174 1 215 1 6 2 187 3 263 1 122 2 192 1 276 1 307 1 126 4 341 1 61 7 358 3 360 1 95 1 318 1 
197 1 3 2 174 1 6 5 122 3 306 1 307 1 275 4 126 16 61 31 360 2 332 3 358 10 309 1 149 1 283 1 209 2 39 3 41 1 260 3 89 1 215 2 187 15 263 5 244 3 192 2 341 1 95 4 318 4 97 1 252 1 73 1 344 1 345 1 
197 2 3 4 174 1 270 1 6 3 104 1 122 2 307 1 126 5 61 9 358 4 360 1 309 1 283 2 209 1 89 2 215 1 187 4 263 1 192 1 341 1 95 1 318 1 97 2 
1 1 198 1 227 1 76 1 199 1 160 1 327 1 233 1 273 1 177 1 308 1 12 1 359 1 35 1 333 2 128 1 37 1 17 1 365 1 284 1 186 1 369 2 288 1 245 1 247 1 371 1 194 1 249 1 56 1 136 2 
1 1 198 1 227 1 76 1 199 1 327 1 303 1 160 2 233 1 273 1 177 1 308 1 12 1 359 1 35 1 333 3 128 1 17 1 110 1 365 1 284 1 286 1 288 1 369 3 245 1 371 1 194 1 249 1 56 1 136 2 
1 1 198 1 227 1 199 1 327 1 303 1 160 2 233 1 273 1 177 1 308 1 12 1 35 1 333 2 128 1 365 1 284 1 286 1 369 2 288 1 245 1 371 1 194 1 56 1 136 2 
66 1 110 1 365 1 227 2 213 1 327 2 233 2 369 1 245 2 238 1 353 1 277 1 371 1 12 1 35 1 127 1 249 1 359 1 96 1 333 1 56 1 267 1 166 1 
284 1 365 1 76 1 227 1 199 1 303 1 327 1 233 1 288 1 369 1 273 1 245 1 371 1 308 1 247 1 12 1 194 1 35 1 249 1 359 1 128 1 333 1 56 1 136 2 17 1 37 1 
250 1 
223 2 98 1 226 2 268 1 326 1 232 1 272 1 103 4 58 2 238 2 12 2 62 1 331 2 66 1 18 1 68 2 285 1 69 1 111 5 113 2 292 2 294 1 340 2 248 1 196 2 157 1 28 5 253 1 349 1 202 3 353 1 35 1 361 1 166 1 86 1 167 1 311 2 365 2 210 1 313 1 42 1 43 1 213 1 367 1 131 1 216 1 51 1 52 1 219 6 371 1 134 1 171 2 317 1 56 2 
253 1 28 3 268 1 326 1 232 1 103 2 274 1 202 1 331 1 18 1 167 1 285 1 210 1 313 1 42 1 111 3 367 1 131 1 216 1 52 1 219 2 248 1 
301 1 253 1 28 3 268 1 326 1 232 1 103 3 274 1 202 1 361 1 18 1 167 1 285 1 210 1 313 1 42 1 111 3 367 1 131 1 113 1 216 1 52 1 219 1 248 1 
18 1 167 1 28 2 253 1 210 1 285 1 268 1 42 1 313 1 111 2 131 1 326 1 367 1 232 1 103 2 58 1 216 1 52 1 219 1 248 1 331 1 
223 1 226 2 268 1 2 1 175 1 326 1 232 2 272 1 103 4 107 1 58 4 274 1 331 4 15 1 18 2 68 2 285 1 69 1 111 5 113 2 292 2 248 1 298 1 196 2 301 1 28 5 253 1 257 1 123 1 79 1 202 3 361 1 167 1 86 1 311 1 210 1 42 2 313 1 43 1 131 1 367 1 368 1 216 2 50 1 51 1 52 1 219 7 171 2 317 1 173 1 135 1 
223 1 226 2 268 1 2 1 175 1 326 1 232 2 272 1 103 3 107 1 58 1 331 1 18 2 68 1 285 1 69 1 111 3 113 1 292 2 340 2 248 1 196 2 301 1 253 1 28 3 349 1 123 1 202 1 361 3 167 1 86 1 311 1 210 1 42 2 313 1 43 1 131 1 367 1 216 2 50 1 51 1 52 1 219 2 171 2 317 1 173 1 135 1 
223 1 226 2 268 1 2 1 175 1 326 1 232 2 272 1 103 4 107 1 58 2 331 2 15 1 18 2 68 2 285 1 69 1 111 4 113 2 292 2 248 1 196 2 301 1 28 4 253 1 257 1 123 1 79 1 202 2 361 1 167 1 86 1 311 1 210 1 42 2 313 1 43 1 131 1 367 1 216 2 50 1 51 1 52 1 219 4 171 2 317 1 173 1 135 1 
223 1 226 2 268 1 2 1 175 1 326 1 232 2 272 1 103 4 107 1 58 2 331 2 15 1 18 2 68 2 285 1 69 1 111 4 113 2 292 2 248 1 196 2 301 1 28 4 253 1 257 1 123 1 79 1 202 2 361 1 167 1 86 1 311 1 210 1 42 2 313 1 43 1 131 1 367 1 216 2 50 1 51 1 52 1 219 4 171 2 317 1 173 1 135 1 
223 1 268 1 2 1 175 1 326 1 232 2 272 1 103 4 107 1 58 2 331 2 179 2 18 2 285 1 69 1 111 4 113 2 292 2 340 2 248 1 196 2 301 1 28 4 253 1 257 1 123 1 161 1 202 2 361 1 208 1 167 1 86 1 130 1 311 1 210 1 42 2 313 1 131 1 367 1 216 2 50 1 51 1 52 1 219 4 220 2 317 1 173 1 135 1 
223 1 226 2 268 1 2 1 175 1 326 1 232 2 272 1 103 4 107 1 58 3 331 3 15 1 18 2 68 2 285 1 69 1 111 4 113 2 292 2 248 1 196 2 301 1 28 4 253 1 257 1 123 1 79 1 202 2 361 1 167 1 86 1 311 1 210 1 42 2 313 1 43 1 131 1 367 1 368 1 216 2 50 1 51 1 52 1 219 5 171 2 317 1 173 1 135 1 
223 1 226 2 268 1 2 1 175 1 326 1 232 2 272 1 103 4 107 1 58 3 331 3 15 1 18 2 68 2 285 1 69 1 111 4 113 2 292 2 248 1 196 2 301 1 28 4 253 1 257 1 123 1 79 1 202 2 361 1 167 1 86 1 311 1 210 1 42 2 313 1 43 1 131 1 367 1 368 1 216 2 50 1 51 1 52 1 219 5 171 2 317 1 173 1 135 1 
223 1 268 1 2 1 175 1 326 1 232 2 272 1 103 3 107 1 58 2 331 2 179 2 18 2 285 1 69 1 111 4 113 1 292 2 340 2 248 1 196 2 301 1 253 1 28 4 349 1 123 1 202 2 361 1 167 1 86 1 130 1 311 1 210 1 42 2 313 1 131 1 367 1 216 2 50 1 51 1 52 1 219 4 220 2 317 1 173 1 135 1 
197 1 180 1 283 1 241 1 372 1 3 2 89 1 279 1 97 1 
197 2 255 1 3 4 302 1 32 1 305 11 6 1 275 3 355 1 126 8 61 14 358 2 332 3 149 1 180 2 129 11 283 2 39 2 241 1 170 1 260 2 89 2 263 1 187 6 244 1 295 1 153 1 343 1 55 4 95 1 97 2 318 2 252 1 
197 1 0 1 99 1 255 1 3 2 302 1 140 1 271 1 232 2 329 1 108 1 238 1 353 1 355 1 126 1 12 1 61 2 280 1 35 1 180 1 18 1 283 1 241 1 365 1 170 1 213 1 89 1 47 1 187 1 370 1 216 2 50 1 371 1 116 1 55 1 56 1 97 1 135 1 
99 1 3 6 174 1 232 3 271 2 6 4 236 2 108 2 238 1 12 3 61 20 180 3 18 1 283 3 241 3 19 1 187 10 244 2 192 1 72 2 116 2 341 1 155 1 197 3 255 1 302 2 303 1 305 7 122 1 307 1 353 2 355 1 126 10 165 2 360 1 35 2 358 8 129 7 39 2 365 3 170 1 260 2 211 1 89 3 213 2 47 2 263 4 370 1 216 3 50 1 371 2 265 2 93 2 95 3 55 7 56 3 135 1 97 3 318 3 
197 2 99 1 255 1 3 4 303 1 232 1 121 1 124 1 238 2 353 3 126 1 355 1 12 7 61 2 330 1 279 1 35 2 166 1 180 2 18 1 66 1 283 2 241 2 182 1 365 8 89 2 213 2 186 1 316 1 187 1 216 1 50 1 293 2 371 2 135 1 56 8 97 2 74 1 300 1 
197 1 2 1 3 2 229 1 232 1 305 1 6 1 126 1 61 3 358 1 129 1 180 1 18 1 283 1 39 1 241 1 170 1 242 1 260 1 89 1 187 2 244 1 216 1 50 1 55 1 95 1 97 1 135 1 318 1 
129 1 180 1 197 1 283 1 39 1 241 1 3 2 89 1 305 1 263 1 126 2 61 2 26 1 279 1 358 1 55 1 97 1 318 1 
129 1 180 1 197 1 283 1 241 1 3 2 89 1 305 1 6 1 187 2 114 1 244 1 61 2 279 1 358 1 55 1 95 1 97 1 
197 1 3 2 305 2 6 1 126 2 61 4 279 1 358 2 180 1 129 2 39 1 283 1 241 1 260 1 89 1 263 1 187 2 244 1 55 2 95 1 318 1 97 1 
129 1 180 1 197 1 283 1 39 1 241 1 3 2 89 1 305 1 263 1 124 1 126 2 61 2 26 1 358 1 55 1 97 1 318 1 
129 1 180 1 197 1 283 1 241 1 3 2 89 1 305 1 6 1 187 2 114 1 244 1 124 1 61 2 358 1 55 1 95 1 97 1 
197 1 3 2 305 2 6 1 124 1 126 2 61 4 358 2 180 1 129 2 39 1 283 1 241 1 260 1 89 1 263 1 187 2 244 1 55 2 95 1 318 1 97 1 
197 1 3 2 305 2 6 1 126 2 61 4 358 2 180 1 129 2 39 1 283 1 241 1 260 1 89 1 263 1 187 2 244 1 55 2 95 1 318 1 97 1 
197 1 255 1 3 2 302 1 271 1 232 1 108 1 238 1 353 1 126 1 355 1 12 1 61 2 35 1 180 1 283 1 241 1 365 1 213 1 89 1 47 1 187 1 216 1 371 1 116 1 93 1 56 1 97 1 
197 1 255 1 3 2 302 1 231 1 271 1 232 1 237 1 108 1 238 1 353 1 126 1 355 1 12 1 61 2 35 1 180 1 283 1 241 1 365 1 213 1 89 1 187 1 191 1 216 1 371 1 56 1 97 1 
197 1 3 2 305 2 6 1 126 2 61 4 358 2 180 1 129 2 39 1 283 1 241 1 170 1 260 1 89 1 263 1 187 2 244 1 55 2 95 1 318 1 97 1 
197 1 3 2 271 1 232 1 305 2 6 1 108 1 353 1 126 2 12 1 61 4 358 2 35 1 129 2 180 1 39 1 283 1 241 1 365 1 260 1 213 1 89 1 186 1 187 2 263 1 47 1 244 1 216 1 72 1 371 1 116 1 93 1 95 1 55 2 318 1 56 1 97 1 
197 1 2 1 3 2 229 1 232 1 305 1 126 2 61 3 358 1 282 1 180 1 129 1 18 1 283 1 39 1 241 1 170 1 260 1 89 1 187 1 263 1 244 1 216 1 50 1 95 1 55 1 97 1 135 1 318 1 
197 2 3 4 270 1 6 3 235 1 275 2 60 1 126 9 61 19 205 1 332 1 358 6 149 1 283 2 39 3 260 3 89 2 112 2 187 10 263 3 244 3 23 1 25 1 53 1 95 3 97 2 318 3 27 2 252 1 156 1 
197 2 348 1 3 4 270 1 6 1 275 2 126 9 61 17 358 1 205 2 332 2 309 1 149 2 207 1 283 2 39 2 260 2 212 1 90 1 89 2 187 8 112 2 244 1 22 1 23 2 53 1 95 1 97 2 318 2 156 1 
197 3 348 1 3 6 270 1 6 2 235 1 275 4 60 1 126 15 61 30 205 2 332 3 358 4 309 1 149 3 207 1 283 3 39 4 260 4 212 1 90 1 89 3 112 3 187 15 263 2 244 3 22 1 49 1 23 1 53 1 95 3 97 3 318 4 27 1 252 1 156 1 
197 3 348 1 3 6 270 1 6 3 235 1 275 4 60 1 126 15 61 30 205 2 332 3 358 5 309 1 149 3 207 1 283 3 39 4 260 4 212 1 90 1 89 3 112 3 187 15 263 2 244 3 22 1 49 1 23 1 53 1 95 3 97 3 318 4 27 1 252 1 156 1 
197 1 348 1 3 2 174 1 270 1 6 6 122 1 307 1 275 4 126 22 61 41 360 1 205 1 332 4 358 10 149 2 207 1 283 1 39 6 260 6 212 1 90 1 89 1 112 2 187 19 263 4 244 5 22 1 192 1 23 1 341 1 53 1 343 2 95 6 97 1 318 7 252 2 156 1 
310 1 158 1 92 1 57 1 178 1 164 1 269 1 314 1 221 1 299 1 
162 1 304 1 
310 1 168 1 29 1 178 1 24 1 164 1 314 1 221 1 299 1 
150 2 28 1 310 1 158 1 119 1 111 1 269 1 314 1 258 1 337 1 91 1 92 1 178 1 164 1 221 1 36 1 299 1 361 1 
150 2 28 1 310 1 158 1 119 1 111 1 269 1 314 1 258 1 337 1 91 1 92 1 178 1 164 1 221 1 36 1 299 1 361 1 
150 2 28 1 310 1 158 1 119 1 111 1 269 1 314 1 258 1 337 1 91 1 92 1 178 1 164 1 221 1 36 1 299 1 361 1 
80 1 100 1 335 1 
80 1 100 1 335 1 
347 1 63 1 
347 1 100 1 63 1 
225 1 16 1 
75 1 28 1 225 1 119 1 302 1 304 1 232 2 258 1 78 1 178 1 162 1 164 1 33 1 16 1 150 1 18 2 310 1 169 1 40 1 111 1 314 1 216 2 50 2 297 1 221 1 135 2 299 1 
80 1 335 1 
347 1 100 1 63 1 
197 1 255 1 324 1 3 2 232 2 143 1 9 1 353 1 126 1 355 1 12 2 61 2 330 1 35 1 148 1 180 1 18 2 283 1 241 1 365 2 170 1 213 1 89 1 315 1 316 1 187 1 216 2 293 2 371 1 56 2 97 1 
365 2 284 1 76 1 199 1 303 1 186 1 288 1 273 1 245 1 70 1 59 1 371 1 308 1 12 2 35 1 128 1 56 2 136 2 240 1 
365 1 284 1 76 1 199 1 303 1 288 1 273 1 245 1 70 1 308 1 371 1 12 1 35 1 128 1 251 1 56 1 136 2 
66 1 365 1 213 1 245 1 59 1 238 1 353 1 371 1 12 1 35 1 96 1 56 1 281 1 166 1 
365 1 284 1 76 1 199 1 303 1 288 1 273 1 245 1 70 1 59 1 371 1 308 1 12 1 35 1 128 1 56 1 136 2 240 1 
7 1 
372 1 
223 1 301 1 28 1 226 1 272 1 202 1 361 2 86 1 311 1 68 1 43 1 111 1 51 1 219 1 340 1 171 1 317 1 
223 3 98 1 28 1 226 3 138 1 325 2 101 1 272 2 145 1 108 1 259 1 202 1 238 1 203 1 353 3 12 1 165 1 35 1 361 3 206 3 39 1 86 2 311 4 365 1 260 1 111 1 44 1 213 1 20 1 46 1 244 1 21 1 51 2 219 1 371 2 340 6 342 3 317 2 95 1 318 1 56 1 
223 3 301 1 28 1 226 3 348 1 272 2 202 1 275 1 357 1 332 1 149 1 206 4 361 4 207 1 86 2 39 1 311 5 260 1 212 1 111 1 90 1 244 1 21 1 22 1 51 2 219 1 340 6 342 4 317 2 95 1 318 1 
223 2 28 1 2 1 175 1 232 1 234 1 272 1 123 1 107 1 360 1 15 1 18 1 86 1 311 2 42 1 261 1 111 1 21 2 216 1 192 1 50 1 51 1 341 1 317 1 95 1 173 1 318 2 135 1 
223 1 301 1 86 1 311 1 31 1 272 1 51 1 266 1 317 1 361 1 
223 5 39 2 226 5 311 5 260 2 261 1 244 2 21 2 340 10 165 1 342 5 95 2 318 2 206 5 361 5 
301 1 28 1 202 1 219 1 111 1 361 1 
157 1 98 2 223 2 28 3 176 1 272 1 238 2 202 2 353 1 12 4 62 2 35 1 166 1 65 1 66 1 86 2 311 2 365 4 111 3 213 1 246 1 132 2 48 1 51 2 294 1 371 1 219 4 317 2 56 4 
197 1 2 2 3 2 302 1 232 3 271 1 107 1 108 1 238 1 353 1 355 1 12 1 61 1 35 1 180 1 18 2 283 1 241 1 365 1 88 1 89 1 213 1 187 1 47 1 216 3 50 2 116 1 371 1 93 1 56 1 135 2 97 1 
223 2 98 1 301 2 86 1 226 2 311 1 272 1 122 1 51 1 340 4 342 2 62 1 317 1 206 2 361 4 
310 1 339 1 164 1 
338 1 310 1 158 1 164 1 16 1 
310 1 339 1 164 1 
310 1 339 1 164 1 
310 1 164 1 34 1 
310 1 164 1 34 1 
310 1 164 1 34 1 
310 1 164 1 
178 1 314 1 
197 2 283 2 3 4 89 2 174 1 6 2 122 1 187 4 263 1 192 1 307 1 126 4 341 1 61 8 358 3 360 1 95 1 318 1 97 2 309 1 
372 1 
197 1 346 1 283 1 39 1 260 1 3 2 89 1 6 1 187 2 263 1 244 1 126 2 61 4 358 2 95 1 97 1 318 1 
39 1 260 1 6 1 187 4 263 1 244 1 275 2 126 3 61 7 332 1 358 2 95 1 318 1 149 1 252 1 
197 2 3 4 228 1 174 1 32 1 6 5 122 1 307 1 275 2 126 11 61 23 360 2 358 9 332 2 309 2 39 2 283 2 260 2 89 2 263 4 187 12 244 2 192 2 341 1 343 1 95 3 318 3 97 2 252 1 
275 1 61 1 187 1 
126 1 61 1 332 1 
197 1 283 1 346 1 39 1 260 1 3 2 89 1 6 2 187 3 263 1 244 1 126 3 61 6 165 1 358 3 95 1 97 1 318 1 
207 1 197 1 39 2 283 1 260 2 348 1 3 2 212 1 90 1 89 1 270 1 6 1 187 4 244 1 22 1 275 1 126 6 61 10 358 1 332 1 95 1 318 2 97 1 149 1 
6 1 187 3 263 1 192 1 126 3 341 1 61 6 360 1 358 2 95 1 318 1 
197 1 283 1 228 1 3 2 174 1 89 1 6 1 263 1 187 2 192 1 307 1 126 1 61 3 358 2 360 1 309 1 97 1 
197 1 283 1 3 2 89 1 270 1 234 1 6 3 263 2 187 5 192 2 126 5 61 10 341 1 360 2 358 5 95 2 97 1 318 2 
197 1 283 1 39 1 3 2 89 1 270 1 263 1 126 2 61 2 358 1 97 1 318 1 
197 1 283 1 39 1 260 1 3 2 89 1 270 1 6 1 187 2 263 1 244 1 126 2 61 4 358 2 95 1 97 1 318 1 
197 3 283 3 228 1 3 6 89 3 270 1 6 1 187 2 263 1 192 1 60 1 126 1 61 3 360 1 358 2 309 1 97 3 
197 5 346 1 228 1 3 10 174 1 270 1 6 7 122 1 306 1 307 1 275 4 60 1 126 16 61 34 360 3 332 3 358 12 309 2 149 1 283 5 39 3 260 3 89 5 187 18 263 5 244 3 192 3 341 2 95 5 97 5 318 5 345 1 73 1 252 1 
197 1 3 2 174 1 270 1 6 2 122 1 275 1 307 1 126 4 61 8 332 1 360 1 358 2 149 1 283 1 89 1 187 4 22 1 192 1 341 1 95 1 318 1 97 1 
197 2 346 1 3 4 174 1 270 1 6 2 122 1 307 1 275 2 126 6 61 11 360 1 332 1 358 3 149 1 283 2 39 1 260 1 89 2 187 5 263 1 22 1 192 1 341 1 95 1 97 2 318 2 252 1 
197 2 348 1 3 4 270 1 6 1 275 1 126 6 61 11 332 1 358 1 309 1 149 1 207 1 283 2 39 2 260 2 212 1 90 1 89 2 187 5 244 1 22 1 95 1 97 2 318 2 
207 1 197 1 39 2 283 1 260 2 348 1 3 2 212 1 90 1 89 1 270 1 6 1 187 4 244 1 22 1 275 1 126 6 61 10 358 1 332 1 95 1 318 2 97 1 149 1 
197 1 3 2 174 1 270 1 6 2 122 1 275 1 307 1 126 4 61 8 332 1 360 1 358 2 149 1 283 1 89 1 187 4 22 1 192 1 341 1 95 1 318 1 97 1 
207 1 197 1 39 2 283 1 260 2 348 1 3 2 212 1 90 1 89 1 270 1 6 1 187 4 244 1 22 1 275 1 126 6 61 10 358 1 332 1 95 1 318 2 97 1 149 1 
197 3 346 1 348 1 3 6 270 1 6 1 275 1 126 6 61 11 332 1 358 1 309 1 149 1 207 1 283 3 39 2 260 2 212 1 90 1 89 3 187 5 244 1 22 1 95 1 97 3 318 2 
197 3 348 1 3 6 270 1 6 2 275 1 60 1 126 6 61 11 332 1 358 2 309 1 149 1 207 1 283 3 39 2 260 2 212 1 90 1 89 3 187 5 244 1 22 1 95 1 97 3 318 2 
174 2 6 3 187 4 263 3 192 3 307 1 126 3 61 7 341 1 360 3 358 6 95 1 318 1 
197 3 348 1 3 6 270 1 6 1 275 1 60 1 126 6 61 11 332 1 358 1 309 1 149 1 207 1 283 3 39 2 260 2 212 1 90 1 89 3 187 5 244 1 22 1 95 1 97 3 318 2 
18 1 190 1 216 1 253 1 302 1 232 1 350 1 
18 1 253 1 323 1 312 1 302 1 141 1 232 1 102 1 350 1 77 1 190 1 216 1 
365 1 238 1 372 1 12 1 56 1 
18 1 99 1 365 1 302 1 213 1 271 1 232 2 108 1 216 2 50 1 238 1 353 1 371 1 116 1 12 1 35 1 135 1 56 1 
99 1 302 1 232 2 271 1 108 2 353 3 12 1 35 1 147 1 18 2 365 1 285 1 210 1 42 1 213 2 132 1 216 2 50 1 116 1 371 1 56 1 135 2 319 1 
99 1 302 1 231 1 232 2 271 1 108 2 353 3 12 2 35 1 147 1 14 1 18 2 365 2 285 1 210 1 42 1 213 2 132 1 216 2 50 1 371 1 56 2 135 2 319 1 
301 1 224 1 28 1 2 1 325 1 175 1 232 1 123 1 107 1 353 1 12 1 361 1 18 1 365 1 42 1 111 1 132 1 216 1 50 1 173 1 56 1 135 1 
301 1 28 1 2 1 325 1 175 1 232 1 123 1 145 1 107 1 353 1 12 1 361 1 18 1 365 1 42 1 111 1 132 1 216 1 50 1 173 1 56 1 135 1 
365 1 371 1 12 1 35 1 56 1 74 1 
67 1 182 1 365 7 138 1 213 2 303 1 186 1 316 1 121 1 188 1 108 1 293 1 238 2 353 3 264 1 371 3 12 6 35 2 56 7 74 1 300 1 
99 1 3 4 174 1 232 2 271 1 6 2 236 1 108 1 12 1 61 6 180 2 18 1 283 2 241 2 186 1 187 3 72 1 192 1 116 1 341 1 197 2 302 2 305 1 122 1 353 1 307 1 126 3 35 1 360 1 358 2 129 1 365 1 170 1 89 2 213 1 315 1 47 1 216 2 50 1 371 1 93 1 55 1 95 1 56 1 135 1 97 2 318 1 
223 5 2 1 325 1 175 1 232 1 272 2 234 1 145 1 107 1 238 1 12 1 65 1 18 1 111 2 20 1 21 2 192 1 341 1 301 2 28 2 31 1 123 1 259 1 202 1 353 1 360 1 361 2 86 2 311 4 40 1 365 1 42 1 261 1 46 1 216 1 50 1 51 2 219 1 266 1 317 2 95 2 173 1 56 1 318 2 135 1 
365 2 138 1 44 1 213 1 186 1 201 1 108 1 353 2 371 2 12 2 35 1 56 2 74 1 
66 1 365 4 213 1 186 1 238 1 353 1 371 1 12 4 146 1 35 1 14 1 56 4 166 1 
365 2 213 1 188 1 132 1 108 1 353 1 264 1 371 2 12 2 193 1 373 1 35 1 155 1 56 2 
284 1 365 1 238 1 371 1 12 1 199 1 35 1 128 1 56 1 136 1 
365 2 353 1 371 1 12 2 213 1 303 1 35 1 186 1 56 2 316 1 143 1 
66 1 365 5 182 1 213 2 186 1 316 1 132 1 238 1 353 3 371 2 12 4 146 1 35 2 56 5 166 1 300 1 
66 1 365 5 213 2 186 1 316 1 132 1 238 1 353 3 371 2 12 4 146 1 35 2 83 1 56 5 166 1 300 1 
18 1 99 1 365 1 302 1 213 1 231 1 271 1 232 2 108 1 216 2 50 1 238 1 353 1 371 1 12 1 35 1 135 1 56 1 
67 1 365 1 138 1 213 1 188 1 132 1 108 1 353 1 264 1 371 2 12 1 35 1 56 1 
18 1 4 1 324 1 232 1 291 1 9 1 216 1 115 1 148 1 
322 1 291 1 117 1 
291 1 115 1 239 1 4 1 302 1 
301 1 28 2 322 1 40 1 210 1 285 1 42 1 4 2 313 1 111 2 302 1 131 1 351 1 291 1 115 2 239 2 117 1 361 1 64 1 
372 1 
177 1 1 1 198 1 359 1 249 1 333 1 369 1 
327 1 233 1 333 1 
1 1 183 1 198 1 287 1 328 1 369 3 177 1 249 1 359 1 333 3 37 1 375 2 
177 1 1 1 30 1 198 1 160 1 359 1 249 1 333 2 369 2 
38 1 1 1 199 1 45 1 359 1 249 1 333 1 369 1 136 1 273 1 37 1 
1 1 198 1 359 1 249 1 333 1 369 1 37 1 
177 1 198 2 359 1 249 1 333 1 369 1 37 1 
10 1 1 1 352 1 198 1 54 1 359 2 249 2 333 2 369 2 37 1 
38 1 1 2 198 1 185 1 160 2 369 3 290 1 177 1 249 1 359 1 333 3 37 1 320 1 
177 1 1 1 198 1 199 1 160 1 359 1 249 1 333 2 128 1 288 1 369 2 273 1 200 1 136 2 37 1 
290 1 38 1 177 1 1 2 125 1 30 1 198 1 160 2 359 2 249 2 333 4 369 4 37 1 
177 1 1 1 198 1 359 1 249 1 333 1 369 1 37 1 
38 1 1 3 183 1 198 2 328 1 160 2 5 1 369 4 290 1 177 2 249 1 359 1 333 4 375 1 
177 1 364 1 1 1 159 1 198 1 278 1 160 1 359 1 249 1 333 2 369 2 37 1 
177 1 1 1 183 1 198 1 328 2 256 1 359 1 249 1 333 3 369 3 375 2 37 1 
289 1 1 2 218 2 82 1 
144 1 359 1 249 1 333 1 369 1 37 1 
177 1 1 1 198 1 185 1 160 1 359 1 249 1 333 2 369 2 37 1 
363 1 
177 1 1 1 198 1 359 1 249 1 333 1 369 1 37 1 
177 1 1 1 198 1 185 1 160 1 359 1 249 1 333 3 369 3 375 1 37 1 
290 1 38 1 1 1 5 1 
1 1 198 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 228 (75,275) (75,275) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 228 (75,275) (75,275) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 228 (75,275) (75,275) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 228 (75,275) (75,275) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 228 (81,162) (81,162) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 145 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 57 62 239 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 57 62 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 247 207 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 247 197 211 196 24 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 247 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 247 197 211 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 247 197 211 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 247 197 211 196 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 247 197 211 196 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 57 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 57 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 57 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 57 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 57 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 57 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 57 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
301 1 275 1 75 1 228 1 
301 1 275 1 75 1 228 1 
301 1 275 1 75 1 228 1 
301 1 275 1 75 1 228 1 
301 1 34 1 
81 1 301 1 162 1 128 1 228 1 314 1 
301 1 145 1 
301 1 135 1 
301 1 135 1 
237 1 67 1 306 1 
172 2 306 1 264 1 
23 1 18 2 290 2 131 2 93 2 175 2 282 2 283 1 
23 1 164 1 290 2 73 1 303 1 93 2 129 1 274 1 169 2 80 1 236 1 294 1 131 3 295 1 104 1 105 1 199 2 170 2 61 1 202 1 339 1 341 1 205 1 175 3 224 1 282 2 283 1 18 2 141 1 346 1 39 1 266 1 42 1 158 2 226 1 267 1 120 1 48 1 215 2 
18 1 99 1 290 1 131 1 296 1 303 1 93 1 175 1 282 1 283 1 
290 1 260 1 303 1 175 1 113 1 218 1 306 1 237 1 243 1 131 1 44 1 11 1 248 1 201 1 
290 1 260 2 93 1 303 1 175 1 113 1 218 1 306 1 282 1 18 1 237 1 131 1 44 2 248 1 201 1 
114 1 260 1 89 1 44 1 254 1 
114 1 237 1 255 1 260 2 89 1 251 1 44 2 306 1 
260 1 89 1 44 1 
288 1 290 1 260 1 303 1 93 1 175 1 282 1 283 1 114 1 18 1 99 1 131 1 296 1 44 1 
306 1 
114 1 237 1 255 1 260 2 89 1 44 2 177 1 306 1 
184 1 316 2 259 1 14 1 260 5 176 1 305 2 306 1 64 1 126 1 28 1 114 2 237 1 255 1 89 2 44 5 278 2 324 1 246 1 
23 1 67 1 
23 2 110 1 290 2 93 1 175 2 282 1 18 1 131 2 323 1 
328 1 54 1 250 1 
23 1 240 1 164 1 73 1 205 1 175 1 129 1 80 1 236 1 131 1 266 1 158 1 105 1 226 1 199 1 215 1 
342 1 164 1 290 1 73 1 205 1 93 1 175 2 129 1 80 1 236 1 18 1 54 1 192 1 131 2 266 1 158 1 105 1 226 1 199 1 215 1 
23 1 342 1 290 5 93 4 175 5 124 1 282 1 18 4 140 1 192 2 131 5 323 1 334 1 11 1 
18 2 290 2 131 2 296 1 86 1 303 1 93 2 175 2 
23 1 18 3 192 1 290 3 131 3 93 3 175 3 282 1 
18 1 290 1 131 1 296 1 303 1 93 1 175 1 
110 1 18 1 290 1 131 1 323 1 303 1 93 1 175 1 282 1 
23 1 164 1 290 3 73 1 93 3 303 1 218 1 129 1 29 1 4 1 169 2 80 1 236 1 294 1 192 1 131 4 104 1 105 1 199 1 170 1 61 1 201 1 339 1 341 1 342 1 260 1 205 1 175 4 113 1 224 1 282 2 283 1 18 3 141 1 346 1 323 1 266 1 42 1 158 1 226 1 44 1 48 1 248 1 215 1 
23 1 18 1 290 2 192 1 131 2 334 1 93 1 175 2 11 1 
342 1 290 3 291 1 260 1 303 1 93 3 175 3 113 1 218 1 282 1 306 1 29 1 18 3 192 2 323 1 131 3 44 1 248 1 201 1 
328 1 290 2 93 2 175 2 282 1 18 2 54 1 192 1 323 1 131 2 
23 1 164 1 73 1 205 1 175 1 129 1 80 1 236 1 131 1 266 1 158 1 226 1 105 1 199 1 215 1 
23 1 164 1 205 1 175 1 129 1 80 1 236 1 131 1 266 1 158 1 41 1 105 1 199 1 215 1 144 1 
328 2 122 1 185 1 250 2 169 2 54 2 294 1 130 1 104 1 276 1 170 4 337 1 341 1 241 1 224 1 321 1 209 1 265 1 346 1 68 1 42 1 118 1 120 2 48 2 
18 1 290 1 131 1 303 1 93 1 86 1 175 1 201 1 
213 1 187 1 
213 1 187 1 
152 1 286 1 
152 1 286 1 
152 1 286 1 
213 1 132 1 187 1 
213 1 31 1 187 1 
152 1 213 2 36 1 336 1 286 1 187 2 
213 1 132 1 187 1 
213 1 132 1 187 1 
213 1 187 1 91 1 
213 1 187 1 91 1 
213 1 187 1 91 1 
239 1 62 1 92 1 260 1 57 1 213 1 238 1 44 1 187 1 
62 1 92 1 57 1 213 1 238 1 187 1 
112 1 128 1 273 1 
112 1 128 1 314 1 
55 1 331 1 46 1 128 3 273 2 314 1 
55 1 262 1 331 1 128 2 273 1 314 1 
55 2 331 1 128 2 273 1 314 1 
185 1 305 1 78 1 293 2 306 2 235 1 53 1 255 1 237 1 194 1 278 1 107 1 172 3 12 1 316 1 259 1 14 3 260 5 203 1 241 1 17 1 318 1 264 1 64 2 319 2 321 1 114 4 89 1 68 1 347 1 285 2 44 5 
184 1 185 3 305 2 96 1 254 5 306 5 235 2 189 1 188 1 53 2 147 1 237 1 255 1 278 2 198 1 107 1 172 9 12 3 316 2 259 1 14 8 260 9 241 3 17 4 281 1 264 3 64 6 319 6 321 3 37 5 114 7 89 6 68 3 285 6 44 9 
184 1 185 1 305 1 293 1 306 3 235 1 53 1 237 1 194 1 278 1 172 4 12 1 316 1 14 3 203 1 260 3 241 1 17 1 264 2 64 2 319 2 321 1 114 2 68 1 44 3 285 2 
184 1 185 2 305 1 293 2 306 4 235 1 189 1 53 1 237 1 194 1 278 1 198 1 172 7 12 2 316 1 14 5 260 4 203 1 241 2 17 2 281 1 264 3 64 4 319 4 321 2 114 3 68 2 285 4 44 4 
67 1 105 1 214 1 
105 1 143 1 
82 1 
236 1 164 1 105 1 
15 1 105 1 
236 1 105 1 
236 1 164 1 257 1 214 2 105 3 125 1 
340 1 85 2 241 1 330 1 123 1 307 1 284 1 206 1 115 1 191 1 265 3 21 1 68 1 120 4 170 7 48 3 337 2 
340 1 85 2 241 1 330 1 123 1 307 1 284 1 206 1 115 1 191 1 265 3 21 1 68 1 120 4 170 7 48 3 337 2 
340 1 85 2 241 1 299 1 123 1 330 1 307 1 284 1 206 1 115 1 191 1 265 3 21 1 68 1 120 4 170 7 48 3 337 2 
230 1 185 3 163 1 123 1 330 1 94 1 307 2 169 2 97 4 191 5 294 1 104 1 258 1 170 31 337 5 340 2 12 3 341 1 85 3 241 4 204 1 224 1 284 1 321 3 206 2 115 1 265 10 179 3 117 1 21 2 68 4 245 1 120 16 48 15 
340 1 341 2 163 1 85 2 241 1 123 1 26 1 224 2 307 1 284 1 206 1 169 4 115 1 208 1 191 1 265 4 294 2 21 1 68 1 104 2 120 5 170 9 48 4 337 3 
65 1 301 1 25 1 158 1 199 1 215 1 
121 1 161 1 25 1 232 1 249 1 51 3 1 2 292 1 128 2 273 1 190 1 6 3 56 1 193 1 199 1 200 1 314 1 280 1 134 1 205 1 112 1 322 1 20 1 266 1 158 1 302 1 46 1 119 1 70 1 215 1 
25 1 249 1 51 2 1 2 292 1 128 2 273 1 190 1 6 2 56 1 193 1 199 1 200 1 314 1 134 1 205 1 112 1 322 1 266 1 158 1 302 1 119 1 46 1 70 1 215 1 
121 1 161 1 232 1 25 2 51 1 205 1 300 1 63 1 190 2 6 1 80 1 236 1 88 1 56 2 266 1 212 1 158 1 105 1 302 2 199 1 47 1 171 1 215 1 
301 1 25 1 158 1 199 1 119 1 215 1 
116 1 
229 1 303 1 305 1 235 1 98 1 236 1 278 1 105 1 277 1 199 2 11 1 201 1 316 1 14 2 16 1 205 1 113 1 64 2 207 1 243 1 212 1 158 2 287 1 247 1 215 2 248 1 289 1 290 1 167 1 218 1 127 2 332 1 80 2 255 1 131 1 259 1 260 3 261 1 175 1 35 1 225 1 89 2 266 1 44 3 43 1 47 1 
290 1 260 3 242 1 261 1 303 1 175 1 113 1 177 1 167 1 218 1 127 2 98 1 255 1 243 1 131 1 89 2 43 1 44 3 277 1 11 1 201 1 248 1 
33 1 290 1 260 3 261 1 303 1 175 1 113 1 177 1 167 1 218 1 306 1 127 3 98 1 255 1 237 1 243 1 131 1 89 1 43 1 44 3 277 1 11 1 201 1 248 1 
290 1 303 1 3 1 167 1 218 1 127 3 306 1 98 1 255 1 237 1 131 1 277 1 11 1 201 1 33 1 260 3 261 1 242 1 175 1 113 1 177 1 243 1 89 2 44 3 43 1 248 1 
24 1 229 1 289 1 290 1 303 1 3 2 269 1 305 1 167 1 218 1 127 2 98 1 255 1 131 1 197 1 278 1 196 1 277 1 11 1 201 1 316 1 259 1 14 1 16 1 260 3 261 1 242 2 175 1 113 1 177 1 225 1 64 1 243 1 211 1 89 3 44 3 43 1 247 1 248 1 
229 1 289 1 290 1 303 1 167 1 305 1 218 1 127 2 98 1 131 1 277 1 278 1 11 1 201 1 316 1 259 1 14 1 16 1 260 2 261 1 175 1 113 1 225 1 64 1 243 1 44 2 43 1 247 1 248 1 
229 1 289 1 290 1 303 1 269 1 305 1 167 1 218 1 127 2 98 1 131 1 197 1 277 1 278 1 11 1 201 1 316 1 259 1 14 1 16 1 260 2 261 1 175 1 113 1 225 1 64 1 243 1 211 1 44 2 43 1 247 1 248 1 
229 1 289 1 290 1 303 1 269 1 305 1 167 1 218 1 127 2 98 1 131 1 197 1 277 1 278 1 11 1 201 1 316 1 259 1 14 1 16 1 260 2 261 1 175 1 113 1 225 1 64 1 243 1 211 1 44 2 43 1 247 1 248 1 
229 2 290 1 303 1 3 2 305 1 167 1 218 1 306 1 127 4 98 1 237 1 255 2 9 2 131 1 197 1 277 1 278 1 11 1 201 1 338 1 33 2 172 2 316 1 259 1 14 1 16 2 260 4 242 2 261 1 153 1 175 1 113 1 136 1 64 1 243 1 89 4 44 4 43 1 160 2 247 1 248 1 
229 1 289 1 290 1 303 1 3 1 269 1 305 1 167 1 218 1 127 3 98 1 131 1 197 1 278 1 277 1 196 1 11 1 201 1 33 1 316 1 259 1 14 1 16 1 260 2 261 1 242 1 175 1 113 1 225 1 64 1 243 1 211 1 89 1 44 2 43 1 247 1 248 1 
229 1 289 1 290 1 303 1 3 1 269 1 305 1 167 1 218 1 127 3 98 1 131 1 197 1 278 1 277 1 196 1 11 1 201 1 33 1 316 1 259 1 14 1 16 1 260 2 261 1 242 1 175 1 113 1 225 1 64 1 243 1 211 1 89 1 44 2 43 1 247 1 248 1 
229 2 290 1 303 1 3 2 167 1 305 1 218 1 306 1 127 4 98 1 237 1 255 2 9 2 131 1 277 1 278 1 133 1 11 1 201 1 33 2 172 2 316 1 259 1 14 1 16 2 260 4 242 2 261 1 175 1 113 1 136 1 64 1 243 1 89 4 44 4 43 1 160 2 247 1 248 1 
23 2 328 1 250 1 123 1 307 1 169 2 54 1 294 1 104 1 276 1 170 6 337 2 341 1 85 1 241 1 224 1 284 1 115 1 67 1 265 2 346 1 21 1 42 1 68 1 120 3 48 3 
23 1 328 4 0 1 185 1 250 11 94 1 5 1 97 3 169 4 54 11 191 1 333 1 294 2 295 1 258 1 104 2 170 14 150 1 337 1 12 2 341 2 241 2 345 1 224 2 321 2 141 1 265 2 346 1 179 3 42 2 68 1 120 8 48 6 
23 1 328 1 164 1 290 1 73 1 93 1 129 1 80 1 169 2 236 1 294 1 192 1 131 2 295 1 105 1 104 1 199 1 170 2 220 1 240 1 174 1 341 1 342 1 205 1 175 2 345 1 224 1 18 1 141 1 346 1 156 1 266 1 158 1 42 1 226 1 120 1 48 1 215 1 
185 2 93 1 268 2 307 1 236 2 54 7 191 4 192 1 104 3 105 2 199 3 60 1 151 2 12 2 241 3 205 2 284 1 321 2 18 1 115 1 21 1 68 3 158 3 69 1 119 1 120 10 215 3 23 2 22 2 328 7 290 1 164 2 73 2 250 7 123 1 129 2 80 1 169 6 294 3 131 3 295 1 170 20 337 6 339 2 341 3 342 1 85 1 175 3 345 1 137 2 224 3 141 1 265 10 346 3 40 1 266 2 42 3 226 2 48 10 
290 1 93 1 271 1 272 1 80 2 169 4 236 2 192 1 294 2 102 1 131 1 312 1 295 1 276 1 105 3 104 2 199 7 170 2 341 2 111 1 205 2 175 1 224 2 320 1 65 1 18 1 141 1 346 2 39 2 266 2 158 8 42 2 212 1 119 1 182 1 120 1 48 1 47 1 215 8 
328 1 290 1 185 1 250 1 329 1 93 1 169 2 54 1 294 1 131 1 104 1 170 3 337 1 12 1 341 1 241 1 175 1 345 1 282 1 224 1 321 1 18 1 265 1 346 1 323 1 42 1 68 1 120 1 48 2 
328 1 341 1 122 1 241 1 250 1 224 1 321 1 169 2 54 1 191 1 265 1 294 1 346 1 42 1 276 1 104 1 170 2 120 2 
328 1 341 1 185 1 250 1 224 1 169 2 54 1 209 1 265 1 294 1 346 1 42 1 68 1 276 1 104 1 170 2 48 2 337 1 
328 2 185 1 250 2 169 2 54 2 191 1 294 1 104 1 276 1 170 4 337 1 12 1 341 1 241 1 224 1 321 1 265 2 346 1 42 1 68 1 120 2 48 2 
328 1 341 1 122 1 241 1 250 1 224 1 321 1 169 2 54 1 191 1 265 1 294 1 346 1 42 1 104 1 170 2 182 1 120 2 
328 1 341 1 185 1 250 1 224 1 169 2 54 1 209 1 265 1 294 1 346 1 42 1 68 1 104 1 170 2 182 1 48 2 337 1 
328 2 185 1 250 2 169 2 54 2 191 1 294 1 104 1 170 4 337 1 12 1 341 1 241 1 224 1 321 1 265 2 346 1 42 1 68 1 120 2 182 1 48 2 
12 1 328 2 341 1 185 1 241 1 250 2 224 1 321 1 169 2 54 2 191 1 265 2 294 1 346 1 68 1 42 1 104 1 120 2 170 4 48 2 337 1 
23 1 164 1 73 1 129 1 80 1 169 2 236 1 294 1 131 1 295 1 105 1 104 1 199 1 170 2 339 1 341 1 205 1 175 1 224 1 141 1 346 1 266 1 158 1 42 1 226 1 120 1 48 1 215 1 
23 1 164 1 129 1 80 1 169 2 236 1 294 1 131 1 295 1 105 1 104 1 199 1 170 2 341 1 205 1 175 1 224 1 141 1 346 1 266 1 181 1 41 1 158 1 42 1 120 1 48 1 144 1 215 1 
328 2 185 1 250 2 169 2 54 2 191 1 294 1 104 1 170 4 337 1 12 1 341 1 241 1 345 1 224 1 321 1 265 2 346 1 42 1 68 1 120 2 48 2 
22 1 328 2 185 1 164 1 73 1 250 2 129 1 169 2 236 1 54 2 191 1 294 1 131 1 105 1 104 1 199 1 170 4 337 1 339 1 12 1 341 1 241 1 205 1 175 1 224 1 321 1 65 1 265 2 346 1 266 1 68 1 158 1 42 1 226 1 120 2 48 2 215 1 
328 1 185 1 290 1 250 1 93 1 169 2 54 1 191 1 294 1 131 1 104 1 170 3 12 1 341 1 241 1 175 1 345 1 282 1 224 1 321 1 18 1 265 1 346 1 323 1 68 1 42 1 120 2 48 1 216 1 
185 3 94 1 26 1 97 2 169 4 191 3 294 2 148 1 258 1 104 2 297 1 170 19 337 3 12 3 341 2 241 3 317 1 344 1 154 1 224 2 321 3 265 6 179 1 38 1 180 1 68 3 348 2 120 9 227 2 48 10 
163 1 185 2 234 1 252 1 77 1 26 1 169 4 97 2 191 1 294 2 148 1 30 1 104 2 258 2 170 23 12 3 83 1 341 2 241 3 317 2 344 2 154 1 224 2 321 3 265 1 66 1 179 2 180 1 68 2 348 3 120 13 227 1 48 10 
185 4 234 1 252 1 94 1 77 1 26 1 97 4 169 4 191 3 294 2 148 1 30 1 258 3 104 2 297 1 170 31 337 1 12 4 83 1 341 2 241 4 317 1 344 2 154 1 224 2 321 4 66 1 265 4 179 3 180 1 68 4 348 3 120 15 227 1 48 16 327 1 
163 1 185 3 234 1 252 1 94 1 77 1 26 1 97 4 169 6 191 3 294 3 148 1 30 1 258 3 104 3 297 1 170 32 337 2 12 4 83 1 341 3 241 4 317 1 344 2 154 1 224 3 321 4 66 1 265 5 179 3 180 1 68 3 348 4 120 17 227 1 48 15 327 1 
163 2 185 7 234 1 123 1 252 1 94 2 77 1 26 1 307 1 97 4 169 6 191 7 333 2 294 3 148 1 30 1 258 2 104 3 170 53 337 8 12 7 83 1 341 3 85 1 241 8 317 1 344 1 154 1 224 3 284 1 321 7 115 1 66 1 265 15 179 4 180 1 21 1 68 8 348 4 120 27 227 1 48 26 
72 1 233 1 290 2 186 1 169 2 236 1 294 1 310 1 131 2 312 1 295 1 105 1 59 1 104 1 199 2 170 2 341 1 205 1 175 2 345 1 224 1 320 1 141 1 346 1 39 2 266 1 158 2 42 1 120 1 48 1 215 2 
280 1 205 1 343 1 112 1 128 2 27 1 273 1 190 1 65 1 256 1 266 1 158 2 46 1 119 1 199 2 70 1 200 1 314 1 215 2 
173 1 280 1 205 1 112 1 128 2 27 1 273 1 190 1 266 1 158 1 46 1 119 1 199 1 70 1 200 1 314 1 215 1 
205 1 217 1 80 1 190 1 236 1 256 1 266 1 158 1 212 1 105 1 199 1 171 1 47 1 215 1 
280 1 205 1 343 1 112 1 128 2 27 1 273 1 190 1 256 1 266 1 158 1 46 1 119 1 199 1 70 1 200 1 314 1 215 1 
279 1 
14 1 237 1 67 1 176 1 306 1 64 1 126 1 
289 1 316 1 259 1 14 1 278 1 305 1 225 1 64 1 
185 2 52 2 95 3 305 4 306 8 308 1 235 2 236 3 237 2 311 1 105 10 278 4 199 3 108 1 12 2 316 4 14 9 15 2 241 2 205 3 113 2 64 8 319 6 321 2 65 1 158 3 68 2 214 2 285 6 287 1 215 3 164 3 165 1 76 2 253 2 125 1 126 1 80 1 255 3 172 12 298 2 259 4 221 2 260 5 176 1 137 2 264 6 178 2 266 4 89 5 142 2 44 5 183 1 143 3 
185 2 234 1 252 1 77 1 305 1 306 3 97 1 30 1 258 1 278 1 172 6 12 2 316 1 259 1 14 6 241 2 264 3 64 4 319 5 321 2 66 1 179 1 68 2 285 5 
288 1 290 1 52 1 303 1 93 1 95 2 269 1 305 1 307 1 99 1 131 1 296 1 10 1 278 1 316 1 259 1 14 2 260 1 241 2 175 1 64 2 282 1 283 1 18 1 115 1 21 1 68 1 44 1 
316 1 259 1 14 1 176 1 305 1 126 1 64 1 306 1 237 1 278 1 
172 10 12 2 185 2 14 5 241 2 52 1 95 2 137 1 64 5 264 5 306 5 319 5 321 2 68 2 285 5 
237 1 255 1 260 1 89 1 44 1 306 1 
184 1 165 2 305 2 235 2 332 1 80 2 236 1 255 2 105 1 278 2 199 4 108 1 219 1 315 1 316 2 259 1 14 2 260 3 205 1 35 1 64 2 266 1 89 4 158 4 212 1 44 3 47 1 287 2 215 4 
23 1 290 2 164 1 73 1 93 2 129 1 169 2 80 1 236 1 294 1 131 3 104 1 105 1 199 1 170 1 61 1 339 1 341 1 205 1 175 3 224 1 282 2 283 1 18 2 141 1 346 1 266 1 158 1 42 1 226 1 48 1 215 1 
172 4 316 1 259 1 14 1 85 1 305 1 264 2 64 2 306 4 319 2 235 1 237 2 285 2 278 1 287 1 
57 1 238 1 
57 1 238 1 
57 1 238 1 
57 1 238 1 
57 1 238 1 
57 1 238 1 
57 1 238 1 
57 1 238 1 
213 1 187 1 
341 2 163 1 85 1 241 1 123 1 224 2 307 1 284 1 169 4 115 1 191 1 265 3 294 2 21 1 68 1 104 2 170 8 120 4 48 4 337 2 
115 1 265 2 67 1 85 1 241 1 21 1 68 1 123 1 170 6 120 3 48 3 337 2 307 1 284 1 
12 1 341 1 185 1 241 1 224 1 321 1 169 2 191 1 265 2 294 1 103 1 68 1 104 1 120 2 170 4 48 2 337 1 
12 1 185 1 241 1 94 1 321 1 97 2 191 1 265 2 179 1 68 1 258 1 170 7 120 3 48 4 337 1 
185 2 163 2 123 1 94 1 307 2 5 1 97 2 169 4 191 4 333 1 294 2 104 2 170 23 337 5 12 2 341 2 85 1 241 3 224 2 284 1 321 2 115 1 265 9 179 2 244 1 21 2 68 3 120 11 48 12 
97 1 170 1 48 1 
179 1 170 1 120 1 
12 1 341 1 185 1 241 1 137 1 224 1 321 1 169 2 191 1 294 1 265 2 103 1 68 1 104 1 170 6 120 3 48 3 337 1 
185 2 163 1 234 1 252 1 77 1 26 1 97 1 169 4 191 1 294 2 30 1 258 1 104 2 170 13 337 2 12 2 341 2 241 2 224 2 321 2 66 1 265 3 179 1 68 2 120 6 48 7 
241 1 307 1 115 1 191 1 265 2 21 1 68 1 120 3 170 6 48 3 337 1 
341 1 163 1 123 1 224 1 307 1 284 1 169 2 191 1 265 2 294 1 244 1 21 1 104 1 120 1 170 3 48 2 337 1 
341 1 241 2 26 1 224 1 307 2 169 2 115 1 191 2 294 1 265 5 21 2 10 1 68 2 104 1 120 5 170 10 48 5 337 3 
341 1 241 1 26 1 224 1 321 1 169 2 191 1 294 1 265 1 104 1 120 2 170 2 
12 1 341 1 185 1 241 1 26 1 224 1 321 1 169 2 191 1 265 2 294 1 68 1 104 1 120 2 170 4 48 2 337 1 
341 3 163 1 26 1 224 3 307 1 169 6 191 1 294 3 265 2 244 1 21 1 104 3 297 1 170 3 120 1 48 2 337 1 
163 2 185 3 123 1 94 1 26 1 307 3 97 4 169 10 191 5 294 5 103 1 258 1 104 5 297 1 170 34 337 7 12 3 341 5 85 1 241 5 204 1 224 5 284 1 321 3 115 2 265 12 117 1 179 3 244 1 21 3 68 5 245 1 120 16 48 18 
341 1 85 1 241 1 123 1 26 1 224 1 307 1 284 1 169 2 97 1 115 1 265 2 294 1 179 1 21 1 30 1 68 1 104 1 258 1 120 4 170 8 48 4 337 2 
123 1 94 1 26 1 307 1 97 2 169 4 191 1 294 2 103 1 30 1 258 1 104 2 170 11 337 2 12 1 341 2 85 1 241 2 224 2 284 1 321 1 115 1 265 3 179 1 21 1 68 1 120 6 48 5 
185 2 234 1 252 1 77 1 26 1 97 1 169 4 191 1 294 2 103 1 30 1 258 1 104 2 170 12 12 2 341 2 241 2 224 2 321 2 66 1 265 1 179 1 68 2 120 6 48 6 
185 1 163 2 234 1 252 1 77 1 26 1 97 1 169 8 191 1 294 4 103 1 30 1 258 1 104 4 170 12 337 2 12 2 341 4 241 2 224 4 321 2 66 1 265 3 179 1 68 1 120 7 48 5 
341 1 85 1 241 1 123 1 26 1 224 1 307 1 284 1 169 2 97 1 115 1 265 2 294 1 179 1 21 1 30 1 68 1 104 1 258 1 120 4 170 8 48 4 337 2 
185 2 163 1 234 1 252 1 77 1 26 1 97 1 169 4 191 1 294 2 30 1 258 1 104 2 170 13 337 2 12 2 341 2 241 2 224 2 321 2 66 1 265 3 179 1 68 2 120 6 48 7 
163 1 185 1 234 1 252 1 77 1 26 1 97 1 169 6 191 1 294 3 103 1 30 1 258 1 104 3 170 11 12 2 341 3 241 2 224 3 321 2 265 1 66 1 179 1 68 1 120 7 48 4 
163 1 185 1 234 1 252 1 77 1 26 1 97 1 169 6 191 2 294 3 30 1 258 1 104 3 170 11 297 1 337 1 12 2 341 3 241 2 224 3 321 2 66 1 265 3 179 1 68 1 120 7 48 4 
241 1 123 2 307 3 284 1 115 1 191 3 265 6 21 3 68 1 170 7 120 3 48 4 337 3 
163 1 185 1 234 1 252 1 77 1 26 1 97 1 169 6 191 1 294 3 30 1 258 1 104 3 170 11 297 1 12 2 341 3 241 2 224 3 321 2 265 1 66 1 179 1 68 1 120 7 48 4 
23 1 290 1 131 1 334 1 175 1 49 1 11 1 
23 1 290 1 175 1 19 1 87 1 131 1 313 1 334 1 159 1 49 1 11 1 109 1 
80 1 236 1 67 1 266 1 205 1 212 1 158 1 105 1 199 1 47 1 215 1 
23 1 164 1 290 1 93 1 205 1 175 2 129 1 80 1 236 1 18 1 192 1 131 2 266 1 158 1 105 1 226 1 199 1 215 1 
23 1 15 1 164 2 290 2 165 1 303 1 93 2 205 1 253 1 175 2 129 1 236 2 18 1 192 1 131 2 266 1 158 1 105 3 226 1 199 1 201 1 248 1 215 1 
23 1 290 2 164 2 165 1 93 2 303 1 253 1 129 1 236 2 192 1 131 2 105 3 199 2 201 1 15 1 205 1 175 2 138 1 18 1 266 1 41 1 158 2 215 2 248 1 
164 1 165 1 253 1 306 1 80 1 236 1 237 1 105 4 199 3 32 1 15 1 260 2 205 1 113 1 138 1 89 1 157 1 266 1 158 3 214 1 44 2 143 1 215 3 
15 1 164 1 260 2 165 1 205 1 253 1 113 1 138 1 306 1 80 1 236 1 178 1 237 1 266 1 89 1 158 3 44 2 105 4 214 1 199 3 143 1 215 3 
266 1 205 1 158 1 199 1 272 1 215 1 
50 1 84 1 164 1 205 1 125 1 80 1 236 1 266 2 158 1 105 1 199 1 106 1 215 1 
93 1 307 1 236 1 54 1 192 1 104 2 105 1 199 1 151 1 241 1 205 1 284 1 65 1 18 1 115 1 21 1 158 1 68 1 120 3 215 1 22 1 23 2 328 1 72 1 290 1 164 1 73 1 250 1 123 1 129 1 169 4 294 2 131 2 170 6 337 2 339 1 341 2 85 1 175 2 345 1 224 2 265 2 346 2 266 1 42 2 226 1 48 3 
76 1 305 2 306 1 126 1 80 1 237 1 255 1 278 2 105 2 199 1 108 1 316 2 259 2 298 1 14 1 260 3 221 1 176 1 113 1 64 1 114 1 178 1 89 2 158 1 44 3 214 1 143 1 215 1 
164 1 205 1 125 1 272 1 65 1 236 1 311 1 266 2 158 2 214 1 105 2 199 2 215 2 
13 1 205 1 138 1 80 1 65 1 236 1 266 1 158 4 212 1 105 1 199 4 47 1 215 4 
84 1 164 1 205 1 236 1 100 1 266 2 158 1 105 1 199 1 335 1 106 1 60 1 215 1 
80 1 266 1 205 1 158 1 112 1 199 1 70 1 128 1 314 1 215 1 
236 1 65 1 310 1 266 1 205 1 158 2 105 1 119 1 199 2 320 1 215 2 
13 1 165 1 205 2 271 1 320 1 80 1 65 1 236 2 102 1 266 2 212 1 158 5 105 3 199 4 47 1 215 5 
13 1 165 1 205 2 155 1 320 1 80 1 65 1 236 2 102 1 266 2 212 1 158 5 105 3 199 4 47 1 215 5 
23 1 164 1 290 1 93 1 205 1 175 2 129 1 80 1 236 1 18 1 192 1 131 2 266 1 158 1 41 1 105 1 199 1 215 1 
50 1 84 1 164 1 165 1 205 1 125 1 236 1 266 2 158 1 105 1 199 1 106 1 215 1 
23 1 139 1 231 1 270 1 325 1 
23 1 231 1 260 2 303 1 166 1 113 1 270 2 218 1 306 1 79 1 29 1 114 1 139 2 101 1 237 1 44 2 325 2 201 1 248 1 
231 1 233 1 290 1 186 1 175 1 139 1 131 1 59 1 325 1 
101 1 231 1 166 1 
67 1 322 1 193 1 292 1 
6 1 121 1 161 1 322 1 51 1 193 1 292 1 
6 1 56 1 302 1 
71 1 51 1 263 1 6 1 301 1 210 1 149 1 
6 2 121 1 161 1 322 1 74 1 51 2 193 1 1 1 292 1 
301 1 
301 1 
301 1 
301 1 146 1 
51 2 1 2 6 2 301 1 8 1 210 1 195 1 193 1 45 1 326 1 
301 1 128 1 314 1 
74 1 51 2 1 2 7 1 6 2 301 1 8 1 210 1 193 1 326 1 
301 1 210 1 
121 1 71 1 161 1 51 4 1 2 292 2 263 1 6 4 8 1 210 1 322 2 193 3 149 1 326 1 
51 1 1 1 222 1 6 1 301 1 210 1 58 1 90 1 
51 1 263 1 6 1 301 1 309 1 210 1 149 1 
193 2 2 2 304 1 223 1 
301 1 
6 1 301 1 210 1 51 1 1 1 195 1 
168 1 
301 1 
6 1 301 1 210 1 51 1 263 1 
8 1 210 1 193 1 326 1 
322 1 193 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (14,159) 251 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (184,266) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (60,93,249) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException (184,266) (184,266) 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (184,266) (184,266) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException (184,266) (184,266) 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (184,266) (184,266) 144 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 79 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (14,159) 251 205 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException (184,266) (184,266) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (184,266) (184,266) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (184,266) (184,266) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (184,266) (184,266) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (184,266) (184,266) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (184,266) (184,266) 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (184,266) (184,266) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (184,266) (184,266) 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 79 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 223 122 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 37 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (14,159) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (14,159) (14,159) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (14,159) 251 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (184,266) (184,266) 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (184,266) (184,266) 144 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException (184,266) (184,266) 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 356 310 186 274 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 79 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (184,266) (184,266) 144 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 747 | return null
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
269 9 220 1 165 4 96 5 248 1 325 1 207 1 208 1 65 9 172 1 101 1 120 1 279 1 280 1 227 2 228 1 176 1 10 7 67 3 197 1 68 2 103 2 351 1 338 1 
269 9 220 1 165 4 96 5 248 1 325 1 207 1 208 1 65 9 172 1 101 1 120 1 279 1 280 1 227 2 228 1 176 1 10 7 67 3 197 1 68 2 103 2 351 1 338 1 
269 9 220 1 296 1 272 1 165 4 248 2 96 5 325 1 207 1 208 2 65 9 172 2 101 1 280 1 227 2 228 1 176 2 10 6 67 3 197 1 68 2 103 2 351 1 90 1 263 1 49 1 338 1 358 1 
269 9 220 1 296 1 272 1 165 4 248 2 96 5 325 1 207 1 208 2 65 9 172 2 101 1 280 1 227 2 228 1 176 2 10 6 67 3 197 1 68 2 103 2 351 1 90 1 263 1 49 1 338 1 358 1 
269 10 220 1 296 1 272 1 165 5 248 2 96 6 325 1 207 1 208 2 65 10 172 2 101 1 280 1 227 2 228 1 176 2 10 7 67 4 197 1 68 2 103 2 351 1 90 1 263 1 49 1 338 1 358 1 
269 7 220 1 296 1 272 1 165 3 248 2 96 4 325 1 208 2 65 7 172 2 101 1 280 1 227 2 228 1 176 2 10 4 67 2 197 1 68 2 103 1 351 1 90 1 263 1 49 1 338 1 358 1 
269 4 220 1 103 2 351 1 165 2 248 1 96 3 325 1 207 1 208 1 65 4 172 1 101 1 280 1 227 1 10 3 67 1 68 1 
269 2 296 1 272 1 351 1 96 1 248 1 106 1 65 2 83 1 170 1 172 1 101 1 280 1 227 1 176 1 68 1 
269 3 351 1 165 1 96 2 65 3 101 1 280 1 227 2 228 1 176 1 10 1 67 1 68 2 
109 1 138 1 79 1 
119 2 138 1 327 1 
350 1 183 2 
350 1 180 1 59 2 14 1 251 1 183 1 186 1 356 2 310 2 320 1 21 1 
350 1 183 1 184 1 
203 1 60 1 249 1 152 1 138 1 4 1 238 1 109 1 112 1 175 1 9 1 93 1 35 1 219 1 
93 1 183 1 
22 1 125 1 203 1 249 1 178 1 
350 1 22 1 125 1 203 2 249 2 3 1 138 1 183 1 184 1 109 1 99 1 266 1 
22 1 203 1 249 1 
350 1 125 1 203 1 249 1 266 1 183 1 184 1 
138 1 
350 1 22 1 125 1 199 1 203 2 249 2 3 1 138 1 183 1 184 1 109 1 266 1 
22 2 295 3 221 1 203 5 249 5 117 1 3 1 138 2 328 2 141 4 211 1 144 1 350 1 125 2 104 1 12 2 39 1 151 2 313 1 288 1 183 1 353 1 184 1 339 1 158 2 109 2 202 2 20 1 266 1 244 1 
79 1 
312 1 152 1 250 1 4 1 183 1 66 1 112 1 9 1 267 1 
312 1 152 1 182 2 16 1 4 2 183 1 301 2 66 1 112 2 9 2 
185 1 112 1 152 1 9 1 182 1 4 1 301 1 
250 1 183 1 267 1 
59 1 203 1 249 1 205 1 4 1 251 1 301 1 310 1 9 1 35 1 350 1 14 1 152 1 182 1 16 1 183 2 238 1 75 1 186 1 187 1 356 1 112 1 93 1 267 1 219 1 
66 1 112 2 175 1 9 2 182 1 16 1 4 2 301 1 136 1 
203 1 249 1 152 1 16 2 182 2 138 1 4 2 183 1 238 1 301 2 75 1 187 1 112 2 9 2 93 1 213 1 267 1 35 1 219 1 
183 1 267 1 
186 1 356 1 59 1 310 1 
186 1 356 1 59 1 310 1 
329 1 162 1 342 1 2 1 42 1 134 1 315 1 245 2 
58 1 112 1 152 1 9 1 182 1 4 1 301 1 219 1 
286 1 59 1 1 1 287 1 16 1 182 1 4 2 224 1 24 1 301 1 75 1 186 1 356 1 226 1 112 2 332 1 310 1 9 1 294 1 56 1 
312 1 152 1 16 1 182 1 4 1 183 1 301 1 66 1 112 1 9 1 267 1 
185 1 58 1 112 2 152 1 9 2 182 2 4 2 301 2 
222 1 76 1 
222 1 76 1 
233 1 214 1 
233 1 214 1 
233 1 214 1 
57 1 222 1 76 1 
210 1 222 1 76 1 
233 1 222 2 76 2 275 1 214 1 168 1 
57 1 222 1 76 1 
57 1 222 1 76 1 
222 1 76 1 139 1 
222 1 76 1 139 1 
222 1 76 1 139 1 
336 2 234 1 191 1 38 1 215 1 222 2 203 2 249 2 138 1 346 1 236 2 140 2 290 3 168 1 108 1 354 2 76 2 265 1 69 2 
222 1 203 1 249 1 192 1 4 2 140 1 301 2 210 1 66 1 9 2 335 1 231 1 336 1 70 1 215 1 182 2 236 1 156 1 290 1 239 1 354 1 76 1 112 2 242 1 
172 1 248 1 208 1 
83 1 172 1 248 1 
83 1 172 3 255 1 28 1 30 1 208 2 
83 1 172 2 255 1 28 1 330 1 208 1 
83 1 172 2 255 1 28 2 208 1 
295 2 22 1 221 1 163 1 203 5 249 5 3 1 138 1 141 1 119 1 282 1 284 1 70 1 350 1 125 4 151 1 41 2 43 1 183 1 74 1 184 1 158 1 109 1 341 1 77 1 202 1 133 1 241 1 266 1 244 1 
295 2 22 3 221 1 203 5 249 5 138 1 3 1 141 1 7 1 119 1 281 2 282 1 178 2 284 1 70 1 350 1 125 4 151 1 43 1 183 1 74 1 291 1 184 1 158 1 109 1 341 1 77 1 202 1 133 1 266 1 244 1 
295 2 163 1 203 3 249 3 138 3 327 2 141 3 119 4 282 1 284 1 70 1 125 2 12 1 39 1 151 1 41 1 74 1 91 1 109 1 158 1 341 2 202 1 77 1 133 2 241 1 244 1 
295 4 163 1 203 4 249 4 138 4 327 3 63 1 141 5 119 7 100 1 282 2 284 2 70 2 125 3 12 2 39 1 151 1 41 2 74 1 91 2 109 1 158 1 341 4 202 1 77 1 78 1 133 4 241 1 244 2 
188 1 79 1 56 1 
6 1 56 1 
179 1 
226 1 56 1 
179 1 98 1 226 1 188 2 33 1 294 1 56 2 
226 1 294 1 56 1 
95 1 56 1 
345 1 209 1 144 1 196 4 198 1 230 1 285 14 12 3 313 2 288 2 127 1 110 8 339 2 19 6 53 2 160 5 54 1 244 3 
345 1 209 1 144 1 196 4 198 1 230 1 285 14 12 3 313 2 288 2 127 1 110 8 339 2 19 6 53 2 160 7 54 3 244 3 
247 1 345 1 209 1 144 1 196 4 230 1 198 1 285 14 12 3 313 2 288 2 127 1 110 8 339 2 19 6 53 2 160 5 54 1 244 3 
162 1 342 1 204 1 276 4 345 2 209 2 329 1 27 3 144 1 212 1 282 3 196 7 198 1 230 1 259 1 36 1 284 3 102 1 285 40 348 1 12 6 313 3 42 1 288 2 127 1 46 1 91 3 339 3 110 21 19 19 53 3 160 14 54 7 244 6 245 2 
162 2 342 2 81 1 344 1 345 1 209 1 329 2 144 1 196 5 230 1 198 1 102 1 285 16 12 3 313 2 42 2 288 2 110 9 339 2 19 7 53 2 160 7 54 2 244 3 245 4 
269 2 59 1 96 1 248 1 324 1 208 1 24 1 224 1 65 2 305 1 83 1 172 2 101 1 280 1 310 1 257 1 227 1 29 1 10 1 176 1 333 1 30 1 68 1 351 1 107 1 264 1 356 1 201 1 113 1 114 1 
269 3 59 1 96 1 248 1 324 1 208 1 24 1 224 1 65 3 305 1 83 1 172 2 280 1 310 1 227 1 195 1 29 1 30 1 176 1 10 2 333 1 68 1 34 1 351 1 107 1 128 1 264 1 356 1 201 1 114 1 
269 2 59 1 96 1 324 1 248 1 208 1 24 1 224 1 65 2 305 1 83 1 172 2 280 1 310 1 29 1 176 1 10 2 30 1 34 1 351 1 107 1 128 1 264 1 356 1 114 1 
269 1 246 1 59 1 324 2 224 1 24 1 65 1 304 1 256 1 226 1 310 1 227 1 195 1 176 2 68 1 349 1 216 1 107 2 186 1 356 1 361 1 114 2 56 1 
269 1 59 1 248 1 324 1 208 1 24 1 224 1 65 1 305 1 83 1 172 2 101 1 310 1 227 1 29 1 176 1 333 1 30 1 68 1 34 1 107 1 264 1 356 1 201 1 113 1 114 1 
218 1 
221 1 0 2 60 1 273 1 61 2 138 1 327 2 3 2 4 1 141 1 194 1 331 1 9 1 147 5 148 1 149 1 150 3 151 1 152 1 153 1 238 1 18 3 158 1 109 1 340 2 112 1 202 1 22 5 295 1 298 1 203 4 249 4 84 2 175 1 35 1 350 1 124 1 45 3 183 1 184 1 129 1 189 1 93 1 266 1 219 1 268 1 
221 1 0 2 60 1 273 1 61 2 327 2 3 2 138 1 4 1 141 1 194 1 331 1 9 1 147 5 148 1 149 1 150 3 151 1 152 1 153 1 238 1 18 3 158 1 109 1 340 2 112 1 202 1 22 5 295 1 298 1 203 4 249 4 84 2 175 1 35 1 350 1 124 1 45 3 183 1 184 1 129 1 189 1 93 1 266 1 268 1 219 1 
221 1 0 2 60 1 273 1 61 2 138 1 3 1 4 1 141 1 9 1 147 3 148 1 149 1 150 1 151 1 152 1 153 1 155 1 238 1 18 1 158 1 109 1 112 1 202 1 295 1 22 2 203 3 249 3 118 2 307 1 119 2 175 1 35 1 124 1 45 1 132 1 189 1 93 1 219 1 
22 2 295 1 221 1 59 2 203 2 249 2 274 1 3 1 300 1 224 3 24 2 141 1 226 2 310 2 258 1 145 1 349 1 151 1 200 1 216 1 186 2 158 1 356 2 131 1 202 1 77 1 321 1 294 1 56 2 
22 2 148 1 149 1 124 1 199 1 203 3 249 3 60 1 152 1 153 1 273 1 3 1 4 1 238 1 18 1 112 1 175 1 9 1 93 1 147 2 35 1 219 1 
22 1 203 3 60 1 249 3 273 1 138 1 3 1 4 1 175 1 9 1 147 3 35 1 148 1 149 1 124 1 150 1 199 1 153 1 152 1 238 1 109 1 112 1 93 1 219 1 
22 2 203 3 60 1 249 3 273 1 3 1 4 1 175 1 9 1 147 3 35 1 148 1 149 1 124 1 150 1 199 1 153 1 152 1 45 1 238 1 18 1 112 1 93 1 219 1 
221 1 0 2 60 1 273 1 61 2 138 1 3 3 327 2 4 1 141 1 194 1 331 1 9 1 147 4 148 1 149 1 150 2 199 1 151 1 152 1 153 1 238 1 18 4 109 1 158 1 340 2 112 1 202 1 22 7 295 1 298 1 203 5 249 5 84 2 175 1 35 1 350 1 124 1 89 1 45 4 183 1 184 1 129 1 189 1 93 1 266 1 219 1 268 1 
221 1 0 2 60 1 273 1 61 2 327 2 3 2 138 1 4 1 141 1 331 1 9 1 147 4 148 1 149 1 150 2 151 1 152 1 153 1 238 1 18 2 158 1 109 1 340 2 112 1 202 1 295 1 22 4 203 4 249 4 84 2 307 1 119 2 175 1 35 1 350 1 124 1 45 2 183 1 184 1 189 1 93 1 266 1 219 1 
22 4 295 1 298 1 0 2 221 1 203 4 60 1 249 4 273 1 61 2 138 1 3 2 327 2 4 1 141 1 84 2 194 1 331 1 175 1 9 1 147 4 35 1 148 1 149 1 150 2 124 1 151 1 153 1 152 1 45 2 238 1 18 2 109 1 158 1 340 2 112 1 202 1 189 1 93 1 219 1 268 1 
221 1 0 2 60 1 273 1 61 2 327 2 3 2 138 1 4 1 141 1 194 1 331 1 9 1 147 4 148 1 149 1 150 2 151 1 152 1 153 1 238 1 18 2 158 1 109 1 340 2 112 1 202 1 295 1 22 4 298 1 203 4 249 4 84 2 175 1 35 1 350 1 124 1 45 2 183 1 184 1 189 1 93 1 266 1 268 1 219 1 
221 1 0 2 60 1 273 1 61 2 3 2 138 1 4 1 141 1 9 1 147 4 148 1 149 1 150 2 151 1 152 1 153 1 238 1 155 1 18 2 158 1 109 1 112 1 202 1 116 1 295 1 22 4 298 1 203 4 249 4 118 2 119 2 175 1 35 1 350 1 124 1 181 1 45 2 183 1 184 1 132 2 189 1 93 1 266 1 219 1 
162 1 342 1 2 1 313 1 42 1 288 1 315 1 329 1 110 2 339 1 134 1 53 1 160 1 196 1 79 1 230 1 198 1 244 1 285 2 245 2 
162 1 297 1 342 1 42 1 223 1 276 1 315 1 329 1 110 1 27 1 19 1 134 1 122 1 285 2 245 2 
162 1 297 1 342 1 1 1 59 1 4 2 224 1 24 1 301 1 329 1 66 1 226 1 332 1 310 1 9 1 177 1 285 2 261 1 42 1 287 1 182 1 16 1 72 1 315 1 17 1 186 1 75 1 92 1 240 1 110 1 356 1 19 1 112 2 134 1 52 1 294 1 56 1 245 2 
190 6 59 1 1 2 4 3 224 2 329 3 66 3 143 2 226 2 332 2 144 1 9 1 282 2 196 6 198 1 230 1 284 2 285 27 286 6 12 5 152 1 14 2 16 1 287 2 288 2 75 1 339 2 110 14 19 13 112 3 159 2 160 7 294 2 244 5 245 6 162 3 297 1 342 3 301 1 24 2 252 2 166 2 85 1 310 1 311 1 261 6 312 1 313 2 42 3 182 1 315 3 186 1 91 2 92 1 356 1 134 3 52 1 53 1 54 1 56 2 
37 1 162 1 342 1 59 1 42 1 315 1 329 1 186 1 92 1 110 1 356 1 310 1 121 1 134 1 285 1 245 2 
162 1 297 1 342 1 12 1 42 1 315 1 183 1 91 1 329 1 110 1 19 1 51 1 134 1 282 1 244 1 267 1 284 1 285 2 245 2 
162 1 342 1 2 1 42 1 15 1 315 1 329 1 110 1 134 1 282 1 244 1 285 1 245 2 
162 1 342 1 80 1 12 1 2 1 42 1 315 1 329 1 91 1 19 1 134 1 285 1 245 2 
162 1 342 1 12 1 2 1 42 1 315 1 91 1 329 1 110 1 19 1 134 1 282 1 284 1 244 1 285 2 245 2 
162 1 342 1 42 1 15 1 315 1 329 1 110 1 121 1 134 1 282 1 244 1 285 1 245 2 
162 1 342 1 80 1 12 1 42 1 315 1 329 1 91 1 19 1 121 1 134 1 285 1 245 2 
162 1 342 1 12 1 42 1 315 1 91 1 329 1 110 1 19 1 121 1 134 1 282 1 284 1 244 1 285 2 245 2 
162 1 342 1 12 1 42 1 315 1 91 1 329 1 110 1 19 1 134 1 282 1 284 1 244 1 245 2 285 2 
186 1 356 1 59 1 310 1 14 1 
186 1 356 1 59 1 310 1 135 1 
162 1 297 1 342 1 12 1 42 1 315 1 91 1 329 1 110 1 19 1 134 1 282 1 284 1 244 1 285 2 245 2 
356 1 59 1 310 1 257 1 14 1 159 1 
162 1 297 1 342 1 12 1 235 1 42 1 315 1 183 1 91 1 329 1 110 1 19 1 134 1 282 1 244 1 267 1 284 1 285 2 245 2 
162 2 271 1 342 2 81 1 343 1 204 1 276 4 167 1 329 2 308 1 26 1 278 1 27 3 225 1 32 1 196 1 282 4 11 1 259 3 284 4 285 31 12 4 126 3 42 2 314 1 154 1 289 2 91 4 110 15 19 16 243 1 160 4 293 1 54 3 244 4 245 4 
162 3 271 1 342 3 81 1 343 1 204 1 276 4 167 1 329 3 308 1 26 1 278 1 27 3 225 1 32 1 196 2 282 4 11 1 102 1 259 3 284 4 285 32 12 3 126 4 42 3 314 1 154 1 289 2 91 3 110 17 19 15 243 1 160 5 293 1 54 3 244 4 245 6 
162 3 271 1 342 3 81 1 204 2 276 4 167 1 329 3 308 1 26 1 27 4 225 1 32 1 196 8 282 7 198 1 230 1 11 1 102 2 259 2 284 7 285 53 12 8 126 4 313 1 42 3 314 1 288 1 154 1 289 1 91 7 339 1 110 27 111 2 19 26 243 1 53 1 160 15 293 1 54 7 244 8 245 6 
162 2 342 2 81 1 204 1 276 2 329 2 278 1 27 1 196 3 282 3 11 1 259 1 284 3 285 19 12 3 126 2 42 2 314 1 154 1 289 1 48 1 91 3 110 9 19 10 243 1 160 6 293 2 54 3 244 3 245 4 
162 2 342 2 271 1 81 1 276 2 167 1 329 2 308 1 26 1 27 2 225 1 32 1 282 3 11 1 102 1 259 2 284 3 285 23 12 2 126 3 42 2 314 2 154 1 289 2 91 2 110 13 19 10 243 1 160 1 293 1 54 1 244 3 245 4 
162 1 297 1 342 1 59 2 4 2 224 1 24 1 277 1 329 1 309 1 226 1 310 2 9 2 285 2 37 1 42 1 315 1 157 1 92 1 110 1 356 2 19 1 112 2 134 1 292 1 52 1 319 1 21 2 56 1 115 1 245 2 
270 1 322 1 59 2 248 1 324 1 208 1 224 1 24 1 83 1 305 1 172 2 356 2 201 1 310 2 257 1 29 1 30 1 283 1 34 1 
322 1 88 1 59 1 248 1 324 1 208 1 24 1 224 1 83 1 305 1 172 2 356 1 201 1 310 1 29 1 30 1 34 1 
349 1 59 1 324 1 216 1 224 1 24 1 186 1 356 1 173 1 226 1 256 1 310 1 283 1 56 1 
270 1 322 1 59 1 248 1 324 1 208 1 224 1 24 1 83 1 305 1 172 2 356 1 201 1 310 1 29 1 30 1 283 1 34 1 
316 1 
186 1 350 1 356 1 59 1 310 1 14 1 251 1 183 1 
295 2 221 1 151 1 327 2 138 4 300 1 141 1 119 4 158 1 109 2 341 2 202 1 77 1 133 2 53 1 
141 1 295 1 211 1 109 1 104 1 138 1 79 1 
295 1 22 1 221 1 203 1 249 1 327 1 3 1 138 1 141 1 84 1 119 1 331 1 350 1 151 1 183 1 184 1 158 1 109 1 340 1 202 1 266 1 
221 2 59 1 193 1 62 1 3 1 327 3 138 3 6 2 224 2 328 1 141 4 142 1 226 1 8 1 282 1 284 1 12 1 151 2 238 1 158 2 341 3 77 1 202 2 294 1 244 1 22 2 295 3 203 2 249 2 24 1 166 1 119 6 87 1 310 1 33 1 260 1 186 1 91 1 130 1 356 1 188 1 133 3 56 4 
295 4 271 1 221 1 276 1 327 3 138 3 167 1 141 6 119 6 26 1 27 1 225 1 32 1 282 2 259 1 284 2 12 2 151 1 91 2 158 1 341 5 202 1 133 5 244 2 
350 1 295 1 221 1 12 1 203 1 151 1 249 1 313 1 288 1 183 1 184 1 328 2 141 2 194 1 158 1 339 1 202 1 144 1 266 1 244 1 
295 1 104 1 221 1 151 1 138 1 141 1 211 1 158 1 109 1 202 1 
295 5 12 2 326 1 327 5 138 5 166 1 328 2 91 2 141 5 119 10 341 5 133 5 282 2 284 2 244 2 
350 1 22 1 203 1 249 1 3 1 138 1 183 1 184 1 109 1 266 1 
295 1 22 2 221 1 59 2 203 1 151 1 249 1 274 1 3 1 300 1 141 1 186 2 158 1 356 2 77 1 310 2 202 1 229 1 321 1 
354 1 236 1 94 1 
354 1 38 1 97 1 236 1 156 1 
354 1 236 1 94 1 
354 1 236 1 94 1 
354 1 236 1 5 1 
354 1 236 1 5 1 
354 1 236 1 5 1 
354 1 236 1 
222 1 76 1 
162 1 271 1 342 1 81 1 276 1 329 1 27 1 144 1 196 4 230 1 198 1 259 1 285 15 12 3 313 2 42 1 288 2 110 8 339 2 19 7 53 1 160 5 54 1 244 3 245 2 
162 2 271 1 342 2 81 1 204 1 276 2 253 1 329 2 27 1 144 1 196 4 282 1 198 1 230 1 259 1 284 1 285 18 12 3 313 2 42 2 288 2 339 2 110 10 19 8 53 1 160 6 54 2 244 4 245 4 
162 2 271 1 342 2 81 1 276 1 253 1 167 1 329 2 26 1 27 1 225 1 32 1 282 2 259 1 284 2 285 12 12 2 42 2 91 2 110 6 19 6 160 1 54 1 244 2 245 4 
162 4 271 1 342 4 81 1 276 1 253 1 167 1 329 4 26 1 27 1 225 1 32 1 282 2 196 2 259 1 284 2 102 2 285 12 12 1 42 4 91 1 110 7 19 5 160 3 54 1 244 2 245 8 
162 1 271 1 342 1 81 1 276 1 329 1 27 1 144 1 196 4 230 1 198 1 259 1 285 15 12 3 313 2 42 1 288 2 110 8 339 2 19 7 53 1 160 5 54 1 244 3 245 2 
162 2 271 1 342 2 81 1 276 1 167 1 329 2 26 1 27 1 225 1 32 1 282 2 196 2 259 1 284 2 102 1 285 13 12 2 42 2 91 2 110 6 19 7 160 3 54 1 244 2 245 4 
162 3 271 1 342 3 81 1 276 1 253 1 167 1 329 3 26 1 27 1 225 1 32 1 282 2 102 1 259 1 284 2 285 11 12 1 42 3 91 1 110 7 19 4 160 1 54 1 244 2 245 6 
162 3 271 1 342 3 81 1 276 1 167 1 329 3 26 1 278 1 27 1 225 1 32 1 282 2 196 1 102 1 259 1 284 2 285 11 12 1 42 3 91 1 110 7 19 4 160 3 54 2 244 2 245 6 
12 1 313 3 288 1 339 3 110 3 19 4 196 3 160 6 54 3 230 1 198 2 244 1 285 7 
162 3 271 1 342 3 81 1 276 1 167 1 329 3 26 1 278 1 27 1 225 1 32 1 282 2 102 1 259 1 284 2 285 11 12 1 42 3 91 1 110 7 19 4 160 1 54 1 244 2 245 6 
162 2 342 2 329 2 144 1 196 4 198 1 230 1 102 1 285 17 12 3 313 2 42 2 288 2 339 2 110 9 19 8 160 7 53 1 54 3 244 3 245 4 
12 1 313 1 288 1 339 1 110 3 19 2 53 1 79 1 196 2 160 2 230 1 198 1 244 1 285 5 
162 1 342 1 12 1 42 1 253 1 91 1 329 1 110 2 19 2 196 1 160 2 282 1 54 1 284 1 244 1 245 2 285 4 
12 1 204 1 276 2 91 1 27 1 110 3 19 4 196 1 282 1 160 2 54 1 259 1 284 1 244 1 285 7 
162 1 342 1 204 1 276 2 223 1 329 1 27 2 144 1 282 2 196 5 198 1 230 1 284 2 102 1 285 25 12 5 313 2 42 1 288 2 91 2 339 2 110 13 111 1 19 12 53 1 160 7 54 2 244 5 245 2 
19 1 276 1 285 1 
110 1 27 1 285 1 
162 1 342 1 12 1 42 1 253 1 166 1 329 1 91 1 110 3 19 3 282 1 160 3 196 2 54 1 284 1 244 1 245 2 285 6 
162 2 271 1 342 2 81 1 276 1 167 1 329 2 26 1 27 1 225 1 32 1 282 2 196 2 259 1 284 2 102 1 285 13 12 2 42 2 91 2 110 6 19 7 160 3 54 1 244 2 245 4 
12 1 313 1 288 1 110 3 339 1 19 3 196 1 160 2 54 1 244 1 285 6 
162 1 342 1 313 1 42 1 206 1 329 1 110 1 339 1 19 2 160 2 196 1 54 1 198 1 230 1 102 1 285 3 245 2 
162 1 342 1 81 1 12 2 313 2 42 1 288 1 329 1 339 2 110 5 19 5 144 1 196 3 160 5 54 2 244 2 245 2 285 10 
162 1 342 1 81 1 42 1 329 1 110 2 282 1 160 1 54 1 244 1 245 2 285 2 
162 1 342 1 81 1 12 1 42 1 91 1 329 1 110 2 19 2 196 1 160 2 282 1 54 1 284 1 244 1 245 2 285 4 
162 3 342 3 81 1 313 1 42 3 206 1 329 3 278 1 339 1 110 1 19 2 196 1 160 2 54 1 102 1 285 3 245 6 
162 4 342 4 81 1 276 3 253 1 329 4 278 1 27 3 144 1 212 1 196 5 282 2 198 1 230 1 102 1 259 1 36 1 284 2 285 31 348 1 12 5 313 2 42 4 288 2 91 2 339 2 110 16 19 15 53 1 160 9 54 4 244 5 245 8 
66 1 164 1 112 1 175 1 9 1 4 1 136 1 
161 1 23 1 123 1 164 1 4 1 347 1 66 1 112 1 175 1 9 1 55 1 136 1 
349 1 186 1 356 1 59 1 226 1 310 1 79 1 216 1 224 1 24 1 56 1 
59 1 16 1 182 1 287 1 4 2 224 1 301 1 24 1 186 1 66 1 356 1 226 1 112 2 332 1 310 1 9 1 294 1 56 1 
59 1 82 1 4 2 24 1 301 1 224 1 66 1 226 2 310 1 332 1 9 2 35 1 152 1 287 1 182 2 16 1 73 1 356 1 112 2 294 2 95 1 56 3 219 1 
59 2 82 1 299 1 4 2 24 1 301 1 224 1 66 1 226 2 310 2 332 1 9 2 35 1 152 1 182 2 16 1 73 1 317 1 356 2 112 2 294 2 95 1 56 3 219 1 
22 1 59 3 203 2 71 1 249 2 82 1 138 1 238 1 224 1 73 1 6 1 24 1 186 1 317 1 109 1 356 3 226 1 188 1 310 3 334 1 95 1 294 1 56 4 
22 1 59 3 203 2 249 2 82 1 138 1 238 1 224 1 73 1 6 1 24 1 186 1 317 1 142 1 109 1 356 3 226 1 188 1 310 3 95 1 294 1 56 4 
318 1 356 1 59 1 310 1 224 1 24 1 
323 1 59 7 137 1 352 1 24 2 224 3 277 1 186 2 318 1 356 7 131 1 360 1 226 2 257 1 310 6 145 1 33 1 21 1 294 1 34 1 56 3 
1 1 59 1 4 2 224 1 329 2 66 3 143 1 226 1 332 1 144 1 9 1 196 4 230 1 198 1 285 13 12 3 152 1 14 1 287 1 16 1 288 2 339 2 110 7 19 6 112 2 159 1 292 1 160 5 294 1 244 3 245 4 162 2 297 1 342 2 301 1 24 1 310 1 257 1 312 1 313 2 42 2 182 1 315 2 356 1 134 2 53 1 54 1 56 1 
295 3 22 2 221 2 59 1 203 3 249 3 138 2 193 1 62 1 3 1 6 1 328 2 141 4 211 1 142 1 310 1 144 1 229 1 260 1 350 1 104 1 125 1 12 2 151 2 313 1 288 1 183 1 238 1 184 1 186 1 339 1 109 2 158 2 356 1 188 1 202 2 266 1 244 1 56 2 
59 2 24 1 224 2 318 1 356 2 188 1 226 1 257 1 310 2 8 1 33 1 294 1 56 2 
349 1 59 4 216 1 224 1 24 1 186 1 306 1 317 1 356 4 226 1 310 4 257 1 56 1 
59 2 200 1 47 1 73 1 24 1 224 2 356 2 131 1 226 1 310 2 258 1 145 1 294 1 56 1 
83 1 305 1 186 1 172 1 356 1 59 1 248 1 310 1 224 1 24 1 
59 2 24 1 224 1 277 1 356 2 226 1 257 1 310 2 319 1 34 1 56 1 
349 1 323 1 59 5 137 1 216 1 73 1 24 2 224 2 277 1 186 1 306 1 356 5 226 2 310 4 257 1 56 3 
349 1 59 5 137 1 40 1 216 1 73 1 24 2 224 2 277 1 186 1 306 1 356 5 226 2 310 4 257 1 56 3 
59 1 16 1 182 1 4 2 299 1 224 1 301 1 24 1 186 1 66 1 356 1 226 1 112 2 332 1 310 1 9 1 294 1 56 1 
59 1 352 1 73 1 24 1 224 2 356 1 131 1 226 1 310 1 145 1 33 1 294 1 56 1 
4 1 64 1 157 1 50 1 309 1 112 1 217 1 9 1 115 1 
50 1 174 1 146 1 
50 1 66 1 359 1 217 1 64 1 
262 1 125 1 203 2 249 2 152 1 138 1 238 1 64 2 187 1 50 1 109 1 66 1 359 2 174 1 217 2 93 1 146 1 35 1 219 1 
269 3 272 1 351 1 96 1 65 3 338 1 101 1 280 1 227 1 10 1 68 1 
165 1 86 1 96 1 67 1 
96 1 280 1 
351 1 96 1 280 1 79 1 
269 1 351 1 96 1 280 1 227 1 68 1 65 1 
176 1 114 1 65 1 
269 3 272 2 351 1 96 1 337 1 65 3 101 1 357 1 280 1 227 1 68 1 232 1 
269 2 103 1 351 1 96 1 280 1 227 1 10 1 68 1 65 2 
269 1 172 1 101 1 165 1 248 1 96 1 325 1 227 1 208 1 68 1 65 1 
269 1 101 1 96 1 280 1 227 1 68 1 65 1 
269 1 101 1 351 1 280 2 227 1 68 1 65 1 
269 2 13 1 96 1 302 1 65 2 254 1 101 1 280 1 227 2 68 2 
269 3 351 1 165 1 96 2 65 3 338 1 101 1 280 1 227 1 10 2 197 1 67 1 68 1 
269 2 351 1 96 1 248 1 105 1 208 1 65 2 83 1 172 2 101 1 280 1 227 1 30 1 10 1 68 1 
269 4 103 1 351 1 165 1 96 2 207 1 65 4 101 1 280 1 227 2 10 2 67 1 68 2 
269 1 101 1 351 1 96 1 280 1 227 1 68 1 65 1 
269 4 272 1 351 2 165 1 96 3 337 1 65 4 86 1 280 2 227 1 10 2 67 1 68 1 232 1 
269 2 351 1 96 1 44 1 237 1 65 2 101 1 120 1 280 1 227 1 10 1 68 1 
269 3 272 2 351 1 96 1 337 1 65 3 355 1 101 1 280 1 227 1 68 1 232 2 
169 2 171 1 96 2 303 1 
269 1 101 1 227 1 31 1 68 1 65 1 
269 2 338 1 101 1 351 1 96 1 280 1 227 1 10 1 68 1 65 2 
25 1 
269 1 101 1 351 1 96 1 280 1 227 1 68 1 65 1 

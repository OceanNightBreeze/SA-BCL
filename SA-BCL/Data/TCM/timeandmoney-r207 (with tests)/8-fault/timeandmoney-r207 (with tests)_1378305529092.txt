#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 361 (25,156) (25,156) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 361 (25,156) (25,156) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 361 (25,156) (25,156) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 361 (25,156) (25,156) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 361 (133,173) (133,173) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (38,86,219,293) (38,86,219,293) (38,86,219,293) 164 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (38,86,219,293) (38,86,219,293) (38,86,219,293) 164 319 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (38,86,219,293) (38,86,219,293) (38,86,219,293) 164 319 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 92 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 371 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (38,86,219,293) (38,86,219,293) (56,310,311) (56,310,311) (56,310,311) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (38,86,219,293) (38,86,219,293) (56,310,311) (56,310,311) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (38,86,219,293) (38,86,219,293) (56,310,311) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (12,367) (12,367) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 66 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1921 | return null
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
361 1 38 1 156 1 41 1 345 1 86 1 138 1 25 1 219 1 
361 1 38 1 156 1 41 1 345 1 86 1 138 1 25 1 219 1 
361 1 38 1 156 1 41 1 345 1 86 1 138 1 25 1 219 1 
361 1 38 1 156 1 41 1 345 1 86 1 138 1 25 1 219 1 
258 1 187 1 125 1 38 4 215 1 13 2 41 1 15 1 86 1 172 2 219 1 290 1 293 3 345 4 279 2 185 1 
197 1 361 1 38 1 41 1 133 1 15 1 345 1 86 1 173 1 138 1 219 1 
38 2 41 1 345 1 86 2 138 1 164 1 219 2 
38 3 293 1 41 1 345 2 86 2 32 1 138 1 164 1 319 1 219 2 
38 3 293 1 41 1 345 2 86 2 32 1 138 1 164 1 319 1 219 2 
322 1 193 1 158 1 
130 2 322 1 199 1 
206 1 177 1 198 2 55 2 372 2 150 2 98 2 127 2 
154 1 48 1 320 2 249 1 323 1 362 2 1 1 127 3 93 2 255 1 109 1 55 3 161 1 305 1 162 2 229 1 346 1 116 2 198 2 235 1 85 2 372 2 237 1 88 1 266 1 98 3 240 1 267 1 354 2 376 2 206 1 20 1 207 1 177 1 122 1 316 1 359 1 101 1 150 3 339 1 22 1 
177 1 198 1 110 1 55 1 372 1 150 1 237 1 23 1 98 1 127 1 
249 1 322 1 237 1 127 1 98 1 287 1 269 1 207 1 223 1 193 1 55 1 358 1 227 1 271 1 
198 1 249 1 322 1 372 1 237 1 127 1 98 1 287 1 269 2 223 2 207 1 193 1 55 1 150 1 271 1 
95 1 223 1 292 1 3 1 269 1 
222 1 95 1 223 2 322 1 193 1 292 1 134 1 269 2 
223 1 292 1 269 1 
198 1 372 1 237 1 127 1 98 1 373 1 269 1 95 1 223 1 177 1 110 1 55 1 150 1 23 1 
322 1 
95 1 223 2 322 1 193 1 292 1 369 1 134 1 269 2 
27 1 144 1 322 1 104 1 236 2 40 1 170 1 269 5 95 2 223 5 178 2 193 1 65 1 292 2 278 1 134 1 102 1 228 1 46 2 
206 1 158 1 
198 1 372 1 127 2 98 2 312 1 206 2 55 2 150 1 137 1 
111 1 71 1 343 1 
116 1 320 2 249 1 362 2 1 1 237 1 98 1 127 1 93 1 240 1 354 2 376 1 206 1 207 1 314 1 109 1 55 1 161 1 316 1 150 1 305 1 22 1 
320 2 249 1 362 2 1 1 91 1 127 2 93 1 109 1 161 1 55 2 111 1 305 1 331 1 116 1 372 1 237 1 98 2 240 1 354 2 376 1 207 1 316 1 150 2 22 1 
34 1 312 1 206 1 198 1 188 1 368 1 91 1 55 5 372 4 150 4 227 1 98 5 127 5 331 2 
344 1 55 2 372 2 150 2 237 1 23 1 98 2 127 2 
206 1 198 1 55 3 372 3 150 3 98 3 127 3 331 1 
55 1 372 1 150 1 237 1 23 1 98 1 127 1 
312 1 198 1 55 1 372 1 150 1 237 1 98 1 127 1 137 1 
154 1 48 1 320 2 249 2 362 2 1 1 91 1 273 1 127 4 93 1 255 1 109 1 223 1 55 4 161 1 305 1 162 2 229 1 57 1 331 1 346 1 116 1 198 2 85 1 372 3 237 2 88 1 98 4 287 1 240 1 267 1 354 2 269 1 312 1 376 1 206 1 20 1 207 2 177 1 316 1 359 1 101 1 150 4 22 1 271 1 
206 1 188 1 55 2 372 1 150 1 227 1 98 2 127 2 331 1 
198 1 249 1 322 1 91 1 372 3 237 1 273 1 287 1 127 3 98 3 269 1 312 1 223 1 207 1 55 3 150 3 184 1 271 1 331 2 
312 1 198 1 55 2 372 2 111 1 150 2 98 2 127 2 331 1 343 1 
116 1 320 2 249 1 362 2 1 1 237 1 98 1 127 1 93 1 240 1 354 2 376 1 206 1 207 1 109 1 55 1 161 1 316 1 150 1 305 1 22 1 
116 1 234 1 320 2 249 1 362 2 1 1 237 1 98 1 127 1 239 1 93 1 240 1 354 2 376 1 206 1 207 1 109 1 55 1 161 1 150 1 305 1 
214 1 71 2 218 1 255 1 343 2 111 2 162 2 306 1 229 1 346 1 231 1 261 1 284 1 85 4 202 1 87 1 19 1 267 1 20 1 121 1 122 2 359 1 101 2 296 1 
344 1 207 1 55 1 372 1 150 1 237 1 98 1 127 1 
257 1 112 1 
257 1 112 1 
39 1 275 1 
39 1 275 1 
39 1 275 1 
257 1 112 1 58 1 
221 1 257 1 112 1 
251 1 257 2 39 1 112 2 352 1 275 1 
257 1 112 1 58 1 
257 1 112 1 58 1 
281 1 257 1 112 1 
281 1 257 1 112 1 
281 1 257 1 112 1 
124 1 28 1 127 2 128 1 76 1 221 1 302 1 223 1 224 1 225 1 257 1 55 2 112 1 230 1 260 1 200 1 372 2 98 2 174 1 269 1 206 1 205 1 150 2 317 1 
341 1 124 2 103 1 322 1 200 1 260 3 352 1 18 1 374 1 269 2 76 2 129 2 64 1 223 2 224 2 257 2 112 2 317 2 181 1 
258 1 290 1 15 1 
258 1 197 1 15 1 
290 2 197 1 15 3 360 1 210 1 175 1 
166 1 290 1 197 1 15 2 360 1 175 1 
290 1 197 1 15 2 360 1 175 2 
28 1 0 1 322 2 191 2 128 1 75 2 95 4 130 3 223 5 193 1 304 2 278 3 134 1 36 1 306 1 136 1 144 1 199 1 236 1 284 1 350 1 202 1 174 1 375 1 269 5 178 1 121 1 292 1 147 1 67 1 102 2 46 1 
95 1 223 1 84 1 148 1 92 1 269 1 
28 1 322 3 0 1 191 1 75 2 95 2 223 3 130 4 193 1 278 3 304 2 36 1 228 1 306 1 199 2 236 1 284 1 202 1 375 1 269 3 178 1 121 1 147 1 67 1 102 2 46 1 
28 2 322 4 0 1 191 2 160 1 75 4 95 3 130 7 223 4 193 1 304 4 278 5 36 2 228 1 306 2 83 1 199 3 236 1 284 2 202 2 269 4 375 1 176 1 178 1 121 2 147 1 67 1 102 4 46 1 
362 1 283 1 158 1 
362 1 140 1 
245 1 
320 1 362 1 354 1 
362 1 4 1 
320 1 362 1 
348 1 320 1 362 3 283 2 72 1 354 1 
259 1 261 2 284 1 85 7 202 1 30 1 300 1 268 1 241 1 220 1 244 1 192 1 329 2 122 4 101 3 296 3 114 1 
259 1 261 2 284 1 85 7 202 1 30 1 300 1 268 1 241 1 220 1 244 1 192 1 329 2 122 4 101 3 296 3 114 1 
259 1 261 2 284 1 85 7 202 1 30 1 353 1 300 1 268 1 241 1 220 1 244 1 192 1 329 2 122 4 101 3 296 3 114 1 
155 1 69 1 30 1 325 1 190 1 300 1 255 1 33 1 220 2 329 3 192 2 162 2 36 3 306 3 229 1 346 1 114 2 259 5 143 3 145 1 261 5 85 31 284 4 202 4 16 1 241 1 268 2 20 1 244 1 121 3 122 16 101 15 208 4 296 10 
20 1 329 1 192 1 85 1 122 1 162 2 229 1 309 1 346 1 255 1 114 1 371 1 
342 1 2 1 93 1 73 1 366 1 219 1 109 1 56 1 345 1 138 1 258 1 167 1 116 1 197 1 38 2 41 1 86 1 15 2 240 1 310 1 311 1 290 1 376 1 355 1 293 1 210 1 297 1 
342 1 2 1 93 1 366 1 219 1 109 1 345 2 138 1 258 1 233 1 167 1 116 1 197 1 38 3 86 1 15 2 240 1 310 1 311 1 290 1 376 1 355 1 291 1 293 2 248 1 210 1 297 1 
258 1 197 1 116 1 167 1 342 1 38 2 2 1 15 2 240 1 93 1 366 1 311 1 290 1 376 1 109 1 291 1 355 1 293 2 345 1 248 1 210 1 138 1 
320 1 362 1 2 2 93 1 219 1 109 1 52 1 161 1 367 1 345 1 138 2 233 1 12 1 116 1 167 2 38 1 86 1 169 1 240 1 376 1 355 2 294 1 213 1 
342 1 2 1 93 1 366 1 219 1 109 1 56 1 345 1 138 1 258 1 167 1 116 1 197 1 38 1 41 1 86 1 15 2 240 1 310 1 311 1 290 1 376 1 355 1 291 1 210 1 297 1 
54 1 
249 1 126 2 299 1 127 1 93 2 130 2 193 1 55 1 134 3 142 2 144 1 199 2 265 1 98 1 269 5 207 1 356 2 358 1 67 1 102 2 271 1 213 1 320 1 322 2 362 1 216 2 217 1 157 2 365 1 223 5 109 1 328 1 161 2 278 2 227 1 113 1 81 1 332 2 280 2 232 1 116 2 333 1 236 1 169 1 237 1 287 1 240 1 289 4 376 2 120 1 178 1 292 6 45 1 246 1 46 1 
249 1 333 1 217 1 299 1 237 1 287 1 127 1 98 1 269 3 289 2 207 1 223 3 356 1 292 2 55 1 358 1 369 1 134 1 45 1 227 1 271 1 81 1 
249 1 322 1 217 1 299 1 127 1 223 3 193 1 55 1 369 1 227 1 134 1 81 1 332 1 333 1 237 1 98 1 287 1 269 3 289 3 207 1 292 1 358 1 45 1 271 1 
249 1 322 1 217 1 299 1 127 1 223 3 193 1 55 1 369 1 134 1 227 1 81 1 332 1 280 1 333 1 237 1 98 1 287 1 269 3 289 3 207 1 356 1 292 2 358 1 45 1 271 1 
249 1 126 2 299 1 127 1 193 5 55 1 134 3 142 2 61 1 144 1 199 2 98 1 265 1 269 5 207 1 356 4 358 1 271 1 209 1 102 1 322 5 217 1 216 2 157 2 276 1 365 1 223 5 369 1 278 1 227 1 163 1 81 1 332 4 280 4 333 1 236 1 237 1 287 1 289 6 178 1 292 7 45 1 247 1 46 1 
249 1 322 2 126 2 216 2 217 1 157 2 299 1 127 1 365 1 130 2 223 4 328 1 193 1 55 1 278 1 134 2 227 1 81 1 332 2 280 2 142 2 333 1 144 1 199 2 236 1 237 1 265 1 98 1 287 1 269 4 289 4 207 1 356 2 178 1 292 4 358 1 45 1 102 1 271 1 46 1 
249 1 322 1 126 2 216 2 217 1 157 2 299 1 127 1 365 1 276 1 223 4 193 1 55 1 278 1 134 2 227 1 163 1 81 1 332 2 280 2 142 2 333 1 144 1 199 2 236 1 237 1 265 1 98 1 287 1 269 4 289 4 207 1 356 2 178 1 292 4 358 1 45 1 102 1 271 1 209 1 46 1 
249 1 322 1 126 2 216 2 217 1 157 2 299 1 127 1 365 1 276 1 223 4 193 1 55 1 278 1 134 2 227 1 163 1 81 1 332 2 280 2 142 2 333 1 144 1 199 2 236 1 237 1 265 1 98 1 287 1 269 4 289 4 207 1 356 2 178 1 292 4 358 1 45 1 102 1 271 1 209 1 46 1 
249 1 333 1 217 1 299 1 237 1 287 1 127 1 98 1 269 2 289 2 207 1 223 2 303 1 66 1 55 1 358 1 45 1 227 1 271 1 81 1 
249 1 322 1 126 2 216 2 217 1 157 2 299 1 127 1 365 1 276 1 223 4 193 1 55 1 278 1 134 2 227 1 163 1 81 1 332 3 142 2 280 3 61 1 144 1 333 1 199 2 236 1 237 1 265 1 98 1 287 1 269 4 289 5 207 1 178 1 356 3 292 5 358 1 45 1 102 1 271 1 209 1 46 1 
249 1 322 1 126 2 216 2 217 1 157 2 299 1 127 1 365 1 276 1 223 4 193 1 55 1 278 1 134 2 227 1 163 1 81 1 332 3 142 2 280 3 61 1 144 1 333 1 199 2 236 1 237 1 265 1 98 1 287 1 269 4 289 5 207 1 178 1 356 3 292 5 358 1 45 1 102 1 271 1 209 1 46 1 
249 1 322 1 126 2 216 2 217 1 299 1 127 1 130 2 223 4 328 1 193 1 55 1 278 1 134 2 227 1 80 1 81 1 332 2 280 2 333 1 144 1 236 1 237 1 265 1 98 1 287 1 269 4 289 4 207 1 315 2 356 2 178 1 292 4 357 2 358 1 45 1 102 1 271 1 46 1 
30 1 71 1 158 1 255 1 343 1 220 1 329 1 111 1 162 2 229 1 346 1 231 1 261 2 284 1 85 6 202 1 267 1 241 1 268 1 20 1 206 2 244 1 122 3 359 1 101 3 296 2 
154 1 29 1 71 3 326 1 255 2 6 1 111 3 162 4 229 2 346 2 115 1 143 1 85 4 263 1 237 1 267 1 20 2 206 1 122 1 359 2 101 3 151 1 208 1 
154 1 320 2 249 1 362 2 323 1 1 1 91 1 127 2 93 1 255 1 343 1 109 1 6 1 161 1 55 2 305 1 162 2 135 1 331 1 229 1 346 1 116 1 372 1 85 2 237 1 98 2 240 1 89 1 267 1 354 2 376 1 206 1 207 1 314 1 20 1 316 1 122 1 359 1 150 2 101 1 22 1 212 1 
48 2 249 2 1 2 91 1 51 1 253 1 127 3 93 3 255 3 343 7 6 1 55 3 305 2 306 2 346 3 259 4 261 4 202 3 98 3 267 3 204 2 268 1 354 4 206 2 20 3 207 2 316 2 359 3 101 10 150 3 22 2 154 1 320 4 323 1 362 4 30 1 71 7 220 1 109 2 329 1 161 1 111 7 162 6 36 2 229 3 331 1 116 3 372 1 85 20 284 3 237 2 240 2 241 1 376 3 291 1 244 1 121 2 122 10 43 2 180 2 183 1 296 8 298 2 
154 1 49 1 320 2 362 3 323 1 127 1 93 7 73 1 255 2 109 2 53 1 132 1 55 1 161 2 162 4 331 1 229 2 165 1 346 2 231 1 116 8 372 1 85 2 169 1 98 1 266 2 240 2 267 2 376 8 20 2 291 1 122 1 359 2 150 1 101 1 68 1 211 1 379 1 213 1 
71 1 127 1 255 1 343 1 6 1 55 1 111 1 162 2 36 1 306 1 229 1 346 1 198 1 261 1 372 1 284 1 85 3 202 1 98 1 267 1 312 1 20 1 121 1 122 1 359 1 150 1 101 2 90 1 296 1 
259 1 85 2 284 1 87 1 71 1 267 1 255 1 343 1 20 1 122 2 111 1 359 1 162 2 306 1 296 1 229 1 346 1 231 1 
214 1 261 1 85 2 202 1 71 1 267 1 255 1 343 1 20 1 121 1 111 1 359 1 101 2 162 2 296 1 229 1 346 1 231 1 
71 2 255 1 343 2 111 2 162 2 36 1 306 1 229 1 346 1 231 1 259 1 261 1 284 1 85 4 202 1 267 1 20 1 121 1 122 2 359 1 101 2 296 2 
259 1 49 1 85 2 284 1 87 1 71 1 267 1 255 1 343 1 20 1 122 2 111 1 359 1 162 2 306 1 296 1 229 1 346 1 
49 1 214 1 261 1 85 2 202 1 71 1 267 1 255 1 343 1 20 1 121 1 111 1 359 1 101 2 162 2 296 1 229 1 346 1 
49 1 71 2 255 1 343 2 111 2 162 2 36 1 306 1 229 1 346 1 259 1 261 1 284 1 85 4 202 1 267 1 20 1 121 1 122 2 359 1 101 2 296 2 
259 1 261 1 284 1 85 4 202 1 71 2 267 1 255 1 343 2 20 1 121 1 122 2 111 2 359 1 101 2 162 2 36 1 306 1 296 2 229 1 346 1 
154 1 48 1 320 2 249 1 323 1 362 2 1 1 127 1 93 1 255 1 109 1 161 1 55 1 305 1 162 2 229 1 346 1 116 1 85 2 237 1 98 1 240 1 267 1 354 2 376 1 206 1 207 1 20 1 122 1 316 1 359 1 101 1 150 1 22 1 
154 1 320 2 249 1 323 1 362 2 1 1 127 1 93 1 255 1 109 1 161 1 55 1 305 1 162 2 96 1 229 1 346 1 234 1 116 1 85 2 237 1 98 1 239 1 240 1 267 1 354 2 376 1 206 1 207 1 20 1 122 1 359 1 101 1 150 1 
71 2 255 1 343 2 6 1 111 2 162 2 36 1 306 1 229 1 346 1 259 1 261 1 284 1 85 4 202 1 267 1 20 1 121 1 122 2 359 1 101 2 296 2 
48 1 320 2 249 1 362 2 1 1 71 2 127 1 93 1 73 1 255 1 343 2 109 1 55 1 111 2 305 1 162 2 36 1 306 1 229 1 346 1 259 1 116 1 261 1 85 4 284 1 202 1 237 1 98 1 240 1 267 1 354 2 376 1 20 1 207 1 121 1 122 2 316 1 359 1 101 2 150 1 22 1 180 1 296 2 
71 1 127 1 255 1 343 1 6 1 55 1 111 1 162 2 36 1 306 1 229 1 346 1 259 1 198 1 372 1 284 1 85 3 202 1 98 1 267 1 312 1 20 1 377 1 121 1 122 2 359 1 101 1 150 1 296 1 
155 1 105 1 74 1 255 2 131 1 277 1 77 2 162 4 36 3 306 3 229 2 346 2 60 1 259 3 349 2 143 1 261 3 85 19 284 3 202 3 17 1 16 1 309 1 20 2 121 3 122 9 123 1 101 10 208 2 296 6 
69 2 250 1 189 1 105 2 255 3 108 1 131 1 277 1 77 4 162 6 36 3 306 3 229 3 346 3 60 1 259 2 347 1 349 1 143 2 261 2 85 26 284 3 202 2 285 1 16 2 309 1 20 3 121 2 122 14 123 2 101 12 44 1 208 2 296 4 
155 1 69 1 250 1 189 1 30 1 105 2 50 1 255 3 220 1 108 1 131 1 277 1 329 1 77 4 162 6 36 4 306 4 229 3 346 3 60 1 347 1 259 4 349 1 143 3 261 4 85 41 284 5 285 1 202 5 17 1 16 3 309 1 268 1 241 1 20 3 244 1 121 4 122 20 123 1 101 21 44 1 208 4 296 8 
155 1 69 2 250 1 189 1 30 1 105 2 50 1 255 4 220 1 108 1 131 1 277 1 329 1 77 4 162 8 36 4 306 4 229 4 346 4 60 1 347 1 259 3 349 1 143 3 261 4 85 38 284 5 285 1 202 4 17 1 16 3 309 1 268 1 241 1 20 4 244 1 121 3 122 20 123 1 101 18 44 1 208 4 296 7 
155 2 69 1 250 1 189 1 30 1 105 1 255 2 220 1 108 1 131 1 277 1 329 1 77 4 162 4 36 7 306 7 37 2 229 2 346 2 60 1 347 1 259 7 349 1 143 4 261 7 85 52 284 8 285 1 202 8 16 2 309 1 268 1 241 1 20 2 244 1 121 7 122 27 123 1 101 25 44 1 208 4 296 14 
47 1 76 1 124 1 64 1 224 1 257 1 112 1 352 1 317 1 181 1 
221 1 225 1 
76 1 124 1 224 1 257 1 272 1 112 1 317 1 194 1 146 1 
31 1 58 1 
281 1 251 1 238 1 
341 1 124 1 322 1 200 1 260 2 352 1 18 1 374 1 269 1 76 1 129 1 64 1 223 1 224 1 257 1 112 1 317 1 181 1 
341 1 124 1 322 1 200 1 260 2 352 1 18 1 374 1 269 1 76 1 129 1 64 1 223 1 224 1 257 1 112 1 317 1 181 1 
341 1 124 1 322 1 200 1 260 2 352 1 18 1 374 1 269 1 76 1 129 1 64 1 223 1 224 1 257 1 112 1 317 1 181 1 
251 1 31 1 58 1 
251 1 31 1 58 1 
281 1 238 1 
281 1 251 1 238 1 
302 1 230 1 
124 1 28 1 127 2 128 1 76 1 221 1 129 1 95 1 302 1 223 1 224 1 225 1 257 1 55 2 112 1 230 1 260 1 372 2 98 2 18 1 174 1 269 1 206 1 205 1 317 1 150 2 378 1 
154 1 320 1 362 1 323 1 127 2 106 1 93 2 255 1 109 1 6 1 53 1 55 2 162 2 229 1 346 1 116 2 85 2 351 1 98 2 266 2 240 1 267 1 335 1 376 2 20 1 100 1 122 1 359 1 101 1 295 1 379 1 
258 1 197 1 116 2 196 1 167 1 342 1 15 2 118 1 240 1 93 2 73 1 366 1 290 1 376 2 109 1 291 1 210 1 195 1 297 1 
258 1 197 1 116 1 167 1 342 1 363 1 15 2 118 1 93 1 240 1 366 1 290 1 376 1 109 1 291 1 210 1 297 1 
320 1 116 1 196 1 167 1 362 1 169 1 240 1 93 1 376 1 109 1 35 1 161 1 294 1 213 1 
258 1 197 1 116 1 196 1 167 1 342 1 15 2 118 1 240 1 93 1 366 1 290 1 376 1 109 1 291 1 210 1 195 1 297 1 
11 1 
322 1 193 1 104 1 278 1 170 1 158 1 102 1 
142 1 144 1 322 2 199 1 236 1 157 1 365 1 269 1 223 1 130 1 178 1 193 1 292 1 278 1 134 1 102 1 46 1 
252 2 93 3 254 2 4 2 130 12 193 2 305 2 304 6 134 3 306 2 140 3 348 1 144 4 199 6 202 2 354 3 269 5 21 1 67 2 102 8 70 2 320 3 362 10 322 8 104 1 274 1 73 1 75 6 109 3 223 5 161 1 278 9 36 2 113 1 370 2 116 3 236 4 283 2 284 2 170 1 171 2 287 2 240 4 288 1 376 3 179 1 178 4 42 2 292 5 121 2 43 2 338 1 340 2 46 4 
322 5 250 1 189 1 108 1 75 5 223 1 130 6 193 2 304 5 278 8 134 1 36 2 306 2 113 1 347 1 143 1 144 2 199 3 236 2 284 2 285 1 202 2 171 1 63 1 16 1 269 1 336 1 178 2 292 1 121 2 67 1 208 1 102 5 340 2 46 2 
127 1 276 1 220 1 223 1 110 1 55 1 278 2 144 1 198 1 236 1 284 2 372 1 202 1 264 1 171 1 237 1 98 1 373 1 268 1 269 1 177 1 244 1 178 1 150 1 23 1 102 2 340 2 46 1 
144 1 322 1 236 1 104 1 170 1 178 1 193 1 278 1 102 1 46 1 
199 5 322 5 284 2 202 2 171 1 75 5 130 10 121 2 43 1 304 5 278 5 36 2 306 2 102 5 340 2 
223 1 322 1 193 1 292 1 134 1 269 1 
320 1 362 1 274 1 93 4 109 1 223 3 161 2 278 2 134 2 228 1 113 2 232 1 116 4 117 1 144 1 236 2 169 1 240 1 269 3 376 4 120 1 178 2 292 4 338 2 67 2 24 1 102 2 46 2 213 1 
154 1 48 1 320 2 249 1 362 2 1 1 127 3 93 1 255 1 109 1 161 1 55 3 305 1 162 2 229 1 346 1 116 1 198 2 85 1 372 2 88 1 237 1 98 3 240 1 267 1 354 2 376 1 206 1 20 1 177 1 207 1 316 1 359 1 101 1 150 3 22 1 
144 1 199 2 322 4 236 1 75 2 130 4 178 1 329 1 193 2 304 2 278 1 67 1 102 2 46 1 113 1 
224 1 317 1 153 1 
64 1 224 1 317 1 230 1 186 1 
224 1 317 1 153 1 
224 1 317 1 153 1 
224 1 317 1 59 1 
224 1 317 1 59 1 
224 1 317 1 59 1 
224 1 317 1 
257 1 112 1 
259 1 69 1 261 2 284 1 85 8 202 1 30 1 255 2 241 1 268 1 220 1 20 2 244 1 329 1 122 4 101 4 162 4 296 3 229 2 346 2 
261 2 284 1 85 6 30 1 202 1 158 1 241 1 268 1 220 1 244 1 329 1 122 3 101 3 296 2 
259 1 261 1 284 1 85 4 202 1 255 1 243 1 20 1 121 1 122 2 101 2 162 2 36 1 306 1 296 2 229 1 346 1 
155 1 259 1 143 1 261 1 85 7 284 1 202 1 16 1 121 1 122 3 101 4 208 2 36 1 306 1 296 2 
69 1 29 1 30 1 255 1 220 2 162 2 229 1 346 1 115 1 259 3 143 1 261 3 284 2 85 15 202 2 264 1 241 1 268 2 20 1 244 1 122 7 101 8 208 1 296 6 
85 1 101 1 208 1 
143 1 85 1 122 1 
259 1 261 2 85 6 284 1 202 1 255 1 243 1 20 1 121 1 43 1 122 3 101 3 162 2 36 1 306 1 229 1 296 3 346 1 
250 1 189 1 255 1 108 1 162 2 36 2 306 2 229 1 346 1 259 1 347 1 143 1 261 1 85 12 284 2 285 1 202 2 16 1 309 1 20 1 121 2 122 6 101 6 208 1 296 2 
259 1 261 1 284 1 85 6 202 1 268 1 220 1 244 1 122 3 101 3 296 2 
259 1 115 1 69 1 261 1 85 3 30 1 268 1 241 1 255 1 220 1 20 1 122 1 101 2 162 2 296 2 229 1 346 1 
259 2 261 3 85 10 284 2 202 2 264 1 309 1 255 1 268 2 220 2 20 1 244 1 122 5 101 5 162 2 229 1 296 5 346 1 
259 1 284 1 85 2 309 1 255 1 20 1 122 2 162 2 306 1 229 1 296 1 346 1 
259 1 261 1 284 1 85 4 202 1 309 1 255 1 20 1 121 1 122 2 101 2 162 2 36 1 306 1 296 2 229 1 346 1 
115 1 259 1 69 1 261 1 85 3 17 1 309 1 255 3 268 1 220 1 20 3 122 1 101 2 162 6 229 3 296 2 346 3 
155 1 69 2 30 1 325 1 33 1 255 5 220 3 329 1 162 10 36 3 306 3 229 5 346 5 115 1 259 5 143 3 145 1 261 7 85 34 284 5 202 5 16 1 17 1 309 1 268 3 241 1 243 1 20 5 244 2 121 3 122 16 101 18 208 4 296 12 
30 1 255 1 220 1 329 1 162 2 229 1 346 1 347 1 143 1 261 2 284 1 85 8 202 1 16 1 309 1 241 1 268 1 20 1 244 1 122 4 101 4 208 1 296 2 
155 1 30 1 255 2 220 1 329 1 162 4 36 1 306 1 229 2 346 2 347 1 259 1 143 1 261 2 85 11 284 2 202 1 16 1 309 1 268 1 241 1 243 1 20 2 244 1 122 6 101 5 208 2 296 3 
69 1 250 1 189 1 30 1 255 3 220 1 108 1 329 1 162 6 36 2 306 2 229 3 346 3 259 1 347 1 143 1 261 3 85 19 284 3 285 1 202 3 16 1 309 1 268 1 241 1 243 1 20 3 244 1 121 2 122 9 101 10 208 1 296 4 
69 1 250 1 189 1 30 1 255 3 220 1 108 1 329 1 162 6 36 2 306 2 229 3 346 3 259 2 347 1 143 1 261 3 85 17 284 3 285 1 202 2 16 1 309 1 268 1 241 1 243 1 20 3 244 1 121 1 122 10 101 7 208 1 296 5 
30 1 255 1 220 1 329 1 162 2 229 1 346 1 347 1 143 1 261 2 284 1 85 8 202 1 16 1 309 1 241 1 268 1 20 1 244 1 122 4 101 4 208 1 296 2 
250 1 189 1 255 1 108 1 162 2 36 2 306 2 229 1 346 1 259 1 347 1 143 1 261 1 85 12 284 2 285 1 202 2 16 1 309 1 20 1 121 2 122 6 101 6 208 1 296 2 
69 2 250 1 189 1 30 1 255 4 220 1 108 1 329 1 162 8 36 2 306 2 229 4 346 4 259 2 347 1 143 1 261 3 85 18 284 3 285 1 202 2 16 1 309 1 268 1 241 1 243 1 20 4 244 1 121 1 122 10 101 8 208 1 296 5 
69 2 250 1 189 1 255 4 108 1 162 8 36 3 306 3 229 4 346 4 259 3 347 1 143 1 261 3 85 16 284 3 285 1 202 2 16 1 17 1 309 1 20 4 121 2 122 9 101 7 208 1 296 6 
259 3 261 3 85 7 284 1 202 1 30 1 241 2 268 3 220 3 244 1 122 3 101 4 296 6 
69 2 250 1 189 1 30 1 255 4 220 1 108 1 329 1 162 8 36 2 306 2 229 4 346 4 259 1 347 1 143 1 261 3 85 18 284 3 285 1 202 2 16 1 17 1 309 1 268 1 241 1 20 4 244 1 121 1 122 10 101 8 208 1 296 4 
206 1 188 1 55 1 227 1 98 1 127 1 307 1 
206 1 188 1 270 1 7 1 55 1 227 1 98 1 127 1 97 1 182 1 307 1 318 1 
376 1 109 1 320 1 116 1 362 1 161 1 169 1 158 1 240 1 93 1 213 1 
320 2 116 1 249 1 362 2 1 1 372 1 237 1 127 2 98 2 240 1 93 1 354 2 376 1 206 1 207 1 109 1 55 2 161 1 305 1 150 2 22 1 331 1 
320 1 362 1 1 1 127 2 93 1 109 1 55 1 331 1 116 1 372 1 237 1 98 2 240 1 354 1 376 1 206 1 338 1 150 1 22 1 151 1 
320 1 362 1 1 1 127 2 93 1 109 1 55 1 331 1 234 1 116 1 372 1 237 1 98 2 240 1 354 1 376 1 206 1 338 1 150 1 151 1 
320 1 362 4 322 1 107 1 93 3 4 1 109 1 223 2 193 1 161 1 305 1 330 1 140 1 116 3 283 1 287 1 240 1 269 2 354 1 376 3 292 1 337 1 338 1 
320 1 116 3 322 1 362 4 283 1 287 1 107 1 240 1 93 3 4 1 354 1 269 2 376 3 223 2 109 1 193 1 42 1 292 1 161 1 338 1 305 1 140 1 
376 1 109 1 116 1 211 1 240 1 93 1 
348 1 116 7 320 2 334 1 362 3 266 1 93 6 240 3 73 1 354 1 376 7 109 2 291 1 132 1 161 2 68 1 211 1 152 1 79 1 165 1 379 1 
48 1 249 1 1 1 127 2 93 1 255 2 343 1 6 1 55 2 305 1 346 2 261 2 202 1 98 2 267 2 268 1 354 2 206 2 20 2 207 1 316 1 359 2 150 2 101 3 22 1 320 2 362 2 30 1 71 1 73 1 220 1 109 1 329 1 111 1 162 4 229 2 331 1 116 1 372 1 284 1 85 6 237 1 240 1 241 1 335 1 376 1 244 1 122 3 180 1 296 2 298 1 
70 1 322 1 362 2 104 1 252 1 274 1 93 1 254 1 95 1 223 3 193 1 161 1 278 1 134 1 140 1 116 1 144 2 236 2 283 1 170 1 287 1 269 3 376 1 178 2 42 1 292 2 102 1 46 2 
348 1 376 2 109 1 320 1 116 2 362 2 283 1 211 1 240 2 288 1 93 2 73 1 354 1 
116 4 320 1 362 1 169 1 364 1 107 1 240 1 93 4 73 1 376 4 109 1 161 1 213 1 
116 2 282 1 320 1 362 1 253 1 93 2 240 2 242 1 354 1 376 2 109 1 338 1 152 1 79 1 
258 1 376 1 197 1 109 1 116 1 161 1 15 1 240 1 93 1 366 1 
376 2 109 1 320 1 116 2 291 1 362 1 351 1 240 1 93 2 73 1 379 1 
116 5 320 2 362 3 169 1 364 1 93 4 240 2 73 1 376 5 109 2 132 1 161 1 338 1 165 1 213 1 379 1 
116 5 320 2 362 3 169 1 364 1 93 4 119 1 240 2 73 1 376 5 109 2 161 1 338 1 165 1 213 1 379 1 
320 2 116 1 234 1 249 1 362 2 1 1 372 1 237 1 127 2 98 2 240 1 93 1 354 2 376 1 206 1 207 1 109 1 55 2 161 1 305 1 150 2 331 1 
348 1 116 1 320 1 334 1 362 1 93 1 240 2 354 1 376 1 109 1 338 1 152 1 79 1 
206 1 308 1 78 1 159 1 139 1 
249 1 322 1 321 1 308 2 237 1 273 1 287 1 159 2 301 1 269 2 95 1 206 1 207 1 223 2 193 1 149 1 78 1 271 1 139 2 
127 1 98 1 106 1 159 1 100 1 55 1 295 1 78 1 139 1 
321 1 149 1 78 1 
201 1 226 1 158 1 279 1 
201 1 38 1 226 1 345 1 86 1 279 1 219 1 
355 1 345 1 138 1 
38 3 201 1 262 2 286 1 41 1 14 1 86 1 219 1 313 1 226 1 345 3 279 1 
201 1 38 2 226 1 293 1 345 2 86 1 172 1 279 1 219 1 
258 1 38 1 13 1 41 1 86 1 15 1 219 1 290 1 345 1 279 1 185 1 
201 1 38 1 41 1 345 1 86 1 279 1 219 1 
201 2 38 1 226 1 41 1 345 1 86 1 219 1 
26 1 201 1 38 2 41 1 86 2 327 1 5 1 219 2 345 2 279 1 
187 1 201 1 38 3 13 1 41 1 86 1 219 1 99 1 256 1 226 1 293 2 345 3 279 2 
258 1 197 1 201 1 38 2 324 1 41 1 15 2 86 1 219 1 290 1 226 1 293 1 345 2 279 1 210 1 
187 1 201 1 38 4 215 1 13 1 41 1 86 2 172 1 219 2 226 1 293 2 345 4 279 2 
201 1 38 1 226 1 41 1 345 1 86 1 279 1 219 1 
187 1 201 2 38 4 262 1 13 1 14 1 86 1 219 1 313 1 226 2 293 2 345 4 9 1 279 3 
201 1 38 2 41 1 203 1 86 1 62 1 32 1 219 1 293 1 226 1 345 2 279 1 
168 1 38 3 201 1 262 2 41 1 14 2 86 1 219 1 313 1 226 1 345 3 279 1 
8 1 279 2 10 1 82 2 
38 1 41 1 345 1 86 1 141 1 219 1 
99 1 201 1 38 2 226 1 293 1 41 1 345 2 86 1 279 1 219 1 
94 1 
201 1 38 1 226 1 41 1 345 1 86 1 279 1 219 1 
38 3 201 1 262 1 41 1 86 1 219 1 99 1 293 1 226 1 345 3 279 1 
187 1 13 1 9 1 279 1 
201 1 279 1 

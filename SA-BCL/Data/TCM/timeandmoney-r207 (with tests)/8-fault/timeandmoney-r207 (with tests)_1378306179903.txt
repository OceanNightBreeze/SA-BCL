#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 235 (247,256) (247,256) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 235 (247,256) (247,256) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 235 (247,256) (247,256) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 235 (247,256) (247,256) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 96 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 235 (29,242) (29,242) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 45 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 105 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 105 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 364 347 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 203 226 152 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
39 1 256 1 247 1 235 1 
39 1 256 1 247 1 235 1 
39 1 256 1 247 1 235 1 
39 1 256 1 247 1 235 1 
39 1 96 1 
85 1 29 1 39 1 156 1 235 1 242 1 
39 1 45 1 
39 1 105 1 
39 1 105 1 
346 1 130 1 97 1 
251 1 71 2 97 1 
295 2 50 1 101 1 33 2 21 2 36 2 318 2 274 2 
94 1 299 1 348 1 50 1 161 1 75 1 321 1 140 1 194 2 274 2 275 1 228 1 99 1 101 1 146 1 33 3 121 1 277 1 278 1 329 1 36 2 281 1 358 2 332 1 209 1 65 1 41 1 339 2 341 1 263 1 295 2 264 2 172 1 21 3 137 1 298 2 318 2 
276 1 215 1 295 1 50 1 33 1 21 1 36 1 318 1 274 1 369 1 
307 1 37 1 309 1 130 1 350 1 97 1 187 1 133 1 295 1 215 1 33 1 92 1 111 1 21 1 
37 2 307 1 130 1 97 1 187 1 133 2 274 1 295 1 215 1 33 1 92 1 111 1 21 1 36 1 318 1 
37 1 236 1 300 1 313 1 133 1 
37 2 236 1 130 1 300 1 110 1 93 1 97 1 133 2 
37 1 236 1 133 1 
37 1 300 1 50 1 133 1 274 1 200 1 276 1 215 1 295 1 33 1 21 1 36 1 318 1 369 1 
97 1 
37 2 236 1 130 1 300 1 296 1 93 1 97 1 133 2 
37 5 87 1 130 1 300 2 312 2 97 1 133 5 108 1 236 2 155 2 81 1 20 1 326 2 227 1 328 1 30 1 100 1 93 1 177 1 
348 1 209 1 75 1 321 1 194 1 286 1 259 1 339 1 274 1 341 1 262 1 263 1 295 1 264 1 146 1 33 2 172 1 21 2 36 1 281 1 
346 1 101 1 
274 1 295 2 101 2 33 2 267 1 21 2 36 1 157 1 318 1 
129 1 286 1 103 1 
209 1 348 1 75 1 321 1 194 1 339 1 341 1 250 1 263 1 264 1 101 1 146 1 33 1 172 1 21 1 281 1 
295 3 101 1 33 3 21 3 259 1 36 3 318 1 274 3 
276 1 215 1 295 1 33 1 21 1 36 1 274 1 
215 1 295 1 33 1 267 1 21 1 36 1 318 1 157 1 274 1 
299 1 348 1 50 1 161 1 75 1 180 1 321 1 140 1 194 1 274 3 275 1 302 1 99 1 101 1 146 1 277 1 33 4 278 1 329 1 36 3 281 1 358 2 307 1 37 1 332 1 209 1 259 1 41 1 187 1 133 1 339 1 341 1 262 1 263 1 295 3 215 1 264 1 172 1 92 1 111 1 21 4 298 1 318 2 157 1 
309 1 252 1 295 2 101 1 33 2 21 2 259 1 36 1 274 1 
37 1 307 1 180 1 259 2 97 1 187 1 133 1 274 3 262 1 215 1 295 3 33 3 92 1 68 1 111 1 21 3 36 3 318 1 157 1 
129 1 259 1 286 1 274 2 295 2 33 2 21 2 36 2 157 1 318 1 
209 1 348 1 75 1 321 1 194 1 339 1 341 1 263 1 264 1 101 1 146 1 33 1 172 1 21 1 281 1 
209 1 348 1 221 1 75 1 321 1 194 1 339 1 341 1 165 1 263 1 264 1 101 1 146 1 33 1 21 1 
94 2 139 1 299 1 161 1 140 1 4 1 275 2 9 1 99 1 31 1 329 1 35 1 103 2 12 1 358 2 332 1 129 2 284 1 107 1 258 1 42 1 286 2 340 1 298 4 
215 1 295 1 33 1 21 1 338 1 187 1 36 1 274 1 
309 1 252 1 259 2 274 4 355 1 262 1 295 5 101 1 135 1 33 5 21 5 36 4 157 1 318 1 
276 1 215 1 295 2 33 2 338 1 21 2 36 2 274 2 
231 1 6 1 
231 1 6 1 
164 1 60 1 
164 1 60 1 
164 1 60 1 
149 1 231 1 6 1 
149 1 231 1 6 1 
310 1 231 1 6 1 
164 1 27 1 60 1 231 2 6 2 7 1 
149 1 231 1 6 1 
24 1 231 1 6 1 
24 1 231 1 6 1 
24 1 231 1 6 1 
206 2 37 2 83 2 14 1 345 1 271 1 255 2 231 2 141 1 351 3 196 1 6 2 97 1 7 1 133 2 18 1 154 2 292 2 167 1 
37 1 206 1 83 1 220 1 310 1 26 1 255 1 231 1 141 1 351 1 6 1 314 1 133 1 274 2 143 1 154 1 145 1 57 1 295 2 101 1 33 2 21 2 36 2 218 1 
291 1 156 1 78 1 
85 1 156 1 78 1 
244 1 291 2 85 1 109 1 156 3 368 1 
244 1 85 1 109 1 156 1 134 1 2 1 
291 1 244 2 85 1 109 1 156 2 
22 1 71 3 220 1 49 1 300 4 117 1 53 2 97 2 198 1 80 1 8 1 201 1 81 2 326 1 100 1 30 3 35 1 37 5 251 1 207 2 130 1 283 2 107 1 312 1 42 1 258 1 314 1 133 5 236 1 155 1 93 1 218 1 
22 1 71 1 49 1 300 4 349 1 50 1 117 1 53 1 97 1 274 1 80 1 200 1 81 2 276 1 326 1 30 1 100 1 33 1 35 1 36 1 37 5 360 2 130 1 283 1 312 1 258 1 313 2 133 5 236 3 155 1 294 1 215 1 295 1 21 1 93 1 218 1 318 1 369 1 
71 4 49 1 300 2 117 1 97 3 53 2 198 1 8 1 80 1 81 2 326 1 328 1 30 3 35 1 37 3 251 2 207 1 130 1 283 2 107 1 312 1 42 1 258 1 133 3 155 1 218 1 
0 1 71 7 49 1 300 3 117 1 97 4 53 4 198 1 8 1 80 2 81 4 326 1 328 1 30 5 102 1 35 2 37 4 251 3 207 2 130 1 283 4 107 2 312 1 42 2 258 2 133 4 155 1 218 2 189 1 
346 1 75 1 282 1 
75 1 364 1 
166 1 
263 1 75 1 
341 1 263 1 75 3 279 1 282 2 47 1 
341 1 263 1 75 1 
159 1 75 1 
94 4 123 1 128 1 335 1 107 1 222 1 301 1 223 2 258 1 365 1 79 1 340 3 275 3 293 1 31 2 316 1 298 7 
94 4 123 1 128 1 335 1 107 1 222 1 301 1 223 2 258 1 365 1 79 1 340 3 275 3 293 1 31 2 316 1 298 7 
123 1 94 4 128 1 335 1 162 1 107 1 222 1 301 1 223 2 258 1 365 1 79 1 340 3 275 3 293 1 31 2 316 1 298 7 
319 3 95 4 94 16 190 1 161 1 140 1 222 2 301 2 223 3 272 1 352 1 79 1 197 1 324 1 275 15 80 3 99 1 31 5 35 3 123 1 358 2 332 1 127 1 128 1 335 2 285 1 107 4 365 1 258 4 42 3 340 10 293 5 316 2 298 31 
94 5 161 2 140 2 222 1 223 2 301 1 79 1 275 4 99 2 31 3 182 1 184 1 358 4 123 1 332 2 127 1 128 1 335 1 107 1 258 1 340 4 293 1 316 1 298 9 
325 1 39 1 264 1 194 1 34 1 339 1 
114 1 192 1 160 1 321 1 194 1 78 1 273 2 248 1 325 1 32 3 122 1 183 1 104 1 331 3 85 1 209 1 336 1 363 1 257 1 132 1 339 1 234 1 291 1 156 2 264 1 91 1 173 1 317 1 368 1 46 1 
114 1 85 1 331 2 192 1 209 1 160 1 321 1 336 1 194 1 78 1 132 1 339 1 273 2 234 1 248 1 325 1 291 1 156 2 264 1 32 2 91 1 173 1 122 1 368 1 104 1 
192 2 270 1 179 1 75 1 246 1 321 1 194 1 325 2 146 1 32 1 183 1 331 1 148 1 209 1 363 1 339 1 234 2 366 1 263 1 264 1 91 2 317 1 216 1 
325 1 39 1 264 1 194 1 336 1 339 1 
238 1 
320 2 269 2 321 1 97 2 144 1 326 1 59 1 100 1 146 2 13 1 187 1 339 2 153 2 290 1 236 6 155 1 295 1 111 1 112 2 21 1 71 2 115 2 350 1 75 1 74 1 194 2 195 4 117 1 119 2 81 2 357 1 30 2 33 1 204 1 37 5 307 1 251 2 309 1 254 2 209 1 130 1 210 1 89 1 312 1 133 5 366 1 261 1 315 1 263 1 215 1 264 2 92 1 216 1 93 3 48 1 
307 1 37 3 269 1 309 1 210 1 350 1 74 1 89 1 195 2 187 1 133 3 290 1 236 2 215 1 295 1 296 1 33 1 92 1 111 1 21 1 93 1 204 1 
307 1 37 3 309 1 254 1 130 1 210 1 350 1 74 1 89 1 195 3 97 1 187 1 133 3 290 1 236 1 215 1 295 1 296 1 33 1 92 1 111 1 21 1 93 1 204 1 
269 1 350 1 74 1 195 3 97 1 33 1 204 1 37 3 307 1 309 1 254 1 210 1 130 1 89 1 187 1 133 3 290 1 236 2 295 1 215 1 296 1 92 1 111 1 21 1 112 1 93 1 
320 2 115 2 269 4 350 1 74 1 195 6 97 5 199 1 119 2 249 1 81 1 326 1 30 1 100 1 33 1 204 1 37 5 307 1 251 2 230 1 309 1 254 4 130 5 210 1 89 1 312 1 187 1 287 1 133 5 153 2 290 1 261 1 236 7 155 1 295 1 215 1 296 1 92 1 111 1 21 1 112 4 93 3 344 1 48 1 
320 2 269 2 97 2 326 1 100 1 187 1 290 1 153 2 236 4 155 1 295 1 111 1 21 1 112 2 71 2 115 2 350 1 74 1 195 4 119 2 81 1 30 1 33 1 204 1 307 1 37 4 251 2 309 1 254 2 210 1 130 1 89 1 312 1 133 4 261 1 315 1 215 1 92 1 93 2 48 1 
320 2 269 2 115 2 350 1 74 1 195 4 97 1 199 1 119 2 81 1 326 1 30 1 100 1 33 1 204 1 37 4 307 1 251 2 230 1 309 1 254 2 130 1 210 1 89 1 312 1 187 1 133 4 153 2 290 1 236 4 261 1 155 1 295 1 215 1 92 1 111 1 112 2 21 1 93 2 344 1 48 1 
320 2 269 2 115 2 350 1 74 1 195 4 97 1 199 1 119 2 81 1 326 1 30 1 100 1 33 1 204 1 37 4 307 1 251 2 230 1 309 1 254 2 130 1 210 1 89 1 312 1 187 1 133 4 153 2 290 1 236 4 261 1 155 1 295 1 215 1 92 1 111 1 112 2 21 1 93 2 344 1 48 1 
71 2 269 2 115 2 350 1 74 1 195 4 97 1 323 1 81 1 326 1 30 1 100 1 33 1 204 1 63 2 37 4 307 1 230 1 309 1 254 2 130 1 210 1 89 1 151 2 312 1 212 1 187 1 133 4 153 2 290 1 236 4 261 1 155 1 295 1 215 1 92 1 69 1 111 1 112 2 21 1 93 2 
320 2 115 2 269 3 350 1 74 1 195 5 97 1 199 1 119 2 249 1 81 1 326 1 30 1 100 1 33 1 204 1 37 4 307 1 251 2 230 1 309 1 254 3 130 1 210 1 89 1 312 1 187 1 133 4 153 2 290 1 261 1 236 5 155 1 295 1 215 1 92 1 111 1 21 1 112 3 93 2 344 1 48 1 
320 2 115 2 269 3 350 1 74 1 195 5 97 1 199 1 119 2 249 1 81 1 326 1 30 1 100 1 33 1 204 1 37 4 307 1 251 2 230 1 309 1 254 3 130 1 210 1 89 1 312 1 187 1 133 4 153 2 290 1 261 1 236 5 155 1 295 1 215 1 92 1 111 1 21 1 112 3 93 2 344 1 48 1 
269 2 97 1 326 1 100 1 63 2 151 2 187 1 290 1 153 2 236 4 155 1 295 1 111 1 21 1 112 2 71 2 115 2 350 1 74 1 195 4 81 1 30 1 33 1 204 1 307 1 37 4 309 1 254 2 210 1 130 1 89 1 312 1 212 1 133 4 261 1 315 1 215 1 92 1 93 2 
94 3 346 1 299 1 161 1 140 1 222 1 301 1 223 1 79 1 275 3 99 1 31 2 101 2 329 1 103 1 123 1 358 2 332 1 129 1 128 1 284 1 107 1 286 1 258 1 340 2 298 6 
95 3 319 3 94 8 72 1 299 2 161 2 140 2 352 1 272 1 275 6 80 2 303 1 228 1 99 2 101 1 31 1 278 1 329 1 35 2 103 11 358 4 84 1 332 2 129 4 16 1 107 1 286 11 258 2 42 1 340 2 293 1 174 1 298 14 
1 1 94 1 348 1 299 1 75 1 161 1 321 1 194 1 140 1 274 1 275 1 303 1 356 1 250 1 99 1 228 1 101 1 146 1 33 2 278 1 329 1 36 1 281 1 358 2 332 1 209 1 129 1 334 1 259 1 339 1 341 1 262 1 263 1 295 1 264 1 172 1 21 2 298 2 
94 10 321 2 140 3 222 1 223 1 5 2 274 1 275 10 327 2 228 1 99 3 101 2 146 1 277 2 278 1 329 3 103 7 281 2 332 3 336 1 107 3 337 1 17 1 286 7 339 3 340 8 66 2 341 2 188 2 293 4 295 1 21 3 298 20 299 3 348 2 161 3 75 2 194 3 301 1 79 1 118 1 80 2 303 1 31 4 33 3 35 2 36 1 123 1 358 6 128 1 209 2 129 7 259 1 258 3 42 2 262 1 263 2 264 3 172 2 
94 1 299 2 75 3 161 2 321 2 194 8 140 2 274 1 275 1 225 1 99 2 228 1 146 2 33 1 278 1 34 1 329 2 280 1 36 1 358 4 332 2 126 1 209 2 284 1 65 2 336 1 259 1 288 1 339 8 366 1 237 1 295 1 263 2 264 7 367 1 21 1 216 1 298 2 138 1 
94 1 299 1 161 1 140 1 274 1 80 1 275 2 303 1 99 1 31 1 33 1 329 1 35 1 103 1 36 1 358 2 332 1 129 1 186 1 107 1 286 1 258 1 42 1 340 1 295 1 21 1 298 3 318 1 157 1 
358 2 94 2 332 1 139 1 129 1 299 1 284 1 161 1 140 1 286 1 258 1 340 1 293 1 99 1 329 1 298 2 35 1 103 1 
358 2 12 1 332 1 129 1 299 1 284 1 161 1 140 1 107 1 286 1 42 1 340 1 275 2 99 1 31 1 329 1 298 2 103 1 
94 2 299 1 161 1 140 1 80 1 275 2 99 1 31 1 329 1 35 1 103 2 358 2 332 1 129 2 284 1 107 1 258 1 286 2 42 1 340 2 293 1 298 4 
358 2 94 2 332 1 139 1 129 1 299 1 161 1 140 1 286 1 258 1 340 1 237 1 293 1 99 1 329 1 298 2 35 1 103 1 
358 2 12 1 332 1 129 1 299 1 161 1 140 1 107 1 286 1 42 1 340 1 275 2 237 1 99 1 31 1 329 1 298 2 103 1 
94 2 299 1 161 1 140 1 80 1 275 2 99 1 31 1 329 1 35 1 103 2 358 2 332 1 129 2 107 1 258 1 286 2 42 1 340 2 237 1 293 1 298 4 
94 2 299 1 161 1 140 1 80 1 275 2 99 1 31 1 329 1 35 1 103 2 358 2 332 1 129 2 107 1 258 1 286 2 42 1 340 2 293 1 298 4 
94 1 348 1 299 1 75 1 161 1 321 1 194 1 140 1 275 1 228 1 99 1 101 1 146 1 277 1 33 1 278 1 329 1 281 1 358 2 332 1 209 1 339 1 341 1 263 1 264 1 172 1 21 1 298 2 
94 1 348 1 299 1 221 1 75 1 161 1 321 1 194 1 140 1 275 1 165 1 228 1 99 1 101 1 146 1 33 1 278 1 329 1 358 2 332 1 209 1 253 1 339 1 341 1 263 1 264 1 21 1 298 2 
94 2 299 1 161 1 140 1 80 1 275 2 303 1 99 1 31 1 329 1 35 1 103 2 358 2 332 1 129 2 107 1 258 1 286 2 42 1 340 2 293 1 298 4 
94 2 348 1 299 1 75 1 161 1 321 1 194 1 140 1 275 2 80 1 327 1 99 1 31 1 277 1 33 1 34 1 329 1 35 1 103 2 281 1 358 2 332 1 129 2 209 1 107 1 42 1 286 2 258 1 339 1 340 2 341 1 293 1 263 1 264 1 172 1 21 1 298 4 
94 2 299 1 161 1 140 1 274 1 275 1 80 1 303 1 99 1 33 1 329 1 35 1 36 1 103 1 358 2 332 1 129 1 333 1 107 1 42 1 258 1 286 1 340 1 293 1 295 1 21 1 298 3 318 1 157 1 
94 20 319 3 95 4 140 3 222 1 223 1 272 1 54 1 98 4 275 21 55 1 181 2 226 1 99 3 184 1 332 3 15 1 107 5 152 1 340 8 293 4 67 1 298 41 161 3 76 1 301 1 352 3 79 1 80 4 202 1 31 4 203 1 35 4 358 6 123 1 127 1 128 1 131 1 311 1 211 1 42 4 258 5 266 1 
95 4 319 3 94 20 161 4 76 1 140 4 222 1 223 1 301 1 352 3 272 1 79 1 54 1 98 4 275 18 80 4 55 1 226 1 181 2 202 1 99 4 31 4 203 1 35 4 184 1 123 1 358 8 332 4 127 2 128 1 15 1 311 1 131 1 211 1 107 4 258 5 42 3 152 1 340 7 293 3 67 1 266 1 298 38 
95 4 319 4 94 27 161 2 140 2 222 1 223 1 301 1 352 2 272 2 79 1 54 1 98 4 275 25 80 7 55 1 226 1 181 1 202 1 99 2 31 7 203 1 35 7 184 1 123 1 358 4 332 2 127 1 128 1 15 1 311 1 131 1 211 1 16 2 107 8 258 8 42 7 152 1 340 14 293 7 266 1 298 52 
95 2 319 1 94 9 161 2 76 1 140 2 352 1 272 1 54 1 98 2 275 10 80 3 181 1 202 1 58 1 99 2 31 3 35 3 184 1 358 4 332 2 15 1 131 1 211 2 107 3 258 3 42 3 340 6 293 3 298 19 
94 14 95 2 319 2 161 3 140 3 352 2 54 1 98 4 275 12 80 3 55 1 226 1 181 2 202 1 99 3 31 2 203 1 35 3 184 1 358 6 332 3 127 2 15 1 131 2 311 1 211 1 107 2 258 3 42 2 152 1 340 4 293 2 266 1 298 26 
206 1 154 1 83 1 125 1 271 1 255 1 231 1 6 1 167 1 7 1 
310 1 26 1 
206 1 168 1 154 1 83 1 25 1 255 1 229 1 231 1 6 1 
37 1 206 1 83 1 14 1 345 1 271 1 255 1 231 1 141 1 351 2 6 1 97 1 7 1 133 1 18 1 154 1 292 1 167 1 
37 1 206 1 83 1 14 1 345 1 271 1 255 1 231 1 141 1 351 2 6 1 97 1 7 1 133 1 18 1 154 1 292 1 167 1 
37 1 206 1 83 1 14 1 345 1 271 1 255 1 231 1 141 1 351 2 6 1 97 1 7 1 133 1 18 1 154 1 292 1 167 1 
170 1 149 1 27 1 
170 1 149 1 27 1 
24 1 163 1 
24 1 27 1 163 1 
143 1 57 1 
220 1 300 1 26 1 351 1 6 1 274 2 143 1 145 1 57 1 101 1 33 2 36 2 37 1 206 1 14 1 83 1 64 1 310 1 255 1 231 1 133 1 314 1 154 1 292 1 295 2 21 2 218 1 
170 1 149 1 
24 1 27 1 163 1 
94 1 243 1 299 1 75 1 161 1 321 1 194 2 140 1 116 1 275 1 303 1 99 1 228 1 33 2 278 1 329 1 358 2 332 1 209 1 106 1 65 2 288 1 339 2 260 1 214 1 263 1 295 2 264 2 367 1 21 2 298 2 
114 1 85 1 209 1 321 1 336 1 194 2 257 1 78 1 339 2 234 1 28 1 291 1 213 1 156 2 264 2 136 1 34 1 368 1 104 1 
114 1 85 1 359 1 209 1 321 1 336 1 194 1 257 1 78 1 339 1 234 1 291 1 213 1 156 2 264 1 368 1 104 1 
209 1 179 1 75 1 321 1 194 1 339 1 234 1 366 1 28 1 10 1 263 1 264 1 146 1 216 1 
114 1 85 1 209 1 321 1 336 1 194 1 257 1 78 1 339 1 234 1 28 1 291 1 213 1 156 2 264 1 136 1 368 1 104 1 
147 1 
81 1 346 1 87 1 130 1 30 1 97 1 177 1 
320 1 71 1 97 2 119 1 81 1 326 1 30 1 100 1 37 1 251 1 130 1 312 1 133 1 236 1 155 1 93 1 48 1 
347 1 209 2 75 1 321 1 312 1 194 1 364 1 339 1 155 1 341 1 326 1 263 1 264 1 100 1 146 1 343 1 47 1 
95 1 319 1 71 6 352 1 354 1 53 4 97 4 80 1 81 3 226 1 326 2 30 5 100 2 203 1 35 1 37 1 251 3 208 1 130 1 283 4 311 1 312 2 107 1 258 1 42 1 152 1 133 1 236 1 155 2 266 1 93 1 
50 1 222 1 301 1 79 1 274 1 199 1 200 1 276 1 81 2 326 1 100 1 30 2 33 1 61 1 36 1 37 1 208 2 312 1 107 1 258 2 133 1 155 1 215 1 295 1 342 1 21 1 318 1 369 1 
87 1 130 1 312 1 97 1 155 1 81 1 326 1 100 1 30 1 177 1 
71 10 251 5 208 2 283 5 107 2 5 1 258 2 42 2 53 5 97 5 80 2 81 5 30 5 61 1 35 2 
37 1 236 1 130 1 93 1 97 1 133 1 
191 1 70 1 23 1 245 2 75 2 321 2 194 4 117 2 142 1 81 2 326 2 59 1 328 1 357 1 100 1 146 2 30 2 13 2 37 3 124 1 38 1 209 3 312 2 232 1 339 4 133 3 366 1 236 4 155 2 341 1 263 2 264 4 216 1 93 2 
348 1 299 1 50 1 75 1 161 1 321 1 140 1 194 1 274 2 275 1 99 1 101 1 146 1 33 3 277 1 278 1 329 1 36 2 281 1 358 2 332 1 209 1 41 1 339 1 341 1 295 2 263 1 264 1 172 1 21 3 298 1 318 2 
13 1 251 2 71 4 130 2 283 2 312 1 223 1 117 1 53 2 97 4 155 1 81 2 326 1 100 1 30 1 
219 1 154 1 83 1 
219 1 154 1 83 1 
143 1 154 1 83 1 271 1 120 1 
219 1 154 1 83 1 
154 1 83 1 240 1 
154 1 83 1 240 1 
154 1 83 1 240 1 
154 1 83 1 
231 1 6 1 
319 1 95 1 94 4 161 1 140 1 222 1 223 1 301 1 352 1 79 1 275 4 99 1 31 2 184 1 358 2 123 1 332 1 128 1 107 1 258 1 152 1 340 2 298 8 
95 2 319 1 94 6 161 2 140 2 222 1 223 1 301 1 352 1 272 1 79 1 275 5 80 1 99 2 31 2 35 1 184 1 123 1 358 4 332 2 128 1 107 1 258 2 152 1 340 3 293 1 298 11 44 1 
319 1 95 1 94 9 161 3 140 3 222 1 223 1 301 1 352 1 79 1 275 10 80 2 226 1 99 3 31 3 203 1 35 2 184 1 123 1 358 6 332 3 127 1 128 1 311 1 107 3 258 3 42 2 152 1 340 4 293 1 266 1 44 1 298 19 
319 1 95 1 94 10 161 3 140 3 222 1 223 1 301 1 352 1 79 1 275 7 80 2 226 1 99 3 31 3 203 1 35 2 184 1 123 1 358 6 332 3 127 1 128 1 311 1 107 2 258 3 42 1 152 1 340 5 293 2 266 1 44 1 298 17 
319 1 95 1 94 4 161 1 140 1 222 1 223 1 301 1 352 1 79 1 275 4 99 1 31 2 184 1 358 2 123 1 332 1 128 1 107 1 258 1 152 1 340 2 298 8 
319 1 95 1 94 6 161 1 140 1 352 1 275 6 80 2 226 1 99 1 31 1 203 1 35 2 184 1 358 2 332 1 311 1 107 2 258 2 42 2 152 1 340 2 293 1 266 1 298 12 
95 1 319 1 94 10 161 4 140 4 222 1 223 1 301 1 352 1 79 1 275 8 80 2 226 1 99 4 31 3 203 1 35 2 184 1 123 1 358 8 332 4 127 2 128 1 311 1 107 2 258 3 42 1 152 1 340 5 293 2 266 1 298 18 44 1 
95 1 319 1 94 9 161 4 140 4 76 1 352 1 275 7 80 3 226 1 99 4 31 3 203 1 35 3 184 1 358 8 332 4 127 2 311 1 107 2 258 3 42 2 152 1 340 6 293 3 266 1 298 16 
123 2 94 3 128 1 107 1 222 3 301 3 258 1 79 1 340 6 275 4 293 3 31 3 298 7 
95 1 319 1 94 10 161 4 140 4 76 1 222 1 223 1 301 1 352 1 79 1 275 8 80 2 226 1 99 4 31 3 203 1 35 2 184 1 123 1 358 8 332 4 127 2 128 1 311 1 107 2 258 3 42 1 152 1 340 4 293 1 266 1 298 18 
94 4 358 4 123 1 332 2 127 1 128 1 161 2 107 1 140 2 222 1 223 1 301 1 258 1 79 1 340 3 275 4 293 1 99 2 31 2 298 8 
123 1 94 3 346 1 128 1 107 1 222 1 223 1 301 1 258 1 79 1 340 2 275 3 31 2 298 6 
358 2 94 2 332 1 161 1 107 1 140 1 42 1 258 1 340 2 275 2 80 1 293 1 99 1 31 1 44 1 35 1 298 4 
95 2 319 1 94 3 107 1 42 1 352 1 272 1 258 1 340 2 275 4 80 1 293 1 31 1 298 7 35 1 
94 11 319 2 95 2 161 2 140 2 222 2 223 1 301 2 272 1 79 1 80 2 275 12 99 2 31 5 35 2 123 1 358 4 332 2 127 2 128 1 88 1 107 3 16 1 258 3 42 2 340 9 293 4 174 1 298 23 
275 1 95 1 298 1 
94 1 319 1 298 1 
358 2 94 3 332 1 161 1 140 1 107 1 5 1 258 1 42 1 340 3 275 3 80 1 293 1 99 1 31 2 44 1 298 6 35 1 
319 1 95 1 94 6 161 1 140 1 352 1 275 6 80 2 226 1 99 1 31 1 203 1 35 2 184 1 358 2 332 1 311 1 107 2 258 2 42 2 152 1 340 2 293 1 266 1 298 12 
94 3 107 1 222 1 301 1 258 1 79 1 340 2 275 3 293 1 31 1 298 6 
94 1 123 1 358 2 332 1 127 1 128 1 88 1 161 1 140 1 222 1 301 1 340 2 275 2 293 1 99 1 31 1 298 3 
358 2 94 5 332 1 161 1 140 1 107 2 222 2 301 2 258 2 79 1 340 5 275 5 293 2 99 1 342 1 31 3 298 10 184 1 
358 2 94 2 332 1 161 1 140 1 258 1 340 1 293 1 99 1 35 1 298 2 184 1 
358 2 94 2 332 1 161 1 107 1 140 1 42 1 258 1 340 2 275 2 80 1 293 1 99 1 31 1 35 1 298 4 184 1 
358 6 94 1 332 3 127 1 88 1 161 3 76 1 140 3 222 1 301 1 340 2 275 2 293 1 99 3 31 1 298 3 184 1 
190 1 95 4 319 3 94 16 161 5 76 1 140 5 222 3 223 1 301 3 352 1 272 1 79 2 324 1 275 18 80 3 99 5 31 7 35 3 184 1 123 1 358 10 332 5 127 2 128 1 88 1 285 1 107 5 258 5 42 3 340 12 293 5 44 1 298 34 
309 1 252 1 73 1 295 1 101 1 33 1 21 1 
309 1 252 1 73 1 169 1 295 1 101 1 82 1 33 1 11 1 21 1 217 1 241 1 
366 1 346 1 209 1 263 1 264 1 75 1 146 1 321 1 194 1 216 1 339 1 
348 1 209 1 75 1 321 1 194 1 259 1 339 1 274 1 341 1 263 1 295 1 264 1 101 1 146 1 33 2 21 2 36 1 281 1 
307 1 159 1 245 1 348 1 209 1 75 3 321 1 194 1 52 1 259 1 187 1 339 1 274 1 341 2 215 1 263 2 295 2 264 1 101 1 33 2 21 2 36 2 281 1 
245 1 159 1 348 1 75 3 321 1 51 1 194 2 52 1 274 1 165 1 101 1 33 2 36 2 307 1 209 1 259 1 187 1 339 2 341 2 295 2 263 2 215 1 264 2 21 2 
245 1 159 1 75 4 321 1 51 1 194 3 52 1 97 1 146 1 304 1 282 1 37 2 308 1 209 1 130 1 364 1 339 3 133 2 236 1 341 1 263 1 264 3 92 1 
37 2 159 1 245 1 209 1 130 1 75 4 321 1 51 1 194 3 52 1 364 1 97 1 133 2 339 3 236 1 341 1 263 1 264 3 146 1 92 1 205 1 282 1 
209 1 264 1 321 1 194 1 280 1 339 1 
268 1 124 1 126 1 38 1 209 3 75 3 65 1 321 2 336 1 194 7 288 1 339 7 225 1 341 1 263 2 264 6 146 2 34 1 280 1 138 1 47 1 
94 3 321 1 140 2 222 1 223 1 274 1 275 3 327 1 99 2 101 2 277 1 329 2 103 1 281 1 332 2 107 1 286 1 339 1 340 2 66 1 341 1 295 1 21 2 298 6 299 2 348 1 161 2 75 1 194 1 301 1 79 1 303 1 31 2 33 2 34 1 36 1 358 4 123 1 129 1 209 1 128 1 259 1 258 1 260 1 263 1 264 1 172 1 
70 1 300 1 75 2 194 1 97 1 81 1 326 2 30 1 146 1 100 2 305 1 205 1 282 1 37 3 87 1 130 1 312 2 364 1 339 1 133 3 43 1 236 2 155 2 264 1 297 1 92 1 93 1 177 1 
209 2 75 1 321 1 194 1 339 1 341 1 263 1 264 1 166 1 343 1 280 1 282 1 47 1 
306 1 209 1 75 1 321 1 51 1 194 4 339 4 366 1 263 1 264 4 146 1 34 1 216 1 
124 1 245 1 38 1 209 2 75 1 321 1 194 2 232 1 118 1 339 2 142 1 341 1 263 1 264 2 
114 1 85 1 209 1 156 1 264 1 146 1 321 1 194 1 78 1 339 1 
243 1 209 1 263 1 264 2 75 1 321 1 336 1 194 2 34 1 288 1 339 2 
306 1 245 1 209 2 75 3 321 2 194 5 339 5 288 1 366 1 225 1 263 2 264 4 146 1 216 1 34 1 138 1 
306 1 245 1 209 2 75 3 321 2 194 5 3 1 339 5 288 1 366 1 225 1 263 2 264 4 146 1 216 1 34 1 
348 1 209 1 75 1 321 1 194 1 259 1 339 1 274 1 341 1 165 1 263 1 295 1 264 1 101 1 146 1 33 2 21 2 36 1 
268 1 124 1 245 1 38 1 209 2 75 1 321 1 194 1 339 1 341 1 263 1 264 1 47 1 
106 1 116 1 353 1 224 1 19 1 214 1 295 1 33 1 21 1 
90 1 19 1 171 1 
224 1 19 1 101 1 353 1 113 1 
307 1 37 2 130 1 300 1 180 1 353 2 97 1 187 1 133 2 224 2 90 1 19 1 215 1 171 1 101 1 92 1 111 1 113 2 176 1 
248 1 346 1 160 1 132 1 
248 1 331 1 160 1 32 1 363 1 317 1 132 1 
192 1 91 1 32 1 
331 1 39 1 40 1 362 1 322 1 32 1 62 1 
248 1 86 1 331 2 160 1 32 2 363 1 317 1 132 1 273 1 
39 1 
39 1 
39 1 
39 1 150 1 
331 2 39 1 40 1 233 1 132 1 273 2 56 1 239 1 32 2 185 1 
85 1 39 1 156 1 
86 1 331 2 39 1 40 1 132 1 273 2 56 1 239 1 32 2 158 1 
39 1 40 1 
331 4 40 1 362 1 160 2 322 1 363 1 132 3 273 2 248 2 56 1 239 1 32 4 317 1 62 1 
330 1 331 1 39 1 40 1 361 1 32 1 77 1 273 1 
331 1 39 1 40 1 322 1 265 1 32 1 62 1 
178 1 193 1 175 2 132 2 
39 1 
331 1 39 1 40 1 32 1 185 1 273 1 
289 1 
39 1 
331 1 39 1 40 1 32 1 62 1 
56 1 40 1 239 1 132 1 
248 1 132 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 130 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 1 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1937 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
37 1 38 7 136 1 324 1 297 5 45 1 203 2 274 1 230 1 205 1 249 2 301 1 234 9 122 1 167 1 106 9 24 1 150 4 170 3 172 1 311 1 360 1 361 1 288 2 
37 1 38 7 136 1 324 1 297 5 45 1 203 2 274 1 230 1 205 1 249 2 301 1 234 9 122 1 167 1 106 9 24 1 150 4 170 3 172 1 311 1 360 1 361 1 288 2 
37 1 66 1 38 6 324 2 297 5 45 1 139 1 203 2 274 2 230 2 205 1 249 2 301 1 234 9 122 1 167 1 236 1 282 1 106 9 24 2 345 1 150 4 170 3 172 1 311 1 360 1 112 1 288 2 
37 1 66 1 38 6 324 2 297 5 45 1 139 1 203 2 274 2 230 2 205 1 249 2 301 1 234 9 122 1 167 1 236 1 282 1 106 9 24 2 345 1 150 4 170 3 172 1 311 1 360 1 112 1 288 2 
37 1 66 1 38 7 324 2 297 6 45 1 139 1 203 2 274 2 230 2 205 1 249 2 301 1 234 10 122 1 167 1 236 1 282 1 106 10 24 2 345 1 150 5 170 4 172 1 311 1 360 1 112 1 288 2 
66 1 38 4 324 2 297 4 45 1 139 1 203 2 274 2 230 2 205 1 249 1 301 1 234 7 122 1 167 1 236 1 282 1 106 7 24 2 345 1 150 3 170 2 172 1 311 1 360 1 112 1 288 2 
167 1 37 1 38 3 106 4 324 1 150 2 297 3 170 1 45 1 172 1 203 1 274 1 360 1 230 1 205 1 249 2 288 1 234 4 
106 2 24 1 80 1 345 1 297 1 45 1 172 1 203 1 139 1 274 1 360 1 204 1 230 1 190 1 288 1 234 2 
38 1 106 3 24 1 150 1 297 2 170 1 45 1 172 1 203 2 360 1 288 2 301 1 234 3 
191 1 292 1 78 1 
148 2 333 1 78 1 
278 2 207 2 179 1 175 1 95 2 164 2 296 2 306 2 
362 1 221 1 114 2 261 1 179 1 264 1 94 1 116 2 353 1 41 1 95 2 321 1 296 3 43 1 268 1 326 1 270 1 163 1 231 1 141 1 164 2 166 1 73 1 278 2 207 2 279 2 143 2 304 2 107 1 169 1 306 3 82 1 29 1 175 1 153 1 87 1 155 1 
6 1 278 1 207 1 208 1 179 1 12 1 95 1 164 1 296 1 306 1 
191 1 52 1 105 1 78 1 306 1 296 1 323 1 298 1 12 1 312 1 154 1 300 1 164 1 356 1 
207 1 278 1 191 1 105 1 78 1 95 1 306 1 296 1 323 1 298 2 12 1 312 2 154 1 300 1 164 1 
298 1 374 1 312 1 370 1 218 1 
191 1 298 2 374 1 180 1 312 2 370 1 78 1 331 1 
298 1 312 1 370 1 
207 1 278 1 332 1 208 1 179 1 374 1 95 1 306 1 296 1 6 1 298 1 12 1 312 1 164 1 
78 1 
191 1 298 2 193 1 374 1 180 1 312 2 370 1 78 1 
179 1 180 1 181 4 95 1 69 1 296 1 6 1 200 5 267 2 97 1 44 2 298 5 138 1 12 1 51 1 370 2 102 1 164 1 278 1 207 1 208 1 332 1 16 2 191 2 104 2 374 2 210 1 211 1 342 2 78 2 306 1 79 2 108 1 30 1 86 1 312 5 257 1 196 1 
73 1 207 1 278 1 279 1 362 1 304 1 264 1 94 1 116 1 353 1 107 1 321 1 344 1 306 2 296 2 29 1 48 1 153 1 164 1 103 1 
292 1 175 1 
207 1 278 1 209 1 95 1 306 2 296 2 28 1 175 2 164 2 
48 1 373 1 176 1 
73 1 279 1 362 1 304 1 264 1 94 1 116 1 353 1 107 1 321 1 296 1 306 1 29 1 175 1 153 1 313 1 
278 3 207 3 175 1 95 1 164 3 103 1 296 3 306 3 
6 1 278 1 207 1 12 1 164 1 296 1 306 1 
278 1 207 1 28 1 209 1 12 1 95 1 164 1 296 1 306 1 
362 1 221 1 114 1 261 1 179 1 264 1 94 1 116 1 353 1 41 1 95 2 321 1 296 4 323 1 268 1 326 1 298 1 369 1 12 1 163 1 231 1 300 1 141 1 164 3 103 1 166 1 73 1 278 3 207 3 279 1 143 2 209 1 54 1 304 1 105 1 107 1 344 1 306 4 29 1 312 1 175 1 153 1 154 1 87 1 
7 1 278 1 207 1 52 1 175 1 164 2 296 2 306 2 103 1 
207 3 278 3 209 1 54 1 105 1 95 1 78 1 344 1 306 3 296 3 323 1 298 1 185 1 12 1 312 1 154 1 300 1 164 3 103 2 
207 2 278 2 209 1 95 1 306 2 296 2 48 1 176 1 164 2 103 1 
73 1 279 1 362 1 304 1 94 1 264 1 116 1 353 1 107 1 321 1 296 1 306 1 29 1 175 1 153 1 
73 1 279 1 362 1 304 1 55 1 264 1 116 1 182 1 353 1 107 1 296 1 306 1 29 1 175 1 153 1 
289 1 60 1 351 1 221 1 261 2 114 4 41 1 96 1 42 1 245 1 326 1 270 2 48 2 141 1 166 1 371 1 143 2 373 2 104 1 76 1 281 1 342 1 176 2 87 1 
278 1 207 1 12 1 154 1 164 1 366 1 296 1 306 1 
207 4 278 4 52 1 209 1 95 1 344 1 306 5 296 5 7 1 327 1 175 1 50 1 164 5 103 2 
6 1 278 2 207 2 12 1 366 1 164 2 296 2 306 2 
357 1 277 1 
357 1 277 1 
380 1 140 1 
380 1 140 1 
380 1 140 1 
111 1 357 1 277 1 
171 1 357 1 277 1 
214 1 380 1 368 1 357 2 140 1 277 2 
111 1 357 1 277 1 
111 1 357 1 277 1 
237 1 357 1 277 1 
237 1 357 1 277 1 
237 1 357 1 277 1 
131 2 132 1 144 1 363 1 357 2 78 1 25 1 213 2 266 1 126 1 368 1 9 2 298 2 283 2 109 2 255 3 312 2 277 2 219 1 
207 2 278 2 133 1 132 1 90 1 357 1 161 1 118 1 213 1 296 2 306 2 99 1 9 1 298 1 171 1 283 1 109 1 186 1 269 1 255 1 312 1 175 1 164 2 277 1 
324 1 274 1 230 1 
274 1 230 1 80 1 
324 2 284 1 286 1 230 3 152 1 80 1 
324 1 286 1 230 2 152 1 162 1 80 1 
324 1 286 1 230 2 152 2 80 1 
61 1 133 1 180 1 181 3 118 1 69 1 96 1 200 2 267 1 99 1 298 5 370 1 371 1 333 1 16 1 191 1 252 2 104 1 374 4 19 1 77 2 342 1 78 2 377 1 79 1 148 3 85 1 127 1 129 1 215 1 312 5 347 2 
130 1 241 1 180 1 181 8 69 1 96 3 200 6 267 2 99 4 10 1 298 9 121 1 370 6 15 1 102 1 371 3 333 3 191 1 16 2 252 6 123 5 146 1 104 3 374 7 342 3 78 5 79 2 148 9 85 3 127 1 129 2 215 2 312 9 347 6 218 5 
61 1 179 1 181 3 95 1 296 1 96 1 6 1 200 2 267 1 99 1 298 3 12 1 102 1 164 1 278 1 207 1 371 1 208 1 332 1 191 1 333 2 16 1 252 2 374 2 19 1 104 1 77 1 342 1 78 3 306 1 79 1 148 4 85 1 129 1 215 1 312 3 347 2 
130 1 61 1 181 3 96 1 200 2 267 1 99 1 298 2 102 1 371 1 333 2 16 1 252 2 19 1 374 1 104 1 77 1 342 1 78 2 79 1 148 4 85 1 129 1 215 1 312 2 347 2 
292 1 35 1 
264 1 134 1 
75 1 
29 1 264 1 
73 1 8 1 100 1 29 1 35 2 264 3 
73 1 29 1 264 1 
264 1 159 1 
289 3 261 3 114 7 352 1 104 1 342 1 119 2 27 1 245 2 137 1 120 1 271 1 270 4 30 1 51 1 299 1 196 1 
289 3 261 3 114 7 352 1 104 1 342 1 119 2 27 1 245 2 137 1 120 1 271 1 270 4 30 1 51 1 299 1 196 1 
289 3 350 1 261 3 114 7 352 1 104 1 342 1 119 2 27 1 245 2 137 1 120 1 271 1 270 4 30 1 51 1 299 1 196 1 
289 10 261 15 114 31 260 1 352 5 318 1 119 3 96 3 137 2 245 5 120 1 326 1 270 16 271 2 187 1 51 2 232 1 299 1 141 1 371 3 166 1 143 2 17 1 104 4 342 4 27 1 358 4 346 1 309 1 30 1 85 3 359 3 87 1 196 2 
289 4 166 2 143 4 338 1 260 1 261 4 114 9 352 1 104 1 342 1 119 2 245 3 137 1 120 1 326 2 271 1 270 5 273 1 30 1 51 1 299 1 87 2 196 1 141 2 
89 1 362 1 220 1 92 1 38 1 67 1 265 1 116 1 2 1 353 1 225 1 324 1 297 1 45 1 203 1 274 1 230 2 234 2 279 1 192 1 304 1 106 2 341 1 24 1 80 1 172 1 284 1 360 1 173 1 288 1 
89 1 362 1 156 1 199 1 220 1 92 1 38 2 67 1 116 1 2 1 353 1 225 1 324 1 297 1 45 1 203 1 274 1 230 2 234 3 279 1 304 1 106 3 341 1 24 1 80 1 284 1 360 1 173 1 216 1 288 1 
89 1 362 1 156 1 199 1 220 1 38 2 67 1 116 1 2 1 353 1 225 1 324 1 297 1 45 1 274 1 230 2 234 2 279 1 304 1 106 2 341 1 24 1 80 1 284 1 360 1 
348 1 279 1 362 1 243 1 316 1 304 1 264 1 67 2 160 1 106 1 116 1 353 1 341 2 2 2 24 2 58 1 29 1 328 1 203 1 216 1 153 1 288 1 234 1 
89 1 279 1 362 1 220 1 192 1 156 1 304 1 92 1 67 1 106 1 116 1 353 1 341 1 2 1 24 1 80 1 225 1 324 1 172 1 284 1 203 1 274 1 230 2 173 1 288 1 234 1 
330 1 
197 5 158 3 3 3 69 1 296 2 6 1 200 1 298 4 12 2 70 1 13 1 355 2 300 1 164 2 356 1 207 1 208 1 16 1 18 1 78 1 26 2 306 2 79 1 125 2 83 1 312 4 262 1 179 1 34 1 180 2 181 1 95 1 322 1 323 1 267 1 329 2 370 5 188 1 189 1 278 1 332 1 333 2 191 1 52 1 53 3 147 1 105 1 110 1 154 1 
197 5 262 1 34 1 180 2 181 1 158 3 69 1 3 3 322 1 296 1 200 1 267 1 323 1 298 4 12 1 13 1 70 1 329 2 355 2 188 1 370 5 189 1 300 1 164 1 356 1 191 1 333 2 16 1 52 1 18 1 53 3 147 1 105 1 78 1 26 2 79 1 306 1 125 2 83 1 110 1 312 4 154 1 
197 4 158 2 69 1 3 2 296 2 6 1 200 1 298 4 12 2 206 1 300 1 164 2 356 1 207 1 208 1 16 1 18 1 303 2 78 1 26 2 306 2 79 1 125 2 83 1 256 1 312 4 179 1 180 2 181 1 95 1 322 1 323 1 267 1 188 1 370 4 189 1 278 1 332 1 191 1 52 1 337 2 53 2 105 1 148 2 110 1 154 1 
197 4 243 1 158 2 116 2 353 1 3 2 69 1 296 1 200 2 298 5 12 1 248 1 206 1 355 2 300 1 164 1 356 1 165 1 16 1 18 1 304 2 78 2 26 2 79 1 306 1 125 2 29 1 83 1 215 1 312 5 177 1 362 1 316 1 34 1 180 3 181 2 264 1 322 1 267 1 323 1 329 2 370 6 188 1 189 1 191 1 333 2 279 2 52 1 53 2 340 1 105 1 148 2 110 1 153 2 154 1 
197 2 52 1 18 1 105 1 158 1 306 1 296 1 323 1 298 2 83 1 110 1 12 1 312 2 370 1 188 1 154 1 189 1 300 1 164 1 356 1 
197 3 180 1 296 1 323 1 298 3 12 1 370 1 188 1 189 1 300 1 164 1 356 1 191 1 52 1 18 1 53 1 193 1 105 1 78 1 306 1 83 1 110 1 312 3 154 1 
197 3 180 1 158 1 3 1 296 1 323 1 298 3 12 1 188 1 370 2 189 1 300 1 164 1 356 1 52 1 18 1 53 1 193 1 105 1 306 1 83 1 110 1 312 3 154 1 
197 3 179 1 180 1 158 1 95 1 3 1 296 2 6 1 323 1 298 3 12 2 188 1 370 2 189 1 300 1 164 2 356 1 278 1 207 1 208 1 332 1 191 1 52 1 53 1 193 1 18 1 105 1 78 1 306 2 83 1 110 1 312 3 154 1 59 1 
197 4 158 2 69 1 3 2 296 1 200 1 298 4 12 1 355 2 206 1 300 1 164 1 356 1 16 1 18 1 78 1 26 2 306 1 79 1 125 2 83 1 312 4 34 1 180 2 181 1 322 1 323 1 267 1 329 2 188 1 370 4 189 1 333 2 191 1 52 1 53 2 105 1 148 2 110 1 154 1 
197 4 262 1 34 1 180 2 158 2 181 1 3 2 69 1 322 1 296 1 200 1 323 1 267 1 298 4 12 1 13 1 329 2 370 4 355 2 188 1 189 1 300 1 164 1 356 1 191 1 333 2 16 1 52 1 53 2 18 1 147 1 105 1 78 1 26 2 79 1 306 1 125 2 83 1 110 1 312 4 154 1 
197 4 158 2 69 1 3 2 296 2 6 1 200 1 298 4 12 2 13 1 355 2 300 1 164 2 356 1 207 1 208 1 16 1 18 1 78 1 26 2 306 2 79 1 125 2 83 1 312 4 262 1 179 1 34 1 180 2 181 1 95 1 322 1 267 1 323 1 329 2 188 1 370 4 189 1 278 1 332 1 333 2 191 1 52 1 53 2 147 1 105 1 110 1 154 1 
197 4 157 1 158 2 69 1 3 2 296 2 6 1 200 1 298 4 12 2 300 1 164 2 356 1 207 1 208 1 16 1 18 1 303 2 78 1 26 2 306 2 79 1 125 2 83 1 31 1 256 1 312 4 262 1 179 1 180 2 181 1 95 1 322 1 267 1 323 1 188 1 370 4 189 1 278 1 332 1 191 1 52 1 337 2 53 2 105 1 148 2 110 1 154 1 
166 1 42 1 143 2 120 1 326 1 221 1 292 1 299 1 87 1 41 1 141 1 
289 2 221 1 261 6 114 14 352 1 293 1 318 1 41 2 96 1 245 1 98 1 326 2 48 11 270 8 163 1 232 1 141 2 166 2 371 2 143 4 373 11 104 2 56 1 342 1 358 3 82 1 85 2 359 3 175 1 176 4 239 1 87 2 240 1 
362 1 315 1 221 1 261 1 114 2 65 1 264 1 94 1 116 1 353 1 41 1 321 1 296 2 326 1 201 1 270 1 163 1 141 1 164 1 103 1 73 1 166 1 278 1 207 1 279 1 143 2 304 1 56 1 107 1 344 1 306 2 29 1 82 1 175 1 153 1 176 1 313 1 87 1 
289 8 62 1 156 1 114 20 352 4 1 2 116 3 353 2 119 1 296 3 245 4 120 1 163 1 299 1 164 1 71 2 207 1 166 3 73 2 304 3 306 3 82 1 29 2 30 1 85 2 175 2 176 7 87 3 88 2 362 2 221 3 261 10 223 1 263 1 94 2 264 2 41 3 321 2 96 2 268 2 326 3 48 7 270 10 51 1 141 3 103 1 278 1 371 2 279 3 143 6 373 7 104 3 342 3 56 1 107 2 344 1 153 1 196 1 113 2 
362 2 291 1 156 1 63 1 221 2 114 2 261 1 316 1 243 1 265 1 264 3 116 8 353 2 41 2 296 1 42 1 326 2 46 1 270 1 247 1 163 1 101 1 164 1 141 2 103 1 278 1 207 1 166 2 279 8 143 4 304 7 145 1 235 1 306 1 82 1 29 2 153 2 87 2 155 2 
289 1 221 1 114 3 261 2 224 1 95 1 41 1 296 1 96 1 245 1 326 1 48 1 270 1 141 1 164 1 207 1 166 1 278 1 371 1 143 2 209 1 373 1 104 1 56 1 342 1 306 1 85 1 176 1 87 1 
289 1 166 1 60 1 371 1 143 2 221 1 114 2 352 1 373 1 104 1 41 1 42 1 326 1 48 1 270 2 176 1 87 1 141 1 
289 1 166 1 143 2 221 1 351 1 114 2 261 2 373 1 342 1 41 1 96 1 42 1 245 1 326 1 48 1 176 1 87 1 141 1 
289 2 166 1 371 1 143 2 221 1 261 2 114 4 352 1 373 2 104 1 342 1 41 1 96 1 42 1 245 1 326 1 48 2 270 2 85 1 176 2 87 1 141 1 
289 1 166 1 60 1 371 1 143 2 221 1 114 2 352 1 373 1 145 1 104 1 41 1 326 1 48 1 270 2 176 1 87 1 141 1 
289 1 166 1 143 2 221 1 351 1 114 2 261 2 373 1 145 1 342 1 41 1 96 1 245 1 326 1 48 1 176 1 87 1 141 1 
289 2 166 1 371 1 143 2 221 1 261 2 114 4 352 1 373 2 145 1 104 1 342 1 41 1 96 1 245 1 326 1 48 2 270 2 85 1 176 2 87 1 141 1 
289 2 166 1 371 1 143 2 221 1 261 2 114 4 352 1 373 2 104 1 342 1 41 1 96 1 245 1 326 1 48 2 270 2 85 1 176 2 87 1 141 1 
362 1 221 1 114 2 261 1 94 1 264 1 116 1 353 1 41 1 321 1 296 1 268 1 326 1 270 1 163 1 141 1 73 1 166 1 279 1 143 2 304 1 107 1 306 1 82 1 29 1 175 1 153 1 87 1 
362 1 221 1 114 2 261 1 264 1 182 1 116 1 353 1 183 1 41 1 296 1 326 1 270 1 163 1 141 1 73 1 166 1 279 1 143 2 304 1 55 1 107 1 306 1 82 1 29 1 175 1 153 1 87 1 
289 2 166 1 371 1 143 2 221 1 261 2 114 4 352 1 373 2 104 1 342 1 56 1 41 1 96 1 245 1 326 1 48 2 270 2 85 1 176 2 87 1 141 1 
289 2 362 1 221 1 261 2 114 4 352 1 94 1 265 1 264 1 116 1 353 1 41 1 321 1 96 1 296 1 245 1 268 1 326 1 48 2 270 2 141 1 371 1 73 1 166 1 279 1 143 2 373 2 304 1 104 1 342 1 107 1 306 1 29 1 85 1 176 2 87 1 88 1 
289 1 221 1 261 1 114 3 352 1 294 1 95 1 41 1 96 1 296 1 326 1 270 2 48 1 141 1 164 1 207 1 166 1 278 1 371 1 143 2 209 1 373 1 104 1 342 1 56 1 306 1 85 1 176 1 87 1 
289 2 261 7 114 13 352 1 318 1 68 1 244 1 96 2 245 1 326 2 272 1 273 1 270 6 275 1 232 1 141 2 166 2 371 2 143 4 339 1 104 2 342 2 305 1 358 2 85 2 359 1 151 1 87 2 32 1 
289 3 222 1 260 2 261 12 114 26 352 2 96 2 226 1 245 1 326 3 272 4 273 1 270 14 275 1 14 1 232 2 250 1 141 3 166 3 371 3 143 6 339 2 104 3 342 2 124 1 305 2 358 2 149 1 128 1 85 3 359 2 151 1 87 3 32 1 
289 2 261 6 114 13 352 1 318 1 244 1 96 1 245 1 326 2 272 2 273 1 270 7 275 1 232 1 141 2 166 2 371 2 143 4 339 1 104 2 342 1 305 1 358 2 128 1 85 2 359 1 151 1 87 2 32 1 
289 2 261 6 114 13 352 1 318 1 244 1 96 1 245 1 326 2 272 2 273 1 270 7 275 1 232 1 141 2 166 2 371 2 143 4 339 1 104 2 342 1 305 1 358 2 128 1 85 2 359 1 151 1 87 2 32 1 
289 12 222 1 260 1 261 25 114 52 352 6 318 2 119 1 96 7 226 1 245 6 120 1 326 2 272 4 273 1 270 27 275 1 51 1 14 1 232 2 299 1 250 1 141 2 166 2 371 7 143 4 339 1 104 8 342 8 124 1 305 1 358 4 149 1 128 1 30 1 85 7 359 4 151 1 87 2 196 1 32 1 240 2 
126 1 368 1 9 1 109 1 283 1 49 1 357 1 213 1 277 1 219 1 
171 1 161 1 
9 1 109 1 283 1 357 1 343 1 295 1 213 1 277 1 307 1 
131 1 132 1 144 1 363 1 357 1 78 1 213 1 266 1 126 1 368 1 9 1 298 1 283 1 109 1 255 2 312 1 277 1 219 1 
131 1 132 1 144 1 363 1 357 1 78 1 213 1 266 1 126 1 368 1 9 1 298 1 283 1 109 1 255 2 312 1 277 1 219 1 
131 1 132 1 144 1 363 1 357 1 78 1 213 1 266 1 126 1 368 1 9 1 298 1 283 1 109 1 255 2 312 1 277 1 219 1 
214 1 111 1 174 1 
214 1 111 1 174 1 
81 1 237 1 
214 1 81 1 237 1 
186 1 90 1 
131 1 133 1 90 1 161 1 118 1 354 1 296 2 266 1 9 1 99 1 298 1 269 1 186 1 277 1 164 2 207 2 278 2 374 1 357 1 213 1 306 2 171 1 109 1 283 1 255 1 312 1 175 1 
111 1 174 1 
214 1 81 1 237 1 
362 1 63 1 221 1 114 2 261 1 264 1 116 2 353 1 319 1 41 1 4 1 296 2 326 1 270 1 163 1 101 1 164 2 141 1 166 1 279 2 336 1 143 2 304 2 56 1 378 1 306 2 29 1 82 1 87 1 155 2 259 1 
89 1 279 2 362 1 142 1 156 1 220 1 304 2 92 1 67 1 265 1 212 1 116 2 353 1 80 1 324 1 284 1 274 1 230 2 72 1 
89 1 279 1 362 1 156 1 220 1 304 1 92 1 67 1 212 1 116 1 23 1 353 1 80 1 324 1 284 1 274 1 230 2 
279 1 362 1 142 1 316 1 243 1 304 1 194 1 264 1 67 1 116 1 353 1 58 1 29 1 153 1 
89 1 279 1 362 1 142 1 156 1 220 1 304 1 92 1 67 1 212 1 116 1 353 1 80 1 324 1 284 1 274 1 230 2 72 1 
364 1 
362 1 221 1 114 1 261 1 179 1 94 1 264 1 116 1 353 1 95 2 41 1 321 1 296 3 268 1 326 1 163 1 231 1 141 1 164 2 278 2 207 2 73 1 166 1 279 1 143 2 304 1 107 1 306 3 29 1 175 1 153 1 87 1 
333 2 16 1 191 2 252 2 340 1 181 1 69 1 78 4 119 1 79 1 148 4 200 2 267 1 215 1 347 2 
108 1 97 1 292 1 
191 1 16 1 333 1 34 1 180 1 181 1 78 2 69 1 79 1 148 1 200 1 267 1 298 1 312 1 329 1 370 1 355 1 
73 1 16 1 279 1 362 2 304 1 181 1 1 1 134 1 264 2 20 1 116 1 353 1 69 1 79 1 267 1 100 1 29 1 11 1 84 1 153 1 
222 1 91 1 180 1 181 8 69 2 96 2 226 1 200 5 267 2 298 1 44 2 370 1 232 1 250 1 371 2 16 2 333 3 191 2 252 5 340 1 104 2 168 1 211 1 342 2 78 5 124 1 79 2 148 6 358 1 149 1 85 2 215 1 359 1 312 1 347 5 
179 1 181 2 69 1 95 1 296 1 6 1 200 2 267 1 44 2 298 1 12 1 13 1 51 1 164 1 207 1 278 1 16 1 332 1 208 1 104 2 210 1 211 1 342 1 306 1 79 1 30 1 312 1 196 1 
16 1 191 1 181 1 69 1 78 1 79 1 108 1 200 1 267 1 97 1 
371 2 333 5 252 5 104 2 211 1 1 1 181 5 342 2 78 5 96 2 200 5 148 10 44 2 85 2 347 5 
191 1 298 1 180 1 312 1 370 1 78 1 
362 1 316 1 243 1 180 2 264 1 181 2 116 4 353 1 69 1 200 2 267 2 298 3 228 1 248 1 370 4 102 1 165 1 16 2 279 4 280 2 304 4 340 2 79 2 29 1 287 1 215 2 312 3 258 1 153 2 
254 1 9 1 213 1 
9 1 186 1 375 1 213 1 219 1 
254 1 9 1 213 1 
254 1 9 1 213 1 
251 1 9 1 213 1 
251 1 9 1 213 1 
251 1 9 1 213 1 
9 1 213 1 
357 1 277 1 
289 3 166 2 143 4 261 4 114 8 260 1 352 1 104 1 342 1 119 1 245 2 326 2 120 1 270 4 30 1 51 1 87 2 299 1 141 2 196 1 
120 1 292 1 299 1 
289 2 166 1 371 1 143 2 261 2 242 1 114 4 352 1 104 1 342 1 96 1 245 1 326 1 270 2 85 1 87 1 141 1 
371 1 289 2 261 4 114 7 352 1 104 1 318 1 342 1 96 1 358 2 245 1 270 3 85 1 359 1 232 1 
289 9 114 23 261 12 260 2 352 4 293 1 318 1 119 1 96 2 245 5 120 1 326 2 270 11 51 2 299 1 141 2 371 2 166 2 143 4 372 1 104 3 342 3 358 2 30 1 85 2 359 2 87 2 196 2 240 1 
358 1 114 1 261 1 
114 1 270 1 359 1 
166 1 371 1 289 3 143 2 242 1 261 3 114 6 352 1 104 1 1 1 342 1 96 1 245 2 326 1 270 3 85 1 87 1 141 1 
289 2 222 1 114 12 261 6 352 1 96 2 226 1 245 1 326 1 273 1 270 6 232 1 250 1 141 1 166 1 371 2 143 2 104 2 342 2 124 1 358 1 149 1 85 2 359 1 87 1 
289 2 114 6 261 3 352 1 104 1 342 1 245 1 270 3 30 1 51 1 196 1 
289 2 166 1 372 1 143 2 261 2 114 3 260 1 352 1 245 1 120 1 326 1 270 1 51 1 87 1 299 1 196 1 141 1 
166 1 289 5 143 2 114 10 261 5 352 2 104 2 210 1 342 2 245 3 326 1 273 1 270 5 30 1 51 2 87 1 141 1 196 2 
166 1 371 1 289 1 143 2 114 2 352 1 104 1 326 1 273 1 270 2 87 1 141 1 
289 2 166 1 371 1 143 2 261 2 114 4 352 1 104 1 342 1 96 1 245 1 326 1 273 1 270 2 85 1 87 1 141 1 
166 3 289 2 372 1 143 6 260 1 261 2 114 3 352 1 244 1 245 1 326 3 273 1 270 1 51 1 87 3 141 3 196 1 
289 12 260 2 261 18 242 1 114 34 352 5 318 1 119 1 244 1 96 3 245 7 120 1 326 5 273 1 270 16 187 1 51 3 232 1 299 1 141 5 166 5 371 3 372 1 17 1 143 10 104 5 342 5 358 4 309 1 30 2 85 3 359 3 87 5 196 3 
289 2 166 1 143 2 261 4 114 8 104 1 342 1 119 1 226 1 358 1 245 2 120 1 326 1 270 4 273 1 30 1 359 1 51 1 232 1 299 1 87 1 196 1 141 1 
289 3 114 11 261 5 242 1 352 1 318 1 119 1 226 1 245 2 120 1 326 2 273 1 270 6 51 1 232 1 299 1 141 2 166 2 371 1 143 4 104 2 342 1 358 2 30 1 85 1 359 1 87 2 196 1 
289 4 222 1 242 1 114 19 261 10 260 1 352 1 119 1 96 2 226 1 245 3 120 1 326 3 273 1 270 9 51 1 232 1 299 1 250 1 141 3 166 3 371 2 143 6 104 3 342 3 124 1 358 1 149 1 30 1 85 2 359 1 87 3 196 1 
289 5 222 1 242 1 260 1 114 17 261 7 352 2 119 1 96 1 226 1 245 3 120 1 326 3 273 1 270 10 51 1 232 1 299 1 250 1 141 3 166 3 371 2 143 6 104 3 342 2 124 1 358 1 149 1 30 1 85 2 359 1 87 3 196 1 
289 2 166 1 143 2 261 4 114 8 104 1 342 1 119 1 226 1 358 1 245 2 120 1 326 1 270 4 273 1 30 1 359 1 51 1 232 1 299 1 87 1 196 1 141 1 
289 2 222 1 114 12 261 6 352 1 96 2 226 1 245 1 326 1 273 1 270 6 232 1 250 1 141 1 166 1 371 2 143 2 104 2 342 2 124 1 358 1 149 1 85 2 359 1 87 1 
289 5 222 1 114 18 261 8 242 1 260 2 352 2 119 1 96 1 226 1 245 3 120 1 326 4 273 1 270 10 51 1 232 1 299 1 250 1 141 4 166 4 371 2 143 8 104 3 342 2 124 1 358 1 149 1 30 1 85 2 359 1 87 4 196 1 
289 6 222 1 114 16 261 7 260 2 352 3 244 1 96 2 226 1 245 3 326 4 273 1 270 9 232 1 250 1 141 4 166 4 371 3 143 8 104 3 342 2 124 1 358 1 149 1 85 3 359 1 87 4 
289 6 261 4 114 7 352 3 104 1 342 1 245 3 120 2 270 3 30 1 51 3 299 1 196 3 
289 4 222 1 114 18 261 8 260 2 352 1 119 1 244 1 96 1 226 1 245 3 120 1 326 4 273 1 270 10 51 1 232 1 299 1 250 1 141 4 166 4 371 2 143 8 104 3 342 2 124 1 358 1 149 1 30 1 85 2 359 1 87 4 196 1 
7 1 52 1 175 1 320 1 164 1 296 1 306 1 
7 1 198 1 74 1 52 1 47 1 175 1 320 1 164 1 57 1 365 1 296 1 306 1 
279 1 316 1 292 1 304 1 116 1 153 1 
73 1 207 1 278 1 279 1 362 1 304 1 264 1 116 1 353 1 107 1 321 1 306 2 296 2 29 1 175 1 153 1 164 1 103 1 
349 1 362 1 264 3 159 1 116 1 353 1 321 1 5 1 296 2 323 1 12 2 164 2 103 1 278 2 207 1 73 2 279 1 280 1 304 1 107 1 306 2 29 2 175 1 154 1 
349 1 362 1 264 3 159 1 116 1 353 1 5 1 296 2 323 1 12 2 164 2 103 1 278 2 207 1 73 2 279 1 280 1 304 1 55 1 107 1 306 2 29 2 175 1 154 1 
349 1 362 1 179 1 35 1 264 4 134 1 159 1 116 1 353 1 95 1 296 1 6 1 298 2 202 1 12 1 370 1 300 1 164 1 278 1 207 1 73 1 208 1 332 1 279 1 191 1 335 1 280 1 304 1 78 1 306 1 29 1 312 2 
349 1 362 1 179 1 35 1 264 4 134 1 159 1 116 1 353 1 95 1 296 1 6 1 298 2 12 1 370 1 300 1 164 1 278 1 207 1 73 1 208 1 332 1 279 1 191 1 280 1 304 1 78 1 306 1 29 1 312 2 314 1 
279 1 362 1 291 1 304 1 116 1 353 1 
73 1 290 1 279 7 362 3 291 1 156 1 304 6 36 1 235 1 265 1 264 3 116 7 22 1 353 2 100 1 29 2 46 1 247 1 153 2 101 1 155 1 
289 2 114 6 116 1 353 1 119 1 296 2 245 2 120 1 299 1 164 1 207 1 166 2 73 1 304 1 306 2 29 1 30 1 176 1 175 2 87 2 88 1 259 1 362 1 221 2 261 3 94 1 265 1 264 1 41 2 321 1 268 1 326 2 270 3 48 1 51 1 141 2 103 1 278 1 279 1 143 4 373 1 104 1 56 1 342 1 107 1 196 1 113 1 
35 1 180 1 181 1 134 1 264 2 116 1 40 1 69 2 184 1 200 1 97 1 267 2 298 3 228 1 370 2 300 1 191 1 279 1 16 2 304 1 374 1 78 1 79 2 108 1 310 1 312 3 153 1 314 1 
73 1 279 2 362 2 291 1 35 1 304 2 265 1 264 2 116 2 353 1 100 1 29 1 84 1 
279 4 334 1 362 1 316 1 243 1 304 4 265 1 264 1 116 4 353 1 325 1 29 1 153 1 
73 1 290 1 279 2 62 1 362 2 280 1 304 2 264 1 116 2 22 1 353 1 29 1 229 1 238 1 
279 1 362 1 220 1 304 1 274 1 230 1 116 1 153 1 353 1 80 1 
279 2 362 1 156 1 29 1 304 2 264 1 265 1 116 2 353 1 101 1 319 1 
279 5 334 1 362 2 280 1 243 1 316 1 304 4 265 1 264 3 116 5 353 2 29 2 46 1 247 1 153 1 101 1 
279 5 334 1 362 2 280 1 243 1 316 1 304 4 265 1 264 3 116 5 353 2 379 1 29 2 46 1 153 1 101 1 
73 1 207 1 278 1 279 1 362 1 304 1 55 1 264 1 116 1 353 1 107 1 306 2 296 2 29 1 175 1 153 1 164 1 103 1 
73 1 290 1 279 1 362 2 280 1 304 1 36 1 264 1 116 1 22 1 353 1 100 1 29 1 
33 1 115 1 317 1 285 1 175 1 
191 1 33 2 115 2 54 1 317 1 374 1 105 1 195 1 93 1 376 1 78 1 323 1 298 2 12 1 285 2 312 2 175 1 154 1 300 1 
336 1 115 1 317 1 285 1 164 1 4 1 296 1 306 1 378 1 
317 1 93 1 195 1 
38 1 106 3 345 1 297 1 172 1 45 1 203 1 311 1 360 1 288 1 234 3 
297 1 150 1 170 1 302 1 
297 1 45 1 
45 1 292 1 360 1 
297 1 45 1 203 1 360 1 106 1 288 1 234 1 
106 1 2 1 24 1 
345 2 297 1 45 1 172 1 203 1 360 1 21 1 39 1 106 3 217 1 288 1 234 3 
297 1 45 1 203 1 38 1 360 1 249 1 106 2 288 1 234 2 
324 1 297 1 150 1 167 1 172 1 203 1 274 1 230 1 106 1 288 1 234 1 
297 1 45 1 172 1 203 1 106 1 288 1 234 1 
45 2 172 1 203 1 360 1 106 1 288 1 234 1 
106 2 253 1 297 1 246 1 45 1 172 1 203 2 233 1 288 2 234 2 
122 1 38 2 106 3 150 1 297 2 170 1 45 1 172 1 203 1 311 1 360 1 288 1 234 3 
0 1 38 1 106 2 80 1 324 1 297 1 45 1 172 1 203 1 284 1 274 1 360 1 230 2 288 1 234 2 
37 1 38 2 106 4 150 1 297 2 170 1 45 1 172 1 203 2 360 1 249 1 288 2 234 4 
297 1 45 1 172 1 203 1 360 1 106 1 288 1 234 1 
302 1 38 2 39 1 106 4 345 1 150 1 297 3 170 1 45 2 203 1 360 2 217 1 288 1 234 4 
38 1 106 2 136 1 297 1 308 1 45 1 172 1 203 1 360 1 276 1 288 1 234 2 
345 2 297 1 45 1 172 1 203 1 360 1 39 2 106 3 117 1 217 1 288 1 234 3 
297 2 178 1 135 2 367 1 
172 1 203 1 227 1 106 1 288 1 234 1 
297 1 45 1 172 1 311 1 203 1 38 1 360 1 106 2 288 1 234 2 
64 1 
297 1 45 1 172 1 203 1 360 1 106 1 288 1 234 1 

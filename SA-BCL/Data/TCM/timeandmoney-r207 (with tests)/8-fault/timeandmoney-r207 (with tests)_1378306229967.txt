#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 304 (152,160) (152,160) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 304 (152,160) (152,160) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 304 (152,160) (152,160) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArithmeticException 304 (152,160) (152,160) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 192 312 193 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 0
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | STATEMENT | 698 | stmt -> ;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
124 1 144 1 377 1 325 1 46 1 314 1 16 1 152 1 369 1 220 1 304 1 169 1 58 1 160 1 
124 1 144 1 377 1 46 1 325 1 314 1 16 1 152 1 369 1 220 1 304 1 169 1 58 1 160 1 
124 1 144 1 377 1 46 1 325 1 314 1 16 1 152 1 369 1 220 1 304 1 169 1 58 1 160 1 
124 1 144 1 377 1 46 1 325 1 314 1 16 1 152 1 369 1 220 1 304 1 169 1 58 1 160 1 
374 3 10 1 124 1 144 1 325 1 300 1 352 1 276 1 16 4 315 2 208 1 335 1 369 1 220 4 304 1 169 1 7 3 181 2 
183 1 374 1 124 1 144 1 290 1 377 1 29 1 276 1 16 2 38 1 335 1 369 1 220 2 169 1 304 1 58 1 
374 2 124 1 377 1 276 1 16 3 208 1 335 1 369 2 220 3 169 2 7 1 279 1 181 1 
144 1 276 1 315 2 154 1 220 9 369 2 7 7 279 1 181 4 374 5 10 1 124 1 377 1 325 1 300 1 128 1 188 1 352 1 16 9 208 3 335 1 169 2 304 1 209 1 
144 1 276 1 315 2 154 1 220 9 369 2 7 7 279 1 181 4 374 5 10 1 124 1 377 1 325 1 300 1 128 1 188 1 352 1 16 9 208 3 335 1 169 2 304 1 209 1 
277 1 241 1 227 1 
241 1 48 1 353 2 
249 1 26 2 256 2 127 2 258 2 219 2 207 2 150 1 
71 2 247 1 246 2 25 2 27 1 26 2 216 1 194 1 114 2 4 1 219 2 150 1 249 1 151 1 316 1 195 1 199 1 372 1 62 1 202 1 255 1 256 2 236 1 63 1 299 2 204 1 284 1 127 3 258 2 260 1 207 3 66 1 332 1 84 1 85 1 267 1 110 1 
201 1 26 1 294 1 256 1 250 1 127 1 258 1 219 1 207 1 150 1 
201 1 272 1 256 1 127 1 366 1 207 1 277 1 292 1 105 1 343 1 241 1 134 1 251 1 310 1 
201 1 26 1 272 1 256 1 258 1 127 1 366 1 219 1 207 1 277 1 292 1 105 2 241 1 134 1 310 2 
105 1 349 1 126 1 217 1 310 1 
115 1 277 1 333 1 105 2 241 1 126 1 217 1 310 2 
105 1 217 1 310 1 
201 1 26 1 256 1 126 1 258 1 127 1 219 1 150 1 207 1 105 1 294 1 287 1 250 1 310 1 
241 1 
277 1 333 1 105 2 241 1 126 1 217 1 233 1 310 2 
23 1 26 1 2 3 112 2 217 2 219 1 341 1 150 1 176 1 277 1 368 2 294 1 179 1 250 1 158 1 180 1 121 1 201 1 256 1 165 1 203 2 126 2 127 1 258 1 378 2 65 1 207 1 333 1 105 5 265 1 241 1 287 1 107 2 379 1 269 1 21 1 310 5 
249 1 227 1 
26 1 256 2 127 2 258 1 219 1 207 2 249 2 131 1 6 1 
313 1 336 1 175 1 
62 1 25 1 63 1 299 1 127 1 114 1 4 1 207 1 66 1 249 1 332 1 84 1 151 1 85 1 199 1 228 1 
62 1 25 1 26 1 256 1 63 1 81 1 299 1 258 1 127 2 114 1 4 1 66 1 207 2 313 1 332 1 151 1 84 1 85 1 199 1 295 1 
26 4 256 5 81 1 258 4 127 5 351 1 219 1 207 5 249 1 167 1 131 1 295 2 119 1 251 1 
201 1 26 2 256 2 250 1 127 2 258 2 340 1 207 2 
249 1 26 3 256 3 295 1 127 3 258 3 219 1 207 3 
201 1 26 1 256 1 250 1 127 1 258 1 207 1 
201 1 131 1 26 1 6 1 256 1 127 1 258 1 219 1 207 1 
71 2 246 1 25 1 27 1 272 1 26 3 194 1 366 1 114 1 4 1 219 2 150 1 249 1 151 1 292 1 195 1 199 1 295 1 373 1 201 1 62 1 255 1 256 3 236 1 63 1 81 1 299 1 204 1 350 1 284 1 127 4 258 3 260 1 66 1 207 4 332 1 84 1 131 1 105 1 85 1 134 1 267 1 110 1 310 1 
249 1 26 1 256 2 295 1 127 2 258 1 251 1 351 1 207 2 
201 1 26 3 272 1 256 3 81 1 350 1 258 3 127 3 366 1 219 1 207 3 131 1 292 1 105 1 241 1 295 2 134 1 243 1 310 1 
26 2 256 2 258 2 127 2 175 1 219 1 207 2 313 1 131 1 295 1 
62 1 25 1 63 1 299 1 127 1 114 1 4 1 207 1 66 1 249 1 332 1 84 1 151 1 85 1 199 1 
62 1 123 1 25 1 63 1 299 1 127 1 114 1 207 1 66 1 249 1 332 1 84 1 151 1 32 1 199 1 
245 1 71 2 289 1 246 4 336 2 73 1 339 1 194 1 175 2 313 2 53 1 195 1 252 1 372 2 280 1 255 1 204 1 284 1 260 2 65 1 240 1 267 1 21 1 359 1 
201 1 26 1 256 1 366 1 127 1 258 1 340 1 207 1 
95 1 168 1 
95 1 168 1 
213 1 68 1 
213 1 68 1 
213 1 68 1 
95 1 168 1 198 1 
95 1 168 1 198 1 
95 1 168 1 338 1 
235 1 213 1 92 1 177 1 95 2 168 2 68 1 
95 1 168 1 198 1 
95 1 168 1 306 1 
95 1 168 1 306 1 
95 1 168 1 306 1 
70 1 89 1 26 2 338 1 50 1 249 1 95 1 221 1 97 1 256 2 237 1 258 2 127 2 329 1 302 1 189 1 206 1 207 2 238 1 105 1 168 1 86 1 22 1 310 1 
89 2 70 2 321 1 43 1 50 2 51 1 206 2 92 1 355 2 105 2 95 2 168 2 221 3 96 1 241 1 319 1 231 1 22 1 310 2 
304 1 144 1 325 1 
38 1 304 1 144 1 
38 1 76 1 222 1 144 3 325 2 74 1 
291 1 38 1 76 1 144 2 325 1 74 1 
38 1 76 2 144 2 325 1 74 1 
41 2 245 1 91 1 2 2 45 1 112 1 73 1 48 1 217 1 277 1 344 1 368 3 178 1 9 1 318 2 158 1 182 1 203 1 126 4 330 1 302 1 189 1 353 3 65 1 333 1 105 5 263 2 241 2 86 1 107 1 21 1 310 5 
41 6 245 3 91 3 2 6 112 2 73 3 48 3 217 6 277 1 156 1 344 2 368 8 232 1 9 1 158 1 180 1 182 2 36 1 234 5 203 2 349 5 126 7 205 1 353 9 65 3 333 1 286 1 105 9 263 6 106 1 241 5 86 4 107 2 21 3 310 9 
41 2 245 1 91 1 45 1 2 2 112 1 73 1 48 2 277 1 344 1 368 3 318 1 180 1 182 1 203 1 126 2 330 1 353 4 65 1 105 3 263 2 241 3 86 1 107 1 21 1 310 3 
41 4 245 2 91 2 45 1 2 4 112 1 73 2 48 3 277 1 156 1 344 1 368 5 232 1 318 2 180 1 182 1 203 1 126 3 330 1 353 7 65 2 286 1 105 4 263 4 241 4 86 2 107 1 21 2 310 4 
199 1 190 1 227 1 
275 1 199 1 
140 1 
332 1 62 1 199 1 
130 1 199 1 
62 1 199 1 
332 1 62 1 283 1 190 2 199 3 99 1 
23 1 372 4 347 1 271 1 246 7 165 1 103 2 260 3 65 1 52 1 53 2 240 3 270 1 21 1 98 1 59 1 159 1 
23 1 372 4 347 1 271 1 246 7 165 1 103 2 260 3 65 1 52 1 53 2 240 3 270 1 21 1 98 1 59 1 159 1 
23 1 372 4 347 1 271 1 246 7 165 1 103 2 260 3 65 1 52 1 53 2 240 3 118 1 270 1 21 1 98 1 59 1 159 1 
23 2 172 1 271 2 245 3 71 2 192 3 246 31 91 3 215 4 73 3 312 1 52 1 155 1 53 5 59 1 98 2 159 1 346 1 372 16 347 1 255 1 165 2 204 1 103 3 284 1 260 15 65 4 285 1 240 10 267 1 270 5 21 4 109 1 309 1 
23 1 372 5 347 1 271 1 255 2 71 4 246 9 165 1 298 1 204 2 103 2 284 2 328 1 260 4 65 1 53 3 240 4 267 2 270 1 21 1 59 1 98 1 159 1 309 1 
212 1 25 1 144 2 114 1 276 1 220 2 369 1 222 1 7 1 229 1 370 1 200 1 320 1 79 1 374 1 124 1 377 1 325 1 299 1 66 1 16 2 84 1 38 1 335 1 304 1 169 1 357 1 268 1 135 1 288 1 
25 1 44 1 144 2 114 1 147 1 276 1 220 3 369 1 222 1 7 2 229 1 200 1 253 1 320 1 79 1 374 1 377 1 325 1 299 1 66 1 16 3 84 1 38 1 335 1 304 1 169 1 357 1 268 1 135 1 288 1 
25 1 44 1 144 2 114 1 147 1 276 1 220 2 222 1 7 2 229 1 200 1 79 1 374 1 377 1 325 1 299 1 66 1 16 2 84 1 38 1 335 1 304 1 357 1 268 1 288 1 
62 1 142 1 25 1 377 2 63 1 299 1 82 1 30 1 365 1 114 1 66 1 84 1 16 1 262 1 369 1 220 1 169 1 199 1 108 1 268 2 357 2 288 2 253 1 
25 1 144 2 114 1 147 1 220 1 369 1 222 1 229 1 370 1 200 1 320 1 79 1 124 1 377 1 325 1 299 1 66 1 16 1 84 1 38 1 304 1 169 1 357 1 268 1 135 1 288 1 
345 1 
2 2 48 2 292 1 93 2 343 1 199 1 57 1 158 1 251 1 61 2 201 1 62 1 203 1 63 2 256 1 299 2 13 1 166 1 353 2 64 1 66 1 207 1 105 5 18 1 107 1 310 5 211 1 25 2 272 1 112 1 273 1 218 2 217 6 364 1 30 1 114 2 174 1 366 1 274 2 75 1 277 1 368 2 230 1 182 1 185 2 323 4 82 1 127 1 331 2 132 1 333 3 84 1 133 2 241 2 134 1 
201 1 272 1 323 2 256 1 273 1 217 2 364 1 366 1 174 1 127 1 207 1 333 1 292 1 105 3 343 1 18 1 134 1 230 1 251 1 233 1 61 1 310 3 
272 1 273 1 217 1 364 1 174 1 366 1 277 1 292 1 343 1 230 1 251 1 233 1 201 1 256 1 323 3 127 1 331 1 207 1 333 1 105 3 18 1 241 1 134 1 310 3 
272 1 273 1 364 1 217 2 174 1 366 1 274 1 277 1 292 1 343 1 230 1 251 1 233 1 61 1 201 1 256 1 323 3 127 1 331 1 207 1 333 1 105 3 18 1 241 1 134 1 310 3 
145 1 2 1 48 2 292 1 93 2 343 1 251 1 158 1 61 4 296 1 201 1 256 1 203 1 13 1 64 1 207 1 105 5 18 1 107 1 310 5 272 1 273 1 112 1 217 7 364 1 218 2 366 1 174 1 274 4 277 5 368 1 34 1 230 1 233 1 185 2 323 6 324 1 127 1 331 4 333 3 133 2 241 5 134 1 138 1 
2 1 48 2 292 1 93 2 343 1 251 1 158 1 61 2 201 1 256 1 203 1 13 1 64 1 353 2 207 1 105 4 18 1 107 1 310 4 272 1 112 1 273 1 364 1 218 2 217 4 366 1 174 1 274 2 277 1 368 1 230 1 185 2 323 4 127 1 331 2 333 2 132 1 133 2 241 2 134 1 
272 1 2 1 273 1 112 1 48 2 217 4 218 2 364 1 174 1 366 1 274 2 277 1 292 1 93 2 343 1 368 1 230 1 251 1 158 1 61 2 296 1 201 1 185 2 256 1 323 4 203 1 324 1 13 1 127 1 331 2 64 1 207 1 333 2 133 2 105 4 241 1 18 1 134 1 107 1 138 1 310 4 
272 1 2 1 273 1 112 1 48 2 217 4 218 2 364 1 174 1 366 1 274 2 277 1 292 1 93 2 343 1 368 1 230 1 251 1 158 1 61 2 296 1 201 1 185 2 256 1 323 4 203 1 324 1 13 1 127 1 331 2 64 1 207 1 333 2 133 2 105 4 241 1 18 1 134 1 107 1 138 1 310 4 
24 2 272 1 2 1 273 1 112 1 217 4 364 1 174 1 366 1 274 2 277 1 292 1 343 1 368 1 230 1 251 1 158 1 61 2 296 1 201 1 185 2 163 1 256 1 323 4 203 1 127 1 15 2 331 2 353 2 64 1 207 1 67 1 333 2 133 2 105 4 39 1 241 1 18 1 134 1 107 1 310 4 
272 1 2 1 112 1 273 1 48 2 218 2 364 1 217 5 174 1 366 1 274 3 277 1 292 1 93 2 343 1 368 1 34 1 230 1 158 1 251 1 61 3 296 1 201 1 185 2 203 1 256 1 323 5 324 1 13 1 127 1 64 1 331 3 207 1 333 2 133 2 105 4 241 1 18 1 134 1 107 1 138 1 310 4 
272 1 2 1 112 1 273 1 48 2 218 2 364 1 217 5 174 1 366 1 274 3 277 1 292 1 93 2 343 1 368 1 34 1 230 1 158 1 251 1 61 3 296 1 201 1 185 2 203 1 256 1 323 5 324 1 13 1 127 1 64 1 331 3 207 1 333 2 133 2 105 4 241 1 18 1 134 1 107 1 138 1 310 4 
24 2 272 1 2 1 273 1 112 1 217 4 364 1 174 1 366 1 274 2 277 1 292 1 343 1 368 1 230 1 158 1 251 1 61 2 201 1 185 2 203 1 256 1 323 4 163 1 127 1 15 2 331 2 353 2 64 1 207 1 132 1 333 2 133 2 105 4 241 1 18 1 134 1 107 1 310 4 
23 1 71 2 289 1 246 6 336 1 194 1 175 1 313 1 249 2 53 2 195 1 227 1 59 1 159 1 372 3 347 1 255 1 165 1 204 1 103 1 284 1 260 3 65 1 240 2 267 1 21 1 
172 1 245 2 71 2 246 10 336 8 192 2 91 2 215 2 73 1 194 1 175 3 313 8 53 1 195 1 196 1 372 6 255 1 375 1 204 1 14 1 284 1 260 4 65 2 240 2 264 1 170 1 267 1 270 1 21 1 
71 2 25 1 246 2 247 1 26 1 27 1 114 1 194 1 4 1 175 1 249 1 151 1 278 1 195 1 199 1 295 1 55 1 228 1 372 1 62 1 255 1 375 1 63 1 256 1 299 1 81 1 204 1 127 2 258 1 284 1 260 1 66 1 207 2 332 1 84 1 85 1 267 1 137 1 
245 2 247 1 246 20 143 2 336 7 91 2 47 2 147 1 194 3 4 2 249 2 151 2 153 2 53 4 195 3 199 2 295 1 59 1 159 1 60 2 347 1 62 2 255 3 165 1 63 1 256 1 299 3 204 3 103 1 258 1 260 10 207 3 66 2 65 3 354 1 267 3 270 4 21 3 110 2 23 1 71 6 25 3 27 1 26 1 73 2 114 3 175 7 313 7 317 1 372 10 375 1 81 1 284 3 127 3 332 2 84 2 334 1 85 2 240 8 
42 1 71 4 212 1 289 1 25 7 247 1 246 2 26 1 27 1 28 1 363 1 216 2 147 1 114 8 194 2 30 1 342 1 195 2 199 3 295 1 78 1 372 1 62 2 255 2 348 1 256 1 63 2 299 8 326 1 204 2 82 1 127 1 258 1 284 2 260 1 207 1 66 2 84 2 267 2 
245 1 71 2 336 1 246 3 26 1 91 1 73 1 194 1 175 1 219 1 313 1 53 1 195 1 372 1 255 1 375 1 256 1 204 1 284 1 258 1 127 1 260 2 207 1 65 1 131 1 240 1 267 1 358 1 21 1 
372 2 245 1 255 1 71 2 289 1 336 1 246 2 204 1 194 1 284 1 175 1 65 1 313 1 195 1 240 1 267 1 270 1 359 1 
255 1 71 2 289 1 336 1 246 2 204 1 73 1 194 1 284 1 339 1 175 1 260 2 313 1 53 1 195 1 240 1 267 1 21 1 
245 1 71 2 289 1 246 4 336 2 91 1 73 1 194 1 175 2 313 2 53 1 195 1 372 2 255 1 204 1 284 1 260 2 65 1 240 2 267 1 270 1 21 1 
372 2 245 1 255 1 71 2 336 1 246 2 204 1 194 1 284 1 175 1 65 1 313 1 195 1 240 1 267 1 270 1 359 1 78 1 
255 1 71 2 336 1 246 2 204 1 73 1 194 1 284 1 339 1 175 1 260 2 313 1 53 1 195 1 240 1 267 1 21 1 78 1 
245 1 71 2 246 4 336 2 91 1 73 1 194 1 175 2 313 2 53 1 195 1 78 1 372 2 255 1 204 1 284 1 260 2 65 1 240 2 267 1 270 1 21 1 
245 1 71 2 246 4 336 2 91 1 73 1 194 1 175 2 313 2 53 1 195 1 372 2 255 1 204 1 284 1 260 2 65 1 240 2 267 1 270 1 21 1 
71 2 247 1 246 2 25 1 27 1 114 1 194 1 4 1 249 1 151 1 195 1 199 1 372 1 62 1 255 1 63 1 299 1 204 1 127 1 284 1 260 1 66 1 207 1 332 1 84 1 85 1 267 1 110 1 
71 2 247 1 246 2 25 1 1 1 27 1 114 1 194 1 249 1 151 1 32 1 195 1 199 1 372 1 62 1 255 1 123 1 63 1 299 1 204 1 127 1 284 1 260 1 66 1 207 1 332 1 84 1 267 1 
245 1 71 2 246 4 336 2 91 1 73 1 194 1 175 2 313 2 53 1 195 1 372 2 255 1 375 1 204 1 284 1 260 2 65 1 240 2 267 1 270 1 21 1 
245 1 71 2 212 1 336 2 246 4 25 1 91 1 73 1 114 1 194 1 4 1 175 2 313 2 151 1 53 1 195 1 199 1 60 1 372 2 62 1 255 1 299 1 204 1 127 1 284 1 260 2 65 1 66 1 207 1 332 1 84 1 85 1 240 2 267 1 270 1 21 1 110 1 
245 1 71 2 246 3 336 1 26 1 91 1 73 1 194 1 219 1 175 1 313 1 195 1 226 1 372 2 255 1 375 1 256 1 204 1 284 1 258 1 127 1 260 1 207 1 65 1 131 1 240 1 267 1 270 1 21 1 
139 1 23 1 172 1 245 4 111 1 71 6 246 41 192 3 337 1 91 4 215 4 193 1 73 4 312 3 3 1 149 1 367 1 293 1 53 4 59 1 159 1 35 2 100 1 372 20 347 1 255 3 297 1 165 1 298 1 204 3 103 1 284 3 260 21 129 1 65 5 261 1 240 8 171 4 267 3 270 4 40 1 21 5 309 1 
139 1 23 1 172 1 245 4 111 1 71 8 246 38 192 3 337 1 91 4 215 4 193 1 73 3 312 3 3 1 149 1 367 1 293 1 53 4 59 1 159 1 35 2 100 1 372 20 347 1 255 4 297 1 165 1 298 1 204 4 103 1 284 4 260 18 129 1 65 5 261 1 240 7 171 4 267 4 270 3 40 1 21 4 309 2 
139 1 23 1 172 2 245 7 111 1 71 4 246 52 192 4 91 7 215 4 193 1 73 7 312 2 3 1 149 1 367 1 293 1 53 7 59 1 159 1 35 1 100 1 372 27 347 1 255 2 297 1 165 1 298 1 204 2 103 1 284 2 260 25 129 1 65 8 240 14 264 2 171 4 267 2 270 7 40 1 21 8 309 1 
139 1 172 1 245 3 111 1 173 1 71 4 246 19 192 1 337 1 91 3 215 2 73 3 312 1 293 1 53 3 35 1 100 1 372 9 255 2 298 1 204 2 284 2 260 10 129 2 65 3 240 6 171 2 267 2 270 3 21 3 
139 1 245 3 111 2 71 6 246 26 192 2 91 3 215 2 193 1 73 2 312 2 3 1 149 1 293 1 367 1 53 2 35 2 100 1 372 14 255 3 297 1 298 1 204 3 284 3 260 12 129 1 65 3 240 4 171 4 267 3 270 2 40 1 21 2 309 2 
92 1 281 1 70 1 89 1 95 1 168 1 43 1 319 1 50 1 206 1 
338 1 97 1 
70 1 89 1 90 1 239 1 95 1 17 1 168 1 50 1 206 1 
198 1 20 1 
177 1 306 1 242 1 
89 1 70 1 321 1 43 1 50 1 51 1 206 1 92 1 355 1 105 1 95 1 168 1 221 2 241 1 319 1 231 1 22 1 310 1 
89 1 70 1 321 1 43 1 50 1 51 1 206 1 92 1 355 1 105 1 95 1 168 1 221 2 241 1 319 1 231 1 22 1 310 1 
89 1 70 1 321 1 43 1 50 1 51 1 206 1 92 1 355 1 105 1 95 1 168 1 221 2 241 1 319 1 231 1 22 1 310 1 
177 1 198 1 20 1 
177 1 198 1 20 1 
306 1 242 1 
177 1 306 1 242 1 
238 1 329 1 
70 1 89 1 26 2 338 1 50 1 249 1 95 1 221 1 33 1 97 1 321 1 256 2 126 1 237 1 127 2 329 1 258 2 302 1 189 1 207 2 206 1 238 1 355 1 105 1 168 1 86 1 310 1 
311 1 42 1 71 2 247 1 246 2 25 2 27 1 363 1 216 2 114 2 194 1 195 1 199 1 225 1 254 1 372 1 62 1 255 1 375 1 256 2 187 1 299 2 204 1 127 2 284 1 260 1 66 1 207 2 84 1 267 1 244 1 
79 1 101 1 212 1 25 2 144 2 164 1 325 1 299 2 113 1 147 1 114 2 66 1 84 1 38 1 222 1 304 1 229 1 135 1 288 1 
79 1 25 1 144 2 376 1 325 1 299 1 113 1 147 1 114 1 66 1 84 1 38 1 222 1 304 1 229 1 135 1 288 1 
84 1 62 1 142 1 25 1 164 1 63 1 199 1 299 1 82 1 257 1 30 1 114 1 288 1 66 1 
79 1 101 1 25 1 144 2 164 1 325 1 299 1 113 1 147 1 114 1 66 1 84 1 38 1 222 1 304 1 229 1 135 1 288 1 
259 1 
277 1 368 1 2 1 241 1 227 1 269 1 341 1 
2 1 112 1 48 1 218 1 217 1 277 1 93 1 368 1 158 1 203 1 13 1 353 1 333 1 105 1 241 2 107 1 310 1 
41 6 245 2 91 2 2 8 47 2 48 6 341 1 5 2 292 2 199 6 158 4 99 1 62 1 203 4 63 1 12 1 299 3 353 12 66 2 65 2 303 1 105 5 263 6 210 1 107 4 269 1 21 2 69 1 310 5 361 2 211 1 212 1 25 3 112 4 73 2 217 5 114 3 275 3 277 2 31 2 368 9 117 1 182 2 122 2 327 2 378 2 332 1 84 1 333 3 190 2 241 8 379 2 
41 1 192 1 2 1 203 1 112 1 215 1 48 1 193 1 312 1 353 2 368 1 263 1 241 1 107 1 158 1 
23 1 26 1 2 1 112 1 219 1 150 1 368 2 294 1 250 1 158 1 121 1 201 1 165 1 203 1 256 1 324 1 258 1 127 1 378 2 65 1 207 1 105 1 287 1 107 1 379 1 21 1 310 1 
203 1 2 1 112 1 341 1 277 1 368 1 241 1 107 1 269 1 158 1 
41 5 245 2 91 2 2 5 47 1 48 5 73 2 378 2 353 10 65 2 263 5 368 5 241 5 379 1 21 2 
277 1 333 1 105 1 241 1 217 1 310 1 
211 2 25 4 2 2 112 2 217 4 114 4 30 1 368 2 77 1 199 1 57 1 158 1 180 1 182 2 184 1 62 1 203 2 63 2 299 4 82 1 166 1 66 1 84 1 333 2 303 2 105 3 107 2 210 1 310 3 
71 2 246 1 25 1 27 1 26 2 114 1 194 1 4 1 219 2 150 1 249 1 151 1 195 1 199 1 62 1 255 1 63 1 256 2 236 1 299 1 204 1 284 1 127 3 258 2 260 1 207 3 66 1 332 1 84 1 85 1 267 1 110 1 
41 2 211 1 2 2 203 1 112 1 48 2 103 1 353 4 277 2 263 2 368 1 241 4 107 1 158 1 182 1 
87 1 50 1 206 1 
87 1 50 1 206 1 
319 1 371 1 329 1 50 1 206 1 
87 1 50 1 206 1 
0 1 50 1 206 1 
0 1 50 1 206 1 
0 1 50 1 206 1 
50 1 206 1 
95 1 168 1 
23 1 71 2 192 1 246 8 215 1 193 1 312 1 53 2 59 1 159 1 372 4 347 1 255 1 298 1 165 1 204 1 103 1 284 1 260 4 65 1 240 2 267 1 21 1 
23 1 172 1 245 1 71 4 246 11 192 1 91 1 215 2 193 1 312 1 53 2 56 1 59 1 159 1 372 6 347 1 255 2 165 1 298 1 204 2 103 1 284 2 260 5 65 2 240 3 267 2 270 1 21 1 
23 1 245 2 71 6 192 1 246 19 91 2 215 1 193 1 73 2 312 1 3 1 149 1 367 1 53 3 56 1 59 1 159 1 372 9 347 1 255 3 297 1 165 1 298 1 204 3 103 1 284 3 260 10 65 3 240 4 267 3 270 1 21 3 309 1 
23 1 245 2 71 6 192 1 246 17 91 2 215 1 193 1 73 1 312 1 3 1 149 1 367 1 53 3 56 1 59 1 159 1 372 10 347 1 255 3 297 1 165 1 298 1 204 3 103 1 284 3 260 7 65 3 240 5 267 3 270 2 21 2 309 1 
23 1 71 2 192 1 246 8 215 1 193 1 312 1 53 2 59 1 159 1 372 4 347 1 255 1 298 1 165 1 204 1 103 1 284 1 260 4 65 1 240 2 267 1 21 1 
245 2 71 2 192 1 246 12 91 2 215 1 193 1 73 2 312 1 3 1 149 1 367 1 53 1 372 6 255 1 297 1 298 1 204 1 284 1 260 6 65 2 240 2 267 1 270 1 21 2 
23 1 245 2 71 8 246 18 192 1 91 2 215 1 193 1 73 1 312 1 3 1 149 1 367 1 53 3 56 1 59 1 159 1 372 10 347 1 255 4 297 1 165 1 298 1 204 4 103 1 284 4 260 8 65 3 240 5 267 4 270 2 21 2 309 2 
245 3 71 8 246 16 192 1 337 1 91 3 215 1 193 1 73 2 312 1 3 1 149 1 367 1 53 3 372 9 255 4 297 1 298 1 204 4 284 4 260 7 65 3 240 6 267 4 270 3 21 2 309 2 
23 3 372 3 347 1 246 7 165 3 260 4 65 1 53 3 240 6 270 3 21 1 59 1 159 2 
23 1 245 2 71 8 246 18 192 1 337 1 91 2 215 1 193 1 73 1 312 1 3 1 149 1 367 1 53 3 59 1 159 1 372 10 347 1 255 4 297 1 165 1 298 1 204 4 103 1 284 4 260 8 65 3 240 4 267 4 270 1 21 2 309 2 
372 4 23 1 347 1 255 2 71 4 246 8 165 1 204 2 103 1 284 2 260 4 65 1 53 2 240 3 267 2 270 1 21 1 59 1 309 1 159 1 
23 1 372 3 347 1 246 6 165 1 103 1 260 3 65 1 53 2 240 2 227 1 21 1 59 1 159 1 
372 2 245 1 255 1 71 2 246 4 91 1 73 1 204 1 284 1 260 2 65 1 53 1 240 2 56 1 267 1 270 1 21 1 
372 3 172 1 245 1 246 7 192 1 91 1 215 2 73 1 312 1 260 4 65 1 53 1 240 2 270 1 21 1 
23 2 245 2 172 1 71 4 192 2 246 23 91 2 215 2 73 2 53 5 59 1 159 1 372 11 347 1 255 2 102 1 165 2 204 2 103 1 284 2 260 12 65 3 240 9 264 1 170 1 267 2 270 4 21 3 309 2 
246 1 215 1 260 1 
372 1 246 1 192 1 
372 3 245 1 71 2 255 1 246 6 91 1 204 1 47 1 73 1 284 1 260 3 65 1 53 2 240 3 267 1 56 1 270 1 21 1 
245 2 71 2 192 1 246 12 91 2 215 1 193 1 73 2 312 1 3 1 149 1 367 1 53 1 372 6 255 1 297 1 298 1 204 1 284 1 260 6 65 2 240 2 267 1 270 1 21 2 
372 3 23 1 347 1 246 6 165 1 260 3 65 1 53 1 240 2 270 1 21 1 
372 1 23 1 102 1 255 1 71 2 246 3 165 1 204 1 284 1 260 2 53 1 240 2 267 1 270 1 59 1 159 1 309 1 
121 1 23 1 372 3 71 2 255 1 246 6 298 1 165 1 204 1 284 1 260 3 65 1 53 2 240 4 267 1 270 2 21 1 
372 2 245 1 255 1 71 2 246 2 298 1 204 1 284 1 65 1 240 1 267 1 270 1 
372 2 245 1 255 1 71 2 246 4 91 1 298 1 73 1 204 1 284 1 260 2 65 1 53 1 240 2 267 1 270 1 21 1 
23 1 372 1 102 1 255 3 71 6 246 3 337 1 298 1 165 1 204 3 284 3 260 2 53 1 240 2 267 3 270 1 309 1 
23 3 172 1 245 3 71 10 246 34 192 3 337 1 91 3 215 4 73 3 312 1 155 1 53 7 56 1 59 1 159 1 346 1 372 16 347 2 102 1 255 5 165 3 298 1 204 5 103 1 284 5 260 18 65 5 285 1 240 12 267 5 270 5 21 5 309 2 
249 1 256 1 307 1 127 1 251 1 351 1 207 1 
256 1 49 1 127 1 351 1 104 1 207 1 249 1 305 1 8 1 136 1 307 1 251 1 
84 1 62 1 25 1 63 1 199 1 227 1 299 1 82 1 30 1 114 1 66 1 
62 1 25 1 26 1 256 1 63 1 299 1 258 1 127 2 114 1 4 1 66 1 207 2 249 1 332 1 151 1 84 1 199 1 295 1 
25 1 26 1 362 1 114 1 366 1 4 1 249 1 151 1 199 3 295 1 201 1 62 2 256 2 299 1 127 2 258 2 207 2 66 1 332 2 130 1 84 1 303 1 134 1 
25 2 26 1 362 1 114 2 366 1 249 1 151 1 116 1 199 3 295 1 201 1 62 2 123 1 256 2 299 2 127 2 258 2 207 2 66 1 332 2 130 1 84 1 303 1 134 1 
25 1 26 1 114 1 219 1 150 1 275 1 277 1 294 1 199 1 250 1 201 1 282 1 256 1 299 1 258 1 127 1 207 1 303 1 105 1 241 1 287 1 310 1 
25 1 26 1 114 1 219 1 150 1 275 1 277 1 294 1 199 1 250 1 201 1 256 1 299 1 327 1 258 1 127 1 207 1 303 1 105 1 241 1 287 1 310 1 
84 1 25 1 299 1 326 1 114 1 66 1 
42 1 62 2 212 1 72 1 25 6 348 1 28 1 63 2 299 7 216 1 326 1 147 1 114 7 301 1 66 3 332 1 84 2 342 1 199 3 88 1 99 1 
23 1 71 4 212 1 336 1 246 6 25 1 26 1 194 2 114 1 4 1 175 1 313 1 249 2 151 1 153 1 53 2 195 2 199 1 295 1 59 1 159 1 254 1 60 1 372 3 347 1 62 1 255 2 375 1 165 1 256 1 299 1 204 2 103 1 127 2 258 1 284 2 260 3 65 1 66 1 207 2 332 1 84 1 85 1 240 2 267 2 21 1 110 1 
361 1 25 1 2 1 112 2 217 2 114 1 341 1 5 1 275 1 277 1 31 1 292 1 368 1 199 2 158 2 63 1 203 2 299 1 126 1 327 1 333 1 105 3 241 1 190 1 107 2 210 1 269 1 310 3 
62 1 212 1 25 2 12 1 299 2 326 1 114 2 66 2 332 1 84 1 190 1 199 2 99 1 
84 1 62 1 162 1 212 1 25 4 116 1 63 1 199 1 299 4 82 1 30 1 114 4 66 1 
62 1 80 1 72 1 25 2 299 2 114 2 66 2 332 1 84 1 303 1 199 1 317 1 120 1 88 1 
84 1 79 1 38 1 25 1 304 1 144 1 63 1 299 1 114 1 66 1 
84 1 62 1 42 1 212 1 25 2 199 1 187 1 299 2 147 1 114 2 66 1 
42 1 62 2 162 1 212 1 25 4 63 1 28 1 299 5 82 1 30 1 114 5 66 2 84 2 303 1 342 1 199 3 
42 1 62 2 162 1 212 1 25 4 63 1 28 1 299 5 82 1 30 1 114 5 83 1 66 2 84 2 303 1 199 3 
62 1 123 1 25 1 26 1 256 1 63 1 299 1 258 1 127 2 114 1 66 1 207 2 249 1 332 1 151 1 84 1 199 1 295 1 
62 1 72 1 25 1 299 1 114 1 301 1 66 2 332 1 84 1 303 1 199 1 88 1 99 1 
311 1 141 1 256 1 127 1 207 1 225 1 19 1 308 1 244 1 
161 1 125 1 19 1 
249 1 141 1 19 1 186 1 308 1 
201 1 161 1 141 2 11 1 272 1 125 1 186 2 126 1 350 1 366 1 249 1 277 1 292 1 105 2 241 1 19 1 134 1 308 2 310 2 
276 1 374 1 335 1 227 1 
276 1 16 1 374 1 335 1 220 1 369 1 169 1 
220 1 377 1 357 1 
276 1 16 3 374 1 94 1 335 1 220 3 369 1 124 1 223 1 169 1 29 2 248 1 
276 1 315 1 16 2 374 1 335 1 220 2 369 1 169 1 7 1 
374 1 124 1 144 1 325 1 300 1 16 1 369 1 220 1 169 1 304 1 181 1 
16 1 374 1 335 1 220 1 369 1 124 1 169 1 
276 1 16 1 335 2 220 1 369 1 124 1 169 1 
374 1 124 1 322 1 16 2 335 1 369 2 220 2 169 2 224 1 360 1 
374 2 124 1 276 1 16 3 154 1 208 1 335 1 369 1 220 3 169 1 209 1 7 2 181 1 
374 1 124 1 144 2 325 1 146 1 276 1 16 2 38 1 335 1 369 1 220 2 222 1 169 1 304 1 7 1 
374 2 124 1 352 1 276 1 16 4 315 1 208 1 335 1 369 2 220 4 169 2 7 2 181 1 
276 1 16 1 374 1 335 1 220 1 369 1 124 1 169 1 
374 3 29 1 248 1 276 2 16 4 94 1 208 1 335 2 220 4 369 1 197 1 169 1 7 2 181 1 
374 1 37 1 124 1 188 1 16 2 276 1 335 1 369 1 220 2 169 1 7 1 157 1 
276 1 16 3 374 1 94 1 335 1 220 3 369 1 124 1 169 1 29 2 248 2 148 1 
356 1 374 2 191 2 54 1 
16 1 220 1 369 1 124 1 169 1 266 1 
276 1 16 2 374 1 335 1 220 2 369 1 124 1 169 1 7 1 209 1 
214 1 
276 1 16 1 374 1 335 1 220 1 369 1 124 1 169 1 
374 1 124 1 29 1 16 3 276 1 369 1 220 3 335 1 169 1 7 1 209 1 
374 1 208 1 197 1 181 1 
374 1 335 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (98,165,285) (98,165,285) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (119,185) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (119,185) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (119,185) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (119,185) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (119,185) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (119,185) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (119,185) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (119,185) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (119,185) 313 103 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (119,185) 313 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 223 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 223 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 33 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (98,165,285) (98,165,285) 219 39 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (98,165,285) (98,165,285) 219 39 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (98,165,285) (98,165,285) 219 39 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (98,165,285) (98,165,285) 219 39 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (98,165,285) (98,165,285) 219 39 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (98,165,285) (98,165,285) 219 39 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (98,165,285) (98,165,285) 219 39 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (98,165,285) (98,165,285) 219 39 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (98,165,285) (98,165,285) 219 39 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (98,165,285) (98,165,285) 219 39 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (98,165,285) (98,165,285) 219 39 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (98,165,285) (98,165,285) 219 39 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 146 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
143 1 35 1 278 3 189 1 167 1 12 1 230 1 193 2 171 1 23 2 325 3 309 2 199 1 
201 1 294 1 162 1 205 2 88 1 167 4 12 3 299 2 136 1 171 2 23 2 308 1 309 2 143 6 35 1 278 9 186 1 189 1 42 1 230 1 193 5 322 1 81 1 237 1 236 2 325 9 199 1 83 2 
201 1 294 1 162 1 205 2 88 1 167 4 12 3 299 2 136 1 171 2 23 2 308 1 309 2 143 6 35 1 278 9 186 1 189 1 42 1 230 1 193 5 322 1 81 1 237 1 236 2 325 9 199 1 83 2 
201 1 294 1 162 1 205 2 88 1 167 5 12 4 299 2 136 1 171 2 23 2 308 1 309 2 143 7 35 1 278 10 186 1 189 1 42 1 230 1 193 6 322 1 81 1 237 1 236 2 325 10 199 1 83 2 
201 1 294 1 205 2 88 1 167 3 12 2 299 2 136 1 171 2 23 2 308 1 309 2 143 4 35 1 278 7 186 1 189 1 42 1 230 1 193 4 322 1 81 1 237 1 236 1 325 7 199 1 83 2 
201 1 143 3 35 1 278 4 162 1 205 1 189 1 167 2 12 1 299 1 193 3 23 1 308 1 236 2 325 4 309 1 199 1 83 1 
35 1 278 2 251 1 205 1 189 1 88 1 299 1 193 1 171 1 237 1 23 1 325 2 309 1 176 1 199 1 198 1 
201 1 3 1 162 1 205 1 167 4 12 3 299 1 171 1 23 2 308 1 309 2 69 1 143 7 35 1 278 9 186 1 189 1 230 1 193 5 81 1 236 2 325 9 199 1 83 1 
201 1 3 1 162 1 205 1 167 4 12 3 299 1 171 1 23 2 308 1 309 2 69 1 143 7 35 1 278 9 186 1 189 1 230 1 193 5 81 1 236 2 325 9 199 1 83 1 
29 1 126 1 52 1 84 1 224 1 207 1 10 1 90 1 258 1 285 1 261 1 214 1 22 1 196 1 
293 1 
43 1 258 2 192 1 285 2 293 1 196 1 117 1 40 1 
70 2 293 1 184 1 318 1 117 1 40 1 298 1 258 5 92 1 285 5 192 2 303 1 62 2 323 1 286 1 21 2 239 1 196 2 332 1 
283 1 293 1 117 1 
293 1 57 2 41 1 
126 2 52 1 261 2 84 2 22 2 214 2 238 1 207 2 
126 3 52 1 245 1 4 1 84 2 248 2 250 1 207 3 13 1 133 2 134 1 304 1 260 2 20 1 261 2 65 1 64 1 22 2 214 2 24 1 312 1 25 1 178 2 267 1 221 1 74 1 112 1 115 1 319 1 188 1 227 1 226 1 191 1 231 2 238 1 122 1 240 1 
126 1 90 1 52 1 261 1 84 1 22 1 214 1 224 1 207 1 10 1 
98 1 165 1 
126 1 293 1 84 1 207 1 117 1 10 1 58 1 258 2 259 1 285 2 210 1 261 1 98 1 214 1 22 1 
258 1 104 1 192 1 285 1 196 1 
258 2 192 1 285 2 293 1 196 1 117 1 40 1 149 1 
258 1 192 1 285 1 
126 2 182 1 84 1 207 2 300 1 261 1 22 2 214 1 238 2 
156 1 16 1 173 1 
126 1 4 1 248 1 207 1 112 1 319 1 226 1 133 1 134 1 260 1 20 1 238 1 240 1 327 1 24 1 267 1 
126 2 4 1 248 1 37 1 110 1 112 1 207 2 319 1 226 1 133 1 134 1 16 1 260 1 20 1 261 1 214 1 22 1 240 1 24 1 267 1 
283 1 238 1 
68 1 126 5 182 1 84 1 37 2 110 1 207 5 11 1 261 4 214 4 22 5 238 1 124 1 330 1 
126 2 141 1 261 2 22 2 214 2 224 1 207 2 10 1 
126 3 84 1 261 3 22 3 214 3 238 1 37 1 207 3 
126 1 261 1 22 1 214 1 224 1 207 1 10 1 
126 1 300 1 261 1 84 1 182 1 22 1 214 1 207 1 10 1 
126 4 52 1 245 1 204 1 4 1 84 2 248 1 53 1 250 1 207 4 10 1 58 1 13 1 258 1 133 1 134 1 259 1 210 1 260 1 20 1 261 3 98 1 64 1 22 3 214 3 24 1 312 1 25 1 178 1 267 1 221 1 182 1 37 1 110 1 112 1 319 1 188 1 226 1 227 1 285 1 231 2 238 1 122 1 240 1 
126 2 261 1 22 2 214 1 238 1 37 1 207 2 11 1 330 1 
126 3 84 1 182 1 293 1 53 1 37 2 110 1 281 1 207 3 10 1 58 1 258 1 285 1 259 1 210 1 261 3 98 1 214 3 22 3 
126 2 182 1 84 1 37 1 207 2 16 1 261 2 214 2 22 2 173 1 
126 1 4 1 248 1 207 1 112 1 319 1 226 1 133 1 134 1 260 1 20 1 238 1 240 1 24 1 267 1 
126 1 4 1 248 1 207 1 112 1 226 1 133 1 14 1 260 1 97 1 20 1 238 1 240 1 24 1 267 1 
156 2 245 1 221 1 203 1 247 1 161 1 250 1 75 1 297 1 114 1 188 2 13 1 16 2 231 2 306 1 305 1 80 1 65 2 122 1 138 1 173 2 310 1 25 1 178 4 
126 1 141 1 261 1 22 1 214 1 207 1 10 1 58 1 
119 1 271 1 
119 1 271 1 
119 1 271 1 
119 1 271 1 
95 1 185 1 
95 1 185 1 
95 1 185 1 
119 1 271 1 
119 1 271 1 
119 1 271 1 
119 1 271 1 
119 1 271 1 
119 1 271 1 
119 1 258 1 103 1 271 1 313 1 285 1 292 1 
119 1 271 1 313 1 292 1 
299 2 212 2 326 1 83 1 198 1 
299 1 205 1 83 1 
299 1 205 1 198 1 
299 3 212 1 99 1 326 1 83 2 198 1 
299 2 212 1 326 1 253 1 83 1 198 1 
223 1 293 1 117 1 40 1 9 1 116 1 89 1 258 4 285 4 192 1 196 3 241 1 
104 1 223 1 293 1 316 1 40 1 117 1 258 4 285 4 192 2 121 1 324 1 196 3 241 1 
126 1 52 1 202 1 203 1 84 1 293 1 207 1 297 1 10 1 9 1 90 1 89 1 258 2 91 2 170 1 62 1 261 1 21 1 22 1 214 1 138 1 29 1 70 1 107 2 223 1 224 1 117 1 285 2 323 1 80 1 286 2 239 2 196 1 243 1 
202 1 203 1 297 1 9 1 89 1 258 1 91 2 170 1 62 1 21 1 138 1 70 1 107 2 223 1 33 1 285 1 323 1 286 2 80 1 239 2 243 1 
1 1 
283 1 72 1 24 1 
164 1 24 1 
4 1 20 1 24 1 
264 1 24 1 
4 1 24 1 
291 1 72 2 4 1 20 1 159 1 24 3 
272 1 246 1 181 1 315 1 247 2 279 1 297 1 188 3 150 1 301 1 63 1 305 3 80 1 65 4 123 2 48 1 242 1 178 7 
290 3 246 2 203 3 247 5 250 1 252 1 56 1 297 4 255 1 87 1 13 1 301 1 63 1 305 10 65 16 215 1 138 3 178 31 272 1 221 1 181 5 275 4 279 2 188 15 150 1 231 2 80 4 82 1 122 1 123 3 289 1 48 2 242 2 243 3 
246 1 247 3 250 2 297 1 87 1 13 2 208 1 63 1 305 4 65 5 178 9 221 2 272 1 181 1 279 1 111 1 188 4 150 1 231 4 80 1 122 2 123 2 48 1 242 1 
272 1 246 1 181 1 247 2 279 1 297 1 188 3 150 1 301 1 63 1 305 3 80 1 65 4 123 2 48 1 242 1 178 7 
272 1 246 1 181 1 247 2 279 1 297 1 188 3 150 1 301 1 63 1 305 3 80 1 65 4 123 2 48 1 242 1 178 7 
51 1 4 1 248 1 166 2 169 1 133 1 260 1 171 2 23 1 309 1 140 1 24 1 267 1 218 1 220 2 274 1 278 1 226 1 229 1 233 2 194 1 240 1 325 1 
248 1 205 1 166 1 299 2 133 1 59 1 260 1 171 1 23 1 99 1 309 1 67 1 177 1 268 1 267 1 220 1 278 1 228 1 189 1 226 1 233 1 288 1 325 1 153 1 83 1 198 1 
248 1 205 1 166 1 299 2 133 1 59 1 260 1 171 1 23 1 99 1 309 1 67 1 177 1 268 1 267 1 220 1 143 1 35 1 278 2 189 1 226 1 193 1 233 1 288 1 325 2 153 1 46 1 199 1 83 1 198 1 
248 1 205 1 166 1 299 2 133 1 59 1 260 1 171 1 99 1 23 1 309 1 140 1 67 1 177 1 268 1 267 1 220 1 30 1 143 2 35 1 278 3 228 1 226 1 193 1 233 1 325 3 153 1 199 1 83 1 198 1 
248 1 205 1 166 1 299 2 133 1 59 1 260 1 171 1 99 1 268 1 267 1 220 1 30 1 143 2 35 1 278 2 228 1 226 1 193 1 233 1 325 2 153 1 199 1 198 1 83 1 
172 1 
51 1 4 1 248 2 55 1 7 1 165 1 131 1 169 1 133 2 258 2 260 2 62 1 98 1 21 1 24 1 267 1 219 1 70 1 273 1 184 1 39 1 113 1 226 1 147 1 40 1 285 2 192 2 286 1 240 2 239 1 
258 1 219 1 285 1 98 1 7 1 165 1 131 1 39 1 
258 1 219 1 285 1 98 1 7 1 165 1 131 1 39 1 
258 1 219 1 285 1 98 1 7 1 165 1 131 1 39 1 
43 1 258 2 219 1 192 1 285 2 98 1 7 1 165 1 131 1 39 1 40 1 
70 1 219 1 184 1 7 1 39 1 131 1 165 1 258 1 285 1 62 1 98 1 21 1 
258 1 219 1 285 1 98 1 7 1 165 1 131 1 39 1 
258 1 219 1 285 1 98 1 7 1 165 1 131 1 39 1 
258 1 219 1 285 1 98 1 7 1 165 1 131 1 39 1 
258 1 219 1 285 1 98 1 7 1 165 1 131 1 39 1 
258 1 219 1 285 1 98 1 7 1 165 1 131 1 39 1 
70 1 219 1 184 1 7 1 39 1 131 1 165 1 258 1 285 1 62 1 98 1 21 1 
245 2 4 3 248 6 250 2 169 1 13 2 93 1 260 7 20 1 261 1 22 1 101 1 24 4 25 2 178 2 267 3 108 1 37 1 115 2 188 1 190 1 120 1 191 1 284 1 195 1 122 2 46 1 49 1 126 1 51 1 206 1 207 1 133 7 64 1 65 1 214 1 310 1 221 2 142 1 228 1 226 4 231 4 240 2 
126 1 156 1 245 1 203 1 84 1 247 1 5 1 250 1 207 1 297 1 13 1 16 1 305 1 261 1 214 1 22 1 65 1 173 1 138 1 25 1 178 3 221 1 182 1 145 1 188 2 231 2 80 1 122 1 243 1 
156 1 245 1 272 1 246 1 221 1 247 2 250 1 297 1 188 3 13 1 150 1 283 1 16 1 231 2 63 1 305 2 80 1 65 3 123 1 238 2 122 1 173 1 310 1 25 1 178 6 242 1 
0 1 290 3 245 2 156 11 203 1 247 1 250 2 56 1 297 2 13 2 16 11 305 2 64 1 65 8 138 2 173 4 25 1 178 14 221 2 181 1 275 3 145 1 76 1 188 6 118 1 320 1 191 1 231 4 80 1 238 1 122 2 289 1 243 2 
126 2 200 1 245 1 4 1 248 1 250 1 207 2 13 1 133 1 134 1 17 1 260 1 20 1 261 1 22 1 214 1 64 1 65 1 173 1 24 1 25 1 267 1 178 2 221 1 145 1 73 1 37 1 110 1 112 1 319 1 226 1 188 1 191 1 231 2 238 1 240 1 122 1 327 1 
245 3 156 7 246 1 4 2 247 4 248 3 249 2 250 3 13 3 16 7 260 3 261 1 20 2 22 1 173 7 24 2 25 3 269 1 178 20 267 2 272 1 181 4 38 1 37 1 110 1 112 2 188 10 191 1 123 1 122 3 126 3 203 2 207 3 297 3 133 3 134 2 63 1 305 8 64 1 214 1 137 2 65 10 138 2 66 2 221 3 145 1 319 2 228 1 227 2 226 2 150 1 151 1 78 2 231 6 80 3 238 2 240 1 242 1 243 2 
156 1 245 1 221 1 181 1 250 1 297 1 13 1 16 1 231 2 305 1 306 1 65 2 122 1 173 1 138 1 310 1 25 1 178 2 
156 1 245 1 221 1 203 1 247 1 250 1 114 1 188 2 13 1 16 1 231 2 305 1 80 1 122 1 173 1 310 1 25 1 178 2 
245 1 156 2 203 1 247 1 250 1 297 1 13 1 16 2 305 2 65 2 138 1 173 2 310 1 25 1 178 4 221 1 181 1 188 2 231 2 80 1 122 1 243 1 
156 1 245 1 221 1 181 1 250 1 297 1 13 1 16 1 231 2 305 1 306 1 195 1 65 2 122 1 173 1 138 1 25 1 178 2 
156 1 245 1 221 1 203 1 247 1 250 1 114 1 188 2 13 1 16 1 231 2 305 1 80 1 195 1 122 1 173 1 25 1 178 2 
245 1 156 2 203 1 247 1 250 1 297 1 13 1 16 2 305 2 65 2 138 1 173 2 25 1 178 4 221 1 181 1 188 2 231 2 80 1 195 1 122 1 243 1 
245 1 156 2 203 1 247 1 250 1 297 1 13 1 16 2 305 2 65 2 138 1 173 2 25 1 178 4 221 1 181 1 188 2 231 2 80 1 122 1 243 1 
126 1 245 1 4 1 248 1 250 1 207 1 13 1 133 1 134 1 260 1 20 1 65 1 64 1 24 1 25 1 178 2 267 1 221 1 112 1 319 1 226 1 227 1 188 1 191 1 231 2 238 1 240 1 122 1 
126 1 245 1 4 1 248 1 250 1 207 1 13 1 14 1 133 1 260 1 20 1 97 1 65 1 64 1 24 1 25 1 178 2 267 1 221 1 187 1 112 1 226 1 188 1 191 1 231 2 238 1 240 1 122 1 
245 1 156 2 203 1 247 1 250 1 297 1 13 1 16 2 305 2 65 2 138 1 173 2 25 1 178 4 221 1 181 1 145 1 188 2 231 2 80 1 122 1 243 1 
126 1 156 2 245 1 203 1 4 1 247 1 248 1 250 1 297 1 207 1 13 1 133 1 134 1 16 2 260 1 305 2 20 1 65 2 173 2 138 1 24 1 66 1 25 1 178 4 267 1 221 1 181 1 112 1 319 1 188 2 226 1 227 1 231 2 80 1 122 1 46 1 243 1 
126 1 245 1 156 1 203 1 84 1 250 1 86 1 207 1 297 1 13 1 16 1 305 1 261 1 214 1 22 1 65 2 138 1 173 1 25 1 178 3 221 1 181 1 182 1 145 1 188 1 231 2 80 1 122 1 243 1 
50 1 290 1 2 1 203 3 247 3 85 1 250 2 56 1 297 3 13 2 302 2 135 2 305 6 262 1 65 9 138 3 216 1 178 19 221 2 181 3 275 2 109 1 280 1 111 1 188 10 231 4 80 3 122 2 289 1 243 3 
50 1 290 2 2 1 203 2 247 2 85 2 54 1 250 3 56 2 163 1 297 3 87 2 132 1 13 3 302 1 135 4 305 4 65 14 138 3 216 2 26 1 178 26 221 3 181 2 275 2 280 1 111 1 188 12 77 1 231 6 80 2 122 3 155 1 243 3 
50 1 290 3 246 1 2 1 203 4 247 4 85 1 54 1 250 3 163 1 56 3 297 5 87 1 132 1 13 3 302 1 135 4 63 1 305 8 65 20 138 4 216 2 217 1 26 1 178 41 272 1 221 3 181 4 275 4 109 1 280 1 111 1 188 21 150 1 77 1 231 6 80 5 123 1 122 3 155 1 289 1 242 1 243 4 
50 1 290 3 246 1 2 1 203 3 247 4 85 1 54 1 250 4 163 1 56 3 297 5 87 2 132 1 13 4 302 1 135 4 63 1 305 7 65 20 138 4 216 2 217 1 26 1 178 38 272 1 221 4 181 3 275 4 109 1 280 1 111 1 188 18 150 1 77 1 231 8 80 4 123 1 122 4 155 1 289 1 242 1 243 4 
50 1 290 4 246 1 2 1 203 7 247 7 85 1 54 1 250 2 163 1 56 2 297 8 87 1 132 1 13 2 302 1 135 4 63 1 305 14 65 27 138 7 216 1 26 1 178 52 272 1 221 2 181 7 275 4 280 1 111 1 76 2 188 25 150 1 77 1 231 4 80 8 123 1 122 2 155 1 289 2 242 1 243 7 
126 2 245 1 4 1 248 2 250 1 207 2 206 1 13 1 133 2 260 2 22 2 65 1 64 1 101 1 24 1 311 1 25 1 267 1 178 2 221 1 71 1 145 1 36 1 115 2 226 1 188 1 191 1 231 2 232 1 122 1 47 1 
51 1 4 1 248 1 226 1 166 1 229 1 169 1 133 1 60 1 18 1 260 1 240 1 24 1 267 1 
248 1 205 1 225 1 226 1 228 1 166 1 299 2 133 1 60 1 260 1 99 1 153 1 197 1 83 1 198 1 67 1 268 1 267 1 
248 2 205 1 225 1 226 1 228 1 166 1 299 2 133 2 60 1 260 2 99 1 153 1 46 1 197 1 83 1 198 1 67 1 267 1 268 1 
248 1 205 1 228 1 166 1 226 1 299 2 133 1 260 1 234 1 99 1 153 1 197 1 83 1 198 1 67 1 268 1 267 1 
100 1 
70 1 293 1 184 1 117 1 92 1 62 1 21 1 286 1 239 1 332 1 
202 1 107 5 203 2 293 5 297 2 57 10 41 5 91 5 170 2 80 2 286 5 137 1 239 5 138 2 243 2 
258 1 285 1 192 1 293 1 117 1 40 1 
51 1 128 1 4 1 248 4 296 2 55 2 169 1 133 4 258 3 94 1 260 4 62 2 21 2 24 1 267 1 70 2 273 1 184 1 113 1 226 1 147 2 40 2 192 4 285 3 323 1 286 2 240 2 239 2 125 1 
92 1 283 1 293 1 286 1 239 1 117 1 332 1 
293 2 57 1 15 1 258 1 62 1 21 1 174 1 70 1 183 1 184 1 41 1 40 1 117 1 192 1 285 1 286 1 239 1 
4 3 248 3 164 3 168 2 257 1 258 5 92 1 91 6 170 2 260 3 20 3 21 4 264 2 265 1 24 10 267 3 107 6 184 4 117 2 40 3 41 6 192 5 285 5 286 9 46 1 125 1 291 1 202 2 203 2 293 8 296 1 55 1 297 2 57 12 133 3 210 2 62 4 137 2 139 2 138 2 70 4 314 2 222 2 72 2 147 2 226 4 321 2 152 2 80 2 240 1 239 8 332 1 329 1 243 2 
290 2 202 1 203 4 293 7 54 1 55 1 56 1 163 1 297 4 57 10 258 1 91 8 211 1 170 5 62 2 96 1 21 2 138 4 26 1 70 2 107 8 275 2 184 2 147 1 40 1 117 2 41 5 76 1 77 1 285 1 192 1 286 13 80 4 239 8 155 1 289 1 243 4 
126 1 52 1 202 1 246 1 157 1 84 1 207 1 297 2 10 1 90 1 258 1 170 2 62 1 261 1 21 1 214 1 22 1 29 1 70 1 106 1 272 1 184 1 224 1 285 1 80 1 286 2 239 2 242 1 
126 3 52 1 245 1 84 2 4 1 248 1 250 1 207 3 13 1 133 1 134 1 260 1 261 2 20 1 64 1 22 2 214 2 312 1 24 1 25 1 178 1 267 1 221 1 112 1 319 1 188 1 227 1 226 1 231 2 238 1 122 1 240 1 
70 1 107 2 293 4 184 1 55 1 57 4 41 2 147 1 117 2 91 2 62 1 21 1 286 1 123 1 239 2 
144 1 276 1 317 1 235 1 102 1 
209 1 276 1 317 1 
209 1 276 1 317 1 
209 1 276 1 317 1 
276 1 317 1 254 1 
276 1 317 1 254 1 
276 1 317 1 254 1 
276 1 317 1 
119 1 271 1 
221 1 157 1 246 2 272 1 181 2 247 3 250 1 111 1 297 2 188 5 13 1 231 2 305 5 80 2 65 5 122 1 242 2 178 10 
221 1 181 1 250 1 111 1 297 1 13 1 231 2 305 1 65 2 122 1 138 1 178 2 
221 1 203 1 181 1 247 1 250 1 111 1 297 1 188 2 13 1 231 2 305 2 80 1 65 2 122 1 138 1 243 1 178 4 
127 1 221 3 246 1 181 1 247 1 109 1 250 3 111 1 87 1 188 2 13 3 231 6 305 2 65 1 122 3 178 3 242 1 
127 1 290 3 246 3 203 3 247 7 252 1 250 5 56 1 297 5 87 2 13 5 63 1 305 12 307 1 65 16 215 1 138 3 178 34 272 2 221 5 181 5 275 4 109 1 111 1 188 18 150 1 231 10 80 5 82 1 123 1 122 5 289 1 242 3 243 3 
290 1 246 1 247 2 250 1 56 1 163 1 297 1 13 1 63 1 305 2 65 4 178 8 221 1 272 1 275 1 111 1 188 4 150 1 231 2 80 1 123 1 122 1 242 1 
290 1 246 1 247 2 250 2 56 1 163 1 297 2 13 2 63 1 305 3 307 1 65 6 138 1 178 11 272 1 221 2 181 1 275 2 111 1 188 5 150 1 231 4 80 1 123 1 122 2 289 1 242 1 243 1 
290 1 246 1 203 2 247 3 54 1 250 3 56 1 163 1 297 3 87 1 13 3 63 1 305 4 307 1 65 9 138 2 26 1 178 19 272 1 221 3 181 1 275 1 111 1 188 10 150 1 77 1 231 6 80 3 123 1 122 3 155 1 242 1 243 2 
290 1 246 1 203 1 247 3 54 1 250 3 56 1 163 1 297 3 87 1 13 3 63 1 305 5 307 1 65 10 138 2 26 1 178 17 272 1 221 3 181 2 275 1 111 1 188 7 150 1 77 1 231 6 80 2 123 1 122 3 155 1 242 1 243 2 
290 1 246 1 247 2 250 1 56 1 163 1 297 1 13 1 63 1 305 2 65 4 178 8 221 1 272 1 275 1 111 1 188 4 150 1 231 2 80 1 123 1 122 1 242 1 
290 1 203 2 247 1 54 1 250 1 56 1 163 1 297 2 13 1 305 2 65 6 138 2 26 1 178 12 221 1 181 1 275 1 111 1 188 6 77 1 231 2 80 2 122 1 155 1 243 2 
290 1 246 1 203 1 247 3 54 1 250 4 56 1 163 1 297 3 87 2 13 4 63 1 305 5 307 1 65 10 138 2 26 1 178 18 272 1 221 4 181 2 275 1 111 1 188 8 150 1 77 1 231 8 80 2 123 1 122 4 155 1 242 1 243 2 
290 1 203 2 247 3 54 1 250 4 56 1 163 1 297 3 87 2 13 4 305 6 65 9 138 3 26 1 178 16 221 4 181 3 275 1 109 1 111 1 188 7 77 1 231 8 80 2 122 4 155 1 243 3 
246 3 272 1 181 3 247 3 297 1 188 4 150 1 63 2 305 6 80 1 65 3 178 7 242 3 
290 1 246 1 203 1 247 3 54 1 250 4 56 1 163 1 297 3 87 2 13 4 63 1 305 4 65 10 138 2 26 1 178 18 272 1 221 4 181 1 275 1 109 1 111 1 188 8 150 1 77 1 231 8 80 2 123 1 122 4 155 1 242 1 243 2 
272 1 221 2 246 1 181 1 247 2 250 2 297 1 87 1 188 4 13 2 150 1 231 4 63 1 305 3 80 1 65 4 123 1 122 2 178 8 242 1 
150 1 283 1 272 1 246 1 63 1 305 2 80 1 247 2 65 3 123 1 297 1 188 3 178 6 242 1 
221 1 203 1 181 1 247 1 250 1 297 1 188 2 13 1 231 2 305 2 80 1 307 1 65 2 122 1 138 1 243 1 178 4 
290 1 203 1 181 1 275 2 247 1 56 1 297 1 188 4 305 2 80 1 65 3 138 1 289 1 178 7 243 1 
290 2 127 1 246 2 203 2 247 5 250 2 297 3 87 2 13 2 63 1 305 9 65 11 138 2 178 23 272 1 221 2 181 4 275 2 188 12 76 1 118 1 150 1 231 4 80 3 123 1 122 2 289 1 242 2 243 2 
275 1 188 1 178 1 
290 1 65 1 178 1 
221 1 203 1 181 1 247 2 250 1 297 1 188 3 13 1 231 2 305 3 307 1 80 1 137 1 65 3 122 1 138 1 178 6 243 1 
290 1 203 2 247 1 54 1 250 1 56 1 163 1 297 2 13 1 305 2 65 6 138 2 26 1 178 12 221 1 181 1 275 1 111 1 188 6 77 1 231 2 80 2 122 1 155 1 243 2 
272 1 246 1 181 1 247 1 297 1 188 3 305 2 80 1 65 3 178 6 242 1 
127 1 246 1 221 1 181 1 247 1 250 1 87 1 188 2 13 1 150 1 231 2 63 1 305 2 65 1 122 1 242 1 178 3 
126 1 129 1 22 1 238 1 207 1 11 1 330 1 
126 1 180 1 129 1 277 1 207 1 11 1 213 1 22 1 238 1 175 1 328 1 330 1 
51 1 4 1 248 4 282 1 226 1 169 1 133 4 260 4 287 1 240 1 46 1 24 1 267 1 
4 1 248 2 296 1 38 1 226 2 190 1 120 1 133 2 93 1 284 1 260 2 20 1 24 1 267 1 
299 1 133 1 260 1 248 1 240 1 153 1 205 1 198 1 226 1 267 1 
4 1 248 2 36 1 228 1 226 1 133 2 260 2 101 1 46 1 24 1 267 1 
51 1 142 1 4 2 248 4 296 1 282 1 226 2 169 1 133 5 260 5 240 1 101 1 46 1 49 1 24 3 267 2 
28 1 51 1 142 1 4 2 248 4 296 1 282 1 226 2 169 1 133 5 260 5 240 1 101 1 46 1 24 3 267 2 
169 1 51 1 133 1 283 1 260 1 4 1 248 1 240 1 24 1 226 1 267 1 
126 2 4 1 248 1 37 1 112 1 207 2 226 1 133 1 134 1 260 1 20 1 261 1 214 1 22 1 238 1 240 1 24 1 267 1 
126 2 4 2 248 1 296 1 207 2 10 1 58 1 168 1 133 1 134 1 259 1 260 1 261 2 20 2 22 2 214 1 264 1 24 3 267 1 37 1 112 1 226 1 238 1 
126 2 4 2 248 2 296 1 207 2 10 1 58 1 168 1 133 2 259 1 260 2 97 1 261 2 20 2 22 2 214 1 264 1 24 3 267 1 37 1 112 1 226 1 287 1 238 1 
244 1 72 1 293 1 4 1 248 3 296 1 164 1 117 1 226 1 168 1 44 1 258 2 133 3 285 2 192 1 210 1 260 3 20 1 287 1 240 1 264 1 24 4 267 1 
72 1 293 1 4 1 248 3 296 1 164 1 117 1 226 1 168 1 258 2 133 3 285 2 152 1 192 1 210 1 260 3 20 1 287 1 240 1 264 1 24 4 267 1 
133 1 260 1 248 1 130 1 226 1 267 1 
291 1 142 1 108 1 4 2 248 5 115 1 228 1 256 1 226 3 190 1 120 1 133 6 260 6 20 1 240 2 101 1 46 1 49 1 24 3 267 2 
126 2 156 1 245 2 246 1 4 1 247 2 248 1 249 1 250 2 297 1 207 2 13 2 133 1 134 1 16 1 260 1 63 1 305 2 20 1 261 1 65 3 22 1 214 1 173 1 24 1 25 2 66 1 178 6 267 1 272 1 221 2 145 1 37 1 112 1 319 1 188 3 226 1 227 1 150 1 231 4 232 1 80 1 123 1 238 2 122 2 46 1 242 1 
293 1 248 1 164 1 258 3 133 1 92 1 260 1 210 1 62 2 21 2 24 2 70 2 314 1 222 1 72 1 184 2 117 1 40 1 285 3 321 1 152 1 192 2 286 1 239 1 240 1 125 1 196 1 332 1 
291 1 72 1 4 1 248 2 130 1 226 2 133 2 260 2 20 1 46 1 24 2 329 1 267 1 
126 2 4 1 248 1 37 1 112 1 207 2 226 1 133 1 260 1 20 1 261 1 97 1 214 1 22 1 238 1 240 1 24 1 267 1 
291 1 4 1 248 1 296 1 256 1 226 2 190 1 120 1 133 1 260 1 20 1 24 1 267 1 
238 1 263 1 6 1 8 1 331 1 
258 1 285 1 31 1 19 1 146 1 263 1 196 1 
126 1 71 1 22 1 263 1 6 1 207 1 311 1 47 1 8 1 
146 1 53 1 6 1 8 1 10 1 58 1 259 1 210 1 19 1 98 1 263 1 331 1 
193 1 35 1 278 1 23 1 325 1 309 1 199 1 189 1 
143 2 35 2 34 2 278 3 167 1 12 1 193 2 79 1 23 1 325 3 309 1 199 2 27 1 
143 1 3 1 35 1 278 2 295 1 189 1 193 1 45 1 23 1 325 2 309 1 199 1 
34 1 278 1 35 1 189 1 148 1 79 1 23 1 325 1 309 1 199 1 
105 1 193 2 158 2 32 1 
179 1 278 1 23 1 325 1 309 1 189 1 
193 1 143 1 81 1 35 1 278 2 23 1 325 2 309 1 199 1 189 1 
270 1 
193 1 35 1 278 1 23 1 325 1 309 1 199 1 189 1 
283 1 193 1 35 1 199 1 
193 1 35 1 278 1 23 1 325 1 309 1 199 1 
220 1 171 1 278 1 
34 1 278 1 35 1 189 1 79 1 23 1 325 1 309 1 199 1 27 1 
193 1 143 1 35 1 278 2 236 1 23 1 325 2 309 1 199 1 
299 1 201 1 193 1 278 1 23 1 325 1 205 1 309 1 83 1 167 1 189 1 
193 1 35 1 278 1 23 1 325 1 309 1 189 1 
35 2 278 1 23 1 325 1 309 1 199 1 189 1 
35 1 278 2 189 1 193 1 61 1 23 2 154 1 325 2 309 2 266 1 
143 2 35 1 278 3 186 1 189 1 167 1 12 1 193 2 81 1 23 1 325 3 309 1 199 1 
143 1 160 1 35 1 278 2 205 1 189 1 299 2 193 1 23 1 99 1 325 2 309 1 199 1 198 1 83 1 
143 2 35 1 278 4 162 1 189 1 167 1 12 1 193 2 23 2 236 1 325 4 309 2 199 1 
193 1 143 1 81 1 35 1 278 3 237 1 23 1 325 3 309 1 199 1 189 1 
193 1 34 1 167 1 12 1 
193 1 35 1 

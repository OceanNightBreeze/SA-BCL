#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (119,167) (140,303) (140,303) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (119,167) (140,303) (140,303) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (119,167) (140,303) (140,303) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (119,167) (140,303) (140,303) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (119,167) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (119,167) 39 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (119,167) 39 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 295 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
58 1 167 1 329 1 276 1 49 1 226 1 23 2 100 1 303 1 317 1 334 1 119 1 306 2 17 1 140 1 208 1 
58 1 167 1 329 1 276 1 49 1 226 1 23 2 100 1 303 1 334 1 317 1 119 1 306 2 17 1 140 1 208 1 
58 1 167 1 329 1 276 1 49 1 226 1 23 2 100 1 303 1 334 1 317 1 119 1 306 2 17 1 140 1 208 1 
58 1 167 1 329 1 276 1 49 1 226 1 23 2 100 1 303 1 334 1 317 1 119 1 306 2 17 1 140 1 208 1 
234 1 58 1 143 2 110 1 68 3 257 1 75 3 276 1 226 1 23 4 9 2 81 1 317 1 320 1 195 1 306 4 17 1 208 1 
58 1 110 1 75 1 314 1 329 1 276 1 226 1 23 2 100 1 81 1 13 1 334 1 306 2 230 1 17 1 208 1 
58 1 167 1 276 1 306 1 17 1 23 1 
58 1 68 1 167 1 39 1 276 1 306 2 17 1 365 1 23 2 
58 1 68 1 167 1 39 1 276 1 306 2 17 1 365 1 23 2 
6 1 117 1 41 1 
6 1 28 2 259 1 
92 1 43 2 347 2 330 1 45 2 95 2 371 2 136 2 
96 1 59 1 124 1 78 1 127 1 34 1 211 1 262 1 316 1 8 1 263 2 12 1 319 1 83 1 130 2 296 2 272 1 43 3 86 2 45 2 153 1 371 3 278 1 112 1 136 2 92 1 114 1 137 1 347 2 330 1 348 1 26 1 159 1 95 2 72 2 231 1 57 1 
0 1 43 1 138 1 347 1 330 1 45 1 95 1 371 1 120 1 136 1 
43 1 290 1 45 1 275 1 239 1 371 1 260 1 6 1 342 1 82 1 41 1 42 1 120 1 150 1 
43 1 290 1 45 1 239 2 275 1 371 1 136 1 6 1 347 1 342 2 82 1 95 1 41 1 120 1 150 1 
131 1 342 1 328 1 239 1 84 1 
131 1 6 1 342 2 328 1 339 1 239 2 41 1 16 1 
342 1 328 1 239 1 
131 1 0 1 43 1 45 1 239 1 156 1 371 1 136 1 138 1 330 1 347 1 342 1 95 1 120 1 
6 1 
35 1 131 1 6 1 342 2 328 1 339 1 239 2 41 1 
131 2 134 2 145 2 339 1 239 5 77 1 328 2 212 1 6 1 93 1 342 5 10 2 103 1 264 1 318 1 161 1 173 1 41 1 206 1 
43 2 86 1 45 1 371 2 315 1 127 1 136 1 114 1 137 1 348 1 8 1 316 1 26 1 12 1 83 1 95 1 72 1 141 1 296 1 232 1 
92 1 117 1 
43 2 45 2 222 1 371 2 225 1 136 1 92 1 347 1 293 1 95 1 120 1 
11 1 36 1 141 1 
43 1 86 1 371 1 127 1 92 1 114 1 137 1 348 1 316 1 8 1 26 1 12 1 54 1 83 1 72 1 296 1 
92 1 43 3 347 1 45 3 95 3 371 3 315 1 136 3 
43 1 138 1 45 1 95 1 371 1 120 1 136 1 
43 1 45 1 222 1 371 1 136 1 347 1 293 1 95 1 120 1 
290 1 239 1 8 1 342 1 12 1 296 1 150 1 153 1 112 1 114 1 347 2 348 1 26 1 72 1 120 2 124 1 315 1 127 1 34 1 211 1 262 1 316 1 265 1 263 2 82 1 83 1 319 1 130 1 272 1 86 1 43 4 45 3 222 1 275 1 371 4 225 1 136 3 92 1 330 1 137 1 333 1 95 3 231 1 232 1 57 1 
43 2 133 1 45 2 371 2 315 1 225 1 136 1 92 1 95 1 120 1 42 1 
43 3 290 1 45 3 222 1 239 1 275 1 371 3 315 2 136 3 6 1 347 1 192 1 342 1 333 1 82 1 95 3 120 1 150 1 232 1 
43 2 45 2 222 1 371 2 315 1 136 2 347 1 36 1 95 2 141 1 
43 1 86 1 371 1 127 1 92 1 114 1 137 1 348 1 316 1 8 1 26 1 12 1 83 1 72 1 296 1 
43 1 86 1 371 1 146 1 92 1 114 1 137 1 348 1 316 1 8 1 26 1 12 1 193 1 72 1 296 1 
124 1 237 1 34 1 211 1 214 1 11 2 80 1 263 2 36 2 319 1 130 4 243 1 217 1 153 1 224 1 112 1 116 1 331 1 159 2 336 1 141 2 57 2 
43 1 290 1 45 1 371 1 136 1 95 1 120 1 352 1 
133 1 43 5 45 5 222 1 155 1 371 5 357 1 315 2 136 4 92 1 347 1 95 4 42 1 232 1 
43 1 138 1 45 1 95 1 371 1 120 1 136 1 
267 1 180 1 
267 1 180 1 
266 1 238 1 
266 1 238 1 
266 1 238 1 
267 1 168 1 180 1 
267 1 168 1 180 1 
267 1 180 1 56 1 
236 1 266 1 238 1 267 2 180 2 281 1 
267 1 168 1 180 1 
267 1 350 1 180 1 
267 1 350 1 180 1 
267 1 350 1 180 1 
144 1 312 2 198 2 236 1 291 1 368 1 239 2 169 2 69 2 190 1 6 1 205 2 342 2 267 2 180 2 196 1 163 1 254 1 18 3 
184 1 312 1 239 1 169 1 190 1 342 1 267 1 38 1 15 1 242 1 18 1 107 1 43 2 132 1 45 2 371 2 136 2 69 1 92 1 205 1 285 1 95 2 180 1 56 1 
317 1 226 1 208 1 
230 1 226 1 208 1 
366 1 317 2 188 1 48 1 230 1 208 3 
309 1 317 1 188 1 48 1 230 1 208 2 
317 1 48 1 188 2 230 1 208 2 
0 1 145 1 237 1 339 1 239 5 358 1 259 1 212 3 6 2 292 1 80 1 10 1 342 5 264 1 41 1 15 1 131 4 43 1 134 1 45 1 87 1 221 2 328 1 88 2 156 1 371 1 136 1 50 2 177 1 116 1 138 1 347 1 330 1 71 1 94 1 28 3 161 2 95 1 336 1 120 1 
0 1 145 1 237 1 239 5 339 1 6 2 292 1 342 5 10 1 15 1 197 1 156 1 116 1 347 1 71 1 28 3 161 2 120 1 253 1 358 1 259 1 212 3 80 1 264 1 84 2 41 1 131 4 43 1 134 1 45 1 221 2 328 3 88 2 371 1 277 2 136 1 177 1 330 1 138 1 95 1 336 1 
0 1 145 1 237 1 239 3 358 1 259 1 6 2 212 1 292 1 10 1 342 3 80 1 41 1 15 1 131 2 43 1 134 1 45 1 87 1 221 1 156 1 88 1 371 1 136 1 50 1 177 1 138 1 347 1 330 1 93 1 94 1 28 2 95 1 161 2 120 1 
145 1 237 1 239 2 358 1 259 1 6 1 212 1 292 1 10 1 342 2 80 1 295 1 15 1 131 1 134 1 87 1 221 1 88 1 50 1 177 1 93 1 94 1 28 2 161 2 
117 1 256 1 12 1 
12 1 356 1 
46 1 
137 1 12 1 
183 1 137 1 256 2 26 1 341 1 12 3 
137 1 26 1 12 1 
91 1 12 1 
237 1 61 1 22 1 99 1 283 3 24 2 304 1 148 1 159 4 104 1 149 1 362 1 336 1 130 7 66 2 374 1 57 3 
237 1 61 1 22 1 99 1 283 3 24 2 304 1 148 1 159 4 104 1 149 1 362 1 336 1 130 7 66 2 374 1 57 3 
237 1 61 1 22 1 301 1 99 1 283 3 24 2 304 1 148 1 159 4 104 1 149 1 362 1 336 1 130 7 66 2 374 1 57 3 
166 1 338 1 237 4 61 1 99 1 34 1 211 1 7 4 80 3 263 2 148 2 172 1 149 1 104 2 294 1 319 1 362 1 130 31 85 3 66 3 245 1 151 1 22 5 112 1 177 3 283 8 116 3 24 3 304 2 372 1 159 16 336 4 374 2 57 15 
237 1 61 1 34 2 211 2 63 1 263 4 148 1 319 2 104 1 149 1 362 1 130 9 66 2 22 1 112 2 283 4 332 1 24 3 304 1 372 1 159 5 336 1 374 1 57 4 
58 1 32 1 75 1 316 1 81 1 317 1 194 1 296 1 17 1 297 1 86 1 366 1 109 1 110 1 68 1 276 1 113 1 302 1 226 1 23 2 250 1 348 1 284 1 334 1 72 1 30 1 306 2 230 1 233 1 208 2 
32 1 4 1 75 1 340 1 316 1 81 1 317 1 194 1 296 1 17 1 218 1 366 1 86 1 109 1 110 1 68 2 276 1 113 1 302 1 226 1 23 3 250 1 348 1 284 1 334 1 72 1 30 1 306 3 230 1 208 2 
32 1 4 1 75 1 316 1 81 1 317 1 194 1 296 1 218 1 86 1 366 1 109 1 110 1 68 2 113 1 226 1 23 2 348 1 284 1 334 1 72 1 30 1 306 2 230 1 208 2 
86 1 32 2 370 1 276 1 157 1 113 2 23 1 114 1 137 1 340 1 348 1 316 1 284 2 12 1 335 1 334 2 215 1 268 1 72 1 40 1 306 1 17 1 296 1 
58 1 32 1 4 1 316 1 317 1 194 1 296 1 17 1 297 1 86 1 366 1 109 1 276 1 113 1 302 1 226 1 23 1 250 1 348 1 284 1 334 1 72 1 30 1 306 1 230 1 208 2 
129 1 
290 1 145 1 339 3 239 5 189 1 101 1 6 2 292 1 191 1 342 5 10 1 12 1 67 2 296 2 150 1 298 2 152 2 199 1 114 2 348 1 28 2 160 1 161 2 72 2 120 1 310 1 74 1 259 2 260 1 212 2 261 4 316 1 264 1 82 1 268 1 41 1 42 1 271 1 174 2 323 2 86 2 43 1 134 1 45 1 370 1 328 6 275 1 371 1 89 2 279 2 137 1 52 1 53 1 139 1 375 1 
290 1 310 1 74 1 239 3 339 1 189 1 260 1 35 1 261 2 191 1 342 3 82 1 42 1 150 1 271 1 174 1 43 1 45 1 275 1 328 2 371 1 120 1 
290 1 310 1 74 1 239 3 339 1 189 1 260 1 35 1 261 3 6 1 191 1 342 3 82 1 41 1 42 1 150 1 271 1 43 1 152 1 45 1 328 1 275 1 371 1 120 1 
290 1 310 1 74 1 339 1 239 3 189 1 35 1 260 1 261 3 6 1 191 1 342 3 82 1 41 1 42 1 150 1 271 1 174 1 43 1 152 1 45 1 275 1 328 2 371 1 89 1 120 1 
31 1 290 1 310 1 125 1 145 1 74 1 97 1 339 3 239 5 259 2 189 1 101 1 170 1 260 1 35 1 212 1 6 5 261 6 191 1 10 1 342 5 264 1 82 1 41 5 67 2 42 1 150 1 271 1 323 2 174 4 298 2 43 1 152 4 134 1 45 1 328 7 275 1 371 1 89 4 279 2 227 1 161 1 139 1 120 1 
290 1 145 1 239 4 339 2 189 1 101 1 6 2 191 1 342 4 10 1 67 2 150 1 298 2 152 2 199 1 28 2 161 1 120 1 310 1 74 1 259 2 260 1 261 4 212 1 264 1 82 1 41 1 42 1 271 1 323 2 174 2 43 1 134 1 45 1 275 1 328 4 371 1 89 2 279 2 139 1 
290 1 310 1 125 1 145 1 74 1 339 2 239 4 259 2 189 1 101 1 170 1 260 1 6 1 212 1 261 4 191 1 342 4 10 1 264 1 82 1 41 1 67 2 42 1 150 1 271 1 174 2 323 2 298 2 43 1 152 2 134 1 45 1 328 4 275 1 371 1 89 2 279 2 227 1 161 1 139 1 120 1 
290 1 310 1 125 1 145 1 74 1 339 2 239 4 259 2 189 1 101 1 170 1 260 1 6 1 212 1 261 4 191 1 342 4 10 1 264 1 82 1 41 1 67 2 42 1 150 1 271 1 174 2 323 2 298 2 43 1 152 2 134 1 45 1 328 4 275 1 371 1 89 2 279 2 227 1 161 1 139 1 120 1 
290 1 310 1 3 1 145 1 74 1 339 2 239 4 189 1 101 1 170 1 260 1 6 1 212 1 261 4 191 1 342 4 10 1 264 1 82 1 37 1 41 1 42 1 150 1 271 1 174 2 323 2 298 2 43 1 152 2 134 1 45 1 200 2 326 2 328 4 275 1 371 1 89 2 28 2 161 1 29 1 120 1 
31 1 290 1 310 1 125 1 145 1 74 1 339 2 239 4 259 2 189 1 101 1 170 1 260 1 6 1 212 1 261 5 191 1 10 1 342 4 264 1 82 1 41 1 67 2 42 1 150 1 271 1 323 2 174 3 298 2 43 1 152 3 134 1 45 1 275 1 328 5 371 1 89 3 279 2 227 1 161 1 139 1 120 1 
31 1 290 1 310 1 125 1 145 1 74 1 339 2 239 4 259 2 189 1 101 1 170 1 260 1 6 1 212 1 261 5 191 1 10 1 342 4 264 1 82 1 41 1 67 2 42 1 150 1 271 1 323 2 174 3 298 2 43 1 152 3 134 1 45 1 275 1 328 5 371 1 89 3 279 2 227 1 161 1 139 1 120 1 
290 1 145 1 239 4 339 2 189 1 101 1 6 1 191 1 342 4 10 1 150 1 298 2 152 2 200 2 199 1 28 2 161 1 120 1 310 1 74 1 260 1 261 4 212 1 264 1 82 1 37 1 41 1 42 1 271 1 323 2 174 2 43 1 134 1 45 1 326 2 275 1 328 4 371 1 89 2 
124 1 237 1 61 1 34 1 211 1 11 1 36 1 263 2 149 1 319 1 362 1 130 6 66 1 153 1 224 1 112 1 283 2 92 2 304 1 117 1 24 2 159 3 336 1 141 1 374 1 57 3 
123 1 124 2 237 2 34 2 211 2 7 3 11 10 80 2 263 4 36 3 319 2 65 1 130 12 85 3 151 1 245 1 153 1 201 1 22 1 278 1 112 2 92 1 283 1 177 2 159 8 231 1 121 1 307 1 141 10 57 4 
124 1 315 1 127 1 34 1 211 1 8 1 316 1 12 1 36 1 263 2 83 1 319 1 130 2 105 1 296 1 363 1 86 1 43 2 45 1 153 1 135 1 201 1 371 2 278 1 112 1 136 1 92 1 114 1 137 1 348 1 26 1 159 1 54 1 72 1 95 1 231 1 232 1 57 1 
288 1 124 2 315 1 127 1 34 2 211 2 240 1 8 1 316 1 12 1 263 4 83 1 319 2 321 1 130 1 296 1 272 1 43 2 86 1 45 1 153 2 201 1 371 2 112 2 136 1 114 1 137 1 348 1 26 1 95 1 72 1 231 1 232 1 122 1 57 1 
124 2 4 1 78 2 258 1 33 1 315 1 34 2 211 2 316 2 12 3 263 4 319 2 268 1 130 2 296 8 43 1 86 7 20 1 45 1 153 2 327 1 175 1 224 1 370 1 371 1 278 1 112 2 345 1 136 1 114 2 137 2 348 2 159 1 373 1 95 1 72 8 231 1 233 1 57 1 
124 1 311 1 237 1 34 1 211 1 11 1 80 1 36 1 263 2 319 1 130 3 43 1 45 1 153 1 222 1 201 1 371 1 112 1 136 1 283 1 177 1 347 1 116 1 24 1 159 1 95 1 336 1 141 1 57 2 
124 1 153 1 237 1 224 1 112 1 34 1 211 1 11 1 80 1 36 1 263 2 159 2 319 1 130 2 141 1 243 1 
124 1 153 1 224 1 112 1 34 1 211 1 283 1 116 1 24 1 214 1 11 1 36 1 263 2 319 1 130 2 336 1 141 1 57 2 
124 1 153 1 237 1 224 1 112 1 34 1 211 1 177 1 11 1 80 1 36 1 263 2 159 2 319 1 130 2 141 1 
124 1 153 1 237 1 345 1 112 1 34 1 211 1 11 1 80 1 36 1 263 2 159 2 319 1 130 2 141 1 243 1 
124 1 153 1 345 1 112 1 34 1 211 1 283 1 116 1 24 1 214 1 11 1 36 1 263 2 319 1 130 2 336 1 141 1 57 2 
124 1 153 1 237 1 345 1 112 1 34 1 211 1 177 1 11 1 80 1 36 1 263 2 159 2 319 1 130 2 141 1 
124 1 153 1 237 1 112 1 34 1 211 1 177 1 11 1 80 1 36 1 263 2 159 2 319 1 130 2 141 1 
124 1 127 1 34 1 211 1 8 1 316 1 12 1 263 2 83 1 319 1 130 2 296 1 272 1 86 1 43 1 153 1 371 1 278 1 112 1 92 1 114 1 137 1 348 1 26 1 159 1 72 1 231 1 57 1 
255 1 124 1 146 1 34 1 211 1 8 1 316 1 12 1 263 2 193 1 319 1 130 2 296 1 86 1 43 1 153 1 371 1 278 1 112 1 92 1 114 1 137 1 348 1 26 1 159 1 72 1 231 1 57 1 
124 1 153 1 237 1 201 1 112 1 34 1 211 1 177 1 11 1 80 1 36 1 263 2 159 2 319 1 130 2 141 1 
288 1 124 1 237 1 127 1 34 1 211 1 8 1 316 1 11 1 80 1 36 1 12 1 263 2 83 1 319 1 130 2 296 1 272 1 86 1 43 1 153 1 371 1 112 1 177 1 137 1 348 1 26 1 159 2 72 1 141 1 233 1 
124 1 237 1 34 1 211 1 80 1 11 1 263 2 319 1 130 3 43 1 45 1 153 1 222 1 154 1 201 1 371 1 112 1 136 1 177 1 347 1 116 1 159 2 95 1 336 1 141 1 57 1 
286 1 289 1 354 1 60 2 237 2 34 2 211 2 7 2 63 1 80 2 263 4 319 2 130 15 85 1 151 1 245 1 220 1 22 1 112 2 249 1 177 2 283 1 116 2 305 1 159 7 55 1 336 2 57 8 
286 1 289 1 354 1 60 2 237 2 34 2 211 2 7 2 63 1 80 2 263 4 319 2 130 15 85 1 151 1 245 1 220 1 22 1 112 2 249 1 177 2 283 1 116 2 305 1 159 7 55 1 336 2 57 8 
286 1 308 1 209 1 354 1 60 4 237 5 187 1 76 1 61 1 98 1 34 2 211 2 7 3 63 1 80 4 263 4 149 1 319 2 362 1 130 33 66 1 85 2 151 2 245 1 19 1 220 1 22 2 112 2 249 1 283 4 177 4 116 2 304 1 24 2 372 1 305 1 159 18 55 1 336 3 374 1 57 15 
286 1 289 1 354 1 60 1 237 2 355 1 34 2 211 2 7 2 63 1 80 2 263 4 319 2 130 11 85 1 151 1 245 1 22 1 112 2 249 1 177 2 283 1 116 1 305 1 159 6 55 1 336 1 57 5 
286 2 308 1 209 1 354 1 60 3 187 1 237 3 76 1 98 1 34 2 211 2 7 2 63 1 80 3 263 4 319 2 130 21 85 2 151 2 19 1 220 1 112 2 249 1 283 1 177 3 116 1 24 1 372 1 305 1 159 12 55 2 336 1 57 9 
70 1 205 1 312 1 236 1 291 1 267 1 169 1 180 1 196 1 69 1 
107 1 56 1 
204 1 205 1 312 1 210 1 267 1 169 1 180 1 73 1 69 1 
144 1 312 1 198 1 236 1 291 1 368 1 239 1 169 1 69 1 190 1 6 1 205 1 342 1 267 1 180 1 196 1 163 1 18 2 
144 1 312 1 198 1 236 1 291 1 368 1 239 1 169 1 69 1 190 1 6 1 205 1 342 1 267 1 180 1 196 1 163 1 18 2 
144 1 312 1 198 1 236 1 291 1 368 1 239 1 169 1 69 1 190 1 6 1 205 1 342 1 267 1 180 1 196 1 163 1 18 2 
168 1 337 1 281 1 
168 1 337 1 281 1 
361 1 350 1 
361 1 350 1 281 1 
132 1 242 1 
184 1 312 1 313 1 239 1 169 1 342 1 267 1 38 1 15 1 242 1 18 1 131 1 107 1 43 2 132 1 45 2 198 1 371 2 69 1 136 2 92 1 205 1 285 1 95 2 180 1 163 1 56 1 
168 1 337 1 
361 1 350 1 281 1 
124 1 78 2 128 1 34 1 211 1 316 1 12 1 263 2 64 1 343 1 319 1 130 2 296 2 43 2 86 2 45 2 153 1 327 1 175 1 201 1 371 2 278 1 112 1 176 1 137 1 348 1 159 1 72 2 231 1 353 1 57 1 
366 1 86 2 1 1 109 1 165 1 47 1 4 1 302 1 226 1 348 1 316 1 284 1 317 1 72 2 30 1 230 1 296 2 233 1 208 2 
366 1 86 1 1 1 109 1 4 1 302 1 226 1 348 1 284 1 316 1 317 1 72 1 30 1 230 1 162 1 296 1 208 2 
86 1 47 1 370 1 157 1 114 1 137 1 348 1 316 1 284 1 12 1 72 1 268 1 296 1 182 1 
366 1 86 1 1 1 109 1 165 1 47 1 4 1 302 1 226 1 348 1 284 1 316 1 317 1 72 1 30 1 230 1 296 1 208 2 
108 1 
212 1 6 1 117 1 318 1 161 1 173 1 41 1 
145 1 339 1 239 1 259 1 212 1 6 2 10 1 342 1 264 1 41 1 67 1 134 1 328 1 279 1 28 1 161 1 139 1 
256 1 145 2 237 1 339 1 239 2 356 2 259 2 6 2 212 2 292 1 171 1 316 1 80 1 342 2 341 1 10 2 14 1 264 2 12 4 150 1 296 1 86 1 273 1 299 1 325 1 134 2 221 2 328 2 88 2 158 1 177 1 114 1 137 1 348 2 26 1 28 4 161 3 72 1 207 1 181 1 142 1 
209 1 145 2 187 1 237 2 239 1 339 1 76 1 98 1 259 3 213 1 212 8 6 5 292 1 7 1 342 1 10 2 80 2 264 2 85 1 41 2 322 1 151 1 19 1 299 2 134 2 221 5 369 1 328 1 88 5 177 2 116 2 53 1 28 6 161 5 336 2 
0 1 145 1 237 2 239 1 213 1 212 2 10 1 342 1 264 1 362 1 246 1 43 1 299 2 134 1 45 1 156 1 371 1 136 1 227 1 138 1 330 1 347 1 304 1 161 2 95 1 336 1 120 1 374 1 
134 1 145 1 6 1 212 1 10 1 264 1 318 1 161 1 173 1 41 1 
6 1 177 1 221 1 80 1 28 2 237 1 161 2 88 1 259 1 
6 1 342 1 239 1 328 1 339 1 41 1 
235 1 145 2 339 2 239 3 62 1 359 1 147 1 212 2 292 2 316 2 10 2 342 3 12 2 264 1 268 1 216 1 296 4 86 4 134 2 328 4 370 1 51 1 203 2 114 2 137 2 93 1 348 3 26 1 53 2 229 1 160 1 72 4 161 2 375 1 
124 1 127 1 34 1 211 1 262 1 316 1 8 1 263 2 12 1 319 1 83 1 130 1 296 1 272 1 86 1 43 3 45 2 153 1 371 3 112 1 136 2 92 1 114 1 347 2 330 1 137 1 348 1 26 1 72 1 95 2 231 1 57 1 
134 1 221 2 145 1 88 2 259 2 212 1 6 4 292 1 10 1 264 1 53 1 28 4 161 2 66 1 41 2 
247 1 169 1 69 1 
247 1 169 1 69 1 
185 1 132 1 169 1 196 1 69 1 
247 1 169 1 69 1 
202 1 169 1 69 1 
202 1 169 1 69 1 
202 1 169 1 69 1 
169 1 69 1 
267 1 180 1 
237 1 61 1 34 1 211 1 7 1 63 1 263 2 319 1 149 1 362 1 130 8 66 1 85 1 151 1 19 1 112 1 283 2 304 1 24 2 159 4 336 1 374 1 57 4 
237 2 61 1 34 2 211 2 7 2 63 1 80 1 263 4 149 1 319 2 362 1 130 11 66 1 85 1 151 1 19 1 245 1 22 1 112 2 177 1 283 3 24 2 304 1 159 6 179 1 336 1 374 1 57 5 
209 1 187 1 237 3 76 1 61 1 98 1 34 3 211 3 7 1 63 1 80 2 263 6 149 1 319 3 362 1 130 17 66 1 85 1 151 1 19 1 22 1 112 3 177 2 283 4 116 1 304 1 24 3 372 1 159 9 179 1 336 2 374 1 57 8 
209 1 187 1 237 5 76 1 61 1 98 1 34 3 211 3 7 1 63 1 80 2 263 6 149 1 319 3 362 2 130 24 66 1 85 1 246 1 151 1 19 1 22 3 112 3 177 2 283 7 116 1 304 2 24 4 372 1 159 13 179 1 336 4 374 2 57 11 
237 1 61 1 34 1 211 1 7 1 63 1 263 2 319 1 149 1 362 1 130 8 66 1 85 1 151 1 19 1 112 1 283 2 304 1 24 2 159 4 336 1 374 1 57 4 
209 1 187 1 237 2 76 1 98 1 34 2 211 2 7 1 63 1 80 2 263 4 319 2 130 11 85 1 151 1 19 1 22 1 112 2 177 2 283 2 116 1 24 1 372 1 159 6 336 1 57 5 
209 1 187 1 237 2 76 1 98 1 34 3 211 3 7 1 63 1 80 2 263 6 319 3 130 11 85 1 151 1 19 1 112 3 177 2 283 1 116 1 24 1 372 1 159 6 179 1 336 1 57 5 
289 1 209 1 187 1 237 3 76 1 98 1 34 4 211 4 7 1 63 1 80 3 263 8 319 4 130 14 85 1 151 1 19 1 22 3 112 4 177 3 283 5 116 1 24 2 372 2 159 9 336 1 57 5 
237 1 61 2 22 3 283 6 304 3 24 3 159 3 149 1 362 1 336 1 130 7 374 3 57 4 
289 1 209 1 187 1 237 2 76 1 98 1 34 3 211 3 7 1 63 1 80 2 263 6 319 3 130 11 85 1 151 1 19 1 112 3 177 2 283 1 116 1 24 1 372 1 159 6 336 1 57 5 
237 1 61 1 22 1 112 2 34 2 211 2 283 3 24 2 304 1 372 1 159 4 263 4 319 2 149 1 362 1 336 1 130 8 66 1 374 1 57 4 
283 2 24 2 304 1 117 1 159 3 237 1 149 1 362 1 336 1 130 6 61 1 66 1 374 1 57 3 
237 1 112 1 34 1 211 1 177 1 80 1 263 2 159 2 319 1 179 1 130 2 
237 1 22 1 177 1 283 1 116 1 7 2 80 1 159 3 336 1 130 7 85 1 151 1 57 4 245 1 
123 1 237 5 61 1 34 1 211 1 7 2 80 2 263 2 319 1 149 1 362 2 65 1 130 23 66 1 85 2 246 1 245 1 22 4 112 1 177 2 283 8 116 1 24 4 304 2 372 1 159 13 336 4 374 2 57 10 
7 1 130 1 57 1 
159 1 130 1 85 1 
237 1 22 1 177 1 283 1 116 1 171 1 80 1 159 3 130 6 336 1 57 3 
209 1 187 1 237 2 76 1 98 1 34 2 211 2 7 1 63 1 80 2 263 4 319 2 130 11 85 1 151 1 19 1 22 1 112 2 177 2 283 2 116 1 24 1 372 1 159 6 336 1 57 5 
237 1 22 1 283 2 304 1 24 1 159 3 362 1 130 6 336 1 374 1 57 3 
61 1 22 1 112 1 34 1 211 1 283 2 24 1 304 1 372 1 159 1 263 2 319 1 149 1 130 3 344 1 374 1 57 2 
237 2 22 2 112 1 34 1 211 1 283 5 63 1 304 2 24 3 263 2 159 5 319 1 362 1 130 10 336 2 374 2 246 1 57 5 
237 1 112 1 34 1 211 1 63 1 80 1 263 2 159 2 319 1 130 2 
237 1 112 1 34 1 211 1 177 1 63 1 80 1 263 2 159 2 319 1 130 2 
289 1 22 1 112 3 34 3 211 3 283 2 63 1 304 1 24 1 372 1 263 6 159 1 319 3 130 3 344 1 374 1 57 2 
289 1 166 1 237 5 61 1 34 5 211 5 7 4 63 1 80 3 263 10 172 1 149 1 294 1 319 5 362 2 130 34 66 1 85 3 344 1 151 1 245 1 22 5 112 5 177 3 283 9 116 3 24 4 304 3 372 2 159 16 179 1 336 5 374 3 57 18 
92 1 43 1 133 1 45 1 241 1 371 1 42 1 
287 1 133 1 43 1 45 1 21 1 371 1 248 1 346 1 92 1 241 1 42 1 244 1 
86 1 114 1 137 1 348 1 117 1 316 1 12 1 268 1 370 1 72 1 296 1 
43 2 86 1 45 1 371 2 315 1 136 1 92 1 114 1 137 1 348 1 8 1 316 1 26 1 12 1 83 1 95 1 72 1 296 1 
290 1 315 1 316 1 8 1 12 3 83 1 296 1 86 1 43 2 45 2 275 1 371 2 225 1 136 2 282 1 92 1 203 1 91 1 137 2 348 1 26 2 72 1 95 1 120 2 
290 1 315 1 316 1 8 1 12 3 193 1 296 1 86 1 43 2 45 2 275 1 371 2 225 1 136 2 282 1 92 1 203 1 91 1 137 2 348 1 26 2 72 1 95 1 120 2 
86 3 274 1 2 1 256 1 239 2 356 1 328 1 282 1 114 1 6 1 91 1 203 1 137 1 348 1 316 1 26 1 251 1 342 2 12 4 72 3 41 1 150 1 296 3 
86 3 2 1 256 1 239 2 356 1 328 1 282 1 114 1 6 1 91 1 203 1 137 1 348 1 316 1 26 1 342 2 14 1 12 4 72 3 41 1 150 1 296 3 
86 1 348 1 316 1 72 1 258 1 296 1 
86 6 20 1 327 1 4 1 78 1 62 1 258 1 33 1 359 1 90 1 114 2 137 2 348 3 316 2 341 1 26 1 12 3 373 1 72 7 296 7 233 1 
288 1 237 1 61 1 240 1 8 1 11 1 12 1 64 1 149 1 66 1 296 1 153 2 201 1 112 2 348 1 304 1 24 2 26 1 159 3 72 1 124 2 315 1 127 1 34 2 211 2 316 1 36 1 263 4 83 1 319 2 362 1 130 6 272 1 86 1 43 2 45 1 371 2 136 1 283 2 92 2 137 1 95 1 336 1 374 1 141 1 233 1 57 3 
256 1 145 2 239 3 356 1 339 1 212 1 6 1 10 2 342 3 264 2 14 1 12 2 318 1 173 1 41 1 216 1 296 1 150 1 131 1 86 1 273 1 134 2 325 1 328 2 114 1 161 1 72 1 207 1 
86 2 256 1 258 1 137 1 348 2 316 1 341 1 26 1 12 2 72 2 296 2 233 1 142 1 
86 4 2 1 300 1 370 1 114 1 137 1 348 1 316 1 12 1 72 4 268 1 296 4 233 1 
86 2 235 1 62 1 359 1 203 1 147 1 137 1 348 2 316 1 228 1 26 1 12 1 72 2 296 2 
86 1 114 1 348 1 109 1 316 1 72 1 230 1 296 1 226 1 208 1 
86 2 327 1 4 1 137 1 348 1 316 1 12 1 72 2 296 2 233 1 353 1 
86 4 300 1 327 1 370 1 33 1 203 1 114 1 137 2 348 2 316 2 12 3 373 1 268 1 72 5 296 5 233 1 
86 4 300 1 327 1 370 1 203 1 114 1 137 2 348 2 178 1 316 2 12 3 373 1 268 1 72 5 296 5 233 1 
43 2 86 1 45 1 371 2 315 1 136 1 92 1 114 1 137 1 348 1 8 1 316 1 26 1 12 1 193 1 95 1 72 1 296 1 
86 1 62 1 359 1 90 1 203 1 137 1 348 2 316 1 341 1 26 1 12 1 72 1 296 1 
43 1 45 1 111 1 5 1 371 1 128 1 176 1 343 1 269 1 
102 1 252 1 111 1 
92 1 111 1 126 1 5 1 269 1 
0 1 290 1 239 2 126 1 5 1 102 1 6 1 342 2 82 1 269 1 41 1 150 1 106 1 131 1 43 1 45 1 111 1 275 1 156 1 371 1 136 1 138 1 347 1 330 1 333 1 252 1 95 1 120 2 
117 1 110 1 81 1 75 1 
110 1 81 1 75 1 276 1 306 1 17 1 23 1 
32 1 334 1 23 1 
58 1 44 1 219 1 164 1 110 1 75 1 276 1 329 2 23 3 81 1 306 3 17 1 
143 1 110 1 68 1 81 1 75 1 276 1 306 2 17 1 23 2 
234 1 58 1 75 1 276 1 226 1 23 1 9 1 317 1 306 1 17 1 208 1 
58 1 110 1 75 1 276 1 306 1 17 1 23 1 
58 1 110 2 81 1 276 1 306 1 17 1 23 1 
58 1 110 1 75 1 276 2 23 2 25 1 27 1 306 2 17 2 351 1 
58 1 324 1 110 1 68 2 75 2 276 1 23 3 9 1 81 1 118 1 195 1 306 3 17 1 
58 1 366 1 110 1 68 1 75 1 276 1 226 1 23 2 115 1 81 1 317 1 230 1 306 2 17 1 208 2 
58 1 143 1 110 1 68 2 257 1 75 2 276 2 23 4 9 1 81 1 195 1 306 4 17 2 
58 1 110 1 81 1 75 1 276 1 306 1 17 1 23 1 
164 1 219 1 110 2 68 2 75 3 329 1 276 1 23 4 9 1 81 2 195 1 306 4 17 1 364 1 
58 1 110 1 68 1 367 1 223 1 75 1 276 1 23 2 81 1 306 2 17 1 365 1 
58 1 219 1 164 2 110 1 75 1 276 1 329 2 79 1 23 3 81 1 306 3 17 1 
75 2 349 1 270 2 360 1 
58 1 276 1 306 1 17 1 280 1 23 1 
58 1 110 1 68 1 81 1 118 1 75 1 276 1 306 2 17 1 23 2 
186 1 
58 1 110 1 81 1 75 1 276 1 306 1 17 1 23 1 
58 1 68 1 110 1 75 1 276 1 329 1 23 3 81 1 118 1 306 3 17 1 
9 1 75 1 195 1 364 1 
110 1 75 1 

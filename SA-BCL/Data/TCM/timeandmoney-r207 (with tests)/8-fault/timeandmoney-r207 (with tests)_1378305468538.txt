#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 222 42 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 256 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 256 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 256 201 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 132 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (176,347) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 96 229 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 135 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 2
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1058 | = null
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
91 1 298 2 259 1 3 1 55 1 180 1 149 3 101 1 373 3 303 1 131 2 73 2 74 1 
0 1 216 1 162 1 259 6 3 2 55 3 22 1 172 2 40 2 227 1 41 1 89 2 293 1 91 4 324 1 298 2 97 1 208 1 180 1 149 9 232 1 101 1 373 9 303 1 131 2 48 2 73 5 74 1 
0 1 216 1 162 1 259 6 3 2 55 3 22 1 172 2 40 2 227 1 41 1 89 2 293 1 91 4 324 1 298 2 97 1 208 1 180 1 149 9 232 1 101 1 373 9 303 1 131 2 48 2 73 5 74 1 
0 1 216 1 162 1 259 7 3 2 55 4 22 1 172 2 40 2 227 1 41 1 89 2 293 1 91 5 324 1 298 2 97 1 208 1 180 1 149 10 232 1 101 1 373 10 303 1 131 2 48 2 73 6 74 1 
0 1 216 1 259 4 3 2 55 2 22 1 172 2 40 2 227 1 41 1 89 2 293 1 91 3 324 1 298 2 97 1 208 1 180 1 149 7 232 1 101 1 373 7 303 1 131 2 48 1 73 4 74 1 
89 1 91 2 162 1 298 1 259 3 208 1 97 1 55 1 180 1 149 4 373 4 303 1 131 1 48 2 40 1 172 1 73 3 74 1 
89 1 216 1 298 1 3 1 123 1 180 1 23 1 149 2 370 1 373 2 303 1 131 1 40 1 73 1 74 1 41 1 
162 1 259 7 55 3 3 1 227 1 172 1 40 1 293 1 89 1 91 4 298 2 208 1 97 1 98 1 180 1 149 9 101 1 373 9 303 1 329 1 131 2 48 2 73 5 74 1 
162 1 259 7 55 3 3 1 227 1 172 1 40 1 293 1 89 1 91 4 298 2 208 1 97 1 98 1 180 1 149 9 101 1 373 9 303 1 329 1 131 2 48 2 73 5 74 1 
366 1 160 1 43 1 279 1 57 1 31 1 58 1 84 1 225 1 287 1 71 1 289 1 257 1 136 1 
301 1 
301 1 160 1 225 2 213 1 11 1 236 1 360 1 31 2 
160 1 225 2 117 1 310 1 49 1 222 1 42 1 341 1 31 2 
301 1 236 1 135 1 
301 1 175 2 228 1 
366 2 84 2 287 2 289 2 257 2 57 2 320 1 136 1 
278 1 110 2 37 1 194 1 2 1 282 1 81 1 57 2 260 1 24 1 39 1 84 3 287 3 6 1 263 2 247 1 87 1 289 2 320 1 366 2 142 2 90 1 297 1 145 1 345 1 148 1 271 1 326 1 181 2 102 2 104 1 106 1 354 1 133 1 257 2 158 1 136 1 
366 1 58 1 84 1 287 1 279 1 71 1 289 1 257 1 57 1 136 1 
238 1 279 1 239 1 178 1 122 1 31 1 301 1 84 1 225 1 287 1 363 1 288 1 289 1 236 1 
366 1 238 1 279 1 178 1 57 1 122 1 31 2 301 1 84 1 225 2 287 1 288 1 289 1 236 1 257 1 
160 1 225 1 177 1 360 1 31 1 
301 1 160 1 225 2 213 1 236 1 192 1 360 1 31 2 
225 1 360 1 31 1 
366 1 95 1 357 1 57 1 84 2 287 2 289 2 257 1 320 2 
77 1 113 1 27 1 
142 1 237 1 110 1 194 1 2 1 345 1 260 1 39 1 84 1 326 1 287 1 102 1 104 1 106 1 354 1 320 1 
320 1 135 1 
366 1 84 3 287 3 289 3 257 3 191 1 57 3 320 1 
84 1 287 1 279 1 71 1 289 1 257 1 57 1 
366 1 84 1 287 1 279 1 95 1 357 1 289 1 257 1 57 1 
238 1 278 1 279 1 37 1 53 1 110 1 194 1 2 1 282 1 81 1 57 3 260 1 24 1 39 1 84 4 225 1 287 4 6 1 288 1 263 2 289 3 320 1 366 2 142 1 90 1 297 1 10 1 95 1 178 1 345 1 148 1 122 1 31 1 326 1 181 1 102 1 104 1 106 1 188 1 354 1 257 3 158 1 191 1 136 1 
84 2 287 2 212 1 239 1 289 2 257 1 57 1 191 1 320 1 
366 1 238 1 279 1 53 1 10 1 95 1 178 1 57 3 122 1 31 1 301 1 84 3 225 1 287 3 171 1 288 1 289 3 257 3 191 2 
366 1 77 1 95 1 57 2 84 2 287 2 289 2 257 2 191 1 27 1 
142 1 110 1 2 1 194 1 345 1 260 1 39 1 84 1 326 1 287 1 102 1 104 1 106 1 354 1 320 1 
142 1 78 1 110 1 2 1 194 1 345 1 260 1 39 1 84 1 326 1 287 1 102 1 104 1 226 1 320 1 
36 1 77 2 311 1 282 1 38 1 81 1 24 1 362 1 6 1 318 1 263 2 113 2 27 2 60 1 340 1 248 1 367 1 90 1 342 1 297 1 271 2 181 4 68 1 158 2 
84 1 287 1 238 1 279 1 154 1 289 1 257 1 57 1 
77 1 142 1 110 1 194 1 2 1 10 1 345 1 57 1 260 1 39 1 84 2 326 1 287 2 102 1 104 1 106 1 289 1 354 1 257 1 191 1 
366 1 239 1 10 1 95 1 281 1 57 4 84 5 351 1 287 5 212 1 289 5 257 4 191 2 320 1 
84 2 287 2 279 1 154 1 71 1 289 2 257 2 57 2 
223 1 8 1 234 1 290 1 241 1 
8 1 234 1 209 1 
8 1 234 1 
8 1 234 1 
290 1 
290 1 
290 1 
8 1 234 1 139 1 
8 1 234 1 139 1 
8 1 234 1 139 1 
8 1 250 1 234 1 
8 1 250 1 234 1 
8 1 250 1 234 1 
173 1 306 2 8 2 119 1 300 1 343 3 80 1 30 2 31 2 285 1 301 1 100 1 224 1 225 2 234 2 198 2 35 2 114 1 321 2 
306 1 334 1 57 2 359 1 84 2 225 1 287 2 289 2 265 1 320 1 321 1 8 1 119 1 343 1 209 1 210 1 30 1 31 1 371 1 234 1 254 1 276 1 257 2 35 1 
89 2 33 1 269 2 172 1 23 1 
89 1 40 1 172 1 
89 1 40 1 23 1 
89 3 33 1 316 1 269 1 172 2 23 1 
89 2 33 1 361 1 269 1 172 1 23 1 
160 4 308 1 311 1 334 1 38 1 4 2 360 1 112 1 225 5 362 1 169 1 199 1 265 1 228 1 341 1 202 1 322 2 117 1 175 3 63 1 94 2 147 2 210 1 125 1 31 5 301 2 68 1 213 1 49 1 256 1 107 3 236 1 
160 5 52 1 308 1 310 1 311 1 38 1 4 2 360 4 112 1 225 7 362 1 169 1 265 2 228 1 341 2 202 1 322 2 117 2 175 3 147 2 177 3 251 3 31 7 47 1 301 3 68 1 213 1 274 1 49 2 256 1 107 3 236 1 
202 1 160 1 117 1 63 1 310 1 31 2 225 2 199 1 107 1 256 1 49 1 341 1 
202 1 117 1 63 1 310 1 31 1 225 1 199 1 201 1 107 1 256 1 49 1 341 1 
317 1 
159 1 194 1 135 1 
206 1 194 1 
39 1 194 1 
159 2 39 1 333 1 194 3 51 1 260 1 
39 1 194 1 260 1 
141 1 194 1 
266 1 367 2 342 3 62 1 311 1 258 1 109 2 230 1 38 1 325 1 54 1 271 4 336 1 181 7 34 1 264 1 158 3 355 1 
217 3 109 1 258 4 311 3 81 2 38 3 24 2 112 3 315 1 338 1 362 3 6 2 263 4 319 1 266 1 367 2 342 6 62 2 297 2 230 1 271 11 99 2 348 4 181 23 34 1 372 1 184 1 68 3 214 1 16 1 158 12 355 1 
311 1 109 2 258 1 38 1 81 2 54 1 24 2 6 2 263 4 264 1 266 1 367 3 342 4 297 2 62 1 230 1 325 1 271 5 99 1 302 1 181 9 34 1 103 1 158 4 
266 1 367 2 342 3 62 1 311 1 258 1 109 2 230 1 38 1 325 1 54 1 271 4 181 7 34 1 264 1 158 3 355 1 
266 1 367 2 342 3 62 1 311 1 258 1 109 2 230 1 38 1 325 1 54 1 271 4 181 7 34 1 264 1 158 3 355 1 
110 1 194 1 111 2 3 2 335 1 39 1 244 1 142 1 143 1 294 1 205 1 298 1 345 1 149 1 13 2 326 1 151 1 373 1 102 1 131 1 104 1 277 1 75 2 
332 1 108 1 110 1 111 1 3 1 23 1 167 1 316 1 85 1 40 1 172 1 89 2 142 1 295 1 65 1 298 1 345 1 180 1 13 1 149 1 373 1 102 1 185 1 131 1 104 1 75 1 
332 1 108 1 259 1 110 1 111 1 3 1 23 1 167 1 316 1 85 1 40 1 172 1 89 2 142 1 65 1 298 1 345 1 180 1 13 1 149 2 211 1 373 2 102 1 185 1 303 1 131 1 104 1 73 1 74 1 75 1 
332 1 108 1 110 1 259 2 111 1 3 1 314 1 23 1 167 1 316 1 40 1 172 1 89 2 142 1 295 1 205 1 65 1 298 1 345 1 13 1 149 3 373 3 102 1 185 1 303 1 131 1 104 1 73 1 74 1 75 1 
110 1 259 2 111 1 3 1 314 1 23 1 167 1 316 1 172 1 40 1 89 2 142 1 295 1 65 1 345 1 13 1 149 2 373 2 102 1 185 1 303 1 104 1 73 1 74 1 75 1 
129 1 
331 1 238 1 279 1 239 1 194 1 140 2 4 2 82 1 284 2 39 1 84 1 337 2 287 1 288 1 289 1 341 1 143 1 202 1 142 2 96 1 45 1 345 1 301 2 151 1 213 3 102 2 104 1 107 2 49 1 110 2 221 2 360 6 225 5 169 1 363 1 365 2 228 2 229 1 117 1 28 1 118 2 175 2 121 1 178 1 369 2 231 1 122 1 31 5 326 2 182 4 272 1 186 1 130 1 236 1 134 1 
238 1 279 1 239 1 221 1 82 1 360 2 84 1 225 3 287 1 363 1 288 1 289 1 11 1 178 1 231 1 122 1 31 3 182 2 272 1 213 1 186 1 130 1 
238 1 279 1 239 1 360 1 82 1 84 1 225 3 287 1 363 1 288 1 289 1 118 1 11 1 178 1 231 1 122 1 31 3 301 1 182 3 272 1 213 1 186 1 130 1 236 1 
238 1 279 1 239 1 221 1 82 1 360 2 284 1 84 1 225 3 287 1 363 1 288 1 289 1 118 1 11 1 178 1 231 1 122 1 31 3 301 1 182 3 272 1 213 1 186 1 130 1 236 1 
331 1 238 1 279 1 239 1 140 2 82 1 4 1 284 4 84 1 337 2 287 1 288 1 289 1 341 1 11 1 301 5 253 1 213 3 49 1 107 1 165 1 221 4 360 7 166 1 225 5 170 1 169 1 363 1 365 2 228 2 117 1 28 1 118 4 178 1 369 2 122 1 231 1 31 5 272 1 182 6 186 1 130 1 236 5 76 1 
331 1 238 1 279 1 239 1 140 2 82 1 4 1 284 2 84 1 337 2 287 1 288 1 289 1 341 1 301 2 213 2 49 1 107 1 221 2 360 4 225 4 169 1 363 1 365 2 228 2 28 1 117 1 118 2 175 2 121 1 178 1 369 2 122 1 231 1 31 4 272 1 182 4 186 1 130 1 236 1 
331 1 238 1 279 1 239 1 165 1 221 2 140 2 360 4 4 1 82 1 284 2 84 1 166 1 337 2 225 4 287 1 169 1 363 1 288 1 365 2 289 1 228 2 341 1 28 1 117 1 118 2 178 1 369 2 231 1 122 1 31 4 301 1 182 4 272 1 213 2 186 1 130 1 107 1 49 1 236 1 76 1 
331 1 238 1 279 1 239 1 165 1 221 2 140 2 360 4 4 1 82 1 284 2 84 1 166 1 337 2 225 4 287 1 169 1 363 1 288 1 365 2 289 1 228 2 341 1 28 1 117 1 118 2 178 1 369 2 231 1 122 1 31 4 301 1 182 4 272 1 213 2 186 1 130 1 107 1 49 1 236 1 76 1 
238 1 279 1 239 1 178 1 122 1 231 1 82 1 31 2 84 1 272 1 182 2 225 2 287 1 186 1 130 1 363 1 288 1 132 1 289 1 
331 1 238 1 279 1 239 1 165 1 140 2 221 3 4 1 82 1 360 5 284 3 84 1 166 1 337 2 225 4 287 1 169 1 170 1 363 1 288 1 365 2 289 1 228 2 341 1 28 1 117 1 118 3 178 1 369 2 231 1 122 1 31 4 301 1 182 5 272 1 213 2 186 1 130 1 107 1 49 1 236 1 76 1 
331 1 238 1 279 1 239 1 165 1 140 2 221 3 4 1 82 1 360 5 284 3 84 1 166 1 337 2 225 4 287 1 169 1 170 1 363 1 288 1 365 2 289 1 228 2 341 1 28 1 117 1 118 3 178 1 369 2 231 1 122 1 31 4 301 1 182 5 272 1 213 2 186 1 130 1 107 1 49 1 236 1 76 1 
331 1 238 1 279 1 239 1 79 2 82 1 4 1 284 2 84 1 287 1 288 1 289 1 341 1 301 1 213 2 49 1 107 1 215 1 221 2 360 4 225 4 169 1 363 1 365 2 117 1 118 2 175 2 121 1 178 1 369 2 122 1 231 1 31 4 272 1 182 4 186 1 130 1 235 2 236 1 
36 1 110 8 194 3 282 2 81 2 57 1 24 2 25 1 39 2 84 1 5 1 287 1 6 2 245 1 263 4 289 1 7 1 87 2 142 8 143 1 295 1 90 2 297 2 9 1 66 1 345 2 148 1 271 1 326 2 211 1 181 2 151 1 102 7 104 2 375 1 257 1 133 1 191 1 158 1 
77 1 311 1 282 1 81 1 38 1 57 1 24 1 112 1 84 1 287 1 362 1 6 1 263 2 113 1 289 1 27 1 366 1 367 1 90 1 342 1 297 1 95 1 179 1 271 1 181 3 68 1 328 1 257 1 158 2 
77 1 36 1 311 1 109 1 282 1 81 1 38 1 54 1 24 1 6 1 263 2 264 1 113 1 27 1 320 2 266 1 367 2 90 1 342 2 297 1 325 1 271 3 181 6 34 1 158 3 135 1 
77 16 193 1 217 4 258 2 311 2 282 1 81 2 38 4 358 1 24 2 112 4 338 1 362 2 6 2 263 4 113 16 27 6 320 1 367 2 90 2 44 2 342 4 297 2 179 1 148 1 271 13 348 4 181 22 68 4 155 1 133 1 158 9 16 2 
237 1 163 1 110 1 194 1 2 1 282 1 81 1 356 1 57 1 260 1 24 1 39 1 84 2 287 2 6 1 263 2 289 1 27 1 320 1 142 1 90 1 297 1 10 1 179 1 345 1 148 1 271 1 326 1 327 1 181 2 102 1 104 1 106 1 354 1 257 1 133 1 191 1 158 1 
77 7 37 2 2 2 194 2 282 3 81 3 38 3 39 2 84 3 287 3 6 3 289 1 292 2 142 3 295 1 90 3 342 8 297 3 10 1 345 2 148 1 102 3 104 2 106 2 354 2 257 1 158 10 17 2 109 1 311 3 258 4 110 3 313 1 54 1 57 1 21 2 260 2 24 3 112 2 59 2 362 2 264 1 263 6 113 7 27 7 320 2 266 1 367 4 179 1 325 1 271 10 326 1 32 1 181 20 34 1 68 2 187 1 133 1 191 1 
77 1 36 1 90 1 342 1 297 1 258 1 282 1 81 1 38 1 24 1 271 2 181 2 68 1 6 1 318 1 263 2 113 1 27 1 
77 1 36 1 367 1 248 1 90 1 342 1 297 1 311 1 282 1 81 1 24 1 181 2 362 1 6 1 263 2 113 1 27 1 158 2 
36 1 77 2 258 1 311 1 282 1 38 1 81 1 24 1 112 1 362 1 6 1 263 2 113 2 27 2 367 1 90 1 342 2 297 1 271 2 181 4 68 1 158 2 
77 1 90 1 342 1 297 1 258 1 282 1 81 1 38 1 24 1 271 2 5 1 181 2 68 1 6 1 318 1 263 2 113 1 27 1 
77 1 367 1 248 1 90 1 342 1 297 1 311 1 282 1 81 1 24 1 5 1 181 2 362 1 6 1 263 2 113 1 27 1 158 2 
77 2 258 1 311 1 282 1 38 1 81 1 24 1 112 1 5 1 362 1 6 1 263 2 113 2 27 2 367 1 90 1 342 2 297 1 271 2 181 4 68 1 158 2 
77 2 258 1 311 1 282 1 38 1 81 1 24 1 112 1 362 1 6 1 263 2 113 2 27 2 367 1 90 1 342 2 297 1 271 2 181 4 68 1 158 2 
37 1 110 1 2 1 194 1 282 1 81 1 260 1 24 1 39 1 84 1 287 1 6 1 263 2 320 1 142 1 90 1 297 1 345 1 148 1 271 1 326 1 181 2 102 1 104 1 106 1 354 1 133 1 158 1 
138 1 78 1 110 1 2 1 194 1 282 1 81 1 260 1 24 1 39 1 84 1 287 1 6 1 263 2 226 1 320 1 142 1 90 1 297 1 345 1 148 1 271 1 326 1 181 2 102 1 104 1 133 1 158 1 
77 2 258 1 311 1 282 1 38 1 81 1 24 1 112 1 362 1 6 1 263 2 113 2 27 2 367 1 90 1 342 2 297 1 179 1 271 2 181 4 68 1 158 2 
77 2 311 1 258 1 37 1 110 1 2 1 194 1 282 1 38 1 81 1 260 1 24 1 39 1 112 1 59 1 84 1 287 1 362 1 6 1 263 2 113 2 27 2 367 1 142 1 90 1 342 2 297 1 345 1 271 2 211 1 181 4 68 1 102 1 104 1 106 1 354 1 158 2 
77 1 311 1 258 1 282 1 81 1 38 1 57 1 24 1 112 1 84 1 287 1 362 1 6 1 200 1 263 2 289 1 113 1 27 1 366 1 90 1 342 1 297 1 95 1 179 1 271 2 181 3 68 1 257 1 158 1 
217 2 258 3 311 4 164 1 81 4 38 4 283 1 24 4 242 1 112 4 338 2 362 4 6 4 263 8 88 1 367 3 342 6 61 1 249 1 64 1 297 4 271 15 99 2 348 3 350 1 349 1 302 1 181 31 68 4 353 3 69 1 275 1 50 1 190 1 158 16 16 1 
217 4 309 1 258 4 311 6 164 1 81 3 38 7 283 2 24 3 242 2 112 7 338 2 362 6 6 3 263 6 367 4 44 2 342 8 61 1 249 1 64 1 297 3 271 24 99 2 348 4 350 1 349 1 302 1 181 46 68 7 353 4 69 1 275 1 190 1 158 22 16 2 
217 5 309 1 258 6 311 5 164 1 81 4 38 7 283 1 24 4 242 2 112 7 338 3 362 5 6 4 263 8 88 1 367 4 44 2 342 10 144 1 61 1 249 1 64 1 297 4 271 25 99 2 348 5 350 1 349 1 302 1 181 46 68 7 353 4 69 1 275 1 190 1 158 21 16 2 
217 2 309 1 258 3 311 4 164 1 81 4 38 4 283 1 24 4 242 1 112 4 338 2 362 4 6 4 263 8 88 1 367 2 342 5 61 1 249 1 64 1 297 4 271 16 99 2 348 3 350 1 349 1 302 1 181 33 68 4 353 4 69 1 275 1 190 1 158 17 16 1 
217 4 309 1 109 1 258 6 311 8 164 1 81 3 38 8 54 1 283 1 24 3 242 1 112 7 338 2 362 7 6 3 264 1 263 6 266 1 367 8 44 2 342 14 61 1 249 1 64 1 297 3 325 1 271 27 99 2 348 4 350 1 349 1 302 1 181 54 34 1 68 7 353 4 69 1 275 1 190 1 158 27 16 2 
285 1 306 1 224 1 8 1 234 1 72 1 35 1 114 1 30 1 321 1 
371 1 209 1 
252 1 306 1 8 1 234 1 374 1 219 1 35 1 30 1 321 1 
173 1 306 1 8 1 119 1 300 1 343 2 80 1 31 1 30 1 285 1 301 1 224 1 225 1 234 1 198 1 35 1 114 1 321 1 
173 1 306 1 8 1 119 1 300 1 343 2 80 1 31 1 30 1 285 1 301 1 224 1 225 1 234 1 198 1 35 1 114 1 321 1 
173 1 306 1 8 1 119 1 300 1 343 2 80 1 31 1 30 1 285 1 301 1 224 1 225 1 234 1 198 1 35 1 114 1 321 1 
139 1 241 1 291 1 
139 1 241 1 291 1 
116 1 250 1 
116 1 250 1 241 1 
254 1 276 1 
160 1 306 1 334 1 80 1 359 1 57 2 84 2 225 1 287 2 198 1 265 1 289 2 320 1 321 1 8 1 343 1 209 1 210 1 31 1 30 1 127 1 371 1 234 1 254 1 276 1 35 1 257 2 
139 1 291 1 
116 1 250 1 241 1 
110 2 194 1 282 1 81 1 24 1 39 1 25 1 84 2 287 2 6 1 263 2 289 2 7 1 87 2 142 2 90 1 297 1 179 1 345 1 46 1 148 1 271 1 153 1 181 2 183 1 352 1 102 2 104 1 189 1 133 1 158 1 
142 1 143 1 29 1 110 1 194 1 345 1 39 1 13 1 326 1 151 1 243 1 102 1 104 1 277 1 
89 2 142 1 295 1 307 1 332 1 110 1 345 1 23 1 13 1 167 1 243 1 316 1 102 1 185 1 104 1 40 1 172 1 156 1 
89 2 142 2 295 1 307 1 332 1 110 2 345 1 23 1 13 1 211 1 167 1 243 1 316 1 102 2 185 1 104 1 40 1 172 1 156 1 
89 2 142 1 295 1 307 1 332 1 110 1 345 1 23 1 13 1 167 1 316 1 102 1 185 1 104 1 40 1 172 1 157 1 
218 1 
301 1 117 1 169 1 176 1 107 1 49 1 236 1 4 1 341 1 
322 1 175 2 311 1 147 1 38 1 4 2 112 1 301 1 68 1 362 1 107 1 228 1 
301 1 225 1 213 1 236 1 360 1 31 1 
143 1 202 1 142 2 117 2 310 1 110 2 194 1 96 1 345 1 4 1 360 2 31 2 39 1 326 2 14 1 151 1 225 2 213 1 102 2 169 1 104 1 107 1 49 2 134 1 341 2 229 1 
347 1 301 1 176 1 107 1 236 1 4 1 135 1 
140 1 4 1 360 1 337 1 225 1 169 1 228 1 341 1 28 1 117 1 175 1 31 1 301 2 213 1 107 1 49 1 236 1 
194 10 38 2 4 8 39 3 141 2 341 4 292 2 202 2 142 3 203 2 206 3 146 1 147 6 344 2 345 4 347 1 14 1 301 8 211 1 102 3 213 3 255 1 104 3 304 1 15 2 107 9 49 4 51 1 159 2 311 2 110 3 312 1 56 2 260 3 360 5 112 2 225 5 362 2 169 4 228 6 322 6 117 4 174 2 175 12 267 2 176 1 178 2 31 5 326 1 126 2 273 2 68 2 236 2 134 1 
217 2 311 4 164 1 38 4 20 1 360 1 4 8 112 4 225 1 196 1 338 1 362 4 169 2 341 2 228 5 202 1 322 8 117 2 44 1 174 1 61 1 175 10 147 8 344 3 31 1 301 7 348 2 68 4 213 1 69 1 275 1 107 13 49 2 236 2 190 1 134 1 16 1 
279 1 311 1 38 2 165 1 57 1 4 2 58 1 84 1 225 1 287 1 168 1 169 1 264 1 289 1 341 1 266 1 366 1 43 1 117 1 174 1 344 2 31 1 34 1 71 1 49 1 107 2 257 1 136 1 
278 1 110 1 37 1 2 1 194 1 282 1 81 1 57 2 260 1 24 1 39 1 84 3 287 3 6 1 263 2 289 2 320 1 366 2 142 1 90 1 297 1 345 1 148 1 326 1 181 1 102 1 104 1 106 1 354 1 257 2 158 1 136 1 
202 1 322 2 117 1 175 4 109 1 147 2 4 2 301 4 169 1 49 1 107 1 236 2 134 1 228 2 341 1 
306 1 224 1 105 1 276 1 30 1 
261 1 306 1 30 1 
261 1 306 1 30 1 
261 1 306 1 30 1 
306 1 305 1 30 1 
306 1 305 1 30 1 
306 1 305 1 30 1 
306 1 30 1 
8 1 234 1 
266 2 367 3 342 5 297 1 258 2 311 2 81 1 38 2 24 1 271 5 302 1 181 10 34 2 168 1 6 1 263 2 264 1 158 5 
342 1 297 1 258 1 81 1 38 1 24 1 271 2 302 1 181 2 68 1 6 1 263 2 
367 1 342 2 297 1 311 1 258 1 81 1 38 1 24 1 271 2 112 1 302 1 181 4 362 1 68 1 6 1 263 2 158 2 
266 1 367 1 342 2 297 3 258 1 81 3 24 3 271 1 99 1 181 3 302 1 315 1 34 1 6 3 263 6 88 1 158 2 
217 1 311 2 258 3 38 2 81 4 54 1 24 4 338 1 315 1 168 1 6 4 264 1 263 8 88 1 115 1 266 2 367 3 342 6 297 4 325 1 271 7 99 1 348 1 302 1 181 15 372 1 34 2 158 8 
217 1 109 1 258 4 311 4 81 2 38 5 164 1 54 1 24 2 112 2 338 1 168 1 362 1 6 2 264 2 263 4 266 2 367 5 342 9 61 1 297 2 325 1 271 14 99 1 348 1 181 24 302 1 34 2 68 2 69 1 275 1 190 1 158 10 
217 1 109 1 311 1 258 1 81 2 38 2 54 1 24 2 112 1 338 1 6 2 264 1 263 4 115 1 266 1 367 2 342 3 61 1 297 2 325 1 271 6 348 2 181 11 302 1 34 1 68 1 158 5 16 1 
217 2 109 1 311 5 258 2 164 1 81 3 38 5 54 1 24 3 112 4 338 1 362 4 6 3 264 1 263 6 115 1 266 1 367 4 342 6 44 1 61 1 297 3 325 1 271 14 99 1 348 2 181 29 302 1 34 1 68 4 69 1 275 1 190 1 158 15 16 1 
217 2 109 1 311 4 258 3 164 1 81 3 38 5 54 1 24 3 112 4 338 1 362 3 6 3 264 1 263 6 115 1 266 1 367 4 342 7 44 1 61 1 297 3 325 1 271 15 99 1 348 2 181 27 302 1 34 1 68 4 69 1 275 1 190 1 158 12 16 1 
217 1 109 1 258 4 311 4 81 2 38 5 164 1 54 1 24 2 112 2 338 1 168 1 362 1 6 2 264 2 263 4 266 2 367 5 342 9 61 1 297 2 325 1 271 14 99 1 348 1 181 24 302 1 34 2 68 2 69 1 275 1 190 1 158 10 
217 2 311 4 258 2 164 1 81 1 38 4 24 1 112 4 338 1 362 4 6 1 263 2 367 2 342 4 44 1 61 1 297 1 271 11 348 2 181 22 302 1 68 4 69 1 275 1 190 1 158 11 16 1 
217 2 109 1 311 4 258 3 164 1 81 4 38 5 54 1 24 4 112 4 338 1 362 3 6 4 264 1 263 8 115 1 266 1 367 4 342 7 44 1 61 1 297 4 325 1 271 15 99 2 348 2 181 28 302 1 34 1 68 4 69 1 275 1 190 1 158 13 16 1 
217 1 311 1 81 2 38 1 24 2 112 1 338 1 362 1 6 2 263 4 88 1 367 1 342 1 61 1 297 2 271 3 348 2 181 7 302 1 68 1 158 4 16 1 
266 3 367 3 342 6 311 1 258 3 325 2 38 1 54 1 271 3 181 7 34 3 264 1 158 4 
217 1 311 1 81 2 38 1 24 2 112 1 338 1 362 1 6 2 263 4 88 1 367 1 342 1 61 1 297 2 271 3 348 2 181 7 302 1 68 1 158 4 16 1 
266 1 367 2 342 3 297 2 109 1 311 1 258 1 38 1 81 2 325 1 54 1 271 4 24 2 99 1 181 8 34 1 6 2 264 1 263 4 158 4 
266 1 367 2 342 2 109 1 311 1 325 1 38 1 54 1 271 3 181 6 34 1 264 1 158 3 135 1 
367 1 342 2 297 1 311 1 258 1 81 1 38 1 24 1 271 2 112 1 181 4 362 1 68 1 6 1 263 2 158 2 115 1 
367 1 44 1 342 2 217 2 258 1 311 2 38 2 271 6 112 2 348 2 181 12 338 1 68 2 362 2 158 6 16 1 
217 2 109 1 258 4 311 3 38 3 81 2 54 1 358 1 24 2 112 2 315 1 362 2 6 2 264 1 263 4 266 2 367 5 342 9 44 1 297 2 325 1 271 11 99 2 348 2 181 23 34 2 68 2 16 1 158 12 
348 1 181 1 158 1 
181 1 217 1 271 1 
367 2 342 3 297 1 258 1 311 1 81 1 38 1 24 1 271 3 112 1 181 6 68 1 362 1 6 1 263 2 158 3 115 1 292 1 
217 2 311 4 258 2 164 1 81 1 38 4 24 1 112 4 338 1 362 4 6 1 263 2 367 2 342 4 44 1 61 1 297 1 271 11 348 2 181 22 302 1 68 4 69 1 275 1 190 1 158 11 16 1 
266 1 367 1 342 2 311 1 258 1 38 1 271 3 181 6 34 1 264 1 158 3 
266 1 367 1 342 2 297 1 258 1 325 1 81 1 54 1 271 1 24 1 99 1 181 3 34 1 315 1 6 1 263 2 158 2 
84 1 287 1 67 1 212 1 239 1 289 1 320 1 
137 1 204 1 239 1 220 1 150 1 84 1 67 1 287 1 212 1 70 1 289 1 320 1 
142 4 143 1 18 1 110 4 194 1 345 1 39 1 326 1 211 1 151 1 102 4 104 1 364 1 
142 2 1 1 110 2 194 1 146 1 345 2 260 1 39 1 32 1 152 1 102 2 262 1 104 1 339 1 
89 1 142 1 326 1 167 1 102 1 104 1 110 1 40 1 345 1 23 1 
39 1 25 1 142 2 211 1 153 1 295 1 102 2 104 1 110 2 194 1 345 1 
143 1 142 5 18 1 110 5 194 3 146 1 345 2 25 1 39 2 326 1 211 1 151 1 102 4 245 1 104 2 375 1 
143 1 142 5 18 1 110 5 194 3 146 1 345 2 25 1 39 2 326 1 211 1 151 1 286 1 102 4 245 1 104 2 
39 1 143 1 142 1 326 1 151 1 102 1 104 1 110 1 194 1 345 1 135 1 
142 1 110 1 194 1 2 1 345 1 57 1 260 1 39 1 84 2 326 1 287 2 102 1 104 1 106 1 289 1 257 1 191 1 320 1 
142 1 238 1 279 1 110 1 194 3 2 1 146 1 345 1 122 1 57 2 260 2 39 2 84 2 273 1 287 2 102 1 141 1 104 1 106 1 289 2 257 1 191 1 320 1 
142 2 238 1 78 1 279 1 110 2 194 3 2 1 146 1 345 1 122 1 57 2 260 2 39 2 84 2 273 1 287 2 102 2 141 1 104 1 364 1 289 2 257 1 191 1 320 1 
159 1 142 3 296 1 120 1 206 1 110 3 194 4 178 1 146 1 345 1 260 1 360 1 31 2 39 1 326 1 301 1 273 1 225 2 102 3 141 1 104 1 364 1 236 1 
159 1 142 3 206 1 110 3 194 4 178 1 146 1 345 1 260 1 360 1 31 2 39 1 326 1 301 1 273 1 225 2 102 3 141 1 104 1 364 1 15 1 236 1 
142 1 102 1 9 1 104 1 110 1 345 1 
142 7 368 1 295 1 9 1 110 7 66 1 194 3 345 3 260 1 25 1 39 2 326 2 211 1 152 1 102 6 245 1 104 2 87 1 375 1 51 1 339 1 
77 1 109 1 311 1 110 1 37 1 194 1 2 1 282 2 38 1 81 2 54 1 57 1 21 1 260 1 24 2 39 1 84 2 59 1 287 2 6 2 264 1 263 4 113 1 289 1 27 1 320 2 266 1 367 2 142 1 90 2 342 2 297 2 179 1 325 1 345 1 46 1 271 3 211 1 181 6 34 1 102 1 104 1 106 1 354 1 257 1 158 3 191 1 
159 1 160 1 110 1 194 2 56 1 4 1 360 2 225 3 169 2 341 2 142 1 117 2 267 1 206 1 176 1 178 1 31 3 347 1 301 1 326 1 14 1 126 1 102 1 213 1 15 1 107 1 49 2 236 1 
159 1 142 2 9 1 110 2 194 2 345 2 260 1 39 1 211 1 102 2 104 1 304 1 51 1 
142 1 78 1 110 1 194 1 2 1 345 1 57 1 260 1 39 1 84 2 326 1 287 2 102 1 104 1 289 1 257 1 191 1 320 1 
142 1 368 1 110 1 194 1 146 1 345 2 260 1 39 1 152 1 102 1 104 1 51 1 339 1 
84 1 128 1 287 1 183 1 352 1 323 1 289 1 189 1 270 1 
93 1 246 1 270 1 
128 1 323 1 330 1 270 1 320 1 
160 1 161 1 238 1 93 1 323 2 279 1 53 1 178 1 270 1 122 1 31 2 301 1 225 2 128 2 246 1 288 1 236 1 330 2 320 1 
149 1 373 1 298 1 303 1 131 1 73 1 74 1 180 1 
91 1 216 1 298 1 259 2 299 1 55 1 346 1 149 4 197 1 373 4 303 2 131 1 73 3 74 2 
298 1 268 1 259 1 98 1 180 1 240 1 149 2 373 2 131 1 303 1 73 1 74 1 
216 2 298 1 299 1 346 2 180 1 124 1 149 3 373 3 131 1 303 1 73 1 74 1 
195 2 280 1 12 1 73 2 
149 1 19 1 373 1 298 1 131 1 180 1 
293 1 149 2 373 2 298 1 303 1 259 1 131 1 73 1 74 1 180 1 
86 1 
149 1 373 1 298 1 303 1 131 1 73 1 74 1 180 1 
303 1 73 1 74 1 135 1 
149 1 373 1 298 1 303 1 131 1 73 1 74 1 
373 1 3 1 75 1 
216 2 298 1 299 1 346 1 180 1 149 3 233 1 373 3 131 1 303 1 73 1 74 1 
149 2 373 2 298 1 303 1 259 1 48 1 131 1 73 1 74 1 
89 1 149 1 91 1 373 1 298 1 131 1 97 1 40 1 172 1 73 1 180 1 
149 1 373 1 298 1 131 1 73 1 74 1 180 1 
149 1 373 1 298 1 303 1 131 1 74 2 180 1 
92 1 298 2 180 1 83 1 149 2 373 2 26 1 131 2 73 1 74 1 
293 1 91 1 298 1 259 2 55 1 180 1 149 3 373 3 303 1 131 1 227 1 73 2 74 1 
89 2 298 1 259 1 207 1 23 1 180 1 149 2 373 2 316 1 303 1 131 1 172 1 40 1 73 1 74 1 
91 1 162 1 298 2 259 2 55 1 180 1 149 4 373 4 303 1 131 2 48 1 73 2 74 1 
293 1 216 1 298 1 259 1 180 1 149 3 373 3 131 1 303 1 73 1 74 1 
91 1 197 1 55 1 73 1 
73 1 74 1 

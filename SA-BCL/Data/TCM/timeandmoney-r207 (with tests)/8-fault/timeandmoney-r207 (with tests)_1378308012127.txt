#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (143,227) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 378 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 242 61 59 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 242 61 59 163 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (86,145,254,326) (86,145,254,326) 218 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 3127 | = null
com.domainlanguage.time.MinuteOfHour:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 7 3 96 1 363 1 293 1 54 2 79 1 57 1 326 9 155 5 183 2 246 9 187 1 306 1 228 1 141 1 86 6 334 1 278 1 68 2 45 2 21 1 49 2 254 2 144 4 357 1 145 2 94 1 
1 1 7 3 96 1 363 1 293 1 54 2 79 1 57 1 326 9 155 5 183 2 246 9 187 1 306 1 228 1 141 1 86 6 334 1 278 1 68 2 45 2 21 1 49 2 254 2 144 4 357 1 145 2 94 1 
1 1 7 4 96 1 363 1 293 1 54 2 79 1 57 1 326 10 155 6 183 2 246 10 187 1 306 1 228 1 141 1 86 7 334 1 278 1 68 2 45 2 21 1 49 2 254 2 144 5 357 1 145 2 94 1 
1 1 7 2 363 1 293 1 54 2 79 1 57 1 326 7 155 4 183 2 246 7 187 1 306 1 228 1 141 1 86 4 334 1 278 1 68 1 45 2 21 1 49 2 254 2 144 3 357 1 145 2 94 1 
1 1 183 1 7 1 96 1 246 4 141 1 86 3 54 1 79 1 68 2 278 1 326 4 49 1 254 1 144 2 94 1 145 1 155 3 
245 1 200 1 246 2 187 1 141 1 216 1 54 1 79 1 45 1 21 1 326 2 49 1 254 1 155 1 94 1 145 1 
7 1 246 3 141 1 293 1 86 1 79 1 45 1 326 3 254 2 144 1 94 1 145 2 155 2 
338 1 1 1 7 3 96 1 363 1 293 1 54 1 79 1 11 1 326 9 155 5 183 1 246 9 141 1 86 7 68 2 278 1 45 1 49 1 144 4 254 2 357 1 145 2 94 1 
338 1 1 1 7 3 96 1 363 1 293 1 54 1 79 1 11 1 326 9 155 5 183 1 246 9 141 1 86 7 68 2 278 1 45 1 49 1 144 4 254 2 357 1 145 2 94 1 
111 1 103 1 114 1 
330 2 239 1 114 1 
14 2 318 2 82 1 76 2 157 1 349 2 347 2 147 2 
50 1 4 1 318 3 125 2 362 1 126 1 292 1 77 1 76 2 321 1 260 1 178 1 219 2 82 1 180 1 195 1 327 1 83 2 328 1 347 3 13 2 14 2 267 1 372 1 157 1 349 2 351 1 160 1 276 1 66 2 164 1 69 1 212 1 167 1 313 1 122 1 147 2 
14 1 318 1 63 1 251 1 76 1 157 1 349 1 53 1 347 1 147 1 
74 1 318 1 305 1 114 1 127 1 53 1 295 1 238 1 344 1 159 1 103 1 242 1 347 1 147 1 
14 1 74 1 318 1 114 1 76 1 127 1 349 1 53 1 295 1 238 2 344 1 159 2 103 1 347 1 147 1 
159 1 289 1 253 1 294 1 238 1 
116 1 159 2 103 1 289 1 114 1 253 1 99 1 238 2 
159 1 289 1 238 1 
14 1 318 1 63 1 157 1 76 1 349 1 53 1 238 1 159 1 117 1 251 1 253 1 347 1 147 1 
114 1 
116 1 159 2 103 1 289 1 114 1 253 1 256 1 238 2 
123 2 137 1 172 1 27 1 289 2 291 2 114 1 238 5 188 2 249 1 116 1 159 5 345 1 103 1 310 1 240 1 91 1 253 2 316 1 
111 1 82 1 
110 1 14 1 318 2 76 1 349 1 82 2 133 1 347 2 147 2 
317 1 208 1 227 1 
50 1 267 1 318 1 292 1 260 1 178 1 219 1 82 1 83 1 283 1 328 1 347 1 13 1 167 1 313 1 122 1 
50 1 14 1 267 1 318 2 292 1 76 1 217 1 260 1 18 1 178 1 208 1 219 1 83 1 328 1 347 2 13 1 313 1 167 1 122 1 147 1 
14 3 318 3 82 1 76 3 349 1 347 3 18 1 147 3 
14 1 318 1 63 1 76 1 53 1 347 1 147 1 
110 1 14 1 318 1 76 1 133 1 349 1 53 1 347 1 147 1 
50 1 51 1 4 1 74 1 318 4 125 2 126 1 292 1 76 3 127 1 217 1 53 1 321 1 295 1 238 1 260 1 344 1 178 1 219 1 82 1 180 1 195 1 327 1 83 1 328 1 133 1 347 4 13 1 267 1 14 3 157 1 271 1 349 2 18 1 351 1 160 1 276 1 159 1 66 1 212 1 313 1 167 1 122 1 147 3 
61 1 14 1 318 2 82 1 242 1 76 1 347 2 147 2 18 1 
14 3 74 1 318 3 114 1 127 1 76 3 349 1 217 1 271 1 53 1 295 1 238 1 18 2 344 1 159 1 325 1 133 1 347 3 147 3 
14 2 318 2 227 1 76 2 349 1 18 1 208 1 133 1 347 2 147 2 
50 1 267 1 318 1 292 1 260 1 178 1 219 1 82 1 83 1 328 1 347 1 13 1 167 1 313 1 122 1 
2 1 318 1 292 1 260 1 178 1 219 1 82 1 194 1 83 1 328 1 347 1 13 1 167 1 313 1 122 1 
317 2 125 2 126 1 77 2 364 1 321 1 100 1 195 1 327 1 12 1 134 1 302 1 62 1 304 1 227 2 373 1 350 1 351 1 160 2 208 2 66 4 143 1 212 1 148 1 
74 1 14 1 318 1 76 1 53 1 347 1 368 1 147 1 
358 1 14 4 318 4 76 4 217 1 349 1 53 1 18 2 33 1 82 1 118 1 133 1 347 4 147 4 
14 2 318 2 63 1 76 2 368 1 53 1 347 2 147 2 
288 1 184 1 
288 1 184 1 
34 1 191 1 
34 1 191 1 
34 1 191 1 
168 1 288 1 184 1 
168 1 288 1 184 1 
168 1 288 1 184 1 
288 1 184 1 257 1 
44 1 288 2 56 1 184 2 34 1 191 1 
286 1 288 1 184 1 
286 1 288 1 184 1 
286 1 288 1 184 1 
136 1 285 2 288 2 173 2 184 2 226 2 114 1 307 1 17 1 41 1 273 1 238 2 159 2 56 1 365 2 120 1 107 1 222 3 243 2 
285 1 288 1 173 1 14 2 319 1 318 2 184 1 226 1 76 2 342 1 238 1 9 1 32 1 159 1 231 1 82 1 347 2 107 1 222 1 38 1 257 1 243 1 214 1 147 2 
54 1 183 1 49 1 
54 1 216 1 49 1 
54 3 183 2 216 1 229 1 197 1 135 1 
250 1 54 2 183 1 216 1 197 1 135 1 
54 2 183 1 216 1 197 2 135 1 
123 1 287 1 172 2 289 1 319 1 361 2 95 1 291 1 364 1 238 5 100 1 101 1 239 1 9 1 103 1 221 2 12 1 330 3 268 1 371 1 114 2 188 1 350 1 249 3 116 1 159 5 209 1 253 4 72 1 315 2 316 1 214 1 
287 2 289 6 291 2 53 1 294 5 238 9 296 1 100 3 101 3 239 3 240 1 103 1 346 1 12 3 347 1 14 1 63 1 114 5 157 1 349 1 350 3 249 8 116 1 309 1 117 1 159 9 251 1 209 1 253 7 316 1 315 6 123 2 172 6 318 1 319 4 361 6 28 1 364 3 76 1 132 1 330 9 268 2 188 2 279 5 233 1 147 1 
123 1 287 1 172 2 319 1 95 1 361 2 291 1 364 1 238 3 100 1 101 1 239 2 103 1 240 1 221 1 12 1 330 4 268 1 114 3 188 1 350 1 249 3 159 3 253 2 72 1 315 2 
123 1 287 1 172 4 319 2 361 4 95 1 291 1 28 1 364 2 238 4 296 1 100 2 101 2 239 4 103 1 240 1 346 1 221 2 12 2 330 8 268 1 114 5 188 1 350 2 249 5 159 4 253 3 72 1 315 4 
0 1 111 1 122 1 
161 1 122 1 
274 1 
122 1 260 1 
0 2 353 1 328 1 98 1 122 3 260 1 
328 1 122 1 260 1 
131 1 122 1 
192 1 304 2 75 2 77 4 320 1 248 1 350 1 100 1 158 1 130 1 262 1 160 3 335 1 66 7 154 1 337 1 302 3 
192 1 304 2 75 2 77 4 320 1 248 1 350 1 100 1 158 1 130 1 262 1 160 3 335 1 66 7 154 1 337 1 302 3 
192 1 304 2 75 2 77 4 320 1 248 1 350 1 100 1 158 1 130 1 262 1 160 3 335 1 190 1 66 7 154 1 337 1 302 3 
192 2 73 1 340 1 125 2 75 3 77 16 364 3 320 2 321 1 261 1 100 4 130 1 101 3 262 1 323 1 154 2 12 3 195 1 302 10 244 4 304 5 201 3 308 1 64 1 248 5 158 1 350 4 351 1 335 2 160 15 66 31 337 1 165 1 212 1 
192 1 73 1 125 4 75 2 77 5 320 1 321 2 100 1 129 1 262 1 154 1 195 2 302 4 304 3 248 1 350 1 87 1 158 1 351 2 160 4 335 1 66 9 337 1 212 2 
292 1 216 1 54 2 79 1 219 1 104 1 326 2 83 1 13 1 198 1 265 1 155 1 183 1 113 1 15 1 246 2 40 1 141 1 229 1 86 1 43 1 45 1 22 1 282 1 49 1 254 1 167 1 25 1 145 1 94 1 
215 1 292 1 216 1 54 2 79 1 219 1 104 1 326 3 83 1 13 1 265 1 155 1 109 1 183 1 113 1 15 1 246 3 40 1 141 1 229 1 86 2 43 1 45 1 282 1 49 1 254 1 167 1 25 1 145 1 121 1 
215 1 292 1 216 1 54 2 79 1 219 1 326 2 83 1 13 1 155 1 109 1 183 1 113 1 15 1 246 2 40 1 141 1 229 1 86 2 43 1 45 1 282 1 49 1 167 1 25 1 
290 1 292 1 97 1 8 1 260 1 178 1 219 1 326 1 83 1 13 1 15 2 113 2 246 1 186 1 374 1 45 2 282 2 92 1 254 1 167 1 145 1 121 1 122 1 
183 1 15 1 113 1 40 1 246 1 292 1 216 1 229 1 54 2 43 1 219 1 104 1 45 1 22 1 326 1 83 1 282 1 49 1 254 1 13 1 167 1 25 1 265 1 94 1 145 1 109 1 
331 1 
287 1 3 1 289 2 291 1 292 1 53 1 295 1 238 3 344 1 301 1 242 1 13 2 347 1 305 1 348 2 249 2 116 1 159 3 311 1 167 1 316 1 122 1 123 1 169 1 172 2 74 1 359 1 318 1 127 1 260 1 176 1 178 2 219 2 83 2 223 1 369 1 225 1 332 1 188 1 374 1 275 1 377 1 46 1 92 1 236 1 147 1 
3 1 74 1 318 1 359 1 289 2 127 1 53 1 295 1 238 3 344 1 242 1 347 1 305 1 369 1 348 2 16 1 116 1 159 3 46 1 236 1 256 1 147 1 
3 1 74 1 289 1 318 1 359 1 127 1 53 1 295 1 238 3 344 1 103 1 242 1 347 1 305 1 369 1 348 3 114 1 230 1 116 1 159 3 46 1 236 1 256 1 147 1 
3 1 74 1 318 1 359 1 289 2 127 1 53 1 295 1 238 3 344 1 103 1 242 1 347 1 305 1 369 1 348 3 39 1 16 1 114 1 230 1 116 1 159 3 46 1 236 1 256 1 147 1 
3 1 289 3 291 1 53 2 295 1 238 3 193 1 344 1 103 1 301 1 242 1 347 2 14 1 63 1 348 2 305 1 16 2 114 1 157 1 349 1 249 1 116 1 117 1 159 3 251 1 311 2 256 1 316 1 123 1 169 1 74 1 172 1 318 2 359 1 76 1 127 1 80 1 36 1 39 2 369 1 225 2 188 1 189 1 90 1 46 1 236 1 147 2 
123 1 3 1 169 1 172 1 74 1 359 1 318 1 291 1 127 1 53 1 295 1 238 2 344 1 176 1 301 1 242 1 347 1 305 1 369 1 348 2 225 1 188 1 249 1 159 2 311 1 46 1 236 1 316 1 147 1 
3 1 291 1 53 2 295 1 238 2 344 1 103 1 301 1 242 1 347 2 14 1 348 2 305 1 63 1 114 1 157 1 349 1 249 1 159 2 117 1 311 2 251 1 316 1 123 1 169 1 74 1 172 1 359 1 318 2 127 1 76 1 80 1 369 1 225 2 188 1 189 1 90 1 46 1 236 1 147 2 
3 1 291 1 53 2 295 1 238 2 344 1 103 1 301 1 242 1 347 2 14 1 348 2 305 1 63 1 114 1 157 1 349 1 249 1 159 2 117 1 311 2 251 1 316 1 123 1 169 1 74 1 172 1 359 1 318 2 127 1 76 1 80 1 369 1 225 2 188 1 189 1 90 1 46 1 236 1 147 2 
3 1 291 1 52 1 53 2 295 1 238 2 344 1 103 1 301 1 242 1 347 2 14 1 348 2 305 1 63 1 203 1 114 1 157 1 115 1 349 1 249 1 159 2 117 1 311 2 251 1 316 1 123 1 74 1 172 1 359 1 318 2 127 1 76 1 80 1 369 1 225 2 188 1 46 1 236 1 147 2 
3 1 289 1 291 1 53 2 295 1 193 1 238 2 344 1 103 1 301 1 242 1 347 2 14 1 63 1 348 3 305 1 16 1 114 1 157 1 349 1 249 1 159 2 117 1 311 2 251 1 316 1 123 1 169 1 74 1 172 1 359 1 318 2 76 1 127 1 80 1 39 1 369 1 225 2 230 1 188 1 189 1 90 1 46 1 236 1 147 2 
3 1 289 1 291 1 53 2 295 1 193 1 238 2 344 1 103 1 301 1 242 1 347 2 14 1 63 1 348 3 305 1 16 1 114 1 157 1 349 1 249 1 159 2 117 1 311 2 251 1 316 1 123 1 169 1 74 1 172 1 359 1 318 2 76 1 127 1 80 1 39 1 369 1 225 2 230 1 188 1 189 1 90 1 46 1 236 1 147 2 
123 1 3 1 172 1 74 1 359 1 318 1 291 1 127 1 53 1 295 1 238 2 344 1 176 1 301 1 242 1 347 1 305 1 369 1 348 2 225 1 115 1 188 1 249 1 159 2 311 1 46 1 236 1 316 1 147 1 
317 1 125 2 75 1 126 1 77 3 320 1 321 1 100 1 262 1 82 2 195 1 327 1 302 2 62 1 304 2 111 1 227 1 158 1 350 1 351 1 208 1 335 1 160 3 66 6 337 1 212 1 
170 1 317 11 125 4 126 2 77 8 364 1 321 2 100 2 101 2 323 1 82 1 180 1 58 1 195 2 327 1 12 2 302 2 304 1 244 3 201 3 370 1 185 1 227 4 308 1 248 1 350 1 351 2 160 6 208 11 66 14 164 1 211 1 212 2 
138 1 14 1 318 1 125 2 227 1 247 1 126 1 77 1 76 1 217 1 321 1 18 1 351 1 66 1 164 1 327 1 195 1 347 1 211 1 212 1 147 1 
50 2 292 2 100 3 101 2 300 2 195 3 12 2 302 8 13 3 347 3 109 1 304 4 14 1 248 4 158 1 350 3 18 1 351 3 160 10 208 7 66 20 352 2 164 1 23 1 356 1 211 1 212 3 167 2 313 2 26 1 122 2 317 7 318 3 75 1 125 6 126 3 76 1 175 2 77 10 364 2 217 1 320 1 321 3 260 2 262 1 178 1 219 3 82 2 180 1 83 3 327 3 328 2 267 2 227 7 335 1 276 2 337 1 48 2 147 1 
318 1 152 1 125 4 362 2 292 2 126 2 76 1 77 1 128 1 321 2 259 1 260 2 297 1 178 2 219 8 105 1 180 1 83 8 195 2 327 2 347 1 13 7 106 1 198 1 109 1 62 1 14 1 18 1 351 2 374 1 160 1 89 1 66 2 164 1 92 1 167 2 212 2 147 1 122 3 
317 1 318 1 125 2 126 1 76 1 77 1 364 1 321 1 100 1 101 1 195 1 327 1 12 1 133 1 196 1 302 1 347 1 304 1 14 1 227 1 349 1 350 1 351 1 208 1 160 2 66 3 211 1 212 1 147 1 
317 1 62 1 125 2 227 1 126 1 77 2 248 1 321 1 100 1 351 1 208 1 66 2 327 1 195 1 12 1 134 1 302 1 212 1 
317 1 62 1 304 1 125 2 227 1 126 1 364 1 321 1 350 1 351 1 208 1 160 2 66 2 327 1 195 1 302 1 212 1 148 1 
317 2 125 2 126 1 77 2 364 1 321 1 100 1 101 1 12 1 195 1 327 1 302 2 62 1 304 1 227 2 248 1 350 1 351 1 208 2 160 2 66 4 212 1 
317 1 125 2 227 1 126 1 77 2 248 1 321 1 100 1 297 1 351 1 208 1 66 2 327 1 195 1 12 1 134 1 302 1 212 1 
317 1 304 1 125 2 227 1 126 1 364 1 321 1 350 1 297 1 351 1 208 1 160 2 66 2 327 1 195 1 302 1 212 1 148 1 
317 2 125 2 126 1 77 2 364 1 321 1 100 1 101 1 297 1 12 1 195 1 327 1 302 2 304 1 227 2 248 1 350 1 351 1 208 2 160 2 66 4 212 1 
317 2 304 1 125 2 227 2 126 1 364 1 77 2 248 1 321 1 350 1 100 1 351 1 101 1 160 2 208 2 66 4 327 1 195 1 12 1 302 2 212 1 
50 1 318 1 125 2 292 1 126 1 77 1 321 1 260 1 178 1 219 1 82 1 180 1 83 1 327 1 195 1 328 1 13 1 347 1 267 1 351 1 276 1 160 1 66 2 164 1 313 1 167 1 212 1 122 1 
2 1 318 1 125 2 292 1 126 1 77 1 321 1 260 1 178 1 219 1 82 1 194 1 180 1 83 1 327 1 195 1 328 1 13 1 347 1 139 1 351 1 160 1 66 2 164 1 313 1 167 1 212 1 122 1 
317 2 125 2 126 1 77 2 364 1 321 1 100 1 101 1 12 1 195 1 327 1 302 2 304 1 227 2 248 1 350 1 351 1 208 2 160 2 66 4 211 1 212 1 
50 1 317 2 318 1 125 2 292 1 126 1 364 1 77 2 321 1 100 1 260 1 101 1 219 1 12 1 83 1 327 1 195 1 328 1 302 2 13 1 347 1 198 1 304 1 267 1 227 2 248 1 350 1 351 1 160 2 208 2 276 1 66 4 48 1 313 1 167 1 212 1 122 1 
317 1 150 1 318 1 125 2 126 1 364 1 76 1 77 2 321 1 100 1 101 1 195 1 327 1 12 1 133 1 302 1 347 1 14 1 227 1 349 1 248 1 350 1 351 1 160 1 208 1 66 3 211 1 212 1 147 1 
73 1 171 1 339 1 124 1 75 1 125 6 77 20 364 4 320 1 321 3 343 1 100 5 322 1 129 1 101 4 262 1 31 2 323 1 195 3 12 4 367 1 302 8 303 1 182 1 304 4 244 4 112 1 201 3 308 3 248 4 65 4 206 1 158 1 350 5 351 3 335 1 277 1 160 21 66 41 355 1 337 1 255 1 212 3 
73 2 171 1 339 1 124 1 75 1 125 8 77 20 364 3 320 1 321 4 343 1 100 5 322 1 129 1 101 4 262 1 31 2 323 1 195 4 12 4 367 1 302 7 303 1 182 1 304 4 244 4 112 1 201 3 308 3 248 3 65 4 206 1 158 1 350 4 351 4 335 1 277 1 160 18 66 38 355 1 337 1 255 1 212 4 
73 1 170 2 339 1 124 1 75 1 125 4 77 27 364 7 320 1 321 2 343 1 100 8 129 1 101 7 262 1 31 1 323 2 195 2 12 7 367 1 302 14 303 1 182 1 304 7 244 4 112 1 201 4 308 2 248 7 65 4 206 1 158 1 350 8 351 2 335 1 277 1 160 25 66 52 355 1 337 1 255 1 212 2 
125 4 77 9 364 3 321 2 343 1 100 3 322 1 129 1 101 3 31 1 323 1 195 2 12 3 302 6 303 1 304 3 244 2 112 1 201 1 308 1 248 3 65 2 206 2 350 3 351 2 160 10 66 19 355 1 24 1 212 2 
73 2 339 1 124 1 125 6 77 14 364 2 321 3 343 1 100 3 129 1 101 3 31 2 195 3 12 3 367 1 302 4 303 1 182 1 304 2 244 2 112 2 201 2 308 2 248 2 65 4 206 1 350 2 351 3 160 12 277 1 66 26 355 1 255 1 212 3 
285 1 288 1 173 1 56 1 184 1 226 1 270 1 17 1 41 1 243 1 
257 1 342 1 
285 1 19 1 288 1 173 1 184 1 226 1 379 1 243 1 146 1 
285 1 288 1 173 1 184 1 226 1 114 1 307 1 17 1 41 1 273 1 238 1 159 1 56 1 365 1 120 1 107 1 222 2 243 1 
285 1 288 1 173 1 184 1 226 1 114 1 307 1 17 1 41 1 273 1 238 1 159 1 56 1 365 1 120 1 107 1 222 2 243 1 
285 1 288 1 173 1 184 1 226 1 114 1 307 1 17 1 41 1 273 1 238 1 159 1 56 1 365 1 120 1 107 1 222 2 243 1 
44 1 168 1 149 1 
44 1 168 1 149 1 
286 1 85 1 
44 1 286 1 85 1 
231 1 38 1 
285 1 159 1 288 1 173 1 184 1 226 1 378 1 253 1 238 1 243 1 
168 1 149 1 
44 1 286 1 85 1 
318 2 174 1 125 2 362 2 292 1 126 1 77 1 321 1 260 1 219 2 180 1 83 2 195 1 327 1 329 1 347 2 13 2 106 1 202 1 351 1 160 1 89 1 66 2 164 1 234 1 211 1 167 1 235 1 212 1 122 1 147 2 
183 1 113 1 40 1 292 1 84 1 216 1 229 1 30 1 54 2 219 2 83 2 49 1 13 2 167 1 37 1 198 1 265 1 25 1 109 1 
183 1 113 1 40 1 292 1 216 1 229 1 30 1 54 2 298 1 219 1 83 1 49 1 13 1 167 1 265 1 25 1 109 1 
113 1 290 1 292 1 260 1 374 1 178 1 219 1 83 1 35 1 92 1 13 1 167 1 37 1 122 1 
183 1 113 1 40 1 292 1 84 1 216 1 229 1 30 1 54 2 219 1 83 1 49 1 13 1 167 1 37 1 265 1 25 1 109 1 
162 1 
137 1 172 1 111 1 103 1 310 1 114 1 249 1 
169 1 123 1 172 1 289 1 291 1 238 1 239 1 103 1 330 1 266 1 114 2 188 1 249 1 116 1 159 1 281 1 316 1 
0 2 287 2 151 2 289 5 291 4 292 4 238 5 100 2 101 2 239 6 103 2 300 2 12 2 13 3 198 1 199 1 114 8 207 2 249 9 350 2 116 3 159 5 310 1 161 3 20 1 353 1 252 2 119 2 210 2 312 1 167 3 316 4 213 2 315 6 122 10 123 4 172 8 361 6 127 2 364 2 260 3 178 1 219 3 131 2 83 3 328 3 330 12 137 1 223 1 269 1 42 1 188 4 333 2 232 2 
287 1 123 2 339 1 172 5 289 1 361 5 124 1 291 2 364 2 238 1 100 2 101 2 239 3 103 2 81 1 12 2 367 1 182 1 330 6 223 1 244 1 201 1 114 5 272 1 308 1 188 2 249 8 350 2 116 1 159 1 277 1 252 1 119 2 315 5 316 2 
123 1 172 2 318 1 291 1 76 1 53 1 320 1 238 1 100 2 181 1 347 1 14 1 63 1 157 1 349 1 188 1 350 1 249 2 335 1 159 1 117 1 90 1 251 1 252 1 119 2 337 1 316 1 147 1 
123 1 137 1 172 1 291 1 114 1 188 1 249 1 310 1 103 1 316 1 
330 10 172 5 361 5 114 5 364 2 100 2 350 2 249 5 101 2 239 5 300 1 252 1 119 2 12 2 315 5 
116 1 159 1 103 1 289 1 114 1 238 1 
123 2 287 2 172 2 289 4 291 2 292 1 238 3 260 1 178 2 219 4 240 1 83 4 13 4 108 1 223 2 269 2 188 2 249 2 374 1 275 1 116 2 159 3 377 1 92 1 284 1 167 1 312 1 316 1 122 1 
50 1 4 1 318 3 125 2 292 1 126 1 76 2 321 1 260 1 178 1 219 1 82 1 180 1 83 1 327 1 195 1 328 1 13 1 347 3 14 2 267 1 157 1 349 2 351 1 160 1 276 1 66 1 212 1 167 1 313 1 147 2 122 1 
330 4 123 1 287 1 223 1 172 2 361 2 75 1 291 1 114 4 188 1 249 1 239 2 103 2 315 2 316 1 
285 1 341 1 243 1 
285 1 341 1 243 1 
285 1 341 1 243 1 
285 1 237 1 231 1 17 1 243 1 
285 1 93 1 243 1 
285 1 93 1 243 1 
285 1 93 1 243 1 
285 1 243 1 
288 1 184 1 
75 1 125 2 77 4 320 1 321 1 100 1 129 1 262 1 195 1 302 2 244 1 304 2 201 1 308 1 350 1 158 1 351 1 160 4 277 1 335 1 66 8 337 1 212 1 
75 1 125 4 77 6 320 1 321 2 100 2 129 1 101 1 262 1 323 1 195 2 12 1 302 3 304 2 244 2 201 1 308 1 248 1 350 1 158 1 351 2 335 1 160 5 277 1 66 11 67 1 337 1 212 2 
73 1 339 1 124 1 75 1 125 6 77 9 364 2 320 1 321 3 100 3 129 1 101 2 262 1 195 3 12 2 367 1 302 4 182 1 244 1 304 3 201 1 308 1 248 1 158 1 350 3 351 3 335 1 160 10 277 1 67 1 66 19 337 1 212 3 
73 1 339 1 124 1 75 1 125 6 77 10 364 1 320 1 321 3 100 3 129 1 101 2 262 1 195 3 12 2 367 1 302 5 182 1 244 1 304 3 201 1 308 1 248 2 158 1 350 2 351 3 335 1 160 7 277 1 67 1 66 17 337 1 212 3 
75 1 125 2 77 4 320 1 321 1 100 1 129 1 262 1 195 1 302 2 244 1 304 2 201 1 308 1 350 1 158 1 351 1 160 4 277 1 335 1 66 8 337 1 212 1 
339 1 124 1 125 2 77 6 364 2 321 1 100 2 129 1 101 2 195 1 12 2 367 1 302 2 182 1 244 1 304 1 201 1 308 1 248 1 350 2 351 1 160 6 277 1 66 12 212 1 
73 2 339 1 124 1 75 1 125 8 77 10 364 1 320 1 321 4 100 3 129 1 101 2 262 1 195 4 12 2 367 1 302 5 182 1 244 1 304 3 201 1 308 1 248 2 158 1 350 2 351 4 335 1 160 8 277 1 66 18 67 1 337 1 212 4 
73 2 339 1 124 1 125 8 77 9 364 2 321 4 100 3 129 1 322 1 101 3 195 4 12 3 367 1 302 6 182 1 244 1 304 3 201 1 308 1 248 3 350 2 351 4 160 7 277 1 66 16 212 4 
304 3 77 3 320 3 248 3 350 1 158 1 100 1 262 2 160 4 335 3 66 7 337 1 302 6 
73 2 339 1 124 1 75 1 125 8 77 10 364 1 320 1 321 4 100 3 129 1 322 1 101 2 262 1 195 4 12 2 367 1 302 4 182 1 244 1 304 3 201 1 308 1 248 1 158 1 350 2 351 4 335 1 160 8 277 1 66 18 337 1 212 4 
73 1 304 2 75 1 125 4 77 4 320 1 248 1 321 2 350 1 100 1 158 1 351 2 262 1 160 4 335 1 66 8 195 2 337 1 302 3 212 2 
304 2 111 1 75 1 77 3 320 1 158 1 100 1 350 1 262 1 160 3 335 1 66 6 337 1 302 2 
304 1 125 2 364 1 77 2 321 1 248 1 350 1 100 1 351 1 101 1 160 2 67 1 66 4 195 1 12 1 302 2 212 1 
304 1 244 2 201 1 364 1 77 3 308 1 248 1 350 1 100 1 101 1 160 4 323 1 66 7 12 1 302 2 
170 1 73 2 5 1 75 1 125 4 77 11 364 2 320 2 321 2 100 3 101 2 262 1 323 1 12 2 195 2 302 9 244 2 304 5 201 2 370 1 248 4 158 1 350 3 351 2 335 2 160 12 66 23 337 1 212 2 
160 1 244 1 66 1 
66 1 201 1 77 1 
304 2 125 2 77 3 364 1 321 1 248 1 100 1 350 1 351 1 101 1 160 3 67 1 66 6 300 1 195 1 12 1 302 3 212 1 
339 1 124 1 125 2 77 6 364 2 321 1 100 2 129 1 101 2 195 1 12 2 367 1 302 2 182 1 244 1 304 1 201 1 308 1 248 1 350 2 351 1 160 6 277 1 66 12 212 1 
304 1 77 3 320 1 248 1 100 1 350 1 160 3 335 1 66 6 337 1 302 2 
73 1 304 1 5 1 125 2 77 1 320 1 248 1 321 1 158 1 351 1 262 1 335 1 160 2 66 3 195 1 302 2 212 1 
304 3 125 2 77 5 320 2 321 1 248 2 100 2 350 2 351 1 129 1 335 2 160 5 66 10 195 1 181 1 337 1 302 5 212 1 
125 2 77 2 321 1 248 1 100 1 129 1 351 1 66 2 195 1 12 1 302 1 212 1 
304 1 125 2 364 1 77 2 321 1 248 1 350 1 100 1 129 1 351 1 101 1 160 2 66 4 195 1 12 1 302 2 212 1 
73 1 304 1 5 1 125 6 77 1 320 1 321 3 248 1 322 1 129 1 351 3 160 2 335 1 66 3 195 3 302 2 212 3 
73 2 340 1 5 1 75 1 125 10 77 16 364 3 320 3 321 5 261 1 100 5 322 1 129 1 101 3 262 1 323 1 195 5 12 3 302 12 244 4 304 7 201 3 64 1 308 1 248 5 158 1 350 5 351 5 335 3 160 18 67 1 66 34 337 2 212 5 
61 1 59 1 242 1 
61 1 156 1 376 1 220 1 163 1 59 1 242 1 153 1 
374 1 178 1 111 1 219 1 83 1 292 1 92 1 13 1 167 1 122 1 260 1 
50 1 14 1 318 2 292 1 76 1 260 1 18 1 178 1 219 1 82 1 83 1 328 1 347 2 13 1 313 1 167 1 122 1 147 1 
50 1 74 1 318 2 292 1 76 2 53 1 295 1 260 2 219 1 82 1 131 1 83 1 328 2 13 1 347 2 14 1 269 1 18 1 210 1 167 1 313 1 147 2 122 3 
74 1 318 2 292 1 76 2 53 1 295 1 260 2 219 2 82 1 194 1 131 1 83 2 328 2 13 2 347 2 14 1 269 1 18 1 375 1 210 1 167 1 313 1 147 2 122 3 
0 1 318 1 289 1 292 1 76 1 127 1 53 1 238 2 260 1 178 1 219 2 10 1 103 1 131 1 83 2 328 1 347 1 13 2 14 1 63 1 269 1 114 1 157 1 349 1 142 1 117 1 159 2 161 1 251 1 210 1 167 1 147 1 122 4 
0 1 151 1 289 1 269 1 114 1 292 1 127 1 238 2 260 1 375 1 178 1 159 2 219 3 103 1 161 1 131 1 83 3 328 1 210 1 13 3 167 1 122 4 
219 1 83 1 292 1 128 1 13 1 167 1 
152 1 362 1 258 1 292 3 128 1 259 1 260 2 178 2 102 1 219 7 353 1 105 1 83 7 47 1 328 1 13 6 106 1 167 2 198 1 109 1 122 3 
50 1 317 1 318 2 75 1 125 4 292 1 126 2 77 3 76 1 175 1 320 1 321 2 100 1 260 1 262 1 219 1 82 2 195 2 327 2 83 1 328 1 302 2 347 2 13 1 198 1 304 2 14 1 267 1 202 1 227 1 350 1 158 1 18 1 351 2 208 1 160 3 335 1 276 1 66 6 337 1 48 1 211 1 313 1 167 1 212 2 122 1 147 1 
0 1 123 2 172 1 151 1 289 2 291 2 127 1 238 3 178 1 219 1 103 1 83 1 13 1 137 1 114 1 188 2 249 1 207 1 116 1 159 3 310 1 232 1 161 1 253 1 312 1 316 2 213 1 122 2 
0 1 219 2 353 1 20 1 83 2 292 2 328 1 128 1 13 2 167 1 198 1 122 2 260 1 
292 1 260 1 375 1 374 1 178 1 219 4 83 4 336 1 92 1 13 4 167 1 198 1 122 1 
360 1 269 1 258 1 292 2 260 1 78 1 219 2 83 2 47 1 328 1 13 2 167 1 26 1 122 1 
54 1 178 1 219 1 83 1 292 1 216 1 49 1 13 1 167 1 25 1 
174 1 292 1 260 1 219 2 83 2 13 2 106 1 167 1 198 1 109 1 122 1 
152 1 269 1 292 2 260 2 259 1 374 1 178 1 219 5 83 5 336 1 92 1 13 4 106 1 167 2 198 1 122 3 
269 1 140 1 292 2 260 2 259 1 374 1 178 1 219 5 83 5 336 1 92 1 13 4 106 1 167 2 198 1 122 3 
14 1 318 2 292 1 76 1 260 1 18 1 178 1 219 1 82 1 194 1 83 1 328 1 347 2 13 1 313 1 167 1 122 1 147 1 
269 1 258 1 292 2 260 1 102 1 219 1 353 1 83 1 47 1 328 1 13 1 167 1 122 1 
6 1 318 1 88 1 280 1 234 1 329 1 347 1 235 1 147 1 
179 1 299 1 280 1 
263 1 88 1 6 1 280 1 82 1 
74 1 6 2 114 1 127 1 271 1 53 1 295 1 238 2 344 1 263 2 159 2 179 1 88 2 299 1 103 1 280 1 82 1 253 1 60 1 
79 1 111 1 141 1 155 1 
79 1 246 1 326 1 141 1 254 1 155 1 145 1 
45 1 246 1 282 1 
246 3 141 1 205 1 55 1 79 1 354 1 21 2 326 3 254 1 155 1 94 1 145 1 
79 1 68 1 246 2 326 2 141 1 254 1 86 1 155 1 145 1 
183 1 246 1 54 1 278 1 326 1 49 1 254 1 144 1 94 1 145 1 155 1 
246 1 326 1 141 1 254 1 155 1 145 1 94 1 
79 1 246 1 326 1 141 2 254 1 145 1 94 1 
246 2 141 1 324 1 326 2 71 1 254 2 314 1 155 1 94 1 145 2 
7 1 246 3 141 1 363 1 86 2 79 1 326 3 254 1 144 1 357 1 94 1 145 1 155 2 
218 1 54 1 246 1 326 2 216 1 254 1 86 1 145 1 94 1 
7 1 96 1 246 4 141 1 86 2 79 1 68 1 326 4 254 2 144 1 94 1 145 2 155 2 
79 1 246 1 326 1 141 1 254 1 155 1 145 1 94 1 
7 1 246 4 141 2 86 2 55 1 79 2 21 1 354 1 264 1 326 4 254 1 144 1 145 1 155 3 
246 2 141 1 204 1 29 1 86 1 79 1 11 1 326 2 254 1 155 1 94 1 145 1 
246 3 141 1 55 2 79 1 354 1 21 2 326 3 166 1 254 1 155 1 94 1 145 1 
177 1 366 1 241 2 155 2 
224 1 246 1 326 1 254 1 145 1 94 1 
79 1 246 2 326 2 141 1 254 1 86 1 357 1 155 1 145 1 94 1 
70 1 
79 1 246 1 326 1 141 1 254 1 155 1 145 1 94 1 
246 3 141 1 86 1 79 1 21 1 326 3 254 1 357 1 94 1 145 1 155 1 
7 1 264 1 144 1 155 1 
141 1 155 1 

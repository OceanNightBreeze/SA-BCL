#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (14,49) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (14,49) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (14,49) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (14,49) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (14,49) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (14,49) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (14,49) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (14,49) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (14,49) 210 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (14,49) 210 253 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 281 60 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 281 60 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 281 60 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 281 60 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 281 60 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 281 60 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 281 60 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 281 60 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 281 60 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 281 60 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 281 60 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 281 60 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 27 169 115 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2439 | = null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
250 1 214 2 123 2 181 1 256 2 266 1 188 1 17 6 142 1 57 1 145 1 270 3 234 9 239 2 154 1 157 1 156 1 288 1 290 4 67 5 324 1 207 2 242 2 333 1 81 2 80 1 117 9 83 1 
250 1 214 2 123 2 181 1 256 2 266 1 188 1 17 6 142 1 57 1 145 1 270 3 234 9 239 2 154 1 157 1 156 1 288 1 290 4 67 5 324 1 207 2 242 2 333 1 81 2 80 1 117 9 83 1 
250 1 214 2 123 2 181 1 256 2 266 1 188 1 17 7 142 1 57 1 145 1 270 4 234 10 239 2 154 1 157 1 156 1 288 1 290 5 67 6 324 1 207 2 242 2 333 1 81 2 80 1 117 10 83 1 
250 1 214 1 123 2 181 1 256 2 266 1 188 1 17 4 142 1 57 1 270 2 234 7 239 2 154 1 157 1 156 1 288 1 290 3 67 4 324 1 207 2 242 2 333 1 81 2 80 1 117 7 83 1 
250 1 214 2 239 1 256 1 154 1 157 1 290 2 67 3 242 1 207 1 17 3 142 1 270 1 145 1 333 1 234 4 81 1 117 4 
239 1 123 1 256 1 157 1 217 1 156 1 67 1 203 1 207 1 242 1 142 1 333 1 234 2 80 1 277 1 117 2 
123 1 256 2 157 1 290 1 67 2 207 2 188 1 17 1 142 1 270 1 333 1 234 3 117 3 
250 1 214 2 123 1 256 2 306 1 188 1 17 7 142 1 270 3 145 1 234 9 237 1 239 1 154 1 157 1 288 1 290 4 67 5 207 2 242 1 333 1 81 1 117 9 83 1 
250 1 214 2 123 1 256 2 306 1 188 1 17 7 142 1 270 3 145 1 234 9 237 1 239 1 154 1 157 1 288 1 290 4 67 5 207 2 242 1 333 1 81 1 117 9 83 1 
226 1 77 1 318 1 
179 2 77 1 133 1 
186 2 263 2 87 2 273 1 247 1 194 2 20 2 53 2 
119 1 87 3 184 1 53 2 262 1 186 2 136 1 138 2 263 2 98 2 97 1 56 1 267 1 230 1 228 1 58 1 143 1 273 1 312 1 274 1 194 3 20 2 150 1 287 1 159 1 291 1 73 1 34 1 328 1 329 2 331 1 247 1 79 1 173 1 299 2 211 1 212 2 
186 1 263 1 158 1 87 1 273 1 5 1 302 1 194 1 20 1 53 1 
201 1 87 1 317 1 318 1 132 1 5 1 186 1 74 1 232 1 144 1 77 1 275 1 300 1 194 1 
87 1 317 2 318 1 132 1 5 1 53 1 186 1 263 1 74 1 232 1 144 1 77 1 300 2 20 1 194 1 
285 1 59 1 317 1 78 1 300 1 
285 1 59 1 36 1 77 1 317 2 318 1 300 2 82 1 
59 1 317 1 300 1 
304 1 285 1 158 1 87 1 317 1 5 1 53 1 186 1 263 1 273 1 300 1 302 1 20 1 194 1 
77 1 
285 1 59 1 36 1 77 1 171 1 317 2 318 1 300 2 
120 5 304 1 1 1 216 1 87 1 5 1 134 1 95 1 261 1 53 1 13 1 186 1 263 1 59 2 273 1 147 2 102 1 194 1 20 1 280 1 21 2 285 2 158 1 316 2 317 5 318 2 65 2 28 1 294 1 325 2 326 4 170 1 36 1 77 2 301 2 300 5 302 1 118 1 
226 1 247 1 
24 1 87 2 53 1 186 2 263 1 32 1 247 2 194 2 20 1 
282 1 4 1 192 1 
119 1 287 1 87 1 320 1 73 1 97 1 230 1 228 1 329 1 247 1 312 1 299 1 211 1 212 1 274 1 194 1 
119 1 4 1 287 1 87 2 186 1 73 1 263 1 97 1 228 1 230 1 329 1 312 1 299 1 211 1 274 1 212 1 20 1 194 2 213 1 22 1 
186 3 263 3 87 3 247 1 194 3 20 3 53 1 22 1 
186 1 263 1 87 1 5 1 302 1 194 1 20 1 
186 1 24 1 263 1 32 1 87 1 5 1 194 1 20 1 53 1 
119 1 251 1 87 4 132 1 5 1 53 2 136 1 186 3 138 1 263 3 98 2 97 1 56 1 267 1 228 1 230 1 58 1 232 1 144 1 101 1 273 1 312 1 274 1 194 4 20 3 150 1 22 1 24 1 287 1 317 1 159 1 291 1 73 1 74 1 34 1 328 1 329 1 247 1 79 1 211 1 299 1 300 1 212 1 213 1 
186 2 263 1 87 2 247 1 275 1 164 1 194 2 20 1 22 1 
24 1 199 1 87 3 317 1 5 1 132 1 53 1 186 3 263 3 74 1 232 1 144 1 77 1 101 1 300 1 20 3 194 3 213 1 22 2 
24 1 4 1 87 2 53 1 186 2 263 2 192 1 20 2 194 2 22 1 
119 1 287 1 87 1 73 1 97 1 230 1 228 1 329 1 247 1 312 1 299 1 211 1 212 1 274 1 194 1 
119 1 86 1 287 1 87 1 296 1 73 1 97 1 230 1 228 1 329 1 247 1 312 1 299 1 212 1 194 1 
252 1 4 2 130 1 94 1 309 1 262 2 138 4 98 2 15 1 56 1 267 1 192 2 150 1 282 2 284 1 26 1 316 1 291 1 65 1 161 1 328 1 34 2 75 1 79 1 
186 1 263 1 144 1 87 1 5 1 194 1 20 1 195 1 
24 1 87 5 219 1 164 1 53 1 185 1 186 5 263 4 247 1 275 1 20 4 194 5 213 1 22 2 
186 2 263 2 87 2 5 1 195 1 302 1 194 2 20 2 
49 1 241 1 
49 1 241 1 
14 1 307 1 
14 1 307 1 
14 1 307 1 
49 1 241 1 
49 1 241 1 
49 1 241 1 
49 1 241 1 
49 1 241 1 
49 1 241 1 
49 1 241 1 
49 1 241 1 
49 1 210 1 241 1 23 1 
253 1 49 1 317 1 210 1 241 1 300 1 23 1 
242 1 239 1 81 1 
242 1 239 1 203 1 
105 1 239 3 35 1 148 1 81 2 203 1 
105 1 239 2 35 1 81 1 224 1 203 1 
105 2 239 2 35 1 81 1 203 1 
177 1 120 2 179 3 47 1 2 2 126 1 89 1 133 1 94 1 13 1 269 2 59 1 191 1 147 1 285 4 26 1 316 1 317 5 318 1 65 1 322 1 325 1 110 1 326 3 36 1 332 1 77 2 335 1 301 1 300 5 337 1 248 2 
177 4 179 9 2 6 87 1 89 1 5 1 94 3 13 1 186 1 263 1 99 1 269 6 273 1 191 3 20 1 194 1 280 1 285 7 26 3 112 1 36 1 116 1 300 9 301 2 302 1 44 5 120 6 304 1 133 3 52 1 53 1 59 6 147 2 158 1 63 1 316 3 317 9 318 1 65 3 325 2 326 8 245 1 332 2 77 5 78 5 337 2 
177 1 120 2 179 4 2 2 133 2 94 1 269 2 191 1 147 1 280 1 285 2 26 1 316 1 317 3 318 1 322 1 65 1 325 1 326 3 332 1 77 3 335 1 301 1 300 3 337 1 248 1 
177 2 120 4 179 8 2 4 133 4 94 2 52 1 269 4 191 2 147 1 280 1 285 3 26 2 316 2 317 4 318 1 322 1 65 2 325 1 326 5 245 1 332 1 77 5 335 1 116 1 301 1 300 4 337 1 248 2 
226 1 64 1 312 1 
312 1 175 1 
69 1 
287 1 312 1 
97 1 153 1 287 1 182 1 64 2 312 3 
97 1 287 1 312 1 
124 1 312 1 
252 3 303 2 284 2 1 1 316 1 131 1 65 1 134 1 93 1 293 1 11 1 262 4 54 1 138 7 34 3 268 1 102 1 
252 3 303 2 284 2 1 1 316 1 131 1 65 1 134 1 93 1 293 1 11 1 262 4 54 1 138 7 34 3 268 1 102 1 
252 3 303 2 284 2 1 1 316 1 131 1 65 1 134 1 93 1 293 1 11 1 262 4 54 1 138 7 34 3 100 1 268 1 102 1 
252 10 303 3 1 2 125 3 3 1 131 1 134 2 93 1 11 1 94 3 262 16 138 31 54 2 98 2 56 1 267 1 268 2 191 3 102 1 150 1 196 1 284 5 26 3 316 4 291 1 321 4 65 4 202 1 163 1 293 5 243 1 34 15 334 1 43 1 
176 1 252 4 303 2 1 1 50 1 131 1 134 1 93 1 262 5 138 9 54 1 98 4 56 2 267 2 268 1 102 1 150 2 284 3 316 1 291 2 65 1 163 1 293 1 34 4 
45 1 123 1 256 1 127 1 91 1 223 1 17 1 230 1 228 1 142 1 272 1 146 1 234 2 148 1 103 1 278 1 239 2 157 1 67 1 203 1 297 1 242 1 207 1 329 1 333 1 39 1 299 1 81 1 212 1 117 2 
84 1 45 1 178 1 123 1 256 1 91 1 223 1 17 2 230 1 228 1 142 1 272 1 148 1 146 1 234 3 103 1 239 2 157 1 289 1 67 1 203 1 297 1 242 1 207 1 329 1 39 1 299 1 81 1 212 1 117 3 
84 1 178 1 45 1 239 2 123 1 157 1 67 1 203 1 297 1 242 1 228 1 230 1 17 2 142 1 329 1 272 1 39 1 148 1 234 2 146 1 299 1 81 1 212 1 103 1 117 2 
119 1 249 1 45 2 123 2 215 1 256 1 228 1 230 1 146 2 234 1 312 1 103 2 108 1 289 1 287 1 29 1 207 1 166 1 329 1 114 1 299 1 212 1 117 1 
84 1 45 1 123 1 256 1 127 1 91 1 223 1 230 1 228 1 272 1 146 1 234 1 148 1 103 1 239 2 203 1 297 1 242 1 207 1 329 1 333 1 39 1 299 1 81 1 212 1 117 1 
19 1 
119 2 120 1 8 1 13 1 228 1 230 1 59 2 312 1 147 1 281 1 236 1 60 1 108 1 287 1 317 2 292 1 204 1 325 1 326 1 206 1 329 2 332 1 36 1 114 1 299 2 212 2 301 1 300 2 
60 1 317 1 292 1 300 1 204 1 281 1 
60 1 317 1 292 1 300 1 204 1 281 1 
60 1 317 1 292 1 300 1 204 1 281 1 
60 1 59 1 36 1 171 1 317 2 292 1 300 2 204 1 281 1 
60 1 317 1 147 1 292 1 301 1 300 1 204 1 281 1 325 1 13 1 
60 1 317 1 292 1 300 1 204 1 281 1 
60 1 317 1 292 1 300 1 204 1 281 1 
60 1 317 1 292 1 300 1 204 1 281 1 
60 1 317 1 292 1 300 1 204 1 281 1 
60 1 317 1 292 1 300 1 204 1 281 1 
60 1 317 1 147 1 292 1 301 1 300 1 204 1 281 1 325 1 13 1 
252 2 303 1 1 1 4 1 131 1 134 1 93 1 309 1 226 1 262 3 138 6 98 2 56 1 267 1 192 1 102 1 150 1 282 1 284 2 316 1 291 1 65 1 328 1 34 3 79 1 247 2 
252 2 125 3 4 11 51 1 94 1 184 1 310 1 262 8 138 14 98 4 56 2 267 2 58 1 191 2 192 4 150 2 282 11 284 1 26 2 316 1 291 2 321 3 65 2 293 1 243 1 167 1 34 6 328 1 246 1 247 1 79 2 174 1 43 1 
119 1 87 2 184 1 186 1 262 1 263 1 138 2 97 1 98 2 228 1 230 1 267 1 56 1 141 1 58 1 192 1 312 1 274 1 194 2 20 1 150 1 22 1 287 1 291 1 320 1 71 1 73 1 168 1 328 1 34 1 329 1 246 1 247 1 79 1 211 1 299 1 212 1 213 1 
119 1 87 1 291 1 186 1 263 1 98 2 311 1 56 1 328 1 267 1 329 1 246 1 79 1 299 1 212 1 20 1 194 1 213 1 150 1 22 1 
84 1 119 2 87 1 305 1 260 1 10 1 309 1 184 1 186 1 262 1 263 1 138 2 98 4 228 2 230 2 56 2 267 2 58 1 312 3 104 1 149 1 278 1 194 1 20 1 150 2 22 1 283 1 108 1 62 1 287 2 291 2 328 2 34 1 329 7 331 2 114 1 79 2 299 8 212 8 
252 1 4 1 87 1 94 1 53 1 186 1 262 1 263 1 138 3 98 2 56 1 267 1 192 1 191 1 20 1 194 1 150 1 282 1 24 1 284 1 26 1 316 1 291 1 65 1 70 1 328 1 34 2 246 1 79 1 
282 1 252 1 4 1 26 1 291 1 65 1 161 1 293 1 309 1 262 2 138 2 98 2 328 1 267 1 56 1 192 1 79 1 150 1 
282 1 252 1 284 1 4 1 130 1 316 1 291 1 94 1 309 1 138 2 98 2 328 1 267 1 56 1 34 2 192 1 79 1 150 1 
282 2 252 2 284 1 4 2 26 1 316 1 291 1 65 1 94 1 293 1 309 1 262 2 138 4 98 2 34 2 328 1 267 1 56 1 192 2 79 1 191 1 150 1 
282 1 283 1 252 1 4 1 26 1 291 1 65 1 161 1 293 1 262 2 138 2 98 2 328 1 267 1 56 1 192 1 79 1 150 1 
282 1 283 1 252 1 284 1 4 1 130 1 316 1 291 1 94 1 138 2 98 2 328 1 267 1 56 1 34 2 192 1 79 1 150 1 
282 2 283 1 252 2 284 1 4 2 26 1 316 1 291 1 65 1 94 1 293 1 262 2 138 4 98 2 34 2 328 1 267 1 56 1 192 2 79 1 191 1 150 1 
282 2 252 2 284 1 4 2 26 1 316 1 291 1 65 1 94 1 293 1 262 2 138 4 98 2 34 2 328 1 267 1 56 1 192 2 79 1 191 1 150 1 
119 1 87 1 184 1 262 1 136 1 138 2 97 1 98 2 228 1 230 1 267 1 56 1 58 1 312 1 274 1 194 1 150 1 287 1 291 1 73 1 328 1 34 1 329 1 247 1 79 1 211 1 299 1 212 1 
119 1 46 1 86 1 87 1 184 1 262 1 138 2 97 1 98 2 228 1 230 1 267 1 56 1 58 1 312 1 194 1 150 1 287 1 291 1 296 1 73 1 328 1 34 1 329 1 247 1 79 1 299 1 212 1 
282 2 252 2 284 1 4 2 26 1 316 1 291 1 65 1 94 1 293 1 262 2 138 4 98 2 34 2 328 1 267 1 56 1 246 1 192 2 79 1 191 1 150 1 
252 2 4 2 87 1 94 1 262 2 136 1 138 4 97 1 98 2 228 1 230 1 267 1 56 1 192 2 191 1 312 1 274 1 278 1 194 1 150 1 282 2 151 1 284 1 26 1 287 1 316 1 291 1 65 1 293 1 73 1 34 2 328 1 329 1 79 1 211 1 299 1 212 1 
252 1 4 1 87 1 94 1 53 1 186 1 262 2 263 1 138 3 98 2 56 1 267 1 191 1 192 1 20 1 194 1 150 1 279 1 24 1 282 1 26 1 316 1 291 1 65 1 293 1 34 1 328 1 246 1 79 1 
252 6 125 1 48 2 129 1 50 1 94 3 262 9 138 19 98 4 56 2 267 2 191 3 18 1 193 1 150 2 314 1 284 3 26 3 316 3 291 2 321 2 65 3 109 1 293 3 31 2 243 1 34 10 244 1 172 1 43 1 
252 4 125 2 48 1 129 2 50 1 225 1 94 2 262 14 138 26 98 6 56 3 267 3 191 3 193 1 150 3 284 2 200 1 26 3 316 2 27 1 291 3 321 2 65 3 163 2 293 2 109 1 31 4 243 2 111 1 34 12 169 1 244 2 172 1 115 1 
252 8 1 1 93 1 9 1 94 4 262 20 98 6 267 3 191 4 193 1 102 1 284 4 200 1 26 4 291 3 27 1 293 4 109 1 31 4 111 1 34 21 115 1 43 1 303 1 125 3 129 2 48 1 50 1 131 1 134 1 225 1 138 41 56 3 150 3 314 1 316 5 65 5 321 4 163 1 243 3 244 1 169 1 172 1 
252 7 303 1 1 1 125 3 48 1 129 2 50 1 131 1 134 1 9 1 93 1 225 1 94 3 262 20 138 38 98 8 56 4 267 4 191 4 102 1 193 1 150 4 314 1 284 4 200 1 26 4 316 4 27 1 291 4 321 4 65 5 163 2 109 1 293 3 31 4 111 1 243 3 34 18 169 1 244 1 172 1 115 1 43 1 
252 14 303 1 1 1 125 4 48 1 129 1 50 1 131 1 134 1 93 1 225 1 94 7 310 2 262 27 138 52 98 4 56 2 267 2 191 7 102 1 193 1 150 2 284 7 200 1 26 7 316 8 27 1 291 2 321 4 65 8 163 1 109 1 293 7 31 4 111 1 243 2 34 25 169 1 244 1 172 1 115 1 43 2 
87 2 221 1 10 1 184 1 186 2 262 1 187 1 138 2 98 2 228 1 230 1 267 1 56 1 58 1 312 1 276 1 194 2 150 1 197 1 240 1 62 1 287 1 291 1 328 1 34 1 329 2 331 2 246 1 79 1 299 2 212 2 
84 1 45 1 239 2 91 1 203 1 308 1 137 1 242 1 228 1 230 1 329 2 231 1 272 1 39 1 148 1 299 2 81 1 212 2 278 1 
84 1 45 1 239 2 91 1 203 1 295 1 242 1 230 1 228 1 329 1 231 1 272 1 39 1 148 1 299 1 81 1 212 1 
119 1 45 1 108 1 287 1 259 1 29 1 137 1 228 1 230 1 329 1 114 1 312 1 299 1 212 1 
84 1 45 1 239 2 91 1 203 1 308 1 137 1 242 1 228 1 230 1 329 1 231 1 272 1 39 1 148 1 299 1 81 1 212 1 
7 1 
226 1 326 1 120 1 77 1 318 1 294 1 118 1 
120 1 25 1 179 1 218 1 317 1 318 1 133 1 72 1 13 1 325 1 326 1 59 1 36 1 77 2 147 1 300 1 301 1 
254 2 179 12 85 2 2 6 257 2 182 1 8 1 183 2 95 2 94 2 13 4 97 3 269 6 190 1 191 2 278 1 21 2 286 1 287 3 26 2 294 1 208 1 209 1 36 3 299 3 301 4 212 3 300 5 118 1 119 1 121 2 120 8 124 2 133 6 222 2 228 4 230 3 232 2 59 5 312 10 147 4 317 5 316 2 318 2 64 2 66 1 65 2 323 2 325 4 326 9 329 3 332 2 77 8 175 3 
120 3 179 6 2 4 125 1 133 3 94 1 13 2 269 4 59 1 191 1 147 2 21 1 200 1 26 1 317 1 316 1 318 1 27 1 321 1 65 1 68 1 325 2 326 5 243 1 111 1 169 1 36 1 77 4 115 1 300 1 301 2 
120 2 1 1 255 1 304 1 87 1 5 1 134 1 95 1 261 1 13 1 53 1 186 1 263 1 273 1 147 1 102 1 194 1 20 1 21 2 158 1 317 1 316 1 65 2 325 1 326 2 301 1 300 1 302 1 
120 1 318 1 294 1 13 1 325 1 326 1 77 1 147 1 301 1 118 1 
120 5 254 1 179 10 2 5 26 2 316 2 65 2 133 5 95 1 94 2 326 5 269 5 77 5 191 2 21 2 
59 1 36 1 77 1 317 1 318 1 300 1 
119 2 120 2 8 2 13 1 228 1 230 1 59 4 190 1 233 1 312 1 147 2 280 1 236 1 108 1 61 1 287 1 317 3 325 2 326 2 206 1 209 2 329 4 332 2 36 2 114 1 299 4 301 2 212 4 300 3 
119 1 87 3 53 2 186 2 136 1 138 1 263 2 98 2 97 1 56 1 230 1 228 1 267 1 58 1 273 1 312 1 274 1 194 3 20 2 150 1 287 1 159 1 291 1 73 1 34 1 328 1 329 1 247 1 79 1 299 1 211 1 212 1 
120 2 303 1 179 4 2 2 318 2 133 2 8 1 13 1 325 1 326 1 269 2 332 1 77 4 147 1 301 1 
180 1 220 1 42 1 
180 1 220 1 42 1 
180 1 220 1 42 1 
180 1 336 1 162 1 135 1 42 1 
180 1 88 1 42 1 
180 1 88 1 42 1 
180 1 88 1 42 1 
180 1 42 1 
49 1 241 1 
252 3 303 1 284 2 1 1 316 1 131 1 291 2 65 1 163 1 134 1 93 1 293 1 262 4 138 8 98 4 34 4 267 2 56 2 102 1 150 2 
262 3 226 1 138 6 252 2 303 1 284 2 1 1 34 3 316 1 131 1 65 1 102 1 134 1 93 1 
252 2 284 1 26 1 316 1 291 1 65 1 94 1 293 1 262 2 138 4 98 2 227 1 34 2 267 1 56 1 191 1 150 1 
252 2 284 1 125 1 26 1 316 1 321 2 65 1 94 1 293 1 262 3 138 7 243 1 34 4 191 1 43 1 
252 9 303 1 1 2 125 2 131 1 134 2 93 1 94 2 310 1 262 11 138 23 98 4 267 2 56 2 191 2 102 1 150 2 284 5 26 2 316 3 319 1 291 2 65 3 321 2 163 2 293 4 167 1 34 12 43 1 
138 1 34 1 321 1 
262 1 138 1 125 1 
252 3 254 1 284 2 26 1 316 1 291 1 65 1 293 1 94 1 262 3 138 6 98 2 227 1 56 1 267 1 34 3 191 1 150 1 
252 2 125 1 50 1 94 2 262 6 138 12 98 2 56 1 267 1 191 2 150 1 284 1 200 1 26 2 316 2 291 1 27 1 321 1 65 2 293 1 243 1 111 1 34 6 169 1 115 1 
252 2 1 1 284 1 316 1 65 1 134 1 293 1 262 3 138 6 34 3 102 1 
252 2 284 1 1 1 319 1 131 1 291 1 134 1 163 1 93 1 293 1 262 1 138 3 98 2 34 2 267 1 56 1 150 1 
252 5 1 2 284 3 50 1 316 2 291 1 65 2 134 2 261 1 293 2 262 5 138 10 98 2 56 1 267 1 34 5 102 1 150 1 
252 1 26 1 50 1 291 1 65 1 293 1 262 2 138 2 98 2 267 1 56 1 150 1 
252 2 284 1 26 1 316 1 50 1 291 1 65 1 94 1 293 1 262 2 138 4 98 2 34 2 267 1 56 1 191 1 150 1 
252 2 314 1 1 1 284 1 50 1 319 1 291 3 163 1 134 1 293 1 262 1 138 3 98 6 34 2 267 3 56 3 150 3 
252 12 303 1 1 3 125 3 50 1 131 1 134 3 93 1 94 3 262 16 138 34 98 10 227 1 56 5 267 5 191 3 102 2 196 1 150 5 314 1 284 7 26 3 316 5 319 1 291 5 202 1 321 4 65 5 163 2 293 5 243 1 34 18 334 1 43 1 
252 2 303 1 1 1 125 1 50 1 131 1 134 1 93 1 262 4 138 8 98 2 56 1 267 1 102 1 150 1 284 2 316 1 291 1 65 1 321 1 243 1 34 4 115 1 
252 3 303 1 1 1 125 1 50 1 131 1 134 1 93 1 262 6 138 11 98 4 227 1 56 2 267 2 191 1 102 1 150 2 284 2 26 1 316 1 291 2 321 2 65 2 293 1 243 1 34 5 115 1 43 1 
252 4 303 1 1 1 125 1 50 1 131 1 134 1 93 1 94 2 262 9 138 19 98 6 227 1 56 3 267 3 191 2 102 1 150 3 284 3 200 1 26 2 316 3 27 1 291 3 321 1 65 3 163 1 293 1 243 1 111 1 34 10 169 1 115 1 
252 5 303 1 1 1 125 1 50 1 131 1 134 1 93 1 94 1 262 10 138 17 98 6 227 1 56 3 267 3 191 2 102 1 150 3 284 3 200 1 26 2 316 2 291 3 27 1 321 1 65 3 163 1 293 2 243 1 111 1 34 7 169 1 115 1 
252 2 303 1 1 1 125 1 50 1 131 1 134 1 93 1 262 4 138 8 98 2 56 1 267 1 102 1 150 1 284 2 316 1 291 1 65 1 321 1 243 1 34 4 115 1 
252 2 125 1 50 1 94 2 262 6 138 12 98 2 56 1 267 1 191 2 150 1 284 1 200 1 26 2 316 2 291 1 27 1 321 1 65 2 293 1 243 1 111 1 34 6 169 1 115 1 
252 5 303 1 1 1 125 1 50 1 131 1 134 1 93 1 94 1 262 10 138 18 98 8 227 1 56 4 267 4 191 2 102 1 150 4 284 3 200 1 26 2 316 2 27 1 291 4 321 1 65 3 163 2 293 2 243 1 111 1 34 8 169 1 115 1 
252 6 125 1 50 1 94 2 262 9 138 16 98 8 56 4 267 4 191 3 150 4 314 1 284 3 200 1 26 3 316 2 27 1 291 4 321 1 65 3 163 2 293 3 243 1 111 1 34 7 169 1 115 1 
252 6 1 3 284 3 316 1 131 1 65 1 134 3 93 2 293 3 262 3 138 7 34 4 102 1 
252 4 303 1 1 1 125 1 50 1 131 1 134 1 93 1 94 1 262 10 138 18 98 8 56 4 267 4 191 2 102 1 150 4 314 1 284 3 200 1 26 2 316 2 27 1 291 4 321 1 65 3 163 2 293 1 243 1 111 1 34 8 169 1 115 1 
186 1 87 1 113 1 247 1 275 1 194 1 164 1 
198 1 87 1 92 1 164 1 30 1 186 1 37 1 113 1 189 1 247 1 275 1 194 1 
226 1 119 1 108 1 228 1 230 1 287 1 329 1 114 1 312 1 299 1 212 1 
119 1 287 1 87 2 186 1 73 1 263 1 97 1 228 1 230 1 329 1 247 1 312 1 299 1 212 1 274 1 20 1 194 2 22 1 
124 1 85 1 287 2 87 2 5 1 186 2 73 1 263 1 74 1 97 2 228 1 230 1 209 1 329 1 144 1 247 1 312 3 299 1 212 1 274 1 20 2 194 2 22 1 
85 1 124 1 87 2 5 1 186 2 263 1 97 2 230 1 228 1 144 1 312 3 194 2 20 2 22 1 287 2 296 1 73 1 74 1 209 1 76 1 329 2 247 1 299 2 212 2 
119 1 85 1 124 1 90 1 140 1 97 1 230 1 228 1 232 1 59 1 312 4 287 1 317 2 64 1 318 1 209 1 76 1 329 3 77 1 299 3 212 3 300 2 175 1 
119 1 124 1 85 1 287 1 317 2 318 1 64 1 183 1 97 1 228 1 230 1 209 1 76 1 232 1 329 3 59 1 77 1 312 4 299 3 300 2 212 3 175 1 
228 1 230 1 329 1 299 1 212 1 104 1 
84 1 119 2 62 1 287 2 182 1 305 1 260 1 160 1 6 1 97 1 327 1 230 2 228 3 329 6 331 1 312 3 299 7 212 7 104 1 149 1 278 1 
252 2 303 1 1 1 4 1 87 2 131 1 134 1 93 1 262 3 186 1 136 1 138 6 263 1 97 1 98 4 228 1 230 1 267 2 56 2 192 1 312 1 102 1 276 1 274 1 194 2 20 1 278 1 150 2 22 1 282 1 151 1 284 2 107 1 287 1 316 1 291 2 65 1 73 1 34 3 328 2 329 1 246 1 247 2 79 2 299 1 211 1 212 1 
119 1 120 1 121 1 222 1 183 1 13 2 232 1 59 2 190 1 147 2 312 2 285 1 317 3 318 1 64 1 294 1 323 1 325 2 326 1 329 1 36 1 77 1 299 1 212 1 301 2 300 3 175 1 118 1 
287 1 182 1 64 1 97 1 208 1 230 1 228 2 329 2 312 2 299 2 212 2 278 1 104 1 
119 1 108 1 287 1 228 1 230 1 76 1 329 4 114 1 312 1 299 4 41 1 212 4 278 1 
152 1 287 1 6 1 12 1 97 1 327 1 230 1 228 2 209 1 329 2 38 1 312 1 299 2 212 2 
119 1 242 1 239 1 228 1 230 1 329 1 272 1 299 1 212 1 203 1 
84 1 228 1 230 1 62 1 287 1 329 2 221 1 312 1 299 2 212 2 278 1 
119 1 108 1 62 1 287 2 260 1 230 2 228 2 209 1 329 4 114 1 312 3 299 5 41 1 212 5 278 1 149 1 
119 1 108 1 62 1 287 2 230 2 228 2 209 1 329 4 330 1 114 1 312 3 299 5 41 1 212 5 278 1 149 1 
119 1 287 1 87 2 186 1 296 1 73 1 263 1 97 1 228 1 230 1 329 1 247 1 312 1 299 1 212 1 20 1 194 2 22 1 
287 1 182 1 160 1 6 1 97 1 327 1 230 1 228 2 209 1 329 1 312 1 299 1 212 1 
55 1 33 1 155 1 247 1 40 1 
285 1 155 1 128 1 317 2 318 1 5 1 132 1 165 1 264 1 74 1 55 2 33 2 232 1 144 1 77 1 101 1 247 1 40 2 300 2 
197 1 240 1 155 1 87 1 186 1 187 1 55 1 40 1 194 1 
264 1 155 1 128 1 
226 1 142 1 157 1 67 1 
207 1 142 1 256 1 157 1 234 1 67 1 117 1 
123 1 234 1 103 1 
256 1 315 1 157 1 67 1 207 1 229 1 16 1 142 1 333 1 234 3 80 2 117 3 
214 1 207 1 17 1 142 1 256 1 157 1 234 2 67 1 117 2 
239 1 256 1 154 1 290 1 67 1 207 1 242 1 333 1 234 1 81 1 117 1 
207 1 142 1 256 1 333 1 234 1 67 1 117 1 
207 1 142 2 256 1 157 1 333 1 234 1 117 1 
122 1 256 2 67 1 139 1 207 2 298 1 142 1 333 1 234 2 117 2 
256 1 157 1 288 1 290 1 67 2 207 1 17 2 142 1 270 1 333 1 234 3 117 3 83 1 
239 2 256 1 157 1 67 1 203 1 96 1 207 1 242 1 17 1 142 1 333 1 234 2 148 1 81 1 117 2 
214 1 256 2 157 1 290 1 67 2 207 2 17 2 142 1 145 1 270 1 333 1 234 4 117 4 
207 1 142 1 256 1 157 1 333 1 234 1 67 1 117 1 
106 1 256 1 157 2 290 1 67 3 207 1 16 1 229 1 17 2 142 2 270 1 234 4 80 1 117 4 
256 1 157 1 258 1 306 1 67 1 207 1 265 1 17 1 142 1 333 1 234 2 117 2 
256 1 157 1 67 1 207 1 229 1 16 2 142 1 271 1 333 1 234 3 80 2 117 3 
238 1 0 1 313 2 67 2 
207 1 256 1 333 1 234 1 235 1 117 1 
207 1 17 1 142 1 256 1 157 1 333 1 234 2 67 1 117 2 83 1 
205 1 
207 1 142 1 256 1 157 1 333 1 234 1 67 1 117 1 
207 1 17 1 142 1 256 1 157 1 333 1 234 3 67 1 80 1 117 3 83 1 
17 1 270 1 290 1 234 1 67 1 117 1 
142 1 67 1 

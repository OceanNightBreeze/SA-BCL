#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 374 (36,106) (36,106) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 374 (36,106) (36,106) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 374 (36,106) (36,106) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 374 (36,106) (36,106) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 374 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 374 92 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 374 92 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (40,329) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (104,262) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (40,329) 241 240 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (40,329) 241 182 (42,178) (42,178) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3602 | return null
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String; | RETURN | 4317 | return null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
153 1 300 1 90 1 156 2 185 6 56 1 72 4 157 1 236 2 280 9 360 2 36 1 73 2 130 1 169 2 316 1 195 9 368 2 106 1 267 1 374 1 345 2 377 4 226 3 64 1 46 1 
153 1 300 1 90 1 156 2 185 6 56 1 72 4 157 1 236 2 280 9 360 2 36 1 73 2 130 1 169 2 316 1 195 9 368 2 106 1 267 1 374 1 345 2 377 4 226 3 64 1 46 1 
153 1 300 1 90 1 156 2 185 6 56 1 72 4 157 1 236 2 280 9 360 2 36 1 73 2 130 1 169 2 316 1 195 9 368 2 106 1 267 1 374 1 345 2 377 4 226 3 64 1 46 1 
153 1 90 1 156 2 185 4 56 1 72 3 157 1 236 2 280 7 360 1 36 1 73 2 130 1 169 2 316 1 195 7 368 2 106 1 267 1 374 1 345 2 377 3 226 2 64 1 46 1 
73 1 130 1 300 1 169 1 368 1 195 4 156 1 374 1 185 3 72 2 157 1 377 2 345 1 226 1 280 4 360 2 
73 1 130 1 299 1 169 1 90 1 368 1 195 2 156 1 57 1 71 1 377 1 197 1 236 1 280 2 33 1 46 1 
130 1 316 1 368 2 195 3 156 2 185 1 71 1 72 1 377 2 197 1 236 1 226 1 280 3 
73 1 153 1 130 1 300 1 169 1 92 1 316 1 80 1 368 2 195 9 374 1 156 2 185 7 56 1 72 4 345 1 157 1 377 4 236 1 226 3 280 9 360 2 
73 1 153 1 130 1 300 1 169 1 92 1 316 1 80 1 368 2 195 9 374 1 156 2 185 7 56 1 72 4 345 1 157 1 377 4 236 1 226 3 280 9 360 2 
48 1 5 1 26 1 
48 1 312 2 281 1 
261 2 66 2 16 2 291 2 359 2 172 2 227 1 141 1 
228 1 202 1 135 1 66 2 180 1 23 1 49 1 155 1 275 1 252 2 359 2 254 1 189 1 159 2 141 1 35 2 361 1 128 1 283 2 261 2 286 1 363 1 364 1 173 2 172 2 370 1 266 1 196 1 16 2 291 2 84 1 227 1 323 1 
261 1 348 1 66 1 196 1 16 1 291 1 359 1 255 1 172 1 141 1 
66 1 48 1 78 1 89 1 338 1 172 1 367 1 68 1 196 1 16 1 5 1 235 1 256 1 160 1 
261 1 66 1 48 1 78 1 89 2 172 1 367 1 68 2 196 1 16 1 5 1 291 1 359 1 235 1 160 1 
249 1 231 1 89 1 50 1 68 1 
48 1 220 1 249 1 5 1 231 1 122 1 89 2 68 2 
231 1 89 1 68 1 
348 1 261 1 66 1 249 1 89 1 172 1 68 1 27 1 196 1 16 1 291 1 359 1 255 1 141 1 
48 1 
341 1 48 1 249 1 5 1 231 1 122 1 89 2 68 2 
259 2 337 1 48 1 249 2 75 2 231 2 328 1 89 5 59 1 330 2 68 5 55 1 5 1 122 1 62 1 124 1 63 1 282 1 314 1 
227 1 26 1 
261 1 66 2 273 1 366 1 172 2 16 2 291 1 359 1 227 2 
241 1 262 1 40 1 
228 1 364 1 155 1 252 1 196 1 375 1 35 1 227 1 361 1 283 1 
228 1 66 1 364 1 116 1 40 1 172 1 155 1 252 1 289 1 16 1 291 1 359 1 35 1 283 1 
229 1 261 1 66 5 366 1 116 1 172 5 82 1 121 1 289 2 16 5 291 4 359 4 256 1 227 1 
66 2 196 1 16 2 291 2 359 2 255 1 172 2 322 1 
261 1 66 3 289 1 16 3 291 3 359 3 172 3 227 1 
66 1 196 1 16 1 291 1 359 1 255 1 172 1 
261 1 66 1 196 1 273 1 16 1 291 1 359 1 366 1 172 1 
228 1 202 1 135 1 66 3 180 1 49 1 89 1 116 1 155 1 68 1 252 1 359 3 189 1 235 1 159 2 160 1 141 1 35 1 128 1 283 1 261 2 363 1 78 1 364 1 366 1 173 1 172 3 367 1 264 1 370 1 83 1 196 1 16 3 289 1 291 3 84 1 227 1 323 1 
66 2 121 1 16 2 289 1 291 1 359 1 256 1 172 2 227 1 
261 1 66 3 48 1 78 1 89 1 366 1 116 1 172 3 367 1 68 1 264 1 147 1 196 1 289 2 16 3 291 3 359 3 235 1 160 1 
261 1 66 2 262 1 366 1 172 2 40 1 289 1 16 2 291 2 359 2 
228 1 364 1 155 1 252 1 196 1 35 1 227 1 283 1 361 1 
347 1 66 1 111 1 364 1 172 1 251 1 25 1 222 1 252 1 318 1 321 1 218 1 227 1 35 1 283 1 
135 1 202 2 247 1 88 1 180 1 329 1 301 1 276 1 189 1 159 2 142 1 74 1 286 2 262 2 173 4 40 2 104 1 370 1 265 1 241 2 17 1 84 1 152 1 323 1 
66 1 196 1 16 1 291 1 359 1 367 1 172 1 322 1 
39 1 333 1 
39 1 333 1 
246 1 210 1 
246 1 210 1 
246 1 210 1 
357 1 39 1 333 1 
357 1 39 1 333 1 
357 1 39 1 333 1 
224 1 39 1 333 1 
246 1 210 1 10 1 39 2 79 1 333 2 
136 1 39 1 333 1 
136 1 39 1 333 1 
136 1 39 1 333 1 
66 2 113 1 298 1 115 1 89 1 118 1 68 1 333 1 186 1 359 2 158 1 129 1 163 1 39 1 172 2 11 1 288 1 342 1 224 1 16 2 291 2 19 1 200 1 227 1 
285 1 129 2 48 1 10 1 39 2 89 2 303 1 205 1 68 2 11 1 333 2 342 2 270 1 19 3 109 2 158 2 217 1 200 2 313 1 
73 1 169 1 345 1 
73 1 299 1 169 1 
162 1 277 1 299 1 345 2 169 3 54 1 
150 1 277 1 299 1 345 1 169 2 54 1 
277 2 299 1 345 1 169 2 54 1 
247 1 248 1 249 4 48 2 113 1 231 1 232 1 89 5 118 1 330 1 51 1 68 5 55 3 186 1 122 1 5 1 312 3 281 1 282 2 142 1 259 1 284 1 75 1 146 1 194 2 339 1 265 1 320 1 63 1 242 2 198 2 152 1 
47 1 325 1 247 3 248 3 249 7 48 5 231 6 89 9 50 5 330 2 68 9 55 8 184 5 186 4 5 1 122 1 6 1 312 9 281 3 282 6 142 3 259 2 284 2 75 2 103 1 194 6 131 1 339 2 263 1 59 1 265 3 320 1 63 1 198 6 152 3 
247 1 248 1 48 3 249 2 232 1 89 3 51 1 330 1 68 3 55 3 186 1 5 1 312 4 281 2 282 2 142 1 259 1 284 1 75 1 194 2 339 1 59 1 265 1 242 1 198 2 152 1 
247 2 248 2 48 4 249 3 89 4 232 1 330 1 51 1 68 4 55 5 186 2 5 1 6 1 312 7 281 3 282 4 142 2 259 1 284 1 75 1 103 1 194 4 339 1 263 1 59 1 265 2 242 2 198 4 152 2 
245 1 347 1 26 1 
347 1 199 1 
145 1 
347 1 218 1 321 1 
347 1 183 1 
347 1 218 1 
245 2 347 3 218 1 321 1 369 1 244 1 
202 3 178 1 247 1 74 3 37 1 38 1 230 1 286 4 301 2 182 2 2 1 173 7 107 1 356 1 42 1 140 1 152 1 
202 3 178 1 247 1 74 3 37 1 38 1 230 1 286 4 301 2 182 2 2 1 173 7 107 1 356 1 42 1 140 1 152 1 
202 3 178 1 247 1 74 3 37 1 38 1 230 1 286 4 301 2 182 2 2 1 173 7 107 1 356 1 42 1 140 1 152 1 346 1 
178 1 135 1 202 15 294 1 247 4 87 1 248 3 230 2 295 1 180 1 301 5 182 3 2 5 93 4 356 2 69 1 189 1 140 2 159 2 142 3 336 3 37 1 74 10 38 1 286 16 173 31 370 1 265 3 107 2 42 1 152 4 85 1 272 1 21 1 
178 1 202 4 135 2 247 1 74 4 38 1 230 1 286 5 180 2 165 1 301 3 182 2 2 1 173 9 370 2 107 1 356 1 42 1 189 2 140 1 20 1 152 1 159 4 21 1 
299 1 25 1 28 1 252 1 185 1 156 1 71 1 188 1 95 1 215 1 236 1 280 2 335 1 35 1 283 1 73 1 191 1 162 1 130 1 76 1 365 1 169 2 12 1 195 2 368 1 318 1 377 1 345 1 197 1 18 1 
296 1 299 1 117 1 25 1 28 1 252 1 156 1 185 2 71 1 188 1 95 1 236 1 280 3 335 1 35 1 283 1 73 1 162 1 191 1 76 1 169 2 12 1 195 3 368 1 318 1 14 1 377 1 345 1 197 1 18 1 
296 1 299 1 25 1 28 1 252 1 185 2 71 1 188 1 236 1 280 2 335 1 35 1 283 1 73 1 162 1 76 1 169 2 12 1 195 2 318 1 14 1 377 1 345 1 197 1 18 1 
347 1 9 1 364 1 171 1 117 1 12 2 368 1 195 1 25 1 353 1 318 1 252 1 156 1 4 1 188 2 58 1 236 2 218 1 110 1 280 1 35 1 335 2 283 1 
73 1 162 1 191 1 130 1 76 1 296 1 299 1 169 2 365 1 368 1 195 1 12 1 25 1 28 1 318 1 252 1 156 1 95 1 188 1 345 1 18 1 236 1 280 1 35 1 335 1 283 1 
327 1 
48 2 231 6 274 1 89 5 330 1 52 2 332 1 138 2 55 2 233 2 5 1 235 1 58 1 97 2 334 2 281 2 282 2 283 2 284 1 238 1 338 1 60 1 196 1 16 1 63 1 110 1 347 1 66 1 350 1 250 1 68 5 25 1 306 1 252 2 119 2 358 1 122 3 256 1 312 2 218 1 160 1 34 1 35 2 161 1 259 1 75 1 78 1 168 2 364 2 172 1 367 1 318 1 43 1 379 1 133 4 
66 1 231 2 250 1 89 3 68 3 52 1 332 1 122 1 235 1 256 1 160 1 161 1 78 1 238 1 338 1 172 1 367 1 60 1 341 1 196 1 16 1 133 2 
66 1 48 1 231 1 250 1 89 3 68 3 332 1 5 1 122 1 235 1 256 1 97 1 160 1 161 1 78 1 238 1 338 1 172 1 367 1 60 1 341 1 196 1 16 1 133 3 
66 1 48 1 231 2 250 1 89 3 68 3 52 1 332 1 122 1 5 1 235 1 256 1 97 1 160 1 161 1 78 1 238 1 168 1 338 1 172 1 367 1 60 1 341 1 196 1 16 1 133 3 
326 1 48 1 231 7 89 5 330 1 52 4 332 1 138 2 55 1 233 2 5 1 235 1 97 2 334 2 281 2 141 1 282 1 238 1 338 1 60 1 148 1 341 1 196 2 16 2 108 1 291 1 63 1 348 1 66 2 250 1 68 5 27 1 119 2 358 1 122 3 359 1 255 1 256 1 160 1 161 1 259 1 261 1 75 1 78 1 164 1 168 4 367 1 172 2 43 1 133 4 134 1 
48 2 231 4 89 4 330 1 52 2 332 1 138 2 55 1 233 2 5 1 235 1 97 2 334 2 281 2 282 1 238 1 338 1 60 1 196 1 16 1 63 1 66 1 250 1 68 4 119 2 358 1 122 2 256 1 160 1 312 2 161 1 259 1 75 1 78 1 168 2 367 1 172 1 43 1 379 1 133 4 
48 1 231 4 89 4 330 1 52 2 332 1 138 2 55 1 233 2 5 1 235 1 97 2 334 2 281 2 141 1 282 1 238 1 338 1 60 1 196 2 108 1 16 2 291 1 63 1 348 1 66 2 250 1 68 4 27 1 119 2 358 1 122 2 359 1 255 1 256 1 160 1 161 1 259 1 261 1 75 1 78 1 164 1 168 2 367 1 172 2 43 1 133 4 134 1 
48 1 231 4 89 4 330 1 52 2 332 1 138 2 55 1 233 2 5 1 235 1 97 2 334 2 281 2 141 1 282 1 238 1 338 1 60 1 196 2 108 1 16 2 291 1 63 1 348 1 66 2 250 1 68 4 27 1 119 2 358 1 122 2 359 1 255 1 256 1 160 1 161 1 259 1 261 1 75 1 78 1 164 1 168 2 367 1 172 2 43 1 133 4 134 1 
48 1 231 4 89 4 330 1 52 2 332 1 138 2 55 1 5 1 235 1 97 2 141 1 282 1 193 2 238 1 338 1 60 1 196 2 16 2 291 1 344 1 63 1 348 1 66 2 250 1 68 4 27 1 119 2 253 1 211 2 122 2 359 1 255 1 256 1 216 1 160 1 312 2 161 1 259 1 261 1 75 1 78 1 164 1 168 2 367 1 172 2 43 1 133 4 
48 1 231 5 89 4 330 1 52 3 332 1 138 2 55 1 233 2 5 1 235 1 97 3 334 2 281 2 141 1 282 1 238 1 338 1 60 1 148 1 196 2 16 2 108 1 291 1 63 1 348 1 66 2 250 1 68 4 27 1 119 2 358 1 122 2 359 1 255 1 256 1 160 1 161 1 259 1 261 1 75 1 78 1 164 1 168 3 367 1 172 2 43 1 133 5 134 1 
48 1 231 5 89 4 330 1 52 3 332 1 138 2 55 1 233 2 5 1 235 1 97 3 334 2 281 2 141 1 282 1 238 1 338 1 60 1 148 1 196 2 16 2 108 1 291 1 63 1 348 1 66 2 250 1 68 4 27 1 119 2 358 1 122 2 359 1 255 1 256 1 160 1 161 1 259 1 261 1 75 1 78 1 164 1 168 3 367 1 172 2 43 1 133 5 134 1 
66 1 48 1 231 4 250 1 89 4 330 1 68 4 52 2 332 1 138 2 55 1 119 2 211 2 253 1 5 1 122 2 235 1 256 1 97 2 312 2 160 1 282 1 161 1 259 1 193 2 75 1 238 1 78 1 168 2 338 1 172 1 367 1 60 1 43 1 196 1 16 1 63 1 379 1 133 4 
178 1 135 1 202 3 247 1 230 1 180 1 301 2 182 1 26 1 356 1 276 1 189 1 159 2 74 2 38 1 286 3 262 1 40 1 173 6 370 1 42 1 241 1 84 1 152 1 227 2 323 1 
202 6 135 2 247 2 248 2 295 1 180 2 301 1 2 1 331 1 275 1 93 3 189 2 159 4 142 2 336 3 74 2 363 1 286 8 262 4 173 14 40 11 13 1 370 2 265 1 149 1 373 1 241 11 84 1 176 1 152 1 227 1 272 1 323 2 
228 1 135 1 202 1 66 1 180 1 114 1 116 1 351 1 155 1 275 1 252 1 359 1 189 1 159 2 35 1 283 1 363 1 286 1 364 1 262 1 172 1 173 2 370 1 373 1 375 1 16 1 289 1 291 1 84 1 227 1 45 1 323 1 
228 1 135 2 202 4 247 1 248 1 66 1 67 1 137 1 180 2 301 1 49 1 116 1 155 1 252 1 120 1 359 1 189 2 159 4 35 1 142 1 283 1 260 1 74 1 286 3 363 1 262 3 364 1 40 3 173 7 172 1 370 2 265 1 373 1 240 1 241 3 16 1 289 1 291 1 84 2 152 1 323 2 
347 3 135 2 202 1 66 1 296 1 0 1 180 2 25 2 275 1 307 1 252 8 276 1 187 1 359 1 189 2 215 1 58 1 159 4 218 2 35 8 283 7 286 1 363 1 364 2 172 1 173 2 370 2 266 2 223 1 318 2 16 1 289 1 291 1 84 2 292 1 110 1 86 1 65 1 323 2 
135 1 202 2 247 1 66 1 248 1 180 1 301 1 359 1 189 1 159 2 190 1 142 1 261 1 74 1 286 1 262 1 366 1 40 1 172 1 173 3 370 1 265 1 373 1 241 1 16 1 291 1 84 1 152 1 323 1 
135 1 247 1 74 1 286 2 180 1 262 1 2 1 40 1 173 2 370 1 241 1 276 1 17 1 84 1 189 1 159 2 323 1 142 1 
135 1 202 2 74 1 88 1 180 1 262 1 301 1 40 1 173 2 370 1 265 1 241 1 276 1 84 1 189 1 152 1 159 2 323 1 
135 1 202 2 247 1 248 1 180 1 301 1 2 1 276 1 189 1 159 2 142 1 74 2 286 2 262 2 173 4 40 2 370 1 265 1 241 2 84 1 152 1 323 1 
135 1 247 1 74 1 286 2 180 1 262 1 2 1 40 1 173 2 370 1 241 1 187 1 17 1 84 1 189 1 159 2 323 1 142 1 
135 1 202 2 74 1 88 1 180 1 262 1 301 1 40 1 173 2 370 1 265 1 241 1 187 1 84 1 189 1 152 1 159 2 323 1 
135 1 202 2 247 1 248 1 180 1 301 1 2 1 187 1 189 1 159 2 142 1 74 2 286 2 262 2 173 4 40 2 370 1 265 1 241 2 84 1 152 1 323 1 
135 1 202 2 247 1 248 1 180 1 301 1 2 1 189 1 159 2 142 1 74 2 286 2 262 2 173 4 40 2 370 1 265 1 241 2 84 1 152 1 323 1 
228 1 135 1 202 1 180 1 49 1 155 1 275 1 252 1 189 1 159 2 35 1 283 1 361 1 286 1 363 1 364 1 173 2 370 1 196 1 84 1 227 1 323 1 
347 1 66 1 111 1 364 1 172 1 251 1 25 1 222 1 252 1 318 1 212 1 321 1 218 1 35 1 283 1 
135 1 202 2 247 1 248 1 180 1 301 1 2 1 189 1 159 2 142 1 74 2 286 2 262 2 173 4 40 2 370 1 265 1 373 1 241 2 84 1 152 1 323 1 
228 1 135 1 202 2 247 1 248 1 180 1 301 1 49 1 155 1 252 1 120 1 189 1 215 1 159 2 35 1 283 1 142 1 74 1 286 1 262 1 40 1 173 3 370 1 265 1 241 1 84 1 152 1 323 1 
202 1 135 1 247 1 66 1 248 1 180 1 2 1 359 1 189 1 159 2 142 1 261 1 74 1 286 2 262 1 366 1 172 1 173 3 40 1 370 1 105 1 265 1 373 1 241 1 16 1 291 1 84 1 152 1 323 1 
135 2 202 10 247 3 248 3 295 1 297 2 180 2 91 1 301 3 2 3 352 1 354 1 93 2 189 2 125 1 159 4 101 1 142 3 8 2 336 1 74 6 286 9 173 19 174 1 370 2 265 3 20 1 152 3 201 1 272 1 
202 12 135 3 247 3 203 1 248 3 295 2 297 1 180 3 301 1 2 1 352 2 305 1 354 2 93 2 139 1 189 3 125 1 214 1 159 6 99 1 142 3 8 4 336 2 74 2 286 14 166 1 173 26 174 1 370 3 265 2 20 1 152 2 201 1 21 2 
135 3 178 1 230 1 180 3 91 1 182 1 2 4 93 4 139 1 189 3 99 1 142 4 8 4 336 3 286 20 290 1 20 1 152 5 201 1 21 1 202 21 247 5 248 4 203 1 295 3 297 1 301 3 352 1 305 1 354 2 356 1 125 1 214 1 159 6 74 7 38 1 166 1 173 41 174 1 370 3 265 4 42 1 272 1 
135 4 178 1 230 1 180 4 91 1 182 1 2 3 93 4 139 1 189 4 99 1 142 4 8 4 336 3 286 20 290 1 20 1 152 4 201 1 21 2 202 18 247 5 248 4 203 1 295 3 297 1 301 4 352 1 305 1 354 2 356 1 125 1 214 1 159 8 74 7 38 1 166 1 173 38 174 1 370 4 265 3 42 1 272 1 
178 1 135 2 202 25 247 8 203 1 248 7 230 1 295 2 297 1 180 2 301 7 182 1 331 2 2 7 352 1 305 1 354 1 93 4 356 1 139 1 189 2 214 1 125 1 159 4 99 1 142 7 8 4 336 4 74 14 38 1 286 27 166 1 173 52 174 1 370 2 265 7 42 1 20 1 152 8 201 1 272 2 21 1 
285 1 129 1 342 1 10 1 39 1 287 1 158 1 200 1 313 1 333 1 
224 1 288 1 
129 1 342 1 132 1 154 1 39 1 3 1 158 1 200 1 333 1 
357 1 278 1 
136 1 79 1 239 1 
285 1 129 1 48 1 10 1 39 1 89 1 303 1 205 1 11 1 68 1 333 1 342 1 19 2 109 1 158 1 217 1 200 1 313 1 
285 1 129 1 48 1 10 1 39 1 89 1 303 1 205 1 11 1 68 1 333 1 342 1 19 2 109 1 158 1 217 1 200 1 313 1 
285 1 129 1 48 1 10 1 39 1 89 1 303 1 205 1 11 1 68 1 333 1 342 1 19 2 109 1 158 1 217 1 200 1 313 1 
357 1 278 1 79 1 
357 1 278 1 79 1 
136 1 239 1 
136 1 79 1 239 1 
298 1 115 1 
66 2 249 1 113 1 298 1 115 1 89 1 304 1 118 1 68 1 333 1 186 1 359 2 217 1 158 1 129 1 163 1 39 1 172 2 288 1 342 1 224 1 16 2 291 2 109 1 19 1 200 1 227 1 
347 1 135 1 202 1 66 2 180 1 1 1 25 1 275 1 252 2 189 1 257 1 218 1 159 2 35 2 283 2 286 1 363 1 170 1 172 2 173 2 340 1 370 1 266 2 223 1 373 1 318 1 376 1 16 2 84 1 65 1 323 1 
73 1 143 1 162 1 296 1 76 1 299 1 169 2 12 1 25 1 318 1 252 2 310 1 123 1 95 1 345 1 215 1 18 1 35 2 283 2 
73 1 162 1 296 1 76 1 299 1 169 2 12 1 25 1 317 1 252 1 318 1 123 1 95 1 345 1 18 1 35 1 283 1 
347 1 143 1 364 1 171 1 12 1 25 1 318 1 252 1 208 1 58 1 218 1 110 1 35 1 283 1 
73 1 143 1 162 1 296 1 76 1 299 1 169 2 12 1 25 1 252 1 318 1 310 1 123 1 95 1 345 1 18 1 35 1 283 1 
31 1 
48 1 5 1 328 1 282 1 314 1 26 1 55 1 
48 2 231 1 89 1 330 1 68 1 55 1 233 1 358 1 122 1 5 1 334 1 312 1 281 1 282 1 259 1 75 1 63 1 
259 1 347 2 75 1 364 1 330 1 24 1 25 2 207 1 318 1 252 1 63 1 199 1 218 1 321 1 35 1 244 1 283 1 
247 2 203 1 248 2 295 1 48 5 231 1 181 1 89 1 302 1 330 2 68 1 305 1 55 8 93 1 94 2 139 1 122 1 5 2 214 1 312 6 34 1 281 3 282 5 142 2 259 2 284 1 336 1 75 2 166 1 194 5 265 2 63 2 198 5 152 2 243 1 
247 2 348 1 66 1 230 1 89 1 330 1 68 1 27 1 55 2 94 2 356 1 359 1 255 1 282 2 141 1 259 1 261 1 75 1 38 1 172 1 196 1 108 1 16 1 291 1 63 1 152 1 243 1 177 1 
259 1 75 1 48 1 328 1 330 1 55 1 5 1 63 1 314 1 282 1 
247 2 248 2 48 5 194 5 265 2 55 5 240 1 94 2 198 5 152 2 243 1 312 10 281 5 282 5 142 2 
48 1 5 1 231 1 122 1 89 1 68 1 
324 2 347 1 22 1 274 1 231 4 89 3 330 2 68 3 25 1 306 1 55 2 252 4 122 2 30 1 58 1 218 1 34 2 35 4 282 2 283 4 259 2 284 2 75 2 364 2 59 1 318 1 268 1 63 1 110 1 
228 1 135 1 202 1 66 2 180 1 49 1 155 1 252 1 359 2 189 1 159 2 35 1 141 1 283 1 128 1 261 2 363 1 364 1 173 1 172 2 370 1 16 2 291 2 84 1 227 1 323 1 
259 1 284 1 75 1 48 4 194 2 182 1 330 1 55 1 5 2 63 1 198 2 312 4 281 2 34 1 282 2 
129 1 179 1 200 1 
129 1 179 1 200 1 
129 1 179 1 200 1 
285 1 129 1 298 1 41 1 200 1 
129 1 269 1 200 1 
129 1 269 1 200 1 
129 1 269 1 200 1 
129 1 200 1 
39 1 333 1 
202 4 135 2 178 1 247 1 74 3 38 1 230 1 286 4 180 2 301 2 182 1 173 8 2 1 370 2 42 1 356 1 189 2 152 1 159 4 21 1 
202 3 178 1 247 1 74 2 230 1 38 1 286 3 301 2 182 1 173 6 26 1 42 1 356 1 152 1 
202 2 135 1 247 1 74 2 248 1 286 2 180 1 301 1 173 4 2 1 370 1 265 1 234 1 189 1 152 1 159 2 142 1 
202 4 336 1 247 1 248 1 74 2 295 1 286 3 301 1 173 7 2 1 265 1 93 2 152 1 272 1 142 1 
178 1 202 12 135 2 247 3 248 2 230 2 180 2 301 5 182 1 2 4 331 1 93 2 356 2 189 2 32 1 159 4 142 2 336 2 74 9 38 1 286 11 173 23 370 2 265 2 42 1 176 1 152 3 272 1 21 2 
202 1 93 1 173 1 
336 1 286 1 173 1 
135 1 202 3 247 1 248 1 74 3 286 3 180 1 301 2 173 6 2 1 370 1 265 1 240 1 234 1 189 1 152 1 159 2 142 1 
202 6 135 1 247 2 203 1 248 2 295 1 180 1 301 1 2 1 305 1 93 1 139 1 189 1 214 1 159 2 142 2 336 1 74 2 286 6 166 1 173 12 370 1 265 2 20 1 152 2 
202 3 247 1 74 2 38 1 230 1 286 3 301 1 173 6 2 1 356 1 152 1 
178 1 202 2 135 1 74 2 230 1 286 1 180 1 301 1 2 1 173 3 370 1 356 1 42 1 189 1 32 1 159 2 21 1 
135 1 202 5 247 2 74 5 230 2 38 1 286 5 180 1 301 3 2 2 173 10 370 1 356 2 189 1 20 1 152 2 159 2 177 1 
135 1 247 1 74 1 286 2 180 1 173 2 2 1 370 1 189 1 20 1 159 2 142 1 
202 2 135 1 247 1 74 2 248 1 286 2 180 1 301 1 173 4 2 1 370 1 265 1 189 1 20 1 152 1 159 2 142 1 
202 2 135 3 74 2 230 1 286 1 180 3 91 1 301 1 173 3 2 1 370 3 356 1 189 3 32 1 20 1 159 6 21 1 
178 1 202 18 135 5 87 1 247 5 248 3 230 3 295 1 180 5 91 1 301 7 182 1 2 5 93 4 356 3 69 1 234 1 189 5 32 1 159 10 142 3 336 3 74 12 38 2 286 16 173 34 370 5 265 3 42 1 20 1 152 5 85 1 272 1 21 2 
178 1 135 1 202 4 336 1 247 1 74 2 203 1 38 1 230 1 295 1 286 4 180 1 301 2 182 1 173 8 370 1 93 1 356 1 42 1 189 1 20 1 152 1 159 2 
178 1 202 5 135 2 247 2 203 1 248 1 230 1 295 1 180 2 301 2 182 1 2 1 93 2 356 1 234 1 189 2 159 4 142 1 336 1 74 3 38 1 286 6 173 11 370 2 42 1 20 1 152 1 272 1 
178 1 202 10 135 3 247 3 203 1 248 2 230 1 295 1 180 3 301 3 182 1 2 1 305 1 93 1 356 1 139 1 234 1 189 3 214 1 159 6 142 2 336 1 74 4 38 1 286 9 166 1 173 19 370 3 265 2 42 1 20 1 152 3 21 1 
178 1 202 7 135 3 247 3 203 1 248 2 230 1 295 1 180 3 301 3 182 1 2 2 305 1 93 1 356 1 139 1 234 1 189 3 214 1 159 6 142 2 336 1 74 5 38 1 286 10 166 1 173 17 370 3 265 1 42 1 20 1 152 2 21 1 
178 1 135 1 202 4 336 1 247 1 74 2 203 1 38 1 230 1 295 1 286 4 180 1 301 2 182 1 173 8 370 1 93 1 356 1 42 1 189 1 20 1 152 1 159 2 
202 6 135 1 247 2 203 1 248 2 295 1 180 1 301 1 2 1 305 1 93 1 139 1 189 1 214 1 159 2 142 2 336 1 74 2 286 6 166 1 173 12 370 1 265 2 20 1 152 2 
178 1 202 8 135 4 247 3 203 1 248 2 230 1 295 1 180 4 301 3 182 1 2 2 305 1 93 1 356 1 139 1 234 1 189 4 214 1 159 8 142 2 336 1 74 5 38 1 286 10 166 1 173 18 370 4 265 1 42 1 20 1 152 2 21 2 
202 7 135 4 247 3 203 1 248 3 295 1 180 4 91 1 301 3 2 3 305 1 93 1 139 1 189 4 214 1 159 8 142 3 336 1 74 6 286 9 166 1 173 16 370 4 265 2 20 1 152 2 21 2 
202 4 178 2 247 1 74 6 230 3 38 1 286 3 301 3 173 7 2 3 42 1 356 3 152 1 
178 1 202 8 135 4 247 3 203 1 248 2 230 1 295 1 180 4 91 1 301 3 182 1 2 1 305 1 93 1 356 1 139 1 189 4 214 1 159 8 142 2 336 1 74 4 38 1 286 10 166 1 173 18 370 4 265 1 42 1 20 1 152 2 21 2 
66 1 16 1 121 1 213 1 256 1 172 1 227 1 
237 1 29 1 66 1 349 1 15 1 16 1 121 1 213 1 256 1 96 1 172 1 227 1 
318 1 347 1 252 1 364 1 58 1 25 1 218 1 110 1 26 1 35 1 283 1 
228 1 66 1 364 1 172 1 252 1 196 1 289 1 16 1 291 1 359 1 227 1 35 1 361 1 283 1 
324 1 228 1 66 1 172 1 252 1 196 1 289 1 16 1 291 1 359 1 227 1 35 1 361 1 283 1 
324 1 347 3 66 2 111 1 25 1 183 1 252 2 359 2 235 1 218 2 35 2 283 2 167 1 172 2 367 1 222 1 318 1 196 1 16 2 289 1 291 1 61 1 321 2 227 1 
324 1 245 1 347 4 48 1 231 1 364 1 167 1 89 2 68 2 25 1 183 1 252 3 318 1 5 1 61 1 175 1 378 1 199 1 160 1 218 1 321 1 35 3 283 3 
324 1 245 1 347 4 144 1 48 1 231 1 364 1 167 1 89 2 68 2 25 1 183 1 252 3 318 1 5 1 61 1 199 1 160 1 218 1 321 1 35 3 283 3 
318 1 252 1 25 1 86 1 35 1 283 1 
252 1 279 1 364 1 35 1 283 1 
228 1 202 2 178 1 135 2 247 1 66 1 230 1 137 1 180 2 301 1 49 1 182 1 155 1 252 1 356 1 120 1 359 1 189 2 215 1 159 4 35 1 283 1 74 1 38 1 286 3 40 1 173 5 172 1 340 1 370 2 373 1 42 1 241 1 16 1 289 1 291 1 84 2 152 1 227 2 323 2 
245 1 347 2 48 1 249 1 231 2 328 1 89 3 330 2 68 3 55 1 252 1 5 1 122 1 30 1 98 1 160 1 100 1 282 1 314 1 35 1 283 1 259 2 219 1 144 1 75 2 364 1 63 2 199 1 
245 1 347 2 24 1 25 2 252 2 318 1 215 1 321 1 218 1 86 1 35 2 244 1 283 2 
347 1 112 1 364 1 25 1 252 4 318 1 61 1 215 1 58 1 110 1 218 1 35 4 283 4 
324 1 347 1 192 1 204 1 25 2 81 1 252 2 318 1 309 1 151 1 321 1 218 1 35 2 283 2 
73 1 318 1 252 1 76 1 299 1 364 1 169 1 25 1 35 1 283 1 
347 1 296 1 25 1 223 1 252 2 318 1 215 1 257 1 218 1 35 2 283 2 
324 1 347 3 112 1 0 1 364 1 25 2 223 1 252 5 318 2 58 1 215 1 292 1 110 1 218 2 35 5 283 4 
324 1 347 3 112 1 364 1 25 2 223 1 252 5 318 2 343 1 58 1 215 1 292 1 110 1 218 2 35 5 283 4 
347 1 66 2 111 1 364 1 172 2 25 1 222 1 252 1 318 1 289 1 16 1 291 1 359 1 218 1 321 1 227 1 35 1 283 1 
324 1 252 1 279 1 35 1 283 1 
70 1 102 1 319 1 258 1 227 1 
48 1 249 1 102 1 315 1 77 1 78 1 89 2 367 1 68 2 264 1 53 1 196 1 70 2 5 1 319 2 235 1 258 2 160 1 227 1 
66 1 16 1 376 1 102 1 70 1 1 1 319 1 170 1 172 1 
315 1 102 1 77 1 
71 1 377 1 197 1 26 1 
156 1 71 1 377 1 197 1 195 1 368 1 280 1 
236 1 195 1 335 1 
156 1 209 1 130 1 71 1 377 1 197 1 195 3 368 1 280 3 372 1 46 2 7 1 
185 1 156 1 71 1 377 1 197 1 195 2 368 1 280 2 360 1 
73 1 130 1 169 1 368 1 195 1 156 1 72 1 157 1 377 1 345 1 280 1 
156 1 130 1 71 1 377 1 195 1 368 1 280 1 
156 1 130 1 71 2 197 1 195 1 368 1 280 1 
130 1 221 1 368 2 195 2 355 1 156 2 225 1 71 1 377 1 280 2 
153 1 130 1 368 1 195 3 156 1 185 2 56 1 71 1 72 1 377 2 197 1 226 1 280 3 
73 1 162 1 130 1 299 1 169 2 368 1 195 2 156 1 185 1 71 1 377 1 345 1 197 1 280 2 127 1 
130 1 300 1 368 2 195 4 156 2 185 2 71 1 72 1 377 2 197 1 226 1 280 4 360 1 
156 1 130 1 71 1 377 1 197 1 195 1 368 1 280 1 
293 1 195 4 368 1 185 2 156 1 209 1 71 2 72 1 377 3 197 2 226 1 280 4 46 1 7 1 
185 1 156 1 130 1 71 1 377 1 197 1 80 1 271 1 195 2 368 1 280 2 44 1 
130 1 368 1 195 3 206 1 156 1 209 1 71 1 377 1 197 1 280 3 7 2 46 2 
377 2 311 1 126 1 371 2 
308 1 156 1 130 1 195 1 368 1 280 1 
185 1 156 1 56 1 130 1 71 1 377 1 197 1 195 2 368 1 280 2 
362 1 
156 1 130 1 71 1 377 1 197 1 195 1 368 1 280 1 
130 1 368 1 195 3 185 1 156 1 56 1 71 1 377 1 197 1 280 3 46 1 
293 1 72 1 377 1 226 1 
71 1 377 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 243 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 243 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (286,334) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 198 19 71 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 198 19 71 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 198 19 71 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 198 19 71 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 198 19 71 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
319 1 338 2 117 2 188 2 25 1 122 1 5 1 124 1 49 6 195 9 299 2 325 5 151 1 279 1 78 1 52 1 82 1 232 1 87 9 57 2 135 1 287 1 138 4 202 3 163 1 165 1 264 2 111 2 
319 1 338 2 117 2 188 2 25 1 122 1 5 1 124 1 49 6 195 9 299 2 325 5 151 1 279 1 78 1 52 1 82 1 232 1 57 2 87 9 135 1 287 1 138 4 202 3 163 1 165 1 264 2 111 2 
319 1 338 2 117 2 188 2 25 1 122 1 5 1 124 1 49 7 195 10 299 2 325 6 151 1 279 1 78 1 52 1 82 1 232 1 57 2 87 10 135 1 287 1 138 5 202 4 163 1 165 1 264 2 111 2 
319 1 338 2 117 2 188 1 25 1 122 1 5 1 124 1 49 4 195 7 299 2 325 4 151 1 279 1 52 1 82 1 232 1 57 2 87 7 135 1 287 1 138 3 202 2 163 1 165 1 264 2 111 2 
82 1 319 1 117 1 188 2 87 4 57 1 287 1 138 2 124 1 202 1 49 3 163 1 195 4 299 1 264 1 325 3 111 1 78 1 
319 1 338 1 117 1 86 1 87 2 107 1 5 1 287 1 261 1 124 1 165 1 195 2 299 1 325 1 264 1 111 1 
319 1 338 1 87 3 287 1 138 1 124 1 202 1 49 1 195 3 299 2 264 2 325 2 151 1 
319 1 338 1 117 1 188 2 25 1 124 1 49 7 195 9 299 2 325 5 151 1 279 1 78 1 82 1 332 1 257 1 87 9 57 1 138 4 287 1 202 3 163 1 264 2 111 1 
319 1 338 1 117 1 188 2 25 1 124 1 49 7 195 9 299 2 325 5 151 1 279 1 78 1 82 1 332 1 257 1 87 9 57 1 138 4 287 1 202 3 163 1 264 2 111 1 
27 1 164 1 239 1 
27 1 296 2 128 1 
324 2 290 2 55 1 2 1 141 2 95 2 251 2 305 2 
115 2 2 1 321 1 147 1 95 3 344 1 220 1 7 1 193 1 192 1 221 1 97 1 324 2 276 1 11 1 328 2 152 1 127 1 251 3 30 1 83 2 14 1 55 1 230 1 235 1 354 1 289 1 305 2 204 2 139 1 290 2 371 1 237 1 312 1 141 2 183 1 372 2 
324 1 102 1 290 1 55 1 133 1 141 1 40 1 95 1 251 1 305 1 
293 1 133 1 215 1 45 1 36 1 95 1 353 1 203 1 27 1 290 1 300 1 239 1 248 1 251 1 
133 1 215 2 45 1 36 1 95 1 353 1 305 1 203 1 27 1 324 1 290 1 239 1 248 2 141 1 251 1 
309 1 215 1 238 1 248 1 51 1 
13 1 27 1 309 1 215 2 239 1 248 2 51 1 129 1 
309 1 215 1 248 1 
102 1 55 1 133 1 215 1 95 1 305 1 324 1 290 1 149 1 248 1 141 1 51 1 40 1 251 1 
27 1 
13 1 27 1 309 1 215 2 239 1 248 2 226 1 51 1 
54 1 13 1 116 1 362 1 22 2 363 1 215 5 159 2 68 2 26 1 60 1 27 1 311 1 309 2 239 1 248 5 113 1 51 2 315 1 
164 1 2 1 
2 2 95 2 305 1 324 1 308 1 290 2 182 1 141 1 251 2 
357 1 38 1 286 1 
115 1 330 1 2 1 95 1 354 1 220 1 7 1 221 1 97 1 139 1 371 1 328 1 183 1 127 1 372 1 251 1 
115 1 337 1 95 2 354 1 7 1 220 1 97 1 221 1 324 1 139 1 290 1 371 1 38 1 141 1 328 1 183 1 50 1 127 1 372 1 251 2 
324 3 290 3 2 1 141 3 50 1 95 3 251 3 305 1 
324 1 102 1 290 1 133 1 141 1 95 1 251 1 
324 1 308 1 290 1 133 1 182 1 141 1 95 1 251 1 305 1 
115 1 337 1 2 1 215 1 45 1 321 1 95 4 344 1 7 1 220 1 193 1 192 1 97 1 221 1 324 3 276 1 248 1 328 1 50 1 127 1 251 4 30 1 83 1 14 1 55 1 133 1 36 1 354 1 353 1 289 1 305 2 203 1 204 2 139 1 290 3 371 1 237 1 182 1 312 1 141 3 183 1 314 1 372 1 41 1 
293 1 324 1 290 2 2 1 141 1 50 1 95 2 251 2 89 1 
337 1 215 1 133 1 45 1 36 1 95 3 353 1 305 1 59 1 203 1 27 1 324 3 290 3 182 1 248 1 141 3 50 2 251 3 41 1 
286 1 95 2 305 1 324 2 290 2 182 1 38 1 141 2 50 1 251 2 
115 1 2 1 95 1 354 1 220 1 7 1 221 1 97 1 139 1 371 1 328 1 183 1 127 1 372 1 251 1 
115 1 2 1 95 1 354 1 7 1 221 1 97 1 172 1 139 1 9 1 328 1 183 1 127 1 372 1 251 1 
320 1 120 1 321 1 67 1 219 1 344 1 192 1 152 2 77 1 30 1 14 1 83 4 228 1 176 1 231 1 334 1 285 1 286 2 289 2 370 1 204 2 357 2 38 2 312 1 
324 1 290 1 133 1 141 1 95 1 251 1 186 1 203 1 
293 1 255 1 337 1 2 1 284 1 95 5 89 1 305 1 324 4 290 5 182 1 141 4 50 2 251 5 
324 2 102 1 290 2 133 1 141 2 95 2 186 1 251 2 
360 1 148 1 
360 1 148 1 
101 1 21 1 
101 1 21 1 
101 1 21 1 
177 1 360 1 148 1 
101 1 47 1 21 1 210 1 360 2 148 2 
335 1 360 1 148 1 
335 1 360 1 148 1 
335 1 360 1 148 1 
100 1 360 1 148 1 
100 1 360 1 148 1 
100 1 360 1 148 1 
81 1 302 1 215 2 94 2 295 2 283 1 161 1 69 2 148 2 88 2 27 1 90 3 262 1 248 2 210 1 367 1 360 2 348 1 268 2 
2 1 215 1 216 1 94 1 295 1 121 1 297 1 148 1 95 2 123 1 324 2 248 1 150 1 225 1 348 1 251 2 177 1 88 1 290 2 90 1 141 2 91 1 360 1 268 1 
117 1 111 1 57 1 
117 1 111 1 107 1 
294 1 99 1 111 3 57 2 107 1 341 1 
292 1 294 1 99 1 111 2 57 1 107 1 
294 2 99 1 111 2 57 1 107 1 
13 1 175 1 215 4 93 1 27 1 243 1 309 1 206 1 239 1 248 4 51 3 174 1 
13 1 215 4 93 1 190 1 180 1 27 1 243 1 309 2 98 1 239 1 248 4 238 1 51 3 
269 2 22 1 320 1 215 3 296 4 68 1 275 1 297 1 26 2 27 3 243 1 223 1 248 3 51 2 174 1 128 2 175 1 228 1 159 1 32 2 231 1 285 1 206 1 311 1 239 1 315 3 
269 4 22 1 214 1 320 2 215 4 296 7 68 1 275 1 297 2 26 4 27 4 243 1 223 2 248 4 51 3 174 2 128 3 175 1 228 2 32 4 159 1 231 2 106 1 285 2 311 1 206 1 239 1 114 1 315 5 
164 1 20 1 354 1 
200 1 354 1 
336 1 
139 1 354 1 
62 1 139 1 66 1 20 2 183 1 354 3 
139 1 183 1 354 1 
162 1 354 1 
83 7 1 1 320 1 176 3 231 1 120 2 233 1 351 1 289 3 366 1 181 1 224 1 167 1 152 4 361 2 316 1 252 1 
83 7 1 1 320 1 176 3 231 1 120 2 233 1 351 1 289 3 366 1 181 1 224 1 167 1 152 4 361 2 316 1 252 1 
83 7 1 1 320 1 176 3 231 1 120 2 233 1 351 1 289 3 366 1 181 1 207 1 224 1 167 1 152 4 361 2 316 1 252 1 
1 2 320 4 273 3 120 5 46 1 344 1 366 1 223 3 224 1 126 1 152 16 252 1 29 1 30 1 83 31 14 1 103 4 228 3 176 10 231 4 233 2 351 2 285 3 289 15 288 1 204 2 181 1 312 1 142 1 265 1 185 1 167 5 361 3 316 2 
30 2 83 9 14 2 1 1 320 1 176 4 231 1 120 3 233 1 351 1 56 1 289 4 344 2 366 1 204 4 181 1 312 2 327 1 167 1 152 5 361 2 316 1 252 1 29 1 
115 1 319 1 117 1 338 1 364 1 341 1 242 1 124 1 49 1 7 1 221 1 195 2 299 1 325 1 247 1 326 1 328 1 10 1 250 1 80 1 104 1 57 1 87 2 107 1 287 1 355 1 264 1 64 1 111 2 372 1 
115 1 319 1 117 1 338 1 341 1 364 1 242 1 124 1 49 2 7 1 221 1 195 3 299 1 325 1 326 1 328 1 10 1 250 1 79 1 80 1 331 1 368 1 104 1 57 1 87 3 107 1 355 1 264 1 111 2 372 1 
115 1 319 1 338 1 117 1 364 1 341 1 124 1 49 2 7 1 221 1 195 2 325 1 326 1 328 1 250 1 79 1 80 1 331 1 104 1 87 2 107 1 57 1 355 1 111 2 372 1 
80 2 115 1 338 2 368 1 87 1 108 1 364 2 354 1 7 1 306 1 221 1 139 1 195 1 28 1 299 1 74 1 125 1 264 1 326 2 328 1 127 1 372 1 154 1 
115 1 117 1 338 1 364 1 341 1 242 1 7 1 221 1 195 1 299 1 326 1 328 1 10 1 250 1 80 1 331 1 104 1 57 1 87 1 107 1 287 1 355 1 264 1 64 1 111 2 372 1 
339 1 
293 1 45 1 48 1 296 2 4 1 95 1 7 1 300 1 246 4 249 2 248 5 196 1 12 1 251 1 154 1 155 1 13 3 253 1 54 1 303 2 159 1 105 1 201 2 354 1 353 1 306 1 203 1 309 6 315 2 115 2 318 1 22 1 215 5 171 1 68 1 275 1 26 2 221 1 27 2 222 1 72 1 75 2 328 2 127 2 128 2 132 1 333 2 133 1 31 2 36 1 37 2 139 1 290 1 239 1 372 2 
13 1 293 1 133 1 215 3 45 1 36 1 95 1 353 1 203 1 222 1 72 1 290 1 309 2 246 2 300 1 248 3 196 1 75 1 226 1 12 1 251 1 155 1 
13 1 293 1 133 1 215 3 45 1 36 1 95 1 353 1 203 1 27 1 222 1 72 1 290 1 309 1 246 3 300 1 239 1 249 1 248 3 196 1 226 1 12 1 251 1 155 1 
293 1 215 3 45 1 95 1 222 1 27 1 72 1 300 1 246 3 196 1 248 3 249 1 75 1 226 1 251 1 12 1 155 1 13 1 133 1 333 1 36 1 353 1 203 1 290 1 309 2 239 1 
43 1 293 1 45 1 95 1 246 6 300 1 248 5 196 1 249 4 251 1 12 1 155 1 13 3 54 1 303 2 16 1 159 1 201 2 353 1 203 1 309 7 168 1 315 1 318 1 22 1 215 5 68 1 26 1 222 1 27 5 72 1 75 4 226 1 128 2 132 1 333 4 133 1 31 2 35 1 36 1 37 2 236 1 290 1 239 5 
293 1 318 1 22 1 215 4 45 1 296 2 68 1 26 1 95 1 27 2 222 1 72 1 300 1 246 4 249 2 196 1 248 4 75 2 128 2 12 1 251 1 155 1 13 2 54 1 303 2 132 1 333 2 133 1 31 2 159 1 105 1 201 2 36 1 37 2 353 1 203 1 290 1 309 4 239 1 315 1 
318 1 293 1 22 1 215 4 45 1 68 1 26 1 95 1 27 1 222 1 72 1 300 1 246 4 249 2 196 1 248 4 75 2 128 2 251 1 12 1 155 1 13 2 54 1 303 2 132 1 333 2 133 1 31 2 16 1 159 1 201 2 36 1 37 2 353 1 203 1 236 1 290 1 309 4 239 1 168 1 315 1 
318 1 293 1 22 1 215 4 45 1 68 1 26 1 95 1 27 1 222 1 72 1 300 1 246 4 249 2 196 1 248 4 75 2 128 2 251 1 12 1 155 1 13 2 54 1 303 2 132 1 333 2 133 1 31 2 16 1 159 1 201 2 36 1 37 2 353 1 203 1 236 1 290 1 309 4 239 1 168 1 315 1 
293 1 22 1 215 4 45 1 296 2 68 1 26 1 95 1 194 1 27 1 222 1 72 1 300 1 246 4 249 2 196 1 248 4 75 2 76 1 251 1 12 1 155 1 13 2 54 1 132 1 333 2 133 1 159 1 234 1 201 2 36 1 109 2 37 2 353 1 203 1 236 1 290 1 309 4 239 1 208 2 315 1 
293 1 45 1 95 2 149 1 246 5 300 1 249 3 248 4 196 1 12 1 251 2 155 1 54 1 13 2 303 2 102 1 55 1 16 1 159 1 201 2 353 1 305 1 203 1 309 5 168 1 315 1 318 1 22 1 215 4 68 1 26 1 324 1 222 1 27 1 72 1 75 3 128 2 132 1 333 3 133 2 31 2 35 1 36 1 37 2 236 1 290 2 141 1 239 1 40 1 
293 1 45 1 95 2 149 1 246 5 300 1 249 3 248 4 196 1 12 1 251 2 155 1 54 1 13 2 303 2 102 1 55 1 16 1 159 1 201 2 353 1 305 1 203 1 309 5 168 1 315 1 318 1 22 1 215 4 68 1 26 1 324 1 222 1 27 1 72 1 75 3 128 2 132 1 333 3 133 2 31 2 35 1 36 1 37 2 236 1 290 2 141 1 239 1 40 1 
293 1 22 1 215 4 45 1 296 2 68 1 26 1 95 1 27 1 222 1 72 1 300 1 246 4 249 2 196 1 248 4 75 2 12 1 251 1 155 1 13 2 54 1 132 1 333 2 133 1 159 1 105 1 234 1 201 2 36 1 109 2 37 2 353 1 203 1 290 1 309 4 239 1 208 2 315 1 
30 1 83 6 14 1 1 1 2 2 320 1 176 2 231 1 120 2 233 1 321 1 286 1 219 1 289 3 344 1 192 1 357 1 204 2 164 1 366 1 181 1 38 1 312 1 152 3 361 1 252 1 
2 1 320 1 120 1 273 3 321 2 3 1 70 1 344 2 193 1 192 1 345 1 223 2 245 1 152 8 126 1 30 2 14 2 83 14 103 3 228 1 176 2 231 2 160 1 285 2 286 4 235 1 289 6 204 4 357 11 38 11 312 2 142 1 167 1 
30 1 83 1 337 1 14 1 321 1 286 1 95 1 235 1 344 1 192 1 63 1 204 2 324 1 345 1 290 1 73 1 312 1 141 1 50 1 152 1 251 1 
187 1 337 1 1 1 2 2 189 2 95 3 344 3 7 2 193 1 192 3 97 2 345 1 347 2 50 1 152 10 251 3 252 1 14 3 354 2 204 6 357 7 312 3 167 4 361 1 115 3 320 3 120 4 321 3 220 2 221 2 366 1 324 1 223 2 328 3 278 2 127 1 281 1 30 3 83 20 331 1 228 2 176 8 231 3 233 1 134 1 285 2 286 7 235 1 289 10 290 1 139 2 181 1 371 2 237 2 38 7 141 1 240 2 183 2 372 3 
115 8 321 2 147 2 170 1 6 1 95 1 219 1 7 2 344 2 221 2 192 2 193 1 324 1 247 1 328 7 50 1 152 1 127 2 251 1 154 1 30 2 14 2 83 2 331 1 350 1 158 1 354 3 235 1 289 1 306 1 204 4 290 1 139 2 141 1 312 2 358 1 166 1 39 1 372 8 
320 1 120 1 321 1 95 1 344 1 192 1 345 1 324 1 223 1 152 1 251 1 30 1 14 1 83 3 228 1 176 1 231 1 199 1 285 1 286 1 305 1 289 2 357 1 204 2 290 1 38 1 182 1 141 1 312 1 
30 1 83 2 14 1 176 1 231 1 321 1 285 1 286 1 219 1 344 1 192 1 357 1 204 2 38 1 312 1 167 1 77 1 152 2 
30 1 83 2 14 1 228 1 320 1 176 1 120 1 321 1 67 1 286 1 219 1 344 1 289 2 192 1 357 1 204 2 38 1 312 1 
320 1 120 1 321 1 219 1 344 1 192 1 223 1 152 2 30 1 14 1 83 4 228 1 176 2 231 1 285 1 286 2 289 2 204 2 357 2 38 2 312 1 167 1 
30 1 83 2 14 1 176 1 231 1 321 1 170 1 285 1 286 1 344 1 192 1 357 1 204 2 38 1 312 1 167 1 77 1 152 2 
30 1 83 2 14 1 228 1 320 1 176 1 120 1 321 1 67 1 170 1 286 1 344 1 289 2 192 1 357 1 204 2 38 1 312 1 
320 1 120 1 321 1 170 1 344 1 192 1 223 1 152 2 30 1 14 1 83 4 228 1 176 2 231 1 285 1 286 2 289 2 204 2 357 2 38 2 312 1 167 1 
30 1 14 1 83 4 228 1 320 1 176 2 231 1 120 1 321 1 285 1 286 2 289 2 344 1 192 1 357 2 204 2 223 1 38 2 312 1 167 1 152 2 
115 1 2 1 321 1 95 1 7 1 220 1 344 1 97 1 221 1 192 1 193 1 328 1 152 1 127 1 251 1 30 1 83 2 14 1 235 1 354 1 289 1 204 2 139 1 371 1 237 1 312 1 183 1 372 1 
115 1 2 1 321 1 95 1 7 1 344 1 97 1 221 1 192 1 193 1 172 1 9 1 328 1 152 1 127 1 251 1 30 1 83 2 14 1 84 1 235 1 354 1 289 1 204 2 139 1 312 1 183 1 372 1 
320 1 120 1 321 1 344 1 192 1 345 1 223 1 152 2 30 1 14 1 83 4 228 1 176 2 231 1 285 1 286 2 289 2 204 2 357 2 38 2 312 1 167 1 
115 1 320 1 120 1 321 1 189 1 95 1 7 1 220 1 344 1 97 1 221 1 192 1 223 1 247 1 328 1 152 2 251 1 30 1 83 4 14 1 228 1 176 2 231 1 285 1 286 2 354 1 289 2 357 2 204 2 139 1 371 1 38 2 237 1 312 1 183 1 167 1 372 1 
320 1 321 1 95 1 344 1 192 1 345 1 324 1 223 1 152 2 251 1 30 1 14 1 83 3 228 1 176 1 231 1 285 1 286 1 289 1 305 1 204 2 357 1 290 1 182 1 38 1 141 1 312 1 167 1 241 1 
30 1 204 2 14 1 254 1 19 1 312 1 327 1 198 1 71 1 344 1 
30 1 204 2 14 1 254 1 19 1 312 1 327 1 198 1 71 1 344 1 
30 1 204 2 14 1 254 1 19 1 312 1 327 1 198 1 71 1 344 1 
30 1 204 2 14 1 254 1 19 1 312 1 327 1 198 1 71 1 344 1 
30 1 204 2 14 1 254 1 19 1 312 1 327 1 198 1 71 1 344 1 
157 1 262 1 94 1 295 1 283 1 210 1 360 1 88 1 148 1 268 1 
177 1 123 1 
94 1 295 1 352 1 227 1 360 1 88 1 148 1 153 1 268 1 
302 1 215 1 94 1 295 1 283 1 161 1 69 1 148 1 88 1 27 1 90 2 262 1 248 1 210 1 367 1 348 1 360 1 268 1 
302 1 215 1 94 1 295 1 283 1 161 1 69 1 148 1 88 1 27 1 90 2 262 1 248 1 210 1 367 1 348 1 360 1 268 1 
302 1 215 1 94 1 295 1 283 1 161 1 69 1 148 1 88 1 27 1 90 2 262 1 248 1 210 1 367 1 348 1 360 1 268 1 
335 1 110 1 47 1 
335 1 110 1 47 1 
100 1 143 1 
47 1 100 1 143 1 
91 1 150 1 
2 1 215 1 216 1 94 1 295 1 121 1 69 1 297 1 95 2 148 1 123 1 324 2 248 1 150 1 301 1 367 1 51 1 225 1 251 2 177 1 88 1 290 2 90 1 91 1 141 2 360 1 268 1 
335 1 110 1 
47 1 100 1 143 1 
115 2 213 1 321 1 147 2 95 2 7 1 344 1 221 1 192 1 193 1 345 1 328 2 152 1 251 2 30 1 14 1 349 1 83 2 15 1 350 1 354 1 369 1 235 1 289 1 204 2 139 1 290 2 312 1 39 1 372 2 211 1 
115 2 80 1 117 1 331 1 340 1 104 1 57 1 107 1 34 1 341 1 242 1 7 1 221 1 263 1 247 1 328 2 250 1 111 2 372 2 
115 1 80 1 272 1 117 1 331 1 104 1 57 1 107 1 34 1 341 1 242 1 7 1 221 1 328 1 250 1 111 2 372 1 
115 1 80 1 23 1 108 1 354 1 7 1 306 1 221 1 139 1 263 1 328 1 127 1 372 1 154 1 
115 1 80 1 117 1 331 1 340 1 104 1 57 1 107 1 34 1 341 1 242 1 7 1 221 1 263 1 328 1 250 1 111 2 372 1 
317 1 
27 1 164 1 363 1 239 1 113 1 26 1 315 1 
13 1 54 1 318 1 303 1 22 1 215 1 31 1 159 1 296 1 68 1 26 1 27 2 309 1 239 1 248 1 315 1 128 1 
45 1 296 12 96 1 343 2 7 1 248 2 197 1 54 2 13 1 159 2 304 1 256 1 200 2 354 4 309 2 20 1 359 1 209 2 315 7 65 1 115 1 269 6 22 2 66 1 215 2 320 2 68 2 275 1 26 6 221 2 27 6 223 2 328 1 278 2 127 1 128 6 131 1 228 2 32 6 231 2 285 2 139 1 183 1 372 1 
269 5 144 1 22 2 44 1 215 1 320 2 273 1 296 6 68 2 275 1 323 1 26 5 27 5 223 2 244 1 248 1 128 3 253 1 13 1 54 2 103 1 229 1 228 2 32 5 159 2 231 2 259 1 285 2 260 1 309 1 239 2 209 2 142 1 184 1 315 8 
1 1 22 1 215 1 320 1 274 1 68 1 323 1 95 1 26 2 324 1 149 1 248 1 251 1 252 1 54 1 102 1 55 1 133 1 159 1 231 2 233 1 305 1 290 1 141 1 209 2 168 1 40 1 315 2 
54 1 22 1 363 1 159 1 68 1 26 1 27 1 239 1 113 1 315 1 
269 5 228 2 320 2 32 5 231 2 296 10 285 2 323 1 26 5 27 5 223 2 278 1 209 2 128 5 315 5 
13 1 27 1 309 1 215 1 239 1 248 1 
115 4 0 1 22 2 215 3 24 1 48 1 171 1 68 2 275 2 26 2 7 1 365 1 221 1 248 3 328 4 127 2 154 1 54 1 253 2 13 2 159 2 17 2 354 1 306 1 139 1 311 1 309 4 372 4 315 2 
115 1 2 1 321 1 95 3 344 1 220 1 7 1 193 1 221 1 97 1 192 1 324 2 276 1 328 1 127 1 251 3 30 1 83 1 14 1 55 1 354 1 289 1 305 2 204 2 290 2 139 1 371 1 237 1 312 1 141 2 183 1 372 1 
269 2 54 1 253 1 22 1 32 2 159 1 296 4 68 1 275 1 26 2 27 4 239 2 361 1 128 2 315 1 
61 1 91 1 94 1 283 1 88 1 
310 1 94 1 88 1 
310 1 94 1 88 1 
310 1 94 1 88 1 
270 1 94 1 88 1 
270 1 94 1 88 1 
270 1 94 1 88 1 
94 1 88 1 
360 1 148 1 
30 2 83 8 14 2 1 1 320 1 176 3 231 1 120 2 233 1 289 4 344 2 204 4 366 1 181 1 312 2 152 4 167 1 361 1 252 1 29 1 
83 6 1 1 320 1 176 2 231 1 120 2 233 1 289 3 164 1 366 1 181 1 152 3 361 1 252 1 
30 1 14 1 83 4 228 1 320 1 176 2 231 1 120 1 285 1 289 2 344 1 307 1 204 2 223 1 312 1 152 2 167 1 
83 7 103 2 228 1 320 1 176 2 231 1 120 1 273 1 285 1 289 4 223 1 142 1 152 3 126 1 167 1 
1 2 320 3 273 2 120 5 344 2 366 1 223 2 245 1 126 1 152 11 252 1 29 2 30 2 83 23 14 2 103 2 228 2 176 9 231 3 233 2 160 1 178 1 285 2 289 12 204 4 181 1 312 2 167 4 361 1 
83 1 103 1 289 1 
83 1 273 1 152 1 
30 1 14 1 83 6 228 1 320 1 176 3 231 1 120 2 285 1 344 1 289 3 307 1 204 2 223 1 312 1 278 1 152 3 167 1 
144 1 320 2 273 1 120 1 344 1 223 2 244 1 327 1 152 6 30 1 83 12 14 1 103 1 228 2 176 2 231 2 259 1 285 2 260 1 289 6 204 2 312 1 142 1 184 1 167 1 
83 6 1 1 320 1 176 2 231 1 120 1 233 1 289 3 152 3 167 1 252 1 
30 1 83 3 14 1 1 1 176 2 120 1 233 1 178 1 289 2 344 1 366 1 204 2 181 1 312 1 152 1 167 1 29 1 
30 1 14 1 83 10 1 2 320 2 176 5 231 2 120 3 233 2 274 1 344 1 289 5 204 2 312 1 327 1 167 2 152 5 252 1 
30 1 14 1 83 2 176 1 231 1 285 1 344 1 204 2 312 1 327 1 152 2 167 1 
30 1 14 1 83 4 228 1 320 1 176 2 231 1 120 1 285 1 289 2 344 1 204 2 223 1 312 1 327 1 152 2 167 1 
30 3 83 3 14 3 1 1 176 2 120 1 233 1 178 1 289 2 344 3 204 6 312 3 327 1 167 1 152 1 291 1 29 1 
1 3 320 5 273 3 120 7 344 5 366 1 223 3 327 1 152 16 126 1 252 2 29 2 30 5 14 5 83 34 103 4 228 3 176 12 231 5 233 3 178 1 285 3 289 18 288 1 307 1 204 10 181 1 312 5 265 1 142 1 185 1 167 5 361 1 291 1 
30 1 14 1 83 8 1 1 103 1 320 1 176 2 231 1 120 2 273 1 233 1 259 1 344 1 289 4 366 1 204 2 181 1 312 1 327 1 142 1 152 4 361 1 252 1 
1 1 320 1 120 2 273 1 344 2 366 1 223 1 327 1 152 6 126 1 252 1 30 2 83 11 14 2 103 2 176 3 231 2 233 1 259 1 285 1 289 5 307 1 204 4 181 1 312 2 142 1 167 1 361 1 
144 1 1 1 320 3 273 1 120 3 344 3 366 1 223 2 244 1 327 1 152 9 252 1 29 1 30 3 83 19 14 3 103 1 228 2 176 4 231 3 233 1 259 1 285 2 260 1 289 10 307 1 204 6 181 1 312 3 142 1 184 1 167 1 361 1 
144 1 1 1 320 2 273 1 120 3 344 3 366 1 223 2 244 1 327 1 152 10 252 1 29 1 30 3 83 17 14 3 103 1 228 1 176 5 231 3 233 1 259 1 285 2 260 1 289 7 307 1 204 6 181 1 312 3 142 1 184 1 167 2 361 1 
30 1 14 1 83 8 1 1 103 1 320 1 176 2 231 1 120 2 273 1 233 1 259 1 344 1 289 4 366 1 204 2 181 1 312 1 327 1 142 1 152 4 361 1 252 1 
144 1 320 2 273 1 120 1 344 1 223 2 244 1 327 1 152 6 30 1 83 12 14 1 103 1 228 2 176 2 231 2 259 1 285 2 260 1 289 6 204 2 312 1 142 1 184 1 167 1 
144 1 1 1 320 2 273 1 120 3 344 4 366 1 223 2 244 1 327 1 152 10 252 1 29 2 30 4 83 18 14 4 103 1 228 1 176 5 231 3 233 1 259 1 285 2 260 1 289 8 307 1 204 8 181 1 312 4 142 1 184 1 167 2 361 1 
144 1 320 2 273 1 120 3 344 4 223 3 244 1 327 1 152 9 29 2 30 4 83 16 14 4 103 1 228 2 176 6 231 3 259 1 285 3 260 1 289 7 204 8 312 4 142 1 184 1 167 3 291 1 
83 7 1 3 320 1 176 6 231 1 120 3 233 3 289 4 366 2 181 1 167 3 152 3 252 1 
144 1 1 1 320 2 273 1 120 3 344 4 366 1 223 2 244 1 327 1 152 10 252 1 29 2 30 4 83 18 14 4 103 1 228 1 176 4 231 3 233 1 259 1 285 2 260 1 289 8 204 8 181 1 312 4 142 1 184 1 167 1 361 1 291 1 
293 1 290 1 2 1 118 1 95 1 251 1 89 1 
130 1 293 1 2 1 118 1 136 1 95 1 89 1 8 1 205 1 290 1 112 1 251 1 
221 1 115 1 164 1 139 1 328 1 372 1 127 1 354 1 7 1 306 1 154 1 
115 1 2 1 95 2 354 1 7 1 97 1 221 1 324 1 139 1 290 1 371 1 141 1 328 1 183 1 50 1 127 1 372 1 251 2 
115 1 2 1 95 2 7 1 221 1 97 1 324 2 328 1 50 1 251 2 133 1 33 1 36 1 17 1 354 3 203 1 162 1 290 2 139 2 371 1 141 1 183 2 372 1 
115 2 2 1 217 1 95 2 7 1 221 1 97 1 324 2 172 1 328 2 50 1 251 2 133 1 33 1 36 1 17 1 354 3 203 1 162 1 290 2 139 2 141 1 183 2 372 2 
115 3 215 2 45 1 217 1 7 1 221 1 27 1 248 2 328 3 329 1 127 1 33 1 200 1 17 1 354 4 162 1 139 1 309 1 20 1 239 1 313 1 183 1 372 3 
115 3 215 2 45 1 217 1 33 1 304 1 200 1 17 1 354 4 7 1 162 1 221 1 27 1 139 1 309 1 239 1 248 2 20 1 328 3 183 1 127 1 372 3 
221 1 115 1 328 1 372 1 6 1 7 1 
115 7 156 1 331 1 66 1 350 1 158 1 147 1 6 1 354 3 7 2 221 3 356 1 139 2 247 1 328 6 358 1 166 1 183 1 266 1 127 2 372 7 
115 1 1 1 2 2 320 1 120 2 321 2 189 1 95 2 7 1 344 2 220 1 97 1 221 1 192 2 366 1 345 1 324 1 247 1 328 1 347 1 50 1 152 3 251 2 252 1 30 2 83 6 14 2 349 1 176 2 231 1 233 1 286 1 354 1 289 3 357 1 204 4 139 1 290 1 181 1 371 1 38 1 237 1 141 1 312 2 183 1 372 1 361 1 
115 1 22 2 363 1 215 3 45 1 68 2 26 1 96 1 365 1 27 1 248 3 328 1 197 1 51 1 127 1 54 2 131 1 13 1 159 2 304 1 200 1 354 2 309 2 239 1 20 1 113 1 372 1 315 1 
115 2 66 1 6 1 354 2 7 1 221 2 139 1 247 1 20 1 328 2 359 1 183 1 372 2 
115 4 217 1 354 1 306 1 7 1 221 1 139 1 247 1 328 4 127 1 372 4 267 1 154 1 
115 2 156 1 134 1 17 1 354 1 7 1 221 2 139 1 328 2 173 1 183 1 266 1 372 2 212 1 
221 1 115 1 117 1 250 1 328 1 111 1 107 1 372 1 127 1 7 1 
221 1 115 2 213 1 139 1 331 1 350 1 247 1 328 2 372 2 354 1 7 1 
115 5 350 1 17 1 354 3 306 1 7 2 221 2 139 2 247 1 328 4 166 1 358 1 127 1 372 5 267 1 154 1 
115 5 42 1 350 1 17 1 354 3 306 1 7 2 221 2 139 2 247 1 328 4 358 1 127 1 372 5 267 1 154 1 
115 1 2 1 95 2 354 1 7 1 97 1 221 1 324 1 139 1 290 1 172 1 141 1 328 1 183 1 50 1 127 1 372 1 251 2 
115 1 156 1 66 1 17 1 354 1 7 1 221 2 356 1 139 1 328 1 183 1 266 1 372 1 
2 1 18 1 85 1 58 1 137 1 
2 1 133 1 85 1 215 2 45 1 258 1 322 1 36 1 58 2 137 2 353 1 203 1 27 1 18 2 239 1 248 2 346 1 51 1 41 1 
290 1 15 1 85 1 95 1 211 1 58 1 251 1 369 1 137 1 
85 1 346 1 322 1 
164 1 319 1 325 1 124 1 
319 1 195 1 299 1 325 1 264 1 87 1 124 1 
338 1 326 1 87 1 
319 1 145 1 169 1 87 3 287 1 124 1 195 3 165 2 299 1 325 1 264 1 277 1 
319 1 195 2 188 1 299 1 325 1 264 1 87 2 124 1 49 1 
163 1 117 1 195 1 299 1 325 1 264 1 111 1 57 1 87 1 138 1 287 1 
195 1 299 1 325 1 264 1 87 1 287 1 124 1 
319 1 195 1 299 1 264 1 87 1 287 1 124 2 
271 1 282 1 87 2 287 1 124 1 195 2 140 1 299 2 325 1 264 2 
319 1 25 1 87 3 287 1 138 1 124 1 49 2 202 1 195 3 299 1 264 1 325 2 279 1 
319 1 117 1 107 1 87 2 57 1 341 1 287 1 124 1 49 1 195 2 298 1 299 1 325 1 264 1 111 2 
319 1 188 1 87 4 287 1 138 1 124 1 49 2 202 1 195 4 299 2 264 2 325 2 78 1 
319 1 195 1 299 1 325 1 264 1 87 1 287 1 124 1 
319 2 169 1 119 1 87 4 138 1 124 2 49 2 202 1 165 1 195 4 299 1 264 1 325 3 277 1 
319 1 332 1 146 1 87 2 287 1 124 1 49 1 195 2 299 1 325 1 264 1 53 1 
319 1 169 1 87 3 287 1 124 1 195 3 165 2 299 1 325 1 264 1 277 2 92 1 
325 2 218 2 280 1 179 1 
195 1 299 1 264 1 87 1 191 1 287 1 
319 1 195 2 299 1 325 1 264 1 279 1 87 2 287 1 124 1 49 1 
342 1 
319 1 195 1 299 1 325 1 264 1 87 1 287 1 124 1 
319 1 87 3 287 1 49 1 124 1 195 3 165 1 299 1 264 1 325 1 279 1 
325 1 119 1 138 1 202 1 
325 1 124 1 

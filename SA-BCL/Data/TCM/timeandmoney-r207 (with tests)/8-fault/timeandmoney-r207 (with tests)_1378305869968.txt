#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 340 279 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 352 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1213 | stmt -> ;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
367 1 220 1 1 1 68 1 212 1 156 1 
367 1 220 1 1 1 68 1 212 1 156 1 
367 1 220 1 1 1 68 1 212 1 156 1 
367 1 220 1 1 1 68 1 212 1 156 1 
301 1 222 1 313 3 291 2 367 1 1 1 68 1 225 3 19 1 80 1 371 1 31 2 86 1 248 1 212 4 104 1 156 4 193 1 
313 1 367 1 1 1 68 1 140 1 217 1 371 1 209 1 151 1 248 1 119 1 86 1 102 1 212 2 104 1 156 2 
313 2 367 2 1 1 68 2 225 1 19 1 371 1 31 1 176 1 151 1 212 3 104 1 156 3 
301 1 222 1 313 5 291 2 367 2 1 1 68 2 225 7 57 1 19 3 80 1 81 1 371 1 31 4 5 1 176 1 151 1 86 1 248 1 212 9 104 1 193 1 48 1 156 9 
301 1 222 1 313 5 291 2 367 2 1 1 68 2 225 7 57 1 19 3 80 1 81 1 371 1 31 4 5 1 176 1 151 1 86 1 248 1 212 9 104 1 193 1 48 1 156 9 
55 1 
335 1 111 2 197 1 
327 2 223 2 105 1 349 2 374 2 201 2 249 2 207 1 
292 1 105 1 349 2 56 2 295 1 296 1 129 1 277 1 84 1 178 1 134 1 201 2 180 1 323 1 327 3 223 3 331 2 66 1 113 1 141 1 143 2 370 1 207 1 228 1 45 1 168 2 118 2 99 1 271 1 374 2 249 2 192 1 342 1 47 1 155 1 74 1 214 1 
148 1 327 1 223 1 105 1 349 1 204 1 374 1 201 1 249 1 216 1 
105 1 349 1 216 1 218 1 128 1 159 1 197 1 201 1 160 1 325 1 327 2 223 2 204 1 142 1 148 2 210 1 374 2 169 1 249 1 251 1 49 1 
325 1 327 2 223 2 105 1 204 1 349 2 216 1 218 1 128 1 148 2 210 2 197 1 201 2 374 2 169 1 160 2 249 2 251 1 49 1 
278 1 210 1 160 1 376 1 144 1 
325 1 210 2 197 1 200 1 60 1 160 2 376 1 144 1 
210 1 160 1 376 1 
327 1 223 1 105 1 204 1 349 1 216 1 144 1 148 1 210 1 201 1 374 1 160 1 249 1 251 1 
197 1 
325 1 357 1 210 2 197 1 200 1 160 2 376 1 144 1 
273 1 325 1 187 1 234 2 126 1 144 2 116 1 306 1 196 2 210 5 197 1 200 1 103 1 170 1 311 1 160 5 360 1 376 2 203 2 
55 1 
327 2 223 2 349 1 17 1 207 2 195 1 374 2 201 1 249 1 
258 1 149 1 188 1 
327 1 223 1 292 1 331 1 66 1 113 1 56 1 143 1 295 1 370 1 207 1 98 1 99 1 155 1 74 1 214 1 
327 5 15 1 223 5 349 4 17 1 226 1 207 1 237 1 159 1 374 5 201 1 10 2 249 4 183 1 
148 1 327 2 223 2 318 1 349 2 374 2 249 2 216 1 
327 2 223 2 292 1 66 1 331 1 113 1 349 1 56 1 143 1 370 1 295 1 149 1 99 1 374 1 10 1 249 1 183 1 155 1 74 1 214 1 
327 3 223 3 349 3 201 1 374 3 10 1 249 3 207 1 
148 1 327 1 223 1 349 1 374 1 249 1 216 1 
148 1 327 1 223 1 349 1 374 1 201 1 17 1 249 1 195 1 
274 1 105 1 56 1 277 1 201 2 10 1 160 1 323 1 327 4 331 1 66 1 113 1 17 1 207 1 168 2 210 1 338 1 118 1 169 1 249 3 342 1 74 1 214 1 292 1 349 3 295 1 296 1 218 1 128 1 84 1 180 1 183 1 223 4 141 1 143 1 370 1 228 1 148 2 190 1 99 1 374 3 271 1 192 1 155 1 49 1 
327 2 15 1 223 2 159 1 349 1 374 2 10 1 249 1 207 1 
327 3 223 3 254 1 349 3 17 1 218 1 128 1 148 1 210 1 338 1 197 1 201 1 374 3 169 1 10 2 160 1 249 3 183 1 49 1 
327 2 223 2 188 1 349 2 17 1 149 1 201 1 374 2 10 1 249 2 
327 1 223 1 292 1 331 1 66 1 113 1 56 1 143 1 295 1 370 1 207 1 99 1 155 1 74 1 214 1 
233 1 327 1 223 1 331 1 113 1 56 1 143 1 295 1 370 1 207 1 259 1 99 1 155 1 74 1 214 1 
25 1 125 1 294 1 296 1 258 2 84 1 178 2 177 1 34 1 323 1 63 1 221 1 241 1 188 2 141 1 168 2 149 2 118 3 340 1 271 1 192 1 342 1 288 1 
148 1 327 1 223 1 318 1 349 1 374 1 249 1 128 1 
158 1 130 1 
158 1 130 1 
58 1 375 1 
58 1 375 1 
58 1 375 1 
356 1 158 1 130 1 
356 1 158 1 130 1 
21 1 158 1 130 1 
58 1 32 1 375 1 158 2 231 1 130 2 
356 1 158 1 130 1 
26 1 158 1 130 1 
26 1 158 1 130 1 
26 1 158 1 130 1 
346 1 77 1 349 2 158 1 130 1 219 1 135 1 8 1 136 1 160 1 90 1 327 2 38 1 223 2 40 1 139 1 67 1 284 1 70 1 207 1 21 1 210 1 374 2 249 2 
77 3 64 1 38 2 92 2 139 1 284 2 305 1 158 2 270 1 130 2 96 1 175 1 315 1 210 2 197 1 8 2 160 2 231 1 90 2 
86 1 248 1 193 1 
86 1 248 1 102 1 
364 1 248 3 94 1 102 1 287 1 193 2 
248 2 94 1 102 1 361 1 287 1 193 1 
248 2 94 1 102 1 193 1 287 2 
273 2 346 1 52 2 234 1 354 2 256 1 196 1 111 3 279 1 135 1 177 1 197 2 200 1 136 1 160 5 264 1 203 1 282 1 325 1 267 1 69 2 144 4 306 1 20 1 167 1 335 1 210 5 340 1 311 2 376 1 288 1 
273 6 346 4 51 1 54 1 234 2 354 6 256 1 278 5 196 2 111 9 279 3 6 1 177 3 87 1 197 5 200 1 360 1 160 9 203 2 163 1 325 1 267 2 69 6 144 7 306 1 167 2 335 3 210 9 373 5 340 3 46 1 311 5 376 6 288 3 
346 1 273 2 52 1 234 1 354 2 196 1 279 1 111 4 197 3 177 1 160 3 360 1 264 1 203 1 325 1 267 1 69 2 144 2 20 1 167 1 335 2 210 3 340 1 311 2 288 1 
346 2 273 4 51 1 52 2 234 1 354 4 196 1 111 7 279 2 6 1 197 4 177 2 160 4 360 1 264 1 203 1 163 1 325 1 267 1 69 4 144 3 20 1 167 1 335 3 210 4 340 2 311 3 288 2 
55 1 
113 1 73 1 
28 1 
99 1 113 1 370 1 
113 1 378 1 
99 1 113 1 
113 2 304 2 370 1 28 1 299 1 99 1 101 1 
221 3 285 1 294 2 351 1 165 1 245 2 372 1 84 3 300 1 118 7 59 1 177 1 178 4 122 1 321 1 61 1 185 1 
221 3 285 1 294 2 351 1 165 1 245 2 372 1 84 3 300 1 118 7 59 1 177 1 178 4 122 1 321 1 61 1 185 1 
221 3 285 1 294 2 351 1 165 1 245 2 109 1 372 1 84 3 300 1 118 7 59 1 177 1 178 4 122 1 321 1 61 1 185 1 
157 4 351 1 294 5 173 3 296 1 174 1 83 1 84 12 358 1 300 2 279 3 59 2 178 16 177 4 261 1 321 1 61 1 161 1 185 2 221 10 224 1 285 5 141 1 165 1 245 3 372 1 168 2 118 28 122 2 340 3 154 1 192 1 342 1 288 3 
294 3 296 2 83 1 300 1 84 4 59 1 177 1 178 5 321 1 61 1 185 1 221 4 285 1 141 2 115 1 165 1 245 2 372 1 168 4 118 9 121 1 122 1 192 2 342 2 
313 1 1 1 56 1 255 1 127 1 86 1 33 1 184 1 364 1 328 1 367 1 331 1 303 1 68 1 225 1 143 1 371 1 336 1 151 1 339 1 100 1 248 2 102 1 152 1 212 2 104 1 155 1 193 1 156 2 74 1 
347 1 313 1 56 1 255 1 127 1 86 1 33 1 184 1 364 1 283 1 367 1 331 1 68 1 225 2 143 1 371 1 336 1 151 1 229 1 339 1 100 1 248 2 102 1 152 1 212 3 104 1 155 1 193 1 156 3 74 1 
364 1 313 1 283 1 331 1 56 1 225 2 143 1 255 1 127 1 371 1 229 1 151 1 339 1 86 1 248 2 102 1 152 1 33 1 212 2 104 1 155 1 193 1 74 1 184 1 156 2 
347 1 172 1 56 1 127 2 33 2 367 1 331 1 113 1 68 1 205 1 143 1 117 1 97 1 151 2 99 1 152 2 286 1 211 1 212 1 155 1 74 1 156 1 214 1 
1 1 56 1 255 1 127 1 86 1 33 1 184 1 364 1 328 1 283 1 367 1 331 1 68 1 143 1 336 1 151 1 339 1 100 1 248 2 102 1 152 1 212 1 155 1 193 1 156 1 74 1 
153 1 
273 2 0 2 56 2 234 1 276 2 3 1 196 1 111 2 198 1 159 1 197 3 200 3 160 5 281 2 203 1 325 2 327 1 65 1 331 2 113 1 205 1 332 1 167 1 335 2 210 5 120 1 341 2 169 1 213 1 74 1 343 1 214 2 253 1 172 1 297 2 218 1 128 1 133 4 179 2 35 1 223 1 142 1 143 2 42 1 44 1 306 1 147 2 148 1 99 1 310 1 374 1 311 2 376 6 155 1 49 1 
218 1 3 1 128 1 357 1 133 2 159 1 197 2 200 1 160 3 325 2 327 1 223 1 65 1 142 1 44 1 148 1 147 1 210 3 374 1 310 1 169 1 376 2 343 1 49 1 
325 2 327 1 65 1 223 1 142 1 44 1 3 1 218 1 128 1 148 1 133 3 210 2 197 2 159 1 310 1 374 1 169 1 160 2 281 1 49 1 343 1 
218 1 3 1 128 1 357 1 133 3 159 1 197 2 200 1 179 1 160 3 281 1 325 2 327 1 223 1 65 1 142 1 44 1 148 1 147 1 210 3 374 1 310 1 169 1 376 2 343 1 49 1 
273 1 0 2 105 1 2 1 234 1 276 2 3 1 196 1 197 4 159 1 198 1 201 1 200 3 160 5 281 3 203 1 324 1 164 1 325 4 327 2 65 1 204 1 335 2 210 5 120 1 169 1 341 2 249 1 251 1 343 1 349 1 216 1 27 1 218 1 297 2 128 1 357 1 133 5 179 4 223 2 142 1 44 1 306 1 148 2 147 4 310 1 374 2 311 1 376 7 191 1 49 1 
273 1 0 2 234 1 276 2 3 1 196 1 111 2 197 4 159 1 198 1 200 2 160 4 281 2 203 1 325 3 327 1 65 1 335 2 210 4 120 1 169 1 341 2 343 1 253 1 218 1 297 2 128 1 133 4 179 2 223 1 142 1 44 1 306 1 148 1 147 2 374 1 310 1 311 1 376 4 49 1 
273 1 0 2 2 1 234 1 276 2 297 2 218 1 3 1 128 1 196 1 133 4 198 1 159 1 197 3 179 2 200 2 160 4 281 2 203 1 324 1 164 1 325 3 327 1 223 1 65 1 142 1 44 1 306 1 147 2 335 2 148 1 210 4 120 1 374 1 310 1 341 2 169 1 311 1 376 4 343 1 49 1 
273 1 0 2 2 1 234 1 276 2 297 2 218 1 3 1 128 1 196 1 133 4 198 1 159 1 197 3 179 2 200 2 160 4 281 2 203 1 324 1 164 1 325 3 327 1 223 1 65 1 142 1 44 1 306 1 147 2 335 2 148 1 210 4 120 1 374 1 310 1 341 2 169 1 311 1 376 4 343 1 49 1 
273 1 194 2 0 2 2 1 234 1 276 2 218 1 3 1 128 1 355 1 196 1 111 2 133 4 198 1 159 1 197 3 179 2 200 2 160 4 281 2 203 1 325 3 327 1 223 1 65 1 142 1 44 1 369 1 306 1 147 2 148 1 210 4 123 2 374 1 310 1 169 1 311 1 376 4 343 1 49 1 171 1 
273 1 0 2 2 1 234 1 276 2 297 2 218 1 3 1 128 1 196 1 133 5 198 1 159 1 197 3 200 2 179 3 160 4 281 3 203 1 324 1 164 1 325 3 327 1 223 1 65 1 142 1 44 1 306 1 335 2 148 1 147 3 210 4 120 1 374 1 310 1 341 2 169 1 311 1 191 1 376 5 343 1 49 1 
273 1 0 2 2 1 234 1 276 2 297 2 218 1 3 1 128 1 196 1 133 5 198 1 159 1 197 3 200 2 179 3 160 4 281 3 203 1 324 1 164 1 325 3 327 1 223 1 65 1 142 1 44 1 306 1 335 2 148 1 147 3 210 4 120 1 374 1 310 1 341 2 169 1 311 1 191 1 376 5 343 1 49 1 
273 1 194 2 0 2 234 1 276 2 3 1 196 1 111 2 197 3 159 1 198 1 200 2 160 4 281 2 203 1 325 3 327 1 65 1 210 4 123 2 169 1 343 1 253 1 218 1 128 1 355 1 133 4 179 2 223 1 142 1 44 1 306 1 148 1 147 2 374 1 310 1 311 1 376 4 49 1 
168 2 55 1 271 1 125 1 141 1 192 1 342 1 323 1 296 1 
24 1 157 3 294 1 173 3 296 2 129 1 277 1 258 11 84 5 279 2 178 8 177 2 88 1 112 1 323 2 265 1 161 1 221 2 224 1 188 4 285 1 141 2 207 1 168 4 246 1 149 11 118 13 340 1 271 1 192 2 342 2 288 2 
292 1 349 1 56 1 295 1 296 1 129 1 277 1 84 1 280 1 178 1 10 1 323 1 183 1 327 2 223 2 66 1 331 1 113 1 188 1 141 1 143 1 370 1 269 1 207 1 307 1 98 1 246 1 168 2 118 2 99 1 271 1 374 1 249 1 192 1 342 1 155 1 74 1 214 1 
56 3 277 1 110 1 279 2 59 1 10 1 321 1 323 3 61 1 327 3 283 1 331 3 66 2 113 2 285 4 207 2 165 1 245 1 22 1 168 6 246 1 118 18 122 1 340 2 249 1 342 3 74 2 214 1 288 2 292 2 349 1 294 4 352 2 295 2 296 3 129 1 132 2 258 7 84 8 177 3 178 10 180 2 183 1 221 8 223 3 266 2 188 7 141 3 143 3 370 2 146 2 372 1 149 7 99 2 374 1 271 3 192 3 312 1 155 2 
232 1 56 7 236 1 277 1 10 1 323 2 240 1 327 1 283 1 330 1 331 7 113 4 242 1 205 1 71 1 72 1 168 4 118 2 249 1 342 2 74 4 214 2 348 1 172 1 349 1 125 1 79 1 296 2 129 1 84 1 134 2 178 1 263 1 223 1 303 1 141 2 143 6 370 1 99 3 271 2 374 1 192 2 155 3 
349 1 294 1 296 1 258 1 84 1 279 1 177 1 178 1 201 1 323 1 221 1 327 1 223 1 188 1 243 1 17 1 141 1 149 1 168 2 246 1 118 2 340 1 271 1 374 1 249 1 192 1 342 1 288 1 
221 1 25 1 188 1 285 1 125 1 141 1 296 1 258 1 149 1 168 2 118 2 177 1 178 2 271 1 192 1 323 1 342 1 288 1 
221 1 188 1 125 1 294 1 141 1 296 1 258 1 149 1 168 2 84 1 118 1 340 1 271 1 34 1 192 1 323 1 342 1 
125 1 294 1 296 1 258 2 84 1 279 1 178 2 177 1 323 1 221 2 188 2 285 1 141 1 168 2 149 2 118 3 340 1 271 1 192 1 342 1 288 1 
221 1 25 1 188 1 285 1 141 1 296 1 258 1 71 1 149 1 168 2 118 2 177 1 178 2 271 1 192 1 323 1 342 1 288 1 
221 1 188 1 294 1 141 1 296 1 258 1 71 1 149 1 168 2 84 1 118 1 340 1 271 1 34 1 192 1 323 1 342 1 
294 1 296 1 258 2 84 1 279 1 178 2 177 1 323 1 221 2 188 2 285 1 141 1 71 1 168 2 149 2 118 3 340 1 271 1 192 1 342 1 288 1 
221 2 188 2 285 1 294 1 141 1 296 1 258 2 84 1 149 2 168 2 279 1 118 3 177 1 178 2 340 1 271 1 192 1 323 1 342 1 288 1 
327 1 223 1 292 1 331 1 66 1 113 1 56 1 141 1 143 1 295 1 370 1 296 1 207 1 129 1 277 1 84 1 168 2 118 2 99 1 178 1 271 1 180 1 192 1 342 1 323 1 155 1 74 1 214 1 
233 1 327 1 223 1 331 1 113 1 56 1 143 1 295 1 370 1 314 1 259 1 99 1 155 1 74 1 214 1 
294 1 296 1 258 2 84 1 279 1 178 2 177 1 323 1 221 2 188 2 285 1 141 1 168 2 246 1 149 2 118 3 340 1 271 1 192 1 342 1 288 1 
292 1 56 1 294 1 295 1 296 1 258 2 84 1 279 1 178 2 177 1 180 1 323 1 221 2 327 1 223 1 66 1 331 1 188 2 303 1 113 1 285 1 141 1 143 1 370 1 146 1 149 2 168 2 118 3 99 1 340 1 271 1 192 1 342 1 155 1 74 1 288 1 
349 1 296 1 258 1 84 1 279 1 177 1 178 2 201 1 319 1 323 1 327 1 223 1 188 1 17 1 141 1 168 2 246 1 149 1 118 3 340 1 271 1 374 1 249 1 192 1 342 1 288 1 
157 2 215 1 275 1 294 3 173 1 108 1 107 1 296 2 30 1 84 7 279 3 178 9 177 3 199 2 181 2 161 1 221 6 186 1 224 1 285 3 41 1 141 2 115 1 168 4 118 16 340 3 192 2 342 2 288 3 
157 2 275 2 294 2 173 2 108 2 107 1 296 3 83 2 30 1 84 10 279 3 178 14 177 3 199 1 260 1 13 1 181 4 182 1 221 4 186 1 224 2 285 2 368 1 141 3 115 1 168 6 118 24 340 2 23 1 192 3 342 3 344 1 288 3 
157 4 275 2 107 1 108 1 279 4 59 1 199 1 13 1 321 1 161 1 61 1 285 4 115 1 165 1 208 1 245 1 168 6 118 37 340 4 122 1 23 1 342 3 344 1 288 4 294 4 173 3 296 3 30 1 83 1 84 17 177 5 178 20 260 1 181 4 182 1 221 8 186 1 224 3 368 1 41 1 141 3 372 1 192 3 
157 4 275 2 294 4 173 3 108 1 107 1 296 4 83 2 30 1 84 15 279 4 59 1 178 20 177 5 199 1 260 1 13 1 181 4 321 1 182 1 61 1 161 1 221 7 186 1 224 3 285 3 41 1 368 1 141 4 115 1 208 1 165 1 245 1 372 1 168 8 118 35 122 1 340 3 23 1 192 4 342 4 344 1 288 4 
157 4 275 1 294 7 173 4 108 1 107 1 296 2 83 1 30 1 84 18 279 7 59 1 178 27 177 8 199 1 260 1 13 1 181 4 112 2 321 1 182 1 61 1 161 2 221 14 186 1 224 2 285 7 368 1 141 2 115 1 165 1 245 1 372 1 168 4 118 45 122 1 340 7 23 1 192 2 342 2 344 1 288 7 
175 1 38 1 8 1 284 1 158 1 231 1 333 1 90 1 270 1 130 1 
21 1 40 1 
38 1 16 1 8 1 284 1 158 1 250 1 90 1 130 1 37 1 
356 1 309 1 
32 1 26 1 262 1 
77 2 64 1 38 1 92 1 139 1 284 1 305 1 158 1 270 1 130 1 175 1 315 1 210 1 197 1 8 1 160 1 231 1 90 1 
77 2 64 1 38 1 92 1 139 1 284 1 305 1 158 1 270 1 130 1 175 1 315 1 210 1 197 1 8 1 160 1 231 1 90 1 
77 2 64 1 38 1 92 1 139 1 284 1 305 1 158 1 270 1 130 1 175 1 315 1 210 1 197 1 8 1 160 1 231 1 90 1 
356 1 309 1 32 1 
356 1 309 1 32 1 
26 1 262 1 
32 1 26 1 262 1 
67 1 70 1 
346 1 77 1 349 2 158 1 130 1 219 1 135 1 8 1 136 1 239 1 160 1 90 1 327 2 64 1 92 1 38 1 223 2 40 1 67 1 284 1 144 1 70 1 207 1 21 1 210 1 374 2 249 2 
56 2 236 1 296 1 129 1 277 1 84 1 359 1 178 1 134 2 322 1 323 1 362 1 327 2 223 2 331 2 113 1 141 1 18 1 143 2 43 1 246 1 168 2 72 1 118 2 99 1 271 1 374 2 192 1 342 1 155 1 74 1 
364 1 326 1 283 1 331 2 303 1 56 2 143 2 255 1 4 1 316 1 336 1 339 1 86 1 248 2 102 1 33 1 155 1 193 1 74 1 
364 1 283 1 331 1 56 1 143 1 255 1 4 1 336 1 85 1 339 1 86 1 248 2 102 1 33 1 155 1 193 1 74 1 
326 1 331 1 172 1 113 1 56 1 205 1 143 1 97 1 99 1 33 1 155 1 272 1 74 1 214 1 
364 1 326 1 283 1 331 1 56 1 143 1 255 1 4 1 316 1 336 1 339 1 86 1 248 2 102 1 33 1 155 1 193 1 74 1 
337 1 
55 1 
273 1 234 1 297 1 196 1 111 1 197 2 200 1 160 1 203 1 325 1 306 1 335 1 210 1 120 1 341 1 311 1 376 1 
366 1 331 1 113 2 56 1 235 1 234 1 352 1 143 1 370 1 306 1 189 1 299 1 196 1 99 1 73 1 311 1 155 1 74 2 203 1 214 1 
273 5 157 1 234 2 173 1 354 5 196 2 111 6 279 2 197 5 177 2 200 1 260 1 160 1 182 1 203 2 162 2 325 2 14 1 224 1 368 1 69 5 332 1 306 2 167 1 335 3 150 1 210 1 340 2 23 1 311 6 376 1 344 1 75 1 288 2 
273 2 105 1 349 1 234 1 216 1 196 1 59 1 177 2 201 1 160 1 162 2 203 1 164 1 91 1 14 1 327 1 223 1 204 1 306 1 165 1 372 1 148 1 210 1 122 1 374 1 311 2 249 1 251 1 
273 1 325 1 234 1 116 1 306 1 196 1 197 1 170 1 311 1 203 1 
273 5 14 1 352 1 69 5 354 5 335 5 279 2 111 10 177 2 197 5 340 2 311 3 162 2 288 2 
325 1 210 1 197 1 200 1 160 1 376 1 
273 2 172 1 56 4 234 2 298 1 257 1 196 2 200 2 360 1 160 3 203 2 331 4 113 1 205 1 244 1 143 4 332 2 42 1 227 2 306 1 167 2 210 3 99 1 213 1 311 2 376 4 155 1 74 1 214 2 
292 1 105 1 349 2 56 1 295 1 296 1 277 1 84 1 201 2 180 1 323 1 327 3 223 3 331 1 66 1 113 1 141 1 143 1 370 1 207 1 228 1 168 2 118 1 99 1 374 2 271 1 249 2 192 1 342 1 155 1 74 1 214 1 
273 2 325 2 234 1 69 2 332 1 354 2 306 1 245 1 167 1 335 2 196 1 111 4 197 4 311 1 203 1 
308 1 8 1 90 1 
308 1 8 1 90 1 
175 1 67 1 8 1 377 1 90 1 
308 1 8 1 90 1 
293 1 8 1 90 1 
293 1 8 1 90 1 
293 1 8 1 90 1 
8 1 90 1 
158 1 130 1 
221 3 285 1 294 2 141 2 296 2 165 1 245 1 372 1 83 1 84 4 168 4 118 8 59 1 177 1 178 4 122 1 192 2 321 1 342 2 61 1 
55 1 
221 2 285 1 294 1 141 1 353 1 296 1 84 1 168 2 279 1 118 3 177 1 178 2 340 1 192 1 342 1 288 1 
221 2 224 1 157 2 285 1 294 1 173 1 84 3 118 6 279 1 178 3 177 1 340 1 161 1 288 1 
157 2 294 5 173 2 296 2 83 2 82 1 84 10 279 2 59 2 177 3 178 11 88 1 112 1 321 1 61 1 161 1 221 9 285 4 141 2 165 1 245 1 372 1 168 4 118 21 122 2 340 2 192 2 342 2 288 2 
84 1 118 1 157 1 
118 1 178 1 173 1 
221 3 285 1 294 2 141 1 352 1 353 1 296 1 168 2 84 2 118 5 279 1 177 1 178 3 340 1 192 1 342 1 288 1 
157 1 294 1 173 1 296 1 84 4 279 2 178 6 177 2 260 1 182 1 221 2 224 1 285 1 368 1 141 1 115 1 168 2 118 10 340 2 23 1 192 1 342 1 344 1 288 2 
221 2 285 1 294 1 165 1 372 1 84 3 118 6 59 1 177 1 178 3 122 1 
221 2 285 1 294 1 141 1 296 1 82 1 83 1 84 2 168 2 118 3 59 1 178 1 122 1 192 1 321 1 342 1 61 1 
221 5 91 1 285 2 294 3 141 1 115 1 296 1 165 2 372 1 168 2 84 5 118 10 59 2 178 5 177 2 122 2 192 1 342 1 
221 1 285 1 141 1 115 1 296 1 168 2 118 2 177 1 178 2 192 1 342 1 288 1 
221 2 285 1 294 1 141 1 115 1 296 1 84 1 168 2 279 1 118 3 177 1 178 2 340 1 192 1 342 1 288 1 
221 2 285 1 41 1 294 1 141 3 115 1 296 3 83 1 82 1 84 2 168 6 118 3 59 1 178 1 122 1 192 3 342 3 
157 4 294 7 173 3 353 1 296 5 174 1 82 1 83 2 84 15 279 3 59 3 178 16 177 5 261 1 321 1 61 1 161 1 221 12 224 1 285 5 41 1 141 5 115 1 165 2 245 1 372 2 168 10 118 31 122 3 340 3 154 1 192 5 342 5 288 3 
157 1 294 2 173 1 296 1 84 4 59 1 177 1 178 4 260 1 321 1 61 1 221 2 224 1 141 1 115 1 165 1 245 1 372 1 168 2 118 8 122 1 192 1 342 1 
157 2 294 2 173 1 353 1 296 2 84 5 279 1 59 1 178 6 177 2 260 1 321 1 61 1 161 1 221 3 224 1 285 1 141 2 115 1 165 1 245 1 372 1 168 4 118 11 122 1 192 2 342 2 288 1 
157 1 294 3 173 1 353 1 296 3 83 1 84 8 279 2 59 1 178 9 177 3 260 1 321 1 182 1 61 1 221 4 224 1 285 1 368 1 141 3 115 1 165 1 245 1 372 1 168 6 118 17 122 1 340 2 23 1 192 3 342 3 344 1 288 2 
157 1 294 3 173 1 353 1 296 3 83 1 84 6 279 2 59 1 178 10 177 3 260 1 321 1 182 1 61 1 221 5 224 1 285 2 368 1 141 3 115 1 165 1 245 1 372 1 168 6 118 16 122 1 340 1 23 1 192 3 342 3 344 1 288 2 
157 1 294 2 173 1 296 1 84 4 59 1 177 1 178 4 260 1 321 1 61 1 221 2 224 1 141 1 115 1 165 1 245 1 372 1 168 2 118 8 122 1 192 1 342 1 
157 1 294 1 173 1 296 1 84 4 279 2 178 6 177 2 260 1 182 1 221 2 224 1 285 1 368 1 141 1 115 1 168 2 118 10 340 2 23 1 192 1 342 1 344 1 288 2 
157 1 294 3 173 1 353 1 296 4 83 2 84 7 279 2 59 1 178 10 177 3 260 1 321 1 182 1 61 1 221 5 224 1 285 2 368 1 141 4 115 1 165 1 245 1 372 1 168 8 118 17 122 1 340 1 23 1 192 4 342 4 344 1 288 2 
157 1 294 3 173 1 296 4 83 2 84 5 279 3 178 9 177 3 260 1 182 1 221 6 224 1 285 3 368 1 41 1 141 4 115 1 168 8 118 14 340 2 23 1 192 4 342 4 344 1 288 3 
221 6 285 3 294 3 165 1 372 1 84 4 118 7 59 3 177 1 178 3 122 3 321 1 61 2 
157 1 294 3 173 1 296 4 83 2 84 7 279 2 59 1 178 10 177 3 260 1 321 1 182 1 61 1 221 4 224 1 285 1 368 1 41 1 141 4 115 1 165 1 245 1 372 1 168 8 118 17 122 1 340 1 23 1 192 4 342 4 344 1 288 2 
327 1 15 1 223 1 159 1 374 1 207 1 289 1 
50 1 327 1 15 1 53 1 223 1 207 1 159 1 374 1 137 1 36 1 62 1 289 1 
331 1 55 1 56 1 143 1 214 1 
327 2 223 2 331 1 66 1 113 1 349 1 56 1 143 1 370 1 295 1 207 1 99 1 374 1 10 1 249 1 155 1 74 1 214 1 
327 2 223 2 331 1 66 1 113 3 349 1 56 1 143 1 370 2 295 1 227 1 207 1 128 1 148 1 99 2 374 2 10 1 124 1 249 2 155 1 378 1 49 1 74 1 
327 2 223 2 331 2 113 3 349 1 56 2 143 2 370 2 295 1 227 1 207 1 128 1 334 1 148 1 259 1 99 2 374 2 10 1 124 1 249 2 155 1 378 1 49 1 74 1 
290 1 105 1 349 1 56 1 216 1 197 1 201 1 160 2 325 1 327 1 329 1 223 1 331 1 204 1 113 4 304 1 143 1 370 1 227 1 148 1 210 2 99 1 374 1 73 1 169 1 249 1 124 1 376 1 251 1 155 1 74 1 378 1 
105 1 349 1 56 1 216 1 238 1 197 1 201 1 160 2 325 1 327 1 223 1 331 1 204 1 113 4 304 1 143 1 370 1 227 1 148 1 210 2 99 1 374 1 73 1 169 1 249 1 124 1 376 1 251 1 155 1 74 1 378 1 
331 1 56 1 143 1 155 1 74 1 29 1 
232 1 283 1 330 1 348 1 331 6 303 1 113 3 242 1 56 6 236 1 143 5 79 1 370 1 299 1 99 2 134 1 155 2 74 3 363 1 214 2 
56 1 59 1 10 1 321 1 323 2 61 1 327 2 66 1 331 1 113 1 18 1 165 1 207 2 245 1 168 4 246 1 118 6 122 1 249 1 342 2 74 1 292 1 349 1 294 2 295 1 296 2 258 1 84 3 177 1 178 3 180 1 221 2 223 2 266 1 188 1 303 1 141 2 143 1 370 1 146 1 372 1 149 1 99 1 374 1 271 2 192 2 155 1 
273 5 105 1 106 1 56 1 234 2 196 2 59 1 238 1 197 2 200 1 201 1 9 1 160 3 203 2 162 2 325 2 14 1 327 1 331 1 113 2 204 1 116 1 165 2 210 3 122 1 169 1 73 1 170 1 249 1 251 1 214 1 349 1 216 1 257 1 177 2 89 1 91 1 223 1 304 1 144 1 143 1 306 2 372 1 148 1 374 1 311 4 376 2 
331 2 303 1 113 2 304 1 56 2 143 2 370 1 189 1 299 1 29 1 99 1 155 1 74 2 
334 1 99 1 172 1 331 4 113 1 303 1 56 4 205 1 12 1 143 4 155 1 74 1 214 1 
331 2 113 1 242 1 56 2 143 2 79 1 370 1 227 1 99 1 263 1 312 1 240 1 155 1 74 2 
86 1 248 1 331 1 102 1 56 1 143 1 255 1 155 1 74 1 214 1 
283 1 331 2 303 1 113 1 56 2 236 1 143 2 359 1 99 1 155 1 74 1 
232 1 330 1 172 1 331 5 303 1 113 3 56 5 205 1 236 1 143 4 227 1 99 2 12 1 155 2 74 2 214 1 
93 1 330 1 172 1 331 5 303 1 113 3 56 5 205 1 236 1 143 4 227 1 99 2 12 1 155 2 74 2 214 1 
327 2 223 2 331 1 113 1 349 1 56 1 143 1 370 1 295 1 207 1 259 1 99 1 374 1 10 1 249 1 155 1 74 1 214 1 
331 1 113 1 242 1 56 1 143 1 79 1 370 1 227 1 299 1 99 1 155 1 74 2 363 1 
39 1 302 1 138 1 207 1 206 1 
105 1 349 1 216 1 218 1 128 1 131 1 197 1 201 1 160 2 138 1 325 1 327 1 39 1 223 1 302 1 204 1 114 1 144 1 206 1 148 2 338 1 210 2 374 1 230 1 169 1 249 1 251 1 49 1 
327 1 39 1 223 1 43 1 206 1 374 1 322 1 138 1 362 1 
230 1 138 1 131 1 
55 1 
313 1 367 1 68 1 212 1 104 1 156 1 371 1 
151 1 152 1 212 1 
317 1 313 1 209 2 367 1 1 1 268 1 68 1 212 3 104 1 95 1 156 3 371 1 
313 1 291 1 367 1 68 1 225 1 212 2 104 1 156 2 371 1 
31 1 313 1 222 1 367 1 86 1 248 1 1 1 68 1 212 1 193 1 156 1 
313 1 367 1 1 1 68 1 212 1 104 1 156 1 
367 1 1 1 68 1 212 1 104 2 156 1 371 1 
313 1 247 1 367 2 1 1 68 2 202 1 11 1 212 2 104 1 156 2 
313 2 367 1 1 1 68 1 225 2 57 1 19 1 371 1 31 1 212 3 104 1 156 3 48 1 
76 1 364 1 313 1 367 1 1 1 68 1 225 1 371 1 248 2 86 1 102 1 212 2 104 1 156 2 193 1 
301 1 313 2 291 1 367 2 1 1 68 2 225 2 19 1 371 1 31 1 212 4 104 1 156 4 
313 1 367 1 1 1 68 1 212 1 104 1 156 1 371 1 
365 1 313 3 367 1 268 1 68 1 225 2 95 1 19 1 371 2 31 1 209 1 212 4 104 2 156 4 
313 1 367 1 1 1 68 1 225 1 166 1 371 1 5 1 320 1 212 2 104 1 156 2 
313 1 367 1 1 1 68 1 78 1 268 2 95 1 371 1 209 2 212 3 104 1 156 3 
313 2 7 1 350 1 345 2 
367 1 1 1 68 1 212 1 145 1 156 1 
313 1 367 1 1 1 68 1 225 1 212 2 104 1 57 1 156 2 371 1 
252 1 
313 1 367 1 1 1 68 1 212 1 104 1 156 1 371 1 
313 1 367 1 1 1 68 1 225 1 57 1 371 1 209 1 212 3 104 1 156 3 
365 1 31 1 313 1 19 1 
313 1 104 1 

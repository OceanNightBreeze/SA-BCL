#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 157 323 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 157 159 360 141 172 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 157 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 157 159 360 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 157 159 360 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 157 159 360 141 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 157 159 360 141 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 218 166 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 138 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 138 88 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
74 2 28 2 337 6 57 5 231 1 233 1 9 1 102 3 206 9 208 2 316 1 315 2 81 9 277 1 17 2 115 1 373 1 184 2 162 1 41 1 142 1 20 1 305 4 285 1 286 2 328 1 375 1 48 1 
74 2 28 2 337 6 57 5 231 1 233 1 9 1 102 3 206 9 208 2 316 1 315 2 81 9 277 1 17 2 115 1 373 1 162 1 184 2 41 1 142 1 20 1 305 4 285 1 286 2 328 1 375 1 48 1 
74 2 28 2 337 7 57 6 231 1 233 1 9 1 102 4 206 10 208 2 316 1 315 2 81 10 277 1 17 2 115 1 373 1 162 1 184 2 41 1 142 1 20 1 305 5 285 1 286 2 328 1 375 1 48 1 
74 2 28 2 337 4 57 4 231 1 233 1 9 1 102 2 206 7 208 2 316 1 315 2 81 7 277 1 17 2 115 1 162 1 184 1 41 1 142 1 20 1 305 3 285 1 286 2 328 1 375 1 48 1 
28 1 74 1 337 3 57 3 17 1 373 1 184 2 231 1 20 1 9 1 102 1 206 4 305 2 315 1 81 4 285 1 286 1 328 1 
74 1 28 1 57 1 79 1 41 1 9 1 206 2 208 1 357 1 315 1 316 1 81 2 285 1 286 1 328 1 275 1 
337 1 57 2 162 1 9 1 102 1 206 3 208 1 305 1 315 2 81 3 285 1 286 2 328 1 
4 1 337 7 74 1 28 1 57 5 231 1 9 1 102 3 206 9 208 1 315 2 81 9 17 1 373 1 162 1 184 2 142 1 20 1 305 4 169 1 285 1 286 2 328 1 48 1 
4 1 337 7 74 1 28 1 57 5 231 1 9 1 102 3 206 9 208 1 315 2 81 9 17 1 373 1 162 1 184 2 142 1 20 1 305 4 169 1 285 1 286 2 328 1 48 1 
266 1 365 1 64 1 
326 1 254 2 64 1 
312 2 153 2 336 2 284 1 217 2 128 2 278 2 77 1 
289 1 1 2 3 1 6 2 336 3 90 2 26 1 229 1 77 1 152 1 312 2 203 1 153 3 127 1 31 1 128 2 209 1 131 1 236 1 109 1 237 1 300 1 83 1 348 1 217 2 321 1 278 2 36 1 35 1 164 2 119 1 188 1 306 1 284 1 46 1 144 2 89 1 
312 1 308 1 153 1 336 1 217 1 250 1 128 1 244 1 278 1 77 1 
266 1 267 1 336 1 113 1 67 1 244 1 281 1 163 1 153 1 128 1 171 1 13 1 64 1 156 1 
266 1 267 1 336 1 217 1 67 1 278 1 244 1 281 2 163 2 312 1 153 1 128 1 13 1 64 1 156 1 
7 1 54 1 197 1 281 1 163 1 
266 1 7 1 129 1 197 1 104 1 281 2 163 2 64 1 
7 1 281 1 163 1 
308 1 336 1 217 1 197 1 244 1 278 1 281 1 116 1 163 1 77 1 312 1 153 1 250 1 128 1 
64 1 
266 1 7 1 129 1 197 1 281 2 71 1 163 2 64 1 
266 1 345 1 7 2 84 1 269 1 197 2 340 1 86 1 281 5 163 5 125 1 68 2 175 1 220 2 251 1 129 1 297 1 155 2 64 1 
51 1 289 1 192 1 1 1 300 1 3 1 348 1 336 2 90 1 217 1 278 1 35 1 203 1 119 1 188 1 153 2 31 1 128 1 144 1 299 1 
284 1 365 1 
361 1 336 2 217 1 92 1 278 1 312 1 153 2 284 2 128 2 
51 1 258 1 66 1 
289 1 1 1 300 1 348 1 3 1 336 1 90 1 93 1 35 1 203 1 119 1 153 1 188 1 31 1 284 1 144 1 
312 1 192 1 153 3 336 3 284 1 217 3 128 3 278 3 
308 1 153 1 336 1 217 1 128 1 244 1 278 1 
361 1 312 1 153 1 336 1 217 1 128 1 244 1 278 1 92 1 
289 1 192 1 267 1 1 1 3 1 6 2 336 4 90 1 26 1 92 1 244 1 199 1 77 1 203 1 312 2 153 4 31 1 128 3 209 1 13 1 131 1 105 1 156 1 299 1 236 1 109 1 237 1 300 1 83 1 348 1 217 3 321 1 67 1 278 3 36 1 35 1 281 1 163 1 164 1 119 1 188 1 306 1 284 1 144 1 
192 1 153 2 143 1 336 2 284 1 217 1 128 2 171 1 278 1 
192 2 267 1 336 3 217 3 67 1 92 1 244 1 278 3 199 1 281 1 163 1 312 1 153 3 128 3 252 1 13 1 64 1 156 1 299 1 
192 1 51 1 258 1 336 2 217 2 92 1 278 2 312 1 153 2 128 2 
289 1 1 1 300 1 348 1 3 1 336 1 90 1 35 1 203 1 119 1 153 1 188 1 31 1 284 1 144 1 
289 1 1 1 300 1 3 1 336 1 90 1 198 1 35 1 119 1 153 1 188 1 313 1 31 1 284 1 144 1 
51 2 268 1 6 2 245 1 98 1 152 2 209 1 32 1 131 1 298 1 236 1 237 2 258 2 34 1 136 1 238 1 66 2 321 1 36 1 324 1 279 1 164 4 306 1 265 1 
153 1 336 1 217 1 128 1 244 1 278 1 156 1 19 1 
192 2 193 1 336 5 349 1 217 4 278 4 92 1 312 1 153 5 143 1 284 1 128 5 171 1 299 1 
308 1 153 2 336 2 217 2 128 2 244 1 278 2 19 1 
80 1 228 1 
80 1 228 1 
356 1 124 1 
356 1 124 1 
356 1 124 1 
205 1 80 1 228 1 
80 1 16 1 228 1 
24 1 80 2 356 1 228 2 342 1 124 1 
205 1 80 1 228 1 
205 1 80 1 228 1 
80 1 228 1 58 1 
80 1 228 1 58 1 
80 1 228 1 58 1 
213 1 179 2 0 1 24 1 228 2 281 2 302 1 163 2 242 1 100 1 207 1 80 2 374 2 21 1 223 2 49 2 243 2 64 1 50 3 
0 1 336 2 228 1 201 1 99 1 153 2 59 1 80 1 128 2 179 1 134 1 217 2 16 1 276 1 278 2 281 1 163 1 283 1 355 1 284 1 374 1 223 1 49 1 50 1 
28 1 74 1 17 1 
28 1 74 1 275 1 
346 1 133 1 219 1 74 3 17 2 275 1 
133 1 219 1 74 2 17 1 94 1 275 1 
133 1 219 2 74 2 17 1 275 1 
266 1 7 1 269 1 197 4 245 1 95 2 232 2 12 1 154 2 254 3 63 1 129 1 155 1 297 3 64 2 367 1 345 2 276 1 324 1 279 1 281 5 163 5 68 1 140 1 326 1 355 1 283 1 220 1 120 1 121 1 145 1 265 1 
266 1 308 1 7 1 54 1 336 1 197 2 244 1 77 1 204 1 312 1 153 1 60 1 343 1 250 1 128 1 64 1 217 1 278 1 281 2 116 1 163 2 
266 1 197 2 245 1 95 1 232 2 154 2 63 1 254 4 155 1 297 3 64 3 367 1 345 2 84 1 279 1 324 1 281 3 163 3 68 1 326 2 283 1 220 1 120 1 121 1 145 1 265 1 
266 1 197 3 245 2 95 2 29 1 232 4 154 4 254 7 63 1 155 1 297 5 64 4 367 1 345 4 84 1 279 2 324 2 281 4 163 4 68 1 326 3 283 2 220 1 221 1 120 2 121 1 145 1 225 1 265 2 
188 1 111 1 365 1 
188 1 37 1 
53 1 
289 1 188 1 
289 1 188 3 300 1 111 2 230 1 146 1 
289 1 188 1 300 1 
188 1 108 1 
23 1 237 1 34 2 218 1 136 3 114 1 339 1 324 1 76 1 152 3 164 4 103 2 190 1 253 1 264 1 212 1 
23 1 237 1 34 2 218 1 136 3 114 1 339 1 324 1 76 1 152 3 164 4 103 2 190 1 253 1 264 1 212 1 
23 1 237 1 34 2 218 1 136 3 114 1 339 1 324 1 76 1 152 3 164 4 103 2 190 1 253 1 264 1 210 1 212 1 
23 2 6 2 195 1 339 5 245 3 294 1 200 1 76 1 152 15 10 1 103 3 253 2 209 1 131 1 106 4 212 2 237 13 135 3 34 5 218 1 136 10 259 1 114 1 36 1 279 3 324 4 161 1 164 28 354 1 190 1 306 1 120 3 264 2 265 3 
23 1 25 1 6 4 339 1 76 1 152 4 103 2 253 1 209 2 131 2 366 1 212 1 237 2 34 3 136 4 259 1 218 1 114 1 36 2 324 1 164 6 306 2 264 1 
1 1 3 1 90 1 91 1 337 1 28 1 74 2 57 1 9 1 206 2 208 1 295 1 31 1 315 1 81 2 132 1 275 1 368 1 110 1 346 1 257 1 137 1 17 1 18 1 144 1 285 1 286 1 328 1 331 1 191 1 
1 1 3 1 90 1 91 1 28 1 337 2 74 2 57 1 246 1 9 1 206 3 208 1 295 1 31 1 315 1 81 3 275 1 368 1 346 1 215 1 257 1 137 1 352 1 17 1 18 1 144 1 285 1 286 1 331 1 191 1 
1 1 3 1 90 1 337 2 74 2 28 1 57 1 246 1 9 1 206 2 208 1 295 1 31 1 81 2 275 1 368 1 346 1 257 1 352 1 17 1 18 1 144 1 285 1 331 1 191 1 
289 1 369 1 1 1 215 1 3 1 257 2 90 1 239 1 182 1 35 1 188 1 11 1 206 1 208 2 31 1 315 1 81 1 144 1 224 1 286 1 331 2 287 1 191 2 
1 1 3 1 90 1 91 1 28 1 74 2 206 1 208 1 295 1 31 1 315 1 81 1 132 1 275 1 368 1 346 1 257 1 137 1 352 1 17 1 18 1 144 1 286 1 328 1 331 1 191 1 
240 1 
289 1 333 1 1 2 3 1 7 2 90 2 336 1 8 1 244 1 153 1 11 1 296 1 13 1 297 2 155 1 156 1 345 2 157 1 113 1 67 1 163 3 68 1 165 1 220 1 70 1 171 1 267 1 173 1 269 1 78 1 363 1 273 1 31 1 128 1 129 1 178 1 182 1 323 1 35 2 281 3 188 1 144 2 145 1 330 1 332 2 
267 1 7 2 336 1 8 1 113 1 67 1 244 1 281 3 163 3 78 1 363 1 153 1 165 1 70 1 128 1 129 1 171 1 13 1 71 1 14 1 156 1 332 2 
267 1 266 1 7 1 336 1 8 1 244 1 78 1 363 1 153 1 128 1 129 1 13 1 156 1 319 1 64 1 113 1 67 1 281 3 163 3 165 1 70 1 171 1 71 1 332 3 
267 1 266 1 336 1 7 2 8 1 244 1 78 1 363 1 153 1 128 1 129 1 13 1 14 1 156 1 319 1 64 1 347 1 113 1 67 1 281 3 163 3 165 1 70 1 171 1 71 1 332 3 
360 1 267 1 333 1 7 3 336 1 8 1 172 1 173 1 269 1 244 1 78 1 273 1 363 1 153 1 62 1 128 1 129 1 13 1 297 1 155 1 14 2 156 1 345 1 347 2 157 1 113 1 159 1 67 1 281 3 163 3 68 1 141 1 165 1 220 1 70 1 171 1 71 1 332 2 
267 1 333 1 336 1 8 1 173 1 269 1 244 1 78 1 363 1 273 1 153 1 128 1 13 1 297 1 155 1 156 1 345 1 157 1 113 1 67 1 281 2 163 2 68 1 165 1 220 1 70 1 171 1 332 2 
267 1 360 1 333 1 336 1 8 1 173 1 269 1 244 1 78 1 273 1 363 1 153 1 62 1 128 1 13 1 297 1 155 1 156 1 345 1 157 1 113 1 159 1 67 1 281 2 163 2 68 1 165 1 220 1 70 1 171 1 332 2 
267 1 360 1 333 1 336 1 8 1 173 1 269 1 244 1 78 1 273 1 363 1 153 1 62 1 128 1 13 1 297 1 155 1 156 1 345 1 157 1 113 1 159 1 67 1 281 2 163 2 68 1 165 1 220 1 70 1 171 1 332 2 
266 1 267 1 333 2 149 1 7 4 336 1 8 1 173 2 269 1 244 1 272 2 78 1 126 2 363 1 153 1 128 1 129 2 254 2 130 1 13 1 297 1 155 1 14 2 64 1 319 2 156 1 345 1 347 2 157 1 113 1 159 1 67 1 281 4 163 4 68 1 40 1 165 1 220 1 70 1 171 1 332 4 
267 1 360 1 333 1 336 1 7 1 8 1 173 1 269 1 244 1 78 1 273 1 363 1 153 1 62 1 128 1 13 1 297 1 155 1 14 1 156 1 319 1 345 1 347 1 157 1 113 1 159 1 67 1 281 2 163 2 68 1 141 1 165 1 220 1 70 1 171 1 332 3 
267 1 360 1 333 1 336 1 7 1 8 1 173 1 269 1 244 1 78 1 273 1 363 1 153 1 62 1 128 1 13 1 297 1 155 1 14 1 156 1 319 1 345 1 347 1 157 1 113 1 159 1 67 1 281 2 163 2 68 1 141 1 165 1 220 1 70 1 171 1 332 3 
266 1 267 1 333 2 7 4 336 1 8 1 173 2 269 1 244 1 272 2 78 1 126 2 363 1 153 1 128 1 129 2 254 2 13 1 130 1 297 1 155 1 14 2 64 1 319 2 156 1 345 1 347 2 180 1 157 1 113 1 67 1 281 4 163 4 68 1 165 1 220 1 70 1 171 1 332 4 
51 1 23 1 236 1 237 1 258 1 34 2 6 2 218 1 136 2 66 1 238 1 321 1 114 1 36 1 324 1 76 1 152 2 164 3 103 1 306 1 284 1 365 1 253 1 209 1 131 1 
51 11 6 4 291 1 174 1 339 1 245 1 294 1 152 8 209 2 131 2 106 3 236 1 237 6 83 1 258 4 34 1 135 3 136 2 66 11 321 2 36 2 241 1 279 2 324 2 187 1 164 14 354 1 327 1 306 2 284 1 120 2 46 1 265 1 
289 1 192 1 1 1 3 1 90 1 336 2 6 2 309 1 93 1 293 1 203 1 152 1 153 2 31 1 128 1 209 1 131 1 299 1 236 1 237 1 300 1 83 1 348 1 258 1 217 1 321 1 278 1 35 1 36 1 241 1 119 1 164 2 188 1 306 1 284 1 46 1 144 1 358 1 
192 1 289 2 51 7 1 3 2 2 3 2 90 3 6 6 336 3 339 4 245 2 97 2 203 2 152 9 153 3 103 1 253 1 209 3 299 1 109 2 300 2 158 1 348 2 258 7 218 1 217 1 66 7 352 1 114 1 164 17 119 2 306 3 120 2 265 2 23 1 227 2 27 1 76 1 31 2 128 1 131 3 236 3 237 8 83 1 371 1 34 4 136 8 321 3 278 1 35 1 241 1 36 3 279 2 324 3 188 2 284 1 46 1 144 3 329 2 
289 3 192 1 1 7 3 3 6 4 90 7 336 1 56 1 247 1 202 1 152 1 153 1 11 1 61 1 209 2 107 1 110 1 300 1 217 1 352 1 303 1 164 2 261 1 306 2 168 1 122 1 31 4 128 1 131 2 317 1 236 2 237 1 83 1 181 1 238 1 182 1 321 2 278 1 36 2 35 2 188 4 46 1 144 6 89 1 
51 1 6 2 336 1 92 1 245 1 312 1 152 1 153 1 128 1 209 1 131 1 236 1 237 2 258 1 34 1 15 1 136 1 217 1 66 1 321 1 278 1 36 1 241 1 279 1 324 1 164 3 306 1 120 1 265 1 
51 1 236 1 258 1 6 2 136 1 66 1 238 1 321 1 339 1 36 1 279 1 324 1 98 1 152 2 164 2 306 1 209 1 131 1 
51 1 236 1 237 2 258 1 268 1 34 1 6 2 136 1 66 1 238 1 321 1 36 1 245 1 164 2 306 1 209 1 131 1 265 1 
51 2 6 2 339 1 245 1 152 2 209 1 131 1 236 1 237 2 258 2 34 1 136 2 238 1 66 2 321 1 36 1 324 1 279 1 164 4 306 1 120 1 265 1 
51 1 236 1 258 1 6 2 136 1 66 1 321 1 339 1 36 1 279 1 324 1 98 1 152 2 164 2 306 1 61 1 209 1 131 1 
51 1 236 1 237 2 258 1 268 1 34 1 6 2 136 1 66 1 321 1 36 1 245 1 164 2 306 1 61 1 209 1 131 1 265 1 
51 2 6 2 339 1 245 1 152 2 61 1 209 1 131 1 236 1 237 2 258 2 34 1 136 2 66 2 321 1 36 1 324 1 279 1 164 4 306 1 120 1 265 1 
51 2 236 1 237 2 258 2 34 1 6 2 136 2 66 2 321 1 339 1 36 1 245 1 279 1 324 1 152 2 164 4 306 1 120 1 209 1 131 1 265 1 
289 1 1 1 3 1 90 1 336 1 6 2 152 1 203 1 153 1 31 1 209 1 131 1 109 1 236 1 237 1 300 1 83 1 348 1 321 1 35 1 36 1 164 2 119 1 188 1 306 1 284 1 46 1 144 1 
289 1 1 1 3 1 90 1 336 1 6 2 198 1 151 1 152 1 153 1 313 1 31 1 209 1 131 1 236 1 237 1 300 1 83 1 321 1 35 1 36 1 164 2 119 1 188 1 306 1 284 1 46 1 144 1 
51 2 6 2 339 1 245 1 152 2 209 1 131 1 236 1 237 2 258 2 34 1 136 2 66 2 321 1 36 1 241 1 324 1 279 1 164 4 306 1 120 1 265 1 
51 2 289 1 1 1 3 1 90 1 336 1 6 2 339 1 245 1 97 1 152 2 203 1 153 1 31 1 209 1 131 1 109 1 236 1 237 2 110 1 300 1 258 2 348 1 34 1 136 2 66 2 321 1 36 1 324 1 279 1 164 4 119 1 188 1 306 1 120 1 144 1 265 1 
51 1 6 2 336 1 92 1 339 1 245 1 312 1 152 2 153 1 128 1 209 1 131 1 236 1 237 1 258 1 136 1 217 1 66 1 321 1 278 1 36 1 241 1 279 1 324 1 260 1 164 3 306 1 120 1 265 1 
147 1 25 1 5 1 6 4 123 1 339 3 245 3 294 1 152 9 176 1 209 2 82 2 131 2 106 2 234 1 211 1 214 1 237 10 34 3 135 1 136 6 36 2 279 3 324 3 353 2 164 19 354 1 306 2 120 3 265 3 
25 1 5 2 6 6 123 1 339 2 245 2 152 14 274 1 364 1 176 1 209 3 82 4 131 3 234 2 106 2 211 1 256 1 237 12 34 2 135 2 259 2 136 4 36 3 279 3 324 3 38 1 139 1 353 1 164 26 43 1 354 2 306 3 120 3 265 2 
147 1 6 6 5 2 339 4 245 4 294 1 152 19 103 1 253 1 209 3 106 4 211 1 256 1 112 1 259 1 218 1 114 1 353 1 164 38 354 3 306 3 120 4 265 4 23 1 25 1 123 1 76 1 274 1 364 1 176 1 131 3 82 4 234 1 237 19 135 3 34 4 136 8 36 3 324 5 279 4 38 1 139 1 43 1 
147 1 23 1 25 1 5 2 6 8 123 1 339 3 245 3 294 1 76 1 152 19 274 1 364 1 103 1 176 1 253 1 209 4 82 4 131 4 106 4 234 1 211 1 256 1 237 16 112 1 34 4 135 3 218 1 259 2 136 7 114 1 36 4 279 4 324 5 38 1 139 1 353 1 43 1 164 35 354 3 306 4 120 4 265 3 
23 1 25 1 5 1 6 4 123 1 339 7 245 7 294 2 76 1 152 26 274 1 364 1 103 1 176 1 253 1 209 2 82 4 131 2 106 4 234 1 211 1 256 1 237 23 34 7 135 4 218 1 259 1 136 14 114 1 36 2 279 7 324 8 38 1 139 1 353 1 187 2 43 1 164 49 354 2 306 2 120 7 265 7 
213 1 179 1 24 1 101 1 80 1 374 1 228 1 223 1 49 1 302 1 
16 1 99 1 
179 1 80 1 374 1 228 1 223 1 183 1 49 1 288 1 311 1 
213 1 0 1 179 1 24 1 228 1 281 1 302 1 163 1 242 1 100 1 207 1 80 1 374 1 223 1 49 1 243 1 64 1 50 2 
213 1 0 1 179 1 24 1 228 1 281 1 302 1 163 1 242 1 100 1 207 1 80 1 374 1 223 1 49 1 243 1 64 1 50 2 
213 1 0 1 179 1 24 1 228 1 281 1 302 1 163 1 242 1 100 1 207 1 80 1 374 1 223 1 49 1 243 1 64 1 50 2 
205 1 189 1 342 1 
205 1 189 1 342 1 
301 1 58 1 
301 1 58 1 342 1 
134 1 201 1 
336 2 228 1 197 1 201 1 99 1 100 1 153 2 59 1 80 1 128 2 179 1 134 1 16 1 217 2 276 1 322 1 278 2 281 1 163 1 283 1 355 1 284 1 374 1 223 1 49 1 243 1 50 1 
205 1 189 1 
301 1 58 1 342 1 
289 1 1 2 3 1 335 1 90 2 336 2 6 2 271 1 152 1 153 2 31 1 128 2 209 1 131 1 107 1 236 1 237 1 83 1 181 1 372 1 321 1 351 1 36 1 241 1 164 2 188 1 306 1 167 1 46 1 144 2 89 2 
346 1 1 2 110 1 33 1 3 1 90 2 91 1 28 1 74 2 352 1 17 1 18 1 280 1 31 1 222 1 144 2 275 1 331 1 368 1 
346 1 1 1 33 1 3 1 90 1 91 1 28 1 74 2 352 1 17 1 270 1 18 1 31 1 144 1 275 1 331 1 368 1 
289 1 1 1 3 1 90 1 196 1 182 1 35 1 188 1 11 1 31 1 222 1 144 1 224 1 331 1 
346 1 1 1 33 1 3 1 90 1 91 1 28 1 74 2 352 1 17 1 18 1 280 1 31 1 222 1 144 1 275 1 331 1 368 1 
263 1 
266 1 345 1 175 1 365 1 297 1 86 1 64 1 
345 1 273 1 220 1 269 1 297 1 155 1 68 1 
289 3 148 1 1 3 3 3 90 3 7 5 55 2 341 1 245 2 154 6 254 12 297 9 155 4 255 2 64 8 108 2 345 8 110 1 300 3 216 2 111 2 350 1 67 2 163 5 68 4 304 2 220 4 120 2 69 2 307 2 265 2 266 2 269 4 230 1 30 1 232 6 175 1 31 4 129 3 370 1 35 1 37 3 279 2 324 2 86 1 281 5 87 2 326 6 42 2 188 10 144 3 145 2 329 2 330 1 
266 2 55 1 7 1 269 2 245 2 232 5 274 1 364 1 249 1 154 5 129 1 254 6 297 8 155 2 106 1 318 1 64 5 345 5 256 1 135 1 279 2 324 2 281 1 163 1 139 1 68 2 326 3 43 1 354 1 220 2 120 2 69 2 145 1 330 1 265 2 
345 2 23 1 218 1 269 1 245 1 324 1 281 1 163 1 68 1 62 1 220 1 166 1 253 1 69 1 297 2 155 1 
266 1 345 1 175 1 220 1 269 1 297 1 155 1 86 1 64 1 68 1 
345 5 55 1 279 2 324 2 245 2 326 5 232 5 120 2 69 2 154 5 254 10 297 5 329 1 64 5 265 2 
266 1 7 1 129 1 281 1 163 1 64 1 
289 1 148 1 1 4 3 1 90 4 7 4 269 1 11 1 31 1 296 1 129 2 155 2 297 2 178 1 345 2 84 1 350 2 182 1 35 2 281 3 163 3 68 2 188 1 220 2 170 1 144 4 359 1 145 2 330 2 
289 1 1 1 3 1 6 2 90 1 336 3 26 1 77 1 312 2 203 1 153 3 31 1 128 2 209 1 131 1 109 1 236 1 237 1 300 1 83 1 348 1 217 2 321 1 278 2 35 1 36 1 164 1 119 1 188 1 306 1 284 1 144 1 
345 2 266 2 269 1 68 1 326 2 232 2 103 1 220 1 154 2 254 4 155 1 297 1 145 1 330 1 64 4 
334 1 374 1 223 1 
134 1 374 1 223 1 85 1 302 1 
334 1 374 1 223 1 
334 1 374 1 223 1 
374 1 223 1 117 1 
374 1 223 1 117 1 
374 1 223 1 117 1 
374 1 223 1 
80 1 228 1 
23 1 237 2 34 2 6 4 218 1 136 3 259 1 114 1 339 1 36 2 324 1 76 1 152 3 164 5 103 1 306 2 253 1 209 2 131 2 
23 1 237 1 34 2 136 2 218 1 114 1 324 1 76 1 152 2 164 3 103 1 365 1 253 1 
237 2 150 1 34 1 6 2 136 2 36 1 339 1 245 1 279 1 324 1 152 2 164 4 306 1 120 1 209 1 131 1 265 1 
237 4 34 1 135 1 136 2 339 1 245 1 279 1 324 1 294 1 152 3 164 7 354 1 120 1 106 2 265 1 
23 2 6 4 339 4 245 2 294 1 76 1 152 10 103 1 253 2 209 2 131 2 106 2 237 10 135 2 34 5 218 1 136 9 259 2 114 1 36 2 324 3 279 2 187 1 164 20 327 1 306 2 45 1 120 2 265 2 
164 1 237 1 106 1 
152 1 164 1 135 1 
237 3 150 1 6 2 34 2 136 3 36 1 339 1 279 1 324 1 245 1 152 3 164 6 306 1 120 1 209 1 131 1 329 1 265 1 
25 1 6 2 339 1 245 2 152 6 274 1 364 1 209 1 131 1 106 1 237 6 256 1 135 1 34 1 136 2 36 1 279 2 324 2 139 1 164 12 43 1 354 1 306 1 120 2 265 2 
152 1 164 1 218 1 324 1 
23 1 237 2 34 1 6 2 136 2 259 1 114 1 339 1 36 1 76 1 152 1 164 3 306 1 45 1 253 1 209 1 131 1 
23 1 237 3 25 1 6 2 34 2 136 4 218 1 36 1 339 2 324 2 245 1 152 4 164 7 306 1 166 1 253 1 209 1 131 1 
25 1 6 2 136 1 36 1 339 1 279 1 324 1 152 2 164 2 306 1 209 1 131 1 
237 2 25 1 34 1 6 2 136 2 36 1 339 1 245 1 279 1 324 1 152 2 164 4 306 1 120 1 209 1 131 1 265 1 
147 1 23 1 237 2 25 1 6 6 34 1 259 1 136 2 36 3 339 1 152 1 164 3 306 3 45 1 253 1 209 3 131 3 
23 2 147 1 25 1 150 1 6 10 195 1 339 5 245 3 294 1 76 1 152 14 10 1 103 1 253 2 209 5 131 5 106 4 237 14 135 3 34 6 218 2 259 2 136 11 114 1 36 5 279 3 324 5 161 1 164 28 354 1 306 5 45 1 120 3 265 3 
23 1 25 1 6 2 76 1 152 3 274 1 103 1 253 1 209 1 131 1 106 1 237 2 135 1 34 2 136 2 218 1 114 1 36 1 324 1 164 5 354 1 306 1 
23 1 25 1 150 1 6 4 339 1 294 1 76 1 152 5 274 1 103 1 253 1 209 2 131 2 106 2 237 3 34 2 135 1 218 1 136 3 114 1 36 2 279 1 324 2 164 8 354 1 306 2 120 1 
23 1 25 1 150 1 6 6 339 1 245 2 76 1 152 8 274 1 364 1 103 1 253 1 209 3 131 3 106 1 237 8 256 1 135 1 34 3 218 1 136 4 259 1 114 1 36 3 279 2 324 3 139 1 164 16 43 1 354 1 306 3 120 2 265 2 
23 1 25 1 150 1 6 6 339 2 245 1 76 1 152 9 274 1 364 1 103 1 253 1 209 3 131 3 106 1 237 5 256 1 135 1 34 3 218 1 259 1 136 5 114 1 36 3 279 2 324 3 139 1 164 14 43 1 354 1 306 3 120 2 265 1 
23 1 25 1 6 2 76 1 152 3 274 1 103 1 253 1 209 1 131 1 106 1 237 2 135 1 34 2 136 2 218 1 114 1 36 1 324 1 164 5 354 1 306 1 
25 1 6 2 339 1 245 2 152 6 274 1 364 1 209 1 131 1 106 1 237 6 256 1 135 1 34 1 136 2 36 1 279 2 324 2 139 1 164 12 43 1 354 1 306 1 120 2 265 2 
23 1 25 1 150 1 6 8 339 2 245 1 76 1 152 9 274 1 364 1 103 1 253 1 209 4 131 4 106 1 256 1 237 6 135 1 34 3 218 1 136 5 259 2 114 1 36 4 279 2 324 3 139 1 164 15 43 1 354 1 306 4 120 2 265 1 
147 1 25 1 6 8 339 3 245 2 152 9 274 1 364 1 209 4 131 4 106 1 256 1 237 7 135 1 34 3 136 6 259 2 36 4 279 3 324 3 139 1 164 16 43 1 354 1 306 4 120 3 265 2 
23 2 237 2 34 4 136 7 218 2 114 1 339 3 245 1 324 3 76 1 152 5 164 7 103 1 166 1 253 2 
23 1 147 1 25 1 6 8 339 1 245 1 76 1 152 9 274 1 364 1 103 1 253 1 209 4 131 4 106 1 256 1 237 6 135 1 34 3 218 1 136 4 259 2 114 1 36 4 279 2 324 3 139 1 164 15 43 1 354 1 306 4 120 2 265 1 
153 1 143 1 336 1 284 1 128 1 171 1 73 1 
52 1 186 1 153 1 44 1 143 1 336 1 284 1 128 1 344 1 171 1 73 1 185 1 
289 1 1 1 188 1 11 1 3 1 31 1 90 1 365 1 182 1 144 1 35 1 
289 1 192 1 1 1 300 1 3 1 336 2 90 1 217 1 278 1 35 1 203 1 119 1 188 1 153 2 31 1 284 1 128 1 144 1 
267 1 289 2 192 1 1 1 300 2 3 1 336 2 90 1 217 2 350 1 244 1 278 1 87 1 203 1 119 1 188 3 153 2 31 1 284 1 128 2 144 1 156 1 108 1 
192 1 289 2 267 1 1 2 3 1 90 2 336 2 198 1 244 1 153 2 314 1 31 1 128 2 156 1 108 1 300 2 217 2 350 1 278 1 87 1 119 1 188 3 284 1 144 2 
289 1 266 1 1 3 3 1 7 1 90 3 310 1 314 1 31 1 64 1 108 1 300 1 111 1 350 1 67 1 35 1 37 1 281 2 163 2 87 1 188 4 144 3 377 1 
266 1 289 1 1 3 300 1 111 1 3 1 90 3 7 1 350 1 67 1 35 1 37 1 281 2 163 2 87 1 188 4 314 1 31 1 144 3 307 1 64 1 108 1 
1 1 3 1 31 1 90 1 144 1 303 1 
289 2 110 1 1 6 300 1 181 1 3 2 90 6 194 1 352 1 35 2 230 1 303 1 202 1 261 1 188 3 31 3 168 1 144 5 317 1 122 1 
51 1 23 1 289 1 192 1 1 1 3 1 227 1 336 2 6 4 90 1 76 1 271 1 97 1 152 2 203 1 153 2 103 1 31 1 253 1 128 1 209 2 131 2 236 2 109 1 237 1 110 1 300 1 258 1 348 1 34 2 218 1 136 2 217 1 66 1 321 2 114 1 278 1 36 2 241 1 324 1 164 3 119 1 188 1 306 2 284 1 144 1 
266 1 1 1 148 1 90 1 7 2 269 2 197 1 175 1 129 1 297 1 155 2 255 1 64 1 345 1 216 1 111 1 67 1 35 1 37 1 86 1 281 3 163 3 68 2 42 1 188 2 220 2 144 1 307 1 
289 1 110 1 1 2 300 1 111 1 3 1 90 2 230 1 303 1 30 1 188 2 31 2 144 2 
289 1 1 4 110 1 3 1 90 4 182 1 35 1 188 1 11 1 314 1 31 1 47 1 144 4 
289 1 1 2 300 1 3 1 90 2 350 1 56 1 27 1 247 1 202 1 261 1 188 1 31 2 144 2 
1 1 3 1 31 1 90 1 144 1 28 1 74 1 35 1 275 1 368 1 
289 1 110 1 1 2 181 1 3 1 90 2 372 1 352 1 188 1 31 1 144 2 
289 2 1 5 110 1 181 1 3 2 90 5 350 1 182 1 35 1 188 3 11 1 31 2 168 1 47 1 144 4 122 1 
289 2 1 5 110 1 181 1 3 2 90 5 350 1 182 1 338 1 35 1 188 3 11 1 31 2 47 1 144 4 122 1 
289 1 192 1 1 1 300 1 3 1 336 2 90 1 217 1 198 1 278 1 35 1 119 1 188 1 153 2 31 1 284 1 128 1 144 1 
289 1 1 1 300 1 3 1 90 1 194 1 350 1 230 1 202 1 261 1 188 1 31 2 144 1 
160 1 351 1 138 1 75 1 
320 1 75 1 88 1 
160 1 351 1 138 1 75 2 
320 1 160 1 197 1 351 1 138 1 281 1 177 1 75 2 163 1 88 1 
9 1 365 1 285 1 57 1 
9 1 206 1 315 1 81 1 285 1 57 1 286 1 
206 1 208 1 191 1 
57 1 282 1 118 1 41 2 9 1 206 3 315 1 81 3 285 1 286 1 328 1 72 1 
9 1 206 2 315 1 81 2 285 1 337 1 57 1 286 1 184 1 
74 1 28 1 57 1 17 1 20 1 206 1 305 1 315 1 81 1 286 1 328 1 
206 1 315 1 81 1 285 1 57 1 286 1 328 1 
9 1 206 1 315 1 81 1 285 2 286 1 328 1 
290 1 57 1 206 2 315 2 81 2 285 1 22 1 286 2 328 1 376 1 
337 2 57 2 142 1 9 1 102 1 206 3 305 1 315 1 81 3 285 1 286 1 328 1 48 1 
346 1 74 2 28 1 337 1 57 1 17 1 325 1 9 1 206 2 315 1 81 2 285 1 286 1 328 1 275 1 
337 2 57 2 373 1 184 1 9 1 102 1 206 4 305 1 315 2 81 4 285 1 286 2 328 1 
9 1 206 1 315 1 81 1 285 1 57 1 286 1 328 1 
337 2 57 3 282 1 41 1 118 1 9 2 262 1 102 1 206 4 305 1 315 1 81 4 285 2 286 1 
65 1 337 1 57 1 362 1 9 1 206 2 315 1 169 1 81 2 285 1 286 1 328 1 
57 1 282 2 118 1 248 1 41 2 9 1 206 3 315 1 81 3 285 1 286 1 328 1 
226 1 57 2 96 1 235 2 
39 1 206 1 315 1 81 1 286 1 328 1 
9 1 206 2 315 1 81 2 285 1 337 1 57 1 286 1 328 1 48 1 
292 1 
9 1 206 1 315 1 81 1 285 1 57 1 286 1 328 1 
337 1 57 1 41 1 9 1 206 3 315 1 81 3 285 1 286 1 328 1 48 1 
262 1 102 1 305 1 57 1 
285 1 57 1 

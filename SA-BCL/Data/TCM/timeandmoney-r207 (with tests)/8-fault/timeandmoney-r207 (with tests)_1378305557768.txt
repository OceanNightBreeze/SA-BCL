#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 366 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 217 44 274 102 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 63 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
150 9 53 1 335 1 184 1 270 2 159 1 233 1 364 2 162 1 131 1 88 1 276 1 321 2 239 1 136 6 91 3 327 5 371 1 171 2 141 2 328 1 115 2 219 4 22 1 24 2 204 1 50 1 378 9 
150 9 53 1 335 1 184 1 270 2 159 1 233 1 364 2 162 1 131 1 88 1 276 1 321 2 239 1 136 6 91 3 327 5 371 1 171 2 141 2 328 1 115 2 219 4 22 1 24 2 204 1 50 1 378 9 
150 10 53 1 335 1 184 1 270 2 159 1 233 1 364 2 162 1 131 1 88 1 276 1 321 2 239 1 136 7 91 4 327 6 371 1 171 2 141 2 328 1 115 2 219 5 22 1 24 2 204 1 50 1 378 10 
150 7 335 1 184 1 270 2 159 1 233 1 364 2 162 1 131 1 88 1 276 1 321 2 239 1 136 4 91 2 327 4 371 1 171 2 141 1 328 1 115 2 219 3 22 1 24 2 204 1 50 1 378 7 
150 4 53 1 136 3 335 1 91 1 327 3 171 1 184 1 270 1 141 2 115 1 219 2 233 1 364 1 24 1 131 1 204 1 378 4 
76 1 150 2 321 1 239 1 335 1 327 1 42 1 184 1 270 1 115 1 304 1 364 1 24 1 131 1 378 2 50 1 
150 3 321 1 136 1 335 1 91 1 327 2 184 1 115 2 219 1 159 1 364 2 131 1 378 3 
225 1 150 9 53 1 335 1 184 1 270 1 159 1 233 1 364 2 131 1 321 1 136 7 91 3 327 5 371 1 171 1 141 2 115 2 219 4 264 1 22 1 24 1 204 1 378 9 
225 1 150 9 53 1 335 1 184 1 270 1 159 1 233 1 364 2 131 1 321 1 136 7 91 3 327 5 371 1 171 1 141 2 115 2 219 4 264 1 22 1 24 1 204 1 378 9 
322 1 147 1 365 1 
252 1 147 1 217 2 
0 1 360 2 269 1 288 2 8 2 55 2 86 2 291 2 
224 1 0 1 78 1 269 1 288 2 289 1 334 1 153 1 4 1 55 2 28 1 249 1 291 2 337 2 103 1 181 1 185 1 360 3 250 1 272 2 57 1 56 1 361 2 8 3 86 2 132 1 369 1 300 1 325 1 14 1 15 2 70 1 45 1 376 1 375 2 46 1 25 1 
0 1 360 1 288 1 89 1 177 1 8 1 190 1 55 1 86 1 291 1 
322 1 208 1 179 1 336 1 92 1 341 1 360 1 8 1 147 1 161 1 265 1 190 1 47 1 86 1 
288 1 322 1 208 1 55 1 291 1 92 2 341 2 360 1 8 1 147 1 161 1 265 1 190 1 47 1 86 1 
7 1 245 1 35 1 92 1 341 1 
7 1 245 1 322 1 147 1 203 1 41 1 92 2 341 2 
245 1 92 1 341 1 
0 1 288 1 89 1 177 1 55 1 291 1 92 1 341 1 7 1 359 1 360 1 8 1 190 1 86 1 
147 1 
7 1 245 1 322 1 147 1 41 1 149 1 92 2 341 2 
223 1 205 2 245 2 368 1 322 1 64 1 240 2 41 1 92 5 341 5 7 2 211 1 346 1 147 1 9 1 222 1 23 1 38 2 234 1 
269 1 365 1 
288 1 269 2 55 1 291 1 360 2 273 1 8 2 86 2 10 1 
342 1 126 1 310 1 
269 1 289 1 300 1 334 1 325 1 14 1 28 1 360 1 272 1 56 1 45 1 361 1 8 1 145 1 375 1 376 1 
311 1 288 1 300 1 289 1 334 1 325 1 14 1 28 1 55 1 342 1 360 2 272 1 45 1 56 1 361 1 8 2 376 1 375 1 86 1 356 1 
360 3 269 1 288 3 8 3 55 3 291 1 86 3 356 1 
360 1 288 1 89 1 8 1 190 1 55 1 86 1 
360 1 273 1 288 1 8 1 190 1 55 1 86 1 291 1 10 1 
224 1 311 1 0 1 78 1 269 1 79 1 288 3 289 1 334 1 208 1 4 1 28 1 55 3 249 1 291 2 337 1 103 1 341 1 185 1 360 4 272 1 56 1 361 1 8 4 161 1 190 1 10 1 86 3 132 1 369 1 300 1 325 1 14 1 15 2 92 1 45 1 265 1 376 1 375 1 46 1 47 1 25 1 309 1 356 1 
360 2 269 1 288 1 8 2 353 1 55 1 336 1 86 2 356 1 
311 1 288 3 79 1 208 1 290 1 55 3 291 1 92 1 341 1 360 3 8 3 147 1 161 1 265 1 190 1 47 1 10 1 86 3 356 2 
288 2 55 2 291 1 342 1 360 2 8 2 10 1 86 2 356 1 310 1 
269 1 289 1 300 1 334 1 325 1 14 1 28 1 360 1 272 1 56 1 45 1 361 1 8 1 375 1 376 1 
269 1 300 1 334 1 325 1 28 1 360 1 272 1 56 1 45 1 361 1 8 1 318 1 375 1 376 1 192 1 
206 1 227 1 4 1 249 2 340 1 103 1 337 4 342 2 185 1 57 2 126 2 348 1 132 1 369 1 12 1 281 1 15 2 170 1 111 1 198 1 95 1 25 1 310 2 174 1 
51 1 360 1 288 1 8 1 161 1 190 1 55 1 86 1 
311 1 288 4 269 1 353 1 55 4 169 1 336 1 291 1 360 5 8 5 220 1 86 5 10 1 356 2 
51 1 360 2 288 2 89 1 8 2 190 1 55 2 86 2 
218 1 241 1 
218 1 241 1 
329 1 370 1 
329 1 370 1 
329 1 370 1 
218 1 241 1 30 1 
218 1 241 1 30 1 
218 1 241 1 30 1 
218 1 187 1 241 1 
218 2 246 1 329 1 241 2 370 1 301 1 
218 1 241 1 199 1 
218 1 241 1 199 1 
218 1 241 1 199 1 
257 1 246 1 62 3 247 1 98 1 241 2 17 2 92 2 68 1 292 1 341 2 218 2 354 2 200 2 59 1 74 1 147 1 253 2 37 2 
312 1 269 1 288 2 100 1 55 2 315 1 341 1 360 2 363 1 187 1 8 2 253 1 37 1 130 1 86 2 257 1 62 1 241 1 66 1 17 1 92 1 354 1 218 1 355 1 
270 1 24 1 171 1 
270 1 304 1 24 1 
113 1 270 3 302 1 304 1 94 1 171 2 
270 2 302 1 304 1 94 1 316 1 171 1 
270 2 302 2 304 1 94 1 171 1 
205 1 223 3 245 1 227 1 312 1 122 1 100 1 101 1 341 5 7 4 104 2 344 1 363 1 362 1 252 1 9 1 348 1 38 1 12 1 322 1 64 2 135 2 240 1 281 1 326 1 196 1 41 1 92 5 217 3 114 2 283 1 147 2 
97 1 205 2 223 8 245 6 227 3 312 4 268 5 121 1 122 3 101 2 341 9 182 1 7 7 104 6 362 2 58 1 252 3 346 1 347 1 35 5 9 1 348 3 38 2 12 3 322 1 64 6 240 2 281 3 196 1 41 1 92 9 217 9 114 6 201 1 147 5 
205 1 223 3 312 1 227 1 122 1 101 1 341 3 7 2 104 2 344 1 362 1 252 2 346 1 348 1 38 1 12 1 322 1 64 2 135 1 240 1 281 1 326 1 92 3 217 4 114 2 147 3 
97 1 205 1 223 5 312 2 227 2 121 1 122 2 101 1 341 4 7 3 104 4 344 1 362 1 252 3 58 1 346 1 348 2 38 1 12 2 322 1 64 4 135 2 240 1 281 2 326 1 92 4 217 7 114 4 147 4 
143 1 334 1 365 1 
334 1 306 1 
157 1 
334 1 376 1 
143 2 334 3 325 1 376 1 112 1 358 1 
334 1 325 1 376 1 
334 1 213 1 
227 1 176 1 236 1 151 2 170 2 249 3 111 3 337 7 69 1 186 1 57 4 221 1 330 1 348 1 118 1 377 1 308 1 
227 1 176 1 236 1 151 2 170 2 249 3 111 3 337 7 69 1 186 1 57 4 221 1 330 1 348 1 118 1 377 1 308 1 
226 1 227 1 176 1 236 1 151 2 170 2 249 3 111 3 337 7 69 1 186 1 57 4 221 1 330 1 348 1 118 1 377 1 308 1 
366 1 227 1 133 1 12 1 122 1 151 1 281 1 154 1 170 1 111 2 249 4 337 8 69 1 261 1 186 1 57 4 127 2 348 1 377 2 60 1 
227 1 176 1 151 2 4 2 249 4 338 1 103 2 337 9 57 5 186 1 348 1 132 2 236 1 15 4 170 3 140 1 111 4 69 1 221 1 377 1 118 1 308 1 25 2 287 1 
150 2 152 1 335 1 28 1 339 1 184 1 270 2 272 1 361 1 232 1 34 1 364 1 131 1 191 1 39 1 321 1 13 1 136 1 260 1 327 1 171 1 113 1 115 1 45 1 304 1 24 1 375 1 48 1 244 1 378 2 
150 3 152 1 335 1 28 1 184 1 270 2 272 1 125 1 361 1 232 1 34 1 364 1 191 1 256 1 39 1 321 1 13 1 136 2 327 1 171 1 113 1 115 1 45 1 304 1 242 1 24 1 375 1 48 1 244 1 378 3 
150 2 152 1 335 1 28 1 184 1 270 2 272 1 361 1 232 1 256 1 39 1 321 1 13 1 136 2 327 1 171 1 113 1 45 1 304 1 242 1 375 1 24 1 48 1 244 1 378 2 
150 1 334 1 28 1 155 1 272 1 125 1 56 1 361 1 364 1 321 2 299 1 13 2 351 1 115 1 45 1 373 1 284 1 375 1 376 1 48 2 96 1 244 2 378 1 
150 1 152 1 28 1 270 2 272 1 361 1 232 1 34 1 364 1 131 1 191 1 39 1 321 1 13 1 260 1 171 1 113 1 115 1 45 1 304 1 242 1 24 1 375 1 48 1 244 1 378 1 
235 1 
205 1 245 6 334 1 208 1 54 1 101 1 336 1 341 5 158 1 56 2 252 2 8 1 9 1 161 1 163 1 350 2 297 1 64 2 259 1 67 1 217 2 71 1 19 2 265 1 223 2 267 1 314 2 178 1 229 2 179 1 357 1 28 1 82 4 231 2 272 2 360 1 32 2 361 2 85 1 38 1 190 1 86 1 322 1 240 1 41 3 92 5 44 1 45 1 146 2 147 2 284 1 376 1 375 2 47 1 96 1 
267 1 245 2 208 1 179 1 357 1 336 1 82 2 341 3 360 1 85 1 8 1 161 1 163 1 190 1 86 1 41 1 92 3 71 1 19 1 265 1 47 1 149 1 
267 1 245 1 208 1 314 1 179 1 357 1 336 1 82 3 341 3 360 1 85 1 8 1 161 1 163 1 190 1 86 1 322 1 41 1 92 3 71 1 147 1 265 1 47 1 149 1 
267 1 245 2 208 1 314 1 179 1 357 1 336 1 82 3 341 3 360 1 85 1 8 1 161 1 163 1 190 1 86 1 350 1 322 1 41 1 92 3 71 1 19 1 147 1 265 1 47 1 149 1 
223 1 205 1 267 1 266 1 245 7 314 4 208 1 229 2 179 1 357 1 336 1 82 6 231 2 341 5 158 1 360 1 32 2 274 1 85 1 252 2 8 1 9 1 161 1 38 1 163 1 190 1 86 1 350 4 322 5 64 1 240 1 41 3 92 5 44 1 71 1 305 1 19 4 263 1 146 2 116 1 147 5 265 1 47 1 149 1 
205 1 245 4 208 1 336 1 341 4 158 1 8 1 252 2 9 1 161 1 163 1 350 2 64 1 217 2 71 1 19 2 265 1 267 1 223 1 314 2 178 1 179 1 229 2 357 1 82 4 231 2 360 1 32 2 85 1 38 1 190 1 86 1 322 1 240 1 41 2 92 4 44 1 146 2 147 2 47 1 
223 1 267 1 205 1 245 4 314 2 208 1 229 2 179 1 357 1 336 1 82 4 231 2 341 4 158 1 360 1 32 2 274 1 85 1 252 2 8 1 9 1 161 1 38 1 163 1 190 1 86 1 350 2 322 1 64 1 240 1 41 2 92 4 44 1 71 1 19 2 305 1 146 2 116 1 147 1 265 1 47 1 
223 1 267 1 205 1 245 4 314 2 208 1 229 2 179 1 357 1 336 1 82 4 231 2 341 4 158 1 360 1 32 2 274 1 85 1 252 2 8 1 9 1 161 1 38 1 163 1 190 1 86 1 350 2 322 1 64 1 240 1 41 2 92 4 44 1 71 1 19 2 305 1 146 2 116 1 147 1 265 1 47 1 
223 1 267 1 205 1 332 1 208 1 229 1 179 1 357 1 336 1 82 2 102 1 341 2 360 1 293 1 274 1 85 1 8 1 9 1 161 1 38 1 163 1 190 1 86 1 298 1 64 1 240 1 92 2 217 1 44 1 71 1 146 1 265 1 47 1 
223 1 205 1 267 1 245 5 208 1 314 3 229 2 179 1 357 1 336 1 82 5 231 2 341 4 158 1 360 1 32 2 274 1 85 1 252 2 8 1 9 1 161 1 38 1 163 1 190 1 86 1 350 3 322 1 64 1 240 1 41 2 92 4 44 1 71 1 19 3 305 1 263 1 146 2 116 1 147 1 265 1 47 1 
223 1 205 1 267 1 245 5 208 1 314 3 229 2 179 1 357 1 336 1 82 5 231 2 341 4 158 1 360 1 32 2 274 1 85 1 252 2 8 1 9 1 161 1 38 1 163 1 190 1 86 1 350 3 322 1 64 1 240 1 41 2 92 4 44 1 71 1 19 3 305 1 263 1 146 2 116 1 147 1 265 1 47 1 
223 1 267 1 205 1 332 1 245 4 314 2 208 1 178 1 229 2 179 1 357 1 336 1 82 4 341 4 360 1 293 2 85 1 8 1 9 1 161 1 38 1 163 1 190 1 86 1 350 2 322 1 64 1 240 1 41 2 92 4 217 2 44 1 71 1 19 2 146 2 147 1 285 2 265 1 47 1 
227 1 369 1 132 1 236 1 176 1 269 2 151 1 4 1 170 2 15 2 249 3 111 2 337 6 103 1 198 1 342 1 185 1 126 1 57 3 221 1 348 1 118 1 365 1 308 1 25 1 310 1 
227 2 269 1 122 2 153 1 4 2 154 1 249 6 103 2 337 14 342 11 185 1 186 1 127 3 126 11 57 8 345 1 348 1 60 1 165 1 132 2 369 2 12 2 90 1 281 1 170 1 15 4 111 2 93 1 261 3 46 1 25 2 120 1 310 4 
311 1 269 1 288 1 4 1 153 1 55 1 249 1 103 1 337 2 185 1 360 1 57 1 345 1 8 1 190 1 86 1 132 1 369 1 167 1 352 1 197 1 15 2 374 1 46 1 25 1 356 1 310 1 
311 1 288 1 4 1 55 1 249 1 337 1 103 1 185 1 360 1 272 1 56 1 345 1 361 1 8 1 86 1 132 1 369 1 63 1 15 2 375 1 46 1 25 1 356 1 
288 1 334 3 4 2 153 1 55 1 28 2 249 1 339 1 103 2 337 2 156 1 185 2 360 1 272 7 56 2 57 1 361 8 8 1 295 1 86 1 110 1 320 1 132 2 369 2 15 4 198 1 70 2 282 1 45 2 242 1 284 1 375 8 376 2 46 1 49 1 356 1 25 2 96 1 119 1 
227 1 288 1 122 1 4 1 55 1 291 1 249 2 103 1 337 3 342 1 185 1 360 1 126 1 57 1 345 1 8 1 348 1 10 1 86 1 132 1 369 1 238 1 12 1 281 1 170 1 15 2 111 1 25 1 310 1 
206 1 369 1 132 1 227 1 12 1 4 1 15 2 111 1 337 2 103 1 198 1 342 1 185 1 186 1 126 1 57 2 25 1 310 1 
369 1 132 1 4 1 281 1 170 1 15 2 111 1 249 2 337 2 103 1 198 1 342 1 185 1 126 1 95 1 348 1 25 1 310 1 
227 1 122 1 4 1 249 2 103 1 337 4 342 2 185 1 57 2 126 2 186 1 348 1 132 1 369 1 12 1 281 1 15 2 170 1 111 2 198 1 25 1 310 2 
206 1 369 1 132 1 227 1 12 1 4 1 15 2 111 1 337 2 103 1 342 1 185 1 186 1 126 1 57 2 295 1 25 1 310 1 
369 1 132 1 4 1 281 1 170 1 15 2 111 1 249 2 337 2 103 1 342 1 185 1 126 1 95 1 295 1 348 1 25 1 310 1 
227 1 122 1 4 1 249 2 103 1 337 4 342 2 185 1 57 2 126 2 186 1 295 1 348 1 132 1 369 1 12 1 281 1 15 2 170 1 111 2 25 1 310 2 
227 1 122 1 4 1 249 2 337 4 103 1 342 2 185 1 57 2 126 2 186 1 348 1 132 1 369 1 12 1 281 1 15 2 170 1 111 2 25 1 310 2 
78 1 269 1 289 1 334 1 153 1 4 1 28 1 249 1 337 2 103 1 185 1 272 1 360 1 57 1 56 1 361 1 8 1 369 1 132 1 300 1 325 1 14 1 15 2 45 1 376 1 375 1 46 1 25 1 
269 1 334 1 153 1 4 1 28 1 249 1 337 2 103 1 185 1 272 1 360 1 57 1 56 1 361 1 8 1 318 1 192 1 369 1 132 1 300 1 325 1 15 2 45 1 117 1 376 1 375 1 46 1 25 1 
227 1 122 1 4 1 249 2 103 1 337 4 342 2 185 1 57 2 126 2 186 1 345 1 348 1 132 1 369 1 12 1 281 1 15 2 170 1 111 2 25 1 310 2 
227 1 78 1 122 1 289 1 334 1 4 1 28 1 249 2 337 4 339 1 103 1 342 2 185 1 272 1 360 1 186 1 126 2 57 2 361 1 8 1 348 1 109 1 369 1 132 1 12 1 300 1 325 1 14 1 281 1 170 1 15 2 111 2 45 1 375 1 376 1 25 1 310 2 
227 1 288 1 122 1 4 1 55 1 249 1 291 1 103 1 337 3 342 1 185 1 360 1 186 1 57 2 126 1 345 1 8 1 348 1 10 1 86 1 132 1 369 1 12 1 281 1 137 1 15 2 111 1 25 1 310 1 
77 2 227 3 122 3 2 1 4 2 154 1 249 10 103 2 337 19 29 1 127 2 57 9 186 3 84 1 348 3 60 1 255 1 11 2 132 2 12 3 65 1 138 1 281 3 170 3 15 4 111 6 261 1 75 1 25 2 287 1 
77 4 331 1 227 3 122 3 2 1 4 3 154 2 249 12 103 3 337 26 186 2 57 14 127 2 128 1 348 2 255 2 11 1 132 3 216 1 12 3 278 1 65 1 166 1 138 1 281 2 140 2 170 2 15 6 111 4 261 2 144 1 75 2 25 3 287 1 
77 4 331 1 176 1 227 5 122 4 151 1 2 1 4 3 154 3 249 21 103 3 337 41 127 4 57 20 186 4 84 1 128 1 348 5 60 1 255 2 11 1 236 1 216 1 132 3 12 4 278 1 65 1 166 1 139 1 138 1 281 4 140 1 170 4 15 6 111 8 261 3 144 1 221 1 75 1 118 1 308 1 25 3 287 1 
77 4 331 1 176 1 227 5 122 4 151 1 2 1 4 4 154 3 249 18 103 4 337 38 127 4 57 20 186 3 84 1 128 1 348 4 60 1 255 2 11 1 236 1 216 1 132 4 12 4 278 1 65 1 166 1 139 1 138 1 281 3 140 2 170 4 15 8 111 7 261 3 144 1 221 1 75 1 118 1 308 1 25 4 287 1 
77 4 331 1 176 1 227 8 122 7 151 1 2 1 4 2 154 2 249 25 103 2 337 52 127 4 57 27 186 7 128 1 348 8 60 2 255 1 11 1 236 1 216 1 132 2 12 7 278 1 65 1 166 1 138 1 281 7 140 1 170 7 15 4 111 14 93 2 261 4 144 1 221 1 75 1 118 1 308 1 25 2 287 1 
354 1 218 1 246 1 98 1 253 1 241 1 37 1 180 1 17 1 292 1 
355 1 187 1 
215 1 354 1 218 1 317 1 253 1 241 1 37 1 17 1 6 1 
257 1 246 1 62 2 247 1 98 1 241 1 17 1 92 1 68 1 292 1 341 1 218 1 354 1 200 1 59 1 147 1 253 1 37 1 
257 1 246 1 62 2 247 1 98 1 241 1 17 1 92 1 68 1 292 1 341 1 218 1 354 1 200 1 59 1 147 1 253 1 37 1 
257 1 246 1 62 2 247 1 98 1 241 1 17 1 92 1 68 1 292 1 341 1 218 1 354 1 200 1 59 1 147 1 253 1 37 1 
301 1 30 1 296 1 
301 1 30 1 296 1 
134 1 199 1 
134 1 301 1 199 1 
130 1 66 1 
312 1 269 1 288 2 333 1 100 1 315 1 55 2 341 1 7 1 360 2 363 1 187 1 8 2 253 1 37 1 130 1 86 2 62 1 241 1 66 1 17 1 68 1 92 1 354 1 218 1 200 1 355 1 
30 1 296 1 
134 1 301 1 199 1 
207 1 334 1 4 1 153 1 28 1 249 1 103 1 337 2 156 1 185 1 360 2 272 2 57 1 345 1 361 2 188 1 8 2 160 1 319 1 86 2 369 1 132 1 15 2 70 2 45 1 21 1 376 1 375 2 46 1 49 1 25 1 
39 1 28 1 80 1 171 1 339 1 113 1 270 2 272 2 304 1 45 1 242 1 361 2 232 1 34 1 108 1 24 1 375 2 148 1 48 1 
39 1 28 1 171 1 113 1 270 2 272 1 304 1 45 1 242 1 361 1 232 1 129 1 34 1 24 1 375 1 148 1 48 1 
334 1 351 1 28 1 272 1 45 1 56 1 361 1 284 1 108 1 376 1 375 1 48 1 286 1 96 1 
39 1 28 1 80 1 171 1 113 1 270 2 272 1 304 1 45 1 242 1 361 1 232 1 34 1 108 1 24 1 375 1 148 1 48 1 
87 1 
223 1 368 1 211 1 322 1 64 1 147 1 365 1 
223 1 205 1 245 1 231 1 341 1 158 1 32 1 252 1 9 1 38 1 322 1 64 1 240 1 41 1 92 1 217 1 147 2 
205 4 245 5 334 10 99 2 54 1 101 2 339 1 341 5 104 6 56 1 211 1 252 6 9 4 107 2 348 2 213 2 214 2 164 1 12 2 64 8 112 1 217 12 18 2 114 6 73 1 306 3 265 2 223 9 227 2 122 2 313 2 28 4 230 2 271 2 272 3 361 3 38 4 367 1 368 1 193 1 322 2 325 3 240 4 281 2 41 3 92 5 372 1 45 3 143 2 147 8 376 3 375 3 202 2 243 2 
223 8 205 2 331 1 245 1 227 2 122 2 54 1 154 1 101 1 341 1 271 1 104 5 127 1 128 1 252 3 9 2 38 2 348 2 214 2 275 1 216 1 12 2 278 1 322 2 64 5 166 1 168 1 240 2 281 2 41 1 92 1 217 6 114 5 261 1 147 5 
205 1 223 2 0 1 176 1 227 2 288 1 177 1 55 1 291 1 341 1 271 1 359 1 360 1 8 1 9 1 38 1 348 1 190 1 214 2 86 1 89 1 64 2 240 1 92 1 262 1 116 1 118 1 308 1 
205 1 223 1 368 1 322 1 64 1 240 1 211 1 9 1 147 1 38 1 
223 5 227 2 12 2 122 2 64 5 281 2 217 10 18 1 114 5 271 1 104 5 252 5 147 5 348 2 214 2 
245 1 322 1 147 1 41 1 92 1 341 1 
205 2 223 2 245 4 334 1 54 2 28 1 101 2 341 3 83 1 272 4 56 2 251 1 361 4 346 1 9 1 38 2 164 1 64 2 240 2 259 1 67 1 41 2 92 3 372 2 45 1 284 1 376 1 375 4 96 1 
224 1 0 1 78 1 269 1 288 2 289 1 334 1 4 1 55 2 28 1 249 1 291 2 337 1 103 1 185 1 272 1 360 3 56 1 361 1 8 3 86 2 132 1 369 1 300 1 325 1 14 1 15 2 45 1 375 1 376 1 46 1 25 1 
205 1 223 1 151 1 322 2 64 2 240 1 54 1 101 1 217 4 114 2 104 2 252 2 9 1 147 4 38 1 
354 1 33 1 17 1 
354 1 33 1 17 1 
354 1 33 1 17 1 
354 1 303 1 98 1 130 1 17 1 
354 1 237 1 17 1 
354 1 237 1 17 1 
354 1 237 1 17 1 
354 1 17 1 
218 1 241 1 
227 1 132 2 236 1 176 1 151 1 4 2 170 2 15 4 140 1 249 4 111 3 337 8 103 2 57 4 186 1 221 1 348 1 118 1 308 1 25 2 
236 1 176 1 227 1 151 1 170 2 249 3 111 2 337 6 57 3 221 1 348 1 365 1 118 1 308 1 
132 1 227 1 12 1 122 1 323 1 281 1 4 1 170 1 15 2 249 2 111 2 103 1 337 4 57 2 186 1 348 1 25 1 
227 1 12 1 122 1 281 1 154 1 170 1 249 4 111 2 337 7 261 1 127 2 57 3 186 1 348 1 60 1 
176 2 227 3 122 2 151 1 4 2 249 12 337 23 103 2 186 4 57 11 127 2 348 3 60 1 236 1 132 2 12 2 277 1 90 1 281 2 170 5 140 2 15 4 111 9 93 1 261 2 221 1 118 1 308 2 25 2 
127 1 249 1 337 1 
261 1 57 1 337 1 
132 1 227 1 12 1 122 1 323 1 4 1 281 1 15 2 170 2 249 3 111 3 103 1 337 6 18 1 57 3 186 1 348 1 25 1 
331 1 227 2 122 2 4 1 154 1 249 6 337 12 103 1 186 1 127 1 57 6 128 1 348 2 132 1 216 1 12 2 278 1 166 1 281 2 15 2 170 1 111 2 261 1 25 1 287 1 
227 1 176 1 170 1 249 3 111 2 337 6 57 3 186 1 348 1 118 1 308 1 
176 1 132 1 236 1 277 1 4 1 170 1 140 1 15 2 111 2 249 2 337 3 103 1 57 1 186 1 221 1 308 1 25 1 
186 1 57 4 227 2 176 1 262 1 348 2 118 1 170 2 249 4 111 3 308 1 337 8 
132 1 227 1 12 1 4 1 15 2 111 1 103 1 337 2 57 2 186 1 287 1 25 1 
132 1 227 1 12 1 122 1 281 1 4 1 170 1 15 2 249 2 111 2 103 1 337 4 57 2 186 1 348 1 287 1 25 1 
132 3 176 1 277 1 4 3 140 1 15 6 170 1 249 2 111 2 337 3 103 3 186 1 57 1 84 1 308 1 287 1 25 3 
227 2 176 1 4 3 154 1 249 6 103 3 337 12 186 2 127 1 57 6 84 1 348 2 133 1 132 3 236 1 323 1 170 2 15 6 111 4 261 1 262 1 221 1 118 1 308 1 25 3 287 1 
227 1 176 1 151 1 4 1 154 1 249 4 337 8 103 1 127 1 57 4 348 1 132 1 236 1 278 1 15 2 170 2 111 2 261 1 221 1 118 1 308 1 25 1 287 1 
176 1 227 2 122 1 151 1 4 2 154 1 249 5 337 11 103 2 127 2 57 6 186 1 348 1 60 1 236 1 132 2 12 1 278 1 323 1 170 2 15 4 111 3 261 1 221 1 118 1 308 1 287 1 25 2 
331 1 176 1 227 3 122 2 151 1 4 3 154 1 249 10 337 19 103 3 186 1 127 1 57 9 128 1 348 3 236 1 132 3 216 1 12 2 278 1 323 1 166 1 281 2 15 6 170 3 140 1 111 4 261 1 221 1 118 1 308 1 25 3 287 1 
331 1 176 1 227 3 122 2 151 1 4 3 154 1 249 7 337 17 103 3 186 2 127 1 57 10 128 1 348 2 236 1 132 3 216 1 12 2 278 1 323 1 166 1 281 1 140 1 15 6 170 3 111 5 261 1 221 1 118 1 308 1 25 3 287 1 
227 1 176 1 151 1 4 1 154 1 249 4 337 8 103 1 127 1 57 4 348 1 132 1 236 1 278 1 15 2 170 2 111 2 261 1 221 1 118 1 308 1 25 1 287 1 
331 1 227 2 122 2 4 1 154 1 249 6 337 12 103 1 186 1 127 1 57 6 128 1 348 2 132 1 216 1 12 2 278 1 166 1 281 2 15 2 170 1 111 2 261 1 25 1 287 1 
331 1 176 1 227 3 122 2 151 1 4 4 154 1 249 8 337 18 103 4 186 2 127 1 57 10 128 1 348 2 236 1 132 4 216 1 12 2 278 1 323 1 166 1 281 1 15 8 170 3 140 2 111 5 261 1 221 1 118 1 308 1 25 4 287 1 
331 1 227 3 122 3 4 4 154 1 249 7 337 16 103 4 186 3 127 1 57 9 84 1 128 1 348 2 132 4 216 1 12 3 278 1 166 1 281 2 15 8 170 3 140 2 111 6 261 1 287 1 25 4 
236 1 176 3 227 1 170 3 249 4 111 6 337 7 186 3 57 3 221 2 348 1 118 1 308 3 
331 1 176 1 227 3 122 2 151 1 4 4 154 1 249 8 337 18 103 4 186 1 127 1 57 10 84 1 128 1 348 2 236 1 132 4 216 1 12 2 278 1 166 1 281 1 15 8 170 3 140 2 111 4 261 1 221 1 118 1 308 1 287 1 25 4 
360 1 269 1 8 1 353 1 86 1 336 1 26 1 
269 1 194 1 353 1 5 1 336 1 43 1 210 1 343 1 360 1 8 1 86 1 26 1 
272 1 45 1 56 1 361 1 334 1 284 1 28 1 376 1 375 1 365 1 96 1 
269 1 288 1 300 1 334 1 325 1 14 1 28 1 55 1 360 2 272 1 56 1 45 1 361 1 8 2 376 1 375 1 86 1 356 1 
269 1 288 1 334 3 55 2 28 1 272 1 360 2 361 1 8 2 161 1 190 1 213 1 86 2 300 1 325 2 14 1 372 1 45 1 375 1 376 2 202 1 47 1 356 1 
269 1 288 1 334 3 55 2 28 1 272 2 360 2 361 2 8 2 161 1 190 1 213 1 86 2 349 1 192 1 300 1 325 2 372 1 45 1 375 2 376 2 202 1 47 1 356 1 
245 1 322 1 3 1 334 4 325 1 28 1 16 1 92 2 341 2 372 1 272 3 56 1 45 1 361 3 143 1 147 1 306 1 265 1 213 1 376 1 202 1 375 3 349 1 
245 1 322 1 334 4 325 1 99 1 28 1 92 2 341 2 372 1 272 3 56 1 45 1 361 3 143 1 147 1 306 1 265 1 213 1 376 1 202 1 375 3 349 1 
110 1 272 1 45 1 361 1 28 1 375 1 
334 3 27 1 28 3 339 1 272 6 56 2 361 7 254 1 61 1 110 1 320 1 325 1 112 1 70 1 45 2 282 1 242 1 376 2 375 7 49 1 119 1 
227 1 176 1 78 1 269 2 288 1 151 1 289 1 334 1 248 1 4 2 28 1 55 1 249 3 337 6 103 2 339 1 342 1 185 2 360 2 272 1 126 1 57 3 345 1 361 1 8 2 348 1 109 1 86 1 236 1 132 2 369 2 300 1 325 1 14 1 170 2 15 4 111 2 45 1 221 1 21 1 376 1 375 1 118 1 308 1 25 2 356 1 310 1 
223 1 205 2 245 2 313 1 334 2 99 1 230 1 341 3 7 1 272 1 56 1 211 1 361 1 9 2 107 1 38 2 164 1 368 1 322 1 64 1 240 2 41 1 92 3 143 1 147 1 306 1 265 1 375 1 
110 1 193 1 334 2 325 1 28 2 339 1 112 1 272 2 45 1 143 1 361 2 375 2 376 1 
175 1 334 1 28 1 339 1 272 4 56 1 45 1 361 4 284 1 375 4 376 1 349 1 96 1 
334 1 325 1 28 2 372 1 272 2 45 1 361 2 212 1 173 1 189 1 375 2 376 1 254 1 61 1 
270 1 39 1 272 1 304 1 45 1 56 1 361 1 24 1 28 1 375 1 
272 2 45 1 207 1 242 1 361 2 334 1 28 1 376 1 375 2 49 1 339 1 
320 1 175 1 334 3 28 2 339 1 372 1 272 4 56 1 282 1 45 2 361 5 284 1 375 5 376 2 96 1 49 1 
320 1 175 1 334 3 28 2 339 1 372 1 272 4 56 1 45 2 361 5 284 1 294 1 375 5 376 2 96 1 49 1 
269 1 288 1 300 1 334 1 325 1 28 1 55 1 360 2 272 1 56 1 45 1 361 1 8 2 376 1 375 1 86 1 356 1 192 1 
27 1 334 1 325 1 28 2 112 1 372 1 272 1 45 1 361 1 375 1 376 1 254 1 61 1 
269 1 106 1 279 1 307 1 31 1 
269 1 79 1 322 1 208 1 123 1 279 2 92 2 341 2 31 2 7 1 72 1 106 1 172 1 147 1 161 1 265 1 190 1 47 1 307 2 
279 1 31 1 360 1 106 1 188 1 8 1 160 1 319 1 86 1 
72 1 172 1 106 1 
184 1 335 1 365 1 327 1 
184 1 150 1 115 1 335 1 364 1 327 1 378 1 
150 1 321 1 13 1 
150 3 52 1 239 2 335 1 327 1 81 1 184 1 115 1 364 1 36 1 131 1 378 3 
184 1 141 1 150 2 115 1 136 1 335 1 364 1 327 1 378 2 
150 1 327 1 171 1 270 1 115 1 219 1 364 1 24 1 131 1 204 1 378 1 
184 1 150 1 115 1 364 1 131 1 327 1 378 1 
184 2 150 1 115 1 335 1 364 1 131 1 378 1 
150 2 258 1 195 1 327 1 184 1 115 2 142 1 364 2 131 1 378 2 
150 3 136 2 335 1 91 1 371 1 327 2 184 1 115 1 219 1 22 1 364 1 131 1 378 3 
150 2 136 1 335 1 124 1 327 1 171 1 184 1 270 2 113 1 115 1 304 1 364 1 24 1 131 1 378 2 
150 4 53 1 136 2 335 1 91 1 327 2 184 1 141 1 115 2 219 1 364 2 131 1 378 4 
184 1 150 1 115 1 335 1 364 1 131 1 327 1 378 1 
150 4 228 1 239 1 136 2 335 2 91 1 81 1 327 3 184 2 115 1 219 1 36 1 364 1 378 4 
184 1 225 1 150 2 115 1 105 1 20 1 136 1 335 1 364 1 131 1 327 1 378 2 
150 3 239 2 280 1 335 1 81 1 327 1 184 1 115 1 364 1 36 2 131 1 378 3 
1 1 324 2 40 1 327 2 
209 1 150 1 115 1 364 1 131 1 378 1 
184 1 150 2 115 1 22 1 136 1 335 1 364 1 131 1 327 1 378 2 
183 1 
184 1 150 1 115 1 335 1 364 1 131 1 327 1 378 1 
150 3 136 1 239 1 335 1 327 1 184 1 115 1 22 1 364 1 131 1 378 3 
228 1 219 1 91 1 327 1 
184 1 327 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 54 (296,307) (296,307) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 54 (296,307) (296,307) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 54 (296,307) (296,307) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 54 (296,307) (296,307) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
119 1 320 1 13 1 314 3 112 1 242 2 102 3 90 1 281 1 137 1 273 1 182 2 84 2 
54 1 39 1 320 1 41 1 314 2 296 1 242 1 102 2 307 1 281 1 250 1 172 1 78 1 50 1 161 1 84 1 
54 1 39 1 320 1 41 1 314 2 296 1 242 1 102 2 307 1 281 1 250 1 172 1 78 1 50 1 161 1 84 1 
54 1 39 1 320 1 41 1 314 2 296 1 242 1 102 2 307 1 281 1 250 1 172 1 78 1 50 1 161 1 84 1 
54 1 39 1 320 1 41 1 314 2 296 1 242 1 102 2 307 1 281 1 250 1 172 1 78 1 50 1 161 1 84 1 
119 1 35 2 54 1 39 1 320 1 13 3 314 4 112 2 242 1 102 4 45 1 90 1 137 1 172 1 182 3 288 1 161 1 84 1 
217 1 95 1 320 1 39 1 41 1 314 2 242 1 102 2 90 1 281 1 137 1 172 1 182 1 50 1 228 1 84 1 
54 1 112 4 314 9 90 1 137 1 172 1 273 1 10 1 119 3 35 2 12 1 147 1 98 1 13 7 320 1 39 1 102 9 242 2 45 1 281 1 182 5 288 1 161 1 84 2 
54 1 112 4 314 9 90 1 137 1 172 1 273 1 10 1 119 3 35 2 12 1 147 1 98 1 13 7 320 1 39 1 102 9 242 2 45 1 281 1 182 5 288 1 161 1 84 2 
163 1 22 1 97 1 218 1 16 1 125 1 46 1 224 1 327 1 355 1 329 1 143 1 184 1 67 1 
324 1 
324 1 46 1 22 2 303 1 173 1 14 1 232 1 16 2 
22 5 131 1 303 1 14 1 167 1 333 1 334 2 322 1 220 2 211 1 323 1 16 5 324 1 46 2 192 1 246 1 372 2 173 2 116 1 
165 1 
324 1 356 1 375 2 
163 2 224 2 327 2 329 2 363 1 184 2 67 2 125 1 
163 2 53 1 186 1 136 1 271 1 272 2 139 2 140 1 342 1 363 1 174 1 144 2 67 2 366 1 36 1 37 2 321 1 15 1 256 1 219 1 101 1 278 1 369 1 222 1 125 1 223 1 224 2 76 1 327 3 126 2 106 1 107 1 329 2 160 1 184 3 162 1 51 1 
163 1 224 1 97 1 327 1 218 1 329 1 143 1 184 1 67 1 125 1 
324 1 22 1 326 1 155 1 327 1 218 1 23 1 14 1 344 1 184 1 16 1 290 1 67 1 248 1 
163 1 22 2 218 1 23 1 14 1 16 2 324 1 224 1 326 1 327 1 329 1 344 1 184 1 290 1 67 1 
46 1 22 1 362 1 173 1 16 1 
324 1 46 1 200 1 22 2 303 1 173 1 14 1 16 2 
22 1 173 1 16 1 
163 1 258 1 224 1 327 2 329 1 363 2 184 2 358 1 67 2 
215 1 103 1 331 1 
37 1 186 1 321 1 219 1 305 1 222 1 271 1 327 1 139 1 126 1 140 1 107 1 363 1 174 1 184 1 51 1 
165 1 
163 3 224 1 327 3 193 1 329 3 363 1 184 3 67 3 
163 1 327 1 218 1 329 1 143 1 184 1 67 1 
163 1 258 1 224 1 327 1 218 1 329 1 184 1 358 1 67 1 
185 1 163 3 53 1 22 1 186 1 23 1 231 1 271 1 272 1 139 1 140 1 193 1 342 1 363 1 174 1 344 1 144 2 366 1 67 3 37 1 218 1 321 1 15 1 256 1 219 1 101 1 44 1 16 1 222 1 125 1 224 2 76 1 326 1 327 4 126 1 106 1 107 1 329 3 160 1 184 4 162 1 51 1 290 1 358 1 
163 1 118 1 327 2 193 1 329 1 363 1 184 2 248 1 67 2 
163 3 294 1 22 1 218 1 23 1 16 1 44 1 324 1 231 1 224 1 326 1 327 3 193 2 329 3 344 1 184 3 358 1 290 1 67 3 
163 2 103 1 224 1 327 2 193 1 329 2 215 1 184 2 358 1 67 2 
37 1 186 1 321 1 219 1 222 1 271 1 327 1 139 1 126 1 140 1 107 1 363 1 174 1 184 1 51 1 
37 1 321 1 219 1 222 1 271 1 327 1 139 1 126 1 140 1 107 1 363 1 174 1 184 1 127 1 83 1 
198 1 53 2 179 1 180 1 256 1 103 1 123 1 25 1 76 1 272 2 342 1 106 1 215 1 160 1 144 2 162 1 331 1 
163 1 345 1 326 1 327 1 218 1 329 1 184 1 67 1 
163 1 37 1 186 1 321 1 219 1 103 1 44 1 222 1 271 1 327 2 139 1 140 1 126 1 193 1 107 1 329 1 174 1 184 2 51 1 67 1 
163 4 118 1 336 1 44 1 224 1 327 5 193 2 329 4 363 1 287 1 184 5 358 1 248 1 67 5 
345 1 163 2 327 2 218 1 329 2 143 1 184 2 67 2 
158 1 350 1 252 1 
1 1 72 1 110 1 158 2 350 2 357 1 
158 1 350 1 
158 1 350 1 
72 1 357 1 
72 1 357 1 
72 1 357 1 
158 1 202 1 350 1 
158 1 202 1 350 1 
158 1 202 1 350 1 
251 1 158 1 350 1 
251 1 158 1 350 1 
251 1 158 1 350 1 
163 1 52 1 22 2 187 2 111 1 210 1 188 1 299 1 143 1 145 1 67 1 66 1 97 1 255 2 218 1 240 2 350 2 221 2 16 2 125 1 224 1 327 1 329 1 355 1 158 2 184 1 82 1 292 1 291 2 
163 2 85 1 22 1 187 1 188 1 28 1 363 1 319 1 67 2 252 1 302 1 255 1 240 1 350 1 221 1 16 1 152 1 327 2 105 1 48 1 329 2 158 1 184 2 291 1 
312 1 95 1 39 2 161 1 170 2 
172 1 39 1 161 1 
172 1 95 1 39 1 
312 1 235 1 95 1 39 3 161 2 170 1 
312 1 95 1 39 2 161 1 170 1 124 1 
85 1 22 5 295 1 131 2 313 1 133 1 360 2 334 1 212 1 59 1 7 1 173 1 116 1 68 1 301 2 11 1 302 1 179 1 303 1 180 1 14 1 220 1 322 3 203 2 16 5 152 1 46 4 324 2 308 1 372 1 356 1 375 3 
130 5 22 9 295 2 131 6 167 1 360 6 335 1 334 2 212 1 59 2 8 1 362 5 173 6 116 1 68 3 11 3 302 4 179 3 303 1 180 3 150 1 14 1 220 2 322 8 203 6 16 9 46 7 324 5 245 1 308 3 328 1 372 2 81 1 356 3 375 9 
22 3 295 1 131 2 313 1 133 1 167 1 360 2 334 1 59 1 301 1 68 1 302 1 11 1 179 1 14 1 180 1 220 1 322 3 16 3 203 2 324 3 46 2 308 1 372 1 356 2 375 4 
22 4 295 1 131 4 313 1 133 1 360 4 167 1 334 1 59 1 8 1 301 2 68 2 302 2 11 2 179 2 14 1 180 2 220 1 322 5 203 4 16 4 324 4 46 3 245 1 308 2 328 1 372 1 356 3 375 7 
338 1 
165 1 
315 1 222 1 
219 1 222 1 
317 1 237 1 107 1 30 2 219 1 222 3 
107 1 219 1 222 1 
195 1 222 1 
11 1 274 1 53 3 180 1 181 2 136 4 325 1 284 1 61 3 272 7 259 1 27 1 196 1 108 1 176 1 65 1 93 2 129 1 
53 18 361 1 169 4 136 19 6 2 272 37 61 8 27 1 92 1 196 2 29 4 144 4 176 1 65 5 93 3 253 1 68 4 274 2 199 1 11 5 179 4 239 1 122 1 180 5 257 1 256 2 181 3 325 1 284 2 308 4 259 1 106 2 108 2 183 1 160 2 162 2 
53 4 267 1 136 5 6 1 272 9 61 4 196 1 364 1 144 4 176 1 65 1 93 3 11 1 274 1 180 1 256 2 181 2 325 1 284 1 259 1 106 2 108 1 160 2 162 2 
11 1 274 1 53 3 180 1 181 2 136 4 325 1 284 1 61 3 272 7 259 1 27 1 196 1 108 1 176 1 65 1 93 2 
11 1 274 1 53 3 180 1 181 2 136 4 325 1 284 1 61 3 272 7 259 1 27 1 196 1 108 1 176 1 65 1 93 2 
55 1 314 1 271 1 139 1 174 1 31 1 69 1 120 1 37 1 238 1 321 1 219 1 102 1 242 1 243 1 222 1 281 2 371 1 309 2 260 2 126 1 204 2 84 1 
235 1 95 1 209 1 37 1 39 2 320 1 321 1 314 1 166 1 297 1 242 1 102 1 281 1 172 1 353 1 114 1 139 1 126 1 260 1 309 1 174 1 204 1 64 1 161 1 84 1 216 1 
208 1 209 1 314 2 166 1 297 1 90 1 137 1 172 1 139 1 174 1 64 1 216 1 235 1 95 1 37 1 13 1 320 1 39 2 321 1 102 2 242 1 281 1 353 1 309 1 260 1 126 1 182 1 204 1 161 1 84 1 
209 1 314 3 297 1 90 1 137 1 172 1 139 1 114 1 174 1 64 1 216 1 235 1 95 1 37 1 13 2 39 2 304 1 321 1 102 3 242 1 281 1 353 1 371 1 309 1 260 1 126 1 182 1 204 1 161 1 84 1 
209 1 314 2 90 1 137 1 172 1 139 1 114 1 174 1 64 1 235 1 95 1 37 1 13 2 39 2 304 1 321 1 102 2 281 1 353 1 309 1 260 1 126 1 182 1 204 1 161 1 
135 1 
293 2 55 1 57 1 334 1 113 1 4 1 59 1 340 1 339 1 341 2 173 6 174 1 116 1 344 1 67 1 71 1 303 3 218 1 14 1 219 1 220 1 16 5 74 2 222 1 225 1 126 2 261 1 356 2 184 1 263 2 86 2 87 1 22 5 131 2 23 1 271 2 138 1 139 2 197 1 32 4 37 2 238 1 321 1 43 2 322 2 324 2 155 1 326 1 327 1 372 1 159 1 375 2 247 2 290 1 248 1 
22 3 71 1 303 1 218 1 23 1 16 3 74 1 339 1 326 1 155 1 225 1 327 1 261 1 173 2 232 1 344 1 197 1 32 2 184 1 290 1 248 1 67 1 
22 3 23 1 339 1 173 1 197 1 344 1 232 1 32 3 67 1 71 1 218 1 303 1 14 1 16 3 324 1 155 1 326 1 225 1 327 1 261 1 184 1 263 1 290 1 248 1 
22 3 23 1 339 1 173 2 232 1 197 1 344 1 32 3 67 1 71 1 303 1 218 1 14 1 16 3 74 1 324 1 155 1 326 1 225 1 327 1 261 1 184 1 263 1 290 1 247 1 248 1 
293 2 334 1 4 1 171 1 339 1 341 2 173 7 116 1 344 1 67 1 70 1 71 1 218 1 303 3 14 5 220 1 16 5 74 4 352 1 225 1 261 1 354 1 356 2 184 1 263 4 86 2 22 5 131 1 23 1 232 1 197 1 32 6 43 2 322 1 324 5 280 1 326 1 155 1 327 1 372 1 159 1 247 4 290 1 248 1 
86 2 293 2 22 4 131 1 23 1 334 1 113 1 4 1 339 1 341 2 173 4 116 1 197 1 344 1 32 4 67 1 71 1 303 2 218 1 14 1 43 2 322 1 220 1 16 4 74 2 324 2 155 1 326 1 225 1 327 1 261 1 372 1 356 2 159 1 184 1 263 2 375 2 247 2 290 1 248 1 
86 2 293 2 22 4 131 1 23 1 334 1 4 1 339 1 341 2 173 4 116 1 197 1 344 1 32 4 67 1 71 1 303 2 218 1 14 1 43 2 322 1 220 1 16 4 74 2 324 1 280 1 352 1 155 1 326 1 225 1 327 1 261 1 372 1 354 1 356 2 159 1 184 1 263 2 247 2 290 1 248 1 
86 2 293 2 22 4 131 1 23 1 334 1 4 1 339 1 341 2 173 4 116 1 197 1 344 1 32 4 67 1 71 1 303 2 218 1 14 1 43 2 322 1 220 1 16 4 74 2 324 1 280 1 352 1 155 1 326 1 225 1 327 1 261 1 372 1 354 1 356 2 159 1 184 1 263 2 247 2 290 1 248 1 
86 2 2 1 22 4 131 1 23 1 334 1 4 1 339 1 115 2 173 4 214 1 116 1 197 1 344 1 32 4 67 1 71 1 303 2 218 1 14 1 43 2 322 1 220 1 16 4 74 2 324 1 280 1 155 1 326 1 156 2 225 1 327 1 79 1 261 1 372 1 184 1 263 2 375 2 247 2 290 1 248 1 
86 2 293 2 22 4 131 1 23 1 334 1 4 1 339 1 341 2 173 5 116 1 197 1 344 1 32 5 67 1 70 1 71 1 303 2 218 1 14 1 43 2 322 1 220 1 16 4 74 3 324 1 280 1 352 1 155 1 326 1 225 1 327 1 372 1 261 1 354 1 356 2 159 1 184 1 263 3 290 1 247 3 248 1 
86 2 293 2 22 4 131 1 23 1 334 1 4 1 339 1 341 2 173 5 116 1 197 1 344 1 32 5 67 1 70 1 71 1 303 2 218 1 14 1 43 2 322 1 220 1 16 4 74 3 324 1 280 1 352 1 155 1 326 1 225 1 327 1 372 1 261 1 354 1 356 2 159 1 184 1 263 3 290 1 247 3 248 1 
86 2 22 4 2 1 131 1 23 1 334 1 113 1 4 1 339 1 115 2 173 4 116 1 197 1 344 1 32 4 67 1 71 1 303 2 218 1 14 1 43 2 322 1 220 1 16 4 74 2 324 1 155 1 326 1 156 2 225 1 327 1 261 1 372 1 184 1 263 2 375 2 247 2 290 1 248 1 
163 1 208 1 53 1 55 1 332 1 268 1 230 1 136 1 189 1 25 1 271 2 272 2 114 1 139 7 193 1 342 2 174 2 144 4 365 1 67 1 347 1 37 8 36 2 238 1 321 2 15 1 256 2 219 2 369 1 222 3 75 1 76 2 327 1 126 8 329 1 106 2 160 2 184 1 162 2 
163 1 53 2 136 1 272 3 342 1 215 1 144 2 67 1 68 1 11 1 179 1 180 1 256 1 151 1 103 1 17 1 224 1 76 1 308 1 327 1 106 1 329 1 160 1 184 1 162 1 331 1 358 1 
25 1 76 1 165 1 106 1 342 1 160 1 256 1 144 2 162 1 
53 7 169 4 136 10 272 17 61 2 141 1 342 2 363 1 29 3 215 3 144 4 65 2 9 1 68 3 199 2 11 3 179 1 239 1 15 1 180 1 257 1 256 2 151 1 369 1 103 13 76 1 308 3 106 2 49 1 160 2 162 2 331 13 
163 1 53 1 186 1 136 1 271 1 272 2 139 1 140 1 193 1 342 1 363 1 174 1 215 1 144 2 67 1 37 1 321 1 15 1 219 1 256 1 305 1 151 1 44 1 369 1 222 1 76 1 327 2 126 1 107 1 329 1 106 1 160 1 184 2 289 1 330 1 162 1 51 1 128 1 
163 1 53 2 109 1 61 2 213 1 342 2 174 1 215 2 65 2 67 1 68 1 11 1 15 1 256 2 219 1 222 1 76 2 308 1 126 1 184 2 186 1 136 3 271 1 272 5 139 1 140 1 193 1 144 4 366 1 37 1 321 1 149 1 151 1 44 1 103 2 244 1 327 2 106 2 329 1 107 1 160 2 162 2 207 1 51 1 331 2 
11 1 256 1 103 1 136 2 25 1 76 1 308 1 61 1 272 2 318 1 342 1 106 1 215 1 160 1 144 2 162 1 65 1 331 1 
198 1 53 2 179 1 180 1 256 1 103 1 25 1 76 1 272 2 342 1 106 1 215 1 160 1 144 2 162 1 331 1 
53 2 136 2 25 1 272 4 61 1 342 1 215 2 144 2 65 1 68 1 11 1 179 1 180 1 256 1 103 2 308 1 76 1 106 1 160 1 162 1 331 2 
11 1 256 1 103 1 230 1 136 2 76 1 308 1 61 1 272 2 318 1 342 1 106 1 215 1 160 1 144 2 162 1 65 1 331 1 
198 1 53 2 179 1 180 1 256 1 103 1 230 1 76 1 272 2 342 1 106 1 215 1 160 1 144 2 162 1 331 1 
68 1 11 1 256 1 103 1 230 1 136 2 76 1 308 1 61 1 272 2 342 1 106 1 215 1 160 1 144 2 162 1 65 1 331 1 
68 1 11 1 256 1 103 1 136 2 76 1 308 1 61 1 272 2 342 1 106 1 215 1 160 1 144 2 162 1 65 1 331 1 
53 1 186 1 136 1 271 1 272 2 139 1 140 1 342 1 363 1 174 1 144 2 366 1 37 1 321 1 15 1 219 1 256 1 369 1 222 1 76 1 327 1 126 1 107 1 106 1 160 1 184 1 162 1 51 1 
53 1 164 1 136 1 271 1 272 2 139 1 140 1 342 1 363 1 174 1 144 2 37 1 321 1 15 1 219 1 256 1 369 1 222 1 76 1 327 1 126 1 107 1 106 1 160 1 127 1 184 1 83 1 162 1 
68 1 11 1 256 1 151 1 103 1 136 2 76 1 308 1 61 1 272 2 342 1 106 1 215 1 160 1 144 2 162 1 65 1 331 1 
208 1 186 1 136 2 61 1 272 2 139 1 140 1 342 1 174 1 215 1 144 2 65 1 366 1 68 1 11 1 37 1 321 1 219 1 256 1 103 1 222 1 308 1 76 1 327 1 126 1 107 1 106 1 160 1 184 1 162 1 331 1 51 1 207 1 
163 1 136 2 61 1 272 2 342 1 142 1 215 1 144 2 65 1 67 1 68 1 11 1 256 1 151 1 103 1 224 1 76 1 308 1 327 1 106 1 329 1 160 1 184 1 162 1 358 1 331 1 
53 27 168 1 169 4 6 2 61 11 343 1 117 1 176 1 65 9 68 8 11 9 177 4 179 7 180 8 256 4 257 2 181 1 306 2 308 8 259 1 19 1 267 1 316 1 136 30 270 1 26 1 272 57 29 4 196 1 144 8 233 1 93 2 199 2 274 1 38 1 99 1 239 2 241 1 279 1 325 1 106 4 160 4 205 1 162 4 
53 12 267 1 168 1 136 14 169 2 270 1 6 2 26 1 61 3 272 26 29 2 343 1 144 6 117 1 233 1 65 2 93 1 68 3 177 4 11 3 38 2 99 1 179 2 239 2 180 2 241 2 256 3 279 1 306 1 308 3 106 3 205 1 160 3 162 3 
53 31 168 1 169 5 6 2 61 12 343 1 117 1 176 2 65 9 68 7 11 9 177 4 179 7 180 9 256 4 257 2 181 2 306 1 308 7 259 2 267 1 316 1 136 33 270 1 26 1 272 64 29 5 196 2 144 8 233 1 93 3 199 2 274 2 38 1 99 1 239 3 241 2 279 1 325 2 370 1 106 4 160 4 205 1 162 4 
53 25 168 1 169 4 6 2 61 9 343 1 117 1 176 1 65 7 68 7 11 8 177 4 179 6 180 7 256 4 257 2 181 1 306 1 308 7 259 1 267 1 316 1 136 28 270 1 26 1 272 53 29 4 196 1 144 8 233 1 93 2 199 2 274 1 38 1 99 1 239 2 241 1 279 1 325 1 106 4 160 4 205 1 162 4 
53 25 267 1 168 1 169 4 136 27 270 1 6 1 26 1 272 52 61 8 196 1 29 4 343 1 117 1 144 4 176 1 233 1 65 7 93 1 68 7 274 1 177 4 199 2 11 8 38 1 99 1 179 7 239 2 180 8 257 2 241 1 256 2 279 1 306 1 181 1 325 1 308 7 259 1 106 2 205 1 160 2 162 2 
53 1 332 1 268 1 136 1 298 1 272 2 139 2 342 1 174 1 144 2 67 2 37 2 36 2 368 1 100 1 321 1 277 1 15 1 219 1 256 1 151 1 369 1 222 1 76 1 327 2 126 2 106 1 262 1 160 1 184 2 162 1 
37 1 55 1 238 1 321 1 219 1 243 1 337 1 222 1 271 1 139 1 126 1 194 1 174 1 204 1 
235 1 95 1 37 1 178 1 39 2 321 1 24 1 337 1 172 1 353 1 114 1 139 1 126 1 204 1 174 1 64 1 161 1 216 1 
235 1 208 1 95 1 37 2 178 1 39 2 321 1 24 1 337 1 172 1 353 1 114 1 139 2 126 2 174 1 204 1 64 1 161 1 216 1 
235 1 95 1 37 1 39 2 321 1 24 1 134 1 172 1 353 1 114 1 139 1 126 1 204 1 174 1 64 1 161 1 216 1 
20 1 
131 1 14 1 334 1 220 1 322 1 323 1 324 1 192 1 372 1 116 1 
68 2 11 2 131 5 179 2 149 1 360 5 180 2 322 5 203 5 324 5 154 1 308 2 356 5 375 10 
324 1 22 1 303 1 173 1 14 1 16 1 
87 2 22 3 131 2 55 1 167 1 334 2 59 2 340 1 271 2 138 1 139 4 173 4 174 1 116 1 367 1 37 4 238 1 303 2 321 1 219 1 220 2 322 2 16 3 222 1 47 1 285 1 372 2 126 4 206 2 
165 1 
293 1 22 1 131 1 334 1 341 1 173 1 116 1 303 1 14 1 322 1 220 1 16 1 324 2 372 1 356 1 159 1 375 1 
208 1 3 2 334 4 58 2 59 2 173 5 174 3 116 4 68 2 11 2 348 1 349 1 303 3 179 2 14 2 180 2 219 3 220 4 16 5 222 10 308 2 126 3 356 6 310 2 87 1 22 5 131 8 23 2 315 3 360 6 192 1 271 1 317 1 139 3 195 2 30 2 34 2 96 2 37 3 148 1 275 2 321 4 149 2 322 9 323 1 203 6 324 8 154 2 285 1 372 4 107 3 206 1 375 12 
311 2 87 1 22 1 131 5 360 5 334 2 168 1 169 1 59 1 270 1 173 1 29 1 116 2 343 1 117 1 68 2 11 2 303 1 179 2 239 1 180 2 14 2 322 8 279 1 220 2 16 1 203 5 324 5 154 1 308 2 372 2 80 1 356 3 375 6 21 1 
311 2 163 1 22 1 131 2 334 1 62 1 196 1 116 1 143 1 176 1 67 1 274 1 11 2 97 1 218 1 180 1 220 1 322 2 16 1 125 1 154 1 352 1 224 1 327 1 372 1 355 1 329 1 184 1 
163 2 53 1 186 1 271 1 272 1 139 1 140 1 342 1 363 1 174 1 144 2 67 2 366 1 37 1 321 1 15 1 101 1 219 1 256 1 125 1 222 1 224 2 76 1 327 3 126 1 106 1 329 2 107 1 160 1 184 3 162 1 51 1 
87 1 131 2 360 2 14 2 334 1 220 1 322 1 181 1 203 2 59 1 324 4 372 1 356 2 116 1 375 4 
88 1 255 1 56 1 105 1 240 1 
255 1 240 1 300 1 
255 1 240 1 300 1 
255 1 240 1 300 1 
255 1 40 1 240 1 
255 1 40 1 240 1 
255 1 40 1 240 1 
255 1 240 1 
158 1 350 1 
274 2 11 2 53 5 267 1 180 2 256 1 136 5 61 5 272 10 62 1 106 1 196 2 160 1 144 2 162 1 176 1 65 2 93 3 
11 1 267 1 256 1 136 2 308 1 272 2 61 1 106 1 160 1 144 2 162 1 65 1 
68 1 11 1 53 2 179 1 267 1 180 1 256 1 136 2 308 1 61 1 272 4 106 1 160 1 144 2 162 1 65 1 
274 1 53 2 267 1 316 1 256 3 136 1 6 1 272 3 61 2 106 3 196 1 183 1 160 3 144 6 162 3 65 1 93 1 
53 21 267 1 316 1 361 1 169 4 136 20 6 2 272 41 61 11 92 1 196 3 29 4 144 10 176 2 65 7 93 4 234 1 253 1 68 4 274 3 199 1 11 6 179 4 239 1 180 6 256 5 257 1 181 1 325 1 308 4 259 1 106 5 183 1 160 5 162 5 
11 1 274 1 53 4 180 1 256 2 181 1 136 4 325 1 6 1 272 8 61 3 259 1 106 2 196 1 160 2 144 4 176 1 162 2 65 1 93 2 
165 1 
68 1 11 1 53 2 179 1 180 1 256 1 136 2 308 1 272 4 106 1 160 1 144 2 162 1 234 1 
68 2 199 1 11 2 53 6 179 2 239 1 180 2 257 1 169 2 136 6 308 2 272 12 61 2 29 2 65 2 
53 16 136 14 169 2 6 2 61 10 272 30 62 1 141 1 196 4 29 2 144 4 176 2 65 5 93 5 68 2 274 4 11 4 199 1 179 2 180 4 257 1 256 2 181 1 325 1 308 2 259 1 106 2 183 1 160 2 162 2 
53 1 272 1 169 1 
272 1 29 1 136 1 
68 1 11 1 53 3 179 1 149 1 180 1 256 1 136 3 308 1 272 6 61 1 106 1 160 1 144 2 162 1 65 1 234 1 
53 6 267 1 168 1 169 1 136 6 270 1 272 12 61 1 29 1 343 1 144 2 117 1 65 1 68 2 11 2 179 2 239 1 180 2 256 1 279 1 308 2 106 1 160 1 162 1 
11 1 274 1 53 3 180 1 136 3 272 6 61 2 196 1 176 1 65 1 93 1 
274 1 53 2 256 1 136 1 325 1 6 1 61 2 272 3 259 1 106 1 196 1 183 1 160 1 144 2 162 1 65 1 93 1 
53 4 267 1 169 1 136 4 272 8 61 2 29 1 196 1 144 2 176 1 93 2 11 1 274 1 239 1 180 1 256 1 279 1 181 1 325 1 259 1 106 1 160 1 162 1 
53 5 267 1 169 2 136 6 272 11 61 3 196 1 29 1 144 4 176 1 65 1 93 2 234 1 68 1 274 1 199 1 11 2 239 1 180 1 256 2 279 1 181 1 325 1 308 1 259 1 106 2 160 2 162 2 
53 10 267 1 168 1 169 1 136 9 270 1 6 1 272 19 61 4 196 1 29 1 343 1 144 6 117 1 176 1 65 1 234 1 93 3 68 2 274 1 11 3 179 2 239 1 180 3 256 3 279 1 181 1 325 1 308 2 259 1 106 3 160 3 162 3 
53 7 267 1 168 1 169 1 136 10 270 1 6 1 272 17 61 4 196 1 29 1 343 1 144 6 117 1 176 1 65 2 93 2 234 1 68 2 274 1 11 3 179 1 239 1 180 2 256 3 279 1 181 1 325 1 308 2 259 1 106 3 160 3 162 3 
53 4 267 1 169 1 136 4 272 8 61 2 29 1 196 1 144 2 176 1 93 2 11 1 274 1 239 1 180 1 256 1 279 1 181 1 325 1 259 1 106 1 160 1 162 1 
53 6 267 1 168 1 169 1 136 6 270 1 272 12 61 1 29 1 343 1 144 2 117 1 65 1 68 2 11 2 179 2 239 1 180 2 256 1 279 1 308 2 106 1 160 1 162 1 
53 8 267 1 168 1 169 1 136 10 270 1 6 2 272 18 61 5 196 1 29 1 343 1 144 8 117 1 176 1 65 2 234 1 93 3 68 2 274 1 11 3 179 1 239 1 180 2 256 4 279 1 181 1 325 1 308 2 259 1 106 4 160 4 162 4 
53 4 267 1 316 1 168 1 169 1 136 7 270 1 6 1 61 2 272 11 29 1 343 1 144 6 117 1 65 2 68 2 11 2 179 1 239 1 180 1 256 3 279 1 308 2 106 3 160 3 162 3 
274 3 11 1 53 4 180 1 136 3 325 2 272 7 259 1 61 6 196 3 176 1 65 3 93 3 
53 8 267 1 316 1 168 1 169 1 136 10 270 1 6 2 272 18 61 4 196 1 29 1 343 1 144 8 117 1 176 1 65 1 93 3 68 2 274 1 11 3 179 1 239 1 180 2 256 4 279 1 181 1 325 1 308 2 259 1 106 4 160 4 162 4 
118 1 327 1 363 1 373 1 184 1 67 1 248 1 
118 1 346 1 264 1 266 1 42 1 121 1 327 1 363 1 373 1 184 1 248 1 67 1 
208 1 37 4 55 1 238 1 132 1 321 1 219 1 222 1 271 1 139 4 126 4 174 1 374 1 
94 1 0 1 37 2 201 1 321 2 219 1 269 1 222 1 191 1 139 2 126 2 107 1 174 1 206 1 
271 1 172 1 95 1 37 1 139 1 39 1 126 1 321 1 174 1 64 1 
208 1 37 2 100 1 321 1 219 1 268 1 222 1 139 2 114 1 126 2 174 1 
208 1 347 1 37 5 238 1 55 1 132 1 321 2 219 2 268 1 222 3 75 1 271 1 139 4 126 5 174 2 206 1 
208 1 37 5 238 1 55 1 132 1 321 2 219 2 268 1 222 3 5 1 75 1 271 1 139 4 126 5 174 2 206 1 
271 1 37 1 139 1 126 1 165 1 
163 1 37 1 321 1 219 1 222 1 271 1 327 2 139 1 140 1 126 1 193 1 107 1 329 1 363 1 174 1 184 2 51 1 67 1 
163 1 3 1 139 1 140 1 193 1 195 1 363 1 174 1 344 1 67 2 37 1 218 1 321 1 219 2 222 3 326 1 327 2 126 1 329 2 107 2 184 2 206 1 51 1 
163 1 3 1 139 2 140 1 193 1 195 1 363 1 174 1 344 1 67 2 37 2 218 1 321 1 219 2 222 3 326 1 327 2 126 2 329 2 107 2 374 1 184 2 83 1 206 1 
22 2 37 3 3 1 249 1 276 1 23 1 321 1 14 1 315 1 219 1 16 2 222 4 324 1 271 1 139 3 126 3 195 1 107 1 173 1 174 1 374 1 30 1 206 1 
22 2 37 3 3 1 23 1 321 1 14 1 315 1 219 1 58 1 16 2 222 4 324 1 271 1 139 3 126 3 195 1 107 1 173 1 174 1 374 1 30 1 206 1 
37 1 139 1 126 1 321 1 174 1 365 1 
208 1 347 1 36 1 37 7 201 1 73 1 321 3 219 2 268 1 189 1 269 1 222 3 75 1 271 2 317 1 114 1 139 6 126 7 107 1 174 2 365 1 
163 1 208 1 53 7 61 5 62 1 342 2 174 1 215 1 176 2 65 1 67 1 11 3 218 1 180 3 256 2 219 1 181 1 222 1 76 2 259 1 126 1 184 2 186 1 136 7 272 14 139 1 140 1 193 1 196 2 363 3 33 1 144 4 366 1 93 4 274 2 37 1 368 1 321 1 151 1 103 1 244 1 325 1 327 2 106 2 329 1 107 1 160 2 162 2 51 1 207 1 331 1 
22 3 131 1 23 1 315 1 334 2 58 1 192 1 271 1 139 1 173 2 116 2 30 1 34 1 37 1 96 1 303 1 14 1 322 1 220 2 323 1 16 3 222 2 324 1 46 1 285 1 126 1 372 2 310 1 
208 1 37 2 148 1 321 2 219 1 222 2 317 1 139 2 126 2 107 1 174 1 30 1 365 1 
163 1 37 1 321 1 219 1 222 1 271 1 327 2 139 1 140 1 126 1 193 1 107 1 329 1 363 1 174 1 184 2 83 1 67 1 
37 1 201 1 73 1 321 2 219 1 269 1 222 1 317 1 139 1 126 1 107 1 174 1 206 1 
277 1 351 1 190 1 298 1 327 1 175 1 262 1 184 1 67 1 
190 1 282 1 283 1 
351 1 190 1 153 1 363 1 175 1 
22 2 218 1 23 1 229 1 14 1 16 2 324 1 190 1 46 1 351 2 282 1 153 2 231 1 283 1 326 1 363 1 344 1 175 2 290 1 
90 1 137 1 320 1 182 1 314 1 102 1 242 1 84 1 
119 1 146 1 13 2 265 1 41 1 314 4 112 1 102 4 242 1 104 1 90 2 137 2 182 3 84 1 
90 1 236 1 137 1 254 1 12 1 13 1 320 1 182 1 314 2 102 2 242 1 84 1 
146 2 320 1 41 2 314 3 242 1 102 3 104 1 90 1 137 1 157 1 182 1 84 1 
18 1 286 2 91 1 182 2 
320 1 314 1 63 1 102 1 242 1 84 1 
90 1 137 1 13 1 320 1 182 1 314 2 102 2 242 1 84 1 10 1 
359 1 
90 1 137 1 320 1 182 1 314 1 102 1 242 1 84 1 
165 1 
90 1 137 1 182 1 314 1 102 1 242 1 84 1 
281 1 309 1 102 1 
146 1 320 1 41 2 314 3 242 1 102 3 104 1 90 1 137 1 77 1 182 1 84 1 
90 1 137 1 35 1 13 1 182 1 314 2 102 2 242 1 84 1 
320 1 39 1 314 1 112 1 242 1 102 1 172 1 182 1 288 1 161 1 84 1 
90 1 320 1 182 1 314 1 102 1 242 1 84 1 
90 2 137 1 320 1 314 1 102 1 242 1 84 1 
320 1 314 2 89 1 242 2 102 2 90 1 60 1 226 1 182 1 84 2 
119 1 98 1 320 1 13 2 314 3 112 1 242 1 102 3 90 1 137 1 182 2 84 1 10 1 
235 1 95 1 39 2 320 1 13 1 314 2 242 1 102 2 90 1 137 1 172 1 182 1 227 1 161 1 84 1 
35 1 119 1 320 1 13 2 314 4 112 1 242 2 102 4 45 1 90 1 137 1 182 2 84 2 
13 1 320 1 41 1 314 3 242 1 102 3 90 1 137 1 182 1 84 1 10 1 
119 1 265 1 182 1 112 1 
90 1 182 1 

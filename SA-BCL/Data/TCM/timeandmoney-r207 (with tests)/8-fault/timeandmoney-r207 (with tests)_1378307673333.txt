#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 115 (66,179,325) (66,179,325) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 115 (66,179,325) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (232,322) (124,217,292) (66,179,325) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (135,221) (281,312) (281,312) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 115 (66,179,325) (66,179,325) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 320 236 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 115 (124,217,292) (124,217,292) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 115 (124,217,292) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (135,221) (135,221) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 115 (124,217,292) (124,217,292) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (48,241) 111 253 (189,307) 359 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 367 (48,241) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (48,241) 111 253 (189,307) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration; | RETURN | 3400 | return null
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
84 1 2 3 51 5 357 1 166 9 190 2 33 2 141 2 291 6 116 1 229 2 173 1 14 1 259 1 177 1 365 1 239 1 278 1 304 1 306 1 201 2 372 2 351 1 252 4 185 1 284 1 47 9 83 2 
84 1 2 3 51 5 357 1 166 9 33 2 190 2 291 6 141 2 116 1 229 2 173 1 14 1 259 1 177 1 365 1 239 1 278 1 304 1 306 1 201 2 372 2 351 1 252 4 185 1 284 1 47 9 83 2 
84 1 2 4 51 6 357 1 166 10 33 2 190 2 291 7 141 2 116 1 229 2 173 1 14 1 259 1 177 1 365 1 239 1 278 1 304 1 306 1 201 2 372 2 351 1 252 5 185 1 284 1 47 10 83 2 
84 1 2 2 51 4 357 1 166 7 33 2 190 2 291 4 141 1 116 1 229 2 173 1 14 1 259 1 177 1 365 1 239 1 278 1 304 1 201 2 372 2 351 1 252 3 185 1 284 1 47 7 83 2 
2 1 365 1 51 3 166 4 304 1 190 1 33 1 141 2 291 3 116 1 229 1 306 1 201 1 372 1 185 1 252 2 47 4 14 1 
51 1 365 1 109 1 260 1 166 2 357 1 190 1 116 1 229 1 191 1 201 1 372 1 351 1 47 2 14 1 83 1 
365 1 2 1 51 2 278 1 166 3 190 2 291 1 116 1 229 2 252 1 47 3 14 1 83 1 
2 3 51 5 166 9 190 2 33 1 291 7 141 2 116 1 229 2 210 1 14 1 259 1 365 1 239 1 278 1 304 1 306 1 201 1 372 1 252 4 161 1 185 1 47 9 83 1 
2 3 51 5 166 9 190 2 33 1 291 7 141 2 116 1 229 2 210 1 14 1 259 1 365 1 239 1 278 1 304 1 306 1 201 1 372 1 252 4 161 1 185 1 47 9 83 1 
287 1 100 1 178 1 
178 1 149 2 180 1 
347 2 268 1 82 2 145 2 10 1 270 2 373 2 76 2 
268 1 54 1 3 1 165 1 315 1 270 2 87 1 89 1 117 1 360 1 231 1 362 1 298 2 61 2 145 3 10 1 299 1 337 1 36 2 93 2 69 1 241 1 128 1 324 1 76 2 21 2 131 1 78 1 157 1 347 2 82 3 183 1 203 1 373 2 107 1 313 1 286 1 
198 1 270 1 114 1 76 1 347 1 296 1 82 1 10 1 145 1 373 1 
71 1 198 1 95 1 167 1 178 1 270 1 6 1 100 1 82 1 145 1 350 1 121 1 106 1 352 1 
71 1 198 1 167 2 178 1 270 1 76 1 6 1 347 1 100 1 82 1 145 1 350 2 106 1 373 1 352 1 
72 1 167 1 350 1 108 1 305 1 
100 1 72 1 167 2 178 1 350 2 257 1 57 1 305 1 
167 1 350 1 305 1 
198 1 72 1 42 1 167 1 270 1 114 1 76 1 296 1 347 1 82 1 10 1 145 1 350 1 373 1 
178 1 
100 1 72 1 167 2 178 1 350 2 265 1 57 1 305 1 
197 1 238 2 72 2 215 1 167 5 178 1 55 1 57 1 34 2 305 2 23 2 35 1 100 1 202 1 158 1 350 5 331 1 67 1 204 1 
198 1 268 1 270 3 76 3 347 1 101 1 82 3 145 3 310 1 373 3 
296 1 198 1 82 1 145 1 270 1 373 1 76 1 
17 1 198 1 270 1 76 1 347 1 82 1 145 1 373 1 301 1 
268 1 54 1 3 1 165 1 315 1 167 1 168 1 270 3 87 1 117 1 360 1 90 1 6 1 231 1 362 1 298 2 61 1 299 1 145 4 10 1 36 1 122 1 93 1 69 1 241 1 71 1 17 1 198 1 128 1 324 1 76 3 21 1 131 1 157 1 347 2 101 1 82 4 203 1 350 1 106 1 373 3 352 1 313 1 286 1 
356 1 268 1 101 1 95 1 82 2 145 2 270 2 373 1 76 1 
17 1 198 1 71 1 167 1 168 1 178 1 270 3 76 3 6 1 347 1 101 2 82 3 145 3 350 1 106 1 373 3 352 1 122 1 258 1 
17 1 18 1 270 2 76 2 347 1 101 1 82 2 145 2 212 1 373 2 
268 1 241 1 3 1 165 1 324 1 87 1 157 1 231 1 82 1 61 1 145 1 299 1 203 1 36 1 93 1 
355 1 268 1 3 1 165 1 130 1 87 1 157 1 231 1 82 1 61 1 145 1 299 1 203 1 36 1 93 1 
31 2 54 1 188 1 315 1 209 1 117 1 230 1 320 1 362 1 120 1 298 2 212 2 275 1 151 1 69 1 366 1 18 2 283 1 21 3 326 1 78 2 313 1 286 1 
198 1 82 1 102 1 145 1 106 1 270 1 373 1 76 1 
287 1 268 1 
198 1 17 1 268 1 270 2 76 1 347 1 82 2 145 2 310 1 373 1 301 1 
31 1 18 1 212 1 
268 1 241 1 3 1 165 1 324 1 87 1 157 1 231 1 82 1 61 1 145 1 299 1 203 1 136 1 36 1 93 1 
241 1 18 1 3 1 165 1 168 1 270 1 324 1 87 1 76 1 157 1 231 1 101 1 82 2 61 1 299 1 145 2 203 1 36 1 373 1 93 1 
198 1 17 1 268 1 270 2 76 2 347 1 101 1 82 2 145 2 310 1 373 2 
296 1 198 1 102 1 82 2 145 2 270 2 373 2 76 2 
248 1 45 1 63 1 
248 1 45 1 63 1 
248 1 240 1 63 1 
248 1 240 1 63 1 
248 1 240 1 63 1 
248 1 63 1 
248 1 63 1 
52 1 285 1 
52 1 285 1 
52 1 285 1 
248 1 45 1 63 1 
99 1 248 1 63 1 
248 2 52 1 146 1 63 2 208 1 285 1 
0 1 342 1 167 2 303 1 178 1 318 2 208 1 346 2 80 1 248 2 363 2 300 1 63 2 174 2 350 2 160 3 65 2 235 1 339 1 
268 1 53 1 167 1 270 2 318 1 7 1 193 1 145 2 300 1 174 1 63 1 321 1 65 1 196 1 15 1 76 2 346 1 248 1 99 1 349 1 82 2 160 1 350 1 373 2 
201 1 372 1 33 1 
109 1 201 1 372 1 
322 1 143 1 109 1 201 3 33 2 228 1 
143 1 109 1 201 2 232 1 33 1 228 1 
143 2 109 1 201 2 33 1 228 1 
32 1 1 1 167 5 5 2 57 1 88 1 34 1 193 1 320 1 120 1 64 1 321 1 176 2 236 1 149 3 151 1 150 1 67 2 196 1 68 2 238 1 72 4 215 1 178 2 153 1 180 1 305 1 23 1 100 1 350 5 331 2 
1 2 334 1 167 9 5 6 57 1 88 2 34 2 320 3 120 3 92 5 64 1 321 4 338 1 236 3 149 9 151 3 214 1 67 5 70 1 68 6 238 2 72 7 96 1 215 1 178 5 180 3 305 6 23 2 24 1 100 1 202 1 350 9 331 6 108 5 
32 1 1 1 167 3 5 2 88 1 34 1 320 1 120 1 321 1 176 1 236 1 150 1 151 1 149 4 67 2 68 2 238 1 72 2 178 3 180 2 23 1 100 1 202 1 350 3 331 2 
32 1 1 1 167 4 5 4 88 1 34 1 320 2 120 2 321 2 176 2 338 1 236 2 149 7 150 1 151 2 67 3 70 1 68 4 238 1 72 3 96 1 178 4 180 3 23 1 100 1 202 1 350 4 331 4 
157 1 165 1 
157 1 231 1 85 1 165 3 246 2 353 1 
287 1 165 1 246 1 
165 1 279 1 
56 1 
157 1 231 1 165 1 
165 1 19 1 
69 3 164 1 110 1 154 1 209 3 21 7 132 1 171 1 78 4 230 2 361 1 44 1 144 2 38 1 218 1 151 1 277 1 
69 3 164 1 110 1 154 1 209 3 21 7 132 1 171 1 78 4 230 2 361 1 44 1 144 2 38 1 218 1 151 1 277 1 
69 3 164 1 110 1 97 1 154 1 209 3 21 7 132 1 171 1 78 4 230 2 361 1 44 1 144 2 218 1 38 1 151 1 277 1 
164 1 110 2 54 1 315 1 209 2 255 1 171 1 230 1 361 1 144 1 298 2 91 1 62 1 69 3 243 1 154 1 21 6 132 1 78 3 327 1 250 1 219 1 313 1 286 1 
164 1 54 2 110 1 315 2 209 4 171 1 230 3 298 4 144 2 38 1 151 1 277 1 69 4 154 1 21 9 345 1 132 1 78 5 327 1 44 1 105 1 218 1 313 2 286 2 
365 1 166 1 190 1 115 1 282 1 179 1 229 1 249 1 195 1 61 1 36 1 66 1 93 1 47 1 83 1 205 1 
166 2 190 1 291 1 115 1 227 1 282 1 229 1 249 1 195 1 61 1 36 1 66 1 364 1 93 1 47 2 83 1 340 1 
322 1 109 1 166 1 113 1 291 1 87 1 227 1 282 1 325 1 217 1 249 1 195 1 201 1 61 1 203 1 36 1 93 1 47 1 83 1 340 1 
3 1 166 1 190 1 281 1 282 2 229 1 249 2 195 2 61 1 36 1 312 1 364 1 93 1 47 1 83 2 221 1 49 1 
365 1 166 1 190 1 115 1 227 1 282 1 179 1 229 1 249 1 195 1 61 1 36 1 66 1 93 1 47 1 83 1 
242 1 
3 2 165 1 167 5 169 2 57 3 6 1 295 1 118 1 61 2 121 1 67 2 71 1 73 1 215 1 74 1 178 2 262 1 180 2 305 6 133 1 23 1 82 1 134 4 26 1 350 5 352 1 267 2 30 1 314 1 224 2 270 1 317 1 87 1 88 1 34 1 145 1 234 2 37 1 36 2 148 1 93 2 149 2 276 2 94 1 238 1 198 1 95 1 156 2 157 1 100 1 330 2 203 1 106 1 331 2 332 1 
198 1 71 1 73 1 95 1 167 3 270 1 262 1 57 1 305 2 6 1 156 1 118 1 82 1 134 2 145 1 26 1 350 3 265 1 106 1 121 1 332 1 352 1 
167 3 270 1 57 1 6 1 118 1 145 1 121 1 71 1 198 1 95 1 73 1 178 1 262 1 305 1 100 1 82 1 134 3 26 1 350 3 106 1 265 1 352 1 332 1 267 1 
167 3 270 1 169 1 57 1 6 1 118 1 145 1 121 1 71 1 198 1 95 1 73 1 178 1 262 1 305 2 156 1 100 1 82 1 134 3 26 1 350 3 265 1 106 1 352 1 332 1 267 1 
167 5 169 4 57 3 6 1 118 1 121 1 67 1 71 1 73 1 215 1 178 5 262 1 344 1 305 7 180 2 79 1 23 1 82 1 134 6 26 1 350 5 265 1 352 1 267 4 314 1 224 2 270 1 317 1 34 1 145 1 234 2 276 2 238 1 198 1 41 1 95 1 369 1 155 1 156 4 100 5 330 2 106 1 332 1 331 1 
167 4 169 2 57 2 6 1 118 1 121 1 67 1 71 1 73 1 215 1 178 2 262 1 180 2 305 4 23 1 82 1 134 4 26 1 350 4 352 1 267 2 314 1 224 2 270 1 317 1 34 1 145 1 234 2 37 1 149 2 276 2 238 1 198 1 95 1 156 2 100 1 330 2 106 1 332 1 331 1 
314 1 167 4 224 2 270 1 169 2 317 1 57 2 34 1 6 1 118 1 145 1 234 2 121 1 67 1 276 2 238 1 41 1 71 1 198 1 95 1 73 1 215 1 178 1 262 1 155 1 344 1 305 4 180 2 156 2 23 1 100 1 82 1 330 2 134 4 26 1 350 4 106 1 331 1 352 1 332 1 267 2 
314 1 167 4 224 2 270 1 169 2 317 1 57 2 34 1 6 1 118 1 145 1 234 2 121 1 67 1 276 2 238 1 41 1 71 1 198 1 95 1 73 1 215 1 178 1 262 1 155 1 344 1 305 4 180 2 156 2 23 1 100 1 82 1 330 2 134 4 26 1 350 4 106 1 331 1 352 1 332 1 267 2 
314 1 139 1 167 4 224 2 270 1 169 2 57 2 34 1 6 1 118 1 145 1 121 1 123 2 149 2 67 1 276 2 238 1 41 1 71 1 198 1 95 1 73 1 215 1 129 2 178 1 262 1 20 1 305 4 156 2 22 1 23 1 100 1 82 1 134 4 26 1 350 4 106 1 331 1 352 1 332 1 267 2 
314 1 167 4 224 2 270 1 317 1 169 3 57 2 34 1 6 1 118 1 145 1 234 2 121 1 67 1 276 2 238 1 41 1 71 1 198 1 95 1 73 1 215 1 178 1 262 1 155 1 344 1 180 2 305 5 156 3 23 1 79 1 100 1 82 1 330 2 134 5 26 1 350 4 106 1 331 1 352 1 332 1 267 3 
314 1 167 4 224 2 270 1 317 1 169 3 57 2 34 1 6 1 118 1 145 1 234 2 121 1 67 1 276 2 238 1 41 1 71 1 198 1 95 1 73 1 215 1 178 1 262 1 155 1 344 1 180 2 305 5 156 3 23 1 79 1 100 1 82 1 330 2 134 5 26 1 350 4 106 1 331 1 352 1 332 1 267 3 
314 1 167 4 224 2 270 1 169 2 57 2 34 1 6 1 118 1 145 1 37 1 121 1 123 2 149 2 67 1 276 2 238 1 71 1 198 1 73 1 95 1 215 1 129 2 178 1 262 1 305 4 156 2 23 1 22 1 100 1 82 1 134 4 26 1 350 4 106 1 331 1 352 1 332 1 267 2 
31 1 164 1 18 1 54 1 315 1 209 1 283 1 21 2 326 1 117 1 78 2 362 1 120 1 298 2 212 1 313 1 151 1 286 1 
31 1 69 1 18 1 54 1 315 1 209 1 21 1 326 1 117 1 230 1 362 1 320 1 298 2 212 1 275 1 313 1 286 1 
69 1 31 2 164 1 18 2 54 1 315 1 209 2 21 3 326 1 117 1 78 2 230 1 320 1 362 1 120 1 298 2 212 2 236 1 313 1 151 1 286 1 
31 1 164 1 18 1 54 1 315 1 209 1 283 1 21 2 117 1 78 2 362 1 120 1 298 2 212 1 313 1 151 1 29 1 286 1 
31 1 69 1 18 1 54 1 315 1 209 1 21 1 117 1 230 1 362 1 320 1 298 2 212 1 275 1 313 1 29 1 286 1 
69 1 31 2 164 1 18 2 54 1 315 1 209 2 21 3 117 1 78 2 230 1 320 1 362 1 120 1 298 2 212 2 236 1 313 1 151 1 29 1 286 1 
69 1 31 2 164 1 18 2 54 1 315 1 209 2 21 3 117 1 78 2 230 1 320 1 362 1 120 1 298 2 212 2 236 1 313 1 151 1 286 1 
268 1 3 1 54 1 165 1 315 1 87 1 117 1 360 1 231 1 362 1 61 1 298 2 299 1 145 1 337 1 36 1 93 1 69 1 241 1 128 1 324 1 21 2 78 1 157 1 82 1 203 1 313 1 286 1 
355 1 268 1 3 1 54 1 165 1 315 1 87 1 117 1 231 1 362 1 61 1 298 2 299 1 145 1 337 1 36 1 93 1 69 1 128 1 130 1 244 1 21 2 78 1 157 1 82 1 203 1 313 1 286 1 
69 1 31 2 164 1 18 2 54 1 315 1 261 1 209 2 21 3 117 1 78 2 230 1 320 1 362 1 120 1 298 2 212 2 236 1 313 1 151 1 286 1 
31 2 164 1 54 1 165 1 315 1 209 2 87 1 117 1 360 1 230 1 231 1 320 1 120 1 362 1 61 1 298 2 299 1 145 1 212 2 36 1 93 1 236 1 151 1 69 1 241 1 18 2 324 1 21 3 78 2 157 1 182 1 82 1 203 1 313 1 205 1 286 1 
31 1 54 1 315 1 270 1 117 1 58 1 320 1 362 1 120 1 298 2 145 1 212 1 236 1 151 1 69 1 17 1 18 1 261 1 76 1 21 3 78 2 347 1 82 1 373 1 313 1 286 1 
287 1 31 1 268 2 54 1 315 1 209 2 117 1 171 1 230 2 362 1 298 2 144 1 212 1 38 1 151 1 277 1 69 3 18 1 21 6 326 1 132 1 78 3 44 1 218 1 313 1 286 1 
31 8 164 1 268 1 54 2 315 2 209 2 117 1 230 1 256 1 362 2 120 2 320 1 298 4 91 2 212 3 13 1 236 2 151 2 69 4 198 1 18 8 368 1 128 1 261 1 21 10 78 6 250 2 103 1 310 1 137 1 313 2 286 2 
268 1 3 1 54 1 165 1 315 1 358 1 168 1 316 1 270 1 87 1 117 1 231 1 362 1 61 1 298 2 299 1 145 2 36 1 212 1 337 1 93 1 69 1 241 1 128 1 324 1 261 1 76 1 21 2 78 1 157 1 101 1 82 2 203 1 159 1 136 1 373 1 313 1 286 1 
164 4 3 1 54 3 165 2 168 1 289 1 209 8 117 3 171 1 8 1 9 2 120 2 61 3 298 6 299 2 337 1 212 7 69 8 18 7 128 1 261 1 76 1 21 18 132 1 78 10 307 2 182 2 82 3 218 1 138 1 313 3 31 7 268 2 315 3 270 1 227 1 87 2 360 2 230 4 231 2 362 3 320 2 144 1 145 3 233 2 36 3 38 1 93 3 236 2 151 3 277 1 241 2 324 2 157 2 101 1 44 1 203 2 373 1 286 3 
3 2 54 2 165 3 315 2 207 1 270 1 142 1 227 1 87 2 89 2 117 2 293 1 362 2 61 8 298 4 145 1 36 7 337 1 93 8 148 1 69 1 128 1 75 1 76 1 21 2 326 1 247 1 78 1 328 1 157 2 101 1 82 1 203 2 373 1 313 2 29 1 30 1 205 1 286 2 
31 1 54 1 315 1 270 1 209 1 117 1 230 1 362 1 120 1 320 1 298 2 145 1 212 1 236 1 151 1 69 1 17 1 18 1 261 1 76 1 21 2 78 1 347 1 82 1 373 1 313 1 354 1 286 1 
164 3 54 3 315 3 140 1 4 1 112 1 209 4 254 1 171 1 230 1 297 1 119 1 120 3 320 3 144 1 298 6 91 2 62 2 38 1 236 3 151 4 277 1 16 1 69 13 280 3 21 30 132 1 77 1 78 17 327 1 43 1 250 2 370 1 44 1 251 1 105 1 218 1 220 1 313 3 162 1 286 3 
164 1 54 2 315 2 140 1 4 1 112 1 209 1 297 1 119 1 120 3 320 2 274 1 298 4 91 2 62 2 236 3 151 3 69 9 280 3 21 22 77 1 78 13 327 1 43 1 250 2 370 2 251 1 105 1 220 1 313 2 162 2 286 2 
164 4 54 3 112 1 4 1 209 5 171 1 297 1 120 3 119 1 298 6 62 3 69 15 16 1 21 34 77 1 132 1 78 19 218 1 220 1 313 3 315 3 140 1 226 1 230 1 320 3 144 1 274 1 91 3 38 1 236 3 151 4 277 1 280 4 43 1 327 1 250 3 370 2 251 1 44 1 105 1 162 1 286 3 
164 3 54 3 315 3 140 1 4 1 112 1 209 4 171 1 230 1 297 1 119 1 120 3 320 3 274 1 144 1 298 6 91 2 62 2 38 1 236 3 151 4 277 1 16 1 69 13 280 3 21 30 132 1 77 1 78 17 327 1 43 1 250 2 370 1 44 1 251 1 105 1 218 1 220 1 313 3 162 1 286 3 
164 2 54 2 315 2 140 1 4 1 112 1 209 3 230 1 297 1 119 1 120 3 320 3 274 1 298 4 91 2 62 2 236 3 151 3 69 10 280 3 21 23 77 1 78 13 327 1 43 1 250 2 370 1 251 1 105 1 220 1 313 2 162 1 286 2 
342 1 167 1 303 1 178 1 318 1 208 1 346 1 80 1 248 1 363 1 300 1 350 1 63 1 174 1 160 2 65 1 235 1 339 1 
342 1 167 1 303 1 178 1 318 1 208 1 346 1 80 1 248 1 363 1 300 1 350 1 63 1 174 1 160 2 65 1 235 1 339 1 
342 1 167 1 303 1 178 1 318 1 208 1 346 1 80 1 248 1 363 1 300 1 350 1 63 1 174 1 160 2 65 1 235 1 339 1 
146 1 45 1 343 1 
146 1 45 1 343 1 
240 1 225 1 
240 1 146 1 225 1 
349 1 15 1 
268 1 53 1 167 1 270 2 318 1 7 1 193 1 363 1 145 2 11 1 174 1 63 1 321 1 65 1 235 1 196 1 15 1 72 1 76 2 346 1 248 1 99 1 349 1 82 2 350 1 160 1 373 2 
248 1 303 1 323 1 174 1 63 1 318 1 65 1 208 1 339 1 346 1 
99 1 53 1 
273 1 248 1 329 1 174 1 63 1 12 1 318 1 65 1 346 1 
45 1 343 1 
240 1 146 1 225 1 
54 1 165 1 315 1 207 1 290 1 270 2 87 1 89 2 117 1 192 1 362 1 61 2 60 1 298 2 145 2 337 1 36 2 93 2 69 1 128 1 75 1 261 1 21 2 216 1 98 1 78 1 157 1 82 2 203 1 313 1 286 1 
124 1 195 1 61 2 184 1 36 2 292 1 115 1 93 2 227 1 205 1 
195 1 61 1 36 1 292 1 115 1 93 1 227 1 39 1 
195 1 3 1 61 1 135 1 184 1 36 1 93 1 221 1 
124 1 195 1 61 1 184 1 36 1 292 1 115 1 93 1 227 1 
40 1 
287 1 100 1 197 1 178 1 331 1 67 1 204 1 
167 1 317 1 57 1 34 1 234 1 149 1 67 1 238 1 215 1 178 2 180 1 305 1 23 1 100 1 330 1 350 1 331 1 
85 1 3 1 165 4 189 1 111 1 359 1 87 2 88 1 34 1 231 1 61 1 147 1 36 1 93 1 67 1 238 1 215 1 279 2 246 1 23 1 157 1 203 1 48 1 253 1 
4 1 112 1 5 5 34 1 120 2 320 2 91 1 62 1 236 2 149 6 151 2 67 5 68 5 238 1 215 1 178 4 77 1 180 3 43 1 23 1 250 1 100 1 251 1 331 4 
167 1 270 1 170 2 114 1 34 1 171 1 296 1 145 1 10 1 151 2 67 2 277 1 238 1 198 1 215 1 42 1 155 1 76 1 132 1 23 1 347 1 82 1 44 1 350 1 373 1 331 2 27 1 333 1 
197 1 238 1 215 1 178 1 34 1 23 1 100 1 331 1 204 1 67 1 
68 5 178 5 5 5 170 2 180 5 120 2 320 2 233 1 331 5 236 2 151 2 149 10 333 1 67 3 
100 1 167 1 178 1 350 1 57 1 305 1 
187 1 3 2 165 2 167 2 86 1 271 1 87 3 88 1 57 1 34 2 295 1 231 1 61 3 36 3 93 3 148 1 67 1 94 1 238 2 152 1 302 1 215 1 74 1 305 2 157 2 23 2 202 1 203 2 350 2 311 1 266 1 331 1 30 1 
268 1 54 1 3 1 165 1 315 1 270 2 87 1 117 1 360 1 231 1 362 1 298 2 61 1 145 3 10 1 299 1 36 1 93 1 69 1 241 1 128 1 324 1 76 2 21 1 131 1 347 2 157 1 82 3 203 1 373 2 313 1 286 1 
68 2 238 1 215 1 178 4 5 2 88 1 34 1 180 2 23 1 295 1 100 2 144 1 331 2 149 4 67 1 
194 1 174 1 346 1 
194 1 174 1 346 1 
174 1 346 1 264 1 
174 1 346 1 264 1 
174 1 346 1 264 1 
174 1 346 1 
248 1 63 1 
194 1 174 1 346 1 
349 1 174 1 199 1 339 1 346 1 
69 4 164 1 54 2 315 2 209 3 21 8 132 1 78 4 171 1 230 2 327 1 144 1 44 1 298 4 38 1 218 1 151 1 313 2 277 1 286 2 
69 3 287 1 209 2 21 6 132 1 171 1 78 3 230 2 144 1 44 1 38 1 218 1 151 1 277 1 
69 1 222 1 164 1 54 1 315 1 209 2 21 3 78 2 230 1 320 1 120 1 298 2 236 1 313 1 151 1 286 1 
69 1 250 1 91 1 62 1 21 2 78 1 
164 4 54 1 315 1 209 8 171 2 230 4 256 1 320 2 120 2 144 1 298 2 91 2 38 1 236 2 151 5 277 3 69 10 368 1 21 23 132 2 78 13 327 1 250 2 44 2 103 1 218 1 27 1 313 1 286 1 
69 1 91 1 21 1 
250 1 21 1 78 1 
222 1 69 2 164 1 54 1 315 1 209 3 21 5 78 3 230 2 120 1 320 1 298 2 233 1 236 1 313 1 151 1 286 1 
164 1 54 1 315 1 112 1 4 1 209 2 230 1 120 2 320 2 298 2 91 1 62 1 236 2 151 2 69 4 21 10 77 1 78 6 43 1 250 1 251 1 105 1 313 1 286 1 
69 3 164 1 209 2 21 6 132 1 78 3 171 1 230 1 44 1 151 1 277 1 
69 2 164 1 54 1 315 1 209 2 21 3 132 1 78 1 171 1 230 1 327 1 298 2 218 1 38 1 219 1 313 1 286 1 
69 5 164 2 54 1 315 1 209 5 21 10 132 2 171 2 78 5 230 3 298 2 44 1 105 1 27 1 313 1 151 2 286 1 277 2 
164 1 54 1 315 1 209 1 21 2 78 2 120 1 298 2 105 1 313 1 151 1 286 1 
69 1 164 1 54 1 315 1 209 2 21 3 78 2 230 1 320 1 120 1 298 2 105 1 236 1 313 1 151 1 286 1 
16 1 69 2 164 1 54 3 315 3 209 2 21 3 132 1 171 1 78 1 327 1 230 1 298 6 105 1 219 1 313 3 286 3 
222 1 164 3 54 4 315 4 209 6 255 1 171 2 230 3 298 8 91 1 62 1 38 1 151 2 277 2 69 8 16 1 21 15 132 2 78 7 327 1 250 1 44 1 105 1 218 1 219 1 27 1 313 4 286 4 
164 4 54 2 315 2 112 1 4 1 209 9 171 2 230 5 120 2 320 1 144 1 298 4 91 1 62 1 38 1 236 2 151 5 277 3 69 9 21 23 132 2 77 1 78 14 327 1 43 1 250 1 44 2 251 1 105 1 218 1 27 1 313 2 286 2 
222 1 164 1 54 3 315 3 112 1 4 1 209 4 171 1 230 3 120 2 320 1 144 1 298 6 91 1 62 1 38 1 236 2 151 3 277 1 69 6 21 16 132 1 77 1 78 10 327 1 43 1 250 1 44 1 251 1 105 1 218 1 313 3 286 3 
222 1 164 1 54 2 315 2 112 1 4 1 209 1 120 2 320 2 298 4 91 1 62 1 236 2 151 2 69 5 21 11 77 1 78 6 43 1 250 1 251 1 105 1 313 2 286 2 
222 1 164 2 54 3 315 3 112 1 4 1 209 5 171 1 230 3 120 2 320 1 144 1 298 6 91 1 62 1 38 1 236 2 151 3 277 1 69 6 21 16 132 1 77 1 78 10 327 1 43 1 250 1 44 1 251 1 105 1 218 1 313 3 286 3 
164 4 54 2 315 2 112 1 4 1 209 9 171 2 230 5 120 2 320 1 144 1 298 4 91 1 62 1 38 1 236 2 151 5 277 3 69 9 21 23 132 2 77 1 78 14 327 1 43 1 250 1 44 2 251 1 105 1 218 1 27 1 313 2 286 2 
164 1 54 1 315 1 112 1 4 1 209 2 230 1 120 2 320 2 298 2 91 1 62 1 236 2 151 2 69 4 21 10 77 1 78 6 43 1 250 1 251 1 105 1 313 1 286 1 
222 1 164 1 54 3 315 3 112 1 4 1 209 1 120 2 320 1 298 6 91 1 62 1 236 2 151 2 69 4 21 11 77 1 78 7 327 1 43 1 250 1 251 1 105 1 313 3 286 3 
164 2 54 3 315 3 112 1 4 1 209 4 230 2 120 2 320 1 298 6 91 1 62 1 236 2 151 2 69 4 16 1 21 11 77 1 78 7 327 1 43 1 250 1 251 1 105 1 313 3 286 3 
69 4 164 3 209 6 21 7 132 3 171 3 78 3 230 3 44 1 38 1 218 2 151 1 277 1 
164 1 54 3 315 3 112 1 4 1 209 1 120 2 320 1 298 6 91 1 62 1 236 2 151 2 69 4 16 1 21 11 77 1 78 7 327 1 43 1 250 1 251 1 105 1 313 3 286 3 
356 1 268 1 95 1 82 1 25 1 145 1 270 1 
356 1 268 1 95 1 270 1 245 1 172 1 308 1 309 1 25 1 82 1 145 1 186 1 
157 1 287 1 3 1 165 1 61 1 203 1 36 1 87 1 148 1 93 1 30 1 
268 1 241 1 3 1 165 1 270 1 87 1 76 1 157 1 231 1 101 1 82 2 61 1 299 1 145 2 203 1 36 1 373 1 93 1 
268 1 165 3 86 1 270 2 87 1 231 2 61 1 145 2 299 1 36 1 93 1 241 1 198 1 367 1 19 1 76 2 157 2 101 1 82 2 203 1 106 1 373 1 352 1 
355 1 268 1 165 3 86 1 270 2 87 1 231 2 61 2 145 2 299 1 36 2 93 2 198 1 367 1 19 1 76 2 181 1 157 2 101 1 82 2 203 1 106 1 373 1 352 1 
3 1 165 4 167 2 223 1 86 1 87 1 6 1 231 1 61 3 36 3 93 3 367 1 178 1 19 1 279 1 246 1 305 1 181 1 157 1 100 1 203 1 350 2 163 1 
367 1 165 4 167 1 86 1 19 1 279 1 87 1 246 1 157 1 231 1 61 1 350 1 203 1 36 1 93 1 48 1 
61 1 203 1 36 1 87 1 93 1 247 1 
187 1 85 1 3 2 165 3 75 1 335 1 142 1 227 1 87 3 89 1 247 1 293 1 328 1 157 2 231 1 61 7 203 2 311 1 36 6 93 7 205 1 
54 2 165 1 209 2 117 2 171 1 61 1 298 4 60 1 299 1 212 1 69 3 18 1 261 1 76 1 21 6 132 1 78 3 307 1 182 1 82 2 218 1 313 2 31 1 268 2 315 2 270 1 87 1 360 1 230 2 231 1 362 2 144 1 145 2 36 1 38 1 93 1 151 1 277 1 241 1 324 1 157 1 101 1 44 1 203 1 373 1 205 1 286 2 
238 1 72 1 3 1 165 2 189 1 215 1 111 1 167 1 271 1 279 1 246 1 34 1 23 1 61 1 350 1 36 1 93 1 48 1 253 1 
157 1 231 1 85 1 165 2 61 2 203 1 147 1 36 2 87 2 93 2 246 1 247 1 205 1 
3 1 165 1 87 1 181 1 157 1 61 4 203 1 46 1 36 4 93 4 148 1 30 1 205 1 
187 1 152 1 165 1 86 1 289 1 87 2 157 1 231 1 61 2 203 1 311 1 36 2 266 1 93 2 
109 1 201 1 3 1 61 1 372 1 203 1 36 1 113 1 87 1 93 1 
165 1 75 1 227 1 87 1 216 1 157 1 61 2 203 1 36 2 93 2 205 1 
3 1 165 3 75 1 86 1 142 1 87 2 328 1 157 2 61 5 203 2 46 1 36 4 148 1 93 5 30 1 205 1 
3 1 165 3 75 1 86 1 87 2 328 1 157 2 61 5 81 1 203 2 46 1 36 4 148 1 93 5 30 1 205 1 
355 1 268 1 3 1 165 1 270 1 87 1 76 1 157 1 231 1 101 1 82 2 61 1 299 1 145 2 203 1 36 1 373 1 93 1 
187 1 85 1 165 1 335 1 86 1 87 2 157 1 231 1 61 1 203 1 311 1 36 1 93 1 
192 1 288 1 82 1 145 1 336 1 270 1 290 1 98 1 294 1 
348 1 28 1 294 1 
268 1 288 1 336 1 263 1 294 1 
268 1 198 1 288 2 71 1 72 1 167 2 178 1 263 2 6 1 294 1 100 1 348 1 104 1 336 2 350 2 106 1 352 1 122 1 28 1 
287 1 51 1 116 1 14 1 
51 1 166 1 190 1 116 1 47 1 14 1 229 1 
249 1 166 1 83 1 
50 1 51 1 365 1 127 1 166 3 206 1 190 1 116 1 229 1 351 2 47 3 14 1 
51 1 166 2 190 1 291 1 141 1 116 1 47 2 14 1 229 1 
51 1 365 1 201 1 166 1 372 1 304 1 33 1 190 1 252 1 47 1 229 1 
51 1 365 1 166 1 190 1 116 1 47 1 229 1 
365 1 166 1 190 1 116 2 47 1 14 1 229 1 
51 1 365 1 126 1 166 2 190 2 116 1 229 2 200 1 371 1 47 2 
365 1 239 1 2 1 51 2 166 3 190 1 291 2 116 1 229 1 252 1 47 3 14 1 259 1 
322 1 51 1 365 1 109 1 166 2 190 1 33 1 291 1 116 1 272 1 229 1 201 2 372 1 47 2 14 1 
365 1 2 1 51 2 166 4 190 2 141 1 291 2 116 1 229 2 306 1 252 1 47 4 14 1 
51 1 365 1 166 1 190 1 116 1 47 1 14 1 229 1 
2 1 51 3 127 1 166 4 206 1 190 1 291 2 116 2 229 1 351 1 213 1 252 1 47 4 14 2 
51 1 365 1 166 2 269 1 190 1 291 1 116 1 229 1 210 1 47 2 14 1 237 1 
51 1 365 1 127 2 166 3 206 1 190 1 116 1 229 1 211 1 351 2 47 3 14 1 
125 1 319 2 51 2 341 1 
365 1 166 1 175 1 190 1 47 1 229 1 
51 1 239 1 365 1 166 2 190 1 291 1 116 1 47 2 14 1 229 1 
59 1 
51 1 365 1 166 1 190 1 116 1 47 1 14 1 229 1 
239 1 51 1 365 1 166 3 190 1 351 1 291 1 116 1 47 3 14 1 229 1 
51 1 2 1 213 1 252 1 
51 1 116 1 

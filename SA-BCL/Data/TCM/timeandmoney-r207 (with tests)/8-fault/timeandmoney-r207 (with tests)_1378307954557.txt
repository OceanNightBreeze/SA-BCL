#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (133,367) (133,367) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (133,367) (133,367) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (133,367) (133,367) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (133,367) (133,367) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 222 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 222 218 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 222 218 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (167,232) (167,232) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (48,282) 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 12 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 12 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 12 268 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 123 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (174,181,263) (207,252,300) (207,252,300) (207,252,300) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (174,181,263) (207,252,300) (207,252,300) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (174,181,263) (207,252,300) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (174,181,263) (207,252,300) (207,252,300) (207,252,300) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (4,251) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (48,282) 351 16 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 154 326 229 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 154 326 229 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 154 326 229 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 154 326 229 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 154 326 229 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (174,181,263) (174,181,263) (174,181,263) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (174,181,263) (174,181,263) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (174,181,263) (174,181,263) (174,181,263) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 77 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 16 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (167,232) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 335 275 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (48,282) 351 202 (18,176) (18,176) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 134 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio; | RETURN | 1258 | return null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4780 | stmt -> ;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
261 1 150 1 307 1 76 1 265 1 161 1 95 1 22 1 24 1 133 1 367 1 148 1 
22 1 150 1 261 1 95 1 24 1 133 1 367 1 307 1 265 1 76 1 148 1 161 1 
22 1 150 1 261 1 95 1 24 1 133 1 367 1 307 1 265 1 76 1 148 1 161 1 
22 1 150 1 261 1 95 1 24 1 133 1 367 1 307 1 265 1 76 1 148 1 161 1 
150 2 261 1 95 1 2 1 356 1 24 1 306 1 99 1 283 1 222 1 76 2 161 1 
0 1 194 1 261 1 150 2 2 1 276 1 74 1 104 1 76 2 265 1 161 1 95 1 173 1 153 1 215 1 148 1 
0 1 194 1 261 2 150 3 2 2 306 1 129 1 76 3 161 2 95 1 356 1 267 1 148 1 
218 1 290 1 261 2 150 7 2 3 306 3 129 1 222 1 113 1 76 7 161 2 95 1 356 5 24 1 267 2 99 1 283 1 281 1 148 1 
218 1 290 1 261 2 150 7 2 3 306 3 129 1 222 1 113 1 76 7 161 2 95 1 356 5 24 1 267 2 99 1 283 1 281 1 148 1 
67 1 88 1 77 1 
323 1 284 2 88 1 
227 1 172 2 5 2 187 2 348 2 35 1 100 2 159 2 
188 2 352 1 353 1 94 2 172 2 5 2 175 1 35 1 65 2 286 1 100 2 217 1 338 1 195 1 361 1 219 1 198 1 71 1 156 1 321 1 128 1 159 2 40 1 80 2 227 1 25 1 297 1 247 2 324 1 187 2 348 2 230 1 29 1 
266 1 343 1 172 1 5 1 187 1 348 1 35 1 100 1 29 1 159 1 
67 1 243 1 138 1 159 1 308 1 19 1 172 1 213 1 5 1 214 1 185 1 147 1 29 1 88 1 
67 1 243 1 159 1 308 1 19 2 172 1 213 1 5 1 147 2 185 1 348 1 187 1 100 1 29 1 88 1 
360 1 60 1 86 1 147 1 19 1 
67 1 60 1 86 1 147 2 294 1 210 1 88 1 19 2 
60 1 147 1 19 1 
343 1 333 1 159 1 19 1 266 1 172 1 86 1 5 1 147 1 348 1 187 1 35 1 100 1 29 1 
88 1 
67 1 97 1 60 1 86 1 147 2 210 1 88 1 19 2 
67 1 232 1 250 2 69 1 199 1 72 2 209 1 167 1 277 2 75 1 130 1 210 1 19 5 245 1 228 1 60 2 86 2 147 5 88 1 
227 1 77 1 
70 1 159 2 227 2 164 1 172 2 5 2 348 1 187 1 100 1 
251 1 282 1 351 1 
188 1 361 1 71 1 128 1 332 1 94 1 227 1 247 1 324 1 29 1 
46 1 188 1 361 1 71 1 128 1 159 1 365 1 94 1 172 1 5 1 247 1 282 1 348 1 187 1 
227 1 46 1 172 3 5 3 187 3 348 3 100 1 159 3 
266 1 172 1 5 1 187 1 348 1 29 1 159 1 
164 1 70 1 172 1 5 1 187 1 348 1 100 1 29 1 159 1 
46 1 188 1 352 1 308 1 94 1 172 3 213 1 33 1 5 3 35 1 65 2 286 1 100 2 338 1 195 1 361 1 219 1 71 1 243 1 156 1 321 1 128 1 293 1 40 1 159 3 19 1 80 1 365 1 227 1 164 1 25 1 247 1 185 1 147 1 187 3 348 3 230 1 29 1 
227 1 46 1 172 2 5 2 214 1 187 1 348 1 158 1 159 2 
46 2 253 1 243 1 159 3 19 1 308 1 365 1 164 1 172 3 213 1 5 3 33 1 147 1 185 1 348 3 187 3 100 1 29 1 88 1 
46 1 251 1 159 2 164 1 172 2 5 2 348 2 187 2 282 1 100 1 
188 1 361 1 71 1 128 1 94 1 227 1 247 1 324 1 29 1 
188 1 361 1 180 1 139 1 159 1 55 1 94 1 227 1 203 1 172 1 247 1 43 1 37 1 359 1 141 1 
208 1 251 2 190 1 48 1 3 1 352 1 4 1 115 1 58 1 175 2 282 2 65 2 286 1 121 1 338 1 195 1 219 2 156 1 201 1 80 4 78 1 249 1 230 1 351 2 
103 1 172 1 243 1 5 1 187 1 348 1 29 1 159 1 
102 1 46 2 158 1 169 1 159 5 365 1 227 1 164 1 172 5 5 5 214 1 348 4 187 4 100 1 
266 1 103 1 172 2 5 2 187 2 348 2 29 1 159 2 
144 1 56 1 
144 1 56 1 
145 1 186 1 
145 1 186 1 
145 1 186 1 
144 1 301 1 56 1 
144 1 301 1 56 1 
11 1 144 1 56 1 
197 1 144 2 347 1 145 1 186 1 56 2 
144 1 301 1 56 1 
68 1 144 1 56 1 
68 1 144 1 56 1 
68 1 144 1 56 1 
124 2 197 1 317 1 13 2 345 1 56 2 19 2 118 2 310 1 255 1 144 2 295 1 163 2 132 1 85 3 147 2 177 1 88 1 270 2 
11 1 231 1 124 1 196 1 13 1 322 1 159 2 160 1 19 1 56 1 81 1 118 1 227 1 255 1 144 1 172 2 5 2 85 1 147 1 348 2 187 2 8 1 165 1 270 1 
24 1 
173 1 74 1 215 1 
24 2 74 1 54 1 215 1 
238 1 24 1 146 1 74 1 93 1 215 1 108 1 
238 1 74 1 24 1 146 2 215 1 108 1 
250 1 47 1 49 1 330 1 209 1 277 1 210 1 115 1 58 1 256 1 60 1 284 3 122 2 67 1 12 1 196 1 69 2 199 3 72 1 322 1 364 2 19 5 201 1 78 1 81 1 323 1 183 2 86 4 147 5 107 1 87 1 88 2 
250 2 47 1 136 3 49 1 209 1 277 2 210 1 115 1 58 1 60 4 284 3 9 1 360 3 67 1 12 1 342 1 69 2 199 3 72 2 364 2 130 1 19 7 201 1 78 1 81 2 323 1 183 2 86 5 26 1 147 7 107 1 88 3 
47 1 12 1 250 1 199 1 72 1 277 1 130 1 19 2 256 1 86 1 147 2 87 1 
47 1 12 1 250 1 199 1 72 1 277 1 130 1 19 1 256 1 147 1 268 1 87 1 
139 1 135 1 77 1 
31 1 139 1 
358 1 
43 1 139 1 
116 1 
43 1 139 1 55 1 
184 1 139 1 
219 3 233 1 14 1 3 2 52 1 18 1 115 1 80 7 58 1 171 1 366 1 202 2 192 1 175 4 249 3 176 1 178 1 
219 3 233 1 14 1 3 2 52 1 18 1 115 1 80 7 58 1 171 1 366 1 202 2 192 1 175 4 249 3 176 1 178 1 
219 3 233 1 14 1 3 2 52 1 18 1 115 1 80 7 58 1 171 1 366 1 202 2 192 1 175 4 249 3 176 1 178 1 350 1 
91 1 219 4 233 1 3 1 52 2 201 1 115 1 78 1 80 8 114 1 58 1 366 1 202 1 98 1 107 1 175 4 249 2 205 2 10 1 123 1 
303 1 233 1 3 3 52 1 115 1 117 1 58 1 192 1 175 5 65 4 286 2 176 1 178 1 338 2 195 2 125 1 219 4 156 2 14 1 18 1 80 9 202 2 366 1 249 4 
339 1 166 1 188 1 263 1 207 1 252 1 261 1 150 1 273 1 126 1 30 1 74 1 54 1 76 1 161 1 94 1 95 1 24 1 247 1 300 1 312 1 215 1 141 1 359 1 148 1 
339 1 340 1 188 1 263 1 207 1 261 1 150 2 329 1 273 1 126 1 30 1 74 1 54 1 157 1 76 2 161 1 94 1 356 1 24 1 247 1 300 1 312 1 215 1 141 1 359 1 148 1 
340 1 188 1 263 1 207 1 150 1 329 1 273 1 126 1 30 1 74 1 54 1 76 1 94 1 356 1 24 1 247 1 312 1 215 1 141 1 359 1 148 1 
188 1 150 1 273 2 30 2 139 1 94 1 32 1 312 2 141 1 359 1 361 1 261 1 240 1 320 1 157 1 39 1 76 1 161 1 162 1 247 1 43 1 28 1 148 2 
339 1 188 1 263 1 207 1 252 1 261 1 150 1 329 1 273 1 126 1 30 1 74 1 54 1 76 1 161 1 94 1 95 1 24 1 247 1 300 1 312 1 215 1 141 1 359 1 148 1 
298 1 
110 2 47 1 188 2 50 2 275 1 112 1 277 1 151 1 191 1 335 1 60 6 5 1 284 2 287 2 67 1 69 2 199 2 72 1 243 1 159 1 19 5 79 2 83 2 162 1 247 2 27 1 28 1 29 1 88 2 89 1 250 1 209 1 138 1 139 1 210 3 308 1 94 2 170 1 212 2 96 1 172 1 213 1 214 1 34 1 359 1 141 1 361 2 142 2 221 1 363 1 182 4 323 2 43 1 147 5 185 1 
142 1 221 1 243 1 138 1 210 1 151 1 159 1 19 3 308 1 182 2 170 1 97 1 60 2 213 1 172 1 5 1 27 1 185 1 147 3 214 1 29 1 89 1 
138 1 151 1 210 1 308 1 170 1 212 1 97 1 60 1 172 1 213 1 5 1 214 1 67 1 221 1 243 1 159 1 19 3 182 3 27 1 147 3 185 1 29 1 89 1 88 1 
138 1 210 1 151 1 308 1 170 1 212 1 97 1 172 1 213 1 60 2 5 1 214 1 287 1 67 1 142 1 221 1 243 1 159 1 19 3 182 3 27 1 147 3 185 1 29 1 89 1 88 1 
110 2 50 2 112 1 277 1 151 1 191 1 60 7 5 1 63 1 287 4 67 5 69 1 199 1 243 1 72 1 159 1 19 5 79 2 346 1 83 2 27 1 29 1 89 1 88 5 250 1 209 1 138 1 210 3 308 1 170 1 140 1 212 4 97 1 213 1 172 1 214 1 311 1 142 4 221 1 182 6 323 2 42 1 185 1 147 5 
110 2 50 2 112 1 277 1 151 1 191 1 60 4 5 1 284 2 287 2 67 1 69 1 199 1 243 1 72 1 159 1 19 4 79 2 83 2 27 1 29 1 89 1 88 2 250 1 209 1 138 1 210 2 308 1 170 1 212 2 213 1 172 1 214 1 142 2 221 1 363 1 182 4 323 2 185 1 147 4 
110 2 250 1 50 2 209 1 112 1 138 1 277 1 210 2 151 1 308 1 191 1 140 1 170 1 212 2 60 4 172 1 213 1 5 1 214 1 287 2 67 1 142 2 69 1 199 1 221 1 243 1 72 1 159 1 19 4 79 2 182 4 346 1 83 2 323 2 42 1 27 1 147 4 185 1 29 1 88 1 89 1 
110 2 250 1 50 2 209 1 112 1 138 1 277 1 210 2 151 1 308 1 191 1 140 1 170 1 212 2 60 4 172 1 213 1 5 1 214 1 287 2 67 1 142 2 69 1 199 1 221 1 243 1 72 1 159 1 19 4 79 2 182 4 346 1 83 2 323 2 42 1 27 1 147 4 185 1 29 1 88 1 89 1 
45 2 110 2 109 1 250 1 137 2 50 2 209 1 112 1 138 1 277 1 210 2 151 1 308 1 140 1 170 1 212 2 60 4 172 1 213 1 5 1 214 1 284 2 287 2 67 1 142 2 69 1 199 1 221 1 243 1 72 1 159 1 19 4 182 4 41 1 226 1 27 1 147 4 185 1 29 1 88 1 89 1 
110 2 250 1 50 2 209 1 112 1 138 1 277 1 210 2 151 1 308 1 191 1 140 1 170 1 212 3 172 1 213 1 60 5 5 1 214 1 311 1 287 3 67 1 69 1 142 3 199 1 221 1 72 1 243 1 159 1 19 4 79 2 182 5 346 1 83 2 323 2 42 1 27 1 147 4 185 1 29 1 88 1 89 1 
110 2 250 1 50 2 209 1 112 1 138 1 277 1 210 2 151 1 308 1 191 1 140 1 170 1 212 3 172 1 213 1 60 5 5 1 214 1 311 1 287 3 67 1 69 1 142 3 199 1 221 1 72 1 243 1 159 1 19 4 79 2 182 5 346 1 83 2 323 2 42 1 27 1 147 4 185 1 29 1 88 1 89 1 
109 1 110 2 45 2 50 2 112 1 277 1 151 1 60 4 5 1 284 2 287 2 67 1 69 1 199 1 243 1 72 1 159 1 19 4 27 1 29 1 89 1 88 1 250 1 137 2 209 1 138 1 210 2 308 1 170 1 212 2 213 1 172 1 214 1 142 2 221 1 363 1 182 4 185 1 147 4 
251 1 208 1 3 2 352 1 115 1 58 1 192 1 282 1 175 3 176 1 65 2 286 1 178 1 338 1 195 1 219 3 14 1 156 1 18 1 77 1 80 6 227 2 202 1 249 2 230 1 351 1 
251 4 91 1 233 1 3 1 92 1 352 1 115 2 58 1 98 3 282 11 175 8 285 1 65 4 286 2 258 1 10 1 338 2 195 2 219 6 198 1 156 2 321 1 73 1 224 1 80 14 78 2 201 1 227 1 107 2 249 2 205 3 230 2 351 11 
188 1 46 1 251 1 274 1 352 1 332 1 94 1 172 1 5 1 175 1 285 1 286 1 65 2 216 1 338 1 195 1 361 1 219 1 71 1 198 1 156 1 321 1 128 1 159 1 365 1 80 2 227 1 247 1 44 1 187 1 348 1 230 1 
46 1 188 1 251 3 3 1 352 2 235 1 115 1 94 1 58 1 152 1 172 1 5 1 175 3 282 3 285 1 286 2 65 4 338 2 195 2 361 1 219 4 71 1 156 2 321 1 128 1 16 1 40 1 159 1 201 1 78 1 80 7 365 1 82 1 106 1 247 1 107 1 187 1 348 1 249 1 230 2 351 3 
166 1 46 1 188 8 208 1 329 1 139 3 352 2 94 7 336 1 172 1 61 1 5 1 175 1 65 4 286 2 141 2 359 2 217 2 338 2 260 1 195 2 361 2 220 1 219 1 319 1 198 1 156 2 321 1 159 1 80 2 162 1 23 1 247 8 269 1 43 2 187 1 348 1 230 2 28 1 
251 1 3 1 352 1 115 1 58 1 193 1 172 1 5 1 282 1 175 1 285 1 65 2 286 1 100 1 338 1 195 1 219 2 156 1 159 1 78 1 80 3 201 1 164 1 348 1 187 1 107 1 249 1 230 1 351 1 
338 1 195 1 251 1 208 1 233 1 156 1 352 1 80 2 78 1 115 1 282 1 175 2 249 1 286 1 65 2 230 1 121 1 351 1 
338 1 195 1 251 1 208 1 190 1 219 2 156 1 3 1 352 1 80 2 201 1 58 1 282 1 249 1 286 1 65 2 230 1 351 1 
208 1 251 2 233 1 3 1 352 1 115 1 58 1 175 2 282 2 65 2 286 1 338 1 195 1 219 2 156 1 78 1 80 4 201 1 107 1 249 2 230 1 351 2 
338 1 195 1 251 1 233 1 156 1 352 1 80 2 78 1 115 1 336 1 282 1 175 2 249 1 286 1 65 2 230 1 121 1 351 1 
338 1 195 1 251 1 190 1 219 2 156 1 3 1 352 1 80 2 201 1 336 1 58 1 282 1 249 1 286 1 65 2 230 1 351 1 
251 2 233 1 3 1 352 1 115 1 336 1 58 1 175 2 282 2 65 2 286 1 338 1 195 1 219 2 156 1 78 1 80 4 201 1 107 1 249 2 230 1 351 2 
251 2 233 1 3 1 352 1 115 1 58 1 175 2 282 2 65 2 286 1 338 1 195 1 219 2 156 1 80 4 78 1 201 1 107 1 249 2 230 1 351 2 
188 1 352 1 94 1 175 1 65 2 286 1 338 1 195 1 361 1 219 1 198 1 71 1 156 1 321 1 128 1 40 1 80 2 227 1 247 1 324 1 230 1 29 1 
328 1 188 1 139 1 352 1 55 1 94 1 172 1 175 1 286 1 65 2 37 1 141 1 359 1 338 1 195 1 361 1 219 1 198 1 180 1 156 1 321 1 159 1 80 2 227 1 203 1 247 1 43 1 230 1 
251 2 233 1 3 1 352 1 115 1 58 1 175 2 282 2 285 1 65 2 286 1 338 1 195 1 219 2 156 1 78 1 80 4 201 1 107 1 249 2 230 1 351 2 
166 1 188 1 251 1 3 1 352 1 94 1 115 1 58 1 152 1 282 1 175 1 286 1 65 2 338 1 195 1 219 2 71 1 156 1 128 1 40 1 78 1 80 3 201 1 247 1 107 1 249 1 230 1 351 1 
251 1 233 1 352 1 115 1 58 1 172 1 5 1 175 2 282 1 285 1 65 2 286 1 100 1 338 1 195 1 316 1 219 1 156 1 159 1 201 1 78 1 80 3 164 1 348 1 187 1 107 1 249 1 230 1 351 1 
338 1 195 1 125 1 156 1 229 1 154 1 326 1 65 2 286 1 254 1 
338 1 195 1 125 1 156 1 229 1 154 1 326 1 65 2 286 1 254 1 
338 1 195 1 125 1 156 1 229 1 154 1 326 1 65 2 286 1 254 1 
338 1 195 1 125 1 156 1 229 1 154 1 326 1 65 2 286 1 254 1 
338 1 195 1 125 1 156 1 229 1 154 1 326 1 65 2 286 1 254 1 
118 1 124 1 197 1 317 1 144 1 13 1 257 1 177 1 56 1 270 1 
11 1 160 1 
118 1 124 1 144 1 242 1 13 1 168 1 225 1 56 1 270 1 
124 1 197 1 317 1 13 1 19 1 56 1 118 1 310 1 255 1 144 1 295 1 163 1 132 1 85 2 147 1 177 1 88 1 270 1 
124 1 197 1 317 1 13 1 19 1 56 1 118 1 310 1 255 1 144 1 295 1 163 1 132 1 85 2 147 1 177 1 88 1 270 1 
124 1 197 1 317 1 13 1 19 1 56 1 118 1 310 1 255 1 144 1 295 1 163 1 132 1 85 2 147 1 177 1 88 1 270 1 
347 1 53 1 301 1 
347 1 53 1 301 1 
68 1 296 1 
68 1 296 1 347 1 
8 1 165 1 
231 1 56 1 118 1 172 2 5 2 8 1 124 1 11 1 196 1 13 1 322 1 159 2 19 1 160 1 81 1 227 1 163 1 295 1 144 1 84 1 86 1 85 1 147 1 348 2 187 2 165 1 270 1 
53 1 301 1 
68 1 296 1 347 1 
188 2 139 1 352 1 334 1 94 2 172 2 5 2 6 1 175 1 285 1 286 1 65 2 141 1 359 1 101 1 217 2 338 1 260 1 195 1 219 1 198 1 143 1 156 1 321 1 159 2 131 1 80 2 23 1 247 2 43 1 230 1 
166 1 339 1 188 2 263 1 329 1 273 1 126 1 74 1 54 1 181 1 279 1 94 2 24 1 247 2 174 1 215 1 141 1 359 1 
339 1 188 1 263 1 329 1 273 1 126 1 15 1 74 1 54 1 94 1 24 1 247 1 174 1 215 1 359 1 141 1 
188 1 361 1 240 1 273 1 139 1 279 1 94 1 162 1 247 1 43 1 120 1 28 1 141 1 359 1 
339 1 188 1 263 1 329 1 273 1 126 1 74 1 54 1 181 1 279 1 94 1 24 1 247 1 174 1 215 1 141 1 359 1 
272 1 
67 1 232 1 69 1 199 1 167 1 88 1 77 1 
250 1 209 1 277 1 210 1 191 1 60 1 284 1 67 1 69 1 199 1 72 1 19 1 79 1 83 1 323 1 147 1 88 2 
188 1 250 1 47 1 305 1 209 1 31 1 139 2 277 1 55 1 94 1 62 1 359 1 141 2 361 1 241 1 199 2 72 1 16 1 105 1 223 1 247 1 43 1 
47 1 250 2 91 1 209 2 277 2 278 1 210 1 115 2 58 2 96 1 280 2 60 1 98 1 7 1 284 6 66 1 67 2 288 1 239 1 69 5 199 8 72 2 292 1 364 5 19 1 78 2 201 2 21 1 323 3 183 5 147 1 107 2 327 1 205 1 88 5 
250 1 209 1 277 1 333 1 115 2 58 1 280 2 192 1 172 1 5 1 7 1 35 1 100 1 178 1 259 1 69 2 343 1 199 2 72 1 14 1 159 1 19 1 266 1 346 1 147 1 348 1 187 1 29 1 
67 1 250 1 69 1 199 1 72 1 209 1 167 1 277 1 88 1 
69 2 199 1 364 1 78 1 115 1 201 1 58 1 323 1 183 1 107 1 284 2 88 1 
67 1 60 1 147 1 210 1 88 1 19 1 
250 2 188 2 47 1 275 1 209 1 139 1 277 2 210 1 94 2 335 1 96 1 60 2 141 1 359 1 289 1 361 2 69 1 199 1 72 2 130 1 19 2 162 1 247 2 43 1 147 2 28 1 
188 1 352 1 94 1 172 2 5 2 35 1 286 1 65 2 100 2 338 1 195 1 361 1 219 1 71 1 156 1 321 1 128 1 159 2 40 1 80 1 227 1 25 1 247 1 187 2 348 2 230 1 
67 2 250 1 47 1 69 2 199 1 72 1 209 1 364 2 277 1 323 2 202 1 96 1 183 2 284 4 88 4 
118 1 179 1 270 1 
118 1 179 1 270 1 
118 1 64 1 177 1 8 1 270 1 
118 1 179 1 270 1 
118 1 155 1 270 1 
118 1 155 1 270 1 
118 1 155 1 270 1 
118 1 270 1 
144 1 56 1 
338 2 195 2 219 4 233 1 156 2 14 1 3 2 18 1 115 1 80 8 117 1 58 1 202 1 192 1 175 4 249 3 286 2 65 4 176 1 178 1 
219 3 14 1 3 2 77 1 18 1 115 1 80 6 58 1 202 1 192 1 175 3 249 2 176 1 178 1 
338 1 195 1 219 2 156 1 233 1 3 1 201 1 78 1 115 1 80 4 58 1 236 1 107 1 175 2 249 2 286 1 65 2 
91 1 219 4 233 1 3 1 201 1 80 7 78 1 115 1 58 1 98 1 175 3 107 1 249 2 205 2 10 1 
233 4 3 5 115 3 117 2 58 3 192 2 98 2 175 11 176 1 286 2 65 4 10 1 258 1 178 1 338 2 195 2 219 12 14 2 156 2 18 1 224 1 78 2 80 23 201 2 20 1 202 1 107 2 249 9 205 2 
219 1 205 1 80 1 
98 1 175 1 80 1 
338 1 195 1 219 3 156 1 233 1 3 2 16 1 80 6 78 1 115 1 201 1 58 1 236 1 107 1 175 3 249 3 65 2 286 1 
91 1 233 1 3 1 115 2 58 2 98 1 175 6 65 2 286 1 66 1 338 1 288 1 195 1 239 1 125 1 219 6 156 1 292 1 80 12 78 2 201 2 21 1 107 2 249 2 205 1 
219 3 14 1 233 1 3 1 115 1 80 6 58 1 192 1 175 3 249 2 178 1 
338 1 195 1 219 2 233 1 14 1 156 1 3 1 18 1 20 1 80 3 117 1 192 1 175 1 249 2 176 1 286 1 65 2 
338 1 259 1 195 1 125 1 219 5 156 1 14 2 233 2 3 3 80 10 115 2 58 2 192 2 175 5 249 5 65 2 286 1 178 1 
338 1 195 1 125 1 156 1 233 1 78 1 115 1 80 2 175 2 249 1 286 1 65 2 
338 1 195 1 125 1 219 2 156 1 233 1 3 1 201 1 78 1 115 1 80 4 58 1 107 1 175 2 249 2 286 1 65 2 
338 3 195 3 125 1 219 2 156 3 14 1 233 1 3 1 20 1 355 1 80 3 117 1 192 1 175 1 249 2 286 3 65 6 
91 1 233 2 3 2 115 2 114 1 355 1 58 2 236 1 192 1 98 1 175 6 65 6 286 3 176 1 178 1 338 3 259 1 195 3 125 1 219 6 156 3 14 1 18 1 80 12 249 4 205 1 
91 1 3 2 115 1 58 1 192 1 98 1 175 4 65 2 286 1 176 1 178 1 338 1 288 1 195 1 125 1 219 4 156 1 14 1 18 1 80 8 202 1 249 2 205 1 
91 1 233 1 3 2 115 2 58 1 236 1 192 1 98 1 175 6 176 1 65 4 286 2 10 1 178 1 338 2 288 1 195 2 125 1 219 5 14 1 156 2 18 1 80 11 78 1 202 1 107 1 249 3 205 2 
91 1 233 1 3 3 115 3 117 1 58 3 236 1 192 1 98 1 175 9 176 1 65 6 286 3 178 1 66 1 338 3 288 1 195 3 239 1 125 1 219 10 14 1 156 3 292 1 18 1 80 19 78 2 201 2 21 1 202 1 107 2 249 4 205 1 
91 1 233 2 3 3 115 3 117 1 58 2 236 1 192 1 98 1 175 10 176 1 65 6 286 3 178 1 66 1 338 3 288 1 195 3 239 1 125 1 219 7 14 1 156 3 292 1 18 1 80 17 78 2 201 1 21 1 202 1 107 2 249 5 205 1 
91 1 3 2 115 1 58 1 192 1 98 1 175 4 65 2 286 1 176 1 178 1 338 1 288 1 195 1 125 1 219 4 156 1 14 1 18 1 80 8 202 1 249 2 205 1 
91 1 233 1 3 1 115 2 58 2 98 1 175 6 65 2 286 1 66 1 338 1 288 1 195 1 239 1 125 1 219 6 156 1 292 1 80 12 78 2 201 2 21 1 107 2 249 2 205 1 
91 1 233 2 3 3 115 3 117 2 58 2 236 1 192 1 98 1 175 10 176 1 65 8 286 4 178 1 66 1 338 4 288 1 195 4 239 1 125 1 219 8 14 1 292 1 156 4 18 1 80 18 78 2 201 1 21 1 202 1 107 2 249 5 205 1 
91 1 233 3 3 3 355 1 115 3 117 2 58 2 98 1 175 9 65 8 286 4 66 1 338 4 288 1 195 4 239 1 125 1 219 7 292 1 156 4 80 16 78 3 201 2 21 1 107 3 249 6 205 1 
219 4 14 3 233 3 3 3 18 1 80 7 115 1 58 1 192 3 175 3 249 6 176 2 178 1 
91 1 233 1 3 3 355 1 115 3 117 2 58 2 192 1 98 1 175 10 176 1 65 8 286 4 178 1 66 1 338 4 288 1 195 4 239 1 125 1 219 8 14 1 292 1 156 4 18 1 80 18 78 2 201 1 21 1 202 1 107 2 249 4 205 1 
227 1 172 1 5 1 214 1 158 1 159 1 36 1 
262 1 271 1 318 1 158 1 159 1 57 1 227 1 59 1 172 1 5 1 214 1 36 1 
188 1 162 1 361 1 247 1 43 1 139 1 28 1 77 1 141 1 359 1 94 1 
46 1 188 1 361 1 71 1 159 1 94 1 227 1 172 1 5 1 247 1 324 1 348 1 187 1 29 1 
46 1 188 1 71 1 344 1 159 1 94 1 227 1 172 1 5 1 247 1 324 1 348 1 187 1 29 1 
46 1 188 2 243 1 139 3 234 1 344 1 17 1 159 2 55 2 94 2 227 1 203 1 213 1 172 2 5 2 184 1 247 2 43 2 348 1 187 2 29 1 37 1 141 1 359 1 
67 1 188 3 361 1 304 1 31 1 139 4 234 1 344 1 17 1 244 1 55 1 19 2 94 3 60 1 184 1 247 3 185 1 43 1 147 2 135 1 88 1 141 1 359 1 
67 1 188 3 361 1 31 1 139 4 234 1 344 1 17 1 55 1 19 2 94 3 60 1 184 1 247 3 185 1 43 1 147 2 325 1 135 1 88 1 141 1 359 1 
188 1 319 1 247 1 141 1 359 1 94 1 
166 1 314 1 188 7 361 2 329 1 220 1 319 1 362 1 139 3 223 1 55 1 94 6 23 1 61 1 247 7 269 1 43 2 217 1 313 1 359 2 141 3 
166 1 46 1 188 1 3 1 352 2 115 1 94 1 58 1 152 1 192 1 172 1 5 1 282 1 175 3 285 1 176 1 286 2 65 4 178 1 338 2 195 2 219 2 71 1 143 1 14 1 156 2 128 1 159 1 40 1 18 1 80 5 82 1 227 2 202 1 247 1 187 1 348 1 249 1 230 2 351 1 
232 1 250 1 188 1 209 1 167 1 277 1 333 1 115 2 94 1 58 2 192 1 280 2 172 1 5 1 7 1 35 1 100 1 178 1 67 1 259 1 361 1 289 1 69 4 241 1 343 1 199 4 72 1 14 1 159 1 19 1 266 1 86 1 247 1 147 1 187 1 348 1 29 1 88 1 
166 1 188 2 319 1 139 2 223 1 55 1 94 2 62 1 247 2 43 1 135 1 359 1 141 2 
166 1 188 4 361 1 264 1 139 1 17 1 94 4 162 1 247 4 43 1 28 1 141 1 359 1 
314 1 188 2 341 1 139 1 344 1 55 1 94 2 204 1 247 2 43 1 349 1 313 1 359 1 141 2 
188 1 361 1 126 1 173 1 247 1 74 1 215 1 141 1 359 1 94 1 
166 1 188 2 329 1 139 1 94 2 23 1 247 2 43 1 101 1 359 1 141 1 
166 1 188 5 361 1 220 1 264 1 139 3 344 1 94 4 162 1 23 1 61 1 247 5 43 2 28 1 359 2 141 2 
166 1 188 5 361 1 220 1 51 1 264 1 139 3 344 1 94 4 162 1 23 1 247 5 43 2 28 1 359 2 141 2 
46 1 188 1 361 1 139 1 159 2 55 1 94 1 227 1 203 1 172 2 5 1 247 1 43 1 348 1 187 1 37 1 141 1 359 1 
314 1 188 1 362 1 139 1 344 1 223 1 55 1 94 1 247 1 43 1 313 1 359 1 141 2 
334 1 159 1 200 1 131 1 172 1 5 1 357 1 6 1 299 1 
189 1 119 1 357 1 
227 1 357 1 331 1 299 1 200 1 
67 1 189 1 243 1 331 2 354 1 19 2 200 2 308 1 227 1 213 1 86 1 119 1 33 1 357 1 185 1 147 2 299 2 29 1 88 1 
0 1 194 1 2 1 77 1 
0 1 194 1 150 1 261 1 2 1 76 1 161 1 
30 1 76 1 148 1 
0 1 194 1 291 1 150 3 261 1 95 1 2 1 246 1 248 1 153 2 76 3 161 1 
0 1 194 1 150 2 261 1 2 1 356 1 283 1 76 2 161 1 
150 1 261 1 95 1 2 1 24 1 306 1 99 1 76 1 161 1 
0 1 150 1 261 1 95 1 2 1 76 1 161 1 
0 2 194 1 150 1 261 1 95 1 76 1 161 1 
302 1 0 1 261 2 150 2 111 1 2 1 76 2 161 2 211 1 95 1 
0 1 194 1 261 1 150 3 290 1 2 2 306 1 113 1 76 3 161 1 95 1 356 2 267 1 
150 1 261 1 95 1 24 1 74 1 54 1 134 1 215 1 76 1 161 1 
0 1 194 1 38 1 261 2 150 4 2 2 306 1 76 4 161 2 95 1 356 2 267 1 283 1 
0 1 194 1 150 1 261 1 95 1 2 1 76 1 161 1 
0 2 194 2 291 1 150 4 261 1 2 3 306 1 76 4 161 1 356 2 267 1 246 1 153 1 337 1 
0 1 315 1 194 1 261 1 150 2 1 1 2 1 76 2 161 1 95 1 356 1 281 1 
194 1 0 1 291 1 261 1 150 3 2 1 76 3 161 1 95 1 246 2 237 1 153 2 
2 2 127 1 309 1 206 2 
149 1 150 1 261 1 95 1 76 1 161 1 
0 1 194 1 150 2 261 1 95 1 2 1 356 1 113 1 76 2 161 1 
90 1 
0 1 194 1 150 1 261 1 95 1 2 1 76 1 161 1 
194 1 0 1 261 1 150 3 2 1 113 1 76 3 161 1 95 1 356 1 153 1 
2 1 267 1 306 1 337 1 
0 1 2 1 

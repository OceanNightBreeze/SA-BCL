#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 254 87 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 254 87 98 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 254 289 29 214 (23,154) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 274 28 85 (49,212) (49,212) 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 274 28 85 (49,212) (49,212) 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 274 28 85 (49,212) (49,212) 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 254 267 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 246 42 195 125 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 246 42 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 246 42 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 246 194 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 246 42 195 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 246 42 195 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 171 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 254 249 63 300 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 254 87 2 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 254 87 84 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 254 289 29 18 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 254 289 29 214 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 254 289 29 18 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 254 289 29 214 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 254 289 29 18 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 254 289 29 18 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 254 87 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 254 289 29 18 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 254 289 29 18 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 254 289 29 18 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 254 87 255 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 254 175 61 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 254 175 61 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 254 175 61 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 254 175 61 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 254 175 61 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 254 87 255 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (161,312) 264 355 (111,275) 236 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 254 87 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 254 249 106 253 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 254 249 106 253 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 254 249 106 253 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 254 249 106 253 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 254 249 106 253 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 254 249 106 253 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 254 249 106 253 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 254 249 106 253 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 274 28 85 (49,212) (49,212) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 254 249 106 253 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 274 28 85 (49,212) (49,212) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 171 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 254 289 29 18 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 254 249 106 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 254 249 63 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 254 249 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 254 271 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 254 249 106 253 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 254 289 268 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 254 19 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 274 28 85 164 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 254 289 29 18 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 274 28 85 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 254 249 106 179 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 347 (161,312) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 274 28 85 (49,212) (49,212) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (161,312) 264 355 (111,275) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1756 | stmt -> ;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3404 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
159 1 250 3 263 1 5 1 210 1 123 1 240 3 17 2 95 1 104 1 83 2 169 1 335 2 
139 1 159 1 97 1 250 9 263 2 5 3 7 1 320 1 328 1 210 1 38 1 167 2 119 1 123 1 240 9 243 1 17 5 127 1 95 6 277 2 305 2 169 4 104 1 83 2 68 1 165 2 315 1 335 2 
139 1 159 1 97 1 250 9 263 2 5 3 7 1 320 1 328 1 210 1 38 1 167 2 119 1 123 1 240 9 243 1 17 5 127 1 95 6 277 2 305 2 169 4 104 1 83 2 68 1 165 2 315 1 335 2 
139 1 159 1 97 1 250 10 263 2 5 4 7 1 320 1 328 1 210 1 38 1 167 2 119 1 123 1 240 10 243 1 17 6 127 1 95 7 277 2 305 2 169 5 104 1 83 2 68 1 165 2 315 1 335 2 
139 1 159 1 97 1 250 7 263 2 5 2 7 1 320 1 328 1 210 1 38 1 167 2 119 1 123 1 240 7 17 4 127 1 95 4 277 2 305 1 169 3 104 1 83 2 68 1 165 2 315 1 335 2 
139 1 159 1 250 4 5 1 167 1 123 1 240 4 243 1 17 3 277 1 95 3 104 1 83 1 305 2 169 2 165 1 315 1 335 1 
159 1 250 2 263 1 320 1 38 1 123 1 240 2 17 1 155 1 277 1 104 1 83 1 69 1 281 1 165 1 335 1 
139 1 174 1 159 1 97 1 250 9 263 1 5 3 7 1 167 1 210 1 123 1 240 9 243 1 189 1 17 5 277 1 95 7 305 2 104 1 83 2 169 4 165 1 315 1 335 2 
139 1 174 1 159 1 97 1 250 9 263 1 5 3 7 1 167 1 210 1 123 1 240 9 243 1 189 1 17 5 277 1 95 7 305 2 104 1 83 2 169 4 165 1 315 1 335 2 
350 1 166 1 171 1 
323 1 350 1 220 2 
287 2 10 1 32 2 269 1 67 2 51 2 173 2 291 2 
160 1 294 2 3 1 142 1 161 1 319 1 51 2 254 1 178 1 181 2 79 1 32 3 182 1 55 1 12 1 278 1 59 1 345 1 105 2 87 1 168 1 287 3 241 1 269 1 215 1 67 2 313 1 156 2 157 1 173 2 193 1 247 1 291 2 
287 1 53 1 32 1 269 1 16 1 67 1 51 1 173 1 205 1 291 1 
148 1 350 1 166 1 202 1 287 1 91 1 180 1 303 1 53 1 32 1 258 1 34 1 216 1 173 1 
350 1 166 1 51 1 202 1 287 1 180 1 303 1 53 1 32 1 258 1 67 1 34 2 216 2 173 1 291 1 
131 1 34 1 134 1 216 1 265 1 
158 1 342 1 350 1 166 1 34 2 134 1 216 2 265 1 
34 1 216 1 265 1 
134 1 51 1 287 1 53 1 242 1 32 1 269 1 16 1 67 1 34 1 216 1 173 1 205 1 291 1 
350 1 
342 1 350 1 166 1 34 2 134 1 216 2 265 1 70 1 
47 2 306 1 350 1 166 1 134 2 138 1 265 2 288 1 311 1 52 2 93 1 342 1 33 2 290 1 103 1 34 5 184 1 216 5 357 1 
76 1 154 1 199 1 
10 1 171 1 
22 1 26 1 51 1 287 2 32 2 10 2 67 1 173 2 291 1 
160 1 348 1 294 1 3 1 142 1 161 1 51 1 178 1 287 2 79 1 181 1 154 1 32 2 55 1 101 1 215 1 156 1 12 1 173 1 291 1 
287 3 348 1 10 1 32 3 67 1 51 3 173 3 291 3 
287 1 53 1 32 1 51 1 173 1 205 1 291 1 
287 1 22 1 53 1 32 1 67 1 51 1 26 1 173 1 291 1 
160 1 294 1 3 1 98 1 142 1 161 1 295 1 26 1 51 3 254 1 178 1 202 1 79 1 180 1 181 1 303 1 53 1 32 4 182 1 55 1 101 1 258 1 34 1 12 1 59 1 345 1 348 1 105 2 87 1 287 4 241 1 269 1 215 1 67 2 313 1 156 1 216 1 157 1 173 3 193 1 247 1 291 3 
287 2 348 1 91 1 10 1 32 2 329 1 51 1 173 2 291 1 
348 2 295 1 350 1 26 1 51 3 340 1 202 1 287 3 180 1 53 1 303 1 32 3 258 1 101 1 67 1 34 1 216 1 173 3 291 3 
348 1 199 1 26 1 51 2 287 2 154 1 32 2 67 1 173 2 291 2 
160 1 294 1 3 1 161 1 142 1 178 1 287 1 181 1 79 1 10 1 32 1 55 1 215 1 156 1 12 1 
261 1 294 1 317 1 3 1 142 1 178 1 287 1 181 1 79 1 10 1 32 1 55 1 215 1 156 1 12 1 
233 1 105 2 23 1 254 1 29 1 289 1 241 1 214 1 313 1 157 1 59 1 247 1 193 1 
202 1 287 1 53 1 32 1 270 1 51 1 173 1 291 1 
160 1 294 1 3 1 142 1 161 1 178 1 287 1 181 1 79 1 331 1 10 1 32 1 55 1 215 1 156 1 12 1 
346 1 348 2 329 1 51 4 26 1 64 1 287 5 91 1 32 5 10 1 101 1 67 1 173 5 291 4 
287 2 53 1 32 2 270 1 51 2 173 2 205 1 291 2 
293 1 94 1 
293 1 94 1 
89 1 114 1 
89 1 114 1 
89 1 114 1 
293 1 94 1 170 1 
293 1 94 1 14 1 
293 2 196 1 94 2 191 1 89 1 114 1 
293 1 94 1 170 1 
293 1 94 1 170 1 
293 1 238 1 94 1 
293 1 238 1 94 1 
293 1 238 1 94 1 
293 2 176 1 350 1 6 1 118 1 62 2 339 2 211 1 330 1 266 2 30 1 78 1 146 2 332 3 94 2 191 1 34 2 216 2 44 2 
293 1 6 1 297 1 143 1 51 2 339 1 145 1 10 1 146 1 32 2 11 1 57 1 34 1 86 1 209 1 62 1 14 1 266 1 287 2 332 1 94 1 216 1 173 2 291 2 
277 1 165 1 167 1 
277 1 69 1 165 1 
232 1 116 1 277 3 69 1 50 1 167 2 
116 1 284 1 277 2 69 1 50 1 167 1 
116 2 277 2 69 1 167 1 50 1 
47 1 143 1 225 2 302 1 29 1 52 1 323 1 33 1 342 1 100 1 56 2 304 1 34 5 184 2 209 1 86 1 186 1 133 2 166 1 350 2 107 1 60 1 134 4 309 1 265 1 289 1 311 3 188 1 18 1 216 5 220 3 357 1 
47 2 144 1 224 1 252 1 299 5 122 1 29 3 52 2 257 1 323 3 100 1 342 1 33 2 56 6 304 2 34 9 184 6 131 5 86 4 133 6 166 1 350 5 60 3 134 7 309 2 138 1 265 6 289 3 311 8 188 3 354 1 18 3 216 9 220 9 357 1 
47 1 225 1 302 1 29 1 52 1 323 2 33 1 304 1 56 2 34 3 184 2 86 1 186 1 133 2 166 1 350 3 60 1 134 2 309 1 138 1 289 1 311 3 188 1 18 1 216 3 220 4 
47 1 224 1 252 1 225 2 302 1 29 2 52 1 257 1 323 3 33 1 56 4 304 1 34 4 184 4 86 2 186 1 133 4 166 1 350 4 60 2 134 3 309 1 138 1 289 2 311 5 188 2 18 2 216 4 220 7 
352 1 142 1 171 1 
142 1 272 1 
334 1 
142 1 12 1 
316 1 352 2 310 1 142 3 55 1 12 1 
142 1 55 1 12 1 
65 1 142 1 
35 1 85 1 149 1 74 1 49 1 274 1 28 1 212 1 245 1 279 1 129 1 
35 1 85 1 149 1 74 1 49 1 274 1 28 1 212 1 245 1 279 1 129 1 
35 1 85 1 149 1 74 1 177 1 49 1 274 1 28 1 212 1 245 1 279 1 129 1 
35 1 149 1 235 1 74 1 245 2 279 1 129 1 
35 1 105 2 149 1 74 1 254 1 276 1 267 1 245 1 313 1 279 1 157 1 59 1 193 1 
292 1 20 1 294 1 45 1 250 1 178 1 181 1 79 1 102 1 277 2 83 1 104 1 344 1 165 1 232 1 207 1 263 1 167 1 240 1 66 1 190 1 156 1 113 1 69 1 192 1 335 1 
292 1 159 1 294 1 45 1 250 2 178 1 123 1 181 1 79 1 102 1 277 2 83 1 104 1 344 1 165 1 232 1 207 1 263 1 167 1 92 1 240 2 66 1 17 1 95 1 190 1 156 1 113 1 69 1 192 1 335 1 
292 1 159 1 20 1 294 1 45 1 250 3 178 1 123 1 181 1 79 1 277 2 83 1 344 1 165 1 232 1 207 1 263 1 167 1 152 1 240 3 66 1 17 1 190 1 95 2 156 1 218 1 113 1 69 1 192 1 335 1 
292 1 159 1 20 1 294 1 45 1 250 2 178 1 123 1 181 1 79 1 277 2 165 1 232 1 207 1 263 1 167 1 240 2 66 1 17 1 190 1 95 2 156 1 218 1 113 1 69 1 
260 1 294 1 250 1 3 1 45 2 318 1 263 2 142 1 136 1 88 1 178 1 152 1 79 1 240 1 181 1 66 2 43 1 204 1 190 2 83 1 156 1 12 1 335 1 
308 1 
3 2 46 1 47 1 142 1 273 1 178 1 52 1 181 2 180 1 53 1 323 2 12 1 184 2 147 1 324 1 234 2 148 1 286 1 151 1 108 1 287 1 153 2 156 2 71 1 72 2 294 2 197 2 338 1 198 1 25 2 27 1 202 1 341 2 79 1 303 1 32 1 342 3 33 1 163 4 304 1 258 1 204 1 128 1 34 5 36 2 166 4 350 5 136 1 265 6 311 2 91 1 216 5 173 1 220 2 357 1 
338 1 198 1 27 1 202 1 341 1 180 1 303 1 53 1 32 1 342 1 163 2 258 1 34 3 148 1 166 2 350 2 265 2 151 1 108 1 287 1 91 1 216 3 70 1 173 1 
338 1 198 1 27 1 202 1 180 1 303 1 53 1 32 1 163 3 342 1 258 1 34 3 148 1 234 1 166 3 350 3 265 1 151 1 108 1 287 1 91 1 216 3 173 1 70 1 
338 1 197 1 198 1 27 1 202 1 341 1 180 1 303 1 53 1 32 1 342 1 163 3 258 1 34 3 148 1 234 1 166 3 350 3 265 2 151 1 108 1 287 1 91 1 216 3 70 1 173 1 
195 1 47 1 197 2 338 1 198 1 226 1 27 1 202 1 341 2 125 1 52 1 180 1 303 1 53 1 32 1 33 1 342 1 163 2 258 1 128 1 34 3 184 1 148 1 166 2 350 2 265 3 151 1 108 1 287 1 311 1 91 1 42 1 216 3 173 1 70 1 246 1 357 1 
47 1 46 1 180 1 52 1 53 1 323 2 184 1 147 1 148 1 234 2 151 1 108 1 287 1 153 2 72 2 338 1 197 2 198 1 25 2 202 1 27 1 341 2 303 1 32 1 163 4 33 1 342 2 258 1 128 1 34 4 36 2 350 6 166 5 265 4 91 1 311 1 216 4 173 1 357 1 220 2 
47 1 338 1 198 1 226 1 27 1 202 1 52 1 180 1 303 1 53 1 32 1 163 2 33 1 258 1 128 1 34 2 184 1 148 1 166 2 350 2 151 1 108 1 287 1 311 1 91 1 42 1 216 2 173 1 246 1 357 1 
47 1 338 1 198 1 226 1 27 1 202 1 52 1 180 1 303 1 53 1 32 1 163 2 33 1 258 1 128 1 34 2 184 1 148 1 166 2 350 2 151 1 108 1 287 1 311 1 91 1 42 1 216 2 173 1 246 1 357 1 
194 1 47 1 338 1 198 1 27 1 202 1 77 1 52 1 180 1 303 1 53 1 32 1 163 2 33 1 258 1 34 2 184 1 148 1 262 1 166 2 350 2 151 1 108 1 287 1 311 1 91 1 216 2 173 1 246 1 357 1 
195 1 47 1 338 1 197 1 198 1 226 1 27 1 202 1 341 1 52 1 180 1 303 1 53 1 32 1 33 1 163 3 258 1 128 1 34 2 184 1 234 1 148 1 166 3 350 3 265 1 151 1 108 1 287 1 311 1 91 1 42 1 216 2 173 1 246 1 357 1 
195 1 47 1 338 1 197 1 198 1 226 1 27 1 202 1 341 1 52 1 180 1 303 1 53 1 32 1 33 1 163 3 258 1 128 1 34 2 184 1 234 1 148 1 166 3 350 3 265 1 151 1 108 1 287 1 311 1 91 1 42 1 216 2 173 1 246 1 357 1 
1 2 47 1 46 1 180 1 52 1 53 1 184 1 147 1 148 1 234 2 151 1 108 1 287 1 153 2 338 1 197 2 198 1 202 1 27 1 77 1 341 2 303 1 32 1 163 4 33 1 342 2 258 1 34 4 36 2 350 5 166 5 39 2 265 4 91 1 311 1 216 4 173 1 357 1 220 2 
233 1 105 2 85 1 49 1 274 1 28 1 212 1 241 1 313 1 157 1 59 1 171 1 247 1 193 1 
300 1 105 2 249 1 110 1 241 1 313 1 59 1 157 1 63 1 254 1 193 1 247 1 
2 1 348 1 105 2 87 1 51 1 254 1 287 1 110 1 241 1 32 1 101 1 313 1 59 1 157 1 173 1 193 1 291 1 247 1 
294 1 348 1 84 1 105 2 3 1 87 1 51 1 254 1 287 1 181 1 110 1 241 1 32 1 101 1 156 1 313 1 59 1 157 1 173 1 193 1 291 1 247 1 
105 2 307 1 74 1 60 1 26 1 51 1 254 1 287 1 29 1 289 1 110 1 188 1 241 1 32 1 18 1 67 1 313 1 279 1 157 1 59 1 173 1 291 1 247 1 193 1 
233 1 105 2 140 1 74 2 4 1 60 1 199 1 76 1 154 1 241 1 188 1 333 1 313 1 157 1 59 1 279 2 247 1 193 1 
29 1 233 1 289 1 105 2 241 1 214 1 313 1 59 1 157 1 254 1 193 1 247 1 
233 1 105 2 74 2 60 1 199 1 254 1 29 1 76 1 289 1 154 1 241 1 188 1 18 1 313 1 157 1 59 1 279 2 247 1 193 1 
105 2 140 1 74 2 4 1 60 1 199 1 40 1 76 1 154 1 241 1 188 1 333 1 313 1 157 1 59 1 279 2 247 1 193 1 
29 1 289 1 105 2 241 1 214 1 313 1 59 1 157 1 40 1 254 1 193 1 247 1 
105 2 74 2 60 1 199 1 40 1 254 1 29 1 76 1 289 1 154 1 241 1 188 1 18 1 313 1 157 1 59 1 279 2 247 1 193 1 
105 2 74 2 60 1 199 1 254 1 29 1 76 1 289 1 154 1 241 1 188 1 18 1 313 1 157 1 59 1 279 2 247 1 193 1 
160 1 294 1 105 2 3 1 87 1 142 1 161 1 254 1 178 1 287 1 181 1 79 1 241 1 32 1 182 1 55 1 215 1 313 1 156 1 12 1 59 1 157 1 193 1 247 1 
261 1 294 1 317 1 3 1 142 1 178 1 287 1 181 1 79 1 32 1 55 1 215 1 156 1 12 1 314 1 
105 2 74 2 60 1 199 1 254 1 29 1 76 1 289 1 110 1 154 1 241 1 188 1 18 1 313 1 157 1 59 1 279 2 247 1 193 1 
160 1 294 1 74 2 161 1 142 1 199 1 254 1 178 1 29 1 76 1 79 1 181 1 54 1 32 1 182 1 55 1 12 1 279 2 59 1 105 2 60 1 287 1 289 1 92 1 154 1 188 1 241 1 215 1 18 1 156 1 313 1 157 1 247 1 193 1 
74 2 199 1 51 1 26 1 254 1 29 1 76 1 32 1 183 1 59 1 279 2 105 2 60 1 287 1 289 1 110 1 241 1 188 1 154 1 18 1 67 1 313 1 157 1 173 1 193 1 247 1 291 1 
294 1 105 2 3 1 87 1 74 1 75 1 40 1 254 1 255 1 181 1 241 1 313 1 156 1 279 1 157 1 59 1 247 1 193 1 
175 1 105 2 276 1 61 1 285 1 313 1 223 1 59 1 157 1 356 1 254 1 193 1 
175 1 105 2 276 1 61 1 285 1 313 1 223 1 59 1 157 1 356 1 254 1 193 1 
175 1 105 2 276 1 61 1 285 1 313 1 223 1 59 1 157 1 356 1 254 1 193 1 
175 1 105 2 276 1 61 1 285 1 313 1 223 1 59 1 157 1 356 1 254 1 193 1 
175 1 105 2 276 1 61 1 285 1 313 1 223 1 59 1 157 1 356 1 254 1 193 1 
105 2 73 1 87 1 74 1 75 1 254 1 255 1 287 2 256 1 110 1 241 1 32 2 313 1 279 1 59 1 96 1 157 1 219 1 173 2 193 1 247 1 
232 1 20 1 294 1 185 1 207 1 167 1 178 1 181 1 79 1 213 1 277 2 190 1 156 1 69 1 113 1 165 1 259 1 192 1 
232 1 20 1 294 2 185 1 207 1 167 1 178 1 79 1 181 2 92 1 213 1 277 2 190 1 156 2 69 1 113 1 165 1 259 1 192 1 
232 1 20 1 294 1 207 1 167 1 178 1 181 1 79 1 81 1 277 2 190 1 156 1 69 1 113 1 165 1 259 1 192 1 
260 1 294 1 3 1 142 1 136 1 178 1 79 1 181 1 213 1 322 1 204 1 190 1 156 1 12 1 
15 1 
311 1 290 1 350 1 166 1 103 1 184 1 171 1 
72 1 47 1 25 1 52 1 323 1 33 1 342 1 128 1 34 1 184 1 350 2 166 1 265 1 311 1 216 1 357 1 220 1 
316 1 294 1 3 1 47 1 142 4 272 2 178 2 181 1 52 1 79 1 33 1 55 1 304 1 12 1 236 1 239 1 264 1 352 1 311 1 312 1 111 1 156 1 355 1 357 1 
248 1 249 1 222 1 47 2 253 1 29 2 52 2 342 1 33 2 323 3 304 1 56 5 58 1 231 1 34 1 343 1 184 5 280 1 206 1 283 2 133 5 106 1 350 5 166 2 60 2 286 1 265 1 311 8 289 2 188 2 18 2 112 1 216 1 220 6 357 2 
47 1 51 1 226 1 28 1 52 1 53 1 32 1 33 1 34 1 164 1 184 2 280 1 205 1 283 2 85 1 60 2 287 1 289 1 311 2 268 1 242 1 269 1 16 1 67 1 216 1 173 1 357 1 291 1 
47 1 166 1 350 1 311 1 52 1 33 1 290 1 103 1 184 1 357 1 
283 2 271 1 133 5 350 5 60 2 29 2 289 2 311 5 188 2 323 5 56 5 18 2 184 5 280 1 220 10 
160 1 294 1 3 1 161 1 142 1 51 2 254 1 178 1 181 1 79 1 32 3 182 1 55 1 12 1 59 1 345 1 105 2 87 1 287 3 241 1 269 1 215 1 67 2 313 1 156 1 157 1 173 2 193 1 291 2 247 1 
149 1 47 1 133 2 166 2 350 4 286 1 311 1 52 1 323 2 33 1 56 2 304 1 184 2 220 4 357 1 
342 1 350 1 166 1 34 1 216 1 265 1 
115 1 294 4 3 2 47 2 142 1 273 1 178 1 301 2 79 1 52 2 181 4 33 2 342 2 304 2 204 1 82 1 34 3 12 1 184 2 324 1 286 2 136 1 138 1 265 4 351 1 311 2 156 4 216 3 357 1 
41 1 146 1 339 1 
145 1 229 1 146 1 176 1 339 1 
41 1 146 1 339 1 
41 1 146 1 339 1 
325 1 146 1 339 1 
325 1 146 1 339 1 
325 1 146 1 339 1 
146 1 339 1 
293 1 94 1 
105 2 276 1 249 1 106 1 313 1 59 1 157 1 253 1 254 1 193 1 
221 1 276 1 105 4 249 1 106 1 313 2 59 2 157 2 253 1 254 1 193 2 
105 2 276 1 249 1 106 1 313 1 59 1 157 1 253 1 254 1 193 1 
105 2 276 1 249 1 106 1 313 1 59 1 157 1 253 1 254 1 193 1 
105 2 276 1 249 1 106 1 313 1 59 1 157 1 253 1 254 1 193 1 
105 2 276 1 249 1 106 1 313 1 59 1 157 1 253 1 254 1 193 1 
221 1 105 4 276 1 249 1 106 1 313 2 59 2 157 2 253 1 254 1 193 2 
132 1 276 1 105 4 249 1 106 1 313 2 59 2 157 2 253 1 254 1 193 2 
274 1 28 1 85 1 212 1 49 1 
132 1 276 1 105 4 249 1 106 1 313 2 59 2 157 2 253 1 254 1 193 2 
274 1 28 1 105 4 85 1 212 1 37 1 313 2 49 1 59 2 157 2 193 2 
274 1 28 1 85 1 212 1 49 1 171 1 
221 1 105 2 74 2 60 1 254 1 29 1 289 1 188 1 18 1 313 1 157 1 59 1 279 2 193 1 
249 1 106 1 254 1 
249 1 63 1 254 1 
249 1 254 1 
74 1 58 1 279 1 
271 1 254 1 
105 2 276 1 249 1 106 1 313 1 59 1 157 1 253 1 254 1 193 1 
289 1 268 1 74 1 60 1 279 1 254 1 
19 1 254 1 
274 1 28 1 85 1 164 1 
105 2 74 2 4 1 60 1 276 1 188 1 333 1 313 1 157 1 59 1 279 2 193 1 
105 2 74 2 60 1 254 1 29 1 289 1 276 1 188 1 18 1 313 1 157 1 59 1 279 2 193 1 
274 1 28 1 105 2 276 1 85 1 313 1 59 1 157 1 193 1 
179 1 221 1 132 1 105 6 276 1 249 1 106 1 313 3 59 3 157 3 254 1 193 3 
287 1 91 1 10 1 32 1 117 1 329 1 173 1 
0 1 117 1 329 1 120 1 9 1 287 1 124 1 91 1 10 1 32 1 203 1 173 1 
294 1 79 1 181 1 3 1 277 1 156 1 69 1 113 1 165 1 178 1 
20 1 294 2 142 1 178 1 228 1 109 1 92 1 181 2 79 1 156 2 12 1 
294 1 79 1 181 1 3 1 142 1 204 1 156 1 12 1 136 1 171 1 178 1 
348 1 294 1 3 1 142 1 161 1 51 1 178 1 287 2 181 1 79 1 10 1 32 2 55 1 215 1 156 1 12 1 173 1 291 1 
294 1 161 1 142 3 51 1 178 1 301 1 202 1 79 1 181 1 180 1 53 1 10 1 32 2 55 2 12 2 348 1 347 1 287 2 65 1 215 1 156 1 173 2 291 2 
294 2 317 1 142 3 51 1 178 1 301 1 202 1 79 1 181 2 180 1 53 1 10 1 32 2 55 2 12 2 348 1 347 1 327 1 287 2 65 1 215 1 156 2 173 2 291 2 
294 3 3 1 142 4 272 1 178 1 301 1 79 1 181 3 55 1 258 1 34 2 12 1 347 1 327 1 166 1 350 1 135 1 265 1 352 1 187 1 65 1 156 3 216 2 
347 1 294 1 142 4 272 1 178 1 301 1 65 1 352 1 181 1 312 1 79 1 55 1 34 1 156 1 12 1 216 1 
294 1 79 1 181 1 99 1 156 1 178 1 
316 1 20 1 294 7 208 1 3 2 237 1 142 3 251 1 298 1 168 1 178 3 228 1 92 1 181 6 79 2 99 1 80 1 230 1 55 1 156 7 12 2 
160 1 294 1 142 1 161 1 49 1 51 1 178 1 274 1 275 1 28 1 79 1 256 1 181 1 54 1 32 2 182 1 55 1 12 1 59 2 348 1 105 4 85 1 287 2 212 1 110 1 92 1 241 2 215 1 313 2 156 1 157 2 173 1 247 2 291 1 193 2 
115 1 294 1 3 1 47 1 142 2 272 1 134 1 264 1 352 1 312 1 52 1 181 1 33 1 111 1 34 1 156 1 216 1 355 1 357 1 
316 1 294 2 142 2 239 1 178 2 352 1 92 1 181 2 79 1 99 1 55 1 156 2 12 1 
130 1 294 4 3 1 327 1 142 1 136 1 178 1 181 4 92 1 79 1 204 1 156 4 12 1 
294 2 142 1 8 1 321 1 251 1 90 1 178 2 301 1 181 2 79 1 80 1 55 1 156 2 12 1 
130 1 294 5 208 1 3 1 142 3 136 1 298 1 178 2 301 1 228 1 181 4 92 1 79 2 204 1 156 5 12 2 
130 1 294 5 208 1 3 1 142 3 136 1 178 2 301 1 228 1 181 4 92 1 79 2 244 1 204 1 156 5 12 2 
348 1 294 1 317 1 3 1 142 1 51 1 178 1 287 2 181 1 79 1 10 1 32 2 55 1 215 1 156 1 12 1 173 1 291 1 
316 1 294 1 237 1 142 1 251 1 178 2 301 1 181 1 79 1 80 1 55 1 156 1 12 1 
24 1 10 1 150 1 200 1 336 1 
326 1 24 1 150 2 295 1 296 1 350 1 166 1 134 1 48 1 200 2 202 1 180 1 53 1 303 1 10 1 258 1 34 2 216 2 336 2 
73 1 24 1 200 1 287 1 32 1 96 1 219 1 173 1 336 1 
24 1 296 1 48 1 
159 1 123 1 240 1 250 1 17 1 83 1 104 1 335 1 
159 2 250 4 5 1 38 1 227 1 123 2 240 4 17 3 95 2 83 1 169 1 217 1 172 1 335 1 
174 1 159 1 250 2 141 1 201 1 123 1 240 2 17 1 95 1 104 1 83 1 335 1 
159 1 123 1 240 3 250 3 31 1 17 1 83 1 104 1 217 2 38 2 172 1 335 1 
21 1 126 1 17 2 349 2 
282 1 240 1 250 1 83 1 104 1 335 1 
159 1 123 1 240 2 250 2 17 1 95 1 7 1 83 1 104 1 335 1 
137 1 
159 1 123 1 17 1 171 1 
159 1 123 1 240 1 250 1 17 1 83 1 335 1 
240 1 45 1 263 1 
159 1 123 1 240 3 250 3 353 1 17 1 83 1 104 1 217 1 38 2 172 1 335 1 
159 1 123 1 240 2 250 2 17 1 95 1 305 1 83 1 335 1 
139 1 240 1 250 1 17 1 277 1 169 1 83 1 104 1 165 1 167 1 335 1 
159 1 240 1 250 1 17 1 83 1 104 1 335 1 
159 2 123 1 240 1 250 1 83 1 104 1 335 1 
159 1 240 2 250 2 13 1 17 1 83 2 104 1 162 1 121 1 335 2 
159 1 97 1 250 3 5 1 7 1 123 1 240 3 17 2 95 2 104 1 83 1 169 1 335 1 
232 1 159 1 337 1 250 2 167 1 123 1 240 2 17 1 277 2 95 1 104 1 83 1 69 1 165 1 335 1 
159 1 250 4 5 1 123 1 240 4 243 1 17 2 95 2 104 1 83 2 305 1 169 1 335 2 
159 1 123 1 240 1 250 1 17 1 83 1 104 1 335 1 
159 1 250 3 7 1 38 1 123 1 240 3 17 1 95 1 104 1 83 1 335 1 
227 1 5 1 17 1 169 1 
159 1 17 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (158,328) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (158,328) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (158,328) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (158,328) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (158,328) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (158,328) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (158,328) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (158,328) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (158,328) 101 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (158,328) 101 132 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 147 262 129 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 147 262 129 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 147 262 129 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 147 262 129 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 147 262 129 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 222 306 232 61 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> -
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
119 1 14 1 260 2 4 2 113 3 217 1 81 1 324 1 245 1 98 1 185 3 74 2 331 1 
119 1 4 5 182 1 81 3 26 1 324 1 245 6 185 9 226 1 84 1 331 1 253 1 52 2 92 2 213 2 334 1 14 4 310 1 260 2 217 2 113 9 161 1 98 1 74 2 341 1 201 2 225 1 60 1 
119 1 4 5 182 1 81 3 26 1 324 1 245 6 185 9 226 1 84 1 331 1 253 1 52 2 92 2 213 2 334 1 14 4 310 1 260 2 217 2 113 9 161 1 98 1 74 2 341 1 201 2 225 1 60 1 
119 1 4 6 182 1 81 4 26 1 324 1 245 7 185 10 226 1 84 1 331 1 253 1 52 2 92 2 213 2 334 1 14 5 310 1 260 2 217 2 113 10 161 1 98 1 74 2 341 1 201 2 225 1 60 1 
119 1 4 4 182 1 81 2 26 1 324 1 245 4 185 7 226 1 84 1 331 1 52 2 92 2 213 2 334 1 14 3 310 1 260 2 217 2 113 7 161 1 98 1 74 2 341 1 201 1 225 1 60 1 
119 1 92 1 213 1 14 2 260 1 310 1 4 3 81 1 113 4 245 3 98 1 185 4 84 1 74 1 201 2 331 1 253 1 52 1 
119 1 92 1 260 1 4 1 113 2 182 1 217 1 98 1 185 2 65 1 247 1 74 1 341 1 331 1 21 1 52 1 
119 1 92 1 213 1 14 4 310 1 260 2 4 5 113 9 283 1 217 1 81 3 161 1 245 7 324 1 98 1 185 9 84 1 226 1 74 2 201 2 331 1 253 1 290 1 52 1 
119 1 92 1 213 1 14 4 310 1 260 2 4 5 113 9 283 1 217 1 81 3 161 1 245 7 324 1 98 1 185 9 84 1 226 1 74 2 201 2 331 1 253 1 290 1 52 1 
156 1 320 1 181 1 204 1 168 1 336 1 85 1 343 1 140 1 107 1 330 1 152 1 19 1 190 1 
211 1 
256 1 220 1 181 1 140 2 128 1 152 2 284 1 211 1 
256 2 179 1 181 2 261 1 340 1 135 1 195 2 298 1 246 2 45 2 249 1 220 1 269 1 140 5 128 1 152 5 211 1 131 1 254 1 
187 1 128 1 211 1 
309 2 211 1 33 1 
320 2 343 2 107 2 336 2 168 1 19 2 79 1 85 2 
291 2 322 1 320 3 168 1 62 2 170 1 325 1 85 3 127 1 188 1 8 1 7 1 107 2 278 1 50 1 306 2 111 1 53 1 258 1 336 2 282 1 73 1 162 1 238 2 286 1 267 1 222 2 344 1 343 2 223 1 345 1 19 2 346 1 224 1 167 1 79 1 78 1 
320 1 204 1 343 1 107 1 336 1 168 1 330 1 19 1 190 1 85 1 
320 1 155 1 140 1 107 1 9 1 302 1 128 1 152 1 330 1 210 1 236 1 211 1 11 1 85 1 
320 1 336 1 236 1 85 1 343 1 140 2 107 1 302 1 9 1 128 1 19 1 210 1 330 1 152 2 211 1 
256 1 181 1 140 1 152 1 264 1 
256 1 220 1 181 1 3 1 140 2 128 1 152 2 211 1 
256 1 140 1 152 1 
320 2 336 1 194 1 85 2 343 1 107 2 19 1 143 1 79 2 
1 1 248 1 5 1 
291 1 53 1 320 1 70 1 282 1 170 1 325 1 85 1 286 1 188 1 222 1 7 1 167 1 306 1 79 1 111 1 
1 1 53 1 291 1 320 2 282 1 24 1 170 1 325 1 85 2 286 1 188 1 7 1 222 1 343 1 107 1 19 1 167 1 77 1 306 1 111 1 
187 1 79 1 
320 3 343 3 336 1 107 3 19 3 77 1 79 1 85 3 
320 1 204 1 343 1 107 1 330 1 19 1 85 1 
320 1 343 1 107 1 336 1 330 1 19 1 194 1 143 1 85 1 
291 1 322 1 320 4 24 1 168 1 62 2 170 1 325 1 85 4 188 1 8 1 7 1 107 3 278 1 302 1 9 1 210 1 330 1 152 1 50 1 306 1 111 1 172 1 53 1 282 1 336 2 162 1 236 1 238 1 286 1 267 1 222 1 343 3 140 1 345 1 287 1 19 3 346 1 224 1 167 1 143 1 77 1 79 1 78 1 
320 2 343 1 107 2 19 1 34 1 77 1 11 1 79 1 85 2 
320 3 336 1 24 1 95 1 236 1 85 3 343 3 140 1 107 3 302 1 9 1 152 1 330 1 19 3 210 1 143 1 211 1 77 2 172 1 
1 1 320 2 336 1 5 1 85 2 343 2 107 2 19 2 143 1 77 1 
291 1 53 1 320 1 282 1 170 1 325 1 85 1 286 1 188 1 222 1 7 1 167 1 306 1 79 1 111 1 
291 1 53 1 320 1 282 1 170 1 97 1 325 1 85 1 286 1 89 1 188 1 222 1 7 1 306 1 79 1 
319 1 1 2 322 1 62 2 5 2 297 1 125 1 299 1 248 2 8 1 278 1 50 1 308 1 133 1 159 1 312 1 73 2 162 1 238 4 285 1 267 1 142 1 347 1 224 2 
320 1 343 1 107 1 330 1 210 1 19 1 153 1 85 1 
320 5 175 1 336 1 24 1 85 5 343 4 107 5 19 4 143 1 34 1 77 2 11 1 79 1 173 1 
320 2 204 1 343 2 107 2 330 1 19 2 153 1 85 2 
266 1 158 1 
266 1 158 1 
266 1 158 1 
266 1 158 1 
328 1 311 1 
328 1 311 1 
328 1 311 1 
266 1 158 1 
266 1 158 1 
266 1 158 1 
266 1 158 1 
266 1 158 1 
266 1 158 1 
266 1 158 1 12 1 101 1 
266 1 132 1 158 1 140 1 152 1 12 1 101 1 
213 1 277 1 192 2 52 2 65 1 
92 1 213 1 52 1 
92 1 52 1 65 1 
213 2 276 1 277 1 192 1 52 3 65 1 
213 1 277 1 94 1 192 1 52 2 65 1 
0 1 179 1 320 1 181 4 44 1 204 1 168 1 183 1 246 1 85 1 186 2 45 1 107 1 128 1 330 1 152 5 211 1 190 1 256 1 309 1 156 1 233 1 157 1 335 1 336 1 193 1 55 1 340 1 135 2 195 1 41 1 220 1 343 1 140 5 19 1 142 1 347 1 
0 1 179 1 320 1 44 1 181 4 204 1 168 1 183 1 246 1 85 1 45 1 107 1 128 1 330 1 152 5 211 1 190 1 256 3 35 1 309 1 156 1 233 1 69 1 157 1 336 1 55 1 340 1 135 2 195 1 264 2 136 2 41 1 220 1 343 1 140 5 19 1 142 1 347 1 
0 1 319 1 179 3 181 2 183 1 246 1 186 1 45 1 128 1 152 3 211 3 33 2 308 1 309 4 233 1 157 2 335 1 193 1 261 1 55 2 195 1 135 2 41 1 140 3 142 1 347 1 
0 2 204 1 168 1 169 1 246 1 85 1 45 1 128 1 211 3 308 1 309 4 214 1 261 1 55 2 263 1 135 2 140 3 19 1 142 1 179 3 319 1 320 1 181 2 183 1 186 1 107 1 330 1 152 3 33 2 190 1 156 1 233 1 157 2 335 1 336 1 193 1 195 1 41 1 343 1 347 1 
58 1 
187 1 329 1 325 1 
146 1 325 1 
7 1 325 1 
53 1 7 1 17 1 329 2 295 1 325 3 
53 1 7 1 325 1 
75 1 325 1 
319 1 280 1 273 1 281 1 133 3 123 1 160 1 73 4 238 7 285 2 207 1 86 2 239 1 268 1 116 1 224 3 347 1 130 1 
145 4 104 1 319 4 322 1 273 1 123 2 62 2 86 3 88 1 8 1 47 1 31 1 50 1 130 1 332 1 305 3 308 3 280 1 93 1 281 1 133 10 160 2 73 16 238 31 285 5 239 2 267 1 41 3 178 1 268 5 116 2 142 3 224 15 347 4 
319 1 322 2 273 1 123 1 62 4 205 1 86 2 8 2 50 2 280 1 281 1 133 4 160 1 73 5 16 1 238 9 285 3 267 2 239 1 178 1 268 1 116 1 347 1 224 4 
319 1 280 1 273 1 281 1 133 3 123 1 160 1 73 4 238 7 285 2 86 2 239 1 268 1 116 1 224 3 347 1 130 1 
319 1 280 1 273 1 281 1 133 3 123 1 160 1 73 4 238 7 285 2 86 2 239 1 268 1 116 1 224 3 347 1 130 1 
271 1 291 1 259 2 260 1 323 1 282 1 217 2 113 1 15 1 274 1 27 1 56 1 325 1 185 1 315 2 74 1 286 1 188 1 7 1 222 1 241 1 51 2 306 1 
119 1 291 1 25 1 185 1 65 1 188 1 276 1 51 1 303 1 306 1 52 2 92 1 213 1 112 1 259 1 260 1 215 1 282 1 113 1 217 1 134 1 315 1 74 1 222 1 242 1 270 1 
119 1 291 1 4 1 25 1 245 1 185 2 65 1 188 1 276 1 331 1 51 1 303 1 306 1 52 2 92 1 213 1 112 1 259 1 260 1 215 1 282 1 113 2 217 1 134 1 98 1 315 1 74 1 222 1 317 1 270 1 
291 1 4 1 25 1 245 2 27 1 185 3 65 1 188 1 276 1 331 1 51 1 303 1 306 1 52 2 92 1 213 1 112 1 259 1 260 1 282 1 113 3 217 1 134 1 98 1 315 1 74 1 222 1 242 1 288 1 270 1 
291 1 4 1 25 1 245 2 185 2 65 1 188 1 276 1 331 1 51 1 306 1 52 2 92 1 112 1 213 1 259 1 282 1 217 1 113 2 134 1 98 1 315 1 222 1 242 1 288 1 
148 1 
291 2 2 1 126 1 83 1 246 1 85 1 45 1 7 1 300 2 250 1 302 1 9 1 128 1 210 1 211 2 255 2 306 2 11 1 256 6 309 2 56 1 135 2 177 1 220 3 222 2 140 5 318 2 271 1 179 2 320 1 184 1 149 1 325 1 188 1 227 1 107 1 152 5 330 1 33 2 229 1 68 2 154 2 231 2 155 1 233 1 71 2 282 1 37 4 236 1 340 1 195 1 286 2 76 1 243 1 348 1 
256 2 154 1 155 1 320 1 37 2 284 1 236 1 184 1 83 1 126 1 85 1 220 1 140 3 107 1 9 1 302 1 330 1 210 1 152 3 243 1 11 1 348 1 
256 1 155 1 320 1 37 3 284 1 236 1 184 1 83 1 126 1 85 1 220 1 140 3 107 1 9 1 302 1 128 1 330 1 210 1 152 3 243 1 211 1 318 1 11 1 348 1 
320 1 184 1 126 1 83 1 85 1 300 1 107 1 302 1 9 1 128 1 152 3 210 1 330 1 211 1 11 1 154 1 256 2 155 1 37 3 284 1 236 1 220 1 140 3 243 1 318 1 348 1 
2 1 124 1 83 1 126 1 246 1 85 1 45 1 300 4 9 1 302 1 128 5 210 1 211 5 11 1 255 2 256 7 135 1 220 3 139 1 100 1 140 5 318 4 179 1 320 1 184 1 66 1 107 1 330 1 152 5 33 2 229 1 68 2 154 4 231 2 155 1 71 2 37 6 337 1 236 1 284 1 340 1 195 1 243 1 348 1 
2 1 83 1 126 1 246 1 85 1 45 1 300 2 9 1 302 1 128 1 210 1 211 2 11 1 255 2 256 4 309 2 135 1 220 2 140 4 318 2 179 1 320 1 184 1 149 1 107 1 330 1 152 4 33 2 229 1 68 2 231 2 154 2 155 1 71 2 37 4 236 1 340 1 195 1 243 1 348 1 
179 1 2 1 320 1 124 1 184 1 126 1 83 1 246 1 85 1 45 1 300 2 107 1 302 1 9 1 128 1 152 4 210 1 330 1 211 1 33 2 255 2 229 1 11 1 68 2 154 2 256 4 231 2 155 1 71 2 37 4 236 1 340 1 135 1 195 1 220 2 100 1 139 1 140 4 243 1 318 2 348 1 
179 1 2 1 320 1 124 1 184 1 126 1 83 1 246 1 85 1 45 1 300 2 107 1 302 1 9 1 128 1 152 4 210 1 330 1 211 1 33 2 255 2 229 1 11 1 68 2 154 2 256 4 231 2 155 1 71 2 37 4 236 1 340 1 135 1 195 1 220 2 100 1 139 1 140 4 243 1 318 2 348 1 
179 1 2 1 320 1 80 1 184 1 126 1 83 1 246 1 85 1 45 1 300 2 107 1 302 1 9 1 128 1 67 1 152 4 210 1 330 1 211 1 11 1 68 2 154 2 256 4 309 2 155 1 71 2 37 4 96 1 236 1 340 1 135 1 195 1 220 2 100 1 140 4 20 2 243 1 318 2 118 2 348 1 
179 1 2 1 320 1 124 1 184 1 126 1 83 1 246 1 85 1 45 1 66 1 300 3 107 1 302 1 9 1 128 1 152 4 210 1 330 1 211 1 33 2 255 2 229 1 11 1 68 2 231 2 154 3 256 5 155 1 71 2 37 5 236 1 340 1 135 1 195 1 220 2 100 1 139 1 140 4 243 1 318 3 348 1 
179 1 2 1 320 1 124 1 184 1 126 1 83 1 246 1 85 1 45 1 66 1 300 3 107 1 302 1 9 1 128 1 152 4 210 1 330 1 211 1 33 2 255 2 229 1 11 1 68 2 231 2 154 3 256 5 155 1 71 2 37 5 236 1 340 1 135 1 195 1 220 2 100 1 139 1 140 4 243 1 318 3 348 1 
2 1 83 1 126 1 246 1 85 1 45 1 300 2 9 1 302 1 128 1 210 1 211 1 11 1 256 4 309 2 96 1 135 1 220 2 140 4 20 2 318 2 179 1 320 1 184 1 149 1 107 1 330 1 152 4 68 2 154 2 155 1 71 2 37 4 236 1 340 1 195 1 243 1 348 1 118 2 
22 1 291 8 271 1 320 1 322 2 294 1 62 4 297 1 325 3 85 1 87 1 188 2 8 2 7 2 107 1 108 1 278 2 110 1 50 2 306 7 258 2 282 2 162 2 73 1 314 1 56 1 238 2 316 1 286 2 267 2 222 8 343 1 344 1 242 1 317 1 19 1 346 1 224 1 77 1 
1 1 319 1 322 1 320 1 62 2 296 1 5 1 85 1 248 1 8 1 46 1 107 1 278 1 50 1 308 1 133 1 336 1 162 1 73 1 238 3 285 1 267 1 41 1 343 1 19 1 142 1 143 1 347 1 224 2 
1 1 319 1 322 1 273 1 123 1 62 2 5 1 297 1 86 1 248 1 187 1 8 1 278 1 50 1 280 1 281 1 133 2 162 1 73 3 238 6 285 2 267 1 239 1 347 1 224 3 79 2 
267 1 322 1 8 1 46 1 62 2 278 1 162 1 50 1 307 1 
291 1 320 2 322 1 24 1 62 2 170 1 5 1 325 1 85 2 188 1 7 1 8 1 46 1 107 1 278 1 30 1 50 1 306 1 111 1 53 1 70 1 282 1 162 1 73 1 39 1 238 2 265 1 286 1 267 1 222 1 343 1 344 1 19 1 346 1 167 1 224 1 77 1 79 1 
291 3 1 7 203 1 123 1 170 2 5 7 85 3 86 1 248 7 8 3 7 2 46 1 171 1 50 3 306 3 308 2 53 2 133 8 218 2 267 3 222 3 268 4 19 1 142 2 224 10 319 3 103 2 272 1 322 3 320 3 273 1 24 1 62 6 325 2 188 2 107 1 278 3 111 2 280 1 281 1 282 2 114 2 162 3 73 10 238 20 285 4 286 1 239 1 41 2 344 1 343 1 242 1 199 2 346 1 167 2 347 3 77 1 79 2 78 2 
1 1 322 1 133 1 62 2 5 1 162 1 73 2 297 1 238 2 299 1 248 1 267 1 268 1 8 1 278 1 142 1 50 1 347 1 
308 1 1 1 319 1 322 1 133 1 62 2 312 1 5 1 162 1 297 1 238 2 285 1 248 1 267 1 8 1 278 1 50 1 224 2 
1 2 319 1 322 1 62 2 5 2 297 1 248 2 8 1 278 1 50 1 308 1 133 2 73 2 162 1 238 4 285 1 41 1 267 1 268 1 142 1 347 1 224 2 
1 1 322 1 133 1 62 2 5 1 162 1 73 2 238 2 299 1 248 1 267 1 268 1 8 1 278 1 110 1 142 1 50 1 347 1 
308 1 1 1 319 1 322 1 133 1 62 2 312 1 5 1 162 1 238 2 285 1 248 1 267 1 8 1 278 1 110 1 50 1 224 2 
1 2 319 1 322 1 62 2 5 2 248 2 8 1 278 1 110 1 50 1 308 1 133 2 73 2 162 1 238 4 285 1 41 1 267 1 268 1 142 1 347 1 224 2 
1 2 319 1 322 1 62 2 5 2 248 2 8 1 278 1 50 1 308 1 133 2 73 2 162 1 238 4 285 1 41 1 267 1 268 1 142 1 347 1 224 2 
291 1 320 1 322 1 62 2 170 1 325 1 85 1 188 1 7 1 8 1 278 1 50 1 306 1 111 1 53 1 282 1 73 1 162 1 238 2 286 1 267 1 222 1 344 1 346 1 167 1 224 1 79 1 78 1 
291 1 320 1 322 1 62 2 170 1 325 1 85 1 188 1 89 1 7 1 8 1 278 1 49 1 50 1 306 1 53 1 282 1 73 1 162 1 97 1 238 2 286 1 267 1 222 1 344 1 346 1 224 1 79 1 
1 2 319 1 322 1 62 2 5 2 248 2 8 1 46 1 278 1 50 1 308 1 133 2 73 2 162 1 238 4 285 1 41 1 267 1 268 1 142 1 347 1 224 2 
319 1 1 2 291 1 320 1 322 1 62 2 5 2 170 1 325 1 85 1 248 2 188 1 7 1 8 1 278 1 50 1 306 1 111 1 308 1 53 1 133 2 282 1 73 2 162 1 238 4 218 1 285 1 267 1 41 1 268 1 222 1 317 1 142 1 224 2 347 1 167 1 78 1 
319 1 1 1 322 1 320 1 62 2 5 1 85 1 248 1 8 1 46 1 107 1 278 1 50 1 91 1 308 1 133 1 336 1 162 1 73 2 238 3 267 1 41 1 268 1 343 1 19 1 142 1 224 1 143 1 347 1 
267 1 322 1 8 1 166 1 62 2 147 1 129 1 16 1 50 1 262 1 
267 1 322 1 8 1 166 1 62 2 147 1 129 1 16 1 50 1 262 1 
267 1 322 1 8 1 166 1 62 2 147 1 129 1 16 1 50 1 262 1 
267 1 322 1 8 1 166 1 62 2 147 1 129 1 16 1 50 1 262 1 
267 1 322 1 8 1 166 1 62 2 147 1 129 1 16 1 50 1 262 1 
291 2 320 2 322 1 62 2 325 1 85 2 188 1 7 1 8 1 46 1 107 2 108 1 278 1 279 1 50 1 306 2 230 1 333 1 258 2 282 1 162 1 38 1 73 1 238 2 316 1 267 1 222 2 240 1 344 1 346 1 224 1 
291 1 271 1 282 1 313 1 274 1 56 1 325 1 286 1 165 1 188 1 7 1 222 1 51 1 306 1 
92 1 291 1 257 1 213 1 112 1 282 1 313 1 134 1 65 1 327 1 188 1 222 1 276 1 242 1 51 1 303 1 52 2 306 1 
92 1 291 2 257 1 213 1 112 1 282 1 313 1 134 1 65 1 327 1 188 1 222 2 276 1 242 1 317 1 51 1 303 1 52 2 306 2 
92 1 291 1 257 1 213 1 112 1 282 1 134 1 65 1 57 1 188 1 222 1 276 1 242 1 51 1 303 1 52 2 306 1 
59 1 
179 1 340 1 195 1 135 1 246 1 45 1 269 1 128 1 131 1 211 1 
308 2 309 10 319 2 179 5 157 5 216 2 55 5 135 5 41 2 199 1 142 2 252 1 347 2 33 5 211 5 
256 1 220 1 140 1 128 1 152 1 211 1 
291 4 179 2 271 1 61 1 325 1 246 2 45 2 188 1 7 1 227 1 152 3 90 1 306 4 256 4 232 2 233 2 282 1 261 1 340 1 177 1 195 2 135 2 56 1 286 2 220 2 222 4 140 3 18 1 76 2 
179 1 187 1 269 1 128 1 211 1 131 1 135 1 
179 1 246 1 45 1 128 1 152 1 33 1 211 2 229 1 255 1 231 1 256 1 309 1 340 1 135 1 195 1 220 1 140 1 
291 3 295 1 244 2 246 4 45 4 6 1 7 3 301 1 128 2 252 2 90 1 131 1 211 8 306 3 256 5 308 2 53 3 309 12 216 2 54 2 55 6 135 8 220 3 269 1 222 3 140 5 317 1 142 2 179 9 319 2 146 3 105 2 325 10 188 4 329 2 152 5 33 6 232 1 233 2 157 6 282 3 163 2 236 2 340 4 195 4 237 2 286 1 41 2 197 1 75 2 199 2 76 1 347 2 117 2 
102 1 179 8 145 1 104 1 319 2 321 1 122 1 246 2 45 2 128 2 10 1 152 1 252 1 33 3 211 5 305 1 256 1 308 2 191 1 309 6 233 1 157 5 216 2 55 5 340 2 195 2 135 5 164 1 137 1 220 1 41 2 140 1 76 1 142 2 347 2 
319 1 179 2 320 1 273 1 204 1 123 1 168 1 246 1 85 1 45 1 107 1 330 1 152 1 252 1 190 1 156 1 336 1 216 2 340 1 195 1 135 2 239 1 139 1 343 1 140 1 19 1 347 2 202 1 
291 1 322 1 320 3 168 1 62 2 170 1 325 1 85 3 188 1 7 1 8 1 107 2 278 1 50 1 306 1 111 1 53 1 336 2 282 1 162 1 238 1 286 1 267 1 222 1 343 2 345 1 19 2 346 1 224 1 167 1 79 1 78 1 
309 4 179 1 233 1 157 2 55 2 340 1 135 2 195 1 246 1 45 1 86 1 128 2 76 1 33 2 211 4 
174 1 234 1 251 1 72 1 109 1 
36 1 234 1 72 1 
36 1 234 1 72 1 
36 1 234 1 72 1 
234 1 72 1 326 1 
234 1 72 1 326 1 
234 1 72 1 326 1 
234 1 72 1 
266 1 158 1 
319 2 322 1 273 1 133 5 123 2 62 2 73 5 16 1 238 10 285 3 267 1 239 2 8 1 268 2 50 1 224 5 347 2 202 1 
322 1 133 1 62 2 73 2 16 1 238 2 267 1 8 1 268 1 142 1 50 1 347 1 
308 1 319 1 322 1 133 2 62 2 73 2 16 1 238 4 285 1 267 1 41 1 8 1 268 1 142 1 224 2 50 1 347 1 
322 3 133 2 123 1 62 6 73 1 338 1 16 1 238 3 285 1 267 3 239 1 178 1 8 3 268 1 228 1 224 2 50 3 
145 4 104 1 319 5 322 5 273 2 123 3 62 10 86 1 88 1 8 5 228 1 47 1 31 1 50 5 332 1 305 3 308 3 280 1 281 1 133 12 73 16 338 1 16 1 99 1 238 34 285 7 239 3 267 5 41 3 178 2 268 5 142 3 224 18 347 5 
319 1 280 1 322 2 273 1 281 1 133 3 123 1 62 4 73 4 238 8 86 1 285 2 267 2 239 1 178 1 268 1 8 2 347 1 224 4 50 2 
280 1 319 1 273 1 281 1 133 2 123 1 73 3 238 6 86 1 285 2 239 1 187 1 224 3 347 1 
308 1 319 1 322 1 133 2 62 2 73 2 99 1 238 4 285 1 267 1 41 1 8 1 268 1 142 1 224 2 50 1 347 1 
308 1 319 1 104 1 145 2 133 2 73 3 238 7 285 1 41 1 268 1 31 1 142 1 224 4 347 1 305 1 
145 2 319 3 292 1 322 2 273 1 123 2 62 4 86 1 8 2 31 1 50 2 305 2 308 2 280 1 281 1 133 9 73 11 338 1 339 1 238 23 285 5 239 2 41 2 267 2 178 2 268 4 142 2 347 3 224 12 
145 1 224 1 238 1 
73 1 305 1 238 1 
308 1 319 1 322 1 133 3 62 2 73 3 99 1 238 6 285 2 267 1 41 1 8 1 268 1 199 1 142 1 50 1 224 3 347 1 
145 1 104 1 319 2 321 1 322 1 122 1 62 2 8 1 50 1 305 1 308 2 191 1 133 2 73 6 16 1 164 1 238 12 137 1 285 1 267 1 41 2 268 1 142 2 224 6 347 2 
319 1 273 1 133 2 123 1 73 3 238 6 285 1 239 1 268 1 347 1 224 3 
280 1 322 1 281 1 133 2 123 1 62 2 73 1 338 1 238 3 285 1 239 1 267 1 178 1 268 1 8 1 224 2 50 1 
319 1 145 1 104 1 321 1 322 1 273 1 123 1 62 2 86 1 8 1 50 1 305 1 280 1 281 1 133 2 73 4 16 1 238 8 285 2 267 1 239 1 347 1 224 4 
319 1 145 2 104 1 321 1 322 2 273 1 123 1 62 4 86 1 8 2 31 1 50 2 305 1 280 1 281 1 133 3 73 6 16 1 99 1 238 11 285 2 239 1 267 2 41 1 268 1 142 1 224 5 347 2 
145 1 104 1 319 3 321 1 322 3 273 1 122 1 123 1 62 6 86 1 8 3 50 3 305 1 308 2 280 1 191 1 281 1 133 4 73 9 16 1 99 1 164 1 238 19 137 1 285 3 239 1 267 3 41 2 178 1 268 1 142 2 224 10 347 3 
145 1 104 1 319 2 321 1 322 3 273 1 122 1 123 1 62 6 86 1 8 3 50 3 305 1 308 1 280 1 191 1 281 1 133 5 73 10 16 1 99 1 164 1 238 17 137 1 285 3 239 1 267 3 41 2 178 1 268 2 142 2 224 7 347 3 
319 1 145 1 104 1 321 1 322 1 273 1 123 1 62 2 86 1 8 1 50 1 305 1 280 1 281 1 133 2 73 4 16 1 238 8 285 2 267 1 239 1 347 1 224 4 
145 1 104 1 319 2 321 1 322 1 122 1 62 2 8 1 50 1 305 1 308 2 191 1 133 2 73 6 16 1 164 1 238 12 137 1 285 1 267 1 41 2 268 1 142 2 224 6 347 2 
145 1 104 1 319 2 321 1 322 4 273 1 122 1 123 1 62 8 86 1 8 4 50 4 305 1 308 1 280 1 191 1 281 1 133 5 73 10 16 1 99 1 164 1 238 18 137 1 285 3 239 1 267 4 41 2 178 2 268 2 142 2 224 8 347 3 
145 1 104 1 319 2 321 1 322 4 122 1 62 8 8 4 228 1 50 4 305 1 308 2 191 1 133 6 73 9 16 1 164 1 238 16 137 1 285 3 267 4 41 3 178 2 268 3 142 3 224 7 347 3 
319 1 280 2 273 1 281 1 133 6 123 3 73 3 238 7 285 3 239 3 268 3 224 4 347 1 
145 1 104 1 319 2 321 1 322 4 273 1 122 1 123 1 62 8 86 1 8 4 228 1 50 4 305 1 308 1 280 1 191 1 281 1 133 4 73 10 16 1 164 1 238 18 137 1 285 3 239 1 267 4 41 2 178 2 268 1 142 2 224 8 347 3 
320 1 180 1 107 1 34 1 11 1 79 1 85 1 
120 1 320 1 180 1 235 1 275 1 85 1 42 1 107 1 289 1 34 1 11 1 79 1 
291 4 271 1 282 1 56 1 325 1 286 1 221 1 188 1 196 1 222 4 7 1 317 1 306 4 
23 1 291 2 53 1 232 1 282 1 29 1 325 1 188 2 222 2 208 1 7 1 171 1 306 2 212 1 
92 1 291 1 286 1 188 1 222 1 282 1 134 1 52 1 306 1 65 1 
291 2 188 1 7 1 222 2 282 1 242 1 108 1 317 1 279 1 306 2 325 1 
271 1 291 5 232 1 294 1 282 2 314 1 56 1 325 3 286 1 188 2 196 1 222 5 7 2 317 1 108 1 306 4 
271 1 291 5 232 1 282 2 82 1 314 1 56 1 325 3 286 1 188 2 196 1 222 5 7 2 317 1 108 1 306 4 
271 1 291 1 286 1 188 1 187 1 7 1 222 1 282 1 56 1 306 1 325 1 
53 1 291 1 320 2 282 1 170 1 325 1 85 2 286 1 188 1 7 1 222 1 343 1 107 1 19 1 167 1 77 1 306 1 79 1 
53 2 291 1 320 2 232 1 282 1 170 1 325 3 85 2 188 1 7 2 222 1 343 2 107 2 75 1 9 1 330 1 210 1 19 1 167 1 77 1 117 1 306 1 79 1 
291 2 320 2 170 1 325 3 85 2 89 1 188 1 7 2 107 2 9 1 210 1 330 1 306 2 53 2 232 1 282 1 221 1 222 2 343 2 75 1 19 1 77 1 117 1 79 1 
291 3 146 1 325 4 188 1 7 1 329 1 128 1 152 2 211 1 306 3 256 1 53 1 232 1 282 1 236 1 219 1 286 1 221 1 115 1 222 3 140 2 75 1 117 1 
256 1 53 1 291 3 232 1 146 1 282 1 163 1 236 1 325 4 286 1 221 1 188 1 7 1 222 3 140 2 75 1 329 1 128 1 152 2 211 1 117 1 306 3 
291 1 87 1 188 1 222 1 282 1 306 1 
22 1 23 1 291 7 53 1 258 1 294 1 282 2 295 1 314 1 29 1 325 3 286 2 106 1 87 1 188 3 222 7 7 2 242 1 108 1 317 1 306 6 
291 1 1 1 123 1 5 1 170 1 85 2 86 1 248 1 8 2 7 1 46 1 50 2 306 1 53 1 133 2 218 1 267 2 222 1 317 1 19 1 224 3 319 1 322 2 320 2 273 1 62 4 325 1 188 1 107 1 278 2 111 1 230 1 280 1 281 1 282 1 114 1 162 2 73 3 238 6 285 2 239 1 343 1 167 1 347 1 77 1 78 1 79 2 
179 1 291 1 181 1 146 1 244 1 246 2 105 1 325 2 45 2 329 1 128 1 152 3 211 1 131 1 90 1 306 1 256 2 163 1 236 1 340 2 135 1 195 2 237 1 286 1 220 1 269 1 222 1 140 3 
291 2 53 1 282 1 295 1 325 2 87 1 188 2 222 2 7 1 317 1 329 1 301 1 306 2 
53 1 291 1 320 2 282 1 170 1 325 1 85 2 286 1 188 1 89 1 7 1 222 1 343 1 107 1 19 1 77 1 306 1 79 1 
23 1 291 1 53 1 232 1 282 1 295 1 29 1 325 1 106 1 188 2 222 1 7 1 306 1 
333 1 320 1 121 1 38 1 85 1 342 1 240 1 107 1 304 1 
293 1 121 1 28 1 
342 1 121 1 64 1 304 1 79 1 
293 1 121 1 181 1 64 2 236 1 28 1 342 2 151 1 140 2 9 1 302 1 128 1 330 1 210 1 152 2 211 1 304 2 79 1 172 1 
74 1 119 1 260 1 4 1 113 1 331 1 98 1 185 1 
14 1 260 1 4 3 113 4 81 1 63 1 245 2 98 2 185 4 74 1 341 1 141 1 331 2 13 1 
74 1 119 1 260 1 4 1 283 1 113 2 200 1 331 1 245 1 98 1 185 2 206 1 
74 1 119 1 341 2 40 1 260 1 4 1 113 3 63 2 141 1 331 1 98 1 185 3 
150 1 4 2 32 1 138 2 
74 1 119 1 260 1 209 1 113 1 185 1 
74 1 119 1 260 1 4 1 113 2 161 1 331 1 245 1 98 1 185 2 
176 1 
74 1 119 1 260 1 4 1 113 1 331 1 98 1 185 1 
187 1 4 1 331 1 98 1 
74 1 260 1 4 1 113 1 331 1 98 1 185 1 
217 1 315 1 185 1 
74 1 119 1 341 2 260 1 4 1 113 3 63 1 141 1 331 1 98 1 144 1 185 3 
74 1 260 1 4 1 113 2 201 1 331 1 245 1 98 1 185 2 
119 1 92 1 213 1 14 1 260 1 310 1 4 1 113 1 185 1 74 1 52 1 
74 1 119 1 260 1 4 1 113 1 98 1 185 1 
74 1 119 1 260 1 113 1 331 1 98 2 185 1 
74 2 119 1 189 1 260 2 4 1 113 2 48 1 98 1 43 1 185 2 
119 1 14 1 260 1 4 2 113 3 81 1 161 1 245 2 98 1 185 3 226 1 74 1 331 1 
119 1 92 1 213 1 260 1 4 1 113 2 245 1 98 1 65 1 185 2 74 1 276 1 198 1 331 1 52 2 
119 1 14 1 260 2 4 2 113 4 81 1 245 2 98 1 185 4 74 2 201 1 331 1 253 1 
119 1 260 1 4 1 113 3 161 1 245 1 98 1 185 3 74 1 341 1 331 1 
14 1 4 1 81 1 13 1 
4 1 98 1 

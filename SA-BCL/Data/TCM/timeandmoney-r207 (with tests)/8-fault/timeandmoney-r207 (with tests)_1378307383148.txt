#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (27,304) 78 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (32,179) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (94,172,239) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException (32,179) (32,179) 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (32,179) (32,179) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException (32,179) (32,179) 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (32,179) (32,179) 34 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 163 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (27,304) 78 278 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException (32,179) (32,179) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (32,179) (32,179) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (32,179) (32,179) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 286 79 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 17 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 17 159 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 174 2 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 314 174 2 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 314 174 208 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 174 2 366 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 174 2 366 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 163 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 46 260 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 329 287 150 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 160 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (27,304) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (27,304) (27,304) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (32,179) (32,179) 34 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException (32,179) (32,179) 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 286 79 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (27,304) 78 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 163 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (32,179) (32,179) 34 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 747 | return null
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
104 2 320 1 72 1 74 1 238 1 77 1 137 2 218 3 280 1 350 1 351 2 192 1 284 1 116 1 325 2 90 5 148 1 332 9 92 6 361 2 18 1 228 1 334 9 252 4 254 1 101 1 232 2 41 2 
104 2 320 1 72 1 74 1 238 1 77 1 137 2 218 3 280 1 350 1 351 2 192 1 284 1 116 1 325 2 90 5 148 1 332 9 92 6 361 2 18 1 228 1 334 9 252 4 254 1 101 1 232 2 41 2 
104 2 320 1 72 1 74 1 238 1 77 1 137 2 218 4 280 1 350 1 351 2 192 1 284 1 116 1 325 2 90 6 148 1 332 10 92 7 361 2 18 1 228 1 334 10 252 5 254 1 101 1 232 2 41 2 
104 2 320 1 74 1 238 1 77 1 137 2 218 2 280 1 350 1 351 2 192 1 284 1 116 1 325 2 90 4 148 1 332 7 92 4 361 2 18 1 228 1 334 7 252 3 254 1 101 1 232 2 41 1 
90 3 72 1 238 1 148 1 137 1 332 4 92 3 361 1 18 1 218 1 334 4 252 2 350 1 351 1 254 1 325 1 232 1 41 2 
90 1 104 1 77 1 148 1 137 1 332 2 361 1 18 1 19 1 334 2 350 1 351 1 131 1 101 1 325 1 357 1 
90 2 104 1 148 1 137 2 332 3 92 1 18 1 218 1 334 3 280 1 252 1 350 1 351 2 
104 1 320 1 72 1 238 1 56 1 137 2 243 1 218 3 280 1 350 1 351 2 192 1 325 1 90 5 148 1 332 9 92 7 361 1 18 1 252 4 334 9 254 1 232 1 41 2 
104 1 320 1 72 1 238 1 56 1 137 2 243 1 218 3 280 1 350 1 351 2 192 1 325 1 90 5 148 1 332 9 92 7 361 1 18 1 252 4 334 9 254 1 232 1 41 2 
163 1 354 1 165 1 
0 1 
333 1 296 2 
136 1 78 1 176 2 304 1 67 1 294 2 96 1 333 1 274 2 296 1 307 1 
333 1 296 1 32 1 
183 1 73 1 172 1 65 1 239 1 189 1 293 1 94 1 129 1 130 1 39 1 354 1 102 1 165 1 
239 1 296 1 
183 1 184 1 172 1 282 1 292 1 
183 1 172 1 328 1 75 1 292 1 333 1 282 1 354 1 179 1 296 1 32 1 165 1 
183 1 172 1 292 1 
183 1 333 1 172 1 282 1 179 1 296 1 32 1 
165 1 
183 1 172 1 75 1 292 1 333 1 264 1 282 1 354 1 179 1 296 1 32 1 165 1 
183 4 158 2 233 2 236 2 43 1 134 1 75 1 111 1 282 2 354 2 285 4 32 1 165 2 144 1 197 1 33 1 168 2 221 2 34 1 327 1 172 4 10 1 292 2 226 1 358 1 149 3 333 1 179 1 338 1 296 1 
163 1 
171 1 222 1 329 1 330 1 202 1 44 1 293 1 16 1 227 1 176 1 67 1 294 1 335 1 39 2 220 1 295 1 265 1 102 2 274 1 61 1 
25 1 65 1 201 1 293 1 125 1 262 1 39 1 102 1 296 1 
65 1 201 1 44 2 293 2 262 1 39 2 295 1 265 2 102 2 296 1 
234 1 39 1 65 1 102 1 265 1 44 1 293 1 
125 1 25 1 296 1 
183 1 25 1 73 1 239 1 44 1 189 1 78 1 304 1 278 1 265 1 88 1 172 1 222 1 65 1 293 1 176 1 67 1 294 1 130 1 333 1 39 1 295 1 102 1 274 1 296 2 
166 1 262 1 129 1 39 2 295 1 102 2 265 1 44 1 293 2 
183 1 88 1 25 1 172 1 73 1 222 1 65 1 239 1 44 2 189 1 293 2 130 1 39 2 295 2 265 2 102 2 296 1 165 1 255 1 
25 1 296 1 
176 1 294 1 67 1 274 1 
176 1 294 1 67 1 274 1 
302 1 244 1 263 2 146 1 122 1 215 1 283 1 186 1 
45 1 130 1 39 1 65 1 102 1 265 1 44 1 293 1 
25 1 65 1 201 1 44 1 293 1 262 1 39 1 295 1 265 1 102 1 296 1 
45 1 234 1 39 2 65 1 102 2 265 2 44 2 293 2 
5 1 36 1 
5 1 36 1 
210 1 245 1 
210 1 245 1 
210 1 245 1 
5 1 35 1 36 1 
5 1 36 1 181 1 
210 1 5 2 317 1 346 1 245 1 36 2 
5 1 35 1 36 1 
5 1 35 1 36 1 
5 1 154 1 36 1 
5 1 154 1 36 1 
5 1 154 1 36 1 
183 2 69 1 26 1 343 2 172 2 76 2 301 1 36 2 15 1 113 2 126 2 81 1 5 2 272 3 7 1 317 1 324 1 157 2 165 1 
256 1 183 1 103 1 299 1 343 1 172 1 216 1 36 1 44 2 293 2 204 1 241 1 113 1 126 1 5 1 272 1 262 1 206 1 39 2 102 2 324 1 265 2 157 1 181 1 
361 1 325 1 232 1 
361 1 325 1 357 1 
361 3 288 1 71 1 47 1 232 2 357 1 
361 2 273 1 288 1 47 1 232 1 357 1 
361 2 288 2 47 1 232 1 357 1 
183 3 158 1 233 1 236 1 75 1 282 3 354 1 285 2 32 1 165 1 118 1 33 1 221 1 247 1 172 3 292 1 149 1 360 1 128 1 95 1 205 1 333 1 38 1 315 1 338 1 179 1 296 1 132 1 23 1 
183 3 158 1 233 1 184 1 236 1 75 1 345 1 282 3 353 1 354 1 285 2 32 1 165 1 118 1 33 1 221 1 247 1 172 3 121 1 292 2 149 1 360 1 128 1 95 1 205 1 333 1 315 1 179 1 338 1 296 1 
183 3 0 3 233 1 158 1 236 1 134 1 282 2 354 1 285 3 32 1 165 2 118 2 33 1 221 1 172 3 149 2 312 1 204 1 360 1 95 1 128 1 333 1 205 1 152 1 38 1 315 2 179 1 296 1 23 1 132 1 
183 4 0 6 158 2 233 1 275 1 237 1 236 1 134 1 282 3 354 1 285 5 87 1 165 3 118 4 33 2 221 1 172 4 149 4 312 2 204 2 360 1 128 2 95 2 205 2 152 1 38 1 315 4 23 2 132 1 
163 1 220 1 59 1 
220 1 224 1 
141 1 
220 1 330 1 
171 1 220 3 59 2 330 1 240 1 48 1 
171 1 220 1 330 1 
220 1 200 1 
158 3 1 2 258 5 111 2 190 6 195 1 196 4 33 3 34 1 308 1 226 2 358 2 124 1 66 14 93 1 37 1 336 8 339 1 
158 3 1 2 258 7 111 2 190 6 195 3 196 4 33 3 34 1 308 1 226 2 358 2 124 1 66 14 93 1 37 1 336 8 339 1 
158 3 1 2 106 1 258 5 111 2 190 6 195 1 196 4 33 3 34 1 308 1 226 2 358 2 124 1 66 14 93 1 37 1 336 8 339 1 
158 6 1 3 185 1 276 1 110 4 258 14 215 1 188 3 111 2 302 1 4 1 263 2 190 19 195 7 196 7 33 6 34 1 146 1 122 1 308 1 226 3 358 3 124 1 66 40 93 2 37 2 49 1 95 3 128 3 205 3 337 1 336 21 253 1 339 1 319 1 
24 1 158 3 1 2 185 1 258 7 215 2 111 2 302 2 263 4 190 7 195 2 196 5 33 3 34 1 146 2 122 2 248 1 226 2 358 2 124 1 66 16 93 1 37 1 336 9 339 1 
257 1 104 1 71 1 137 1 303 1 323 1 350 1 351 1 325 1 61 1 357 1 90 1 289 1 290 1 202 1 148 1 175 1 14 1 270 1 332 2 92 1 176 1 361 2 18 1 294 1 334 2 156 1 232 1 274 1 40 1 
297 1 257 1 104 1 71 1 214 1 137 1 303 1 350 1 351 1 325 1 61 1 357 1 90 1 289 1 290 1 202 1 148 1 175 1 14 1 270 1 332 3 176 1 92 2 361 2 294 1 151 1 334 3 232 1 274 1 40 1 
297 1 257 1 104 1 71 1 214 1 350 1 325 1 61 1 357 1 90 1 289 1 202 1 148 1 175 1 14 1 270 1 332 2 176 1 92 2 361 2 294 1 334 2 274 1 40 1 232 1 
142 1 257 2 104 2 212 1 326 1 289 2 202 1 330 1 175 2 137 1 332 1 176 1 348 1 151 1 67 1 294 1 334 1 351 1 220 1 194 1 365 1 274 1 61 1 
297 1 257 1 104 1 71 1 137 1 303 1 351 1 325 1 61 1 357 1 289 1 290 1 202 1 175 1 14 1 270 1 332 1 176 1 361 2 18 1 294 1 334 1 156 1 232 1 274 1 40 1 
180 1 
183 1 233 1 286 1 236 1 221 1 172 1 75 1 292 2 149 1 79 1 176 1 67 1 294 1 152 1 338 1 285 1 274 1 182 1 
183 2 211 1 73 1 75 1 239 1 189 1 162 1 322 1 82 2 264 1 172 2 11 1 292 2 65 1 293 1 17 1 94 1 129 1 130 1 153 1 39 1 102 1 
183 2 211 1 73 1 75 1 239 1 189 1 162 1 322 1 82 3 279 1 264 1 354 1 165 1 172 2 11 1 292 1 65 1 293 1 94 1 129 1 130 1 153 1 39 1 102 1 
183 2 211 1 159 1 73 1 75 1 239 1 189 1 162 1 322 1 82 3 279 1 264 1 172 2 11 1 292 2 65 1 293 1 17 1 94 1 129 1 130 1 153 1 39 1 102 1 
183 1 172 1 264 1 292 1 75 1 
0 1 183 2 233 1 159 1 211 1 236 1 53 1 73 1 75 1 239 1 189 1 162 1 322 1 82 3 279 1 139 1 86 2 285 1 145 2 221 1 172 2 11 1 292 2 65 1 149 1 293 1 312 1 17 1 20 2 94 1 129 1 130 1 153 1 314 1 39 1 177 1 338 1 102 1 
183 2 233 1 159 1 211 1 236 1 73 1 2 1 75 1 187 1 239 1 189 1 162 1 322 1 82 3 279 1 139 1 86 2 285 1 145 2 221 1 172 2 11 1 292 2 174 1 65 1 149 1 293 1 312 1 17 1 20 2 94 1 129 1 130 1 153 1 314 1 39 1 177 1 102 1 338 1 
183 2 233 1 159 1 211 1 236 1 73 1 2 1 75 1 187 1 239 1 189 1 162 1 322 1 82 2 139 1 86 1 285 1 145 1 221 1 172 2 11 1 292 2 174 1 65 1 149 1 293 1 312 1 17 1 20 1 94 1 129 1 130 1 153 1 314 1 39 1 177 1 102 1 338 1 
0 1 183 2 233 1 159 1 211 1 236 1 109 1 73 1 75 1 239 1 189 1 162 1 322 1 82 2 85 1 285 1 62 1 145 1 221 1 172 2 11 1 292 2 223 1 174 1 65 1 149 1 293 1 17 1 20 1 94 1 129 1 130 1 153 1 314 1 39 1 102 1 338 1 208 1 
183 2 233 1 211 1 159 2 236 1 73 1 2 1 75 1 187 1 239 1 189 1 162 1 322 1 82 4 279 2 139 1 86 2 285 1 145 2 221 1 172 2 11 1 292 3 174 1 65 1 149 1 293 1 312 1 17 2 20 2 94 1 129 1 130 1 153 1 314 1 39 1 177 1 338 1 102 1 366 1 
183 2 233 1 211 1 159 2 236 1 73 1 2 1 75 1 187 1 239 1 189 1 162 1 322 1 82 4 279 2 139 1 86 2 285 1 145 2 221 1 172 2 11 1 292 3 174 1 65 1 149 1 293 1 312 1 17 2 20 2 94 1 129 1 130 1 153 1 314 1 39 1 177 1 338 1 102 1 366 1 
0 1 183 2 233 1 211 1 236 1 53 1 109 1 73 1 239 1 189 1 162 1 322 1 82 2 85 1 285 1 145 1 221 1 172 2 11 1 65 1 149 1 293 1 20 1 94 1 129 1 130 1 153 1 314 1 39 1 338 1 102 1 
196 1 1 1 33 1 146 1 258 1 122 1 215 1 186 1 226 1 111 1 358 1 302 1 163 1 124 1 244 1 66 2 263 2 336 2 283 1 339 1 
143 1 146 1 110 1 122 1 215 1 188 1 302 1 260 1 244 1 66 2 46 1 263 2 190 1 336 1 283 1 
52 1 215 1 44 1 302 1 244 1 262 1 263 2 190 1 83 1 220 1 283 1 265 1 61 1 164 1 143 1 199 1 171 1 146 1 122 1 222 1 330 1 202 1 293 1 16 1 227 1 176 1 66 2 294 1 67 1 335 1 230 1 97 1 39 2 295 1 336 1 100 1 102 2 274 1 
105 1 215 2 27 1 44 1 302 2 244 2 304 1 263 4 190 2 352 1 220 1 283 2 265 1 61 1 143 1 287 1 199 1 171 1 146 2 122 2 222 1 329 1 330 1 202 1 293 1 150 1 16 1 227 1 176 1 66 2 67 1 294 1 335 1 39 2 295 1 102 2 274 1 133 1 
107 1 146 1 160 1 122 1 215 1 302 1 176 1 244 1 66 1 67 1 294 1 263 2 336 1 283 1 274 1 164 1 
158 1 25 1 119 1 143 1 33 1 146 1 122 1 215 1 302 1 244 1 66 2 128 1 95 1 190 1 205 1 263 2 336 1 283 1 296 1 
33 1 146 1 122 1 215 1 186 1 302 1 244 1 66 1 263 2 205 1 283 1 336 1 306 1 
158 1 341 1 146 1 122 1 215 1 186 1 302 1 244 1 66 1 128 1 263 2 190 1 283 1 
158 1 33 1 146 1 122 1 215 1 186 1 302 1 244 1 66 2 128 1 95 1 190 1 263 2 205 1 283 1 336 1 
33 1 107 1 146 1 122 1 215 1 302 1 244 1 66 1 263 2 205 1 283 1 336 1 306 1 
158 1 341 1 107 1 146 1 122 1 215 1 302 1 244 1 66 1 128 1 263 2 190 1 283 1 
158 1 33 1 107 1 146 1 122 1 215 1 302 1 244 1 66 2 128 1 95 1 190 1 263 2 205 1 283 1 336 1 
158 1 33 1 146 1 122 1 215 1 302 1 244 1 66 2 128 1 95 1 190 1 263 2 205 1 283 1 336 1 
176 1 304 1 294 1 67 1 274 1 
176 1 294 1 67 1 349 1 274 1 
158 1 143 1 33 1 146 1 122 1 215 1 302 1 244 1 66 2 128 1 95 1 190 1 263 2 205 1 283 1 336 1 
176 1 304 1 294 1 323 1 27 1 274 1 
158 1 25 1 143 1 33 1 146 1 122 1 215 1 302 1 244 1 66 2 128 1 95 1 190 1 205 1 263 2 336 1 98 1 283 1 296 1 
24 1 158 3 110 2 276 1 213 2 258 6 215 2 188 1 217 1 261 1 302 2 263 4 190 10 305 2 193 1 195 3 196 3 33 3 63 1 170 1 146 2 122 2 331 1 123 1 66 19 49 1 95 3 128 3 205 3 336 9 
24 1 68 1 158 2 185 2 110 2 213 1 258 4 215 3 188 2 217 2 302 3 219 1 190 12 263 6 191 1 305 4 84 1 193 1 195 2 196 2 33 3 63 2 267 1 170 1 146 3 122 3 331 1 66 26 49 2 95 3 128 2 362 1 205 3 336 14 
24 1 68 1 158 5 1 1 185 1 110 4 276 1 213 1 258 8 215 3 188 3 111 1 217 2 261 1 302 3 219 1 263 6 190 21 191 1 305 4 84 1 193 1 195 4 196 4 33 5 267 1 63 1 170 1 146 3 122 3 291 1 226 1 358 1 331 1 124 1 66 41 49 3 95 4 128 4 362 1 205 4 336 20 339 1 
24 1 68 1 158 4 1 1 185 2 110 4 276 1 213 1 258 7 215 4 188 3 111 1 217 2 261 1 302 4 219 1 263 8 190 18 191 1 305 4 84 1 193 1 195 3 196 4 33 5 267 1 63 1 170 1 146 4 122 4 291 1 226 1 358 1 331 1 124 1 66 38 49 3 95 4 128 3 362 1 205 4 336 20 339 1 
24 1 68 1 158 8 1 1 185 1 110 4 276 2 213 1 258 14 215 2 188 4 111 1 217 1 302 2 219 1 263 4 190 25 191 1 305 4 84 1 193 1 195 7 196 7 33 8 267 1 63 1 198 2 170 1 146 2 122 2 226 1 358 1 331 1 124 1 66 52 49 2 95 7 128 7 362 1 205 7 336 27 339 1 
69 1 126 1 113 1 5 1 343 1 281 1 317 1 301 1 36 1 157 1 
206 1 181 1 
126 1 113 1 5 1 300 1 169 1 343 1 225 1 36 1 157 1 
183 1 69 1 26 1 343 1 172 1 76 1 301 1 36 1 113 1 126 1 81 1 5 1 272 2 7 1 317 1 324 1 157 1 165 1 
183 1 69 1 26 1 343 1 172 1 76 1 301 1 36 1 113 1 126 1 81 1 5 1 272 2 7 1 317 1 324 1 157 1 165 1 
183 1 69 1 26 1 343 1 172 1 76 1 301 1 36 1 113 1 126 1 81 1 5 1 272 2 7 1 317 1 324 1 157 1 165 1 
35 1 346 1 249 1 
35 1 346 1 249 1 
154 1 268 1 
154 1 268 1 346 1 
103 1 216 1 
298 1 183 1 256 1 103 1 299 1 343 1 216 1 76 1 44 2 241 1 113 1 7 1 5 1 262 1 282 1 265 2 172 1 36 1 293 2 204 1 126 1 272 1 206 1 39 2 102 2 157 1 181 1 
35 1 249 1 
154 1 268 1 346 1 
42 1 160 1 215 1 3 1 302 1 80 1 244 1 263 2 190 1 220 1 283 1 61 1 164 1 307 2 143 1 199 1 146 1 122 1 202 1 330 1 293 2 176 2 127 1 66 2 294 2 21 1 39 2 336 1 102 2 274 2 209 1 
297 1 257 1 71 1 54 1 202 1 13 1 359 1 14 1 270 1 176 2 361 2 303 1 294 2 323 1 325 1 232 1 274 2 61 1 357 1 
297 1 167 1 257 1 71 1 202 1 359 1 14 1 270 1 176 1 361 2 303 1 294 1 325 1 232 1 274 1 61 1 357 1 
142 1 257 1 212 1 202 1 330 1 13 1 176 1 67 1 294 1 220 1 274 1 356 1 194 1 61 1 
297 1 257 1 71 1 54 1 202 1 13 1 359 1 14 1 270 1 176 1 361 2 303 1 294 1 325 1 232 1 274 1 61 1 357 1 
242 1 
163 1 197 1 10 1 354 1 285 1 165 1 149 1 
0 1 233 1 236 1 221 1 292 1 75 1 149 1 312 1 139 1 177 1 354 1 338 1 285 1 86 1 165 1 
0 2 183 1 233 2 236 2 75 1 189 1 220 4 59 1 285 2 266 1 61 2 118 2 89 1 33 1 246 1 64 1 221 2 171 1 172 1 292 2 224 2 310 1 330 1 202 1 48 1 311 1 149 3 250 1 150 1 176 1 294 1 67 1 95 1 205 1 363 1 152 1 315 2 338 2 274 1 
0 3 233 1 158 2 68 1 236 1 110 1 188 1 191 1 84 1 285 6 118 5 33 2 267 1 221 1 149 4 49 1 95 2 128 2 362 1 205 2 315 5 338 1 
183 1 158 1 233 1 33 1 168 2 236 1 221 1 34 1 172 1 187 1 226 1 111 1 358 1 149 1 333 1 179 1 338 1 285 2 296 1 32 1 
233 1 197 1 236 1 221 1 10 1 149 1 354 1 338 1 285 1 165 1 
0 4 118 2 158 1 33 1 149 2 312 2 95 1 128 1 205 1 315 2 285 2 165 2 
333 1 292 1 75 1 354 1 179 1 296 1 32 1 165 1 
233 1 286 1 236 1 221 1 75 1 292 2 161 1 149 1 79 1 176 1 67 1 294 1 152 1 338 1 285 1 274 1 182 1 
78 1 176 1 304 1 294 1 67 1 333 1 274 1 296 1 
0 1 233 1 236 1 221 1 149 1 152 1 315 1 354 1 338 1 285 1 165 1 182 1 
126 1 113 1 31 1 
69 1 126 1 113 1 269 1 216 1 
126 1 113 1 31 1 
126 1 113 1 31 1 
313 1 126 1 113 1 
313 1 126 1 113 1 
313 1 126 1 113 1 
126 1 113 1 
5 1 36 1 
158 3 1 1 185 1 258 7 215 2 111 2 302 2 263 4 190 8 195 3 196 4 33 3 34 1 146 2 122 2 226 2 358 2 124 1 66 17 336 9 339 1 
196 2 158 1 1 1 33 1 258 2 226 1 358 1 111 1 163 1 124 1 66 5 190 2 336 3 339 1 
196 1 158 1 33 1 120 1 146 1 258 2 122 1 215 1 302 1 66 4 128 1 95 1 190 2 263 2 205 1 336 2 195 1 
196 1 158 1 33 1 110 2 276 1 258 2 188 1 66 7 49 1 128 1 95 1 190 4 205 1 336 3 195 1 
158 5 1 1 185 1 276 1 110 2 258 7 215 1 188 2 111 2 302 1 46 1 190 12 263 2 195 2 196 5 33 5 34 1 198 1 146 1 122 1 226 2 358 2 124 1 66 25 128 2 95 2 205 2 336 13 339 1 
66 1 190 1 110 1 
66 1 336 1 188 1 
158 1 196 2 33 1 120 1 146 1 122 1 258 4 215 1 302 1 150 1 66 6 95 1 128 1 263 2 190 3 205 1 336 3 195 2 
24 1 158 2 68 1 110 1 258 2 215 1 188 1 302 1 190 6 263 2 191 1 84 1 195 1 196 1 33 2 267 1 146 1 122 1 66 12 49 1 95 2 128 2 362 1 205 2 336 6 
158 1 196 1 33 1 258 2 226 1 111 1 358 1 66 6 190 3 336 3 195 1 
196 1 185 1 146 1 258 2 122 1 215 1 226 1 358 1 302 1 124 1 66 3 30 1 190 2 263 2 336 1 339 1 195 1 
24 1 196 3 158 2 33 2 34 1 146 1 122 1 258 5 215 1 226 2 358 2 111 1 302 1 66 10 263 2 190 5 336 5 195 2 
24 1 33 1 146 1 122 1 258 1 215 1 302 1 66 2 263 2 205 1 336 2 195 1 
24 1 196 1 158 1 33 1 146 1 258 2 122 1 215 1 302 1 66 4 128 1 95 1 190 2 263 2 205 1 336 2 195 1 
24 1 196 1 185 1 146 3 122 3 258 2 215 3 226 1 358 1 261 1 302 3 66 3 30 1 190 2 263 6 336 1 195 1 
24 1 158 5 1 1 185 1 110 3 258 9 215 4 188 3 111 2 261 1 302 4 4 1 190 15 263 8 195 4 196 5 33 5 120 1 34 1 146 4 122 4 226 2 358 2 124 1 66 31 49 1 95 2 128 2 205 2 337 1 336 16 253 1 339 1 
24 1 158 3 1 1 110 1 258 5 215 1 188 1 111 2 302 1 190 7 263 2 195 1 196 4 33 3 267 1 34 1 146 1 122 1 226 2 358 2 124 1 66 15 49 1 336 8 339 1 
24 1 158 3 1 1 110 2 276 1 258 6 215 2 188 1 111 2 302 2 190 8 263 4 195 2 196 4 33 4 267 1 120 1 34 1 146 2 122 2 226 2 358 2 124 1 66 18 49 1 95 1 205 1 336 10 339 1 
24 1 68 1 158 5 1 1 185 1 110 1 258 7 215 3 188 1 111 2 302 3 190 13 263 6 191 1 84 1 195 2 196 5 33 5 120 1 267 1 34 1 146 3 122 3 226 2 358 2 124 1 66 26 49 1 95 2 128 2 362 1 205 2 336 13 339 1 
24 1 158 4 68 1 1 1 185 1 110 1 258 9 215 3 188 1 111 2 302 3 190 10 263 6 191 1 84 1 195 4 196 5 33 5 120 1 267 1 34 1 146 3 122 3 226 2 358 2 124 1 66 24 49 1 95 2 128 1 362 1 205 2 336 14 339 1 
24 1 158 3 1 1 110 1 258 5 215 1 188 1 111 2 302 1 190 7 263 2 195 1 196 4 33 3 267 1 34 1 146 1 122 1 226 2 358 2 124 1 66 15 49 1 336 8 339 1 
24 1 158 2 68 1 110 1 258 2 215 1 188 1 302 1 190 6 263 2 191 1 84 1 195 1 196 1 33 2 267 1 146 1 122 1 66 12 49 1 95 2 128 2 362 1 205 2 336 6 
24 1 68 1 158 4 1 1 185 2 110 1 258 7 215 4 188 1 111 2 302 4 190 11 263 8 191 1 84 1 195 2 196 5 33 5 267 1 120 1 34 1 146 4 122 4 226 2 358 2 124 1 66 25 49 1 95 2 128 1 362 1 205 2 336 14 339 1 
24 1 68 1 158 2 185 2 110 1 258 6 215 4 188 1 302 4 261 1 190 7 263 8 191 1 84 1 195 3 196 3 33 3 267 1 146 4 122 4 66 16 49 1 95 3 128 2 362 1 205 3 336 9 
158 1 196 3 33 1 258 6 226 3 358 3 111 1 124 2 66 7 190 4 336 3 339 1 195 3 
24 1 68 1 158 4 1 1 185 2 110 1 258 7 215 4 188 1 111 2 302 4 261 1 190 11 263 8 191 1 84 1 195 2 196 5 33 5 267 1 34 1 146 4 122 4 226 2 358 2 124 1 66 25 49 1 95 2 128 1 362 1 205 2 336 14 339 1 
166 1 262 1 129 1 39 1 309 1 102 1 293 1 
166 1 235 1 309 1 347 1 259 1 293 1 262 1 129 1 39 1 60 1 102 1 50 1 
142 1 163 1 176 1 294 1 67 1 212 1 220 1 202 1 330 1 274 1 61 1 
171 1 330 1 202 1 44 1 293 1 16 1 176 1 227 1 67 1 294 1 262 1 39 2 220 1 295 1 265 1 102 2 274 1 61 1 
171 2 73 1 200 1 65 1 330 2 202 1 44 2 293 2 16 1 176 1 227 1 138 1 294 1 262 1 130 1 39 2 220 3 295 1 355 1 265 1 102 2 274 1 61 1 
171 2 73 1 200 1 65 1 330 2 55 1 202 1 44 2 12 1 293 2 16 1 176 2 138 1 294 2 262 1 130 1 39 2 220 3 295 1 355 1 265 1 102 2 274 2 61 1 
183 2 189 1 138 1 220 4 59 1 354 1 355 1 61 1 165 1 171 1 172 2 292 1 224 1 200 1 202 1 330 1 12 1 176 3 294 3 67 1 178 1 207 1 274 3 
183 2 171 1 172 2 292 1 200 1 224 1 330 1 310 1 202 1 12 1 189 1 176 3 67 1 138 1 294 3 220 4 354 1 59 1 355 1 274 3 61 1 165 1 
176 1 294 1 108 1 202 1 274 1 61 1 
297 1 117 1 108 1 171 1 330 2 202 2 3 1 48 1 176 6 67 2 294 7 229 1 8 1 323 1 231 1 140 1 220 3 99 1 274 7 61 3 307 1 
1 1 44 1 80 1 244 2 190 6 323 1 283 2 195 1 196 4 143 1 146 2 201 1 202 1 330 1 293 1 16 1 294 1 335 1 295 1 336 7 102 2 339 1 158 3 258 5 215 2 27 1 111 2 302 2 304 1 262 3 263 4 220 1 265 1 61 1 33 3 34 1 171 1 122 2 65 1 226 2 358 2 227 1 176 1 124 1 66 13 39 2 274 1 133 1 
183 2 158 2 233 2 236 2 75 1 111 1 161 1 189 1 282 1 220 2 354 2 59 1 285 4 32 1 165 2 197 1 33 1 246 1 168 2 34 1 221 2 172 2 10 1 292 2 224 1 226 1 310 1 358 1 149 3 250 1 176 1 67 1 294 1 333 1 363 1 179 1 338 2 274 1 296 1 
176 2 294 2 171 1 108 1 323 1 220 2 59 1 202 1 330 1 274 2 61 2 48 1 311 1 
142 1 212 1 321 1 330 1 202 1 12 1 176 4 67 1 294 4 323 1 220 1 274 4 61 1 
171 1 330 1 202 1 28 1 112 1 57 1 176 2 138 1 294 2 229 1 8 1 220 1 274 2 61 2 
176 1 361 1 294 1 67 1 202 1 325 1 274 1 61 1 357 1 270 1 
297 1 176 2 127 1 294 2 323 1 220 1 202 1 330 1 274 2 61 1 3 1 
142 1 212 1 321 1 330 2 202 2 3 1 176 4 138 1 67 1 294 5 323 1 220 3 140 1 99 1 274 5 61 2 
142 1 212 1 321 1 330 2 202 2 29 1 3 1 176 4 138 1 67 1 294 5 323 1 220 3 140 1 274 5 61 2 
171 1 330 1 55 1 202 1 44 1 293 1 16 1 176 1 67 1 294 1 262 1 39 2 220 1 295 1 265 1 102 2 274 1 61 1 
117 1 171 1 330 1 202 1 48 1 176 1 138 1 294 1 229 1 8 1 220 1 274 1 61 2 
42 1 342 1 293 1 58 1 21 1 39 1 102 1 9 1 209 1 
58 1 51 1 277 1 
91 1 58 1 262 1 342 1 9 1 
183 2 88 1 51 1 342 2 73 1 172 2 65 1 239 1 277 1 189 1 91 2 58 1 262 1 130 1 115 1 282 1 354 1 9 2 165 1 
163 1 90 1 350 1 148 1 
332 1 137 1 90 1 334 1 350 1 351 1 148 1 
104 1 334 1 289 1 
90 1 173 1 148 1 137 1 332 3 251 1 18 1 334 3 350 1 351 1 22 1 101 2 
332 2 137 1 92 1 90 1 334 2 350 1 351 1 148 1 41 1 
332 1 137 1 361 1 90 1 18 1 252 1 334 1 351 1 254 1 325 1 232 1 
332 1 137 1 90 1 18 1 334 1 351 1 148 1 
332 1 137 1 18 1 334 1 350 1 351 1 148 2 
340 1 332 2 137 2 90 1 18 1 334 2 147 1 344 1 351 2 148 1 
90 2 320 1 148 1 137 1 332 3 92 2 18 1 218 1 334 3 252 1 350 1 351 1 192 1 
90 1 71 1 148 1 137 1 332 2 271 1 92 1 361 2 18 1 334 2 350 1 351 1 232 1 325 1 357 1 
90 2 72 1 148 1 137 2 332 4 92 2 18 1 218 1 334 4 252 1 350 1 351 2 41 1 
332 1 137 1 90 1 18 1 334 1 350 1 351 1 148 1 
90 3 173 1 148 2 332 4 137 1 92 2 6 1 218 1 334 4 252 1 350 2 351 1 22 1 101 1 
90 1 135 1 148 1 137 1 332 2 92 1 243 1 18 1 334 2 350 1 351 1 155 1 
90 1 173 1 148 1 137 1 332 3 203 1 18 1 334 3 350 1 351 1 22 2 101 2 
90 2 70 1 364 1 318 2 
332 1 137 1 18 1 334 1 351 1 316 1 
332 2 137 1 92 1 90 1 18 1 320 1 334 2 350 1 351 1 148 1 
114 1 
332 1 137 1 90 1 18 1 334 1 350 1 351 1 148 1 
332 3 137 1 92 1 90 1 18 1 320 1 334 3 350 1 351 1 101 1 148 1 
90 1 6 1 218 1 252 1 
90 1 148 1 

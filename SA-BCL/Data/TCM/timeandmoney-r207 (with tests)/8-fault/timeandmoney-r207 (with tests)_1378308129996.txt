#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 228 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 296 327 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 296 327 17 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 228 122 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 117 201 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 117 201 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 117 201 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 117 201 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 117 201 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 87 163 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 199 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 117 (153,310) (153,310) 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 117 (153,310) (153,310) 294 317 195 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 117 (153,310) (153,310) 294 317 195 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 117 (153,310) (153,310) 195 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 87 163 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 117 (153,310) (153,310) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 117 (153,310) (153,310) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 117 (153,310) (153,310) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 117 (153,310) (153,310) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 117 (153,310) (153,310) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 117 (153,310) (153,310) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 117 (153,310) (153,310) 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 117 (153,310) (153,310) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 199 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 117 (153,310) (153,310) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 117 (153,310) (153,310) 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 199 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 117 (153,310) (153,310) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
322 2 138 2 221 3 2 9 46 1 49 1 172 2 171 1 146 4 227 6 4 2 149 1 204 1 51 1 6 1 152 1 258 5 233 2 10 1 34 1 35 1 210 1 235 1 236 1 242 2 134 9 349 1 136 2 
322 2 138 2 221 3 2 9 46 1 49 1 171 1 172 2 146 4 227 6 4 2 149 1 204 1 51 1 6 1 152 1 258 5 233 2 10 1 34 1 35 1 210 1 235 1 236 1 242 2 134 9 349 1 136 2 
322 2 138 2 221 4 2 10 46 1 49 1 171 1 172 2 146 5 227 7 4 2 149 1 204 1 51 1 6 1 152 1 258 6 233 2 10 1 34 1 35 1 210 1 235 1 236 1 242 2 134 10 349 1 136 2 
322 2 138 2 221 2 2 7 46 1 49 1 171 1 172 1 146 3 227 4 4 2 204 1 51 1 6 1 152 1 258 4 233 2 10 1 34 1 35 1 210 1 235 1 236 1 242 2 134 7 349 1 136 2 
138 1 258 3 233 1 10 1 221 1 2 4 35 1 235 1 172 2 146 2 227 3 4 1 242 1 149 1 134 4 349 1 136 1 6 1 
336 1 322 1 258 1 233 1 10 1 2 2 34 1 222 1 46 1 242 1 4 1 134 2 14 1 349 1 136 1 6 1 
322 1 258 2 233 2 10 1 221 1 2 3 146 1 227 1 204 1 134 3 349 1 136 2 6 1 
322 1 138 1 258 5 233 2 10 1 221 3 2 9 43 1 35 1 210 1 235 1 236 1 172 2 146 4 332 1 227 7 4 1 242 1 149 1 204 1 134 9 349 1 136 2 6 1 
322 1 138 1 258 5 233 2 10 1 221 3 2 9 43 1 35 1 210 1 235 1 236 1 172 2 146 4 332 1 227 7 4 1 242 1 149 1 204 1 134 9 349 1 136 2 6 1 
199 1 333 1 41 1 
15 1 
78 2 0 2 1 2 103 1 209 2 18 1 44 2 30 2 
94 1 0 3 1 2 22 1 326 1 250 1 277 1 44 3 99 1 253 1 280 1 103 1 206 1 257 2 106 1 30 2 78 2 337 1 151 1 109 2 128 1 79 1 159 2 261 1 209 2 288 1 237 1 57 1 267 1 58 2 133 1 243 1 268 1 316 1 244 2 301 1 18 1 
78 1 126 1 0 1 1 1 64 1 103 1 209 1 44 1 36 1 30 1 
207 1 0 1 126 1 63 1 1 1 339 1 41 1 129 1 96 1 44 1 333 1 185 1 38 1 311 1 
78 1 0 1 126 1 63 1 339 2 1 1 41 1 129 1 209 1 96 2 44 1 333 1 185 1 38 1 30 1 
339 1 228 1 96 1 319 1 
107 1 110 1 339 2 333 1 41 1 101 1 96 2 319 1 
107 1 339 1 96 1 
78 1 126 1 0 1 339 1 1 1 64 1 96 1 209 1 44 1 36 1 84 1 103 1 319 1 30 1 
333 1 
107 1 110 1 339 2 333 1 41 1 67 1 96 2 319 1 
217 2 107 2 110 1 339 5 155 1 342 1 41 1 81 2 189 1 66 1 96 5 223 1 333 1 29 1 102 1 123 1 73 2 215 1 319 2 
94 1 337 1 78 1 151 1 0 2 1 1 79 1 208 1 159 1 44 2 99 1 288 1 237 1 239 1 226 1 58 1 316 1 280 1 257 1 30 1 
199 1 18 1 
78 1 0 2 1 2 209 1 44 2 348 1 18 2 320 1 30 1 
239 1 175 1 68 1 
94 1 337 1 0 1 151 1 79 1 159 1 44 1 288 1 99 1 237 1 58 1 280 1 316 1 92 1 18 1 257 1 
78 3 0 3 1 3 208 1 209 1 18 1 44 3 30 3 
78 1 126 1 0 1 1 1 44 1 36 1 30 1 
78 1 126 1 0 1 1 1 348 1 209 1 44 1 320 1 30 1 
94 1 0 4 63 1 1 3 326 1 277 1 96 1 44 4 99 1 253 1 226 1 185 1 280 1 103 1 206 1 257 1 106 1 30 3 337 1 78 3 151 1 126 1 109 2 339 1 79 1 158 1 208 1 129 1 159 1 261 1 209 2 288 1 237 1 267 1 58 1 243 1 268 1 38 1 316 1 348 1 244 1 114 1 301 1 18 1 
20 1 78 1 0 2 1 2 311 1 208 1 18 1 44 2 30 1 
78 3 126 1 0 3 63 1 339 1 1 3 208 2 129 1 209 1 96 1 44 3 26 1 226 1 333 1 185 1 38 1 348 1 114 1 30 3 
78 2 0 2 1 2 175 1 208 1 209 1 44 2 239 1 348 1 30 2 
337 1 94 1 0 1 151 1 79 1 159 1 44 1 288 1 99 1 237 1 58 1 280 1 316 1 18 1 257 1 
337 1 94 1 0 1 151 1 79 1 190 1 159 1 44 1 288 1 99 1 27 1 58 1 316 1 18 1 257 1 
140 1 169 1 249 1 326 1 170 1 277 2 68 2 329 1 206 1 106 1 109 2 175 2 261 1 289 1 239 2 132 1 133 2 243 1 244 4 166 1 178 1 301 1 196 1 19 1 
78 1 126 1 0 1 231 1 1 1 129 1 44 1 30 1 
20 1 78 4 0 5 1 5 208 2 209 1 130 1 44 5 226 1 295 1 348 1 311 1 18 1 30 4 
78 2 126 1 0 2 231 1 1 2 44 2 36 1 30 2 
104 1 302 1 
104 1 302 1 
260 1 298 1 
260 1 298 1 
260 1 298 1 
9 1 104 1 302 1 
56 1 104 1 302 1 
324 1 148 1 260 1 104 2 298 1 302 2 
9 1 104 1 302 1 
9 1 104 1 302 1 
119 1 104 1 302 1 
119 1 104 1 302 1 
119 1 104 1 302 1 
327 1 296 1 104 1 318 1 302 1 198 1 
339 1 327 1 296 1 104 1 96 1 318 1 17 1 302 1 198 1 
138 1 4 1 242 1 
4 1 242 1 14 1 
138 2 203 1 165 1 242 3 14 1 252 1 
331 1 138 1 203 1 165 1 242 2 14 1 
138 1 203 2 165 1 242 2 14 1 
21 2 217 1 303 1 248 1 41 1 170 1 307 1 66 2 96 5 329 1 330 1 308 2 202 2 223 3 333 2 73 1 205 1 186 1 107 1 154 1 110 1 339 5 155 1 81 1 262 1 83 1 289 1 193 1 15 3 245 1 196 1 319 4 
122 1 339 2 228 1 188 1 96 2 319 2 47 1 
21 2 303 1 217 1 41 1 307 1 170 1 66 2 96 3 329 1 330 1 308 1 223 3 202 2 333 3 73 1 123 1 205 1 339 3 81 1 262 1 83 2 289 1 245 1 15 4 196 1 319 2 
21 4 217 1 303 1 41 1 179 1 200 1 307 2 170 2 66 4 96 4 329 2 330 1 308 2 202 4 223 5 333 4 73 1 123 1 205 1 339 4 81 1 262 2 83 3 289 2 15 7 245 1 214 1 196 2 319 3 
94 1 199 1 45 1 
94 1 125 1 
247 1 
94 1 151 1 
94 3 151 1 276 1 3 1 45 2 99 1 
94 1 151 1 99 1 
94 1 335 1 
117 1 133 1 244 1 256 1 201 1 
117 1 133 1 244 1 256 1 201 1 
117 1 133 1 269 1 244 1 256 1 201 1 
117 1 133 1 244 1 256 1 201 1 
117 1 133 1 244 1 256 1 201 1 
168 1 322 1 323 1 138 1 306 1 2 2 252 1 70 1 227 1 254 1 4 1 72 1 6 1 257 1 337 1 258 1 156 1 233 1 10 1 159 1 112 1 288 1 346 1 58 1 242 2 134 2 14 1 349 1 136 1 291 1 
168 1 322 1 323 1 138 1 305 1 306 1 2 3 252 1 70 1 227 2 4 1 100 1 72 1 6 1 257 1 337 1 258 1 284 1 156 1 233 1 159 1 112 1 288 1 58 1 242 2 134 3 14 1 349 1 136 1 291 1 
322 1 168 1 323 1 138 1 305 1 306 1 2 2 252 1 70 1 227 2 72 1 4 1 6 1 257 1 337 1 258 1 284 1 159 1 112 1 288 1 58 1 242 2 134 2 14 1 349 1 
94 1 168 2 322 2 118 1 218 1 306 2 219 1 2 1 99 1 70 2 224 1 225 1 28 1 100 1 124 1 257 1 337 1 151 1 79 1 233 1 159 1 161 1 288 2 86 1 58 1 59 1 134 1 213 1 136 1 
168 1 322 1 323 1 138 1 306 1 2 1 252 1 70 1 254 1 4 1 72 1 257 1 337 1 284 1 156 1 233 1 10 1 159 1 112 1 288 1 58 1 242 2 134 1 14 1 136 1 291 1 
52 1 
107 1 217 1 339 1 155 1 79 1 81 1 159 1 96 1 330 1 87 1 223 1 163 1 58 1 73 1 257 1 
0 1 63 1 1 1 96 3 67 1 44 1 121 1 182 1 185 1 311 1 150 1 207 1 126 1 107 2 110 1 339 3 157 1 297 2 129 1 82 1 38 1 116 1 
0 1 63 1 1 1 271 1 41 1 96 3 67 1 44 1 121 1 182 1 333 1 185 1 311 1 207 1 126 1 107 1 339 3 110 1 157 1 297 3 129 1 82 1 38 1 116 1 
0 1 63 1 1 1 271 1 41 1 67 1 96 3 44 1 121 1 182 1 333 1 185 1 311 1 150 1 77 1 207 1 126 1 107 2 110 1 339 3 157 1 297 3 129 1 82 1 38 1 116 1 
0 1 217 1 1 1 271 4 41 5 180 1 95 2 96 5 98 1 44 1 182 1 48 1 223 1 185 1 150 4 311 1 107 7 110 3 155 1 157 1 164 1 290 2 116 1 63 1 23 2 66 1 67 1 121 1 333 5 73 1 255 1 77 4 126 1 207 1 339 5 127 1 340 2 297 6 81 1 129 1 82 1 83 2 211 1 38 1 
0 1 217 1 1 1 271 2 41 1 180 1 95 2 96 4 44 1 182 1 48 1 223 1 185 1 311 1 150 2 107 4 110 2 155 1 157 1 290 2 15 2 116 1 63 1 23 2 66 1 121 1 333 1 73 1 174 1 77 2 126 1 207 1 339 4 340 2 297 4 81 1 129 1 82 1 83 2 38 1 
0 1 63 1 217 1 271 2 1 1 41 1 95 2 180 1 23 2 66 1 96 4 44 1 121 1 48 1 182 1 223 1 333 1 185 1 73 1 150 2 311 1 77 2 207 1 126 1 107 4 110 2 339 4 127 1 340 2 155 1 157 1 297 4 81 1 129 1 82 1 83 2 211 1 164 1 38 1 290 2 116 1 
0 1 63 1 217 1 271 2 1 1 41 1 95 2 180 1 23 2 66 1 96 4 44 1 121 1 48 1 182 1 223 1 333 1 185 1 73 1 150 2 311 1 77 2 207 1 126 1 107 4 110 2 339 4 127 1 340 2 155 1 157 1 297 4 81 1 129 1 82 1 83 2 211 1 164 1 38 1 290 2 116 1 
0 1 63 1 217 1 271 2 1 1 272 2 41 1 23 2 66 1 96 4 44 1 121 1 181 1 48 1 182 1 223 1 333 1 185 1 73 1 229 1 150 2 311 1 77 2 207 1 126 1 107 4 53 2 110 2 339 4 340 2 155 1 157 1 297 4 81 1 129 1 82 1 211 1 38 1 135 1 15 2 116 1 
0 1 217 1 63 1 1 1 271 3 41 1 95 2 180 1 23 2 66 1 96 4 98 1 44 1 121 1 48 1 182 1 223 1 333 1 185 1 73 1 311 1 150 3 77 3 207 1 126 1 107 5 110 2 127 1 339 4 340 2 155 1 157 1 297 5 81 1 129 1 82 1 83 2 211 1 164 1 38 1 290 2 116 1 
0 1 217 1 63 1 1 1 271 3 41 1 95 2 180 1 23 2 66 1 96 4 98 1 44 1 121 1 48 1 182 1 223 1 333 1 185 1 73 1 311 1 150 3 77 3 207 1 126 1 107 5 110 2 127 1 339 4 340 2 155 1 157 1 297 5 81 1 129 1 82 1 83 2 211 1 164 1 38 1 290 2 116 1 
0 1 217 1 63 1 1 1 272 1 23 1 66 1 96 2 44 1 121 1 48 1 182 1 223 1 185 1 73 1 311 1 174 1 207 1 126 1 339 2 340 1 155 1 157 1 297 2 81 1 129 1 82 1 38 1 135 1 15 1 116 1 
117 1 199 1 140 1 169 1 326 1 277 2 310 1 206 1 106 1 8 1 153 1 109 2 261 1 132 1 289 1 243 1 315 1 133 3 244 5 301 1 197 1 196 1 18 1 
140 1 139 1 141 1 326 2 307 2 170 2 277 6 68 11 143 3 329 1 253 1 230 1 206 2 106 2 232 1 109 4 54 1 175 4 261 2 264 1 132 2 239 11 289 1 57 1 240 1 243 1 133 8 244 14 194 3 61 1 301 2 18 1 196 2 
94 1 0 2 1 1 326 1 277 1 44 2 99 1 145 1 253 1 279 1 226 1 280 1 257 1 206 1 106 1 30 1 337 1 78 1 151 1 232 1 109 2 79 1 175 1 159 1 208 1 261 1 288 1 237 1 13 1 57 1 58 1 243 1 133 1 316 1 244 2 92 1 301 1 18 1 
94 2 0 3 140 3 1 1 304 2 307 2 277 9 44 3 99 2 226 1 309 2 280 2 310 1 106 3 8 1 151 2 232 1 153 1 109 6 159 1 286 2 288 2 237 2 239 6 289 3 57 1 58 1 315 1 243 3 316 2 244 19 18 1 197 1 196 3 117 1 326 3 170 2 68 6 329 2 253 1 257 1 206 3 30 1 78 1 337 2 79 1 175 6 208 1 261 3 263 1 85 1 132 3 266 2 268 2 133 10 301 3 
94 1 118 1 218 1 326 1 277 1 99 1 253 1 257 2 206 1 106 1 337 1 151 1 338 1 109 2 79 1 128 1 159 2 261 1 161 1 288 2 86 1 57 1 58 2 347 1 59 1 243 1 133 1 244 2 301 1 
0 1 140 1 1 1 326 1 307 1 170 1 277 2 68 1 44 1 329 1 206 1 30 1 106 1 78 1 232 1 109 2 175 1 11 1 209 1 261 1 132 1 239 1 289 1 243 1 133 1 348 1 244 3 301 1 196 1 
109 2 169 1 54 1 326 1 170 1 175 1 68 1 261 1 132 1 239 1 243 1 133 2 244 2 301 1 196 1 206 1 106 1 19 1 
140 1 109 2 169 1 249 1 326 1 175 1 277 2 68 1 261 1 329 1 132 1 239 1 289 1 243 1 244 2 301 1 206 1 106 1 
140 1 169 1 170 1 307 1 326 1 277 2 68 2 329 1 206 1 106 1 109 2 54 1 175 2 261 1 239 2 132 2 289 1 133 2 243 1 244 4 301 1 196 1 
109 2 54 1 326 1 170 1 175 1 68 1 261 1 132 1 239 1 347 1 243 1 133 2 244 2 301 1 196 1 206 1 106 1 19 1 
140 1 109 2 249 1 326 1 175 1 277 2 68 1 261 1 329 1 132 1 239 1 289 1 347 1 243 1 244 2 301 1 206 1 106 1 
140 1 170 1 307 1 326 1 277 2 68 2 329 1 206 1 106 1 109 2 54 1 175 2 261 1 239 2 132 2 289 1 347 1 133 2 243 1 244 4 301 1 196 1 
140 1 170 1 307 1 326 1 277 2 68 2 329 1 206 1 106 1 109 2 54 1 175 2 261 1 239 2 132 2 289 1 133 2 243 1 244 4 301 1 196 1 
94 1 0 1 326 1 277 1 44 1 99 1 253 1 280 1 257 1 206 1 106 1 337 1 151 1 109 2 79 1 159 1 261 1 288 1 237 1 57 1 58 1 133 1 268 1 243 1 316 1 244 2 301 1 18 1 
94 1 0 1 326 1 277 1 328 1 44 1 99 1 253 1 27 1 257 1 206 1 106 1 337 1 151 1 109 2 79 1 190 1 159 1 261 1 288 1 57 1 58 1 133 1 243 1 316 1 244 2 301 1 18 1 
140 1 170 1 307 1 326 1 277 2 68 2 329 1 206 1 106 1 232 1 109 2 54 1 175 2 261 1 239 2 132 2 289 1 133 2 243 1 244 4 301 1 196 1 
94 1 0 1 140 1 304 1 170 1 326 1 307 1 277 2 68 2 44 1 329 1 99 1 280 1 257 1 206 1 106 1 337 1 151 1 109 2 54 1 175 2 159 1 261 1 288 1 237 1 346 1 289 1 132 2 239 2 58 1 133 2 268 1 243 1 316 1 244 4 301 1 196 1 
0 1 137 1 1 1 326 1 307 1 170 1 277 1 68 1 44 1 329 1 206 1 30 1 106 1 78 1 232 1 109 2 54 1 175 1 209 1 261 1 289 1 132 1 239 1 243 1 133 2 348 1 244 3 301 1 196 1 
140 3 141 3 39 1 307 4 273 1 277 21 143 3 310 1 282 1 106 3 8 1 109 6 153 1 54 4 12 4 289 5 314 1 315 1 241 1 317 1 244 41 61 1 194 4 195 1 196 5 197 1 246 1 117 1 170 4 326 3 292 2 329 4 25 1 294 1 71 1 206 3 31 1 32 1 131 1 132 7 89 1 133 20 301 3 
117 1 140 4 141 3 39 1 326 4 307 4 170 4 273 1 277 18 292 2 143 3 25 1 329 3 294 1 71 1 310 1 282 1 206 4 31 2 106 4 8 1 153 1 109 8 32 1 54 3 12 4 131 1 132 7 289 4 89 1 314 1 241 1 315 1 133 20 317 1 244 38 194 4 61 1 195 1 301 4 197 1 196 5 246 1 
117 1 140 1 141 1 326 1 277 4 292 1 143 1 310 1 206 1 106 1 8 1 109 2 153 1 12 1 289 1 132 1 314 1 133 5 315 1 317 1 244 9 194 1 195 1 301 1 196 1 197 1 246 1 
140 3 141 1 326 2 307 3 170 3 277 10 292 1 143 1 329 3 71 1 206 2 105 1 106 2 109 4 54 3 12 2 132 6 289 3 89 1 314 1 241 2 133 9 317 1 244 19 194 2 61 1 195 1 301 2 196 3 246 1 
140 2 141 2 326 3 307 3 170 3 273 1 277 12 292 2 143 2 25 1 329 2 294 1 71 1 282 1 206 3 31 2 106 3 109 6 32 1 54 2 12 4 131 1 132 4 289 2 314 1 241 1 133 14 317 2 244 26 194 2 195 1 301 3 196 3 246 1 
94 1 0 2 1 2 326 1 277 1 44 2 253 1 206 1 257 2 106 1 337 1 151 1 232 1 338 1 109 2 128 2 159 2 191 1 261 1 265 1 162 1 288 1 57 1 58 2 90 1 243 1 133 1 244 2 177 1 301 1 321 1 
337 1 323 1 138 1 284 1 156 1 159 2 252 1 288 1 70 1 346 1 58 2 4 1 242 2 72 1 14 1 281 1 75 1 93 1 257 2 
337 1 323 1 138 1 284 1 156 1 159 1 252 1 288 1 70 1 58 1 4 1 242 2 147 1 72 1 14 1 93 1 257 1 
337 1 94 1 151 1 118 1 218 1 79 1 159 1 161 1 288 2 99 1 86 1 70 1 299 1 58 1 59 1 124 1 281 1 213 1 257 1 
337 1 323 1 138 1 284 1 156 1 159 1 252 1 288 1 70 1 58 1 4 1 242 2 72 1 14 1 281 1 75 1 93 1 257 1 
33 1 
223 1 199 1 333 1 41 1 102 1 66 1 215 1 
217 1 41 1 180 1 95 1 66 1 96 1 223 1 333 1 73 1 107 1 110 1 339 1 155 1 81 1 83 1 290 1 15 1 
21 2 94 4 63 1 270 1 217 2 170 1 307 1 66 3 96 2 3 1 45 1 99 1 330 1 202 2 223 2 309 1 73 2 125 2 257 1 337 1 151 1 107 2 110 1 339 2 341 1 155 2 79 1 343 1 81 2 159 1 234 1 288 2 111 1 58 1 60 1 15 2 62 1 196 1 
21 5 217 1 141 1 307 2 170 2 273 1 66 4 143 1 329 2 25 1 202 5 223 6 73 1 282 1 155 1 32 1 81 1 131 1 289 2 15 3 194 1 196 2 
0 1 217 1 1 1 64 1 65 1 66 2 97 2 96 1 44 1 223 2 73 1 103 1 30 1 8 1 78 1 126 1 127 1 339 1 155 1 81 1 209 1 36 1 84 1 289 1 315 1 91 1 197 1 196 2 
217 1 155 1 41 1 81 1 66 1 223 1 333 1 73 1 102 1 215 1 
21 2 307 1 170 1 66 2 83 2 329 1 202 2 289 1 223 2 333 2 15 4 196 1 
107 1 339 1 110 1 333 1 41 1 96 1 
216 1 107 1 217 1 155 1 79 1 81 1 159 1 330 1 87 1 223 1 163 1 58 1 73 1 257 1 
94 1 0 3 1 2 326 1 277 1 44 3 99 1 253 1 280 1 103 1 206 1 257 1 30 2 106 1 78 2 337 1 151 1 109 2 79 1 159 1 209 2 261 1 288 1 237 1 267 1 58 1 268 1 243 1 316 1 244 1 301 1 18 1 
21 1 217 1 155 1 41 1 80 1 81 1 66 1 330 1 223 1 333 1 73 1 15 1 
296 1 318 1 
296 1 318 1 
296 1 318 1 
296 1 318 1 
296 1 318 1 
296 1 318 1 
296 1 318 1 
296 1 318 1 
104 1 302 1 
117 1 140 1 141 1 326 1 277 3 143 1 310 1 206 1 106 1 8 1 109 2 153 1 131 1 289 1 132 1 314 1 133 4 315 1 244 7 194 1 301 1 196 1 197 1 
117 1 140 1 141 1 40 1 326 2 307 1 170 1 277 4 143 1 310 1 206 2 106 2 8 1 153 1 109 4 54 1 131 1 289 1 132 2 314 1 315 1 133 6 244 10 194 2 61 1 301 2 197 1 196 2 
117 1 140 2 141 1 40 1 326 3 307 2 170 2 273 1 277 9 143 1 329 2 25 1 310 1 282 1 206 3 106 3 31 1 8 1 153 1 109 6 32 1 54 1 131 1 289 3 132 3 314 1 315 1 133 9 244 18 194 1 301 3 197 1 196 3 
117 1 140 2 141 1 40 1 326 3 307 2 170 2 273 1 277 6 143 1 329 1 25 1 310 1 282 1 206 3 31 1 106 3 8 1 153 1 109 6 32 1 54 2 131 1 289 2 132 4 314 1 315 1 133 10 244 16 194 1 301 3 197 1 196 3 
117 1 140 1 141 1 326 1 277 3 143 1 310 1 206 1 106 1 8 1 109 2 153 1 131 1 289 1 132 1 314 1 133 4 315 1 244 7 194 1 301 1 196 1 197 1 
140 1 141 1 326 1 307 2 170 2 273 1 277 6 143 1 329 2 25 1 282 1 206 1 106 1 109 2 32 1 54 1 131 1 289 2 132 2 314 1 133 6 244 12 194 1 301 1 196 2 
117 1 140 2 141 1 40 1 326 4 307 2 170 2 273 1 277 7 143 1 25 1 329 1 310 1 282 1 206 4 106 4 31 2 8 1 153 1 109 8 32 1 54 1 131 1 289 2 132 3 314 1 315 1 133 10 244 17 194 1 301 4 197 1 196 3 
140 3 141 1 326 4 307 3 170 3 273 1 277 7 143 1 25 1 329 2 282 1 206 4 106 4 31 2 109 8 32 1 54 3 131 1 289 2 132 6 89 1 314 1 133 9 244 16 194 1 301 4 196 3 
8 3 140 3 153 2 54 3 277 4 289 1 132 6 315 1 133 3 244 7 310 1 197 3 196 1 
117 1 140 2 141 1 326 4 307 2 170 2 273 1 277 7 143 1 25 1 329 1 310 1 282 1 206 4 106 4 31 2 8 1 153 1 109 8 32 1 54 1 131 1 289 2 132 3 89 1 314 1 315 1 133 10 244 17 194 1 301 4 197 1 196 3 
8 1 117 1 140 1 109 4 153 1 54 1 326 2 277 3 289 1 132 2 315 1 133 4 244 7 310 1 301 2 196 1 197 1 206 2 106 2 31 1 
8 1 117 1 199 1 140 1 153 1 277 2 132 1 289 1 315 1 133 3 310 1 244 5 197 1 196 1 
140 1 109 2 40 1 326 1 307 1 170 1 54 1 277 2 329 1 289 1 132 2 133 2 244 4 301 1 196 1 206 1 106 1 
140 1 141 1 307 1 170 1 54 1 277 4 143 1 329 1 289 1 132 2 133 3 244 7 194 2 61 1 196 1 
117 1 139 1 140 2 170 2 307 2 326 1 277 8 143 2 329 2 310 1 230 1 206 1 31 1 106 1 8 1 153 1 109 2 54 1 289 3 132 3 315 1 133 9 244 17 61 1 194 2 301 1 197 1 196 3 
244 1 277 1 194 1 
133 1 244 1 143 1 
140 2 109 2 40 1 326 1 307 1 170 1 54 1 277 3 329 1 132 3 289 1 309 1 133 3 244 6 301 1 196 1 206 1 106 1 
140 1 141 1 326 1 307 2 170 2 273 1 277 6 143 1 329 2 25 1 282 1 206 1 106 1 109 2 32 1 54 1 131 1 289 2 132 2 314 1 133 6 244 12 194 1 301 1 196 2 
8 1 140 1 54 1 277 3 289 1 132 2 315 1 133 3 244 6 196 1 197 1 
8 1 140 1 153 1 109 2 54 1 326 1 160 1 277 2 132 2 133 1 244 3 310 1 301 1 197 1 206 1 31 1 106 1 
8 2 140 3 109 2 326 1 54 2 277 5 132 5 289 2 314 1 133 5 315 1 244 10 91 1 301 1 197 2 196 2 206 1 106 1 
109 2 326 1 170 1 54 1 132 1 314 1 133 2 244 2 301 1 196 1 206 1 106 1 
140 1 109 2 326 1 307 1 170 1 54 1 277 2 329 1 289 1 132 2 314 1 133 2 244 4 301 1 196 1 206 1 106 1 
8 1 140 1 109 6 326 3 54 1 160 1 277 2 132 2 89 1 314 1 133 1 244 3 301 3 197 1 206 3 31 1 106 3 
117 1 140 2 141 1 40 1 326 4 307 2 170 2 277 10 143 3 329 2 310 1 334 1 206 4 31 1 106 4 8 1 312 1 153 1 109 8 54 2 132 4 289 3 238 1 89 1 314 1 315 1 133 11 244 21 194 3 301 4 197 1 196 3 
20 1 0 1 1 1 311 1 69 1 18 1 44 1 
20 1 0 1 108 1 1 1 259 1 251 1 192 1 69 1 44 1 183 1 311 1 18 1 
118 1 199 1 58 1 79 1 159 1 257 1 
94 1 78 1 337 1 151 1 0 2 1 1 79 1 208 1 159 1 44 2 99 1 288 1 237 1 58 1 316 1 18 1 257 1 30 1 
94 3 78 2 337 1 126 1 151 2 0 2 1 2 220 1 285 1 129 1 208 1 159 1 44 2 99 2 288 1 237 1 58 1 38 1 316 1 335 1 18 1 257 1 30 1 
94 3 0 2 1 2 220 1 44 2 99 2 335 1 257 2 30 1 337 1 78 2 151 2 126 1 190 1 285 1 159 2 208 1 129 1 288 1 58 2 38 1 316 1 16 1 18 1 
94 4 0 1 63 1 1 1 64 1 142 1 41 1 220 1 96 2 44 1 45 1 99 1 333 1 103 1 125 1 335 1 5 1 257 2 30 1 78 1 337 1 126 1 151 1 107 1 339 2 79 1 285 1 159 2 209 1 36 1 84 1 288 1 58 2 
94 4 337 1 151 1 63 1 270 1 107 1 339 2 79 1 41 1 220 1 285 1 159 3 96 2 45 1 99 1 288 1 58 3 333 1 125 1 16 1 335 1 257 3 
337 1 58 1 274 1 159 1 257 1 288 1 
94 3 337 2 151 2 284 1 218 1 128 1 79 2 274 1 275 1 159 7 24 1 3 1 144 1 99 1 288 3 86 1 346 1 58 7 176 1 257 6 321 1 
94 1 117 1 0 2 140 1 1 1 304 1 326 2 277 2 44 2 99 1 280 1 310 1 206 2 257 1 106 2 30 1 8 1 337 1 78 1 151 1 232 1 153 1 109 4 208 1 159 1 261 2 286 1 265 1 288 1 237 1 346 1 289 1 132 1 58 1 133 3 315 1 243 2 268 1 316 1 244 5 301 2 18 1 196 1 197 1 
94 2 216 1 217 2 270 1 63 1 41 1 66 1 96 3 45 1 223 1 333 1 102 1 73 2 125 1 257 1 107 2 339 3 110 1 155 2 79 1 343 1 81 2 159 1 234 1 111 1 58 1 215 1 319 1 
94 2 337 1 151 1 274 1 159 2 3 1 45 1 99 1 288 2 346 1 58 2 60 1 257 2 
337 1 94 1 151 1 118 1 218 1 79 1 159 2 161 1 288 2 99 1 86 1 346 1 58 2 59 1 257 2 
94 1 337 1 151 1 218 1 285 1 159 2 344 1 161 1 99 1 288 2 86 1 58 2 59 1 257 2 
337 1 58 1 79 1 4 1 242 1 72 1 14 1 159 1 257 1 288 1 
337 1 94 1 151 1 346 1 284 1 58 2 90 1 159 2 257 2 288 1 321 1 
94 3 337 2 118 1 151 2 218 1 79 1 275 1 159 3 161 1 144 1 99 1 288 3 86 1 346 1 58 3 59 1 257 2 321 1 
94 3 337 2 118 1 151 2 218 1 79 1 325 1 275 1 159 3 161 1 99 1 288 3 86 1 346 1 58 3 59 1 257 2 321 1 
94 1 78 1 337 1 151 1 0 2 1 1 79 1 190 1 208 1 159 1 44 2 99 1 288 1 58 1 316 1 18 1 257 1 30 1 
94 1 337 1 151 1 218 1 285 1 159 1 3 1 99 1 288 2 86 1 58 1 176 1 257 1 
0 1 1 1 191 1 44 1 287 1 162 1 345 1 113 1 177 1 
37 1 76 1 287 1 
345 1 113 1 283 1 18 1 287 1 
126 1 63 1 339 2 41 1 129 1 96 2 287 1 37 1 345 2 333 1 113 2 38 1 184 1 185 1 114 1 283 2 18 1 76 1 319 1 
199 1 258 1 349 1 6 1 
258 1 233 1 134 1 349 1 2 1 136 1 6 1 
322 1 168 1 2 1 
258 1 233 1 10 1 2 3 120 1 46 2 134 3 74 1 167 1 349 1 136 1 6 1 
172 1 258 1 227 1 233 1 134 2 349 1 2 2 136 1 6 1 
138 1 258 1 233 1 10 1 2 1 235 1 146 1 242 1 4 1 134 1 136 1 
258 1 233 1 10 1 134 1 349 1 2 1 136 1 
233 1 10 1 134 1 349 2 2 1 136 1 6 1 
258 1 233 2 10 1 42 1 2 2 278 1 134 2 349 1 173 1 136 2 
258 2 233 1 10 1 221 1 2 3 210 1 236 1 146 1 227 2 134 3 349 1 136 1 6 1 
138 1 258 1 233 1 10 1 2 2 252 1 227 1 242 2 212 1 4 1 14 1 134 2 349 1 136 1 6 1 
258 2 233 2 10 1 221 1 2 4 172 1 146 1 227 2 149 1 134 4 349 1 136 2 6 1 
258 1 233 1 10 1 134 1 349 1 2 1 136 1 6 1 
258 3 233 1 221 1 120 1 2 4 293 1 46 1 146 1 227 2 74 1 134 4 349 2 136 1 6 2 
258 1 233 1 10 1 2 2 43 1 313 1 227 1 50 1 134 2 349 1 136 1 6 1 
258 1 233 1 10 1 120 1 2 3 46 2 134 3 74 2 349 1 136 1 6 1 7 1 
258 2 187 2 115 1 55 1 
88 1 233 1 10 1 134 1 2 1 136 1 
258 1 227 1 233 1 10 1 134 2 349 1 2 2 136 1 6 1 210 1 
300 1 
258 1 233 1 10 1 134 1 349 1 2 1 136 1 6 1 
258 1 233 1 10 1 2 3 46 1 210 1 227 1 134 3 349 1 136 1 6 1 
146 1 258 1 221 1 293 1 
258 1 349 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 75 341 239 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 32 240 338 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 32 240 338 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 32 240 338 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 32 240 338 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 32 240 338 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 345 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 4694 | = null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1007 | = null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
313 2 67 2 21 2 162 1 273 1 188 2 23 5 318 1 72 1 298 9 225 2 139 1 94 3 365 9 283 1 201 6 9 1 8 2 100 1 177 2 81 1 61 1 238 1 153 1 261 1 84 4 39 1 102 1 
313 2 67 2 21 2 162 1 273 1 188 2 23 5 318 1 72 1 298 9 139 1 94 3 225 2 365 9 283 1 201 6 8 2 9 1 100 1 177 2 81 1 61 1 238 1 153 1 261 1 84 4 39 1 102 1 
313 2 67 2 21 2 162 1 273 1 188 2 23 6 318 1 72 1 298 10 139 1 94 4 225 2 365 10 283 1 201 7 8 2 9 1 100 1 177 2 81 1 61 1 238 1 153 1 261 1 84 5 39 1 102 1 
313 2 67 2 21 2 162 1 273 1 188 2 23 4 318 1 72 1 298 7 139 1 94 2 225 1 365 7 283 1 201 4 8 2 9 1 100 1 177 2 81 1 61 1 238 1 153 1 261 1 84 3 39 1 
313 1 201 3 21 1 67 1 100 1 8 1 188 1 23 3 318 1 81 1 298 4 238 1 261 1 94 1 225 2 84 2 102 1 365 4 
313 1 287 1 67 1 21 1 162 1 23 1 248 1 177 1 188 1 318 1 180 1 81 1 298 2 261 1 39 1 365 2 
283 1 313 2 201 1 67 2 177 1 23 2 318 1 81 1 298 3 261 1 94 1 84 1 365 3 
283 1 313 2 201 7 21 1 67 2 8 1 100 1 273 1 188 1 23 5 177 1 347 1 318 1 72 1 81 1 298 9 238 1 261 1 225 2 320 1 94 3 84 4 102 1 365 9 
283 1 313 2 201 7 21 1 67 2 8 1 100 1 273 1 188 1 23 5 177 1 347 1 318 1 72 1 81 1 298 9 238 1 261 1 225 2 320 1 94 3 84 4 102 1 365 9 
172 1 140 1 322 1 
257 2 52 1 322 1 
47 2 19 1 91 2 82 2 222 2 154 1 22 2 109 2 
104 1 213 1 106 1 294 1 19 1 312 1 66 1 244 1 0 1 218 2 108 1 22 2 109 2 48 1 47 3 192 1 193 2 112 2 91 3 222 2 92 1 336 1 74 1 165 2 167 2 114 1 168 1 77 1 305 1 346 1 231 1 324 1 256 1 82 2 154 1 353 1 265 1 
130 1 22 1 109 1 47 1 222 1 82 1 91 1 113 1 154 1 155 1 
354 1 42 1 322 1 80 1 47 1 205 1 352 1 319 1 82 1 91 1 326 1 155 1 140 1 38 1 
354 2 42 2 130 1 272 1 22 2 109 2 47 2 319 1 91 2 222 2 113 1 140 1 322 1 80 1 205 1 82 2 154 1 155 2 38 1 
354 1 42 1 277 1 10 1 29 1 
354 2 42 2 296 1 277 1 176 1 140 1 322 1 29 1 
354 1 42 1 277 1 
354 1 42 1 130 1 272 1 22 1 109 1 47 1 222 1 82 1 91 1 113 1 154 1 155 1 29 1 
322 1 
354 2 13 1 42 2 277 1 176 1 140 1 322 1 29 1 
354 3 75 1 341 1 303 1 42 3 43 1 297 1 99 1 239 1 29 2 
213 1 106 1 0 1 187 1 22 1 231 1 324 1 47 2 193 1 256 1 112 1 221 1 222 1 82 1 91 2 74 1 375 1 165 1 114 1 353 1 
172 1 19 1 
19 1 7 1 97 1 22 1 109 1 47 2 82 2 91 2 222 1 195 1 155 1 
204 1 286 1 187 1 
213 1 106 1 19 1 0 1 231 1 324 1 47 1 193 1 112 1 256 1 91 1 208 1 74 1 165 1 353 1 114 1 
19 1 7 1 22 2 47 2 222 2 82 2 91 2 221 1 155 1 
47 1 130 1 91 1 82 1 222 1 155 1 22 1 
97 1 22 1 109 1 47 1 222 1 82 1 91 1 195 1 155 1 
104 1 213 1 354 1 106 1 294 1 42 1 19 1 312 1 66 1 0 1 218 1 22 3 109 2 48 1 47 4 193 1 319 1 112 1 91 4 222 3 221 1 92 1 336 1 74 1 223 1 165 1 167 2 114 1 77 1 97 1 346 1 231 1 80 1 324 1 205 1 256 1 82 3 375 1 154 1 353 1 327 1 155 1 38 1 265 1 
19 1 7 1 22 1 252 1 47 2 221 1 222 1 82 2 91 2 155 1 326 1 
354 1 42 1 97 1 22 3 109 1 322 1 80 1 47 3 205 1 319 1 221 2 222 3 82 3 91 3 37 1 375 1 223 1 155 1 38 1 
97 1 286 1 187 1 22 2 109 1 47 2 221 1 222 2 82 2 91 2 
213 1 106 1 19 1 0 1 231 1 324 1 47 1 193 1 112 1 256 1 91 1 74 1 165 1 353 1 114 1 
213 1 106 1 19 1 0 1 247 1 291 1 231 1 47 1 193 1 112 1 256 1 91 1 165 1 353 1 114 1 
104 1 311 1 294 1 312 1 270 1 218 4 187 2 275 1 192 2 138 1 336 1 167 2 141 1 77 1 286 2 346 1 56 1 121 1 204 2 36 1 235 1 123 1 127 1 265 2 
22 1 47 1 249 1 319 1 222 1 82 1 91 1 155 1 
19 1 7 1 97 1 289 1 22 4 252 1 109 1 363 1 47 5 221 2 222 4 82 5 91 5 375 1 326 1 155 1 
47 1 130 1 91 1 82 1 222 1 155 1 22 1 
232 1 236 1 
232 1 236 1 
358 1 147 1 
358 1 147 1 
358 1 147 1 
232 1 236 1 44 1 
232 1 236 1 68 1 
232 2 267 1 236 2 245 1 358 1 147 1 
232 1 236 1 44 1 
232 1 236 1 44 1 
232 1 236 1 237 1 
232 1 236 1 237 1 
232 1 236 1 237 1 
354 2 267 1 241 2 42 2 186 1 357 2 330 1 217 1 251 2 322 1 24 1 111 3 232 2 45 1 293 1 236 2 258 2 309 2 15 1 
354 1 241 1 42 1 19 1 184 1 131 1 357 1 330 1 22 2 68 1 111 1 47 2 90 1 222 2 91 2 169 1 280 1 118 1 251 1 292 1 232 1 236 1 82 2 309 1 
21 1 8 1 188 1 
287 1 21 1 188 1 
34 1 287 1 21 3 8 2 344 1 190 1 
34 1 234 1 287 1 21 2 8 1 190 1 
34 1 287 1 21 2 8 1 190 2 
354 5 266 1 16 2 42 5 184 1 131 1 43 1 356 1 69 3 335 1 277 1 140 1 169 1 141 1 29 4 303 1 284 1 145 2 368 1 175 1 99 1 52 1 176 1 322 2 56 1 371 1 36 1 257 3 60 2 123 1 125 1 262 2 
42 6 130 1 43 1 47 1 91 1 140 1 141 1 303 1 99 1 52 1 10 3 56 1 257 3 60 2 154 1 155 1 263 1 262 2 354 6 266 1 16 2 356 1 272 1 22 1 316 1 109 1 69 3 71 1 222 1 113 1 277 4 169 2 29 5 282 3 368 1 176 1 322 3 371 1 36 1 82 1 123 1 125 1 
354 3 42 3 16 2 43 1 356 1 69 3 335 1 297 1 140 1 169 1 141 1 29 2 303 1 145 1 368 1 175 1 99 1 52 2 322 3 56 1 36 1 257 4 123 1 60 2 125 1 262 2 
354 3 42 3 16 2 43 1 356 1 69 3 335 1 297 1 278 1 169 2 141 1 29 2 303 1 145 1 368 1 285 1 175 1 99 1 52 2 322 2 56 1 206 1 36 1 257 4 60 2 123 1 125 1 262 2 
172 1 28 1 231 1 
144 1 231 1 
11 1 
114 1 231 1 
213 1 55 1 28 2 114 1 231 3 253 1 
213 1 114 1 231 1 
215 1 231 1 
311 3 270 2 160 1 218 7 56 1 178 1 5 1 192 4 308 1 307 1 123 1 210 1 83 2 224 1 339 1 265 3 103 1 
311 3 270 2 160 1 218 7 56 1 178 1 5 1 192 4 308 1 307 1 123 1 210 1 83 2 224 1 339 1 265 3 103 1 
311 3 270 2 160 1 218 7 56 1 178 1 5 1 192 4 308 1 307 1 123 1 210 1 6 1 83 2 224 1 339 1 265 3 103 1 
311 10 294 1 312 1 270 5 159 4 160 5 314 1 218 31 331 1 87 3 5 1 4 1 192 16 336 1 301 1 167 2 224 2 339 2 141 3 143 1 368 3 346 1 178 2 56 4 233 1 207 1 36 3 307 1 308 2 123 4 210 1 83 3 103 1 265 15 
311 4 294 2 312 2 270 3 160 1 218 9 331 1 192 5 336 2 167 4 166 1 224 1 339 1 346 2 56 1 178 1 57 1 308 1 307 1 123 1 210 1 83 2 265 4 103 1 
269 1 243 1 313 1 107 1 67 1 21 2 23 1 188 1 70 1 193 1 318 1 112 1 298 2 165 1 27 1 365 2 369 1 201 1 287 1 8 1 344 1 177 1 203 1 373 1 256 1 81 1 261 1 101 1 260 1 353 1 
313 1 107 1 67 1 21 2 23 1 188 1 70 1 193 1 112 1 298 3 73 1 165 1 27 1 365 3 369 1 200 1 201 2 287 1 8 1 344 1 177 1 348 1 203 1 373 1 256 1 81 1 261 1 101 1 260 1 353 1 
107 1 21 2 23 1 188 1 193 1 112 1 298 2 73 1 165 1 27 1 365 2 369 1 200 1 201 2 287 1 344 1 8 1 177 1 203 1 256 1 81 1 261 1 101 1 260 1 353 1 
106 1 313 1 67 1 163 1 46 1 193 1 112 1 276 1 298 1 165 1 114 1 365 1 227 1 367 1 369 2 79 1 177 2 231 1 348 1 256 1 353 1 101 2 260 2 
243 1 313 1 107 1 67 1 21 2 188 1 70 1 193 1 318 1 112 1 298 1 165 1 27 1 365 1 369 1 200 1 287 1 8 1 344 1 177 1 203 1 373 1 256 1 101 1 260 1 353 1 
361 1 
242 2 42 5 43 1 132 2 334 1 47 1 193 2 91 1 140 1 340 4 303 1 99 1 146 1 52 2 306 2 54 1 350 2 205 1 257 2 256 1 352 1 211 1 353 1 155 1 354 5 214 1 106 2 16 2 18 1 271 1 216 2 359 1 360 1 69 2 276 1 112 2 319 1 277 6 165 2 114 1 227 1 173 1 117 1 176 3 229 2 119 2 322 2 231 1 230 1 80 1 371 1 82 1 125 1 326 1 38 1 
354 3 214 1 340 2 42 3 117 1 271 1 176 1 230 1 306 1 80 1 47 1 13 1 205 1 319 1 352 1 82 1 91 1 277 2 211 1 155 1 326 1 38 1 
354 3 214 1 42 3 271 1 47 1 319 1 91 1 277 1 140 1 340 3 117 1 176 1 229 1 230 1 322 1 80 1 205 1 13 1 352 1 82 1 211 1 326 1 155 1 38 1 
354 3 214 1 42 3 242 1 271 1 47 1 319 1 91 1 277 2 140 1 340 3 117 1 176 1 229 1 230 1 322 1 306 1 80 1 13 1 205 1 352 1 82 1 211 1 326 1 155 1 38 1 
242 4 42 5 129 1 43 1 132 2 2 1 47 1 91 1 140 5 302 1 340 6 303 1 99 1 146 1 52 2 202 1 306 4 205 1 13 1 350 2 352 1 211 1 155 1 354 5 214 1 17 1 16 1 271 1 216 2 69 1 319 1 277 7 173 1 117 1 176 3 229 4 119 2 230 1 322 5 80 1 371 1 82 1 326 1 38 1 
354 4 214 1 242 2 16 1 42 4 271 1 43 1 216 2 132 2 69 1 334 1 47 1 319 1 91 1 277 4 140 1 340 4 173 1 303 1 117 1 99 1 146 1 176 2 52 2 229 2 119 2 322 2 230 1 306 2 80 1 371 1 350 2 205 1 257 2 352 1 82 1 211 1 326 1 155 1 38 1 
354 4 214 1 242 2 16 1 42 4 271 1 43 1 216 2 132 2 2 1 69 1 47 1 319 1 91 1 277 4 140 1 302 1 340 4 173 1 303 1 117 1 99 1 146 1 176 2 52 2 229 2 119 2 202 1 322 1 230 1 306 2 80 1 371 1 350 2 205 1 352 1 82 1 211 1 326 1 155 1 38 1 
354 4 214 1 242 2 16 1 42 4 271 1 43 1 216 2 132 2 2 1 69 1 47 1 319 1 91 1 277 4 140 1 302 1 340 4 173 1 303 1 117 1 99 1 146 1 176 2 52 2 229 2 119 2 202 1 322 1 230 1 306 2 80 1 371 1 350 2 205 1 352 1 82 1 211 1 326 1 155 1 38 1 
354 4 214 1 242 2 16 1 42 4 271 1 43 1 216 2 132 2 69 1 47 1 25 1 319 1 91 1 277 4 140 1 302 1 198 2 340 4 173 1 303 1 117 1 174 1 99 1 176 2 229 2 322 1 230 1 306 2 80 1 149 1 371 1 205 1 257 2 352 1 82 1 124 2 211 1 326 1 155 1 38 1 
354 4 214 1 16 1 42 4 242 3 129 1 271 1 43 1 216 2 132 2 2 1 69 1 47 1 319 1 91 1 277 5 140 1 302 1 340 5 173 1 303 1 117 1 99 1 146 1 176 2 52 2 119 2 229 3 202 1 322 1 230 1 306 3 80 1 371 1 350 2 205 1 352 1 82 1 211 1 326 1 155 1 38 1 
354 4 214 1 16 1 42 4 242 3 129 1 271 1 43 1 216 2 132 2 2 1 69 1 47 1 319 1 91 1 277 5 140 1 302 1 340 5 173 1 303 1 117 1 99 1 146 1 176 2 52 2 119 2 229 3 202 1 322 1 230 1 306 3 80 1 371 1 350 2 205 1 352 1 82 1 211 1 326 1 155 1 38 1 
354 4 214 1 242 2 16 1 42 4 271 1 43 1 216 2 132 2 69 1 334 1 47 1 319 1 91 1 277 4 140 1 198 2 340 4 173 1 303 1 117 1 174 1 99 1 176 2 229 2 322 1 230 1 306 2 80 1 371 1 205 1 257 2 352 1 82 1 124 2 211 1 326 1 155 1 38 1 
311 2 104 1 172 1 294 1 19 2 312 1 270 2 77 1 286 1 218 6 187 1 346 1 56 1 178 1 204 1 192 3 235 1 307 1 123 1 210 1 336 1 83 1 167 2 339 1 265 3 103 1 
311 2 104 1 294 2 19 1 312 2 270 1 159 3 160 1 218 14 187 11 332 1 87 3 48 1 88 1 192 8 336 2 301 1 167 4 50 1 141 1 77 2 368 2 305 1 286 4 346 2 56 1 233 1 204 11 36 2 123 2 40 1 265 6 41 1 
213 1 104 1 106 1 294 1 19 1 312 1 0 1 218 2 22 1 47 2 48 1 193 1 192 1 112 1 91 2 222 1 221 1 74 1 336 1 165 1 114 1 49 1 167 2 115 1 77 1 305 1 286 1 346 1 231 1 324 1 256 1 82 1 374 1 208 1 375 1 353 1 41 1 265 1 
294 3 0 2 187 7 48 1 47 3 193 3 192 10 91 3 93 1 336 3 339 1 197 2 141 2 200 1 305 1 346 3 56 3 204 7 307 1 256 2 210 1 62 1 353 2 103 1 265 10 104 3 213 2 311 8 106 1 158 2 19 2 312 3 270 4 66 2 160 4 218 20 22 1 112 3 221 1 222 1 74 2 165 3 167 6 114 2 279 2 77 3 368 2 286 7 290 1 323 2 231 2 178 1 324 2 36 2 82 1 123 3 83 1 375 1 41 1 
104 2 106 2 294 2 269 1 312 2 218 2 108 2 22 1 189 1 47 1 48 1 193 8 192 1 112 7 276 1 91 1 222 1 221 1 336 2 165 8 167 4 114 2 30 1 227 1 96 1 51 1 77 2 200 1 305 1 343 1 148 1 346 2 231 3 235 1 256 2 82 1 353 2 212 1 265 1 
311 1 104 1 294 1 312 1 270 1 161 1 218 3 187 1 22 1 109 1 47 1 192 1 222 1 91 1 336 1 167 2 141 1 77 1 368 1 97 1 286 1 346 1 56 1 204 1 36 1 82 1 123 1 41 1 265 2 
311 1 104 1 294 1 312 1 77 1 160 1 286 1 218 2 187 1 346 1 204 1 192 2 36 1 235 1 123 1 138 1 336 1 167 2 
311 1 104 1 294 1 312 1 270 1 77 1 286 1 218 2 187 1 346 1 275 1 56 1 204 1 235 1 336 1 167 2 141 1 265 2 
104 1 311 2 294 1 312 1 270 1 160 1 218 4 187 2 192 2 336 1 167 2 141 1 368 1 77 1 286 2 346 1 56 1 204 2 36 1 235 1 123 1 265 2 
311 1 104 1 294 1 312 1 77 1 160 1 286 1 218 2 187 1 346 1 204 1 192 2 36 1 123 1 138 1 336 1 167 2 212 1 
311 1 104 1 294 1 312 1 270 1 77 1 286 1 218 2 187 1 346 1 275 1 56 1 204 1 336 1 167 2 212 1 141 1 265 2 
104 1 311 2 294 1 312 1 270 1 160 1 218 4 187 2 192 2 336 1 167 2 141 1 368 1 77 1 286 2 346 1 56 1 204 2 36 1 123 1 212 1 265 2 
311 2 104 1 294 1 312 1 270 1 77 1 368 1 160 1 286 2 218 4 187 2 346 1 56 1 204 2 192 2 36 1 123 1 336 1 167 2 141 1 265 2 
213 1 104 1 106 1 294 1 19 1 312 1 66 1 0 1 218 2 47 1 48 1 192 1 193 1 112 1 91 1 74 1 336 1 165 1 114 1 167 2 77 1 305 1 346 1 231 1 324 1 256 1 353 1 265 1 
213 1 104 1 106 1 294 1 19 1 312 1 0 1 218 2 247 1 47 1 48 1 192 1 193 1 112 1 91 1 336 1 165 1 114 1 167 2 77 1 305 1 346 1 291 1 231 1 256 1 310 1 353 1 265 1 
104 1 311 2 294 1 312 1 270 1 160 1 218 4 187 2 192 2 336 1 167 2 141 1 368 1 77 1 286 2 346 1 56 1 204 2 36 1 123 1 41 1 265 2 
311 2 213 1 104 1 294 1 269 1 312 1 270 1 66 1 160 1 0 1 218 4 187 2 47 1 192 2 193 1 112 1 91 1 74 1 336 1 165 1 114 1 167 2 141 1 77 1 368 1 286 2 346 1 323 1 231 1 56 1 324 1 204 2 36 1 256 1 123 1 353 1 265 2 
311 1 104 1 294 1 312 1 160 1 218 3 187 1 22 1 109 1 47 1 192 2 222 1 91 1 336 1 167 2 141 1 77 1 368 1 97 1 286 1 346 1 56 1 58 1 204 1 36 1 82 1 123 1 265 1 41 1 
95 1 240 1 294 1 312 1 32 1 336 1 338 1 167 2 346 1 166 1 
95 1 240 1 294 1 312 1 32 1 336 1 338 1 167 2 346 1 166 1 
95 1 240 1 294 1 312 1 32 1 336 1 338 1 167 2 346 1 166 1 
95 1 240 1 294 1 312 1 32 1 336 1 338 1 167 2 346 1 166 1 
95 1 240 1 294 1 312 1 32 1 336 1 338 1 167 2 346 1 166 1 
241 1 357 1 251 1 362 1 232 1 151 1 236 1 181 1 309 1 337 1 
90 1 68 1 
232 1 366 1 241 1 194 1 236 1 357 1 251 1 288 1 309 1 
354 1 267 1 241 1 42 1 186 1 330 1 357 1 217 1 251 1 322 1 24 1 111 2 232 1 45 1 236 1 258 1 309 1 15 1 
354 1 267 1 241 1 42 1 186 1 330 1 357 1 217 1 251 1 322 1 24 1 111 2 232 1 45 1 236 1 258 1 309 1 15 1 
354 1 267 1 241 1 42 1 186 1 330 1 357 1 217 1 251 1 322 1 24 1 111 2 232 1 45 1 236 1 258 1 309 1 15 1 
372 1 245 1 44 1 
372 1 245 1 44 1 
342 1 237 1 
342 1 245 1 237 1 
118 1 292 1 
354 1 241 1 42 1 19 1 184 1 131 1 357 1 68 1 22 2 111 1 45 1 47 2 90 1 91 2 222 2 169 1 29 1 280 1 118 1 251 1 292 1 232 1 258 1 236 1 82 2 259 1 309 1 
372 1 44 1 
342 1 245 1 237 1 
104 1 294 1 312 1 218 2 108 2 219 1 47 2 48 1 193 2 192 1 112 2 91 2 336 1 165 2 114 1 167 2 142 1 96 1 51 1 76 1 77 1 305 1 346 1 231 1 120 1 255 1 256 1 82 2 353 1 41 1 265 1 
116 1 329 1 269 1 369 1 200 1 287 1 107 1 21 2 8 1 344 1 133 1 188 1 193 2 256 1 112 2 373 1 165 2 27 1 353 1 
185 1 369 1 200 1 287 1 107 1 21 2 8 1 344 1 133 1 188 1 193 1 112 1 373 1 256 1 165 1 27 1 353 1 
116 1 85 1 106 1 227 1 369 1 163 1 231 1 193 1 256 1 112 1 276 1 165 1 353 1 114 1 
116 1 329 1 369 1 200 1 287 1 107 1 21 2 8 1 344 1 133 1 188 1 193 1 112 1 373 1 256 1 165 1 27 1 353 1 
33 1 
226 1 172 1 16 1 295 1 69 1 140 1 322 1 
354 1 16 1 42 1 43 1 69 1 277 1 140 1 303 1 99 1 146 1 52 1 176 1 119 1 322 2 371 1 350 1 257 1 
213 1 106 1 303 1 144 1 43 1 99 1 345 1 231 2 371 1 55 1 193 1 256 1 112 1 165 1 353 2 114 1 156 1 
354 1 18 1 42 1 16 5 159 1 43 2 274 1 69 8 333 1 87 1 317 1 220 1 277 1 140 2 141 2 171 2 199 1 303 2 304 1 368 2 321 1 99 2 176 1 52 3 322 5 371 2 56 2 233 1 35 1 36 2 257 6 60 5 123 2 125 1 262 5 
354 1 42 1 16 2 130 1 43 1 272 1 2 1 22 1 69 2 109 1 47 1 91 1 222 1 113 1 339 1 171 2 303 1 304 1 99 1 178 1 371 1 56 1 123 2 82 1 210 1 154 1 155 1 376 1 
226 1 303 1 16 1 43 1 99 1 295 1 69 1 322 1 371 1 140 1 
158 1 16 5 304 1 368 2 52 5 69 5 322 5 56 2 36 2 257 10 123 2 60 5 262 5 141 2 171 2 
354 1 42 1 277 1 176 1 140 1 322 1 
354 3 106 2 18 2 16 2 42 3 65 1 43 2 360 1 69 2 136 1 193 4 297 1 112 4 276 1 299 2 165 4 277 4 114 1 227 1 303 2 99 2 176 2 231 1 54 1 371 1 325 1 256 1 353 1 125 2 
213 1 104 1 106 1 294 1 19 1 312 1 66 1 0 1 218 1 22 2 109 2 48 1 47 3 193 1 112 1 91 3 222 2 92 1 336 1 74 1 165 1 167 2 114 1 77 1 346 1 231 1 324 1 256 1 82 2 154 1 353 1 265 1 
16 2 303 1 18 1 43 1 99 1 52 2 69 1 322 4 371 1 257 4 60 2 83 1 125 1 262 2 140 2 
64 1 241 1 309 1 
241 1 217 1 309 1 3 1 292 1 
64 1 241 1 309 1 
64 1 241 1 309 1 
241 1 268 1 309 1 
241 1 268 1 309 1 
241 1 268 1 309 1 
241 1 309 1 
232 1 236 1 
311 3 294 2 312 2 270 2 160 1 218 8 331 1 346 2 56 1 178 1 192 4 307 1 123 1 210 1 336 2 83 1 167 4 339 1 265 4 103 1 
172 1 311 2 270 2 218 6 178 1 56 1 192 3 307 1 123 1 210 1 83 1 339 1 265 3 103 1 
311 2 294 1 312 1 270 1 368 1 98 1 160 1 218 4 346 1 56 1 192 2 36 1 123 1 336 1 167 2 141 1 265 2 
311 2 270 1 159 2 368 1 160 1 218 7 87 1 56 1 233 1 192 3 36 1 123 1 301 1 141 1 265 4 
311 9 294 2 312 2 270 5 159 2 160 4 218 23 331 2 87 2 332 1 110 1 88 1 192 11 336 2 301 1 167 4 339 2 141 2 368 2 346 2 178 2 56 3 36 2 307 1 123 3 210 1 83 1 103 1 265 12 
159 1 218 1 265 1 
192 1 218 1 87 1 
311 3 294 1 158 1 312 1 270 2 368 1 98 1 160 1 218 6 346 1 56 1 192 3 36 1 123 1 336 1 167 2 141 1 265 3 
311 2 294 1 312 1 270 1 159 1 160 1 218 12 274 1 87 1 192 6 317 1 220 1 336 1 167 2 166 1 141 2 199 1 368 2 346 1 56 2 233 1 35 1 36 2 123 2 265 6 
311 2 270 1 160 1 218 6 56 1 178 1 192 3 123 1 210 1 339 1 265 3 
311 2 294 1 312 1 270 1 160 1 218 3 331 1 346 1 110 1 178 1 192 1 307 1 336 1 167 2 339 1 103 1 265 2 
311 5 294 1 312 1 270 3 160 2 218 10 346 1 178 2 56 2 192 5 123 2 336 1 210 1 167 2 166 1 376 1 339 2 265 5 
311 1 294 1 312 1 160 1 218 2 346 1 192 2 36 1 123 1 336 1 166 1 167 2 
311 2 294 1 312 1 270 1 368 1 160 1 218 4 346 1 56 1 192 2 36 1 123 1 336 1 166 1 167 2 141 1 265 2 
311 2 294 3 312 3 270 1 228 1 160 1 331 1 218 3 346 3 110 1 178 1 192 1 336 3 166 1 167 6 339 1 265 2 
311 12 294 5 312 5 270 7 159 4 314 1 160 5 331 2 218 34 110 1 87 3 4 1 192 16 336 5 301 1 167 10 166 1 339 3 141 3 143 1 368 3 98 1 228 1 346 5 178 3 56 5 233 1 36 3 307 1 123 5 210 2 83 1 103 1 265 18 
311 2 294 1 312 1 270 2 159 1 218 8 87 1 192 4 336 1 167 2 166 1 339 1 346 1 56 1 178 1 233 1 35 1 307 1 123 1 210 1 83 1 265 4 103 1 
311 3 294 2 312 2 270 2 159 2 160 1 218 11 87 1 192 6 336 2 301 1 166 1 167 4 339 1 368 1 98 1 346 2 56 1 178 1 233 1 35 1 36 1 307 1 123 2 210 1 83 1 103 1 265 5 
311 4 294 3 312 3 270 3 159 1 160 1 218 19 331 1 274 1 87 1 192 9 317 1 220 1 336 3 167 6 166 1 339 1 141 2 199 1 368 2 98 1 346 3 178 1 56 3 233 1 35 1 36 2 307 1 123 3 210 1 83 1 103 1 265 10 
311 5 294 3 312 3 270 3 159 1 160 2 331 1 218 17 274 1 87 1 192 10 317 1 220 1 336 3 167 6 166 1 339 1 141 1 199 1 368 2 98 1 346 3 178 1 56 2 233 1 35 1 36 2 307 1 123 3 210 1 83 1 103 1 265 7 
311 2 294 1 312 1 270 2 159 1 218 8 87 1 192 4 336 1 167 2 166 1 339 1 346 1 56 1 178 1 233 1 35 1 307 1 123 1 210 1 83 1 265 4 103 1 
311 2 294 1 312 1 270 1 159 1 160 1 218 12 274 1 87 1 192 6 317 1 220 1 336 1 167 2 166 1 141 2 199 1 368 2 346 1 56 2 233 1 35 1 36 2 123 2 265 6 
311 5 294 4 312 4 270 3 159 1 160 2 218 18 331 2 274 1 87 1 192 10 317 1 220 1 336 4 167 8 166 1 339 1 141 1 199 1 368 2 98 1 346 4 178 1 56 2 233 1 35 1 36 2 307 1 123 3 210 1 83 1 103 1 265 8 
311 6 294 4 312 4 270 3 159 1 160 3 218 16 331 2 274 1 87 1 192 9 317 1 220 1 336 4 166 1 167 8 141 2 199 1 368 3 228 1 346 4 56 2 233 1 35 1 36 3 123 3 265 7 
311 6 270 3 160 3 218 7 56 1 178 3 192 3 307 1 123 1 210 1 339 3 265 4 103 2 
311 4 294 4 312 4 270 3 159 1 160 1 218 18 331 2 274 1 87 1 192 10 317 1 220 1 336 4 166 1 167 8 339 1 141 1 199 1 368 2 228 1 346 4 178 1 56 2 233 1 35 1 36 2 307 1 123 3 210 1 83 1 103 1 265 8 
47 1 19 1 91 1 82 1 326 1 252 1 63 1 
281 1 19 1 20 1 252 1 370 1 47 1 250 1 82 1 91 1 326 1 126 1 63 1 
172 1 227 1 106 1 193 1 256 1 276 1 112 1 165 1 353 1 114 1 231 1 
213 1 106 1 19 1 0 1 22 1 231 1 47 2 193 1 112 1 256 1 221 1 222 1 82 1 91 2 74 1 165 1 114 1 353 1 
213 2 105 1 215 1 19 1 0 1 22 1 47 2 193 1 112 1 319 1 91 2 222 2 221 1 74 1 299 1 165 1 114 2 7 1 231 3 80 1 256 1 82 2 353 1 155 2 
213 2 105 1 215 1 19 1 0 1 22 1 47 2 193 1 112 1 319 1 91 2 222 2 221 1 299 1 165 1 114 2 7 1 291 1 231 3 80 1 256 1 82 2 353 1 155 2 
213 1 354 2 106 1 215 1 105 1 42 2 144 1 315 1 322 1 231 4 193 3 351 1 112 3 256 1 299 1 165 3 277 1 28 1 114 1 353 1 140 1 38 1 182 1 
213 1 354 2 106 1 215 1 105 1 42 2 144 1 322 1 231 4 193 3 89 1 351 1 112 3 256 1 299 1 165 3 277 1 28 1 114 1 353 1 140 1 38 1 
193 1 256 1 112 1 165 1 353 1 148 1 
213 1 30 1 106 2 51 1 269 1 355 1 200 1 343 1 108 1 86 1 148 1 189 1 231 3 55 1 193 7 112 6 256 2 300 1 165 7 114 2 353 3 
311 2 213 1 104 2 294 2 19 2 312 2 269 1 270 2 66 1 0 1 218 6 187 1 22 1 47 2 192 3 193 1 112 1 91 2 222 1 221 1 336 2 74 1 165 1 114 1 167 4 339 1 279 1 77 2 286 1 346 2 231 1 323 1 56 1 178 1 120 1 324 1 204 1 307 1 256 1 123 1 82 1 210 1 83 1 353 1 265 3 103 1 41 1 
354 3 106 1 16 1 42 3 43 2 295 1 69 1 193 1 364 1 89 1 112 1 165 1 26 1 277 2 28 1 140 1 29 1 226 1 303 2 144 1 99 2 176 1 322 1 231 2 371 2 325 1 38 1 264 1 
213 1 269 1 148 1 231 2 55 1 193 2 112 2 256 1 28 1 165 2 114 1 353 2 156 1 
106 1 227 1 269 1 231 1 12 1 193 4 351 1 112 4 276 1 256 1 165 4 353 1 114 1 
213 1 31 1 355 1 231 1 349 1 193 2 112 2 256 1 299 1 300 1 165 2 62 1 114 1 353 2 
106 1 193 1 256 1 112 1 287 1 21 1 27 1 165 1 353 1 188 1 
269 1 51 1 76 1 200 1 231 1 193 2 112 2 256 1 165 2 114 1 353 1 
227 1 106 1 30 1 269 1 51 1 189 1 231 3 12 1 193 5 276 1 112 4 256 2 299 1 165 5 114 2 353 2 
227 1 106 1 157 1 30 1 269 1 51 1 231 3 12 1 193 5 276 1 112 4 256 2 299 1 165 5 114 2 353 2 
213 1 106 1 19 1 0 1 22 1 231 1 291 1 47 2 193 1 112 1 256 1 221 1 222 1 82 1 91 2 165 1 114 1 353 1 
213 1 355 1 86 1 231 1 55 1 193 1 112 1 256 1 300 1 299 1 165 1 114 1 353 2 
219 1 142 1 47 1 255 1 137 1 91 1 82 1 135 1 170 1 
152 1 78 1 170 1 
19 1 137 1 246 1 135 1 170 1 
354 2 42 2 130 1 246 1 272 1 22 1 109 1 135 1 47 1 137 1 319 1 91 1 222 1 113 1 223 1 140 1 29 1 170 1 78 1 322 1 80 1 205 1 152 1 82 1 14 1 154 1 155 2 38 1 
172 1 81 1 261 1 23 1 
81 1 313 1 298 1 67 1 261 1 23 1 365 1 
101 1 177 1 365 1 
313 1 67 1 23 1 191 1 318 1 59 1 81 1 298 3 261 1 39 2 377 1 365 3 
81 1 313 1 201 1 298 2 67 1 261 1 23 1 225 1 365 2 
313 1 67 1 21 1 8 1 23 1 188 1 318 1 298 1 238 1 84 1 365 1 
318 1 313 1 298 1 67 1 261 1 23 1 365 1 
318 1 81 1 313 1 298 1 67 1 261 2 365 1 
313 2 67 2 23 1 53 1 150 1 179 1 318 1 298 2 261 1 365 2 
313 1 201 2 67 1 273 1 23 2 318 1 72 1 81 1 298 3 261 1 94 1 84 1 365 3 
328 1 313 1 287 1 201 1 21 2 67 1 344 1 8 1 23 1 188 1 318 1 81 1 298 2 261 1 365 2 
313 2 201 2 67 2 23 2 318 1 81 1 298 4 261 1 225 1 94 1 84 1 102 1 365 4 
318 1 81 1 313 1 298 1 67 1 261 1 23 1 365 1 
183 1 313 1 201 2 67 1 23 3 59 1 81 2 298 4 261 2 94 1 84 1 39 1 377 1 365 4 
313 1 201 1 67 1 23 1 122 1 318 1 81 1 298 2 209 1 261 1 320 1 365 2 
318 1 59 1 81 1 313 1 298 3 1 1 67 1 261 1 23 1 39 2 377 2 365 3 
254 1 134 2 23 2 164 1 
318 1 313 1 298 1 67 1 128 1 365 1 
318 1 72 1 81 1 313 1 201 1 298 2 67 1 261 1 23 1 365 2 
196 1 
318 1 81 1 313 1 298 1 67 1 261 1 23 1 365 1 
313 1 201 1 67 1 23 1 318 1 72 1 81 1 298 3 261 1 39 1 365 3 
183 1 23 1 84 1 94 1 
261 1 23 1 

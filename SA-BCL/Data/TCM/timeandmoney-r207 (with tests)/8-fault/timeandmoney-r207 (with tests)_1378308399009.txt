#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 20 (71,304) (71,304) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 20 (71,304) (71,304) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 20 (71,304) (71,304) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 20 (71,304) (71,304) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 89 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 20 (83,274) (83,274) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 200 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 306 (195,236,355) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 40 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 244 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 244 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1921 | return null
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
71 1 106 1 20 1 304 1 
71 1 106 1 20 1 304 1 
71 1 106 1 20 1 304 1 
71 1 106 1 20 1 304 1 
106 1 89 1 
83 1 106 1 272 1 274 1 101 1 20 1 
200 1 106 1 
106 1 225 1 
106 1 225 1 
38 1 244 1 319 1 
116 1 332 2 319 1 
153 1 45 2 125 1 73 2 202 2 6 2 85 2 314 2 
231 2 305 1 232 1 157 2 234 1 237 1 285 1 260 2 334 2 117 1 164 1 72 1 73 3 338 1 341 1 6 2 96 1 37 1 314 3 199 1 174 1 125 1 202 2 318 1 298 1 151 1 322 1 275 1 130 1 153 1 61 1 131 1 62 1 45 2 368 1 107 2 85 2 
295 1 153 1 45 1 73 1 202 1 30 1 6 1 75 1 85 1 314 1 
38 1 26 1 91 1 149 1 30 1 308 1 319 1 42 1 73 1 228 1 339 1 18 1 85 1 314 1 
38 1 26 1 202 1 30 1 308 2 319 1 42 2 45 1 73 1 228 1 339 1 6 1 18 1 85 1 314 1 
297 1 243 1 308 1 2 1 42 1 
364 1 38 1 296 1 297 1 243 1 308 2 319 1 42 2 
243 1 308 1 42 1 
295 1 297 1 202 1 30 1 308 1 42 1 153 1 45 1 5 1 73 1 75 1 6 1 85 1 314 1 
319 1 
38 1 296 1 297 1 243 1 308 2 319 1 320 1 42 2 
38 1 87 2 296 1 297 2 99 2 243 2 258 1 308 5 363 1 319 1 1 1 103 1 181 1 288 1 42 5 323 2 93 1 84 1 278 1 
244 1 125 1 
235 1 190 1 202 1 125 2 45 1 73 2 6 1 85 2 314 2 
22 1 325 1 357 1 
147 1 231 1 305 1 232 1 157 1 125 1 151 1 334 1 275 1 131 1 164 1 117 1 72 1 73 1 368 1 314 1 
305 1 231 1 232 1 157 1 127 1 31 1 151 1 275 1 334 1 131 1 45 1 117 1 164 1 72 1 73 2 368 1 6 1 85 1 357 1 314 2 
235 1 91 1 202 1 125 1 79 1 127 1 31 2 45 4 194 1 73 5 6 4 85 5 314 5 229 1 
49 1 295 1 45 1 73 1 30 1 6 1 85 1 314 1 
45 3 202 1 125 1 73 3 31 1 6 3 85 3 314 3 
295 1 45 1 73 1 30 1 6 1 85 1 314 1 
45 1 235 1 190 1 73 1 202 1 30 1 6 1 85 1 314 1 
305 1 231 1 232 1 157 1 235 1 237 1 26 1 285 1 30 1 308 1 31 1 260 2 334 1 163 1 117 1 164 1 72 1 73 4 339 1 96 1 6 3 37 1 314 4 199 1 174 1 125 1 202 2 318 1 127 1 298 1 247 1 151 1 322 1 275 1 42 1 130 1 131 1 153 1 45 3 368 1 107 1 228 1 18 1 85 3 
45 1 194 1 125 1 91 1 73 2 31 1 6 1 85 2 314 2 
235 1 26 1 202 1 308 1 30 1 361 1 127 1 319 1 31 2 247 1 42 1 45 3 73 3 339 1 228 1 6 3 18 1 85 3 314 3 
22 1 235 1 202 1 31 1 45 2 73 2 6 2 85 2 314 2 357 1 
231 1 305 1 157 1 232 1 125 1 151 1 334 1 275 1 131 1 164 1 117 1 72 1 73 1 368 1 314 1 
231 1 305 1 157 1 232 1 125 1 151 1 141 1 334 1 275 1 117 1 72 1 73 1 277 1 368 1 314 1 
22 2 237 1 28 1 66 1 112 1 52 1 260 2 114 1 33 1 54 1 118 1 37 1 357 2 145 1 199 1 174 1 359 1 298 2 322 1 130 1 62 2 347 1 325 2 107 4 
49 1 
165 1 195 1 
165 1 195 1 
306 1 236 1 
306 1 236 1 
306 1 236 1 
165 1 195 1 198 1 
306 1 236 1 165 1 195 1 
165 1 195 1 355 1 
165 1 195 1 198 1 
165 1 195 1 198 1 
219 1 165 1 195 1 
219 1 165 1 195 1 
219 1 165 1 195 1 
158 1 23 1 286 1 308 1 355 1 70 1 165 1 195 1 311 1 73 2 6 2 314 2 125 1 126 1 150 1 13 1 105 1 42 1 346 1 45 2 348 1 303 1 17 1 85 2 
77 1 8 1 23 2 286 2 308 2 12 2 126 2 319 1 193 1 333 1 42 2 70 1 105 3 348 2 95 1 195 2 165 2 55 1 373 1 
217 1 192 1 101 1 
217 1 272 1 101 1 
170 1 223 1 272 1 254 1 192 2 101 3 
170 1 272 1 254 1 192 1 101 2 279 1 
170 2 272 1 254 1 192 1 101 2 
87 1 211 2 28 1 27 1 112 1 332 3 258 1 308 5 213 1 289 1 114 1 116 1 118 1 38 1 218 2 296 1 99 1 297 4 243 1 363 2 319 2 13 1 103 3 204 1 42 5 323 1 346 1 132 2 303 1 154 1 16 1 230 1 
87 2 211 6 28 3 27 3 112 3 332 9 308 9 258 1 2 5 114 3 335 1 93 1 116 3 118 3 120 1 76 5 98 1 38 1 344 1 218 6 296 1 297 7 99 2 243 6 245 1 363 6 319 5 103 8 204 1 42 9 323 2 184 1 303 4 154 2 16 2 
87 1 211 2 28 1 27 1 112 1 308 3 332 4 289 1 213 1 114 1 93 1 116 2 118 1 38 1 218 2 297 2 99 1 363 2 319 3 103 3 42 3 323 1 132 1 303 1 154 1 16 1 
87 1 211 4 28 2 27 2 112 2 332 7 308 4 289 1 213 1 114 2 93 1 116 3 118 2 120 1 38 1 218 4 344 1 99 1 297 3 363 4 319 4 103 5 42 4 323 1 132 2 184 1 303 2 154 1 16 1 
324 1 232 1 244 1 
232 1 302 1 
25 1 
232 1 117 1 368 1 
7 1 232 1 
232 1 117 1 
324 2 351 1 232 3 117 1 368 1 313 1 
50 1 208 1 282 3 283 1 66 4 112 3 118 3 58 2 59 1 145 7 171 2 178 2 298 8 299 1 251 2 252 1 62 10 107 18 
50 1 208 1 282 3 283 1 66 4 112 3 118 3 58 2 59 1 145 7 171 2 178 2 298 8 299 1 251 2 252 1 62 10 107 18 
50 1 208 1 282 3 283 1 66 4 112 3 32 1 118 3 58 2 59 1 145 7 171 2 299 1 178 2 298 8 251 2 252 1 62 10 107 18 
50 2 208 2 108 1 282 7 283 1 237 1 27 3 28 2 66 7 112 6 161 3 260 2 114 3 94 1 118 5 58 3 59 1 145 14 199 1 171 3 100 1 174 1 78 4 299 1 178 3 298 17 322 1 251 2 152 1 252 1 62 21 44 1 366 1 107 38 135 1 
50 1 208 1 282 4 237 2 66 5 112 3 29 1 260 4 118 3 58 2 145 9 59 1 199 2 171 2 174 2 299 1 298 9 178 2 322 2 251 2 252 1 62 11 366 1 107 20 19 1 
231 1 157 1 106 1 113 1 188 1 334 1 
231 1 305 1 157 1 113 1 192 1 68 1 53 1 238 1 334 1 290 1 196 3 342 1 217 1 294 1 122 1 271 1 272 1 221 1 101 2 321 1 82 1 275 1 223 1 60 3 186 1 47 1 226 2 367 1 327 1 134 1 
231 1 305 1 157 1 113 1 68 1 192 1 53 1 238 1 334 1 290 1 196 2 217 1 271 1 272 1 221 1 101 2 321 1 82 1 275 1 223 1 60 2 186 1 226 2 327 1 134 1 
21 1 231 1 305 1 157 1 232 1 24 1 137 1 113 2 53 2 334 1 290 2 117 1 72 1 196 1 342 1 294 1 172 1 221 2 203 1 129 1 275 1 60 1 47 1 
231 1 157 1 106 1 113 1 134 1 334 1 
65 1 
231 2 0 2 87 1 232 1 91 1 332 2 334 2 292 1 339 1 296 3 99 1 243 6 149 1 203 1 102 1 103 2 104 2 16 1 18 1 305 1 157 2 26 1 308 5 258 1 30 1 69 1 309 1 214 1 116 2 117 1 72 2 215 4 264 2 73 1 312 1 35 1 36 2 265 1 314 1 38 1 268 1 39 2 362 2 363 2 319 2 129 1 42 5 275 1 323 1 43 1 365 1 224 2 228 1 48 1 85 1 
0 1 26 1 91 1 308 3 30 1 214 1 215 2 73 1 35 1 339 1 265 1 314 1 268 1 296 1 243 2 149 1 102 1 320 1 42 3 228 1 18 1 85 1 
26 1 91 1 308 3 30 1 214 1 215 3 73 1 35 1 339 1 36 1 265 1 314 1 268 1 38 1 296 1 243 1 149 1 319 1 102 1 320 1 42 3 228 1 18 1 85 1 
0 1 26 1 91 1 308 3 30 1 214 1 215 3 73 1 35 1 339 1 36 1 265 1 314 1 268 1 38 1 296 1 243 2 149 1 319 1 320 1 102 1 42 3 224 1 228 1 18 1 85 1 
87 1 0 4 26 1 91 1 258 1 308 5 30 1 34 1 214 1 116 2 142 1 215 6 264 2 73 1 292 1 35 1 339 1 36 4 265 1 314 1 241 1 38 5 268 1 296 3 99 1 243 7 39 2 149 1 362 2 363 1 319 5 102 1 320 1 103 1 104 2 42 5 323 1 365 1 224 4 276 1 64 1 228 1 18 1 85 1 
0 2 87 1 26 1 91 1 332 2 258 1 308 4 30 1 214 1 116 2 215 4 264 2 73 1 292 1 35 1 339 1 36 2 265 1 314 1 38 1 268 1 296 2 99 1 243 4 39 2 149 1 362 2 363 1 319 2 102 1 103 1 104 2 42 4 323 1 43 1 365 1 224 2 228 1 18 1 85 1 
0 2 87 1 26 1 91 1 308 4 30 1 258 1 214 1 116 2 215 4 264 2 73 1 292 1 35 1 339 1 36 2 265 1 314 1 241 1 38 1 268 1 296 2 99 1 243 4 39 2 149 1 362 2 363 1 319 1 102 1 103 1 104 2 42 4 323 1 365 1 224 2 276 1 64 1 228 1 18 1 85 1 
0 2 87 1 26 1 91 1 308 4 30 1 258 1 214 1 116 2 215 4 264 2 73 1 292 1 35 1 339 1 36 2 265 1 314 1 241 1 38 1 268 1 296 2 99 1 243 4 39 2 149 1 362 2 363 1 319 1 102 1 103 1 104 2 42 4 323 1 365 1 224 2 276 1 64 1 228 1 18 1 85 1 
268 1 26 1 91 1 30 1 308 2 149 1 40 1 102 1 42 2 261 1 214 1 215 2 73 1 35 1 339 1 228 1 18 1 265 1 85 1 314 1 
87 1 0 3 26 1 91 1 258 1 308 4 30 1 34 1 214 1 116 2 215 5 264 2 73 1 292 1 35 1 339 1 36 3 265 1 314 1 241 1 38 1 268 1 296 2 99 1 243 5 39 2 149 1 362 2 363 1 319 1 102 1 103 1 104 2 42 4 323 1 365 1 224 3 276 1 64 1 228 1 18 1 85 1 
87 1 0 3 26 1 91 1 258 1 308 4 30 1 34 1 214 1 116 2 215 5 264 2 73 1 292 1 35 1 339 1 36 3 265 1 314 1 241 1 38 1 268 1 296 2 99 1 243 5 39 2 149 1 362 2 363 1 319 1 102 1 103 1 104 2 42 4 323 1 365 1 224 3 276 1 64 1 228 1 18 1 85 1 
87 1 0 2 138 2 91 1 332 2 292 1 339 1 146 1 296 2 99 1 243 4 149 1 102 1 103 1 104 2 18 1 26 1 30 1 308 4 258 1 214 1 215 4 73 1 264 2 35 1 36 2 265 1 314 1 268 1 38 1 363 1 319 1 42 4 323 1 43 1 224 2 228 1 85 1 187 2 
282 1 237 1 66 2 112 1 260 2 54 1 118 1 37 1 58 1 59 1 145 3 199 1 171 1 174 1 244 1 125 3 178 1 298 3 322 1 251 1 252 1 130 1 62 4 107 7 
282 1 22 4 237 2 284 1 111 1 285 1 66 1 27 2 28 1 112 2 161 3 260 4 114 2 94 1 118 1 338 1 37 2 145 2 357 11 199 2 124 1 174 2 125 1 78 3 11 1 298 6 322 2 130 1 62 8 325 11 227 1 107 14 135 1 
22 1 352 1 237 1 111 1 285 1 30 1 31 1 140 1 260 2 73 1 338 1 6 1 37 1 314 1 199 1 169 1 201 1 174 1 125 1 127 1 298 1 322 1 130 1 45 1 62 1 107 2 85 1 
231 1 282 3 232 2 237 3 285 1 334 1 338 1 6 1 57 2 96 2 58 1 59 1 145 11 199 3 299 1 298 15 151 2 249 2 251 2 250 2 252 1 62 16 107 31 305 2 157 1 109 2 22 6 352 1 210 1 111 1 27 2 28 2 66 8 112 5 30 1 31 1 260 6 114 2 164 2 117 2 72 1 118 5 73 3 37 3 315 1 314 3 357 6 171 2 174 3 125 5 127 1 178 2 322 3 275 2 130 3 131 2 45 1 325 6 368 2 85 1 
256 1 281 1 305 2 231 7 232 3 157 8 237 2 285 1 31 1 260 4 334 8 115 1 54 1 117 2 72 2 73 1 338 1 6 1 341 2 37 2 314 1 168 1 199 2 345 1 273 1 174 2 317 1 298 1 203 1 129 1 275 2 322 2 130 2 45 1 62 1 107 2 85 1 134 1 188 1 
22 1 235 1 237 1 111 1 66 1 27 1 28 1 112 1 260 2 114 1 118 1 73 1 6 1 37 1 145 1 357 1 314 1 199 1 174 1 202 1 298 2 322 1 130 1 45 1 62 1 325 1 155 1 107 3 85 1 
282 1 22 1 237 1 174 1 112 1 260 2 322 1 114 1 130 1 62 2 54 1 347 1 325 1 107 2 37 1 145 1 357 1 199 1 
22 1 237 1 174 1 66 1 28 1 52 1 298 2 260 2 322 1 130 1 54 1 325 1 118 1 107 2 37 1 145 1 357 1 199 1 
22 2 237 1 27 1 28 1 66 1 112 1 260 2 114 1 54 1 118 1 37 1 357 2 145 1 199 1 174 1 298 2 322 1 130 1 62 2 325 2 107 4 
282 1 22 1 237 1 174 1 112 1 260 2 322 1 114 1 130 1 115 1 62 2 347 1 325 1 107 2 37 1 145 1 357 1 199 1 
22 1 237 1 174 1 66 1 28 1 52 1 298 2 260 2 322 1 130 1 115 1 325 1 118 1 107 2 37 1 145 1 357 1 199 1 
282 1 22 2 237 1 27 1 28 1 66 1 112 1 260 2 114 1 115 1 118 1 37 1 357 2 145 2 199 1 174 1 298 2 322 1 130 1 62 2 325 2 107 4 
22 2 237 1 27 1 28 1 66 1 112 1 260 2 114 1 118 1 37 1 357 2 145 1 199 1 174 1 298 2 322 1 130 1 62 2 325 2 107 4 
305 1 231 1 157 1 232 1 237 1 285 1 260 2 334 1 117 1 164 1 72 1 73 1 338 1 96 1 37 1 314 1 199 1 174 1 125 1 298 1 151 1 275 1 322 1 130 1 131 1 62 1 368 1 107 2 
305 1 231 1 157 1 232 1 237 1 285 1 141 1 260 2 334 1 117 1 72 1 73 1 338 1 56 1 37 1 314 1 199 1 174 1 125 1 298 1 151 1 275 1 322 1 130 1 62 1 277 1 368 1 107 2 
22 2 237 1 111 1 27 1 28 1 66 1 112 1 260 2 114 1 118 1 37 1 357 2 145 1 199 1 174 1 298 2 322 1 130 1 62 2 325 2 107 4 
305 1 231 1 157 1 232 1 22 2 109 1 237 1 66 1 28 1 27 1 112 1 260 2 334 1 114 1 164 1 117 1 118 1 73 1 96 1 37 1 145 1 357 2 314 1 199 1 174 1 298 2 151 1 275 1 322 1 130 1 131 1 62 2 325 2 368 1 107 4 188 1 
282 1 22 1 235 1 237 1 111 1 28 1 27 1 112 1 260 2 114 1 118 1 73 1 6 1 37 1 145 1 314 1 357 1 199 1 174 1 202 1 298 1 41 1 322 1 130 1 45 1 62 2 325 1 107 3 85 1 
233 1 282 5 237 4 336 1 94 1 337 1 291 2 58 1 145 8 59 1 199 4 293 1 343 1 9 4 298 17 251 1 252 1 62 21 107 38 257 1 307 1 27 4 28 2 66 3 112 5 29 1 160 1 353 1 161 3 260 8 114 4 118 3 166 1 358 1 171 1 173 1 174 4 78 4 178 1 322 4 366 2 371 1 135 3 
282 2 257 1 237 2 307 1 66 1 28 1 27 2 29 1 112 2 160 1 161 1 260 4 114 2 337 1 94 1 118 1 291 1 145 3 293 1 199 2 9 2 173 1 174 2 78 2 298 6 322 2 62 7 107 13 135 1 
282 4 257 1 237 3 307 1 27 4 28 3 66 4 29 1 112 5 353 1 161 2 260 6 114 4 336 1 337 1 94 1 118 4 291 1 166 1 58 1 59 1 145 8 293 1 199 3 343 1 171 1 358 1 9 3 173 1 174 3 78 3 178 1 298 17 322 3 251 1 252 1 62 19 366 2 107 36 371 1 135 2 
282 1 257 1 237 2 307 1 66 1 28 1 27 2 29 1 112 2 160 1 161 1 260 4 114 2 337 1 94 1 118 1 291 1 145 2 293 1 199 2 9 1 174 2 78 2 298 5 300 1 322 2 62 6 107 11 135 1 
282 2 257 2 237 3 307 1 66 2 27 3 28 2 29 1 112 3 353 1 161 2 260 6 114 3 336 1 337 1 118 2 291 2 166 1 145 4 293 1 199 3 343 1 358 1 9 4 173 1 174 3 78 2 298 12 322 3 62 14 366 2 107 26 371 1 135 2 
8 1 23 1 348 1 165 1 195 1 55 1 286 1 126 1 373 1 92 1 
158 1 355 1 
23 1 348 1 165 1 195 1 286 1 126 1 167 1 97 1 3 1 
143 1 198 1 
270 1 219 1 162 1 
77 1 8 1 23 1 286 1 308 1 12 1 126 1 319 1 193 1 333 1 70 1 42 1 105 2 348 1 195 1 165 1 55 1 373 1 
77 1 8 1 23 1 286 1 308 1 12 1 126 1 319 1 193 1 333 1 70 1 42 1 105 2 348 1 195 1 165 1 55 1 373 1 
77 1 8 1 23 1 286 1 308 1 12 1 126 1 319 1 193 1 333 1 70 1 42 1 105 2 348 1 195 1 165 1 55 1 373 1 
143 1 198 1 162 1 
143 1 198 1 162 1 
270 1 219 1 
270 1 219 1 162 1 
311 1 150 1 
158 1 23 1 286 1 308 1 355 1 165 1 195 1 311 1 73 2 6 2 314 2 77 1 297 1 125 1 12 1 126 1 81 1 150 1 13 1 42 1 105 1 346 1 45 2 348 1 303 1 17 1 85 2 
256 1 305 1 231 2 232 1 157 2 237 1 111 1 285 1 260 2 334 2 117 1 73 2 338 1 341 2 37 1 356 1 314 2 199 1 267 1 269 1 273 1 174 1 298 1 180 1 275 1 322 1 130 1 62 1 107 2 85 2 280 1 
217 1 305 1 231 2 157 2 122 1 272 1 175 1 192 1 101 2 221 1 259 1 321 1 275 1 334 2 82 1 223 1 240 1 134 1 188 1 
217 1 231 1 305 1 157 1 122 1 272 1 192 1 101 2 179 1 221 1 321 1 334 1 82 1 275 1 223 1 240 1 134 1 
305 1 231 1 232 1 157 1 175 1 137 1 221 1 203 1 129 1 275 1 334 1 117 1 133 1 72 1 
217 1 231 1 305 1 157 1 122 1 272 1 175 1 192 1 101 2 221 1 259 1 321 1 275 1 334 1 82 1 223 1 240 1 134 1 
86 1 
38 1 244 1 363 1 319 1 103 1 181 1 288 1 
87 1 258 1 332 1 308 1 116 1 38 1 296 1 99 1 243 1 39 1 363 1 362 1 319 2 103 1 42 1 323 1 365 1 
136 2 231 3 232 10 87 4 332 12 191 2 239 1 288 1 334 3 197 2 339 2 7 2 296 3 99 4 148 1 243 5 248 2 103 9 249 2 253 2 15 1 302 3 16 2 207 2 350 1 305 3 157 3 211 6 27 2 28 2 112 2 258 4 308 5 114 2 309 1 117 3 116 6 72 1 118 2 74 2 313 1 38 2 218 6 360 1 363 8 319 8 181 1 275 4 42 5 323 4 324 2 368 3 188 1 372 2 
87 2 211 5 27 2 28 2 112 2 308 1 332 6 258 2 353 1 161 1 114 2 309 1 336 1 116 3 118 2 74 2 166 1 38 2 358 1 296 1 218 5 99 2 243 1 78 1 363 5 319 5 246 1 103 8 42 1 323 2 253 1 46 1 16 1 371 1 135 1 
87 1 112 2 30 1 258 1 308 1 118 1 5 1 73 1 74 2 75 1 6 1 314 1 295 1 171 1 99 1 202 1 363 2 178 1 299 1 103 2 42 1 323 1 251 1 253 1 153 1 45 1 64 1 85 1 
87 1 38 1 99 1 258 1 363 1 319 1 181 1 103 1 288 1 323 1 
218 5 211 5 27 2 28 2 112 2 332 10 363 5 319 5 103 5 249 1 114 2 253 1 116 5 118 2 74 2 
38 1 296 1 243 1 308 1 319 1 42 1 
305 1 231 4 232 1 87 2 157 4 67 1 258 1 308 3 334 4 309 2 93 1 117 1 72 2 312 1 296 2 99 2 148 2 243 4 360 1 363 2 203 1 103 2 129 1 275 1 42 3 323 2 301 1 16 2 48 1 
231 1 305 1 157 1 232 1 237 1 285 1 260 2 334 1 164 1 117 1 72 1 73 3 6 2 96 1 37 1 314 3 199 1 174 1 125 1 202 2 318 1 298 1 151 1 322 1 275 1 130 1 153 1 131 1 45 2 368 1 107 1 85 2 
87 1 38 2 218 2 99 1 211 2 332 4 258 1 363 2 319 4 103 1 323 1 309 1 116 2 16 1 58 1 
329 1 23 1 126 1 
23 1 311 1 354 1 126 1 373 1 
329 1 23 1 126 1 
329 1 23 1 126 1 
23 1 63 1 126 1 
23 1 63 1 126 1 
23 1 63 1 126 1 
23 1 126 1 
165 1 195 1 
282 3 237 1 66 4 112 3 29 1 161 1 260 2 336 1 118 3 58 1 59 1 145 7 199 1 171 2 174 1 78 1 299 1 298 9 178 2 322 1 251 2 252 1 62 10 107 19 135 1 
282 4 237 2 66 4 27 1 29 1 112 4 161 1 260 4 114 1 336 1 94 1 118 3 58 1 59 1 145 8 199 2 171 2 174 2 78 2 299 1 178 2 298 10 322 2 251 2 252 1 62 12 185 1 107 22 135 1 
282 2 237 4 27 2 28 1 66 1 29 1 112 2 353 1 161 1 260 8 114 2 336 1 118 1 166 1 145 3 199 4 358 1 174 4 78 1 298 5 322 4 62 7 366 2 185 1 107 12 371 1 135 1 
282 1 237 4 27 2 28 1 66 2 29 1 112 2 353 1 161 1 260 8 114 2 336 1 118 1 166 1 145 3 199 4 358 1 174 4 78 1 298 5 322 4 62 7 366 2 185 1 107 12 371 1 135 1 
282 3 237 1 66 4 112 3 29 1 161 1 260 2 336 1 118 3 58 1 59 1 145 7 199 1 171 2 174 1 78 1 299 1 298 9 178 2 322 1 251 2 252 1 62 10 107 19 135 1 
282 2 237 3 27 2 28 1 66 2 29 1 112 2 353 1 161 1 260 6 114 2 336 1 118 1 166 1 145 4 199 3 358 1 174 3 78 1 298 5 322 3 62 7 366 2 107 12 371 1 135 1 
282 4 237 4 27 2 28 1 66 5 29 1 112 5 353 1 161 1 260 8 114 2 336 1 118 4 166 1 58 1 59 1 145 9 199 4 171 2 358 1 174 4 78 1 299 1 178 2 298 13 322 4 251 2 252 1 62 16 366 2 185 1 107 29 371 1 135 1 
282 2 237 2 27 2 28 1 66 2 29 1 160 1 112 2 353 1 161 1 260 4 114 2 336 1 118 1 166 1 145 4 199 2 358 1 174 2 78 1 298 5 322 2 62 7 107 12 371 1 135 1 
282 2 171 2 66 2 178 2 298 2 252 2 62 2 107 4 59 1 145 4 
282 4 237 4 27 2 28 1 66 5 29 1 160 1 112 5 353 1 161 1 260 8 114 2 336 1 118 4 166 1 58 1 59 1 145 9 199 4 171 2 358 1 174 4 78 1 299 1 178 2 298 13 322 4 251 2 252 1 62 16 366 2 107 29 371 1 135 1 
282 3 237 2 66 4 112 3 260 4 118 3 58 1 59 1 145 7 199 2 171 2 174 2 299 1 178 2 298 8 322 2 251 2 252 1 62 9 366 1 107 17 
251 1 252 1 282 1 62 4 171 1 118 1 66 2 244 1 112 1 298 3 107 7 178 1 58 1 145 3 59 1 
282 1 237 1 174 1 66 1 28 1 27 1 112 1 298 2 260 2 322 1 114 1 62 2 118 1 185 1 107 4 145 2 199 1 
282 1 66 1 28 1 27 1 112 1 78 2 161 1 298 4 114 1 62 3 94 1 118 1 107 7 145 2 135 1 
282 4 237 1 28 1 27 2 66 5 112 5 161 2 260 2 114 2 94 1 118 4 58 1 59 1 145 9 199 1 171 2 124 1 174 1 78 2 299 1 178 2 298 12 322 1 251 2 252 1 62 15 366 1 107 27 227 1 
78 1 107 1 298 1 
62 1 161 1 107 1 
282 2 237 1 174 1 27 1 28 1 66 2 112 1 298 3 260 2 249 1 322 1 114 1 62 3 118 1 185 1 107 6 145 4 199 1 
282 2 237 1 27 2 28 1 66 2 29 1 112 2 353 1 161 1 260 2 114 2 336 1 118 1 166 1 145 4 199 1 358 1 174 1 78 1 298 5 322 1 62 7 107 12 371 1 135 1 
282 1 171 1 66 1 112 1 298 3 178 1 251 1 62 3 118 1 107 6 145 2 
282 1 171 1 237 1 174 1 66 1 177 1 178 1 298 2 260 2 322 1 252 1 62 1 366 1 107 3 145 2 59 1 199 1 
282 2 171 1 66 2 112 2 299 1 178 1 298 5 251 1 62 5 118 2 107 10 145 4 
282 1 237 1 174 1 29 1 112 1 260 2 322 1 114 1 62 2 107 2 145 1 199 1 
237 1 174 1 66 1 27 1 28 1 29 1 112 1 298 2 260 2 322 1 114 1 62 2 118 1 107 4 145 1 199 1 
282 1 171 1 237 1 174 1 66 1 29 1 298 1 178 1 260 2 322 1 62 1 107 2 145 2 199 1 
282 4 237 4 66 5 27 2 28 2 160 1 29 1 112 5 161 3 260 8 114 2 118 5 58 1 59 1 145 9 199 4 171 2 100 1 174 4 78 3 299 1 178 2 298 15 322 4 251 2 152 1 252 1 62 16 44 1 366 1 185 1 107 31 135 1 
182 1 194 1 125 1 73 1 91 1 85 1 314 1 
330 1 159 1 125 1 91 1 10 1 182 1 194 1 216 1 73 1 144 1 85 1 314 1 
305 1 231 1 232 1 157 1 117 1 72 1 244 1 203 1 129 1 275 1 334 1 
231 1 305 1 232 1 157 1 125 1 31 1 151 1 275 1 334 1 131 1 45 1 117 1 72 1 73 2 368 1 6 1 85 1 314 2 
7 1 231 1 305 1 232 3 157 1 148 1 26 1 125 1 30 1 191 1 31 1 151 1 275 1 334 1 131 1 45 2 117 2 73 2 368 2 18 1 6 1 85 2 314 2 
305 1 231 2 157 2 232 3 26 1 30 1 191 1 31 1 141 1 334 2 117 2 73 2 6 1 121 1 314 2 7 1 148 1 125 1 151 1 275 1 45 2 368 2 18 1 85 2 
7 1 231 3 305 1 38 1 157 3 232 4 110 1 148 1 243 1 308 2 191 1 319 1 14 1 275 1 42 2 334 3 324 1 117 1 302 1 72 1 368 1 339 1 121 1 
7 1 231 3 305 1 38 1 157 3 232 4 148 1 243 1 308 2 191 1 319 1 248 1 275 1 42 2 334 3 324 1 117 1 302 1 72 1 368 1 339 1 121 1 
305 1 231 1 281 1 157 1 275 1 334 1 
256 1 281 1 231 6 305 2 157 7 232 3 189 1 345 1 316 1 176 1 317 1 334 7 275 3 117 2 72 2 368 1 341 1 313 1 134 1 188 1 168 1 
231 1 232 1 282 3 237 2 334 1 96 1 57 1 6 1 58 1 59 1 145 7 199 2 299 1 298 8 151 1 251 2 252 1 62 9 107 17 305 1 157 1 109 1 352 1 111 1 66 4 112 3 30 1 31 1 260 4 164 1 117 1 118 3 73 2 37 2 314 2 269 1 171 2 174 2 125 5 178 2 322 2 275 1 130 2 131 1 45 1 368 1 85 1 188 1 
231 1 136 1 157 1 87 2 232 2 258 2 308 3 288 1 334 1 72 1 197 1 339 1 38 1 296 1 99 2 297 1 243 2 360 1 363 1 319 1 248 1 103 1 181 1 42 3 323 2 324 1 302 1 207 1 
281 1 231 2 305 1 157 2 232 2 239 1 334 2 275 2 324 1 117 1 368 1 313 1 188 1 
231 4 305 1 157 4 232 1 203 1 129 1 275 1 334 4 117 1 72 1 369 1 121 1 188 1 
231 2 51 1 305 1 157 2 232 1 316 1 148 1 176 1 139 1 222 1 334 2 275 2 117 1 368 1 
217 1 305 1 231 1 157 1 272 1 72 1 101 1 275 1 82 1 334 1 
256 1 231 2 305 1 157 2 267 1 232 1 334 2 275 1 117 1 188 1 134 1 
256 1 231 4 305 2 157 5 232 3 345 1 148 1 317 1 203 1 129 1 334 5 275 2 117 2 72 1 369 1 188 1 
256 1 231 4 305 2 157 5 232 3 345 1 148 1 203 1 129 1 334 5 275 2 117 2 72 1 263 1 369 1 188 1 
231 1 305 1 232 1 157 1 125 1 31 1 151 1 141 1 275 1 334 1 45 1 117 1 72 1 73 2 368 1 6 1 85 1 314 2 
231 1 305 1 157 1 232 1 189 1 316 1 148 1 176 1 334 1 275 2 117 1 368 1 313 1 
205 1 209 1 125 1 90 1 128 1 
349 1 38 1 209 2 297 1 26 1 125 1 90 2 30 1 331 1 308 2 319 1 128 2 247 1 42 2 205 1 183 1 339 1 228 1 18 1 
209 1 128 1 180 1 205 1 73 1 356 1 85 1 314 1 280 1 
349 1 205 1 183 1 
271 1 244 1 186 1 327 1 
294 1 60 1 271 1 186 1 196 1 47 1 327 1 
290 1 196 1 53 1 
60 1 88 1 106 1 4 1 196 1 287 1 156 1 
294 1 60 2 271 1 186 1 196 2 226 1 47 1 212 1 327 1 
106 1 
106 1 
106 1 
106 1 255 1 
220 1 287 1 106 1 60 2 196 2 119 1 226 2 340 1 370 1 327 1 
106 1 272 1 101 1 
242 1 212 1 287 1 106 1 60 2 196 2 119 1 226 2 340 1 327 1 
106 1 287 1 
294 1 88 1 271 2 287 1 60 4 4 1 186 2 196 4 119 1 226 2 47 1 340 1 156 1 327 3 
328 1 60 1 106 1 310 1 196 1 226 1 326 1 287 1 
266 1 60 1 88 1 106 1 4 1 196 1 287 1 
206 1 262 1 80 2 327 2 
106 1 
60 1 106 1 196 1 226 1 220 1 287 1 
123 1 
106 1 
60 1 88 1 106 1 196 1 287 1 
119 1 340 1 287 1 327 1 
271 1 327 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 207 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 132 95 313 (158,293) 311 93 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 132 95 313 (158,293) 311 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 210 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 317 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 132 95 313 (158,293) 311 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 132 95 313 (195,216) 23 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 162 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (222,321) (222,321) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 177 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 9 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 104 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 104 185 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 207 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 126 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 132 95 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 183 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 132 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 132 95 302 39 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 132 322 72 (137,280) (70,238) (70,238) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 175 4 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 264 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 264 299 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 241 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 241 108 155 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 241 108 155 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 241 108 85 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 264 299 248 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 264 299 248 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 241 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 132 95 313 (158,293) 311 93 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 132 95 313 (158,293) 311 (122,164) (122,164) 50 292 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 132 322 72 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 132 95 313 (158,293) 311 (122,164) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 132 95 313 (195,216) 23 257 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 132 95 313 (158,293) 311 (122,164) (122,164) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (160,307) (160,307) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 320 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 291 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 8 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (222,321) (222,321) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (222,321) (222,321) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (222,321) (222,321) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 8 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 8 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 162 19 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 274 200 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 132 322 72 (137,280) (137,280) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 207 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 132 95 302 112 113 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 179 13 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (168,227) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 207 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 132 95 313 (158,293) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 132 95 313 (158,293) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 132 95 313 (195,216) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 126 (195,216) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 126 (158,293) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 132 95 302 167 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 132 95 313 (158,293) 311 (122,164) (122,164) 50 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 132 95 302 112 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 132 322 72 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 132 95 246 319 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 274 200 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 132 274 7 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 132 274 12 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 132 95 313 (195,216) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 132 95 302 167 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
172 1 173 2 138 1 5 2 140 1 288 2 59 2 147 1 62 1 190 1 300 9 255 2 196 2 269 1 199 2 166 6 271 9 33 5 235 1 236 1 123 3 323 1 83 4 169 1 277 1 239 1 88 1 171 1 
172 1 173 2 138 1 5 2 140 1 288 2 59 2 147 1 62 1 190 1 300 9 255 2 196 2 269 1 199 2 166 6 271 9 33 5 235 1 236 1 123 3 323 1 83 4 169 1 277 1 239 1 88 1 171 1 
172 1 173 2 138 1 5 2 140 1 288 2 59 2 147 1 62 1 190 1 300 10 255 2 196 2 269 1 199 2 166 7 271 10 33 6 235 1 236 1 123 4 323 1 83 5 169 1 277 1 239 1 88 1 171 1 
172 1 173 2 138 1 5 2 140 1 288 1 59 2 147 1 62 1 190 1 300 7 255 2 196 2 269 1 199 2 166 4 271 7 33 4 235 1 236 1 123 2 83 3 169 1 277 1 239 1 88 1 171 1 
255 1 173 1 172 1 5 1 288 2 199 1 166 3 271 4 59 1 33 3 147 1 235 1 236 1 123 1 323 1 169 1 83 2 300 4 
173 1 196 1 5 1 286 1 269 1 199 1 119 1 271 2 59 1 33 1 147 1 235 1 236 1 21 1 300 2 171 1 
166 1 173 2 271 3 33 2 147 1 235 1 196 1 5 2 236 1 123 1 83 1 88 1 300 3 
255 1 172 1 173 2 138 1 196 1 5 2 140 1 267 1 288 2 199 1 58 1 166 7 271 9 59 1 33 5 147 1 235 1 236 1 123 3 323 1 169 1 83 4 88 1 300 9 
255 1 172 1 173 2 138 1 196 1 5 2 140 1 267 1 288 2 199 1 58 1 166 7 271 9 59 1 33 5 147 1 235 1 236 1 123 3 323 1 169 1 83 4 88 1 300 9 
207 1 
111 1 65 1 48 1 176 1 243 1 266 1 217 1 103 1 84 1 229 1 24 1 
48 1 115 1 176 1 243 1 266 1 201 1 61 1 217 1 103 1 84 2 229 1 24 1 
60 1 84 1 
60 1 84 1 
84 1 
60 1 84 1 
60 1 84 1 
73 1 60 1 68 1 127 1 180 1 84 2 
285 1 207 1 
48 2 176 2 115 1 285 2 266 2 201 1 61 1 151 1 189 1 
304 1 49 1 312 1 
93 1 3 2 95 1 178 1 311 1 313 1 99 1 316 2 31 2 16 1 144 1 293 1 145 1 219 1 132 1 
48 1 115 1 176 1 3 1 95 1 178 1 266 1 311 1 313 1 316 1 31 1 201 1 16 1 293 1 219 1 105 1 109 1 132 1 
282 1 65 1 48 5 115 4 176 5 285 1 25 1 266 5 201 4 61 1 151 1 105 1 109 2 208 1 
201 2 32 1 217 1 48 2 176 2 115 2 276 1 266 2 
201 3 61 1 48 3 176 3 115 3 285 1 266 3 109 1 
201 1 217 1 48 1 176 1 115 1 276 1 266 1 
201 1 217 1 48 1 61 1 176 1 115 1 266 1 151 1 189 1 
48 2 0 1 115 2 176 2 243 1 210 1 266 2 201 2 217 1 61 1 103 1 151 1 84 1 105 1 229 1 109 1 24 1 
65 1 201 1 48 2 176 2 115 1 285 1 266 2 109 1 208 1 
48 1 0 1 115 1 176 1 243 1 266 1 317 1 201 1 217 1 103 1 84 1 105 1 229 1 109 1 24 1 
201 2 304 1 48 2 61 1 176 2 115 2 266 2 151 1 312 1 109 1 
31 1 16 1 293 1 219 1 3 1 95 1 178 1 311 1 313 1 132 1 316 1 
31 1 16 1 195 1 219 1 3 1 95 1 178 1 313 1 23 1 132 1 316 1 
89 1 42 1 135 1 49 2 244 1 184 2 15 1 55 1 220 2 250 1 256 1 303 1 304 2 66 1 312 2 314 1 28 1 76 1 74 1 29 1 204 4 81 1 278 1 170 2 
201 1 32 1 217 1 48 1 176 1 115 1 103 1 266 1 
46 1 86 1 
46 1 86 1 
275 1 35 1 
275 1 35 1 
275 1 35 1 
46 1 272 1 86 1 
46 1 143 1 86 1 
46 2 94 1 79 1 275 1 35 1 86 2 
46 1 272 1 86 1 
46 1 272 1 86 1 
46 1 148 1 86 1 
46 1 148 1 86 1 
46 1 148 1 86 1 
43 1 192 1 201 1 90 1 48 1 176 1 115 1 266 1 224 1 52 1 69 1 84 1 162 1 
192 1 43 2 90 2 321 1 222 1 159 1 224 2 52 2 69 2 84 2 97 1 
255 1 59 1 199 1 
119 1 59 1 199 1 
255 2 119 1 59 3 294 1 306 1 152 1 
255 1 56 1 119 1 59 2 306 1 152 1 
255 1 119 1 59 2 306 2 152 1 
60 1 177 1 84 1 
60 2 80 1 249 1 9 1 84 2 
73 1 60 1 2 1 104 1 68 1 142 1 127 1 84 2 180 1 130 1 215 1 
2 1 68 1 142 1 180 1 215 1 185 1 73 1 104 1 84 1 127 1 130 1 
154 1 207 1 
126 1 
305 1 
95 1 132 1 
183 1 
132 1 
302 1 95 1 39 1 132 1 
256 1 193 1 135 1 240 1 1 1 157 1 6 1 161 2 184 4 74 2 247 1 100 1 204 7 278 3 22 1 170 3 253 1 
256 1 193 1 135 1 240 1 1 1 157 1 6 1 161 2 184 4 74 2 247 1 100 1 204 7 278 3 22 1 170 3 253 1 
256 1 193 1 135 1 240 1 1 1 157 1 6 1 161 2 184 4 74 2 247 1 100 1 204 7 205 1 278 3 22 1 170 3 253 1 
89 3 240 5 135 4 47 1 1 2 6 2 179 1 184 16 55 1 247 1 100 2 101 1 102 3 220 2 296 1 22 1 253 1 193 2 256 4 157 1 117 3 314 1 161 3 28 1 74 5 76 1 30 1 202 4 121 1 203 1 204 31 81 3 278 10 170 15 
135 1 240 1 1 1 51 1 6 1 287 1 184 5 55 2 100 1 247 1 220 4 296 1 22 1 256 1 193 1 157 1 314 2 161 2 28 2 76 2 74 3 204 9 278 4 170 4 
173 1 134 1 3 1 5 1 178 1 11 1 59 2 294 1 147 1 219 1 297 1 226 1 251 1 300 2 255 1 260 1 263 1 196 1 265 1 232 1 199 1 316 1 119 1 166 1 31 1 271 2 33 1 234 1 235 1 236 1 
173 1 134 1 3 1 5 1 96 1 178 1 11 1 59 2 294 1 147 1 219 1 223 1 297 1 226 1 251 1 300 3 255 1 260 1 263 1 196 1 199 1 316 1 119 1 31 1 166 2 271 3 33 1 234 1 235 1 36 1 
134 1 3 1 96 1 178 1 11 1 59 2 294 1 147 1 219 1 223 1 297 1 226 1 251 1 300 2 255 1 263 1 196 1 316 1 199 1 119 1 31 1 166 2 271 2 33 1 235 1 
173 1 134 2 196 2 3 1 5 1 70 1 181 1 72 1 316 1 31 1 271 1 16 1 322 1 36 1 238 1 226 2 280 1 251 2 132 1 300 1 
173 1 134 1 3 1 5 1 178 1 11 1 59 2 294 1 219 1 223 1 297 1 226 1 251 1 300 1 255 1 260 1 263 1 196 1 265 1 199 1 316 1 119 1 31 1 271 1 234 1 236 1 
298 1 
73 1 31 1 16 1 175 1 2 1 3 1 4 1 68 1 127 1 84 1 107 1 130 1 316 1 
111 1 65 1 44 1 48 1 231 1 176 1 156 1 264 1 243 1 266 1 217 1 78 1 103 1 20 1 84 2 229 1 24 1 
111 1 65 1 44 1 48 1 231 1 176 1 156 1 243 1 266 1 213 1 217 1 78 1 103 1 20 1 84 2 229 1 24 1 
111 1 65 1 44 1 48 1 231 1 176 1 156 1 264 1 243 1 266 1 217 1 78 1 103 1 20 1 84 2 299 1 229 1 24 1 
84 1 
133 1 241 1 44 1 48 1 176 1 243 1 217 1 20 1 103 1 107 1 229 1 24 1 111 1 65 1 231 1 156 1 68 1 266 1 27 1 73 1 77 1 165 1 78 1 127 1 84 2 130 1 324 1 
133 1 241 1 44 1 48 1 176 1 243 1 217 1 20 1 103 1 107 1 108 1 229 1 24 1 111 1 65 1 155 1 231 1 156 1 266 1 68 1 27 1 73 1 77 1 165 1 78 1 84 2 127 1 130 1 131 1 324 1 
133 1 241 1 44 1 48 1 176 1 243 1 217 1 20 1 103 1 107 1 108 1 229 1 24 1 111 1 65 1 155 1 231 1 156 1 266 1 68 1 27 1 73 1 77 1 165 1 78 1 84 2 127 1 130 1 131 1 324 1 
133 1 241 1 44 1 48 1 176 1 243 1 217 1 20 1 103 1 107 1 108 1 229 1 24 1 301 1 111 1 65 1 230 1 259 1 231 1 156 1 266 1 68 1 73 1 77 1 165 1 78 1 84 2 127 1 130 1 85 1 
111 1 65 1 44 1 48 1 231 1 176 1 156 1 264 1 243 1 266 1 217 1 78 1 248 1 103 1 20 1 84 2 299 1 229 1 24 1 
111 1 65 1 44 1 48 1 231 1 176 1 156 1 264 1 243 1 266 1 217 1 78 1 248 1 103 1 20 1 84 2 299 1 229 1 24 1 
133 1 241 1 44 1 48 1 176 1 243 1 217 1 20 1 103 1 107 1 229 1 24 1 301 1 111 1 65 1 230 1 231 1 156 1 68 1 266 1 73 1 77 1 165 1 78 1 127 1 84 2 130 1 
135 1 1 1 49 1 285 2 6 1 15 1 184 3 55 1 247 1 220 2 250 1 22 1 256 1 304 1 157 1 312 1 314 1 161 1 28 1 76 1 74 2 29 1 204 6 278 2 207 1 170 3 
89 3 240 1 135 1 209 1 49 13 285 1 139 1 179 1 182 1 98 1 15 1 184 10 55 2 102 3 220 4 106 1 256 3 304 13 262 1 312 4 117 3 314 2 74 1 28 2 76 2 29 2 202 4 120 1 204 17 203 2 81 1 278 2 170 7 
93 1 48 1 174 1 176 1 3 1 95 1 178 1 15 1 98 1 184 1 55 1 16 1 293 1 187 1 219 1 220 2 105 1 109 1 262 1 115 1 266 1 311 1 312 1 313 1 314 1 315 1 316 1 76 1 28 1 31 1 29 1 201 1 120 1 204 2 132 1 170 1 
48 1 50 1 176 1 3 1 95 1 178 1 15 1 98 1 55 1 16 1 292 1 293 1 219 1 220 2 105 1 109 1 262 1 115 1 266 1 311 1 313 1 314 1 316 1 164 1 76 1 28 1 29 1 31 1 201 1 204 1 122 1 132 1 170 1 
3 2 314 1 72 1 99 1 98 1 184 1 15 1 316 2 57 1 76 1 55 1 28 1 29 1 31 2 16 1 120 1 220 2 204 2 322 1 132 1 170 1 252 1 
89 1 135 1 48 1 49 1 176 1 15 1 184 1 55 1 61 1 220 2 151 1 254 1 256 1 304 1 262 1 115 1 266 1 312 1 117 1 314 1 74 1 28 1 76 1 29 1 201 1 204 3 81 1 278 1 170 2 
89 1 256 1 240 1 304 1 49 1 66 1 312 1 314 1 15 1 184 2 76 1 55 1 28 1 29 1 220 2 204 2 250 1 278 1 
42 1 135 1 304 1 49 1 312 1 314 1 15 1 74 1 76 1 55 1 28 1 29 1 220 2 204 2 250 1 81 1 278 1 170 2 
89 1 256 1 135 1 240 1 304 2 49 2 312 2 117 1 314 1 15 1 184 2 74 1 76 1 55 1 28 1 29 1 220 2 204 4 81 1 250 1 278 2 170 2 
89 1 256 1 240 1 304 1 49 1 66 1 312 1 314 1 15 1 184 2 76 1 55 1 28 1 29 1 220 2 204 2 278 1 252 1 
42 1 135 1 304 1 49 1 312 1 314 1 15 1 74 1 76 1 55 1 28 1 29 1 220 2 204 2 81 1 278 1 252 1 170 2 
89 1 256 1 135 1 240 1 304 2 49 2 312 2 117 1 314 1 15 1 184 2 74 1 76 1 55 1 28 1 29 1 220 2 204 4 81 1 278 2 170 2 252 1 
89 1 256 1 135 1 240 1 304 2 49 2 312 2 117 1 314 1 15 1 184 2 74 1 76 1 55 1 28 1 29 1 220 2 204 4 81 1 278 2 170 2 
31 1 16 1 293 1 219 1 3 1 95 1 178 1 122 1 311 1 313 1 132 1 316 1 
31 1 257 1 16 1 195 1 219 1 3 1 95 1 178 1 313 1 23 1 132 1 316 1 
89 1 256 1 135 1 240 1 304 2 49 2 262 1 312 2 117 1 314 1 15 1 184 2 74 1 76 1 55 1 28 1 29 1 220 2 204 4 81 1 278 2 170 2 
3 1 178 1 95 1 311 1 232 1 313 1 316 1 164 1 31 1 293 1 219 1 122 1 132 1 
89 1 135 1 240 1 48 1 176 1 49 1 15 1 184 2 55 1 61 1 220 2 149 1 151 1 256 1 304 1 262 1 115 1 266 1 312 1 117 1 314 1 28 1 76 1 29 1 201 1 204 3 81 1 278 1 170 1 
41 2 89 3 240 3 135 3 51 1 179 1 141 2 245 1 289 1 184 9 55 2 102 1 220 4 256 3 309 1 117 3 198 1 314 2 74 3 163 1 28 2 76 2 202 2 204 19 203 1 81 3 206 1 278 6 40 1 170 10 
41 4 89 3 240 2 45 1 135 2 51 1 179 2 141 1 13 1 289 1 184 14 55 3 17 1 102 2 220 6 296 2 256 3 309 2 117 3 314 3 74 2 163 1 28 3 76 3 75 1 202 2 204 26 81 2 206 2 278 4 128 1 40 1 279 1 170 12 
41 4 89 5 45 1 240 4 135 5 1 1 51 1 6 1 179 3 141 1 245 1 13 1 289 1 184 22 55 3 247 1 17 1 102 3 220 6 296 1 22 1 256 6 157 1 309 1 117 5 161 1 314 3 75 1 74 4 163 1 28 3 76 3 202 5 204 44 203 2 82 1 81 4 206 2 128 1 278 8 40 1 279 1 170 22 
41 4 89 5 45 1 240 3 135 5 1 1 51 1 6 1 179 3 141 1 245 1 13 1 289 1 184 22 55 4 247 1 17 1 102 3 220 8 296 2 22 1 256 6 157 1 309 1 117 5 161 1 314 4 75 1 74 5 163 1 28 4 76 4 202 5 204 43 203 2 82 1 81 4 206 2 128 1 278 8 40 1 279 1 170 21 
41 4 89 7 45 1 240 7 135 8 209 2 1 1 51 1 6 1 179 2 141 1 13 1 289 1 184 27 55 2 247 1 17 1 102 4 220 4 296 1 22 1 256 8 157 1 309 1 117 7 161 1 314 2 75 1 74 7 163 1 28 2 76 2 202 4 204 52 203 2 81 7 206 1 128 1 278 14 40 1 279 1 170 25 
43 1 90 1 307 1 224 1 52 1 160 1 
320 1 
43 1 291 1 90 1 224 1 52 1 
8 1 
38 1 
43 1 192 1 90 1 321 1 222 1 159 1 224 1 52 1 69 2 84 1 97 1 
43 1 192 1 90 1 321 1 222 1 159 1 224 1 52 1 69 2 84 1 97 1 
43 1 192 1 90 1 321 1 222 1 159 1 224 1 52 1 69 2 84 1 97 1 
8 1 
8 1 
38 1 
38 1 
67 1 228 1 
43 1 90 1 60 1 19 1 159 1 224 1 52 1 69 1 84 1 97 1 162 1 
283 1 48 2 176 2 3 2 15 1 184 1 98 1 99 2 55 1 57 1 188 1 220 2 18 1 63 1 262 1 266 2 314 1 200 1 316 2 76 1 28 1 31 2 29 1 120 1 274 1 204 2 170 1 
255 1 134 1 114 1 263 1 3 2 178 1 232 1 199 1 316 2 119 1 31 2 59 2 294 1 234 1 219 1 150 1 223 1 297 1 129 1 
255 1 153 1 134 1 263 1 3 1 178 1 199 1 316 1 119 1 31 1 59 2 294 1 234 1 219 1 223 1 297 1 129 1 
134 1 114 1 137 1 3 1 316 1 72 1 31 1 16 1 322 1 280 1 132 1 
255 1 134 1 114 1 263 1 3 1 178 1 199 1 316 1 119 1 31 1 59 2 294 1 234 1 219 1 150 1 223 1 297 1 129 1 
281 1 
165 1 168 1 227 1 207 1 
73 1 165 1 68 1 127 1 27 1 107 1 130 1 324 1 
112 1 302 1 113 1 3 1 95 1 68 1 316 1 73 1 31 1 16 1 127 1 107 1 132 1 
73 1 165 1 202 1 102 1 179 1 68 1 127 1 107 1 130 1 13 1 
256 2 135 1 1 1 242 2 197 1 6 1 68 1 14 1 73 1 165 2 247 1 84 1 127 1 107 1 130 1 131 1 
73 1 165 1 68 1 127 1 227 1 107 1 
89 1 165 1 256 1 135 1 81 1 117 1 130 1 
31 1 16 1 3 1 316 1 
73 1 165 1 273 1 2 1 68 1 127 1 107 1 130 1 
90 1 10 1 224 1 
90 1 91 1 92 1 224 1 228 1 
90 1 10 1 224 1 
90 1 10 1 224 1 
90 1 124 1 224 1 
90 1 124 1 224 1 
90 1 124 1 224 1 
90 1 224 1 
46 1 86 1 
256 1 135 1 240 1 1 1 157 1 6 1 161 1 314 2 184 4 74 2 76 2 55 2 28 2 247 1 220 4 204 8 296 1 278 3 22 1 170 4 
256 1 135 1 1 1 157 1 6 1 161 1 184 3 74 2 247 1 204 6 22 1 278 2 207 1 170 3 
89 1 256 1 135 1 240 1 116 1 117 1 314 1 184 2 74 1 76 1 55 1 28 1 220 2 204 4 81 1 278 2 170 2 
89 1 256 1 135 1 240 1 179 1 117 1 184 3 74 1 202 2 102 1 204 7 203 1 81 1 278 2 170 4 
89 2 240 4 135 3 209 1 1 2 6 2 139 1 184 11 55 2 247 1 102 2 220 4 296 2 22 1 256 3 157 1 117 2 233 1 161 1 314 2 74 5 76 2 28 2 202 2 203 1 204 23 81 2 278 9 170 12 
202 1 204 1 170 1 
102 1 204 1 184 1 
89 1 256 1 240 1 135 1 116 1 53 1 117 1 314 1 184 3 28 1 55 1 76 1 74 2 220 2 204 6 81 1 278 3 170 3 
89 2 240 1 135 2 45 1 51 1 179 1 13 1 184 6 55 1 102 1 220 2 256 2 117 2 314 1 28 1 76 1 75 1 74 1 202 1 204 12 81 2 128 1 278 2 279 1 170 6 
256 1 135 1 240 1 1 1 6 1 184 3 74 1 247 1 204 6 278 2 170 3 
240 1 1 1 157 1 6 1 233 1 314 1 184 1 74 1 76 1 55 1 28 1 220 2 204 3 296 1 278 2 22 1 170 2 
256 2 240 2 135 2 1 2 51 1 197 1 6 2 314 1 184 5 28 1 55 1 76 1 74 3 247 1 220 2 204 10 278 5 170 5 
89 1 256 1 240 1 51 1 314 1 184 2 76 1 55 1 28 1 220 2 204 2 278 1 
89 1 256 1 135 1 240 1 51 1 117 1 314 1 184 2 74 1 76 1 55 1 28 1 220 2 204 4 81 1 278 2 170 2 
240 1 1 1 51 1 6 1 245 1 233 1 314 3 184 1 76 3 55 3 28 3 74 1 220 6 204 3 296 1 278 2 170 2 
89 3 240 5 135 5 1 3 51 1 6 3 179 1 245 1 184 16 55 5 247 2 101 1 102 3 220 10 296 2 22 1 256 5 157 1 116 1 117 3 233 1 161 1 314 5 28 5 76 5 74 7 30 1 202 4 121 1 204 34 203 1 81 3 278 12 170 18 
89 1 135 1 1 1 51 1 6 1 179 1 13 1 184 6 55 1 247 1 102 1 220 2 22 1 256 2 157 1 117 1 161 1 314 1 74 2 28 1 76 1 202 2 204 11 203 1 278 2 170 5 
89 1 135 1 240 1 1 1 51 1 6 1 179 1 13 1 184 6 55 2 247 1 102 1 220 4 22 1 256 2 157 1 116 1 117 1 161 1 314 2 74 2 28 2 76 2 202 2 204 11 203 1 278 3 170 5 
89 2 240 1 45 1 135 3 1 1 51 1 6 1 179 1 13 1 184 9 55 3 247 1 102 1 220 6 296 1 22 1 256 3 157 1 116 1 117 2 161 1 314 3 28 3 76 3 75 1 74 3 202 1 204 19 81 2 128 1 278 4 279 1 170 10 
89 2 240 2 135 2 45 1 1 1 51 1 6 1 179 1 13 1 184 10 55 3 247 1 102 1 220 6 296 1 22 1 256 3 157 1 116 1 117 2 161 1 314 3 28 3 76 3 75 1 74 3 202 1 204 17 81 1 128 1 278 5 279 1 170 7 
89 1 135 1 1 1 51 1 6 1 179 1 13 1 184 6 55 1 247 1 102 1 220 2 22 1 256 2 157 1 117 1 161 1 314 1 74 2 28 1 76 1 202 2 204 11 203 1 278 2 170 5 
89 2 240 1 135 2 45 1 51 1 179 1 13 1 184 6 55 1 102 1 220 2 256 2 117 2 314 1 28 1 76 1 75 1 74 1 202 1 204 12 81 2 128 1 278 2 279 1 170 6 
89 2 240 2 45 1 135 2 1 1 51 1 6 1 179 1 13 1 184 10 55 4 247 1 102 1 220 8 296 2 22 1 256 3 157 1 116 1 117 2 161 1 314 4 28 4 76 4 75 1 74 3 202 1 204 18 81 1 128 1 278 5 279 1 170 8 
89 3 240 3 45 1 135 2 51 1 179 1 245 1 13 1 184 9 55 4 102 1 220 8 296 2 256 3 117 3 314 4 28 4 76 4 75 1 74 3 202 1 204 16 81 2 128 1 278 6 279 1 170 7 
256 1 135 1 240 3 1 3 157 1 6 3 184 3 74 3 247 1 204 7 22 2 278 6 170 4 
89 2 240 1 45 1 135 2 1 1 51 1 6 1 179 1 245 1 13 1 184 10 55 4 247 1 102 1 220 8 296 2 22 1 256 3 157 1 117 2 161 1 314 4 28 4 76 4 75 1 74 3 202 1 204 18 81 1 128 1 278 4 279 1 170 8 
65 1 48 1 176 1 285 1 266 1 71 1 208 1 
65 1 48 1 176 1 285 1 266 1 310 1 54 1 71 1 146 1 295 1 125 1 208 1 
31 1 16 1 3 1 322 1 207 1 132 1 72 1 316 1 
48 1 115 1 176 1 3 1 95 1 178 1 266 1 313 1 316 1 31 1 201 1 16 1 293 1 219 1 109 1 132 1 
48 1 115 1 176 1 3 1 95 1 178 1 266 1 313 1 316 1 186 1 31 1 201 1 293 1 219 1 109 1 132 1 
195 1 48 1 115 1 176 1 3 1 95 1 178 1 266 1 313 1 316 1 186 1 31 1 201 1 219 1 109 1 132 1 
186 1 216 1 31 1 3 1 126 1 84 1 316 1 
186 1 31 1 3 1 158 1 126 1 84 1 316 1 
31 1 219 1 261 1 3 1 178 1 316 1 
302 1 31 1 16 1 167 1 3 1 95 1 132 1 316 1 
48 1 176 1 50 1 3 1 95 1 178 1 15 1 55 1 293 1 219 1 220 2 63 1 109 1 262 1 115 1 266 1 311 1 232 1 313 1 314 1 316 1 76 1 28 1 164 1 29 1 31 1 201 1 122 1 132 1 
60 1 84 1 
112 1 302 1 31 1 261 1 3 1 95 1 132 1 316 1 
31 2 16 1 3 2 322 1 232 1 132 1 72 1 316 2 
31 1 319 1 34 1 3 1 95 1 246 1 132 1 316 1 
119 1 31 1 16 1 59 1 219 1 3 1 178 1 297 1 199 1 316 1 
31 2 274 1 3 2 223 1 232 1 200 1 316 2 
31 2 16 1 274 1 3 2 7 1 232 1 132 1 316 2 
31 2 16 1 274 1 3 2 12 1 232 1 132 1 316 2 
195 1 48 1 115 1 176 1 3 1 95 1 178 1 266 1 313 1 316 1 31 1 201 1 16 1 219 1 109 1 132 1 
186 1 302 1 31 1 167 1 3 1 95 1 132 1 316 1 
290 1 258 1 194 1 285 1 64 1 
194 1 258 2 284 1 0 1 136 1 285 1 243 1 268 1 290 2 60 1 217 1 103 1 64 2 84 2 229 1 24 1 
283 1 258 1 194 1 48 1 176 1 266 1 290 1 188 1 18 1 
194 1 136 1 268 1 
33 1 147 1 235 1 207 1 
173 1 271 1 33 1 147 1 235 1 5 1 300 1 
196 1 226 1 300 1 
173 1 271 3 318 1 33 1 147 1 235 1 5 1 236 1 212 1 237 1 269 2 300 3 
166 1 173 1 271 2 33 1 147 1 235 1 5 1 288 1 300 2 
255 1 172 1 173 1 271 1 59 1 33 1 5 1 236 1 83 1 199 1 300 1 
173 1 271 1 33 1 147 1 5 1 236 1 300 1 
173 1 271 1 147 2 235 1 5 1 236 1 300 1 
173 2 271 2 33 1 147 1 5 2 236 1 37 1 26 1 87 1 300 2 
173 1 138 1 5 1 140 1 166 2 271 3 33 2 147 1 235 1 236 1 123 1 83 1 300 3 
255 1 173 1 5 1 118 1 199 1 119 1 166 1 271 2 59 2 33 1 294 1 147 1 235 1 236 1 300 2 
166 2 173 2 271 4 33 2 147 1 235 1 5 2 236 1 123 1 83 1 323 1 288 1 300 4 
173 1 271 1 33 1 147 1 235 1 5 1 236 1 300 1 
173 1 5 1 212 1 269 1 166 2 271 4 33 3 147 2 235 2 123 1 83 1 237 1 110 1 300 4 
166 1 173 1 271 2 33 1 147 1 235 1 221 1 5 1 236 1 267 1 225 1 300 2 
173 1 5 1 212 2 269 2 270 1 271 3 33 1 147 1 235 1 236 1 237 1 300 3 
33 2 308 1 211 2 214 1 
191 1 173 1 271 1 5 1 236 1 300 1 
166 1 173 1 271 2 33 1 147 1 235 1 5 1 236 1 140 1 300 2 
218 1 
173 1 271 1 33 1 147 1 235 1 5 1 236 1 300 1 
173 1 5 1 140 1 269 1 166 1 271 3 33 1 147 1 235 1 236 1 300 3 
33 1 123 1 83 1 110 1 
33 1 147 1 

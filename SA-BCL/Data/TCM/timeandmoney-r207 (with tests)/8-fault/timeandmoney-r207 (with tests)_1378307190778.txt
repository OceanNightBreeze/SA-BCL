#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 186 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 245 193 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 245 193 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 245 193 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 245 193 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 245 193 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 245 193 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 245 193 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 245 193 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 245 193 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 245 193 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 245 193 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 245 193 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11529 | = null

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
310 9 312 2 256 5 20 1 225 1 337 2 285 2 228 1 4 2 230 1 290 1 154 1 321 2 263 1 239 1 347 1 268 6 302 1 240 1 348 2 350 1 274 1 56 3 255 1 242 9 277 2 79 4 196 1 
310 9 312 2 256 5 20 1 225 1 337 2 285 2 228 1 4 2 230 1 290 1 154 1 321 2 263 1 239 1 347 1 268 6 302 1 240 1 348 2 350 1 274 1 56 3 255 1 242 9 277 2 79 4 196 1 
310 10 312 2 256 6 20 1 225 1 337 2 285 2 228 1 4 2 230 1 290 1 154 1 321 2 263 1 239 1 347 1 268 7 302 1 240 1 348 2 350 1 274 1 56 4 255 1 242 10 277 2 79 5 196 1 
310 7 312 2 256 4 20 1 337 2 285 1 228 1 4 2 230 1 290 1 154 1 321 2 263 1 239 1 347 1 268 4 302 1 240 1 348 2 350 1 274 1 56 2 255 1 242 7 277 2 79 3 196 1 
310 4 312 1 256 3 268 3 20 1 302 1 240 1 225 1 337 1 285 2 348 1 4 1 230 1 56 1 242 4 277 1 263 1 79 2 
310 2 31 1 312 1 256 1 240 1 337 1 4 1 6 1 230 1 242 2 112 1 255 1 277 1 321 1 263 1 196 1 
310 3 256 2 268 1 240 1 4 2 230 1 56 1 242 3 277 2 154 1 321 1 263 1 79 1 
310 9 312 1 256 5 20 1 337 1 225 1 285 2 4 2 230 1 154 1 321 1 263 1 268 7 302 1 240 1 76 1 348 1 350 1 274 1 56 3 307 1 242 9 277 2 79 4 
310 9 312 1 256 5 20 1 337 1 225 1 285 2 4 2 230 1 154 1 321 1 263 1 268 7 302 1 240 1 76 1 348 1 350 1 274 1 56 3 307 1 242 9 277 2 79 4 
64 1 3 1 18 1 
346 1 25 2 18 1 
137 2 222 2 102 2 42 1 70 2 153 1 178 2 180 2 
80 1 19 2 222 2 42 1 83 1 84 2 248 1 24 1 27 1 258 1 150 1 209 1 131 1 70 2 153 1 178 3 72 1 297 1 180 2 51 1 264 1 74 1 137 3 181 1 114 1 34 2 303 1 77 2 272 1 11 1 117 1 217 1 100 1 102 2 57 1 332 1 61 2 
63 1 137 1 222 1 102 1 283 1 203 1 70 1 153 1 178 1 180 1 
137 1 283 1 335 1 115 1 184 1 340 1 3 1 352 1 102 1 234 1 194 1 178 1 322 1 18 1 
222 1 137 1 283 1 335 1 184 1 340 1 3 1 352 2 102 1 194 1 70 1 178 1 322 2 18 1 180 1 
101 1 352 1 71 1 322 1 262 1 
352 2 145 1 246 1 3 1 71 1 322 2 18 1 262 1 
352 1 71 1 322 1 
63 1 222 1 137 1 283 1 203 1 352 1 191 1 102 1 153 1 70 1 178 1 322 1 262 1 180 1 
18 1 
352 2 145 1 3 1 71 1 86 1 322 2 18 1 262 1 
63 1 222 1 283 1 145 1 22 4 203 1 339 1 315 1 23 1 3 2 226 1 205 2 126 2 208 1 70 1 153 1 178 1 71 2 322 5 262 2 180 1 30 5 213 1 137 1 300 1 215 1 75 2 53 1 78 2 352 5 191 1 121 2 102 1 36 2 221 1 195 1 356 1 18 2 
42 1 64 1 
137 2 222 1 283 1 42 1 85 1 28 1 102 2 16 1 70 1 178 2 180 1 
149 1 14 1 282 1 
264 1 51 1 19 1 137 1 42 1 84 1 338 1 77 1 24 1 27 1 258 1 150 1 131 1 178 1 332 1 72 1 
51 1 264 1 32 1 19 1 222 1 137 2 84 1 77 1 24 1 14 1 27 1 258 1 102 1 150 1 131 1 332 1 178 2 91 1 72 1 180 1 
323 1 125 1 32 1 222 4 137 5 42 1 43 1 115 1 102 5 16 1 70 1 178 5 91 2 180 4 
137 2 222 2 102 2 283 1 203 1 178 2 109 1 180 2 
137 3 222 3 102 3 42 1 70 1 178 3 91 1 180 3 
137 1 222 1 102 1 283 1 203 1 178 1 180 1 
222 1 137 1 283 1 85 1 102 1 16 1 70 1 178 1 180 1 
80 1 19 1 222 3 42 1 283 1 335 1 84 1 340 1 248 1 24 1 88 1 27 1 258 1 150 1 209 1 131 1 70 2 153 1 178 4 91 1 72 1 322 1 180 3 51 1 264 1 74 1 32 1 137 4 114 1 34 1 184 1 35 1 77 1 272 1 117 1 217 1 100 1 352 1 102 3 57 1 194 1 16 1 332 1 61 2 
323 1 137 2 222 1 102 2 42 1 115 1 178 2 91 1 180 1 
32 1 222 3 137 3 283 1 335 1 184 1 340 1 88 1 352 1 102 3 194 1 70 1 16 1 178 3 91 2 322 1 18 1 180 3 296 1 
222 2 137 2 14 1 102 2 16 1 70 1 178 2 91 1 282 1 180 2 
264 1 51 1 19 1 137 1 42 1 84 1 77 1 24 1 27 1 258 1 150 1 131 1 178 1 332 1 72 1 
157 1 264 1 51 1 19 1 137 1 267 1 42 1 84 1 77 1 24 1 258 1 131 1 178 1 332 1 72 1 
80 1 333 1 171 1 172 1 318 1 149 2 111 1 344 1 238 1 74 1 114 1 34 4 303 2 272 1 78 1 273 1 14 2 188 1 117 1 217 1 36 1 57 2 61 2 282 2 
137 1 222 1 102 1 283 1 340 1 178 1 109 1 180 1 
73 1 289 1 
73 1 289 1 
166 1 355 1 
166 1 355 1 
166 1 355 1 
73 1 7 1 289 1 
73 1 7 1 289 1 
73 1 289 1 168 1 
73 2 289 2 166 1 355 1 44 1 133 1 
73 1 7 1 289 1 
73 1 289 1 116 1 
73 1 289 1 116 1 
73 1 289 1 116 1 
222 2 42 1 200 1 316 1 174 1 110 1 127 1 289 1 90 1 178 2 93 1 322 1 345 1 180 2 73 1 137 2 118 1 163 1 352 1 55 1 102 2 281 1 106 1 168 1 
197 1 73 2 44 1 200 2 326 1 185 1 118 2 287 1 163 3 174 2 352 2 55 2 289 2 275 1 322 2 106 1 18 1 211 2 62 1 
312 1 337 1 348 1 
312 1 112 1 337 1 
206 1 312 3 342 1 112 1 348 2 12 1 
206 1 312 2 112 1 348 1 12 1 349 1 
206 2 312 2 112 1 348 1 12 1 
333 1 21 1 145 1 202 1 22 3 146 1 3 1 25 3 226 1 318 1 205 1 110 1 259 2 127 1 126 1 90 1 261 2 71 1 322 5 262 4 30 2 346 1 241 1 78 1 328 1 142 1 352 5 330 1 121 1 36 1 59 2 18 2 
352 1 158 1 322 1 262 1 
333 1 21 1 22 3 315 1 3 1 25 4 205 1 318 1 259 1 126 1 90 1 261 2 322 3 262 2 30 2 346 2 241 1 78 1 328 1 352 3 142 1 330 1 121 1 36 1 59 2 18 3 
333 2 21 1 22 5 315 1 3 1 25 7 205 1 318 2 259 2 126 1 90 2 292 1 261 4 322 4 262 3 30 4 346 3 301 1 241 1 78 2 328 1 352 4 142 2 330 1 121 1 36 2 280 1 59 4 18 4 
325 1 64 1 332 1 
54 1 332 1 
134 1 
51 1 131 1 332 1 
229 1 332 1 
51 1 332 1 
51 1 325 2 192 1 29 1 131 1 332 3 
213 1 300 1 215 1 201 1 34 7 303 4 172 2 78 1 187 1 26 1 111 3 128 1 354 1 36 1 57 3 17 2 136 1 
213 1 300 1 215 1 201 1 34 7 303 4 172 2 78 1 187 1 26 1 111 3 128 1 354 1 36 1 57 3 17 2 136 1 
213 1 300 1 215 1 201 1 34 7 303 4 172 2 78 1 148 1 187 1 26 1 111 3 128 1 354 1 36 1 57 3 17 2 136 1 
80 1 333 3 169 3 313 1 201 2 172 5 318 3 26 5 111 10 128 1 260 1 136 1 213 2 114 1 33 1 300 1 215 2 34 31 303 16 78 4 117 1 187 2 217 1 142 3 354 1 36 4 57 15 103 1 144 1 278 1 17 3 39 4 123 1 61 2 
80 1 217 1 114 1 104 1 201 1 34 1 17 1 303 1 186 1 117 1 187 1 61 2 
81 1 310 2 19 1 312 2 256 1 84 1 314 1 337 1 66 1 4 1 230 1 342 1 112 1 72 1 48 1 321 1 263 1 264 1 268 1 269 1 97 1 240 1 348 1 52 1 77 1 251 1 242 2 277 1 309 1 243 1 
81 1 310 3 19 1 312 2 256 1 84 1 337 1 66 1 319 1 4 1 342 1 112 1 72 1 48 1 321 1 263 1 264 1 268 2 97 1 240 1 348 1 52 1 77 1 251 1 216 1 242 3 277 1 60 1 309 1 243 1 
81 1 310 2 19 1 312 2 256 1 84 1 337 1 66 1 319 1 342 1 112 1 72 1 321 1 48 1 263 1 264 1 268 2 97 1 240 1 348 1 77 1 242 2 60 1 309 1 243 1 
264 1 51 1 81 2 310 1 19 1 324 1 299 1 84 1 77 1 304 1 161 1 216 1 4 1 258 1 242 1 277 1 332 1 113 1 72 1 321 2 48 2 49 1 243 2 
81 1 310 1 19 1 312 2 84 1 314 1 337 1 66 1 319 1 4 1 230 1 342 1 112 1 72 1 48 1 321 1 264 1 97 1 348 1 52 1 77 1 251 1 242 1 277 1 309 1 243 1 
293 1 
19 2 283 1 335 1 84 2 145 1 245 1 22 1 340 1 226 1 87 1 205 1 258 2 126 1 320 1 234 1 178 1 72 1 71 2 210 1 322 3 264 1 30 1 51 1 137 1 299 1 183 1 184 1 115 1 141 1 77 2 304 1 329 1 352 3 330 1 121 1 102 1 194 1 193 1 332 1 40 1 
137 1 283 1 335 1 245 1 115 1 184 1 340 1 141 1 87 1 352 2 329 1 102 1 320 1 194 1 193 1 234 1 178 1 322 2 
137 1 283 1 335 1 245 1 115 1 184 1 340 1 141 1 87 1 352 2 329 1 102 1 320 1 194 1 193 1 234 1 178 1 322 2 
137 1 283 1 335 1 245 1 115 1 184 1 340 1 141 1 87 1 352 2 329 1 102 1 320 1 194 1 193 1 234 1 178 1 322 2 
137 1 283 1 335 1 145 1 245 1 184 1 115 1 340 1 141 1 86 1 87 1 352 3 329 1 102 1 320 1 194 1 193 1 234 1 178 1 71 1 322 3 
137 1 283 1 335 1 245 1 184 1 115 1 340 1 141 1 226 1 87 1 205 1 352 2 329 1 126 1 121 1 102 1 320 1 194 1 193 1 234 1 178 1 322 2 
137 1 283 1 335 1 245 1 115 1 184 1 340 1 141 1 87 1 352 2 329 1 102 1 320 1 194 1 193 1 234 1 178 1 322 2 
137 1 283 1 335 1 245 1 115 1 184 1 340 1 141 1 87 1 352 2 329 1 102 1 320 1 194 1 193 1 234 1 178 1 322 2 
137 1 283 1 335 1 245 1 115 1 184 1 340 1 141 1 87 1 352 2 329 1 102 1 320 1 194 1 193 1 234 1 178 1 322 2 
137 1 283 1 335 1 245 1 115 1 184 1 340 1 141 1 87 1 352 2 329 1 102 1 320 1 194 1 193 1 234 1 178 1 322 2 
137 1 283 1 335 1 245 1 115 1 184 1 340 1 141 1 87 1 352 2 329 1 102 1 320 1 194 1 193 1 234 1 178 1 322 2 
137 1 283 1 335 1 245 1 184 1 115 1 340 1 141 1 226 1 87 1 205 1 352 2 329 1 126 1 121 1 102 1 320 1 194 1 193 1 234 1 178 1 322 2 
80 1 64 1 42 2 172 2 149 1 111 2 136 1 74 1 213 1 114 1 300 1 215 1 34 6 303 3 272 1 14 1 273 1 78 1 117 1 217 1 354 1 36 1 57 3 17 1 282 1 61 2 
80 2 333 1 313 1 42 1 169 3 172 1 173 1 26 1 318 2 149 11 111 2 341 1 231 1 209 1 74 1 181 1 114 2 33 1 34 14 303 8 272 2 14 11 78 1 117 2 217 2 142 2 36 2 253 1 57 6 39 3 124 1 61 4 282 4 
80 1 19 1 222 1 82 1 42 1 84 1 338 1 24 1 27 1 258 1 341 1 150 1 176 1 209 1 131 1 178 2 91 1 72 1 180 1 51 1 264 1 74 1 32 1 266 1 137 2 114 1 181 1 34 2 303 1 77 1 272 1 117 1 217 1 102 1 57 1 332 1 282 1 61 2 
80 3 222 1 42 2 84 3 172 4 319 1 318 2 258 1 131 2 178 3 91 1 94 2 136 1 180 1 264 2 51 2 137 3 181 1 272 3 14 7 100 2 142 2 102 1 15 1 57 10 17 1 332 2 107 1 61 6 282 7 19 3 333 2 24 2 27 2 26 4 149 7 111 8 341 1 150 2 209 1 68 2 72 2 295 2 213 1 32 1 74 3 114 3 300 1 215 1 34 20 303 10 77 3 78 3 117 3 217 3 354 1 252 1 36 3 308 2 
80 2 19 8 222 1 84 8 286 1 319 1 257 1 258 2 209 1 233 1 178 1 91 1 72 2 180 1 297 2 265 1 264 2 51 2 74 2 137 1 9 1 114 2 181 1 299 1 269 1 34 2 303 1 77 7 272 2 304 1 273 1 117 2 217 2 164 1 120 1 102 1 57 1 332 3 61 4 
80 1 222 1 333 1 172 1 318 1 149 1 111 1 341 1 69 1 70 1 178 1 180 1 74 1 137 1 114 1 34 3 303 1 272 1 14 1 78 1 117 1 217 1 142 1 102 1 36 1 57 2 16 1 282 1 61 2 
80 1 74 1 114 1 34 2 303 2 272 1 14 1 273 1 117 1 26 1 318 1 149 1 111 1 217 1 36 1 344 1 282 1 61 2 
80 1 74 1 114 1 333 1 34 2 172 1 272 1 14 1 273 1 78 1 117 1 149 1 111 1 217 1 57 2 238 1 282 1 61 2 
80 1 74 1 114 1 333 1 34 4 303 2 172 1 272 1 78 1 14 2 273 1 117 1 26 1 318 1 149 2 111 2 217 1 142 1 36 1 57 2 282 2 61 2 
80 1 74 1 114 1 34 2 303 2 272 1 14 1 117 1 26 1 257 1 318 1 149 1 111 1 217 1 36 1 344 1 282 1 61 2 
80 1 74 1 114 1 333 1 34 2 172 1 272 1 14 1 78 1 117 1 257 1 149 1 111 1 217 1 57 2 238 1 282 1 61 2 
80 1 74 1 114 1 333 1 34 4 303 2 172 1 272 1 78 1 14 2 117 1 26 1 257 1 318 1 149 2 111 2 217 1 142 1 36 1 57 2 282 2 61 2 
80 1 74 1 114 1 333 1 34 4 303 2 172 1 272 1 78 1 14 2 117 1 26 1 318 1 149 2 111 2 217 1 142 1 36 1 57 2 282 2 61 2 
80 1 19 1 42 1 84 1 24 1 27 1 258 1 150 1 209 1 131 1 178 1 72 1 51 1 264 1 74 1 137 1 181 1 114 1 34 2 303 1 77 1 272 1 117 1 100 1 217 1 57 1 332 1 61 2 
80 1 19 1 42 1 84 1 24 1 258 1 209 1 131 1 178 1 72 1 51 1 264 1 157 1 74 1 267 1 250 1 137 1 181 1 114 1 34 2 303 1 77 1 272 1 117 1 217 1 57 1 332 1 61 2 
80 1 74 1 114 1 333 1 34 4 303 2 172 1 272 1 78 1 14 2 117 1 26 1 318 1 149 2 111 2 217 1 142 1 341 1 36 1 57 2 282 2 61 2 
80 1 19 1 333 1 84 1 172 1 24 1 26 1 318 1 27 1 149 2 111 2 150 1 68 1 131 1 178 1 72 1 264 1 51 1 74 1 137 1 114 1 269 1 34 4 303 2 77 1 272 1 78 1 14 2 117 1 100 1 217 1 142 1 36 1 57 2 332 1 282 2 61 2 
80 1 222 1 333 1 336 1 26 1 318 1 149 1 111 1 341 1 70 1 178 1 180 1 74 1 137 1 114 1 34 3 303 2 272 1 78 1 14 1 117 1 217 1 142 1 102 1 36 1 57 1 16 1 61 2 282 1 
80 2 333 3 223 2 313 1 169 1 172 3 318 3 26 3 111 6 288 1 175 1 294 2 114 2 33 1 34 19 271 1 303 9 78 3 117 2 217 2 142 3 306 1 36 3 219 1 331 1 57 10 104 1 58 1 39 2 61 4 
80 2 333 2 223 4 313 2 169 2 172 1 26 1 318 2 111 2 175 1 294 1 114 2 98 1 34 22 271 1 303 10 78 2 327 1 117 2 217 2 142 2 218 1 36 2 103 1 57 12 219 2 331 1 104 1 58 2 39 2 61 4 357 1 
80 3 333 3 223 4 313 3 169 3 172 4 318 3 26 3 111 7 232 1 175 1 294 1 136 1 213 1 114 3 33 1 300 1 215 1 98 1 34 36 271 1 303 17 327 1 78 4 117 3 217 3 142 3 354 1 306 1 218 1 36 4 103 1 219 2 331 1 57 19 104 1 17 1 58 1 39 4 357 1 61 6 
80 3 333 3 223 4 313 3 169 3 172 4 318 3 26 2 111 6 232 1 175 1 294 1 136 1 213 1 114 3 33 1 300 1 215 1 98 1 34 34 271 1 303 16 327 1 78 4 117 3 217 3 142 3 354 1 306 1 218 1 36 4 103 1 219 2 331 1 57 18 104 1 17 1 58 1 39 4 357 1 61 6 
80 1 333 6 223 3 313 2 169 4 172 7 318 6 26 5 111 12 231 2 175 1 294 1 136 1 213 1 114 1 33 2 300 1 215 1 98 1 34 44 271 1 303 22 327 1 78 7 117 1 217 1 142 6 354 1 218 1 36 7 219 1 331 1 57 22 104 1 17 1 58 1 39 4 357 1 61 2 
287 1 73 1 174 1 55 1 289 1 44 1 200 1 160 1 62 1 118 1 
168 1 316 1 
50 1 73 1 174 1 55 1 289 1 96 1 200 1 92 1 118 1 
7 1 155 1 
189 1 133 1 116 1 
197 1 73 1 44 1 200 1 326 1 185 1 118 1 287 1 163 2 352 1 174 1 55 1 289 1 106 1 322 1 18 1 211 1 62 1 
197 1 73 1 44 1 200 1 326 1 185 1 118 1 287 1 163 2 352 1 174 1 55 1 289 1 106 1 322 1 18 1 211 1 62 1 
197 1 73 1 44 1 200 1 326 1 185 1 118 1 287 1 163 2 352 1 174 1 55 1 289 1 106 1 322 1 18 1 211 1 62 1 
7 1 133 1 155 1 
7 1 133 1 155 1 
189 1 116 1 
189 1 133 1 116 1 
281 1 93 1 
222 2 42 1 200 1 316 1 204 1 174 1 110 1 127 1 289 1 90 1 178 2 93 1 322 1 345 1 211 1 262 1 180 2 73 1 137 2 326 1 118 1 163 1 352 1 55 1 102 2 281 1 168 1 
80 1 19 2 0 1 84 2 207 1 341 1 343 1 209 1 178 2 72 1 297 2 264 1 51 1 74 1 137 2 9 1 114 1 181 1 34 2 159 1 303 1 77 2 272 1 117 1 162 1 217 1 164 1 102 2 57 1 332 1 61 2 
264 1 81 1 19 2 312 2 84 2 269 1 139 1 337 1 348 1 52 1 77 2 147 1 66 1 319 1 342 1 130 1 112 1 72 1 309 1 
81 1 264 1 19 1 312 2 244 1 84 1 337 1 348 1 52 1 77 1 147 1 66 1 319 1 342 1 112 1 309 1 72 1 
264 1 51 1 81 1 19 1 299 1 84 1 139 1 77 1 304 1 258 1 305 1 332 1 72 1 49 1 
81 1 264 1 19 1 312 2 84 1 139 1 337 1 348 1 52 1 77 1 147 1 66 1 319 1 342 1 130 1 112 1 72 1 309 1 
65 1 
30 1 64 1 22 1 221 1 23 1 3 1 18 1 
145 1 22 1 224 1 3 1 226 1 25 1 205 1 126 1 151 1 8 1 71 1 322 1 30 1 346 1 352 1 121 1 18 2 
264 1 51 1 19 1 84 1 214 1 22 2 270 1 77 1 226 1 205 1 54 1 258 1 330 1 126 1 121 1 192 1 236 1 131 1 235 1 332 2 72 2 94 1 
333 1 313 1 169 1 145 1 22 6 3 2 25 6 226 2 205 2 318 1 126 2 208 1 261 4 249 1 210 1 71 1 322 1 30 3 346 3 98 1 75 2 327 1 78 1 352 1 142 1 330 1 121 2 36 1 105 1 39 1 59 4 18 5 357 1 
63 1 222 1 283 1 22 2 203 1 226 1 205 1 126 1 208 1 153 1 70 1 178 1 322 1 180 1 30 2 213 1 137 1 300 1 215 1 75 2 140 1 78 1 352 1 121 1 191 1 36 2 102 1 195 1 
30 1 22 1 23 1 3 1 226 1 205 1 126 1 121 1 221 1 18 1 
30 5 346 5 333 2 22 5 75 2 25 10 78 2 318 2 142 2 36 2 208 1 261 5 59 5 94 1 18 5 
352 1 145 1 3 1 71 1 322 1 18 1 
19 4 84 4 145 2 22 2 315 1 226 1 205 2 227 1 258 2 126 2 152 1 179 2 72 1 71 4 210 2 322 3 264 1 51 1 30 2 299 1 183 1 77 4 304 1 352 3 330 2 121 2 254 1 332 1 40 1 
80 1 19 1 222 2 42 1 84 1 248 1 24 1 27 1 258 1 150 1 209 1 131 1 70 2 153 1 178 3 72 1 180 2 264 1 51 1 74 1 137 3 114 1 34 1 77 1 272 1 117 1 217 1 100 1 102 2 57 1 332 1 61 2 
30 2 346 2 22 1 3 2 25 4 226 1 205 1 126 1 330 1 121 1 17 1 261 2 59 2 210 1 18 4 
353 1 55 1 200 1 
353 1 55 1 200 1 
55 1 200 1 38 1 281 1 62 1 
353 1 55 1 200 1 
198 1 55 1 200 1 
198 1 55 1 200 1 
198 1 55 1 200 1 
55 1 200 1 
73 1 289 1 
80 2 213 1 114 2 300 1 215 1 34 8 303 4 172 2 78 1 117 2 26 1 111 3 217 2 354 1 36 1 57 4 103 1 17 1 61 4 136 1 
111 2 213 1 354 1 36 1 300 1 64 1 57 3 215 1 34 6 17 1 303 3 172 2 78 1 136 1 
80 1 114 1 333 1 34 4 303 2 172 1 78 1 117 1 67 1 318 1 26 1 111 2 217 1 142 1 36 1 57 2 61 2 
33 1 333 1 313 1 169 1 34 7 303 3 172 1 78 1 318 1 26 1 142 1 111 2 36 1 57 4 39 2 
80 2 333 2 169 2 172 5 26 4 318 2 111 9 231 1 136 1 213 2 33 1 114 2 300 1 10 1 215 2 34 23 303 11 78 3 117 2 142 2 217 2 354 1 36 3 57 12 103 2 17 1 39 2 124 1 61 4 
57 1 34 1 39 1 
169 1 34 1 303 1 
80 1 114 1 333 1 34 6 303 3 172 2 78 1 117 1 67 1 318 1 26 1 217 1 142 1 111 3 36 1 57 3 94 1 61 2 
80 1 333 1 169 1 313 1 172 1 318 1 111 1 114 1 98 1 34 7 303 3 327 1 78 1 117 1 217 1 142 1 36 1 57 4 104 1 39 1 357 1 61 2 
213 1 300 1 215 1 34 6 303 3 172 1 78 1 26 1 111 2 36 1 57 3 
80 1 213 1 114 1 10 1 215 1 34 3 303 1 172 1 117 1 26 1 111 2 217 1 354 1 57 2 103 1 136 1 61 2 
80 1 213 2 114 1 300 1 215 2 34 10 303 5 172 3 78 2 117 1 26 2 217 1 111 5 36 2 57 5 104 1 195 1 61 2 
80 1 114 1 34 2 303 2 117 1 318 1 26 1 217 1 111 1 36 1 104 1 61 2 
80 1 114 1 333 1 34 4 303 2 172 1 78 1 117 1 318 1 26 1 111 2 217 1 142 1 36 1 57 2 104 1 61 2 
80 3 213 1 114 3 10 1 215 1 34 3 303 1 172 1 117 3 26 1 217 3 111 2 306 1 103 1 57 2 104 1 61 6 
80 5 333 3 313 1 169 3 172 7 67 1 318 3 26 5 111 12 260 1 136 1 213 3 114 5 33 1 300 2 10 1 215 3 34 34 303 16 78 5 117 5 217 5 142 3 354 1 306 1 36 5 103 2 57 18 104 1 278 1 17 1 39 4 123 1 61 10 
80 1 169 1 313 1 172 2 111 2 136 1 213 1 114 1 300 1 215 1 34 8 303 4 78 1 117 1 217 1 354 1 36 1 57 4 104 1 17 1 39 1 357 1 61 2 
80 2 313 1 169 1 172 2 67 1 318 1 26 1 111 3 136 1 213 1 114 2 33 1 300 1 215 1 34 11 303 6 78 1 117 2 217 2 142 1 354 1 36 2 57 5 104 1 17 1 39 2 357 1 61 4 
80 3 333 1 169 1 313 1 172 3 318 1 67 1 111 3 136 1 213 1 114 3 300 1 215 1 98 1 34 14 303 6 327 1 78 2 117 3 217 3 142 1 354 1 36 2 57 8 103 1 104 1 17 1 39 1 357 1 61 6 
80 2 333 1 169 1 313 1 172 1 318 1 67 1 111 1 114 2 98 1 34 7 303 3 327 1 78 1 117 2 217 2 142 1 36 1 57 4 104 1 39 1 357 1 61 4 
80 1 169 1 313 1 172 2 111 2 136 1 213 1 114 1 300 1 215 1 34 8 303 4 78 1 117 1 217 1 354 1 36 1 57 4 104 1 17 1 39 1 357 1 61 2 
80 1 333 1 169 1 313 1 172 1 318 1 111 1 114 1 98 1 34 7 303 3 327 1 78 1 117 1 217 1 142 1 36 1 57 4 104 1 39 1 357 1 61 2 
80 3 333 1 313 1 169 1 172 1 67 1 318 1 111 1 114 3 98 1 34 8 303 3 327 1 78 1 117 3 217 3 142 1 36 1 57 5 103 1 104 1 39 1 357 1 61 6 
80 3 333 1 313 1 169 1 172 2 318 1 111 2 114 3 98 1 34 8 303 3 327 1 78 1 117 3 217 3 142 1 306 1 36 1 57 5 103 1 104 1 39 1 357 1 61 6 
213 3 300 1 215 3 34 7 303 3 172 3 78 1 26 3 111 6 354 1 36 1 57 4 136 2 
80 3 333 1 313 1 169 1 172 1 318 1 111 1 114 3 98 1 34 8 303 3 327 1 78 1 117 3 217 3 142 1 306 1 36 1 57 5 103 1 104 1 39 1 357 1 61 6 
323 1 137 1 102 1 42 1 115 1 178 1 167 1 
323 1 137 1 42 1 115 1 5 1 46 1 102 1 276 1 132 1 122 1 178 1 167 1 
264 1 51 1 258 1 19 1 299 1 64 1 84 1 332 1 77 1 72 1 304 1 
51 1 264 1 19 1 222 1 137 2 42 1 84 1 77 1 24 1 27 1 258 1 102 1 131 1 332 1 178 2 91 1 72 1 180 1 
19 1 222 2 42 1 283 1 108 1 84 1 340 1 24 1 27 1 229 1 131 2 179 1 178 2 91 1 72 1 180 1 264 1 51 2 137 2 77 1 102 2 194 1 332 3 
19 2 222 2 42 1 283 1 108 1 84 2 340 1 24 1 229 1 177 1 131 2 179 1 178 2 91 1 72 1 180 1 264 1 157 1 51 2 137 2 77 2 102 2 194 1 332 3 
19 3 108 1 84 3 335 1 3 1 258 1 229 1 177 1 131 1 179 1 71 1 72 1 322 2 264 1 51 1 325 1 182 1 77 3 54 1 352 2 165 1 332 4 18 1 
51 1 264 1 19 3 1 1 108 1 325 1 335 1 84 3 77 3 3 1 258 1 54 1 229 1 352 2 177 1 131 1 179 1 332 4 72 1 71 1 322 2 18 1 
264 1 19 1 120 1 84 1 77 1 72 1 
265 1 51 2 264 2 19 7 9 1 269 1 84 7 45 1 77 6 286 1 319 1 258 2 120 1 47 1 192 1 233 1 37 1 131 1 332 3 72 3 297 1 
80 2 222 1 42 2 84 1 172 2 131 1 178 2 91 1 180 1 136 1 264 1 51 1 137 2 269 1 272 2 14 1 100 1 102 1 57 3 17 1 332 1 282 1 61 4 19 1 24 1 27 1 149 1 207 1 111 2 341 1 150 1 68 1 72 1 74 2 213 1 114 2 300 1 215 1 34 6 303 3 77 1 78 1 117 2 217 2 354 1 36 1 308 1 
63 1 19 1 222 1 283 1 84 1 22 4 203 1 23 1 3 1 226 1 205 1 227 1 258 1 126 1 208 1 236 1 70 1 153 1 178 1 322 1 262 1 180 1 30 4 213 1 137 1 300 1 215 1 75 2 77 1 78 2 352 1 191 1 121 1 102 1 36 2 221 1 195 1 18 1 
51 1 264 1 19 2 325 1 269 1 84 2 77 2 120 1 192 1 235 1 131 1 332 2 72 2 
51 1 264 1 19 4 299 1 84 4 269 1 77 4 304 1 258 1 220 1 177 1 332 1 72 1 
51 1 264 1 19 2 298 1 84 2 45 1 170 1 77 2 15 1 47 1 131 1 179 1 332 1 72 2 
264 1 258 1 19 1 312 1 84 1 112 1 337 1 77 1 72 1 309 1 
51 1 264 1 19 2 0 1 9 1 269 1 84 2 77 2 319 1 332 1 72 1 
51 2 264 2 19 5 9 1 299 1 84 5 269 1 77 4 304 1 286 1 258 1 220 1 233 1 179 1 332 3 72 2 
51 2 264 2 19 5 9 1 299 1 84 5 269 1 77 4 304 1 317 1 258 1 220 1 233 1 179 1 332 3 72 2 
51 1 157 1 264 1 19 1 222 1 137 2 42 1 84 1 77 1 24 1 258 1 102 1 131 1 332 1 178 2 91 1 72 1 180 1 
51 1 264 1 19 1 84 1 45 1 77 1 47 1 192 1 37 1 131 1 179 1 332 1 72 2 
89 1 311 1 42 1 284 1 99 1 
311 2 42 1 283 1 284 1 335 1 184 1 340 1 3 1 13 1 88 1 99 2 89 2 352 2 194 1 135 1 322 2 237 1 18 1 262 1 
89 1 311 1 137 1 102 1 343 1 284 1 159 1 178 1 162 1 
284 1 135 1 237 1 
256 1 64 1 240 1 263 1 
310 1 256 1 242 1 277 1 240 1 263 1 4 1 
242 1 321 1 48 1 
156 1 310 3 256 1 240 1 4 1 190 1 230 1 242 3 277 1 279 1 263 1 196 2 
310 2 256 1 268 1 242 2 277 1 240 1 285 1 263 1 4 1 
310 1 312 1 256 1 20 1 337 1 348 1 4 1 230 1 242 1 277 1 79 1 
310 1 230 1 256 1 242 1 277 1 263 1 4 1 
310 1 230 1 242 1 277 1 240 1 263 2 4 1 
310 2 351 1 143 1 230 1 256 1 242 2 277 2 263 1 4 2 212 1 
310 3 256 2 268 2 240 1 350 1 4 1 230 1 274 1 56 1 242 3 277 1 263 1 79 1 
310 2 312 2 256 1 199 1 268 1 240 1 337 1 348 1 4 1 230 1 342 1 112 1 242 2 277 1 263 1 
310 4 256 2 268 2 240 1 225 1 285 1 4 2 230 1 56 1 242 4 277 2 263 1 79 1 
310 1 230 1 256 1 242 1 277 1 240 1 263 1 4 1 
310 4 256 3 268 2 240 2 4 1 190 1 56 1 242 4 279 1 277 1 263 2 41 1 79 1 196 1 
310 2 138 1 230 1 256 1 268 1 307 1 242 2 277 1 240 1 247 1 263 1 4 1 
310 3 256 1 240 1 4 1 190 2 230 1 129 1 242 3 279 1 277 1 263 1 196 2 
119 1 256 2 2 1 95 2 
310 1 230 1 291 1 242 1 277 1 4 1 
310 2 230 1 256 1 274 1 268 1 242 2 277 1 240 1 263 1 4 1 
334 1 
310 1 230 1 256 1 242 1 277 1 240 1 263 1 4 1 
310 3 230 1 274 1 256 1 268 1 242 3 277 1 240 1 263 1 196 1 4 1 
256 1 56 1 41 1 79 1 
256 1 263 1 

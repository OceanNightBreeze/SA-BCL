#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 241 (109,121) (109,121) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 241 (109,121) (109,121) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 241 (109,121) (109,121) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 241 (109,121) (109,121) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 241 (218,328) (218,328) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (43,99,264,343) (43,99,264,343) (43,99,264,343) 355 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (43,99,264,343) (43,99,264,343) (43,99,264,343) 355 332 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (43,99,264,343) (43,99,264,343) (43,99,264,343) 355 332 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (122,169) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (43,99,264,343) (43,99,264,343) (44,131,281) (44,131,281) (44,131,281) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (43,99,264,343) (43,99,264,343) (44,131,281) (44,131,281) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (43,99,264,343) (43,99,264,343) (44,131,281) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (42,56) (42,56) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 312 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 312 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 312 318 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 312 318 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
121 1 109 1 2 1 304 1 264 1 99 1 343 1 241 1 145 1 
121 1 109 1 2 1 304 1 264 1 99 1 343 1 241 1 145 1 
121 1 109 1 2 1 304 1 264 1 99 1 343 1 241 1 145 1 
121 1 109 1 2 1 304 1 264 1 99 1 343 1 241 1 145 1 
335 1 1 2 2 4 365 3 304 1 213 1 27 1 264 1 4 1 77 1 43 3 205 1 191 1 99 1 343 4 344 1 100 1 225 2 
335 1 328 1 2 1 304 1 264 1 99 1 325 1 343 1 241 1 145 1 218 1 
355 1 2 1 304 1 264 2 99 2 343 2 145 1 
355 1 258 1 2 2 304 1 264 2 99 2 332 1 343 3 145 1 43 1 
355 1 258 1 2 2 304 1 264 2 99 2 332 1 343 3 145 1 43 1 
234 1 256 1 23 1 
40 1 
159 2 292 1 208 1 259 2 86 2 152 2 212 2 65 2 
182 1 158 2 0 1 159 3 292 1 47 2 230 1 138 1 204 1 32 2 141 1 208 1 259 2 144 1 194 1 212 3 13 1 263 1 15 1 106 1 16 2 86 2 61 1 152 2 198 1 88 1 289 1 199 1 65 2 290 1 342 2 68 1 314 1 246 1 179 1 250 1 249 1 
159 1 208 1 259 1 86 1 152 1 216 1 78 1 338 1 212 1 65 1 
159 1 160 1 322 1 25 1 153 1 140 1 338 1 234 1 108 1 259 1 23 1 165 1 212 1 361 1 
159 1 160 1 322 1 25 1 86 1 152 1 338 1 65 1 234 1 108 2 259 1 23 1 165 1 212 1 361 2 
81 1 108 1 224 1 55 1 361 1 
234 1 81 1 108 2 272 1 189 1 23 1 55 1 361 2 
81 1 108 1 361 1 
159 1 86 1 152 1 216 1 78 1 338 1 65 1 370 1 108 1 208 1 259 1 55 1 361 1 212 1 
23 1 
234 1 81 1 108 2 272 1 39 1 23 1 55 1 361 2 
334 2 272 1 293 1 349 1 119 2 234 1 81 2 123 1 369 1 108 5 133 1 192 2 193 1 83 1 209 1 23 1 227 1 55 2 361 5 
292 1 256 1 
159 2 292 2 214 1 86 1 152 1 352 1 65 1 259 2 212 2 
122 1 301 1 221 1 
0 1 159 1 13 1 292 1 196 1 47 1 230 1 16 1 198 1 204 1 199 1 88 1 141 1 342 1 144 1 212 1 
0 1 159 2 13 1 47 1 230 1 16 1 86 1 152 1 198 1 204 1 88 1 199 1 243 1 187 1 122 1 141 1 342 1 259 1 144 1 212 2 
187 1 159 3 292 1 259 3 86 3 152 3 65 1 212 3 
159 1 259 1 86 1 152 1 78 1 338 1 212 1 
159 1 214 1 259 1 86 1 152 1 352 1 338 1 212 1 65 1 
158 1 0 1 159 4 292 1 160 1 47 1 230 1 322 1 25 1 204 1 352 1 32 2 187 1 141 1 208 1 259 3 144 1 165 1 212 4 361 1 13 1 166 1 263 1 15 1 106 1 16 1 86 3 61 1 60 1 152 3 198 1 88 1 338 1 199 1 65 2 243 1 108 1 342 1 68 1 314 1 246 1 179 1 249 1 250 1 
159 2 187 1 292 1 259 2 86 1 153 1 152 1 147 1 212 2 
159 3 166 1 160 1 322 1 25 1 86 3 152 3 352 1 338 1 65 1 243 1 187 2 108 1 259 3 23 1 165 1 319 1 361 1 212 3 
159 2 86 2 152 2 352 1 221 1 65 1 187 1 122 1 259 2 212 2 
0 1 159 1 13 1 292 1 47 1 230 1 16 1 198 1 204 1 199 1 88 1 141 1 342 1 144 1 212 1 
0 1 159 1 292 1 47 1 230 1 16 1 198 1 204 1 199 1 88 1 141 1 176 1 342 1 212 1 228 1 
320 1 169 1 
159 1 25 1 259 1 86 1 185 1 152 1 338 1 212 1 
159 5 292 1 86 4 153 1 152 4 352 1 65 1 220 1 243 1 187 2 329 1 259 5 147 1 212 5 
159 2 259 2 185 1 86 2 152 2 78 1 338 1 212 2 
235 1 232 1 
235 1 232 1 
327 1 164 1 
327 1 164 1 
327 1 164 1 
235 1 315 1 232 1 
235 1 14 1 232 1 
327 1 235 2 30 1 164 1 261 1 232 2 
235 1 315 1 232 1 
235 1 315 1 232 1 
235 1 155 1 232 1 
235 1 155 1 232 1 
235 1 155 1 232 1 
362 1 149 2 184 1 116 3 307 2 30 1 118 2 186 2 18 1 232 2 340 1 372 1 235 2 108 2 69 1 20 2 23 1 136 1 361 2 
159 2 292 1 116 1 118 1 186 1 232 1 296 1 233 1 298 1 235 1 259 2 361 1 212 2 362 1 363 1 149 1 14 1 307 1 86 2 152 2 41 1 240 1 67 1 108 1 
335 1 213 1 27 1 
335 1 27 1 325 1 
345 1 183 1 335 3 213 2 325 1 12 1 
345 1 183 1 195 1 335 2 213 1 325 1 
183 1 345 2 335 2 213 1 325 1 
201 1 321 1 272 1 96 2 293 2 349 1 49 2 119 1 296 1 234 1 81 1 357 2 359 1 192 1 236 1 101 1 55 4 361 5 334 1 364 1 105 1 38 1 40 3 41 1 67 1 154 1 175 1 90 1 108 5 133 3 23 2 112 1 
321 1 272 1 96 2 49 2 234 1 192 1 236 1 55 5 334 1 286 1 105 1 17 3 152 1 338 1 65 1 154 1 108 6 23 3 112 1 159 1 349 1 293 2 78 1 119 1 81 4 125 1 359 1 208 1 259 1 302 1 361 6 212 1 364 1 38 1 40 3 86 1 216 1 41 2 175 1 370 1 133 3 224 3 
159 1 293 2 96 2 78 1 49 2 119 1 234 1 357 1 123 1 359 1 208 1 259 1 192 1 236 1 101 1 55 2 212 1 361 3 334 1 364 1 105 1 38 1 40 3 86 1 152 1 216 1 41 1 338 1 65 1 154 1 175 1 90 1 370 1 108 3 133 3 23 2 112 1 
96 4 49 4 234 1 192 1 236 2 101 1 55 3 334 1 285 1 105 2 152 1 338 1 65 1 154 2 341 1 108 4 112 1 23 3 159 1 293 4 78 1 119 1 357 2 123 1 359 1 208 1 259 1 212 1 361 4 364 2 38 2 40 6 86 1 41 2 216 1 310 1 90 1 175 2 370 1 133 5 
256 1 198 1 126 1 
198 1 128 1 
288 1 
198 1 204 1 
21 1 309 1 126 2 198 3 204 1 88 1 
198 1 204 1 88 1 
198 1 283 1 
158 7 346 1 364 1 104 1 48 1 105 1 57 1 138 4 242 2 132 1 354 1 267 1 188 3 246 3 156 1 9 1 210 2 
158 7 346 1 364 1 104 1 48 1 105 1 57 1 138 4 242 2 132 1 354 1 267 1 188 3 246 3 156 1 9 1 210 2 
158 7 346 1 364 1 104 1 48 1 105 1 57 1 138 4 242 2 132 1 354 1 267 1 367 1 188 3 246 3 156 1 9 1 210 2 
158 31 346 5 48 1 138 16 50 1 32 2 326 1 354 2 188 10 190 1 236 3 9 1 282 1 210 3 262 4 263 1 303 1 104 2 364 4 106 1 57 2 38 3 105 4 61 1 308 1 242 5 132 1 267 1 154 3 177 3 68 1 246 15 156 2 251 1 
158 9 346 1 48 1 138 5 32 4 354 1 188 4 8 1 190 1 142 1 210 2 263 2 364 1 104 1 105 1 106 2 57 1 61 2 242 3 132 1 267 1 68 2 156 1 246 4 
46 1 0 1 73 1 47 1 2 1 347 1 27 1 274 1 348 1 325 1 141 1 281 1 99 1 145 1 12 1 335 2 213 1 304 1 16 1 264 1 43 1 131 1 337 1 268 1 342 1 343 2 44 1 
0 1 73 1 47 1 2 2 347 1 27 1 74 1 274 1 348 1 325 1 141 1 281 1 99 1 145 1 12 1 102 1 36 1 335 2 213 1 16 1 264 1 43 2 131 1 337 1 268 1 342 1 343 3 
0 1 73 1 335 2 47 1 2 1 213 1 347 1 27 1 16 1 74 1 274 1 325 1 348 1 43 2 337 1 141 1 281 1 342 1 343 2 145 1 12 1 102 1 
0 1 73 2 47 1 2 1 347 2 274 2 204 1 141 1 99 1 145 2 36 1 56 1 284 1 16 1 264 1 107 1 42 1 198 1 199 1 342 1 371 1 271 1 343 1 
0 1 73 1 47 1 2 1 347 1 27 1 274 1 348 1 325 1 141 1 281 1 99 1 145 1 102 1 12 1 335 2 213 1 304 1 16 1 264 1 131 1 337 1 268 1 342 1 343 1 44 1 
58 1 
0 1 47 2 322 1 272 1 140 1 231 1 141 1 192 1 334 1 107 1 16 2 153 1 198 1 199 2 338 1 108 3 342 2 110 1 111 1 22 1 23 1 70 1 200 1 252 1 159 1 160 1 25 1 293 2 349 1 31 1 204 1 119 1 162 2 81 2 124 1 359 1 259 1 211 1 165 1 361 3 212 1 35 1 167 1 40 1 265 1 175 1 371 1 133 2 270 1 91 1 
252 1 35 1 159 1 160 1 322 1 25 1 153 1 31 1 338 1 140 1 162 2 81 1 280 1 124 1 108 2 259 1 70 1 165 1 361 2 212 1 
252 1 159 1 160 1 322 1 25 1 93 1 272 1 31 1 140 1 162 3 234 1 81 1 124 1 259 1 165 1 212 1 361 3 35 1 39 1 153 1 338 1 108 3 70 1 23 1 
252 1 159 1 160 1 322 1 272 1 25 1 93 1 31 1 140 1 162 3 280 1 81 2 124 1 259 1 165 1 212 1 361 3 35 1 129 1 39 1 153 1 338 1 108 3 70 1 
252 1 159 2 160 1 322 1 93 1 272 1 25 1 31 1 276 1 78 1 140 1 162 3 234 1 81 2 280 1 124 1 208 1 259 2 165 1 361 3 212 2 35 1 129 1 39 1 86 1 152 1 153 1 216 1 338 2 65 1 370 1 108 3 23 1 70 1 
200 1 252 1 159 1 160 1 322 1 25 1 293 1 349 1 31 1 140 1 119 1 162 2 124 1 192 1 259 1 211 1 165 1 361 2 212 1 35 1 167 1 334 1 40 1 153 1 265 1 338 1 175 1 108 2 133 1 22 1 23 1 70 1 91 1 
252 1 35 1 159 1 160 1 322 1 25 1 153 1 31 1 312 1 338 1 140 1 162 2 124 1 108 2 259 1 70 1 165 1 361 2 212 1 
252 1 35 1 159 1 160 1 322 1 25 1 153 1 31 1 312 1 338 1 140 1 162 2 124 1 108 2 259 1 70 1 165 1 361 2 212 1 
322 1 272 2 93 2 323 2 140 1 234 1 280 2 192 1 334 1 152 1 153 1 338 2 65 1 66 1 108 4 22 2 70 1 23 1 252 1 159 2 160 1 25 1 203 1 161 2 349 1 293 1 31 1 78 1 119 1 162 4 81 4 124 1 208 1 259 2 165 1 361 4 212 2 35 1 129 2 167 2 40 2 86 1 216 1 219 1 370 1 133 1 222 1 91 1 
129 1 252 1 35 1 159 1 160 1 322 1 93 1 25 1 153 1 31 1 312 1 338 1 140 1 162 3 81 1 280 1 124 1 108 2 259 1 318 1 70 1 165 1 361 2 212 1 
129 1 252 1 35 1 159 1 160 1 322 1 93 1 25 1 153 1 31 1 312 1 338 1 140 1 162 3 81 1 280 1 124 1 108 2 259 1 318 1 70 1 165 1 361 2 212 1 
322 1 272 2 93 2 323 2 140 1 234 1 280 2 192 1 334 1 152 1 153 1 338 2 65 1 108 4 22 2 70 1 23 1 252 1 159 2 160 1 25 1 203 1 161 2 349 1 293 1 31 1 78 1 119 1 162 4 81 4 124 1 208 1 259 2 165 1 212 2 361 4 35 1 129 2 167 2 40 2 86 1 216 1 265 1 370 1 133 1 91 1 
320 1 256 1 
182 1 45 1 158 14 292 1 346 1 254 1 3 1 138 8 95 1 50 1 32 4 122 11 188 2 236 2 301 11 262 3 263 2 364 2 15 1 106 2 38 1 105 1 61 2 62 1 242 1 221 4 154 2 177 3 68 2 314 1 246 6 179 2 251 1 
0 1 158 2 182 1 159 2 292 1 47 1 230 1 254 1 138 1 204 1 32 2 278 1 187 1 257 1 141 1 259 1 144 1 212 2 13 1 196 1 263 1 106 1 15 1 16 1 86 1 130 1 152 1 61 1 198 1 88 1 199 1 221 1 243 1 342 1 68 1 314 1 179 1 246 1 
182 1 0 2 92 2 47 3 230 2 48 1 138 10 7 1 187 1 141 2 188 8 236 2 333 1 144 2 102 1 13 2 104 1 105 3 15 1 106 3 16 3 150 2 61 3 152 1 198 2 242 4 199 1 243 1 154 2 342 3 68 3 246 10 249 2 158 20 159 3 292 2 346 4 254 1 28 2 204 2 32 6 354 1 122 7 259 1 301 7 210 1 212 3 263 3 364 3 38 2 86 1 173 1 132 1 88 2 267 1 221 7 269 2 314 3 179 3 
46 1 320 1 0 2 182 1 158 2 159 1 47 7 138 1 29 1 204 2 32 2 120 1 187 1 141 2 259 1 102 1 212 1 263 1 106 1 15 1 170 1 16 8 107 1 86 1 152 1 61 1 198 3 311 1 199 2 289 2 342 8 371 1 19 1 68 1 314 1 373 1 179 1 246 1 180 1 
158 3 159 1 254 1 138 1 352 1 32 2 122 1 188 1 259 1 236 1 301 1 212 1 263 1 364 1 106 1 38 1 105 1 86 1 61 1 152 1 242 1 221 1 65 1 154 1 68 1 314 1 179 1 374 1 246 2 
320 1 
320 1 
320 1 
158 2 346 1 263 1 273 1 364 1 106 1 138 2 61 1 32 2 221 1 154 1 122 1 188 1 314 1 68 1 179 1 301 1 180 1 
158 2 263 1 115 1 106 1 38 1 105 1 61 1 242 1 32 2 221 1 122 1 188 1 314 1 68 1 179 1 246 2 301 1 180 1 
158 4 346 1 138 2 32 2 122 2 188 2 236 1 301 2 263 1 364 1 106 1 38 1 105 1 61 1 242 1 221 2 154 1 68 1 314 1 179 1 246 2 180 1 
158 4 346 1 138 2 32 2 122 2 188 2 236 1 301 2 263 1 364 1 106 1 38 1 105 1 61 1 242 1 221 2 154 1 68 1 314 1 179 1 246 2 
182 1 158 2 0 1 159 1 292 1 47 1 230 1 138 1 204 1 32 2 141 1 144 1 212 1 13 1 263 1 106 1 15 1 16 1 61 1 198 1 88 1 199 1 342 1 314 1 68 1 179 1 246 1 249 1 
182 1 158 2 0 1 291 1 159 1 292 1 47 1 230 1 138 1 204 1 32 2 141 1 212 1 263 1 106 1 15 1 16 1 61 1 198 1 88 1 199 1 176 1 342 1 314 1 68 1 179 1 246 1 228 1 
158 4 346 1 254 1 138 2 32 2 122 2 188 2 236 1 301 2 263 1 364 1 106 1 38 1 105 1 61 1 242 1 221 2 154 1 68 1 314 1 179 1 246 2 
158 4 0 1 46 1 159 1 47 1 346 1 230 1 138 2 204 1 32 2 122 2 141 1 188 2 236 1 301 2 144 1 212 1 13 1 263 1 364 1 105 1 38 1 106 1 16 1 61 1 198 1 242 1 88 1 221 2 154 1 269 1 342 1 314 1 68 1 246 2 179 1 249 1 
158 3 159 1 346 1 254 1 138 2 352 1 32 2 122 1 188 1 259 1 236 1 301 1 212 1 263 1 85 1 364 1 105 1 38 1 106 1 86 1 61 1 152 1 65 1 221 1 154 1 68 1 314 1 246 1 179 1 
158 19 346 3 138 9 275 1 5 2 294 1 50 1 32 4 297 1 358 1 188 6 236 3 142 1 260 1 146 1 262 2 263 2 364 3 106 2 38 3 105 3 61 2 242 3 87 1 154 3 177 1 68 2 246 10 251 1 72 2 
158 26 346 2 138 14 117 1 5 1 294 1 32 6 297 1 188 4 82 1 190 2 236 3 142 1 260 1 146 2 262 2 263 3 364 3 105 2 106 3 38 2 61 3 242 2 87 2 174 1 154 3 177 2 68 3 246 12 181 1 317 1 113 1 251 2 72 4 
48 1 138 20 5 1 50 1 188 8 190 1 236 4 142 1 146 2 104 1 105 5 106 3 61 3 242 4 154 4 68 3 246 21 248 1 251 3 113 1 72 4 158 41 346 4 117 1 294 1 32 6 354 1 297 1 358 1 82 1 260 1 210 1 262 4 263 3 364 5 38 4 87 1 132 1 174 1 267 1 177 3 317 1 181 1 
158 38 346 3 48 1 138 20 117 1 5 1 294 1 50 1 32 8 354 1 297 1 358 1 188 7 82 1 190 2 236 4 142 1 210 1 260 1 146 2 262 4 263 4 104 1 364 5 106 4 38 3 105 4 61 4 242 4 87 1 132 1 267 1 174 1 154 4 177 3 68 4 246 18 248 1 181 1 317 1 113 1 251 3 72 4 
158 52 346 7 48 1 138 27 117 1 5 1 294 1 50 2 32 4 354 1 297 1 188 14 82 1 190 1 236 7 142 1 210 1 260 1 146 1 262 4 263 2 104 1 364 8 106 2 38 7 105 8 61 2 62 2 242 7 87 1 132 1 267 1 174 1 154 7 177 4 68 2 246 25 181 1 317 1 113 1 251 2 72 4 
235 1 149 1 69 1 307 1 30 1 118 1 226 1 186 1 18 1 232 1 
363 1 14 1 
235 1 238 1 149 1 135 1 34 1 307 1 118 1 186 1 232 1 
362 1 149 1 184 1 116 2 307 1 30 1 118 1 186 1 18 1 232 1 340 1 108 1 235 1 69 1 20 1 23 1 136 1 361 1 
362 1 149 1 184 1 116 2 307 1 30 1 118 1 186 1 18 1 232 1 340 1 108 1 235 1 69 1 20 1 23 1 136 1 361 1 
362 1 149 1 184 1 116 2 307 1 30 1 118 1 186 1 18 1 232 1 340 1 108 1 235 1 69 1 20 1 23 1 136 1 361 1 
313 1 315 1 261 1 
313 1 315 1 261 1 
24 1 155 1 
24 1 155 1 261 1 
298 1 240 1 
159 2 292 1 116 1 118 1 186 1 232 1 296 1 233 1 298 1 235 1 259 2 55 1 212 2 361 1 363 1 168 1 149 1 14 1 307 1 86 2 152 2 41 1 240 1 67 1 108 1 20 1 136 1 
313 1 315 1 
24 1 155 1 261 1 
0 1 182 1 158 2 159 2 47 2 254 1 75 1 138 1 351 1 204 1 6 1 32 2 120 1 141 1 259 2 212 2 148 1 103 1 263 1 106 1 15 1 16 2 61 1 198 1 289 2 342 2 19 1 68 1 314 1 179 1 246 1 
0 1 46 1 335 2 47 2 213 1 347 1 27 1 16 2 325 1 348 1 337 1 277 1 368 1 80 1 268 1 141 1 342 2 12 1 102 1 
0 1 335 2 47 1 213 1 347 1 27 1 16 1 59 1 325 1 348 1 337 1 80 1 268 1 141 1 342 1 12 1 102 1 
0 1 284 1 47 1 347 1 16 1 107 1 215 1 198 1 204 1 199 1 277 1 141 1 342 1 371 1 
0 1 335 2 47 1 213 1 347 1 27 1 16 1 325 1 348 1 337 1 277 1 368 1 80 1 268 1 141 1 342 1 12 1 102 1 
143 1 
234 1 133 1 293 1 256 1 83 1 23 1 227 1 
200 1 334 1 40 1 349 1 293 1 119 1 175 1 133 1 192 1 23 1 211 1 
0 2 92 2 47 1 272 3 96 6 49 6 234 1 141 1 98 1 192 3 236 2 334 3 105 2 16 1 63 1 198 6 199 1 154 2 342 1 108 5 21 1 23 7 349 3 293 7 204 1 119 3 295 2 207 1 81 5 359 2 299 2 126 2 128 3 165 2 361 5 37 2 364 2 38 2 40 12 217 2 88 1 175 6 178 2 133 8 316 2 270 1 
229 1 272 1 139 1 117 1 96 5 349 2 293 5 49 5 119 2 234 2 81 1 359 1 330 1 299 2 192 2 236 2 262 1 361 1 334 2 364 2 38 2 105 2 40 6 174 1 154 2 175 3 108 1 177 1 133 8 270 1 181 1 317 1 23 5 113 1 251 1 
159 1 229 1 349 1 293 2 78 1 119 1 354 1 208 1 299 2 192 1 259 1 212 1 361 1 334 1 104 1 364 2 305 1 105 1 86 1 152 1 216 1 338 1 132 1 65 1 370 1 108 1 244 1 133 2 
334 1 349 1 293 1 119 1 234 1 133 1 192 1 83 1 23 1 227 1 
364 1 38 1 105 1 40 3 293 2 96 2 49 2 154 1 175 1 133 2 236 1 23 1 
234 1 81 1 108 1 272 1 23 1 361 1 
0 1 47 4 272 2 349 1 293 2 204 1 119 2 141 1 81 4 123 1 359 2 192 2 361 3 334 2 306 1 366 1 16 4 107 1 197 1 198 1 336 2 199 2 342 4 108 3 371 1 110 1 133 2 111 1 270 2 
158 1 0 1 159 3 292 1 47 1 230 1 204 1 32 2 141 1 208 1 259 2 144 1 212 3 13 1 263 1 15 1 106 1 16 1 86 2 61 1 152 2 198 1 199 1 88 1 65 2 342 1 314 1 68 1 246 1 179 1 250 1 249 1 
334 1 40 4 96 2 293 2 349 1 49 2 119 1 234 2 175 2 359 1 133 1 192 1 270 1 210 1 23 4 
331 1 118 1 186 1 
298 1 118 1 186 1 18 1 279 1 
331 1 118 1 186 1 
331 1 118 1 186 1 
324 1 118 1 186 1 
324 1 118 1 186 1 
324 1 118 1 186 1 
118 1 186 1 
235 1 232 1 
158 8 346 1 263 2 364 1 48 1 104 1 105 1 106 2 138 4 61 2 242 2 132 1 32 4 267 1 354 1 188 3 68 2 190 1 246 4 210 1 
158 6 48 1 104 1 364 1 105 1 138 3 256 1 242 2 132 1 267 1 354 1 188 2 246 3 210 1 
158 4 263 1 346 1 364 1 105 1 38 1 106 1 138 2 61 1 171 1 242 1 32 2 154 1 188 2 68 1 246 2 236 1 
158 7 346 1 364 1 105 1 38 1 138 3 242 1 50 1 154 1 177 1 188 2 246 4 236 1 251 1 262 2 
158 23 346 4 48 1 138 11 95 1 50 1 32 4 354 2 188 9 190 2 236 2 210 1 262 2 263 2 104 2 364 3 38 2 105 3 106 2 239 1 61 2 62 1 242 5 132 1 267 1 154 2 177 2 68 2 246 12 
158 1 246 1 262 1 
158 1 177 1 138 1 
158 6 92 1 263 1 346 1 364 1 106 1 38 1 105 1 138 3 61 1 171 1 242 2 32 2 154 1 188 3 68 1 246 3 236 1 
158 12 346 1 138 6 117 1 32 2 188 2 236 2 142 1 262 1 263 1 364 2 106 1 38 2 105 2 61 1 242 1 174 1 154 2 177 1 68 1 246 6 317 1 181 1 251 1 113 1 
158 6 346 1 364 1 104 1 105 1 138 3 242 1 132 1 354 1 188 2 246 3 
158 3 346 1 263 1 104 1 48 1 106 1 239 1 138 1 61 1 242 1 32 2 354 1 267 1 188 2 68 1 190 1 246 2 
158 10 263 1 346 2 104 2 364 2 106 1 105 2 138 5 61 1 242 3 32 2 132 1 354 2 188 5 68 1 244 1 246 5 142 1 
158 2 263 1 346 1 364 1 106 1 138 2 61 1 32 2 154 1 188 1 68 1 142 1 
158 4 263 1 346 1 364 1 105 1 38 1 106 1 138 2 61 1 242 1 32 2 154 1 188 2 68 1 246 2 236 1 142 1 
158 3 263 3 346 1 104 1 106 3 239 1 138 1 61 3 242 1 32 6 354 1 358 1 188 2 68 3 190 1 246 2 142 1 
158 34 346 5 48 1 138 16 50 1 32 10 354 3 358 1 188 12 190 2 236 3 142 1 282 1 210 1 262 4 303 1 263 5 104 3 364 5 106 5 38 3 105 5 239 1 61 5 308 1 171 1 242 7 132 2 267 1 154 3 177 3 68 5 246 18 251 1 
158 8 48 1 138 4 32 2 354 1 188 2 142 1 210 1 262 1 263 1 364 1 104 1 105 1 106 1 61 1 242 2 132 1 174 1 267 1 177 1 68 1 246 4 251 1 
158 11 346 1 48 1 138 6 50 1 32 4 354 1 188 3 236 1 142 1 210 1 262 2 263 2 104 1 364 2 105 1 106 2 61 2 171 1 242 2 132 1 267 1 174 1 154 1 177 1 68 2 246 5 251 1 
158 19 346 1 48 1 138 9 117 1 32 6 354 1 188 4 190 1 236 2 142 1 210 1 262 1 263 3 104 1 364 3 106 3 38 2 105 3 61 3 171 1 242 3 132 1 267 1 174 1 154 2 177 1 68 3 246 10 181 1 317 1 251 1 113 1 
158 17 346 2 48 1 138 10 117 1 32 6 354 1 188 5 190 1 236 2 142 1 210 1 262 1 263 3 104 1 364 3 106 3 38 1 105 2 61 3 171 1 242 3 132 1 267 1 174 1 154 2 177 1 68 3 246 7 317 1 181 1 251 1 113 1 
158 8 48 1 138 4 32 2 354 1 188 2 142 1 210 1 262 1 263 1 364 1 104 1 105 1 106 1 61 1 242 2 132 1 174 1 267 1 177 1 68 1 246 4 251 1 
158 12 346 1 138 6 117 1 32 2 188 2 236 2 142 1 262 1 263 1 364 2 106 1 38 2 105 2 61 1 242 1 174 1 154 2 177 1 68 1 246 6 317 1 181 1 251 1 113 1 
158 18 346 2 48 1 138 10 117 1 32 8 354 1 188 5 190 2 236 2 142 1 210 1 262 1 263 4 104 1 364 3 106 4 38 1 105 2 61 4 171 1 242 3 132 1 267 1 174 1 154 2 177 1 68 4 246 8 181 1 317 1 113 1 251 1 
158 16 346 3 138 9 117 1 32 8 358 1 188 6 190 2 236 3 142 1 262 1 263 4 364 3 106 4 38 2 105 2 61 4 242 3 174 1 154 3 177 1 68 4 246 7 181 1 317 1 113 1 251 1 
158 7 346 3 48 1 104 3 364 1 105 1 138 3 242 3 132 1 267 2 354 3 188 6 246 4 
158 18 346 1 48 1 138 10 117 1 32 8 354 1 358 1 188 4 190 2 236 2 142 1 210 1 262 1 263 4 104 1 364 3 106 4 38 1 105 2 61 4 242 3 132 1 267 1 174 1 154 2 177 1 68 4 246 8 181 1 317 1 113 1 251 1 
159 1 292 1 259 1 153 1 127 1 212 1 147 1 
159 1 292 1 153 1 79 1 339 1 259 1 375 1 11 1 127 1 71 1 147 1 212 1 
0 1 141 1 47 1 371 1 342 1 107 1 16 1 256 1 198 1 204 1 199 1 
0 1 159 2 292 1 47 1 230 1 16 1 86 1 152 1 198 1 204 1 88 1 199 1 187 1 141 1 342 1 259 1 144 1 212 2 
0 1 159 2 292 1 160 1 47 1 230 1 25 1 16 1 86 1 152 2 198 3 204 2 336 1 338 1 88 2 187 1 141 1 342 1 134 1 259 2 144 1 283 1 212 2 
0 1 159 2 292 1 47 2 160 1 230 1 25 1 204 2 187 1 141 1 259 2 283 1 212 2 237 1 16 2 86 1 152 2 198 3 336 1 88 2 338 1 342 2 134 1 228 1 
0 1 47 3 237 1 26 1 16 3 198 4 204 1 336 1 199 1 88 1 234 1 81 1 141 1 108 2 342 3 134 1 300 1 23 1 126 1 283 1 128 1 165 1 361 2 
0 1 47 3 237 1 16 3 198 4 204 1 336 1 199 1 88 1 234 1 81 1 141 1 108 2 342 3 134 1 316 1 23 1 126 1 283 1 128 1 165 1 361 2 
0 1 141 1 47 1 342 1 16 1 29 1 
46 1 0 3 47 6 202 1 170 1 16 7 29 1 64 1 198 3 204 2 289 1 311 1 199 2 88 1 141 2 342 7 19 1 373 1 21 1 247 1 102 1 
46 1 0 1 47 1 230 1 48 1 138 3 187 1 141 1 188 2 144 1 13 1 104 1 106 2 105 1 16 1 61 2 152 1 198 1 242 2 342 1 68 2 246 3 249 1 158 6 159 2 292 2 254 1 28 1 351 1 204 1 32 4 354 1 122 1 259 1 301 1 210 1 212 2 263 2 364 1 86 1 88 1 132 1 221 1 267 1 269 1 314 2 179 2 
47 1 272 1 293 1 349 2 119 2 295 1 234 1 81 2 192 2 83 1 126 1 128 1 55 1 165 1 361 3 334 2 16 1 197 1 217 1 198 2 199 1 342 1 108 3 178 1 133 1 316 1 23 1 227 1 
46 1 0 2 47 2 16 2 29 1 198 2 204 1 88 1 207 1 141 1 342 2 21 1 126 1 
0 1 46 1 47 4 237 1 16 4 107 1 198 1 204 1 353 1 199 1 141 1 342 4 371 1 
0 2 47 2 16 2 64 1 198 1 336 1 173 1 204 1 88 1 52 1 141 1 342 2 223 1 247 1 
0 1 141 1 335 1 47 1 342 1 27 1 16 1 325 1 337 1 199 1 
46 1 148 1 0 1 47 2 16 2 198 1 204 1 141 1 342 2 19 1 102 1 
46 1 0 2 47 4 107 1 16 5 170 1 198 3 336 1 204 2 353 1 199 1 311 1 141 2 371 1 342 5 19 1 
46 1 0 2 47 4 107 1 16 5 170 1 151 1 198 3 336 1 204 2 353 1 199 1 141 2 371 1 342 5 19 1 
0 1 159 2 292 1 47 1 230 1 16 1 86 1 152 1 198 1 204 1 88 1 199 1 187 1 141 1 342 1 259 1 212 2 228 1 
0 2 47 1 202 1 16 1 64 1 198 1 336 1 204 1 88 1 141 1 342 1 21 1 247 1 
206 1 292 1 255 1 53 1 172 1 
292 1 166 1 160 1 322 1 25 1 255 2 350 1 287 1 172 2 338 1 206 1 234 1 108 2 245 1 53 2 23 1 165 1 55 1 361 2 
206 1 159 1 103 1 259 1 75 1 53 1 172 1 6 1 212 1 
206 1 245 1 350 1 
365 1 4 1 256 1 205 1 
365 1 2 1 264 1 4 1 99 1 343 1 205 1 
2 1 274 1 145 1 
253 1 2 1 304 1 264 1 4 1 205 1 97 1 99 1 343 1 54 1 
365 1 2 2 264 1 4 1 99 1 343 2 43 1 225 1 205 1 
335 1 1 1 365 1 2 1 213 1 304 1 27 1 264 1 99 1 343 1 100 1 
365 1 2 1 304 1 264 1 99 1 343 1 205 1 
2 1 304 1 264 1 4 1 99 1 343 1 205 2 
365 1 2 2 304 1 264 2 137 1 205 1 99 2 343 2 10 1 376 1 
1 1 2 3 365 2 304 1 264 1 4 1 43 2 205 1 356 1 99 1 343 3 157 1 344 1 
335 2 365 1 2 2 304 1 213 1 264 1 27 1 4 1 325 1 266 1 43 1 205 1 99 1 343 2 12 1 
1 1 2 4 365 2 304 1 264 2 4 1 77 1 43 2 205 1 99 2 343 4 344 1 225 1 
365 1 2 1 304 1 264 1 4 1 99 1 343 1 205 1 
253 2 1 1 2 3 365 2 264 1 4 2 43 2 205 2 97 1 99 1 343 3 344 1 54 1 
114 1 365 1 2 2 304 1 264 1 4 1 43 1 205 1 258 1 163 1 99 1 343 2 
253 1 2 1 304 1 264 1 4 1 205 1 89 1 99 1 343 1 54 1 
365 2 94 1 360 2 76 1 
2 1 304 1 264 1 99 1 343 1 84 1 
356 1 365 1 2 2 304 1 264 1 4 1 99 1 343 2 43 1 205 1 
33 1 
365 1 2 1 304 1 264 1 4 1 99 1 343 1 205 1 
356 1 365 1 2 3 304 1 264 1 4 1 99 1 343 3 43 1 51 1 205 1 
253 1 1 1 365 1 344 1 
365 1 205 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (27,141,332) 60 (70,186,283) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (27,141,332) 60 295 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (27,141,332) 60 295 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 193 (101,221,280) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (27,141,332) 60 (70,186,283) 293 74 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (27,141,332) 60 (70,186,283) 293 74 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (27,141,332) 60 (70,186,283) 293 74 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (27,141,332) 60 (70,186,283) 293 74 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (27,141,332) 60 (70,186,283) 293 74 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (27,141,332) 60 (70,186,283) 293 74 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (27,141,332) 60 (70,186,283) 293 74 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (27,141,332) 60 (70,186,283) 293 74 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (27,141,332) 60 (70,186,283) 293 74 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (27,141,332) 60 (70,186,283) 293 74 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (27,141,332) 60 (70,186,283) 293 74 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (27,141,332) 60 (70,186,283) 293 74 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (27,141,332) 60 295 250 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 356 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
24 2 318 2 142 3 319 1 340 1 120 1 160 1 94 5 95 1 227 2 229 2 167 2 34 1 236 1 169 9 76 1 75 1 278 6 77 1 326 1 238 9 44 2 134 1 243 1 261 2 136 1 220 4 176 1 
24 2 318 2 142 3 319 1 340 1 120 1 160 1 94 5 95 1 227 2 229 2 167 2 34 1 236 1 169 9 76 1 75 1 278 6 77 1 326 1 238 9 44 2 134 1 243 1 261 2 136 1 220 4 176 1 
24 2 318 2 142 4 319 1 340 1 120 1 160 1 94 6 95 1 227 2 229 2 167 2 34 1 236 1 169 10 76 1 75 1 278 7 77 1 326 1 238 10 44 2 134 1 243 1 261 2 136 1 220 5 176 1 
24 2 318 2 142 2 319 1 340 1 120 1 160 1 94 4 95 1 227 1 229 2 167 2 34 1 236 1 169 7 76 1 75 1 278 4 77 1 326 1 238 7 44 2 134 1 243 1 261 2 136 1 220 3 
169 4 76 1 75 1 24 1 77 1 278 3 142 1 238 4 120 1 94 3 44 1 227 2 229 1 167 1 261 1 136 1 220 2 176 1 
169 2 76 1 24 1 318 1 326 1 238 2 339 1 120 1 94 1 44 1 229 1 167 1 134 1 136 1 49 1 256 1 
169 3 76 1 278 1 318 1 142 1 238 3 120 1 160 1 94 2 44 2 167 2 136 1 220 1 
316 1 24 1 318 1 142 3 319 1 160 1 120 1 94 5 227 2 229 1 167 2 102 1 34 1 169 9 76 1 75 1 278 7 77 1 238 9 44 2 261 1 136 1 220 4 176 1 
316 1 24 1 318 1 142 3 319 1 160 1 120 1 94 5 227 2 229 1 167 2 102 1 34 1 169 9 76 1 75 1 278 7 77 1 238 9 44 2 261 1 136 1 220 4 176 1 
32 1 108 1 153 1 
178 1 32 1 48 2 
323 1 332 2 141 2 321 1 336 2 294 2 27 2 138 2 
179 1 266 1 141 3 118 1 299 1 91 1 336 3 67 1 27 2 300 1 301 1 268 1 145 1 97 1 4 1 302 1 321 1 208 1 271 1 72 1 210 1 55 2 35 1 351 1 323 1 57 2 188 1 355 2 190 1 281 1 81 1 332 2 16 2 294 2 360 2 18 1 138 2 
323 1 332 1 141 1 98 1 336 1 85 1 294 1 27 1 36 1 138 1 
27 1 60 1 186 1 
141 1 336 1 41 1 27 1 283 1 153 1 70 2 332 1 32 1 294 1 262 1 174 2 138 1 149 1 36 1 
291 1 214 1 174 1 19 1 70 1 
214 1 32 1 252 1 174 2 11 1 19 1 153 1 70 2 
214 1 174 1 70 1 
323 1 126 1 141 1 336 1 27 1 70 1 332 1 98 1 85 1 294 1 174 1 19 1 36 1 138 1 
32 1 
323 1 126 1 141 1 214 1 336 1 27 1 70 2 153 1 332 1 98 1 252 1 32 1 85 1 294 1 174 2 19 1 274 1 36 1 138 1 
127 2 214 2 189 2 58 1 80 2 152 1 205 1 153 1 70 5 260 1 32 1 252 1 173 1 174 5 334 1 47 1 19 2 211 1 350 1 
321 1 108 1 
353 1 141 2 336 2 27 2 332 1 321 2 294 1 21 1 138 1 
346 1 232 1 329 1 
266 1 141 1 188 1 91 1 336 1 216 1 301 1 268 1 81 1 145 1 16 1 321 1 360 1 18 1 55 1 351 1 
266 1 141 2 188 1 91 1 336 2 27 1 301 1 268 1 81 1 341 1 145 1 204 1 332 1 16 1 294 1 232 1 360 1 18 1 55 1 351 1 
353 1 141 4 336 4 27 5 60 1 341 1 204 2 63 1 332 4 321 1 294 4 295 1 138 1 310 1 
332 2 141 2 336 2 85 1 294 2 27 2 86 1 36 1 
332 3 141 3 321 1 336 3 294 3 27 3 204 1 138 1 
332 1 141 1 336 1 85 1 294 1 27 1 36 1 
332 1 353 1 141 1 336 1 294 1 27 1 21 1 36 1 138 1 
266 1 196 1 141 4 91 1 299 1 336 4 67 1 27 3 300 1 301 1 268 1 341 1 145 1 204 1 97 1 70 1 4 1 321 1 208 1 72 1 9 1 210 1 55 1 35 1 149 1 36 1 351 1 323 1 57 2 353 1 188 1 355 1 281 1 41 1 283 1 81 1 332 3 16 1 294 3 262 1 360 1 18 1 174 1 138 2 
332 1 141 1 336 1 294 1 27 2 295 1 60 1 204 1 
353 1 141 3 196 1 336 3 41 1 27 3 283 1 341 1 204 2 170 1 70 1 332 3 32 1 262 1 294 3 174 1 138 1 36 1 149 1 
353 1 141 2 336 2 27 2 204 1 332 2 346 1 294 2 232 1 138 1 
266 1 141 1 188 1 91 1 336 1 268 1 301 1 81 1 145 1 16 1 321 1 360 1 18 1 55 1 351 1 
266 1 141 1 317 1 91 1 336 1 268 1 301 1 81 1 224 1 145 1 16 1 321 1 360 1 18 1 55 1 
117 1 67 2 199 1 300 1 97 1 225 1 4 1 346 2 8 1 232 2 73 1 210 1 35 1 57 2 187 1 237 1 355 4 190 2 281 1 329 2 358 1 82 1 112 1 298 1 
332 1 141 1 336 1 294 1 27 1 86 1 36 1 149 1 
221 1 244 1 
221 1 244 1 
193 1 280 1 
193 1 280 1 
193 1 280 1 
221 1 320 1 244 1 
221 1 320 1 244 1 
221 1 193 1 280 1 244 1 
221 1 101 1 244 1 
221 1 320 1 244 1 
221 1 286 1 244 1 
221 1 286 1 244 1 
221 1 286 1 244 1 
221 1 140 1 66 1 141 2 143 1 336 2 223 1 27 2 201 1 52 1 70 1 344 1 183 1 228 1 321 1 101 1 148 1 124 1 103 1 171 1 332 2 294 2 174 1 244 1 
221 2 277 1 66 2 198 1 143 3 223 1 357 1 201 2 287 2 132 1 70 2 171 2 32 1 166 1 273 1 174 2 64 1 244 2 103 2 
24 1 229 1 261 1 
24 1 229 1 49 1 
246 1 229 3 261 2 348 1 49 1 240 1 
246 1 229 2 261 1 348 1 49 1 182 1 
246 2 229 2 261 1 348 1 49 1 
178 1 156 1 117 1 342 1 162 1 52 1 70 5 206 1 344 1 183 1 252 1 32 2 8 1 211 2 322 1 350 1 39 2 104 1 127 1 214 1 189 1 106 1 80 1 358 1 82 1 110 2 153 1 174 5 48 3 19 4 47 3 87 2 
178 3 117 3 342 2 52 4 70 9 123 1 147 1 304 1 32 5 252 1 8 3 211 6 322 3 350 1 39 6 104 2 214 6 127 2 189 2 106 1 80 2 358 3 15 5 82 3 110 6 289 1 153 1 291 5 45 1 334 1 174 9 48 9 19 7 47 8 113 1 
178 2 156 1 117 1 342 1 52 1 206 1 70 3 32 3 8 1 322 1 211 2 104 1 39 2 127 1 189 1 80 1 358 1 82 1 110 2 153 1 174 3 334 1 19 2 47 3 48 4 87 1 
178 3 156 1 117 2 342 1 52 2 70 4 206 1 304 1 32 4 8 2 322 2 211 4 39 4 104 1 127 1 189 1 80 1 358 2 82 2 110 4 153 1 289 1 45 1 174 4 334 1 48 7 47 5 19 3 87 2 
314 1 108 1 301 1 
249 1 301 1 
168 1 
301 1 18 1 81 1 
119 1 301 1 
301 1 81 1 
314 2 301 3 18 1 81 1 180 1 22 1 
355 7 190 4 282 1 67 3 151 1 358 1 359 1 82 1 225 2 285 1 164 1 305 1 99 1 231 1 272 2 333 1 298 3 
355 7 190 4 282 1 67 3 151 1 358 1 359 1 82 1 225 2 285 1 164 1 305 1 99 1 231 1 272 2 333 1 298 3 
355 7 190 4 282 1 67 3 151 1 358 1 359 1 82 1 225 2 285 1 164 1 305 1 231 1 99 1 347 1 272 2 333 1 298 3 
247 1 117 3 67 18 300 1 203 1 225 8 164 5 4 1 207 1 305 2 231 1 99 1 272 2 8 3 210 1 33 1 322 3 57 2 355 37 281 1 190 19 191 3 282 2 151 5 359 9 358 6 285 1 82 6 288 1 242 1 313 4 333 2 195 1 175 1 298 17 
67 4 300 2 225 3 4 2 164 1 99 1 231 1 305 1 272 2 210 2 234 1 33 1 57 4 355 9 281 2 190 5 282 1 151 1 358 1 359 1 82 1 333 1 139 1 298 4 
24 1 197 1 318 1 91 1 1 1 120 1 200 1 94 1 145 1 229 2 167 1 254 1 55 1 349 1 169 2 76 1 276 1 352 1 278 1 238 2 61 1 44 1 240 1 16 1 261 1 360 1 136 1 297 1 49 1 362 1 
24 1 197 1 318 1 91 1 1 1 200 1 94 1 145 1 229 2 167 1 254 1 55 1 169 3 76 1 276 1 324 1 278 2 238 3 150 1 61 1 44 1 240 1 16 1 111 1 261 1 360 1 136 1 297 1 49 1 362 1 
24 1 197 1 318 1 91 1 200 1 94 1 145 1 229 2 254 1 55 1 169 2 76 1 276 1 278 2 238 2 150 1 61 1 240 1 16 1 111 1 261 1 360 1 136 1 49 1 362 1 
23 1 318 2 91 1 268 1 301 1 159 1 145 1 6 1 167 1 254 2 209 1 55 1 169 1 125 1 276 2 324 1 238 1 81 1 61 2 44 1 16 1 292 1 360 1 
169 1 276 1 24 1 197 1 318 1 91 1 1 1 238 1 200 1 120 1 145 1 61 1 44 1 240 1 111 1 16 1 229 2 167 1 261 1 254 1 360 1 55 1 49 1 297 1 362 1 349 1 
68 1 
23 1 91 1 27 1 301 1 268 2 161 1 145 1 181 1 70 2 230 1 252 1 55 2 186 1 74 1 211 1 350 1 104 1 125 1 127 1 214 2 189 1 80 1 60 1 81 1 14 1 330 1 16 2 293 1 360 2 174 2 47 1 
293 1 27 1 174 1 60 1 186 1 14 1 74 1 330 1 70 1 
293 1 27 1 174 1 60 1 186 1 14 1 74 1 330 1 70 1 
293 1 27 1 174 1 60 1 186 1 14 1 74 1 330 1 70 1 
214 1 252 1 293 1 27 1 174 2 60 1 274 1 186 1 14 1 74 1 330 1 70 2 
127 1 189 1 27 1 80 1 60 1 14 1 330 1 70 1 293 1 174 1 74 1 186 1 350 1 
293 1 27 1 174 1 60 1 186 1 14 1 74 1 330 1 70 1 
293 1 27 1 174 1 60 1 186 1 14 1 74 1 330 1 70 1 
293 1 27 1 174 1 60 1 186 1 14 1 74 1 330 1 70 1 
293 1 27 1 174 1 60 1 186 1 14 1 74 1 330 1 70 1 
293 1 27 1 174 1 60 1 186 1 14 1 74 1 330 1 70 1 
127 1 189 1 27 1 80 1 60 1 14 1 330 1 70 1 293 1 174 1 74 1 186 1 350 1 
67 3 300 1 97 1 225 2 4 1 164 1 231 1 99 1 305 1 346 1 321 2 272 1 232 1 210 1 35 1 57 2 355 6 281 1 190 3 108 1 151 1 329 1 358 1 82 1 112 1 298 2 
117 1 118 1 267 1 67 6 300 2 203 1 225 1 97 2 4 2 321 1 184 1 346 4 72 1 8 2 232 11 210 2 35 1 322 2 212 1 57 4 355 14 281 2 190 8 191 3 329 11 359 1 358 1 82 2 242 1 313 3 155 1 172 1 298 2 
266 1 141 2 118 1 91 1 336 2 27 1 67 1 301 1 268 1 300 1 341 1 145 1 204 1 97 1 4 1 321 1 346 1 184 1 72 1 210 1 55 1 35 1 351 1 57 2 188 1 105 1 355 2 281 1 190 1 216 1 81 1 16 1 332 1 294 1 360 1 18 1 46 1 264 1 
266 2 141 3 91 2 222 2 268 1 145 2 225 4 97 3 4 3 231 1 99 1 321 2 184 1 272 1 54 1 8 2 232 7 55 3 322 2 57 6 188 2 279 2 281 3 190 10 151 1 329 7 111 1 16 3 332 1 294 1 17 2 18 2 335 2 298 8 117 2 118 1 336 3 67 10 27 1 300 3 301 2 341 1 122 1 204 1 164 1 305 1 208 2 346 7 72 1 210 3 35 3 351 2 355 20 43 1 81 2 358 3 359 4 82 3 360 3 
23 1 141 1 118 1 91 2 336 1 27 1 67 1 301 3 268 2 300 2 3 1 204 1 145 2 97 2 4 2 302 2 72 1 210 2 55 8 35 2 311 1 125 1 352 1 57 4 213 1 355 2 281 2 190 1 42 1 81 2 131 1 111 1 332 1 16 8 112 1 294 1 360 7 137 1 65 1 
141 1 117 1 336 1 27 1 67 2 300 1 225 1 97 1 4 1 346 1 184 1 8 1 232 1 185 1 210 1 35 1 322 1 353 1 57 2 355 3 281 1 190 1 329 1 358 1 82 1 332 1 294 1 138 1 298 1 
57 2 355 2 281 1 190 2 199 1 300 1 329 1 359 1 97 1 82 1 4 1 346 1 112 1 8 1 232 1 210 1 35 1 298 1 
57 2 187 1 117 1 355 2 281 1 67 2 300 1 329 1 358 1 225 1 97 1 4 1 346 1 112 1 232 1 210 1 35 1 298 1 
117 1 67 2 300 1 97 1 225 1 4 1 346 2 8 1 232 2 210 1 35 1 322 1 57 2 355 4 190 2 281 1 329 2 359 1 358 1 82 1 112 1 298 2 
213 1 57 2 355 2 281 1 190 2 199 1 300 1 329 1 359 1 97 1 82 1 4 1 346 1 8 1 232 1 210 1 35 1 298 1 
213 1 57 2 187 1 117 1 355 2 281 1 67 2 300 1 329 1 358 1 225 1 97 1 4 1 346 1 232 1 210 1 35 1 298 1 
117 1 67 2 300 1 97 1 225 1 4 1 346 2 8 1 232 2 210 1 35 1 322 1 57 2 213 1 355 4 190 2 281 1 329 2 359 1 358 1 82 1 298 2 
117 1 67 2 300 1 97 1 225 1 4 1 346 2 8 1 232 2 210 1 35 1 322 1 57 2 355 4 190 2 281 1 329 2 359 1 358 1 82 1 298 2 
266 1 141 1 118 1 91 1 336 1 67 1 268 1 301 1 300 1 145 1 97 1 4 1 321 1 208 1 72 1 210 1 55 1 35 1 351 1 57 2 188 1 355 2 190 1 281 1 81 1 16 1 360 1 18 1 
266 1 141 1 118 1 317 1 91 1 336 1 67 1 268 1 301 1 300 1 145 1 224 1 97 1 4 1 321 1 72 1 210 1 55 1 35 1 57 2 355 2 190 1 281 1 81 1 154 1 16 1 360 1 18 1 
117 1 67 2 300 1 97 1 225 1 4 1 184 1 346 2 8 1 232 2 210 1 35 1 322 1 57 2 355 4 190 2 281 1 329 2 359 1 358 1 82 1 298 2 
266 1 117 1 141 1 91 1 336 1 67 2 301 1 300 1 145 1 225 1 97 1 4 1 346 2 208 1 8 1 232 2 210 1 55 1 35 1 322 1 351 1 352 1 57 2 188 1 355 4 190 2 281 1 329 2 81 1 358 1 359 1 82 1 16 1 360 1 18 1 335 1 298 2 
117 1 141 1 336 1 67 1 27 1 300 1 97 1 4 1 184 1 346 1 8 1 232 1 210 1 308 1 35 1 322 1 353 1 57 2 355 3 281 1 190 2 329 1 358 1 359 1 82 1 332 1 294 1 138 1 298 1 
0 1 117 3 337 1 67 10 51 1 300 2 203 1 225 3 4 2 8 3 210 2 234 1 309 2 322 3 12 1 57 4 355 19 281 2 190 9 191 1 359 3 358 3 239 1 82 3 242 1 313 2 84 1 194 1 361 2 298 6 
89 1 117 2 90 1 25 1 67 12 51 2 300 3 203 2 225 2 251 1 4 3 8 3 210 3 33 2 234 1 309 4 322 3 12 2 57 6 355 26 281 3 190 14 191 2 129 1 359 2 358 2 239 1 62 1 82 3 84 1 313 2 194 1 361 1 298 4 
0 1 89 1 90 1 51 2 225 4 4 3 99 1 231 1 272 1 8 4 234 1 322 4 12 1 57 6 190 20 281 3 191 3 151 1 62 1 239 1 242 1 194 1 298 8 117 4 25 1 67 21 300 3 203 3 30 1 251 1 164 1 305 1 210 3 33 1 309 4 355 41 129 1 358 5 359 4 82 5 84 1 313 4 361 1 
0 1 89 1 117 3 90 1 25 1 67 18 51 2 300 4 203 3 225 4 30 1 251 1 164 1 4 4 305 1 231 1 99 1 272 1 8 4 210 4 33 2 234 1 309 4 322 4 12 1 57 8 355 38 281 4 190 20 191 3 151 1 129 1 359 3 358 4 239 1 62 1 82 5 242 1 313 4 84 1 194 1 361 1 298 7 
89 1 117 7 90 1 25 1 67 25 51 1 300 2 203 2 225 7 251 1 164 1 4 2 305 1 231 1 99 1 272 1 8 7 210 2 33 1 234 1 309 4 322 7 212 2 12 1 57 4 355 52 281 2 190 27 191 4 151 1 129 1 359 7 358 8 239 1 62 1 82 8 242 2 313 4 84 1 194 1 361 1 298 14 
221 1 171 1 277 1 66 1 273 1 59 1 201 1 64 1 244 1 103 1 
101 1 124 1 
241 1 221 1 171 1 66 1 201 1 275 1 56 1 244 1 103 1 
320 1 257 1 
71 1 233 1 286 1 
221 1 277 1 66 1 198 1 143 2 223 1 201 1 287 1 132 1 70 1 171 1 32 1 166 1 273 1 174 1 64 1 244 1 103 1 
221 1 277 1 66 1 198 1 143 2 223 1 201 1 287 1 132 1 70 1 171 1 32 1 166 1 273 1 174 1 64 1 244 1 103 1 
221 1 277 1 66 1 198 1 143 2 223 1 201 1 287 1 132 1 70 1 171 1 32 1 166 1 273 1 174 1 64 1 244 1 103 1 
71 1 320 1 257 1 
71 1 320 1 257 1 
233 1 286 1 
71 1 233 1 286 1 
140 1 148 1 
221 1 140 1 141 2 66 1 336 2 143 1 27 2 338 1 201 1 52 1 70 1 344 1 183 1 228 1 321 1 166 1 101 1 148 1 124 1 103 1 287 1 171 1 332 2 294 2 174 1 19 1 244 1 
115 1 315 1 141 2 118 1 91 1 336 2 27 2 67 1 301 1 300 1 144 1 145 1 97 1 226 1 4 1 302 2 184 1 72 1 210 1 55 2 35 1 311 1 57 2 355 2 281 1 190 1 81 1 130 1 16 2 360 2 65 1 
276 1 352 1 24 1 116 1 197 1 91 1 215 1 158 1 145 1 240 1 111 1 16 2 229 2 261 1 360 2 55 2 49 1 297 1 362 1 
276 1 24 1 354 1 197 1 91 1 215 1 145 1 240 1 111 1 16 1 229 2 261 1 360 1 55 1 49 1 297 1 362 1 
23 1 125 1 276 1 91 1 158 1 301 1 268 1 81 1 145 1 16 1 292 1 360 1 55 1 37 1 
276 1 24 1 116 1 197 1 91 1 215 1 158 1 145 1 240 1 111 1 16 1 229 2 261 1 360 1 55 1 49 1 297 1 362 1 
38 1 
260 1 32 1 108 1 47 1 152 1 211 1 153 1 
178 1 70 1 32 2 270 1 252 1 100 1 211 1 350 1 127 1 214 1 189 1 80 1 153 1 174 1 47 1 48 1 296 1 
178 6 91 3 268 1 93 2 145 4 180 1 96 2 230 1 8 2 55 3 322 2 104 2 189 4 279 2 152 1 110 6 153 2 16 3 18 3 114 1 20 1 117 2 249 3 119 2 301 10 343 2 70 5 165 2 303 1 31 2 252 3 32 8 211 8 350 4 39 6 352 1 127 4 214 5 80 4 79 1 258 2 81 3 358 2 82 2 218 1 83 2 260 1 262 2 360 3 314 2 135 2 174 5 47 9 48 12 
178 3 89 1 117 2 90 1 25 1 121 1 203 1 70 1 165 2 31 1 230 1 252 1 32 5 8 2 10 1 211 5 322 2 350 2 104 1 39 5 214 1 127 2 189 2 191 1 80 2 129 1 358 2 62 1 82 2 110 5 153 2 313 1 174 1 48 6 47 8 
141 1 336 1 27 1 70 1 165 2 164 1 31 1 305 1 98 1 36 1 211 2 350 1 323 1 126 1 127 1 189 1 80 1 328 1 151 1 358 1 82 2 332 1 85 1 294 1 174 1 47 2 175 1 138 1 
260 1 127 1 32 1 189 1 80 1 47 1 152 1 211 1 153 1 350 1 
39 5 178 5 117 2 279 1 358 2 82 2 110 5 165 2 31 1 32 5 8 2 48 10 47 5 322 2 211 5 
214 1 32 1 252 1 174 1 153 1 70 1 
23 1 91 1 301 1 268 2 161 1 145 1 181 1 70 3 230 2 252 2 255 1 55 4 211 2 350 1 104 2 125 1 127 2 214 4 189 2 80 2 81 1 218 2 133 1 16 4 360 4 334 1 174 3 47 2 114 1 
266 1 141 3 299 1 91 1 336 3 67 1 27 2 268 1 301 1 300 1 145 1 97 1 4 1 321 1 208 1 72 1 210 1 55 1 35 1 351 1 323 1 57 2 188 1 355 1 281 1 81 1 16 1 332 2 294 2 360 1 18 1 138 2 
178 2 39 2 104 1 127 1 189 1 80 1 110 2 153 2 32 4 230 1 272 1 48 4 47 1 211 2 350 1 
66 1 201 1 88 1 
66 1 201 1 88 1 
140 1 277 1 66 1 201 1 202 1 
66 1 201 1 88 1 
331 1 66 1 201 1 
331 1 66 1 201 1 
331 1 66 1 201 1 
66 1 201 1 
221 1 244 1 
57 4 355 8 190 4 281 2 67 4 300 2 151 1 358 1 359 1 82 1 225 2 4 2 164 1 305 1 99 1 231 1 272 1 210 2 33 1 298 3 
355 6 190 3 67 3 108 1 151 1 358 1 225 2 82 1 164 1 99 1 231 1 305 1 272 1 298 2 
57 2 117 1 355 4 281 1 190 2 67 2 300 1 358 1 359 1 225 1 82 1 4 1 7 1 8 1 210 1 322 1 298 2 
117 1 355 7 190 3 191 1 67 4 358 1 203 1 359 1 225 1 82 1 242 1 313 2 8 1 322 1 298 2 
117 2 67 12 300 2 225 5 164 2 4 2 345 1 305 1 231 1 99 1 272 1 8 2 210 2 33 2 322 2 212 1 57 4 355 23 190 11 281 2 191 2 151 2 359 4 358 3 82 3 242 1 313 2 155 1 298 9 
355 1 313 1 67 1 
355 1 190 1 191 1 
57 2 117 1 279 1 355 6 281 1 190 3 67 3 300 1 359 1 358 1 82 1 225 2 4 1 7 1 8 1 210 1 322 1 298 3 
117 2 89 1 90 1 25 1 67 6 300 1 203 1 225 1 4 1 8 2 210 1 234 1 322 2 57 2 355 12 281 1 190 6 191 1 129 1 359 1 358 2 62 1 82 2 313 1 298 2 
355 6 190 3 67 3 151 1 358 1 359 1 82 1 225 1 164 1 305 1 298 2 
57 2 355 3 190 1 281 1 67 2 300 1 151 1 359 1 225 1 164 1 4 1 345 1 231 1 99 1 210 1 33 1 298 2 
57 2 355 10 281 1 190 5 67 5 300 1 151 2 359 2 358 2 225 3 82 2 4 1 164 2 305 1 210 1 234 1 175 1 298 5 
57 2 355 2 281 1 190 2 300 1 359 1 82 1 4 1 8 1 210 1 234 1 298 1 
57 2 117 1 355 4 281 1 190 2 67 2 300 1 358 1 359 1 225 1 82 1 4 1 8 1 210 1 234 1 322 1 298 2 
0 1 57 6 355 3 281 3 190 1 67 2 300 3 151 1 359 1 225 1 4 3 164 1 345 1 210 3 33 1 234 1 298 2 
247 1 0 1 117 3 67 14 300 4 203 1 225 5 164 2 207 1 4 4 305 1 231 1 99 1 7 1 272 1 8 3 210 4 33 1 234 1 322 3 57 8 355 27 281 4 190 13 191 3 151 2 359 5 358 4 82 4 288 1 242 1 313 4 298 10 
117 1 89 1 90 1 25 1 67 4 300 2 203 1 225 1 4 2 8 2 210 2 33 1 234 1 322 2 57 4 355 11 281 2 190 7 191 1 129 1 359 1 358 1 62 1 82 2 313 1 298 2 
89 1 117 1 90 1 25 1 67 5 300 3 203 1 225 1 4 3 7 1 8 3 210 3 33 1 234 1 322 3 57 6 355 14 281 3 190 9 191 1 129 1 359 2 358 1 82 3 62 1 242 1 313 2 298 3 
89 1 117 2 90 1 25 1 67 10 300 3 203 1 225 3 164 1 4 3 305 1 231 1 99 1 7 1 272 1 8 2 210 3 234 1 33 1 322 2 57 6 355 19 281 3 190 9 191 1 151 1 129 1 359 1 358 3 62 1 82 3 313 1 298 4 
117 1 89 1 90 1 25 1 67 7 300 3 203 1 225 3 164 1 4 3 305 1 231 1 99 1 7 1 272 1 8 2 210 3 33 1 234 1 322 2 57 6 355 17 281 3 190 10 191 1 151 1 129 1 359 2 358 2 62 1 82 3 313 1 298 5 
117 1 89 1 90 1 25 1 67 4 300 2 203 1 225 1 4 2 8 2 210 2 33 1 234 1 322 2 57 4 355 11 281 2 190 7 191 1 129 1 359 1 358 1 62 1 82 2 313 1 298 2 
117 2 89 1 90 1 25 1 67 6 300 1 203 1 225 1 4 1 8 2 210 1 234 1 322 2 57 2 355 12 281 1 190 6 191 1 129 1 359 1 358 2 62 1 82 2 313 1 298 2 
89 1 117 1 90 1 25 1 67 8 300 4 203 1 225 3 164 1 4 4 305 1 231 1 99 1 7 1 272 1 8 2 210 4 234 1 33 2 322 2 57 8 355 18 281 4 190 10 191 1 151 1 129 1 359 2 358 2 62 1 82 3 313 1 298 5 
0 1 89 1 117 2 90 1 25 1 67 7 300 4 203 1 225 3 4 4 8 3 210 4 234 1 33 2 322 3 57 8 355 16 281 4 190 9 191 1 129 1 359 3 358 2 62 1 82 3 313 1 298 6 
355 7 190 3 67 4 151 3 358 1 359 3 225 3 82 1 164 3 99 1 231 2 305 1 298 6 
0 1 89 1 117 1 90 1 25 1 67 8 300 4 203 1 225 3 164 1 4 4 305 1 231 1 99 1 272 1 8 2 210 4 234 1 33 2 322 2 57 8 355 18 281 4 190 10 191 1 151 1 129 1 359 1 358 2 62 1 82 3 313 1 298 4 
250 1 27 1 295 1 60 1 
107 1 356 1 327 1 29 1 284 1 
125 1 23 1 16 1 91 1 108 1 360 1 301 1 268 1 55 1 81 1 145 1 
266 1 141 2 188 1 91 1 336 2 27 1 301 1 268 1 81 1 145 1 204 1 332 1 16 1 321 1 294 1 360 1 18 1 55 1 
266 1 141 2 188 1 91 1 336 2 41 1 119 1 27 2 301 3 93 1 81 2 145 1 204 1 218 1 332 2 16 1 321 1 294 1 360 1 18 2 55 1 36 1 149 1 
266 1 141 2 317 1 91 1 336 2 41 1 119 1 27 2 301 3 93 1 81 2 145 1 204 1 218 1 332 2 16 2 321 1 294 1 360 2 18 2 55 2 50 1 36 1 149 1 
214 1 325 1 91 1 249 1 119 1 268 1 301 4 81 1 93 1 145 1 218 1 153 1 70 2 16 3 32 1 262 1 360 3 314 1 18 1 174 2 55 3 50 1 235 1 
214 1 91 1 249 1 119 1 268 1 301 4 81 1 93 1 145 1 96 1 218 1 153 1 70 2 16 3 32 1 262 1 360 3 314 1 18 1 174 2 55 3 50 1 
16 1 91 1 360 1 42 1 55 1 145 1 
311 1 352 1 91 2 42 1 268 2 301 3 28 1 3 1 81 2 180 1 145 3 131 1 302 1 111 1 16 7 253 1 360 6 18 1 55 7 219 1 137 1 
266 1 141 2 91 1 145 1 97 2 225 2 4 2 99 1 231 1 184 1 321 2 272 1 232 1 55 1 57 4 188 1 281 2 190 3 151 1 329 1 16 1 332 1 17 1 294 1 18 1 335 1 298 2 115 1 336 2 27 1 67 3 300 2 301 1 204 1 164 1 305 1 346 1 208 1 210 2 35 2 351 1 352 1 355 6 81 1 358 1 82 1 360 1 
249 1 268 1 301 2 96 1 70 3 343 1 32 1 252 1 55 1 211 1 350 2 127 2 214 2 189 2 80 2 152 1 258 1 153 1 260 1 16 1 262 1 360 1 314 1 174 3 135 1 47 1 19 1 114 1 
352 1 91 1 42 1 79 1 301 2 81 1 180 1 145 2 16 2 314 1 360 2 18 1 55 2 
23 1 125 1 352 1 91 1 40 1 268 1 301 1 81 1 145 1 16 4 360 4 55 4 50 1 
91 1 248 1 301 1 28 1 43 1 192 1 81 1 145 2 218 1 16 2 253 1 360 2 18 1 55 2 
16 1 24 1 229 1 91 1 360 1 268 1 55 1 49 1 145 1 362 1 
311 1 111 1 16 2 352 1 91 1 360 2 301 1 55 2 81 1 144 1 145 1 
125 1 23 1 311 1 352 1 91 2 40 1 268 1 301 3 81 2 145 2 218 1 131 1 16 5 360 4 55 5 137 1 
125 1 23 1 311 1 352 1 13 1 91 2 40 1 268 1 301 3 81 2 145 2 218 1 131 1 16 5 360 4 55 5 
266 1 141 2 317 1 91 1 336 2 27 1 301 1 268 1 81 1 145 1 204 1 332 1 16 1 321 1 294 1 360 1 18 1 55 1 
91 1 301 1 28 1 81 1 180 1 145 2 218 1 16 1 253 1 360 1 18 1 55 1 219 1 
157 1 321 1 307 1 109 1 217 1 
157 2 196 1 41 1 283 1 109 2 217 1 153 1 70 2 69 1 53 1 32 1 321 1 307 2 262 1 174 2 19 1 36 1 149 1 245 1 
315 1 141 1 336 1 27 1 109 1 217 1 130 1 226 1 307 1 
217 1 245 1 69 1 
76 1 108 1 136 1 94 1 
169 1 76 1 167 1 238 1 136 1 94 1 44 1 
318 1 254 1 238 1 
169 3 76 1 2 1 326 2 269 1 238 3 120 1 94 1 44 1 312 1 167 1 136 1 
227 1 169 2 76 1 278 1 167 1 238 2 136 1 94 1 44 1 
169 1 75 1 24 1 238 1 120 1 94 1 44 1 229 1 167 1 261 1 220 1 
169 1 76 1 167 1 238 1 120 1 94 1 44 1 
169 1 76 2 167 1 238 1 136 1 120 1 44 1 
169 2 76 1 238 2 120 1 94 1 44 2 5 1 306 1 167 2 263 1 
169 3 76 1 278 2 142 1 319 1 238 3 120 1 94 2 44 1 167 1 136 1 34 1 220 1 
169 2 76 1 24 1 278 1 238 2 120 1 94 1 44 1 259 1 240 1 229 2 167 1 261 1 136 1 49 1 
169 4 76 1 278 2 142 1 238 4 120 1 94 2 44 2 227 1 167 2 136 1 220 1 176 1 
169 1 76 1 167 1 238 1 136 1 120 1 94 1 44 1 
169 4 76 2 278 2 142 1 326 1 2 1 92 1 238 4 94 3 44 1 312 1 167 1 136 2 220 1 
169 2 177 1 76 1 278 1 238 2 120 1 94 1 44 1 163 1 167 1 136 1 102 1 
169 3 76 1 2 1 326 2 238 3 120 1 94 1 44 1 290 1 312 2 167 1 136 1 
146 1 128 2 94 2 265 1 
169 1 167 1 78 1 238 1 120 1 44 1 
169 2 76 1 278 1 167 1 319 1 238 2 136 1 120 1 94 1 44 1 
26 1 
169 1 76 1 167 1 238 1 136 1 120 1 94 1 44 1 
169 3 76 1 278 1 167 1 319 1 326 1 238 3 136 1 120 1 94 1 44 1 
142 1 92 1 94 1 220 1 
76 1 94 1 

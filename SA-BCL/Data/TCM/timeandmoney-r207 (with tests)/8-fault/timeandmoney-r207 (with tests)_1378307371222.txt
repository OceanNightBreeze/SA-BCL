#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 174 231 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 174 231 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (41,225,279,294,315) (78,128) (78,128) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (41,225,279,294,315) (78,128) (78,128) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (41,225,279,294,315) (78,128) (78,128) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (41,225,279,294,315) (78,128) (78,128) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (41,225,279,294,315) (80,257) (80,257) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 332 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (143,145,190,258) (143,145,190,258) (65,91,316) (65,91,316) (65,91,316) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (143,145,190,258) (143,145,190,258) (65,91,316) (65,91,316) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (143,145,190,258) (143,145,190,258) (65,91,316) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (143,145,190,258) (143,145,190,258) (65,91,316) (65,91,316) (65,91,316) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 353 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 353 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (143,145,190,258) (143,145,190,258) 249 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3624 | < -> !=
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
258 2 2 7 174 1 143 5 207 2 145 2 123 1 194 1 60 1 61 1 251 1 147 1 303 3 343 1 231 1 106 1 199 1 92 1 8 3 188 1 190 7 
258 2 2 7 174 1 143 5 207 2 145 2 123 1 194 1 60 1 61 1 251 1 147 1 303 3 343 1 231 1 106 1 199 1 92 1 8 3 188 1 190 7 
258 1 2 1 239 1 315 1 145 1 123 1 194 1 147 1 51 1 106 1 92 1 107 1 190 1 78 1 128 1 
258 1 2 1 239 1 315 1 145 1 123 1 194 1 147 1 51 1 106 1 92 1 107 1 190 1 78 1 128 1 
258 1 2 1 239 1 315 1 145 1 123 1 194 1 147 1 51 1 106 1 92 1 107 1 190 1 78 1 128 1 
258 1 2 1 239 1 315 1 145 1 123 1 194 1 147 1 51 1 106 1 92 1 107 1 190 1 78 1 128 1 
2 2 258 1 251 1 147 1 303 1 174 1 143 1 106 1 92 1 8 1 145 1 123 1 190 2 61 1 
80 1 257 1 2 1 258 1 147 1 206 1 106 1 315 1 107 1 145 1 123 1 194 1 190 1 
43 1 258 2 2 3 143 1 207 1 145 2 194 1 290 1 303 2 106 1 199 1 8 1 190 3 
275 1 353 1 219 1 
57 1 275 1 149 2 
361 1 277 2 362 2 112 2 97 1 16 2 154 2 79 2 
72 1 309 1 246 1 142 1 97 1 224 1 226 2 168 1 360 1 5 1 361 1 362 3 195 1 104 1 9 1 293 1 325 1 154 3 236 2 79 2 129 1 277 2 82 1 112 2 131 1 278 2 299 1 136 1 179 2 280 1 159 1 281 1 180 1 181 1 352 2 16 2 305 1 
54 1 277 1 238 1 362 1 112 1 97 1 16 1 267 1 154 1 79 1 
54 1 193 1 14 1 222 1 271 1 359 1 209 1 362 1 275 1 284 1 16 1 126 1 154 1 219 1 
277 1 54 1 193 1 112 1 271 1 359 2 209 1 362 1 275 1 284 1 16 1 126 2 154 1 219 1 79 1 
223 1 126 1 359 1 109 1 307 1 
275 1 223 1 217 1 126 2 359 2 109 1 219 1 110 1 
223 1 126 1 359 1 
54 1 238 1 277 1 221 1 112 1 97 1 359 1 362 1 16 1 267 1 126 1 109 1 154 1 79 1 
275 1 
275 1 223 1 276 1 217 1 126 2 359 2 109 1 219 1 
297 1 223 2 371 1 240 2 359 5 351 1 75 1 282 2 275 1 163 1 364 1 217 1 336 1 268 1 126 5 109 2 326 1 219 1 18 2 
129 1 309 1 112 1 142 1 168 1 159 1 280 1 179 1 62 1 181 1 195 1 362 2 184 1 352 1 16 1 9 1 154 2 236 1 79 1 378 1 
361 1 353 1 
277 1 112 1 361 2 362 2 16 2 127 1 154 2 79 1 256 1 
182 1 184 1 337 1 
237 1 309 1 129 1 142 1 168 1 179 1 280 1 159 1 181 1 361 1 362 1 195 1 352 1 9 1 154 1 236 1 
173 1 277 1 14 1 112 4 62 1 29 1 361 1 362 5 16 5 200 1 154 5 79 4 378 2 256 1 
54 1 362 2 112 2 16 2 267 1 154 2 79 2 19 1 
277 1 361 1 362 3 112 3 16 3 154 3 79 3 378 1 
54 1 362 1 112 1 16 1 267 1 154 1 79 1 
54 1 277 1 362 1 112 1 16 1 127 1 154 1 79 1 256 1 
193 1 309 1 246 1 142 1 271 1 97 1 224 1 226 2 168 1 359 1 360 1 5 1 361 1 195 1 362 4 104 1 9 1 126 1 293 1 325 1 154 4 236 1 79 3 256 1 129 1 277 2 54 1 112 3 278 1 299 1 136 1 159 1 280 1 179 1 281 1 62 1 181 1 209 1 161 1 352 1 284 1 285 1 16 3 378 1 
361 1 362 2 14 1 112 1 16 2 200 1 154 2 79 1 378 1 
277 1 193 1 54 1 112 3 271 1 359 1 62 1 209 1 362 3 161 1 275 1 284 1 16 3 126 1 94 1 154 3 79 3 256 1 378 2 
277 1 112 2 362 2 182 1 184 1 16 2 154 2 79 2 378 1 256 1 
309 1 129 1 142 1 168 1 179 1 280 1 159 1 181 1 361 1 362 1 195 1 352 1 9 1 154 1 236 1 
309 1 129 1 168 1 179 1 159 1 146 1 181 1 361 1 362 1 195 1 352 1 323 1 9 1 154 1 236 1 
121 1 246 1 358 1 226 2 48 1 5 1 104 1 365 1 293 2 12 1 368 1 131 2 130 1 278 4 299 1 331 1 300 1 136 1 87 1 281 1 160 1 182 2 184 2 337 2 
54 1 209 1 362 1 112 1 16 1 154 1 79 1 19 1 
23 1 189 1 
23 1 189 1 
96 1 215 1 
96 1 215 1 
96 1 215 1 
23 1 234 1 189 1 
23 1 234 1 189 1 
23 1 47 1 189 1 
96 1 208 1 23 2 36 1 215 1 189 2 
23 1 234 1 189 1 
348 1 23 1 189 1 
348 1 23 1 189 1 
348 1 23 1 189 1 
23 1 144 1 99 1 45 1 47 1 359 1 361 1 362 2 198 1 292 1 126 1 11 1 154 2 79 2 54 1 172 1 347 1 112 2 177 1 86 1 42 1 213 1 16 2 304 1 189 1 244 1 
347 2 172 2 120 2 23 2 36 1 45 1 46 1 274 1 359 2 333 1 275 1 76 1 125 1 292 2 126 2 164 1 189 2 244 2 11 3 
147 1 92 1 123 1 
147 1 206 1 123 1 
147 3 342 1 206 1 363 1 92 2 59 1 
147 2 342 1 206 1 363 1 92 1 270 1 
147 2 342 1 206 1 92 1 363 2 
192 1 71 1 223 1 359 5 275 2 149 2 365 1 364 1 126 5 324 1 109 4 295 1 346 1 111 1 81 2 57 1 371 1 240 1 300 1 85 1 302 1 138 1 282 1 42 1 213 1 217 1 304 1 268 2 219 1 18 1 
192 3 166 1 223 6 358 1 359 9 275 5 149 7 52 1 365 3 364 1 126 9 201 1 324 4 109 7 295 4 368 1 111 2 57 3 371 4 240 2 300 3 85 1 376 5 138 2 210 1 282 2 213 4 68 1 336 1 217 1 268 6 287 1 219 1 307 5 18 2 
71 1 192 1 221 1 97 1 359 3 362 1 275 2 149 2 365 1 126 3 324 1 154 1 109 2 79 1 295 1 54 1 277 1 238 1 111 1 81 1 57 1 112 1 371 1 240 1 300 1 302 1 138 1 282 1 213 1 16 1 267 1 336 1 268 2 219 1 18 1 
192 2 97 1 149 4 52 1 109 3 154 1 295 2 54 1 111 1 57 2 112 1 300 2 302 1 210 1 213 2 16 1 267 1 268 4 219 1 18 1 71 1 221 1 359 4 362 1 275 3 365 2 126 4 324 2 79 1 238 1 277 1 81 2 371 1 240 1 138 1 282 1 336 1 287 1 
211 1 353 1 168 1 
186 1 168 1 
216 1 
181 1 129 1 168 1 
64 1 168 1 
129 1 168 1 
1 1 181 1 129 1 211 2 317 1 168 3 
248 2 48 4 252 1 320 2 365 3 293 7 366 1 12 5 171 1 204 2 368 3 278 15 131 8 84 1 135 1 63 1 89 1 66 2 
248 2 48 4 252 1 320 2 365 3 293 7 366 1 12 7 171 1 204 2 368 3 278 15 131 8 84 1 135 1 89 3 63 1 66 2 
248 2 48 4 252 1 320 2 365 3 293 7 366 1 12 5 171 1 204 2 368 3 278 15 131 8 84 1 135 1 89 1 63 1 66 2 116 1 
192 4 246 2 358 1 248 1 247 1 226 4 48 1 5 2 148 4 49 4 50 2 320 1 365 4 151 1 293 8 152 1 366 1 12 5 204 1 368 1 278 22 131 14 299 2 84 1 300 4 178 1 262 1 281 2 89 4 264 1 40 1 332 1 
246 2 248 2 226 4 27 1 48 5 5 2 50 1 320 2 365 3 293 8 366 1 12 7 171 1 368 3 204 2 278 17 131 9 299 2 84 1 134 1 135 1 63 1 281 2 89 2 66 2 
258 1 2 1 53 1 206 1 143 1 59 1 316 1 145 1 123 1 194 1 26 1 179 1 147 2 65 1 195 1 91 1 352 1 30 1 106 1 92 1 187 1 9 1 202 1 190 2 153 1 236 1 327 1 
258 1 2 2 53 1 338 1 206 1 175 1 143 2 59 1 145 1 123 1 194 1 26 1 179 1 147 2 65 1 195 1 91 1 352 1 30 1 92 1 187 1 9 1 202 1 34 1 190 3 236 1 327 1 
2 1 338 1 206 1 143 2 59 1 123 1 194 1 26 1 179 1 147 2 195 1 91 1 352 1 30 1 92 1 187 1 9 1 202 1 34 1 190 2 236 1 327 1 
258 1 2 1 129 1 309 1 55 1 175 1 145 1 340 1 194 2 168 1 179 1 195 1 242 1 253 1 352 1 30 2 214 1 322 1 187 2 9 1 202 2 190 1 236 1 
258 1 2 1 53 1 338 1 206 1 143 1 59 1 316 1 145 1 123 1 194 1 26 1 179 1 147 2 65 1 195 1 91 1 352 1 30 1 106 1 92 1 187 1 9 1 202 1 190 2 236 1 327 1 
4 1 
0 1 193 1 196 3 154 1 54 1 14 1 57 2 350 5 209 1 212 1 16 1 217 2 17 3 268 1 356 1 219 1 18 1 24 2 222 1 25 1 223 5 271 1 272 1 167 1 273 1 359 4 318 2 74 3 319 1 362 1 275 1 232 1 364 1 126 4 371 1 373 1 240 1 330 1 39 2 375 2 282 1 284 1 
0 1 193 1 24 2 25 1 222 1 223 5 271 1 272 1 167 1 273 1 359 4 318 2 74 3 319 1 362 1 196 3 275 1 232 1 364 1 126 4 154 1 54 1 57 2 14 1 371 1 240 1 373 1 330 1 350 5 375 2 39 2 209 1 212 1 282 1 284 1 16 1 217 2 268 1 17 3 219 1 356 1 18 1 
357 2 193 1 222 1 223 4 271 1 272 1 273 1 359 4 341 1 74 2 362 1 196 2 275 1 232 1 149 2 364 1 126 4 154 1 54 1 14 1 371 1 373 1 240 1 330 1 350 4 375 2 39 2 38 1 209 1 266 2 282 1 284 1 16 1 217 2 17 2 268 1 219 1 356 1 18 1 
193 1 340 1 341 1 7 1 195 1 196 2 149 2 9 1 154 1 54 1 57 2 14 1 350 4 209 1 352 2 354 1 16 1 217 3 17 2 268 2 219 1 356 1 18 1 309 2 24 2 222 1 25 1 223 6 271 1 272 1 273 1 359 5 168 1 318 2 74 2 28 1 362 1 275 2 232 1 124 1 322 1 364 1 126 5 236 2 129 1 371 2 240 1 373 1 330 1 179 2 375 2 39 2 138 1 282 1 284 1 
193 1 54 1 14 1 222 1 223 2 271 1 373 1 272 1 350 2 273 1 359 3 209 1 362 1 232 1 284 1 16 1 276 1 217 1 17 1 126 3 154 1 356 1 
193 1 54 1 14 1 222 1 223 1 271 1 373 1 272 1 350 3 273 1 359 3 74 1 209 1 362 1 275 1 232 1 284 1 16 1 276 1 217 1 126 3 154 1 219 1 356 1 
193 1 54 1 14 1 222 1 223 2 271 1 373 1 272 1 350 3 273 1 359 3 74 1 209 1 362 1 196 1 275 1 232 1 284 1 16 1 276 1 217 1 17 1 126 3 154 1 219 1 356 1 
0 1 193 1 196 4 154 1 54 1 14 1 57 2 350 6 209 1 212 1 16 1 217 3 17 4 268 1 356 1 219 5 18 1 24 2 222 1 25 1 223 7 271 1 272 1 167 1 273 1 359 5 318 2 74 4 319 1 362 1 232 1 275 5 276 1 364 1 126 5 371 1 373 1 240 1 330 1 374 1 39 2 375 2 282 1 284 1 
193 1 341 1 196 2 149 2 154 1 54 1 14 1 57 2 350 4 209 1 16 1 217 2 268 1 17 2 356 1 219 1 18 1 24 2 25 1 222 1 223 4 271 1 272 1 273 1 359 4 318 2 74 2 362 1 232 1 275 2 364 1 126 4 371 1 240 1 373 1 330 1 39 2 375 2 282 1 284 1 
0 1 193 1 24 2 25 1 222 1 223 4 271 1 272 1 273 1 359 4 318 2 74 2 319 1 362 1 196 2 275 1 232 1 364 1 126 4 154 1 54 1 57 2 14 1 371 1 373 1 240 1 330 1 350 4 375 2 39 2 209 1 212 1 282 1 284 1 16 1 217 2 17 2 268 1 219 1 356 1 18 1 
0 1 193 1 24 2 25 1 222 1 223 4 271 1 272 1 273 1 359 4 318 2 74 2 319 1 362 1 196 2 275 1 232 1 364 1 126 4 154 1 54 1 57 2 14 1 371 1 373 1 240 1 330 1 350 4 375 2 39 2 209 1 212 1 282 1 284 1 16 1 217 2 17 2 268 1 219 1 356 1 18 1 
357 2 193 1 310 1 222 1 223 4 271 1 44 1 272 1 273 1 359 4 74 2 362 1 196 2 275 1 232 1 149 2 364 1 126 4 154 1 54 1 14 1 371 1 373 1 240 1 330 1 350 4 375 2 39 2 38 1 209 1 266 2 212 1 282 1 284 1 16 1 217 2 17 2 268 1 219 1 356 1 18 1 
246 1 248 1 226 2 48 2 5 1 361 2 104 1 320 1 365 1 293 3 12 2 171 1 204 1 368 1 131 3 278 6 299 1 331 1 135 1 136 1 281 1 66 1 182 1 184 1 353 1 337 1 
192 2 246 2 358 1 247 1 226 4 360 1 5 2 361 1 148 3 49 3 104 2 31 1 365 2 293 6 12 1 368 1 82 1 156 1 278 14 131 8 132 1 299 2 300 2 178 1 136 1 262 1 281 2 89 1 377 1 182 3 184 11 337 11 
309 1 142 1 246 1 168 1 226 2 360 1 5 1 361 1 195 1 362 2 104 1 9 1 32 1 293 1 236 1 154 2 79 1 345 1 237 1 129 1 82 1 112 1 156 1 278 2 131 1 299 1 136 1 159 1 280 1 179 1 62 1 281 1 181 1 182 1 183 1 352 1 16 1 378 1 
192 2 245 2 246 3 142 2 248 1 48 4 5 3 195 2 103 1 104 3 9 2 293 10 154 3 12 5 54 1 204 2 112 1 260 2 156 1 299 3 300 2 159 2 63 1 62 1 66 2 352 1 16 1 309 1 226 6 168 2 169 2 360 1 361 3 362 3 320 2 365 5 325 2 236 1 79 1 171 1 368 3 129 2 82 1 278 24 131 14 177 1 135 1 136 3 179 1 280 2 89 1 281 3 181 2 182 5 184 5 139 2 337 5 95 1 378 1 
338 1 309 2 246 2 3 1 340 1 168 3 226 4 291 1 250 1 360 1 5 2 102 1 362 1 195 2 104 2 322 1 9 2 293 1 77 1 153 1 154 1 236 7 79 1 129 2 82 1 112 1 131 1 278 2 37 1 299 2 331 1 136 2 179 8 281 2 180 2 352 8 16 1 93 1 378 1 
192 1 246 1 314 1 226 2 5 1 362 1 104 1 365 1 154 1 79 1 256 1 277 1 112 1 156 1 131 1 278 1 299 1 300 1 136 1 281 1 16 1 
121 1 246 1 278 2 131 2 299 1 331 1 300 1 226 2 136 1 89 1 281 1 5 1 182 1 184 1 104 1 365 1 337 1 12 1 
368 1 246 1 278 2 358 1 299 1 331 1 226 2 136 1 87 1 48 1 281 1 5 1 182 1 184 1 104 1 337 1 293 2 12 1 
192 1 246 1 278 2 131 2 299 1 331 1 300 1 226 2 136 1 281 1 5 1 182 1 184 1 104 1 365 1 337 1 
121 1 246 1 278 2 131 2 3 1 299 1 300 1 226 2 136 1 89 1 281 1 5 1 182 1 184 1 104 1 365 1 337 1 12 1 
368 1 246 1 278 2 358 1 3 1 299 1 226 2 136 1 87 1 48 1 281 1 5 1 182 1 184 1 104 1 337 1 293 2 12 1 
192 1 246 1 278 2 131 2 3 1 299 1 300 1 226 2 136 1 281 1 5 1 182 1 184 1 104 1 365 1 337 1 
192 1 246 1 131 2 278 2 299 1 300 1 226 2 136 1 281 1 5 1 182 1 184 1 104 1 365 1 337 1 
309 1 142 1 246 1 168 1 226 2 360 1 5 1 361 1 195 1 362 1 104 1 9 1 325 1 293 1 236 1 154 1 129 1 82 1 131 1 278 2 299 1 136 1 159 1 280 1 179 1 281 1 181 1 352 1 
309 1 246 1 168 1 226 2 360 1 146 1 5 1 361 1 195 1 362 1 104 1 323 1 9 1 293 1 236 1 154 1 129 1 82 1 131 1 278 2 299 1 136 1 159 1 179 1 301 1 281 1 181 1 352 1 
192 1 246 1 278 2 156 1 131 2 299 1 300 1 226 2 136 1 281 1 5 1 182 1 184 1 104 1 365 1 337 1 
192 1 142 1 246 1 168 1 226 2 5 1 195 1 362 1 104 1 365 1 9 1 325 1 236 1 153 1 154 1 129 1 260 1 278 2 131 2 299 1 300 1 136 1 159 1 280 1 179 1 281 1 181 1 182 1 184 1 352 1 337 1 
192 1 246 1 358 1 288 1 226 2 5 1 362 1 104 1 365 1 293 1 154 1 79 1 256 1 368 1 277 1 112 1 156 1 131 2 278 3 299 1 300 1 136 1 281 1 184 1 16 1 337 1 
192 7 141 1 312 1 246 2 358 2 98 1 247 2 289 1 101 1 226 4 5 2 148 4 49 4 365 7 33 1 293 12 344 3 12 5 368 2 83 1 58 1 278 34 131 22 299 2 133 1 300 7 134 1 178 2 262 2 263 1 281 2 89 5 162 1 335 1 269 1 
192 7 141 1 312 1 246 2 358 2 98 1 247 2 289 1 101 1 226 4 5 2 148 4 49 4 365 7 33 1 293 12 344 3 12 5 368 2 83 1 58 1 278 34 131 22 299 2 133 1 300 7 134 1 178 2 262 2 263 1 281 2 89 5 162 1 335 1 269 1 
192 7 141 1 312 1 246 1 358 1 98 1 248 1 247 2 289 1 101 1 226 2 48 1 5 1 148 4 49 4 320 1 365 8 293 12 344 3 12 7 171 1 204 1 368 2 83 1 58 1 278 37 131 25 299 1 133 1 300 7 135 1 134 1 178 2 262 2 263 1 281 1 89 6 66 1 162 1 335 1 269 1 
192 7 141 1 312 1 246 2 358 1 98 1 247 2 289 1 101 1 226 4 5 2 170 1 148 4 49 4 365 7 33 1 293 9 344 2 12 5 368 1 83 1 58 1 278 30 131 21 299 2 133 1 300 7 134 1 178 2 262 2 263 1 281 2 89 5 335 1 269 1 
192 2 141 1 312 1 246 1 358 1 98 2 289 2 101 1 226 2 5 1 148 2 49 2 365 2 293 7 344 2 368 1 83 1 58 1 278 16 131 9 299 1 133 1 300 2 134 1 178 2 281 1 263 1 162 1 335 1 269 1 
88 1 172 1 347 1 23 1 36 1 125 1 292 1 46 1 189 1 244 1 
144 1 47 1 
259 1 172 1 347 1 23 1 15 1 292 1 119 1 189 1 244 1 
234 1 243 1 
208 1 348 1 117 1 
347 1 172 1 120 1 23 1 36 1 45 1 46 1 274 1 359 1 275 1 76 1 125 1 292 1 126 1 164 1 189 1 244 1 11 2 
347 1 172 1 120 1 23 1 36 1 45 1 46 1 274 1 359 1 275 1 76 1 125 1 292 1 126 1 164 1 189 1 244 1 11 2 
347 1 172 1 120 1 23 1 36 1 45 1 46 1 274 1 359 1 275 1 76 1 125 1 292 1 126 1 164 1 189 1 244 1 11 2 
208 1 234 1 243 1 
208 1 234 1 243 1 
348 1 117 1 
208 1 348 1 117 1 
198 1 86 1 
120 1 23 1 144 1 99 1 47 1 359 1 361 1 362 2 76 1 198 1 292 1 150 1 126 1 154 2 109 1 11 1 79 2 54 1 172 1 347 1 112 2 177 1 86 1 42 1 213 1 16 2 304 1 189 1 244 1 
21 1 246 1 168 1 226 2 360 1 5 1 102 1 195 1 362 2 104 1 9 1 293 1 154 2 236 2 129 1 205 1 56 1 82 1 349 1 156 1 131 1 278 2 37 1 299 1 136 1 179 2 281 1 180 2 352 2 16 2 165 1 
53 1 338 1 13 1 370 1 206 1 59 1 123 1 179 2 26 1 147 2 195 1 352 2 92 1 355 1 9 1 202 1 236 2 153 1 327 1 
20 1 53 1 338 1 13 1 206 1 59 1 123 1 179 1 26 1 147 2 195 1 352 1 92 1 9 1 202 1 236 1 327 1 
129 1 309 1 370 1 340 1 168 1 179 1 195 1 352 1 253 1 322 1 9 1 202 1 236 1 70 1 
53 1 338 1 13 1 370 1 206 1 59 1 123 1 179 1 26 1 147 2 195 1 352 1 92 1 355 1 9 1 202 1 236 1 327 1 
137 1 
309 1 142 1 246 1 97 1 224 1 226 2 168 1 360 1 5 1 361 1 362 3 195 1 104 1 9 1 293 1 325 1 236 1 154 3 79 2 277 2 129 1 112 2 278 1 299 1 136 1 179 1 280 1 159 1 281 1 181 1 352 1 16 2 
57 2 371 1 240 1 248 1 7 1 138 1 282 1 275 4 149 4 364 1 268 2 324 2 219 2 295 2 18 1 
297 1 275 1 353 1 371 1 163 1 268 1 219 1 
24 1 25 1 223 1 359 1 318 1 275 2 149 1 364 1 126 1 57 1 371 1 240 1 282 1 217 1 268 1 219 1 18 1 
1 1 192 2 193 2 7 1 195 1 149 9 9 2 255 2 295 5 57 4 298 1 300 2 211 2 352 1 69 2 217 3 268 7 219 1 18 3 309 1 311 2 223 5 358 1 168 6 359 5 169 2 233 2 275 5 364 3 365 2 126 5 324 5 236 1 129 1 368 1 329 1 371 6 176 1 240 3 179 1 181 1 138 2 241 2 282 3 185 2 186 3 
192 4 141 1 312 1 247 1 148 2 49 2 275 3 149 6 364 1 365 4 324 4 295 4 57 3 58 1 371 3 240 1 300 4 178 1 262 1 263 1 282 1 268 7 269 1 18 1 
0 1 221 1 311 1 97 1 359 1 362 1 320 1 364 1 365 2 126 1 154 1 79 1 54 1 204 1 368 1 238 1 277 1 112 1 371 2 240 1 63 1 66 1 282 1 16 1 267 1 118 2 268 2 18 1 
297 1 371 1 240 1 282 1 275 1 163 1 364 1 268 1 219 1 18 1 
192 1 57 1 300 1 275 1 149 2 365 1 268 2 324 1 295 1 
275 1 223 1 217 1 126 1 359 1 219 1 
73 2 309 2 223 4 340 1 168 1 359 3 227 1 7 2 195 1 124 1 322 1 9 1 364 1 126 3 236 4 129 1 371 2 372 1 240 2 179 4 90 1 138 2 282 2 352 4 354 1 336 1 217 2 268 2 18 2 
172 1 347 1 155 1 
172 1 347 1 155 1 
172 1 347 1 86 1 
172 1 347 1 155 1 
172 1 347 1 283 1 
172 1 347 1 283 1 
172 1 347 1 283 1 
172 1 347 1 
23 1 189 1 
246 1 248 1 226 2 48 4 5 1 148 1 49 1 320 2 365 3 293 8 12 5 171 1 368 3 204 2 278 16 131 8 299 1 134 1 135 1 178 1 89 1 63 1 263 1 281 1 66 2 
192 4 141 1 312 1 246 2 358 3 247 1 226 4 5 2 148 2 49 2 365 4 293 9 12 2 368 3 58 1 278 20 131 11 299 2 300 4 134 1 158 1 178 1 262 1 263 1 281 2 89 2 269 1 
192 2 141 1 312 1 246 2 226 4 5 2 148 1 49 1 365 2 293 2 12 1 58 1 278 8 131 6 299 2 300 2 134 1 158 1 178 1 263 1 281 2 89 1 269 1 
192 2 141 1 312 1 246 2 358 1 226 4 5 2 148 1 49 1 365 2 293 4 368 1 58 1 278 10 131 6 299 2 300 2 134 1 158 1 178 1 263 1 281 2 269 1 
246 1 248 1 226 2 48 4 5 1 148 1 49 1 320 2 365 3 293 8 12 5 171 1 368 3 204 2 278 16 131 8 299 1 134 1 135 1 178 1 89 1 63 1 263 1 281 1 66 2 
192 2 141 1 312 1 246 1 58 1 131 6 278 8 299 1 300 2 134 1 226 2 178 1 89 1 281 1 263 1 5 1 148 1 49 1 365 2 293 2 12 1 269 1 
192 2 141 1 312 1 246 2 358 1 226 4 5 2 148 1 49 1 365 2 293 4 368 1 58 1 278 10 131 6 299 2 300 2 158 1 134 1 178 1 263 1 281 2 269 1 
192 2 141 1 312 1 246 2 358 1 226 4 5 2 148 1 49 1 365 2 293 4 33 1 12 1 368 1 58 1 278 10 131 6 299 2 300 2 134 1 178 1 263 1 281 2 89 1 269 1 
171 1 368 1 204 3 278 7 131 3 135 2 48 3 89 3 66 1 320 3 365 1 293 4 12 6 
192 2 141 1 312 1 246 2 358 1 226 4 5 2 148 1 49 1 365 2 293 4 33 1 368 1 58 1 278 10 131 6 299 2 300 2 134 1 178 1 263 1 281 2 269 1 
246 2 248 1 226 4 48 4 5 2 50 1 320 2 365 3 293 9 12 7 171 1 204 2 368 3 131 9 278 18 299 2 135 1 63 1 281 2 89 3 66 2 
171 1 204 1 368 1 131 3 278 6 248 1 135 1 48 2 66 1 353 1 320 1 365 1 293 3 12 2 
192 1 246 1 131 2 278 2 299 1 300 1 158 1 226 2 281 1 5 1 365 1 
192 2 278 8 131 6 247 1 300 2 178 1 262 1 89 2 148 2 49 2 365 2 293 2 12 2 
192 2 246 1 248 1 247 1 226 2 48 4 5 1 148 2 49 2 50 1 320 2 365 5 293 9 12 6 171 1 368 3 204 2 131 13 278 22 132 1 299 1 300 2 135 1 262 1 63 1 89 2 281 1 66 2 
148 1 278 1 293 1 
49 1 278 1 131 1 
192 1 278 4 131 3 300 1 169 1 89 1 365 1 293 1 12 1 
192 2 141 1 312 1 246 1 58 1 131 6 278 8 299 1 300 2 134 1 226 2 178 1 89 1 281 1 263 1 5 1 148 1 49 1 365 2 293 2 12 1 269 1 
368 1 204 1 131 3 278 6 48 1 89 1 66 1 320 1 365 1 293 3 12 2 
171 1 204 1 246 1 131 1 278 3 299 1 135 1 226 2 89 1 48 1 281 1 40 1 5 1 50 1 320 1 293 2 12 2 
204 2 368 2 246 1 131 5 278 10 299 1 226 2 134 1 281 1 63 1 48 3 89 2 5 1 66 1 320 2 365 2 293 5 12 5 
246 1 131 2 278 2 299 1 300 1 134 1 226 2 281 1 89 1 5 1 365 1 12 1 
192 1 368 1 246 1 358 1 131 2 278 4 299 1 300 1 134 1 226 2 281 1 89 1 5 1 365 1 293 2 12 1 
204 1 246 3 278 3 131 1 299 3 134 1 226 6 281 3 48 1 89 1 40 1 5 3 50 1 320 1 33 1 293 2 12 2 
192 2 246 4 358 1 248 1 226 8 48 4 5 4 148 3 49 3 50 1 320 2 365 5 151 1 293 14 152 1 33 1 12 8 171 1 204 2 368 4 278 30 131 16 299 4 300 2 135 1 158 1 134 1 178 1 63 1 281 4 89 4 264 1 66 2 
361 1 362 1 14 1 16 1 200 1 154 1 191 1 
296 1 369 1 14 1 229 1 361 1 362 1 334 1 16 1 200 1 140 1 191 1 154 1 
129 1 309 1 195 1 353 1 352 1 322 1 9 1 340 1 168 1 236 1 179 1 
129 1 309 1 112 1 168 1 159 1 179 1 280 1 181 1 361 1 362 2 195 1 352 1 16 1 9 1 154 2 236 1 79 1 378 1 
73 1 271 1 168 3 361 1 195 1 362 2 9 1 236 1 154 2 79 1 129 2 54 1 112 2 157 1 280 1 179 1 159 1 64 1 181 2 209 1 352 1 16 2 378 1 
73 1 271 1 168 3 146 1 361 1 195 1 362 2 9 1 236 2 154 2 79 1 129 2 54 1 112 2 157 1 113 1 179 2 159 1 64 1 181 2 209 1 352 2 16 2 378 1 
203 1 73 1 309 1 193 1 129 1 223 1 157 1 359 2 168 4 113 1 179 3 64 1 181 1 195 1 211 1 275 1 352 3 186 1 9 1 126 2 236 3 219 1 367 1 
73 1 309 1 193 1 129 1 223 1 157 1 359 2 168 4 113 1 179 3 64 1 181 1 241 1 195 1 211 1 275 1 352 3 186 1 9 1 126 2 236 3 219 1 
291 1 195 1 352 1 9 1 236 1 179 1 
1 1 328 1 338 1 309 2 129 2 37 1 168 3 179 7 180 1 291 1 250 1 181 1 115 1 195 2 352 7 93 1 218 1 9 3 77 1 153 1 236 6 
245 1 142 1 246 2 248 1 48 4 5 2 195 1 104 2 9 1 293 7 153 1 154 2 12 5 54 1 204 2 260 1 112 1 156 1 299 2 159 1 63 1 66 2 352 1 16 1 21 1 226 4 168 1 361 3 362 2 320 2 365 3 325 1 236 1 79 1 171 1 129 1 368 3 131 7 278 14 177 1 135 1 136 2 280 1 179 1 89 1 281 2 181 1 182 1 184 1 337 1 378 1 
309 1 193 1 223 2 359 3 168 2 275 1 233 1 364 2 126 3 255 1 236 1 109 1 297 1 371 1 240 2 179 1 90 1 241 1 282 2 211 1 352 1 186 1 69 1 163 1 217 1 268 1 219 1 18 2 
1 1 129 1 298 1 168 2 179 2 291 1 181 1 195 1 211 1 352 2 9 2 153 1 236 2 
309 1 129 1 340 1 168 1 113 1 179 4 195 1 352 4 67 1 322 1 9 1 236 4 153 1 
73 1 328 1 129 1 313 1 100 1 168 1 179 2 230 1 181 1 195 1 352 2 218 1 9 2 236 2 
309 1 206 1 123 1 179 1 147 1 195 1 352 1 9 1 236 1 327 1 
129 1 338 1 195 1 352 2 349 1 37 1 9 1 168 1 236 2 153 1 179 2 
73 1 309 1 129 2 37 1 340 1 168 3 179 5 195 2 352 5 67 1 322 1 93 1 9 2 236 4 153 1 77 1 
73 1 309 1 129 2 37 1 340 1 168 3 179 5 195 2 352 5 67 1 322 1 9 2 286 1 236 4 153 1 77 1 
129 1 309 1 112 1 168 1 159 1 179 1 181 1 146 1 361 1 362 2 195 1 352 1 16 1 9 1 154 2 236 1 79 1 378 1 
1 1 73 1 328 1 129 1 168 1 179 1 181 1 115 1 195 1 352 1 218 1 9 2 236 1 
205 1 56 1 339 1 228 1 362 1 16 1 154 1 306 1 165 1 
220 1 108 1 306 1 
228 1 361 1 105 1 339 1 306 1 
220 1 193 1 54 1 271 1 339 2 359 2 228 2 361 1 209 1 161 1 275 1 105 2 284 1 126 2 235 1 108 1 109 1 219 1 306 1 
43 1 2 3 258 1 303 1 343 1 143 1 106 1 315 1 145 1 190 3 290 1 
303 1 8 1 207 1 10 1 
43 1 303 1 
43 1 303 1 353 1 290 1 
43 1 2 1 258 1 303 1 145 1 190 1 290 1 
2 1 187 1 194 1 
43 1 2 3 258 1 303 1 41 1 106 1 315 2 279 1 145 1 225 1 190 3 290 1 
43 1 2 2 258 1 251 1 303 1 143 1 145 1 190 2 290 1 
258 1 2 1 145 1 123 1 61 1 147 1 303 1 106 1 92 1 8 1 190 1 
43 1 2 1 258 1 303 1 106 1 145 1 190 1 
43 2 2 1 258 1 106 1 145 1 190 1 290 1 
43 1 258 2 2 2 145 2 265 1 6 1 303 1 106 1 254 1 190 2 
43 1 258 1 2 3 143 2 207 1 145 1 60 1 290 1 303 2 343 1 106 1 8 1 190 3 
2 1 258 1 147 2 206 1 143 1 106 1 92 1 59 1 145 1 123 1 249 1 190 2 
43 1 258 2 2 4 35 1 143 2 207 1 145 2 290 1 251 1 303 2 106 1 8 1 190 4 
43 1 2 1 258 1 303 1 106 1 145 1 190 1 290 1 
43 2 2 4 258 1 143 2 315 1 207 1 145 1 225 1 290 2 303 3 41 1 8 1 10 1 190 4 
43 1 258 1 2 2 308 1 22 1 143 1 145 1 290 1 303 1 106 1 188 1 190 2 
43 1 2 3 258 1 303 1 41 1 106 1 315 2 145 1 225 2 294 1 190 3 290 1 
303 2 321 1 122 2 114 1 
2 1 258 1 261 1 106 1 145 1 190 1 
43 1 2 2 258 1 303 1 343 1 143 1 106 1 145 1 190 2 290 1 
197 1 
43 1 2 1 258 1 303 1 106 1 145 1 190 1 290 1 

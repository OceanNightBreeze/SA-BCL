#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (66,155) (66,155) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (66,155) (66,155) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (66,155) (66,155) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (66,155) (66,155) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> -1
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
293 1 270 1 65 1 250 1 132 1 66 1 155 1 45 1 219 1 268 1 80 1 
293 1 270 1 65 1 250 1 132 1 66 1 155 1 45 1 219 1 268 1 80 1 
293 1 270 1 65 1 250 1 132 1 66 1 155 1 45 1 219 1 268 1 80 1 
293 1 270 1 65 1 250 1 132 1 66 1 155 1 45 1 219 1 268 1 80 1 
255 1 236 1 132 1 52 1 243 1 267 3 352 1 117 2 268 4 89 1 4 1 293 1 250 4 218 2 230 3 282 1 80 1 336 1 
236 1 132 1 267 1 52 1 246 1 268 2 202 1 293 1 137 1 250 2 65 1 304 1 219 1 282 1 80 1 336 1 
236 1 132 2 52 1 116 1 267 2 268 3 4 1 293 1 250 3 218 1 230 1 219 1 80 2 
132 2 116 1 267 5 243 1 117 2 268 9 89 1 37 1 4 3 293 1 250 9 230 7 298 1 255 1 236 1 52 1 352 1 214 1 218 4 219 1 282 1 80 2 337 1 336 1 
132 2 116 1 267 5 243 1 117 2 268 9 89 1 37 1 4 3 293 1 250 9 230 7 298 1 255 1 236 1 52 1 352 1 214 1 218 4 219 1 282 1 80 2 337 1 336 1 
31 1 121 1 323 1 
334 2 332 1 323 1 
254 2 354 2 213 2 200 2 297 1 133 2 192 2 112 1 
84 1 285 1 85 1 286 1 339 1 288 2 200 3 133 2 185 1 292 1 93 1 120 1 228 1 95 1 297 1 98 2 46 1 273 1 168 1 235 1 254 3 213 2 123 2 258 1 11 2 192 2 14 1 54 1 354 2 152 1 55 1 356 1 281 1 241 1 176 2 56 1 112 1 
254 1 354 1 213 1 200 1 60 1 297 1 133 1 192 1 259 1 338 1 
254 1 213 1 51 1 201 1 200 1 329 1 33 1 88 1 104 1 121 1 323 1 346 1 259 1 233 1 
254 1 213 1 51 1 200 1 201 1 329 1 133 1 88 1 192 1 259 1 354 1 33 2 121 1 323 1 346 2 
142 1 330 1 33 1 346 1 180 1 
227 1 303 1 330 1 33 2 121 1 323 1 346 2 180 1 
330 1 33 1 346 1 
254 1 213 1 313 1 200 1 60 1 133 1 192 1 259 1 354 1 297 1 33 1 346 1 338 1 180 1 
323 1 
227 1 311 1 330 1 33 2 121 1 323 1 346 2 180 1 
189 1 287 1 103 2 330 2 118 2 150 1 38 1 151 1 227 1 161 2 99 1 178 1 33 5 121 1 323 1 67 1 346 5 130 1 180 2 
31 1 112 1 
84 1 254 2 286 1 339 1 213 1 123 1 258 1 70 1 200 2 192 1 54 1 354 1 93 1 228 1 97 1 281 1 176 1 98 1 322 1 273 1 
254 5 354 4 147 1 8 1 213 5 70 1 21 1 200 5 133 1 192 4 322 2 233 1 112 1 75 1 
254 2 354 2 213 2 200 2 60 1 192 2 221 1 259 1 
254 2 213 2 21 1 200 2 133 1 192 1 53 1 354 1 112 2 
204 1 97 1 308 1 
84 1 254 1 286 1 123 1 339 1 258 1 200 1 54 1 41 1 93 1 228 1 281 1 176 1 98 1 112 1 273 1 
254 3 354 3 213 3 200 3 133 1 322 1 192 3 112 1 
254 1 354 1 213 1 200 1 60 1 192 1 259 1 
254 1 354 1 213 1 21 1 200 1 133 1 192 1 53 1 259 1 
84 1 285 1 85 1 286 1 339 1 288 1 21 1 200 4 201 1 158 1 133 2 88 1 185 1 292 1 93 1 120 1 228 1 95 1 297 1 98 1 322 1 346 1 273 1 168 1 235 1 254 4 213 3 123 1 258 1 70 1 51 1 11 2 329 1 192 3 259 1 54 1 354 3 356 1 281 1 241 1 176 1 33 1 112 1 284 1 
254 2 354 1 213 2 200 2 192 1 322 1 233 1 112 1 75 1 
254 3 213 3 21 1 51 1 70 1 200 3 201 1 158 1 329 1 133 1 88 1 192 3 259 1 354 3 128 1 33 1 322 2 323 1 346 1 
254 2 213 2 21 1 200 2 133 1 192 2 354 2 97 1 322 1 308 1 
84 1 254 1 286 1 123 1 339 1 258 1 200 1 54 1 93 1 228 1 281 1 176 1 98 1 112 1 273 1 
84 1 254 1 286 1 123 1 339 1 258 1 200 1 191 1 18 1 228 1 281 1 176 1 98 1 112 1 273 1 
235 1 285 1 198 1 85 1 288 4 11 2 72 1 185 2 316 1 14 2 292 1 204 2 22 1 17 1 120 1 357 1 97 2 241 1 143 1 207 1 209 1 324 1 308 2 197 1 
254 1 354 1 213 1 200 1 329 1 192 1 221 1 259 1 
76 1 312 1 
76 1 312 1 
34 1 2 1 
34 1 2 1 
34 1 2 1 
76 1 312 1 179 1 
76 1 312 1 196 1 
34 1 76 2 206 1 94 1 2 1 312 2 
76 1 312 1 179 1 
76 1 312 1 179 1 
76 1 312 1 44 1 
76 1 312 1 44 1 
76 1 312 1 44 1 
20 1 312 1 200 2 61 1 315 1 91 1 166 1 346 1 254 2 212 1 213 2 124 1 192 2 302 1 105 1 76 1 354 2 107 1 358 1 33 1 195 1 196 1 112 1 181 1 
257 1 312 2 124 1 27 1 61 3 302 2 105 2 317 2 76 2 206 1 261 1 166 2 33 2 323 1 110 1 299 1 346 2 82 1 181 2 
352 1 282 1 336 1 
304 1 282 1 336 1 
309 1 169 1 199 1 352 2 304 1 282 3 
309 1 29 1 199 1 352 1 304 1 282 2 
309 2 199 1 352 1 304 1 282 2 
20 1 131 1 91 1 118 1 161 1 227 1 22 1 163 1 251 1 143 1 207 1 121 1 67 1 323 2 346 5 188 1 12 2 103 1 330 1 332 1 193 1 334 3 17 1 107 1 260 2 305 1 33 5 178 3 263 2 130 2 83 1 180 4 
20 4 287 1 131 2 118 2 227 1 161 2 22 3 163 2 142 5 296 1 251 1 143 3 252 5 207 3 231 1 121 1 323 5 67 1 346 9 326 1 26 1 12 6 330 6 103 2 332 3 193 3 334 9 106 1 17 3 177 1 33 9 178 8 263 6 130 6 180 7 
20 1 287 1 131 1 118 1 161 1 163 1 22 1 143 1 207 1 121 1 323 3 346 3 103 1 12 2 332 2 193 1 334 4 17 1 260 1 305 1 33 3 178 3 263 2 130 2 180 2 83 1 
20 2 287 1 131 1 118 1 161 1 163 1 22 2 143 2 207 2 121 1 323 4 346 4 326 1 12 4 103 1 332 3 193 2 334 7 106 1 17 2 260 2 305 1 177 1 33 4 178 5 263 4 130 4 83 1 180 3 
31 1 228 1 35 1 
228 1 24 1 
228 1 339 1 273 1 
228 1 156 1 
280 1 
228 1 339 1 
295 1 228 3 339 1 35 2 225 1 273 1 
198 3 310 1 25 1 50 1 288 7 331 1 73 1 72 2 185 3 125 1 172 1 14 4 6 1 17 1 143 1 208 1 359 2 
198 3 310 1 25 1 50 1 288 7 331 1 73 1 72 2 185 3 125 1 172 1 14 4 6 1 17 1 143 1 208 1 359 2 
198 3 310 1 25 1 50 1 288 7 331 1 73 1 72 2 185 3 269 1 125 1 172 1 14 4 6 1 17 1 143 1 208 1 359 2 
310 1 198 10 85 1 288 31 185 15 62 1 6 2 40 1 160 3 22 3 120 1 342 1 143 4 208 2 207 3 347 4 235 1 210 1 148 1 25 1 50 1 11 2 331 1 73 5 72 5 125 2 13 1 14 16 172 2 193 3 17 4 241 1 359 3 81 1 
85 2 198 4 310 1 288 9 185 4 6 1 7 1 120 2 96 1 143 1 208 1 235 2 148 1 25 1 50 1 11 4 72 3 73 1 14 5 172 1 125 1 17 1 241 2 359 2 
182 1 286 1 132 1 267 1 268 2 203 1 134 1 226 1 293 1 23 1 250 2 98 1 230 1 236 1 169 1 123 1 52 1 352 1 15 1 28 1 77 1 16 1 281 1 304 1 176 1 19 1 219 1 282 2 80 1 336 1 
182 1 286 1 132 1 267 1 268 3 134 1 226 1 249 1 23 1 250 3 98 1 230 2 236 1 169 1 123 1 52 1 352 1 15 1 28 1 16 1 281 1 304 1 176 1 19 1 219 1 282 2 80 1 336 1 57 1 58 1 
182 1 286 1 267 1 268 2 226 1 249 1 23 1 250 2 98 1 230 2 236 1 169 1 123 1 52 1 352 1 28 1 16 1 281 1 304 1 176 1 19 1 219 1 282 2 57 1 336 1 
84 1 0 1 286 1 339 1 123 1 132 1 289 1 268 1 119 1 159 1 28 2 240 1 23 2 228 1 250 1 281 1 176 1 98 1 19 2 219 2 80 1 58 1 167 1 
182 1 169 1 286 1 123 1 132 1 352 1 268 1 203 1 226 1 134 1 15 1 293 1 249 1 28 1 16 1 23 1 250 1 304 1 281 1 176 1 98 1 19 1 219 1 282 2 80 1 336 1 
69 1 
84 2 286 1 131 1 339 1 201 1 200 1 88 1 118 1 119 1 161 1 227 1 228 1 98 2 43 1 345 1 187 1 67 1 233 1 346 3 167 1 254 1 213 1 49 1 123 2 51 1 329 1 103 1 330 2 190 1 104 1 259 1 238 1 281 1 176 2 33 3 178 1 130 1 
254 1 49 1 213 1 51 1 200 1 201 1 329 1 190 1 104 1 88 1 259 1 33 2 187 1 346 2 233 1 
254 1 49 1 213 1 51 1 200 1 201 1 329 1 190 1 104 1 88 1 259 1 33 2 187 1 346 2 233 1 
254 1 49 1 213 1 51 1 200 1 201 1 329 1 190 1 104 1 88 1 259 1 33 2 187 1 346 2 233 1 
254 1 311 1 49 1 213 1 51 1 201 1 200 1 329 1 330 1 190 1 88 1 104 1 259 1 227 1 33 3 187 1 346 3 233 1 
254 1 49 1 213 1 51 1 201 1 200 1 329 1 103 1 190 1 88 1 104 1 259 1 118 1 161 1 33 2 67 1 187 1 346 2 233 1 
254 1 49 1 213 1 51 1 200 1 201 1 329 1 190 1 104 1 88 1 259 1 33 2 187 1 346 2 233 1 
254 1 49 1 213 1 51 1 200 1 201 1 329 1 190 1 104 1 88 1 259 1 33 2 187 1 346 2 233 1 
254 1 49 1 213 1 51 1 200 1 201 1 329 1 190 1 104 1 88 1 259 1 33 2 187 1 346 2 233 1 
254 1 49 1 213 1 51 1 200 1 201 1 329 1 190 1 104 1 88 1 259 1 33 2 187 1 346 2 233 1 
254 1 49 1 213 1 51 1 200 1 201 1 329 1 190 1 104 1 88 1 259 1 33 2 187 1 346 2 233 1 
254 1 49 1 213 1 51 1 201 1 200 1 329 1 103 1 190 1 88 1 104 1 259 1 118 1 161 1 33 2 67 1 187 1 346 2 233 1 
285 1 310 1 85 1 198 2 288 6 185 3 6 1 292 1 204 1 120 1 97 1 143 1 235 1 25 1 50 1 11 2 72 2 125 1 14 3 17 1 31 1 241 1 359 1 112 2 308 1 197 1 
285 2 198 2 85 2 265 1 288 14 36 1 62 1 185 6 90 1 292 1 204 11 160 3 271 1 22 2 120 2 342 1 95 1 229 1 97 11 143 1 207 1 347 3 235 2 11 4 73 1 72 1 14 8 193 2 17 2 55 1 241 2 112 1 308 4 
84 1 285 1 286 1 85 1 339 1 288 2 200 2 185 1 292 1 41 1 93 1 228 1 120 1 229 1 95 1 98 1 322 1 273 1 235 1 254 2 47 1 123 1 213 1 258 1 70 1 328 1 11 2 192 1 54 1 14 1 354 1 55 1 281 1 194 1 176 1 241 1 112 1 308 1 
84 1 310 1 85 3 314 1 185 10 6 1 93 2 228 2 95 1 229 1 97 7 143 3 98 3 322 1 273 2 235 3 10 2 50 1 11 6 192 1 54 2 193 2 14 10 17 3 55 1 281 2 241 3 112 2 114 1 285 3 286 2 198 8 339 2 288 20 200 3 245 2 292 3 249 1 204 7 22 2 64 1 120 3 207 2 168 2 254 3 25 1 123 3 213 1 70 1 258 2 72 4 73 4 125 1 354 1 215 2 176 3 32 2 359 1 308 7 
84 2 285 2 286 2 85 2 339 2 288 2 200 1 185 1 119 1 5 1 290 1 292 2 249 1 228 3 120 2 186 1 140 1 95 1 272 1 98 8 322 1 167 1 235 2 254 1 213 1 123 7 11 4 192 1 14 1 277 1 354 1 77 1 55 1 281 2 154 1 176 8 241 2 56 2 197 1 
285 1 198 1 85 1 21 1 288 3 200 1 133 1 185 2 292 1 135 1 204 1 22 1 120 1 229 1 97 1 143 1 207 1 235 1 254 1 213 1 11 2 72 1 192 1 193 1 14 1 354 1 17 1 241 1 308 1 
235 1 285 1 198 1 85 1 288 2 11 2 73 1 14 2 292 1 204 1 22 1 17 1 120 1 97 1 241 1 324 1 308 1 197 1 
235 1 285 1 198 1 85 1 288 2 11 2 72 1 185 2 316 1 292 1 204 1 120 1 97 1 241 1 143 1 207 1 308 1 197 1 
285 1 85 1 198 2 288 4 185 2 292 1 204 2 22 1 120 1 97 2 143 1 207 1 235 1 11 2 73 1 72 1 14 2 193 1 17 1 241 1 197 1 308 2 
235 1 285 1 198 1 85 1 288 2 11 2 73 1 290 1 14 2 292 1 204 1 22 1 17 1 120 1 97 1 241 1 324 1 308 1 
235 1 285 1 198 1 85 1 288 2 11 2 72 1 185 2 316 1 290 1 292 1 204 1 120 1 97 1 241 1 143 1 207 1 308 1 
285 1 85 1 198 2 288 4 185 2 290 1 292 1 204 2 22 1 120 1 97 2 143 1 207 1 235 1 11 2 73 1 72 1 14 2 193 1 17 1 241 1 308 2 
235 1 285 1 198 2 85 1 288 4 11 2 72 1 73 1 185 2 193 1 14 2 292 1 204 2 22 1 17 1 120 1 97 2 143 1 241 1 207 1 308 2 
84 1 285 1 286 1 85 1 339 1 288 2 200 1 185 1 292 1 93 1 228 1 120 1 95 1 98 1 273 1 168 1 235 1 254 1 123 1 258 1 11 2 14 1 54 1 55 1 281 1 176 1 241 1 112 1 
84 1 285 1 286 1 85 1 339 1 288 2 200 1 185 1 292 1 228 1 120 1 95 1 98 1 273 1 235 1 254 1 170 1 123 1 258 1 11 2 191 1 14 1 55 1 18 1 281 1 176 1 241 1 112 1 
285 1 85 1 198 2 288 4 185 2 292 1 204 2 22 1 120 1 229 1 97 2 143 1 207 1 235 1 11 2 73 1 72 1 14 2 193 1 17 1 241 1 308 2 
285 1 198 2 286 1 85 1 339 1 288 4 200 1 185 2 292 1 204 2 22 1 93 1 228 1 120 1 97 2 143 1 98 1 207 1 273 1 168 1 235 1 254 1 123 1 258 1 11 2 72 1 73 1 14 2 54 1 193 1 77 1 17 1 215 1 281 1 176 1 241 1 308 2 
285 1 198 1 85 1 21 1 288 3 200 1 133 1 185 1 292 1 204 1 22 1 120 1 229 1 164 1 97 1 143 1 207 1 235 1 254 1 213 1 11 2 73 1 192 1 193 1 14 2 354 1 17 1 241 1 308 1 
310 1 242 4 85 3 198 8 157 1 288 41 244 1 62 3 185 21 6 1 138 2 7 1 160 3 22 4 120 3 342 1 141 1 143 5 207 4 9 1 347 4 327 1 235 3 148 1 25 1 350 1 50 1 48 1 149 1 11 6 72 4 73 4 276 1 125 1 14 20 193 4 239 1 173 1 17 5 241 3 359 1 79 1 223 1 
310 1 242 4 85 4 198 7 157 1 288 38 244 1 62 3 185 18 6 1 138 2 7 1 160 3 22 4 120 4 342 1 141 1 143 4 207 3 9 1 347 4 327 1 235 4 148 2 25 1 350 1 50 1 48 1 149 1 11 8 72 4 73 3 276 1 125 1 14 20 193 4 239 1 173 1 17 5 241 4 359 1 79 1 223 1 
310 1 242 4 85 2 198 14 157 1 265 2 288 52 244 1 62 2 185 25 6 1 138 1 7 1 160 4 22 7 120 2 342 2 141 1 143 8 207 7 9 1 347 4 327 1 235 2 148 1 25 1 350 1 50 1 48 1 149 1 11 4 72 7 73 7 276 1 125 1 14 27 193 7 173 1 17 8 241 2 359 1 223 1 
242 2 85 2 198 6 157 1 288 19 62 1 185 10 138 1 7 1 160 1 22 3 120 2 342 1 143 3 207 3 9 1 347 2 327 2 235 2 48 1 275 1 11 4 72 3 73 3 276 1 14 9 193 3 239 1 17 3 241 2 
198 4 242 4 85 3 157 1 288 26 244 1 185 12 62 2 138 2 7 1 160 2 22 3 120 3 141 1 143 2 207 2 9 1 347 2 327 1 235 3 148 2 350 1 48 2 149 1 11 6 73 2 72 2 276 1 14 14 193 3 173 1 17 3 241 3 223 1 
146 1 179 1 
94 1 144 1 44 1 
76 1 206 1 261 1 312 1 306 1 166 1 299 1 302 1 105 1 181 1 
212 1 196 1 
76 1 115 1 3 1 312 1 166 1 302 1 283 1 105 1 181 1 
257 1 312 1 124 1 27 1 61 2 302 1 105 1 317 1 76 1 206 1 261 1 166 1 33 1 323 1 110 1 299 1 346 1 181 1 
257 1 312 1 124 1 27 1 61 2 302 1 105 1 317 1 76 1 206 1 261 1 166 1 33 1 323 1 110 1 299 1 346 1 181 1 
257 1 312 1 124 1 27 1 61 2 302 1 105 1 317 1 76 1 206 1 261 1 166 1 33 1 323 1 110 1 299 1 346 1 181 1 
94 1 146 1 179 1 
94 1 146 1 179 1 
144 1 44 1 
94 1 144 1 44 1 
358 1 195 1 
20 1 312 1 200 2 61 1 315 1 91 1 317 1 166 1 346 1 254 2 257 1 212 1 213 2 192 2 302 1 105 1 76 1 354 2 107 1 358 1 33 1 222 1 195 1 196 1 112 1 180 1 181 1 
285 1 286 1 85 1 339 1 288 2 200 2 185 1 248 1 292 1 294 1 228 1 120 1 229 1 42 1 165 1 95 1 272 1 98 2 235 1 254 2 102 1 213 2 123 2 11 2 14 1 55 1 281 1 154 1 176 2 241 1 56 2 
182 1 169 1 286 1 122 1 123 2 352 1 134 1 249 1 77 1 16 1 304 1 281 1 176 2 98 2 19 1 78 1 321 1 282 2 336 1 
182 1 169 1 286 1 123 1 352 1 134 1 249 1 16 1 153 1 304 1 281 1 176 1 98 1 19 1 321 1 282 2 336 1 
84 1 286 1 211 1 339 1 123 1 289 1 119 1 228 1 281 1 176 1 98 1 19 1 78 1 167 1 
182 1 169 1 286 1 122 1 123 1 352 1 134 1 249 1 16 1 304 1 281 1 176 1 98 1 19 1 78 1 321 1 282 2 336 1 
291 1 
151 1 31 1 178 1 121 1 323 1 130 1 150 1 
86 1 330 1 184 1 103 1 332 1 118 1 334 1 227 1 161 1 33 1 178 1 121 1 323 2 67 1 346 1 130 1 360 1 
84 1 87 1 131 2 35 2 227 3 228 6 98 3 143 2 145 2 323 8 232 2 273 1 274 2 10 2 51 2 103 4 330 5 12 6 332 6 150 1 193 2 334 12 151 1 17 2 281 2 109 1 286 1 339 1 118 4 341 2 161 4 295 1 22 2 24 3 343 1 344 1 345 1 207 2 121 2 67 4 346 5 123 3 74 2 77 1 217 2 176 3 178 9 33 5 263 6 130 8 264 2 224 1 
131 1 244 1 62 1 118 2 39 1 227 1 161 2 160 1 22 2 143 2 345 1 207 2 121 2 67 2 323 5 346 1 232 2 347 1 256 1 350 1 149 1 330 1 12 5 103 2 332 3 193 2 173 1 334 6 17 2 33 1 178 8 263 5 223 1 264 1 130 5 
200 1 313 1 60 1 133 1 118 1 6 1 161 1 143 1 297 1 67 1 232 2 325 1 346 1 254 1 25 1 213 1 103 1 192 1 259 1 125 1 354 1 174 1 17 2 33 1 178 2 264 1 130 2 338 1 
103 1 118 1 150 1 161 1 151 1 178 1 121 1 67 1 323 1 130 1 
10 1 12 5 332 5 193 2 334 10 22 2 17 2 143 2 207 2 178 5 263 5 323 5 232 2 264 1 130 5 
227 1 330 1 33 1 121 1 323 1 346 1 
84 2 286 2 87 1 287 1 131 2 339 2 247 1 118 2 119 1 136 1 161 2 227 2 205 1 228 2 43 1 98 4 345 2 67 1 346 3 273 1 167 1 123 4 103 2 330 4 238 1 278 1 355 1 216 1 281 3 176 4 178 2 33 3 130 2 224 2 
84 1 285 1 286 1 85 1 339 1 288 1 200 3 133 2 185 1 292 1 93 1 120 1 228 1 95 1 98 1 297 1 168 1 273 1 235 1 254 3 123 1 213 2 258 1 11 2 192 2 54 1 354 2 356 1 281 1 241 1 176 1 112 1 
131 1 12 2 103 1 332 2 118 1 334 4 161 1 359 1 178 1 345 1 121 2 263 2 67 1 323 4 130 2 
71 1 105 1 181 1 
30 1 358 1 299 1 105 1 181 1 
71 1 105 1 181 1 
71 1 105 1 181 1 
262 1 105 1 181 1 
262 1 105 1 181 1 
262 1 105 1 181 1 
105 1 181 1 
76 1 312 1 
235 2 198 3 85 2 148 1 310 1 25 1 50 1 288 8 11 4 73 1 72 2 185 4 14 4 125 1 6 1 17 1 120 2 143 1 241 2 359 1 
310 1 198 2 25 1 50 1 288 6 72 2 185 3 125 1 14 3 6 1 17 1 31 1 143 1 359 1 
235 1 198 2 85 1 68 1 288 4 11 2 72 1 73 1 185 2 193 1 14 2 22 1 17 1 120 1 143 1 241 1 207 1 
198 2 288 7 72 1 73 1 62 1 185 4 14 3 193 1 160 1 22 1 17 1 342 1 143 1 207 1 347 2 
310 1 198 9 85 2 288 23 265 1 185 12 90 1 6 2 160 2 22 2 342 1 120 2 143 3 207 2 347 2 235 2 148 2 25 1 50 1 11 4 73 4 72 5 125 2 193 2 14 11 17 3 241 2 175 1 359 1 
288 1 185 1 347 1 
160 1 288 1 14 1 
235 1 85 1 10 1 198 3 68 1 288 6 11 2 73 1 72 2 185 3 193 1 14 3 22 1 17 1 120 1 241 1 143 1 207 1 
85 1 198 2 288 12 244 1 185 6 62 1 160 1 7 1 22 2 120 1 143 2 207 2 347 1 235 1 350 1 149 1 11 2 73 1 72 1 14 6 193 2 173 1 17 2 241 1 223 1 
198 2 25 1 288 6 72 1 73 1 185 3 14 3 125 1 6 1 17 1 143 1 
235 1 198 2 148 1 85 1 310 1 50 1 288 3 11 2 73 1 72 1 185 2 14 1 125 1 6 1 120 1 175 1 241 1 
85 1 310 1 198 2 288 8 185 4 62 1 6 1 160 1 7 1 120 1 143 1 347 1 235 1 25 1 350 1 50 1 11 2 72 2 14 4 125 1 17 1 241 1 359 1 
310 1 85 2 198 3 288 11 185 5 62 1 6 1 7 1 160 1 22 1 120 2 342 1 143 1 347 2 235 2 25 1 350 1 68 1 50 1 11 4 72 2 73 1 125 1 14 6 193 1 17 2 241 2 359 1 
310 1 85 3 198 4 288 19 244 1 185 10 62 1 6 1 160 1 7 1 22 2 120 3 143 3 207 2 347 1 235 3 148 1 25 1 68 1 350 1 50 1 149 1 11 6 73 1 72 3 125 1 14 9 193 2 173 1 17 3 241 3 359 1 223 1 
310 1 85 3 198 5 288 17 244 1 185 7 62 1 6 1 160 1 7 1 22 2 120 3 143 2 207 1 347 1 235 3 148 1 25 1 68 1 350 1 50 1 149 1 11 6 73 2 72 3 125 1 14 10 193 2 173 1 17 3 241 3 359 1 223 1 
85 1 310 1 198 2 288 8 185 4 62 1 6 1 160 1 7 1 120 1 143 1 347 1 235 1 25 1 350 1 50 1 11 2 72 2 14 4 125 1 17 1 241 1 359 1 
85 1 198 2 288 12 244 1 185 6 62 1 160 1 7 1 22 2 120 1 143 2 207 2 347 1 235 1 350 1 149 1 11 2 73 1 72 1 14 6 193 2 173 1 17 2 241 1 223 1 
310 1 85 4 198 5 288 18 244 1 185 8 62 1 6 1 7 1 160 1 22 2 120 4 143 2 207 1 347 1 235 4 148 2 25 1 350 1 68 1 50 1 149 1 11 8 73 2 72 3 125 1 14 10 193 2 173 1 17 3 241 4 359 1 223 1 
85 4 198 6 288 16 244 1 185 7 62 1 7 1 160 1 22 3 120 4 143 2 207 2 347 1 235 4 148 2 350 1 149 1 11 8 73 3 72 3 14 9 193 3 173 1 239 1 17 3 241 4 223 1 
310 1 198 6 25 1 50 2 288 7 72 3 73 3 185 4 125 3 14 3 6 3 17 1 143 1 
310 1 85 4 198 4 288 18 244 1 185 8 62 1 6 1 7 1 160 1 22 2 120 4 143 2 207 1 347 1 235 4 148 2 25 1 350 1 50 1 149 1 11 8 73 1 72 3 125 1 14 10 193 2 173 1 239 1 17 3 241 4 359 1 223 1 
235 1 85 1 198 5 25 1 288 10 11 2 72 3 73 2 185 5 125 2 14 5 6 2 7 1 174 1 17 2 120 1 241 1 143 2 
235 1 85 1 198 1 288 2 11 2 73 1 14 2 7 1 22 1 17 1 120 1 241 1 
235 1 198 2 85 1 288 4 11 2 72 1 73 1 185 2 193 1 14 2 7 1 22 1 17 1 120 1 143 1 241 1 207 1 
235 3 148 1 85 3 198 2 288 3 11 6 72 1 73 1 185 2 125 1 14 1 6 1 239 1 7 1 120 3 175 1 241 3 
310 1 85 5 198 12 288 34 185 18 62 1 6 3 40 1 7 1 160 3 22 3 120 5 342 1 143 5 207 3 347 4 210 1 235 5 148 2 25 2 68 1 50 1 11 10 73 5 72 7 125 3 14 16 193 3 239 1 17 5 175 1 241 5 359 1 81 1 
254 1 213 1 200 1 171 1 233 1 112 1 75 1 
113 1 254 1 101 1 213 1 200 1 171 1 75 1 63 1 320 1 233 1 112 1 253 1 
84 1 286 1 31 1 228 1 339 1 123 1 281 1 98 1 176 1 119 1 167 1 
84 1 254 2 286 1 339 1 213 1 123 1 258 1 200 2 192 1 354 1 93 1 228 1 281 1 176 1 98 1 322 1 112 1 273 1 
286 1 59 1 339 2 200 2 201 1 93 1 228 2 98 1 322 1 100 1 273 2 254 2 123 1 213 2 258 1 329 1 192 2 259 2 354 1 281 1 176 1 112 1 224 1 
286 1 59 1 339 2 200 2 201 1 228 2 98 1 322 1 100 1 273 2 254 2 123 1 213 2 258 1 329 1 191 1 192 2 259 2 354 1 281 1 176 1 112 1 224 1 
313 1 200 1 60 1 133 1 228 1 24 1 98 1 297 1 121 1 323 1 346 1 254 1 123 1 213 1 192 1 259 1 354 1 176 1 307 1 33 1 338 1 224 1 
313 1 200 1 60 1 133 1 228 1 24 1 98 1 297 1 145 1 121 1 323 1 346 1 254 1 123 1 213 1 192 1 259 1 354 1 176 1 33 1 338 1 224 1 
286 1 123 1 281 1 98 1 176 1 5 1 
84 2 286 2 123 6 339 2 5 1 277 1 249 1 136 1 278 1 77 1 295 1 228 3 186 1 140 1 281 3 272 1 176 7 98 7 56 1 300 1 273 1 
285 2 198 2 310 1 286 1 85 2 339 1 288 6 200 2 245 1 185 3 248 1 6 1 292 2 204 1 93 1 228 1 120 2 229 1 97 1 143 1 98 1 322 1 273 1 168 1 235 2 254 2 25 1 50 1 213 1 123 1 258 1 11 4 72 2 192 1 14 3 125 1 54 1 354 1 77 1 17 1 215 1 281 1 241 2 176 1 359 1 112 2 308 1 
84 1 87 1 35 1 118 2 341 1 161 2 227 1 228 2 24 1 98 1 145 1 121 1 323 1 67 2 346 3 123 1 51 1 103 2 330 2 74 1 150 1 151 1 217 1 176 1 178 1 33 3 130 1 180 1 
286 1 123 2 339 1 35 1 5 1 77 1 295 1 228 2 343 1 281 2 176 2 98 2 273 1 
84 1 254 2 286 1 339 1 213 1 123 1 258 1 200 2 191 1 192 1 354 1 228 1 281 1 176 1 98 1 322 1 112 1 273 1 
286 1 123 1 339 1 136 1 278 1 295 1 228 1 281 2 176 1 98 1 224 1 300 1 273 1 
84 1 286 1 351 1 123 4 339 1 119 1 77 1 228 1 281 1 176 4 98 4 348 1 167 1 
114 1 286 1 123 2 339 1 136 1 278 1 205 1 216 1 228 1 281 2 176 2 98 2 224 1 273 1 
84 1 286 1 16 1 123 1 304 1 281 1 98 1 176 1 282 1 336 1 
286 1 123 2 102 1 339 1 249 1 77 1 228 1 281 1 176 2 98 2 272 1 
84 1 286 2 123 4 339 2 119 1 77 1 228 3 140 1 186 1 281 2 176 5 98 5 272 1 348 1 224 1 167 1 
84 1 286 2 123 4 339 2 119 1 92 1 77 1 228 3 186 1 281 2 176 5 98 5 272 1 348 1 224 1 167 1 
254 1 59 1 213 1 200 1 259 1 294 1 162 2 126 1 165 1 42 1 108 1 112 1 
313 1 200 2 201 1 60 1 158 1 133 1 88 1 294 1 162 2 139 1 165 1 319 1 42 1 297 1 121 1 323 1 346 2 254 2 213 2 51 1 329 1 192 1 259 2 354 1 126 1 335 1 108 1 33 2 338 1 180 1 
126 1 108 1 
162 1 335 1 319 1 
236 1 31 1 267 1 52 1 
236 1 250 1 132 1 267 1 52 1 268 1 80 1 
23 1 250 1 219 1 
236 1 132 1 267 1 52 1 246 2 268 3 293 1 318 1 250 3 127 1 220 1 80 1 
236 1 250 2 132 1 267 1 52 1 117 1 230 1 268 2 80 1 
293 1 250 1 132 1 352 1 267 1 218 1 89 1 268 1 282 1 80 1 336 1 
293 1 250 1 132 1 267 1 52 1 268 1 80 1 
293 1 236 1 250 1 132 1 52 2 268 1 80 1 
183 1 237 1 132 2 267 1 52 1 268 2 293 1 250 2 279 1 80 2 
236 1 132 1 52 1 267 2 268 3 37 1 4 1 293 1 250 3 218 1 230 2 80 1 337 1 
236 1 169 1 132 1 267 1 52 1 352 1 268 2 333 1 293 1 250 2 304 1 230 1 282 2 80 1 336 1 
236 1 132 2 52 1 243 1 267 2 117 1 268 4 4 1 293 1 250 4 218 1 230 2 80 2 
293 1 236 1 250 1 132 1 267 1 52 1 268 1 80 1 
236 2 132 1 52 2 267 3 246 1 340 1 268 4 4 1 250 4 127 1 218 1 230 2 220 1 80 1 
236 1 132 1 267 1 52 1 268 2 353 1 293 1 250 2 230 1 298 1 129 1 80 1 
236 1 132 1 267 1 52 1 246 2 268 3 293 1 250 3 127 2 220 1 80 1 349 1 
234 1 301 1 267 2 111 2 
293 1 1 1 250 1 132 1 268 1 80 1 
293 1 236 1 250 2 132 1 267 1 52 1 230 1 268 2 37 1 80 1 
266 1 
293 1 236 1 250 1 132 1 267 1 52 1 268 1 80 1 
236 1 132 1 52 1 267 1 246 1 268 3 37 1 293 1 250 3 230 1 80 1 
267 1 218 1 340 1 4 1 
267 1 52 1 

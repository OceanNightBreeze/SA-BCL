#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
346 1 13 1 58 1 239 3 137 2 214 1 287 2 37 3 217 1 73 1 304 1 182 2 66 1 
147 1 4 1 6 1 73 6 182 2 233 1 254 1 346 1 255 2 256 1 13 4 58 1 239 9 214 2 137 2 287 5 37 9 217 1 165 2 63 1 304 3 378 2 139 1 191 1 116 1 66 1 247 1 143 2 
147 1 4 1 6 1 73 6 182 2 233 1 254 1 346 1 255 2 256 1 13 4 58 1 239 9 214 2 137 2 287 5 37 9 217 1 165 2 63 1 304 3 378 2 139 1 191 1 116 1 66 1 247 1 143 2 
147 1 4 1 6 1 73 7 182 2 233 1 254 1 346 1 255 2 256 1 13 5 58 1 239 10 214 2 137 2 287 6 37 10 217 1 165 2 63 1 304 4 378 2 139 1 191 1 116 1 66 1 247 1 143 2 
147 1 4 1 6 1 73 4 182 2 254 1 346 1 255 1 256 1 13 3 58 1 239 7 214 2 137 2 287 4 37 7 217 1 165 2 63 1 304 2 378 2 139 1 191 1 116 1 66 1 247 1 143 2 
255 2 13 2 58 1 239 4 137 1 287 3 37 4 165 1 217 1 73 3 304 1 378 1 182 1 233 1 116 1 66 1 143 1 247 1 
283 1 58 1 239 2 147 1 4 1 287 1 137 1 214 1 37 2 217 1 165 1 182 1 297 1 66 1 32 1 143 1 
346 1 255 2 323 1 256 1 222 1 13 4 58 1 239 9 287 5 137 2 214 1 37 9 165 1 217 1 63 1 73 7 304 3 378 1 182 2 233 1 116 1 66 1 143 1 247 1 
346 1 255 2 323 1 256 1 222 1 13 4 58 1 239 9 287 5 137 2 214 1 37 9 165 1 217 1 63 1 73 7 304 3 378 1 182 2 233 1 116 1 66 1 143 1 247 1 
208 1 250 1 119 1 33 1 335 1 224 1 86 1 228 1 62 1 187 1 276 1 168 1 195 1 
246 1 
62 1 187 2 291 1 324 1 141 1 224 2 246 1 351 1 
237 1 291 1 348 2 324 1 81 1 224 5 48 1 314 1 202 1 215 1 230 1 103 1 62 2 187 5 189 1 141 2 246 1 67 2 78 2 
146 1 324 1 246 1 
0 1 246 1 56 2 
208 1 250 2 209 1 119 2 168 2 195 2 228 2 86 2 
250 2 197 1 367 1 119 2 175 1 270 1 101 1 225 1 180 1 295 1 228 3 53 1 156 2 204 1 77 1 373 1 161 1 208 1 376 1 301 1 209 1 163 1 109 1 35 2 83 1 259 2 86 2 354 2 60 1 114 1 218 2 219 1 140 1 168 2 18 1 195 3 41 1 
208 1 250 1 119 1 33 1 335 1 86 1 228 1 168 1 195 1 
250 1 324 1 199 1 224 1 149 1 228 1 187 1 331 1 243 1 244 1 279 1 246 1 195 1 42 1 
208 1 250 2 119 2 33 1 324 1 335 1 224 2 149 1 86 2 228 2 187 2 276 1 331 1 243 1 244 1 168 2 246 1 195 2 42 1 
181 1 62 1 187 1 141 1 224 1 
62 1 187 2 291 1 324 1 141 1 125 1 224 2 246 1 
187 1 141 1 224 1 
196 1 250 2 209 2 119 1 228 2 86 1 168 1 192 1 195 2 
186 1 257 1 248 1 
209 1 109 1 175 1 270 1 259 1 225 1 228 1 114 1 218 1 219 1 156 1 278 1 18 1 373 1 195 1 41 1 
209 1 146 1 
250 1 109 1 175 1 270 1 225 1 259 1 86 1 228 2 114 1 218 1 219 1 156 1 370 1 168 1 373 1 18 1 195 2 41 1 248 1 322 1 
250 3 209 1 119 1 370 1 168 3 195 3 228 3 86 3 
250 1 33 1 168 1 195 1 228 1 86 1 
196 1 250 1 119 1 243 1 168 1 192 1 195 1 228 1 86 1 
250 3 197 1 119 2 175 1 270 1 101 1 224 1 225 1 149 1 228 4 156 1 342 1 370 1 204 1 373 1 322 1 161 1 208 1 376 1 301 1 184 1 209 1 163 1 109 1 35 1 83 1 259 1 86 3 354 2 114 1 60 1 218 1 219 1 187 1 331 1 243 1 140 1 244 1 168 3 192 1 18 1 195 4 41 1 42 1 
250 2 209 1 55 1 370 1 168 1 279 1 195 2 228 2 86 1 
250 3 119 1 110 1 224 1 149 1 86 3 228 3 187 1 342 1 243 1 331 1 370 2 244 1 168 3 192 1 246 1 195 3 42 1 322 1 
250 2 186 1 119 1 370 1 168 2 192 1 195 2 248 1 228 2 86 2 
209 1 109 1 175 1 270 1 259 1 225 1 228 1 114 1 218 1 219 1 156 1 18 1 373 1 195 1 41 1 
209 1 175 1 270 1 293 1 259 1 225 1 228 1 114 1 218 1 219 1 156 1 275 1 373 1 195 1 41 1 
307 1 367 2 26 1 101 2 177 1 274 1 201 1 341 1 204 1 161 1 376 1 301 1 163 1 257 2 326 1 83 1 35 4 354 2 303 1 87 1 186 2 166 1 357 1 248 2 
343 1 
250 5 209 1 162 1 119 1 86 4 228 5 55 1 370 2 305 1 168 4 279 1 192 1 195 5 322 1 
250 1 33 1 168 1 195 1 228 1 86 1 
138 1 356 1 39 1 
356 2 39 2 235 1 380 1 352 1 365 1 
356 1 39 1 
356 1 39 1 
380 1 352 1 
380 1 352 1 
380 1 352 1 
43 1 356 1 39 1 
43 1 356 1 39 1 
43 1 356 1 39 1 
96 1 356 1 39 1 
96 1 356 1 39 1 
96 1 356 1 39 1 
118 1 79 2 292 3 327 2 224 2 102 2 350 2 84 2 187 2 356 2 277 1 39 2 361 1 235 1 30 1 194 1 280 1 246 1 344 1 
250 2 292 1 224 1 68 1 102 1 178 1 228 2 27 1 344 1 282 1 209 1 79 1 327 1 112 1 82 1 84 1 86 2 138 1 187 1 356 1 39 1 168 2 64 1 195 2 
74 2 378 1 226 1 143 2 32 1 
165 1 378 1 143 1 
165 1 143 1 32 1 
74 1 378 2 226 1 170 1 143 3 32 1 
74 1 378 1 226 1 150 1 143 2 32 1 
0 1 173 2 291 1 26 1 224 5 71 1 27 1 341 1 319 1 130 2 78 1 56 3 282 1 348 1 324 1 238 1 14 1 81 1 82 1 134 1 215 3 87 1 62 4 187 5 189 2 357 1 358 1 40 2 141 1 333 1 246 2 67 1 
0 3 173 6 291 1 176 1 26 3 47 1 224 9 227 1 202 1 27 4 181 5 341 3 319 1 104 1 128 1 78 2 56 9 348 2 324 1 14 3 81 1 215 8 87 3 62 7 187 9 167 1 189 6 357 3 358 2 40 6 141 6 169 5 333 2 246 5 67 2 
0 2 173 2 26 1 224 3 202 1 71 1 27 1 341 1 130 1 78 1 56 4 348 1 324 1 238 1 14 1 215 3 87 1 62 2 187 3 357 1 189 2 358 1 40 2 333 1 246 3 67 1 
0 3 173 4 26 2 47 1 224 4 202 1 71 1 27 2 341 2 104 1 130 2 78 1 56 7 348 1 324 1 238 1 14 2 215 5 87 2 62 3 187 4 167 1 357 2 189 4 358 1 40 4 333 1 246 4 67 1 
174 1 
219 1 146 1 269 1 
219 1 12 1 
219 1 41 1 
219 3 175 1 269 2 93 1 157 1 41 1 
219 1 175 1 41 1 
219 1 325 1 
308 1 377 1 185 1 367 4 1 1 313 1 101 3 26 1 326 3 35 7 273 1 59 1 303 2 253 2 155 1 203 1 341 1 234 1 
308 1 367 16 1 2 311 1 313 1 45 3 101 15 26 4 273 1 253 3 155 2 203 2 341 4 338 1 234 5 204 1 236 1 183 1 377 1 376 1 301 1 14 3 326 10 16 4 83 1 35 31 59 2 85 1 216 1 354 2 303 5 87 3 357 3 364 1 
308 1 367 5 311 1 1 1 313 1 26 1 101 4 253 2 155 1 203 1 341 1 204 2 234 1 376 2 301 2 377 1 326 4 83 2 35 9 59 1 354 4 303 3 188 1 95 1 
308 1 377 1 367 4 1 1 313 1 101 3 26 1 326 3 35 7 273 1 59 1 303 2 253 2 155 1 203 1 341 1 234 1 
308 1 377 1 367 4 1 1 313 1 101 3 26 1 326 3 35 7 273 1 59 1 303 2 253 2 155 1 203 1 341 1 234 1 
120 1 270 1 302 1 239 1 121 1 225 1 3 2 252 1 259 1 315 2 213 1 214 2 137 1 37 1 218 1 219 1 156 1 290 1 182 1 372 1 206 2 373 1 41 1 
265 1 3 1 69 1 225 1 315 1 156 1 182 1 206 1 373 1 321 1 160 1 32 1 80 1 239 1 259 1 137 1 214 1 37 1 165 1 218 1 217 1 242 1 88 1 378 1 170 1 143 2 
265 1 198 1 3 1 69 1 225 1 315 1 73 1 156 1 182 1 206 1 373 1 321 1 160 1 32 1 58 1 239 2 259 1 287 1 137 1 214 1 37 2 165 1 218 1 217 1 242 1 88 1 378 1 66 1 170 1 143 2 
265 1 3 1 252 1 69 1 225 1 315 1 73 2 156 1 232 1 182 1 206 1 373 1 321 1 160 1 32 1 80 1 58 1 239 3 259 1 287 1 137 1 214 1 37 3 165 1 218 1 88 1 378 1 66 1 170 1 143 2 
3 1 69 1 225 1 315 1 73 2 156 1 232 1 206 1 373 1 160 1 32 1 80 1 58 1 239 2 259 1 287 1 214 1 37 2 218 1 165 1 88 1 378 1 66 1 170 1 143 2 
320 1 
0 2 250 1 291 3 99 2 199 1 149 1 200 1 156 2 296 1 56 2 107 2 57 2 348 1 258 1 259 2 215 2 113 1 218 2 61 1 219 1 262 1 263 1 306 4 67 1 366 1 172 2 120 1 312 1 270 2 224 5 225 1 228 1 317 1 126 2 76 1 279 1 373 1 129 2 78 1 324 1 81 1 240 1 187 5 189 2 331 1 243 1 289 2 290 1 244 1 141 6 333 1 246 2 195 1 41 1 42 1 
250 1 107 1 291 1 224 3 199 1 149 1 351 1 240 1 113 1 228 1 187 3 243 1 262 1 331 1 244 1 263 1 141 2 306 2 76 1 279 1 195 1 42 1 
250 1 291 1 199 1 224 3 149 1 228 1 76 1 279 1 129 1 324 1 240 1 351 1 113 1 187 3 331 1 262 1 243 1 244 1 263 1 141 1 306 3 246 1 195 1 42 1 
250 1 291 1 199 1 224 3 149 1 228 1 76 1 279 1 129 1 57 1 107 1 324 1 351 1 240 1 113 1 187 3 331 1 262 1 243 1 244 1 263 1 306 3 141 2 246 1 195 1 42 1 
172 2 0 2 250 1 145 1 291 3 312 1 99 2 100 1 199 1 224 5 149 1 228 1 296 1 126 2 76 1 279 1 129 4 78 1 57 4 107 4 348 1 324 5 81 1 351 1 240 1 215 1 113 1 261 1 187 5 189 1 262 1 331 1 243 1 289 2 244 1 263 1 141 7 306 6 65 1 193 1 246 5 67 1 195 1 42 1 
250 1 0 2 291 2 99 2 199 1 149 1 200 1 296 1 56 2 57 2 107 2 348 1 215 1 113 1 262 1 263 1 306 4 67 1 172 2 312 1 224 4 228 1 76 1 126 2 279 1 129 2 78 1 324 1 81 1 240 1 187 4 189 1 243 1 331 1 289 2 244 1 141 4 246 2 195 1 42 1 
172 2 0 2 250 1 145 1 291 2 312 1 99 2 199 1 224 4 149 1 228 1 296 1 126 2 76 1 279 1 129 2 78 1 107 2 57 2 348 1 324 1 81 1 240 1 215 1 113 1 187 4 189 1 331 1 262 1 243 1 289 2 244 1 263 1 141 4 306 4 65 1 193 1 246 1 67 1 195 1 42 1 
172 2 0 2 250 1 145 1 291 2 312 1 99 2 199 1 224 4 149 1 228 1 296 1 126 2 76 1 279 1 129 2 78 1 107 2 57 2 348 1 324 1 81 1 240 1 215 1 113 1 187 4 189 1 331 1 262 1 243 1 289 2 244 1 263 1 141 4 306 4 65 1 193 1 246 1 67 1 195 1 42 1 
172 2 250 1 291 2 312 1 99 2 199 1 224 4 149 1 272 2 5 1 228 1 371 1 76 1 279 1 129 2 78 1 56 2 107 2 57 2 348 1 324 1 81 1 240 1 215 1 113 1 187 4 189 1 331 1 262 1 243 1 244 1 263 1 141 4 306 4 65 1 246 1 19 1 264 2 67 1 195 1 42 1 
172 2 0 2 250 1 145 1 291 2 312 1 99 2 100 1 199 1 224 4 149 1 228 1 296 1 126 2 76 1 279 1 129 3 78 1 57 3 107 3 348 1 324 1 81 1 240 1 215 1 113 1 187 4 189 1 331 1 262 1 243 1 289 2 244 1 263 1 306 5 141 5 65 1 193 1 246 1 67 1 195 1 42 1 
172 2 0 2 250 1 145 1 291 2 312 1 99 2 100 1 199 1 224 4 149 1 228 1 296 1 126 2 76 1 279 1 129 3 78 1 57 3 107 3 348 1 324 1 81 1 240 1 215 1 113 1 187 4 189 1 331 1 262 1 243 1 289 2 244 1 263 1 306 5 141 5 65 1 193 1 246 1 67 1 195 1 42 1 
250 1 291 2 99 2 199 1 149 1 200 1 56 2 57 2 107 2 348 1 215 1 113 1 262 1 263 1 306 4 19 1 67 1 264 2 172 2 312 1 224 4 272 2 228 1 76 1 279 1 129 2 78 1 324 1 81 1 240 1 187 4 189 1 243 1 331 1 244 1 141 4 246 1 195 1 42 1 
20 1 250 1 197 1 367 1 198 1 120 1 270 2 101 1 177 1 225 2 50 1 180 1 228 1 295 2 229 1 54 1 156 8 370 1 204 2 373 2 161 2 345 1 376 2 301 2 163 2 349 1 80 1 259 8 83 2 35 2 86 1 354 4 218 7 219 3 190 1 290 1 168 1 195 1 41 2 
250 1 367 1 119 1 26 1 101 2 49 1 228 1 122 1 341 1 204 1 161 1 376 1 301 1 257 1 163 1 14 1 326 1 83 1 35 3 86 1 303 1 354 2 87 1 186 1 357 1 168 1 192 1 195 1 248 1 
161 1 308 1 301 1 376 1 377 1 209 2 367 3 257 1 163 1 146 1 1 1 313 1 101 3 26 1 326 2 177 1 35 6 83 1 253 1 303 2 354 2 155 1 186 1 341 1 204 1 248 1 
197 1 367 8 45 3 101 6 26 2 180 1 122 1 9 1 341 1 123 1 75 1 234 1 204 2 183 1 161 1 376 2 301 2 209 1 163 2 257 11 14 2 326 2 16 3 83 2 35 14 36 1 303 1 354 4 87 1 186 4 357 2 364 1 248 11 
250 1 197 1 367 1 175 1 270 1 101 1 225 1 148 1 180 1 228 2 122 1 156 1 11 1 370 1 204 1 278 1 373 1 322 1 161 1 301 1 376 1 209 1 109 1 163 1 111 1 259 1 83 1 35 2 86 1 114 1 354 2 218 1 219 1 186 1 168 1 18 1 195 2 41 1 
250 1 197 1 251 1 1 1 101 10 253 1 155 1 156 3 341 3 339 2 204 3 161 3 301 3 209 2 163 3 109 2 257 7 14 2 259 3 303 4 354 6 60 2 114 2 218 3 219 2 357 2 360 1 168 1 18 2 308 1 367 10 310 1 175 2 270 1 313 1 26 3 225 2 180 1 228 3 122 1 370 1 234 4 373 2 322 1 377 1 376 3 80 1 132 2 326 8 83 3 35 20 86 1 241 2 87 2 186 7 288 2 195 3 41 2 248 7 
161 1 301 1 376 1 367 2 257 1 163 1 326 1 26 1 177 1 35 2 83 1 201 1 354 2 186 1 357 1 234 1 204 1 248 1 
161 1 301 1 376 1 257 1 163 1 326 1 101 2 177 1 35 2 83 1 274 1 303 1 354 2 87 1 186 1 341 1 204 1 248 1 
367 2 26 1 101 2 177 1 341 1 204 1 234 1 161 1 376 1 301 1 163 1 257 2 14 1 326 2 83 1 35 4 354 2 303 1 87 1 186 2 357 1 248 2 
161 1 301 1 376 1 367 2 257 1 163 1 349 1 326 1 26 1 35 2 83 1 201 1 354 2 186 1 357 1 234 1 204 1 248 1 
161 1 301 1 376 1 257 1 163 1 349 1 326 1 101 2 35 2 83 1 274 1 303 1 354 2 87 1 186 1 341 1 204 1 248 1 
367 2 26 1 101 2 341 1 204 1 234 1 161 1 376 1 301 1 163 1 257 2 349 1 14 1 326 2 83 1 35 4 354 2 303 1 87 1 186 2 357 1 248 2 
367 2 26 1 101 2 341 1 204 1 234 1 161 1 376 1 301 1 163 1 257 2 14 1 326 2 35 4 83 1 354 2 303 1 87 1 186 2 357 1 248 2 
197 1 367 1 175 1 270 1 101 1 225 1 180 1 228 1 156 1 204 1 373 1 161 1 301 1 376 1 209 1 109 1 163 1 35 2 259 1 83 1 114 1 60 1 354 2 218 1 219 1 18 1 195 1 41 1 
197 1 367 1 175 1 270 1 101 1 293 1 225 1 180 1 228 1 275 1 156 1 204 1 373 1 161 1 301 1 376 1 209 1 163 1 35 2 259 1 83 1 114 1 354 2 218 1 219 1 330 1 195 1 41 1 
367 2 26 1 101 2 122 1 341 1 204 1 234 1 161 1 376 1 301 1 163 1 257 2 14 1 326 2 83 1 35 4 354 2 303 1 87 1 186 2 357 1 248 2 
367 2 175 1 198 1 101 2 26 1 225 1 228 1 156 1 341 1 339 1 234 1 204 1 373 1 161 1 301 1 376 1 257 2 109 1 163 1 14 1 326 2 35 4 259 1 83 1 303 1 114 1 60 1 354 2 218 1 87 1 219 1 186 2 357 1 18 1 195 1 41 1 248 2 
250 1 367 2 119 1 101 1 26 1 151 1 228 1 122 1 341 1 234 1 204 1 161 1 376 1 301 1 163 1 257 1 14 1 326 1 83 1 35 3 86 1 354 2 87 1 186 1 357 1 168 1 192 1 195 1 248 1 
22 1 367 9 45 1 101 10 26 3 29 2 10 1 341 3 204 2 234 3 106 2 183 1 300 1 376 2 301 2 34 1 14 3 326 6 16 2 328 1 83 2 35 19 303 3 354 4 87 3 188 1 357 3 362 1 117 1 364 1 
22 1 367 13 311 1 45 2 101 10 26 3 51 1 29 3 341 2 340 1 234 1 204 2 158 1 106 1 300 2 376 2 301 2 131 1 34 1 14 3 326 1 16 2 328 1 83 2 35 23 164 1 354 4 17 1 87 2 188 1 357 3 117 2 364 2 
22 1 367 15 45 3 101 16 26 4 51 1 29 3 10 1 340 1 341 4 204 2 234 3 158 1 106 1 183 1 300 1 376 2 301 2 131 1 34 1 14 4 326 4 211 1 16 4 328 1 164 1 83 2 35 31 303 1 354 4 17 1 87 4 188 1 357 4 117 2 364 3 
22 1 367 17 311 1 45 3 101 15 26 4 51 1 29 4 10 1 340 1 341 3 204 3 234 3 158 1 106 1 183 1 300 1 376 3 301 3 131 1 34 1 14 4 326 5 211 1 16 4 328 1 164 1 83 3 35 32 303 2 354 6 17 1 87 3 188 1 357 4 117 2 364 3 
308 1 22 1 367 27 1 1 311 2 313 1 45 4 101 26 26 8 51 1 253 1 29 4 155 1 340 1 341 8 75 2 204 3 234 7 158 1 106 1 183 2 377 1 300 1 376 3 301 3 131 1 34 1 14 7 326 15 16 4 328 1 164 1 83 3 35 53 303 8 354 6 17 1 87 7 188 1 357 7 117 1 364 2 
221 1 356 1 79 1 39 1 235 1 327 1 102 1 194 1 280 1 84 1 
138 1 178 1 
309 1 356 1 79 1 379 1 39 1 327 1 102 1 159 1 84 1 
79 1 292 2 224 1 327 1 102 1 350 1 84 1 187 1 356 1 277 1 39 1 361 1 235 1 30 1 194 1 280 1 246 1 344 1 
79 1 292 2 224 1 327 1 102 1 350 1 84 1 187 1 356 1 277 1 39 1 361 1 235 1 30 1 194 1 280 1 246 1 344 1 
79 1 292 2 224 1 327 1 102 1 350 1 84 1 187 1 356 1 277 1 39 1 361 1 235 1 30 1 194 1 280 1 246 1 344 1 
43 1 212 1 365 1 
43 1 212 1 365 1 
144 1 96 1 
144 1 96 1 365 1 
64 1 68 1 
250 2 292 1 224 1 68 1 102 1 369 1 178 1 228 2 27 1 282 1 209 1 79 1 327 1 112 1 350 1 82 1 84 1 86 2 138 1 62 1 187 1 356 1 361 1 39 1 64 1 168 2 195 2 
43 1 212 1 
144 1 96 1 365 1 
250 2 197 1 367 1 267 1 101 1 225 1 50 1 180 1 228 2 152 1 295 2 229 1 122 1 156 2 8 1 204 1 373 1 161 1 301 1 376 1 163 1 259 2 133 1 83 1 35 2 354 2 218 2 219 1 329 1 195 2 41 1 
266 1 120 1 270 1 302 1 225 1 259 1 3 1 316 1 218 1 219 1 156 1 290 1 373 1 41 1 
266 1 80 1 259 1 3 1 225 1 165 1 218 1 156 1 88 1 38 1 378 1 170 1 373 1 321 1 160 1 143 2 32 1 299 1 
266 1 198 1 80 1 225 1 259 2 3 1 165 1 218 2 156 2 88 1 38 1 378 1 170 1 373 1 321 1 160 1 143 2 32 1 299 1 
108 1 80 1 259 1 3 1 225 1 165 1 218 1 156 1 88 1 378 1 170 1 373 1 321 1 160 1 143 2 32 1 299 1 
91 1 
348 1 324 1 81 1 215 1 103 1 230 1 189 1 246 1 67 1 78 1 
0 5 173 5 14 2 26 2 215 5 241 1 28 2 87 2 341 2 357 2 189 5 359 1 40 5 246 5 56 10 
187 1 291 1 324 1 224 1 141 1 246 1 
291 2 97 1 120 1 270 2 98 2 224 3 225 1 202 1 317 1 7 1 156 4 373 1 207 1 78 2 348 2 258 2 81 1 259 4 215 2 61 1 218 4 219 1 187 3 189 2 290 1 141 4 333 2 67 2 41 1 
230 1 103 1 146 1 324 1 189 1 246 1 215 1 
0 1 291 1 224 1 296 1 126 1 78 1 56 1 348 1 324 1 81 1 215 1 187 1 189 1 289 1 141 1 246 2 67 1 
0 6 291 3 198 1 98 1 103 1 7 1 156 3 341 2 157 1 56 12 12 3 348 4 258 1 14 2 259 3 260 1 215 9 218 3 219 7 357 2 220 2 359 2 363 2 67 4 173 6 268 2 175 2 270 1 269 2 26 2 224 5 225 2 70 2 28 2 230 1 124 1 373 3 78 4 324 2 81 4 241 2 87 2 187 5 89 2 189 8 92 1 332 1 141 5 40 6 333 2 246 8 41 2 42 2 
0 3 173 5 45 1 26 2 340 1 341 2 158 1 78 1 56 6 348 1 131 1 14 2 81 1 16 1 164 1 215 6 17 1 87 2 189 4 357 2 40 5 246 3 364 1 67 1 
21 1 250 1 119 1 1 1 313 1 26 2 335 1 224 1 228 1 28 2 155 1 341 1 276 1 78 1 208 1 348 1 33 1 81 1 215 2 86 1 187 1 189 2 359 1 168 1 193 1 195 1 67 1 
250 2 197 1 119 2 175 1 270 1 101 1 225 1 228 3 156 1 204 1 373 1 208 1 161 1 376 1 301 1 209 1 109 1 163 1 35 1 83 1 259 1 86 2 354 2 60 1 114 1 218 1 219 1 140 1 168 2 18 1 195 3 41 1 
0 2 173 2 348 1 324 2 258 1 81 1 215 1 253 1 189 2 40 2 333 1 246 4 67 1 78 1 56 4 
368 1 64 1 102 1 194 1 84 1 
102 1 84 1 294 1 
102 1 84 1 294 1 
102 1 84 1 294 1 
102 1 136 1 84 1 
102 1 136 1 84 1 
102 1 136 1 84 1 
102 1 84 1 
356 1 39 1 
21 1 376 1 301 1 367 5 1 2 313 1 326 5 101 5 26 2 83 1 35 10 354 2 303 3 155 2 188 1 341 2 204 1 234 2 
301 1 376 1 367 2 26 1 326 1 83 1 35 2 354 2 188 1 357 1 204 1 234 1 
301 1 376 1 367 2 14 1 101 2 326 2 26 1 83 1 35 4 303 1 354 2 87 1 341 1 188 1 357 1 204 1 234 1 
301 3 376 3 367 1 311 1 1 1 101 2 326 2 35 3 83 3 354 6 303 1 155 1 10 1 188 1 204 3 234 1 105 1 
308 1 367 16 1 3 311 2 313 2 45 3 101 18 26 5 253 1 155 3 338 1 10 1 341 5 204 5 234 5 105 1 236 1 183 1 377 1 376 5 301 5 210 1 14 3 326 12 16 4 83 5 35 34 216 1 354 10 303 7 87 3 188 1 357 3 364 1 
308 1 367 4 1 1 45 1 313 1 26 1 101 4 253 1 155 1 341 1 340 1 204 1 376 1 301 1 377 1 326 2 16 1 35 8 83 1 354 2 303 2 188 1 364 1 
308 1 367 6 1 1 313 1 45 1 101 5 26 2 253 1 155 1 341 1 340 1 204 2 234 1 183 1 377 1 376 2 301 2 210 1 14 1 326 3 16 2 35 11 83 2 303 2 354 4 188 1 357 1 364 1 
367 6 45 1 101 6 26 2 340 1 341 2 204 2 234 1 158 1 376 2 301 2 210 1 131 1 14 2 326 1 16 1 35 12 83 2 164 1 354 4 17 1 87 2 188 1 357 2 364 1 
367 7 311 2 45 1 101 5 26 2 340 1 341 1 234 1 204 4 158 1 376 4 301 4 210 1 131 1 14 2 326 3 16 1 35 12 83 4 164 1 354 8 303 2 17 1 87 1 188 1 357 2 364 1 
308 1 367 4 1 1 45 1 313 1 26 1 101 4 253 1 155 1 341 1 340 1 204 1 376 1 301 1 377 1 326 2 16 1 35 8 83 1 354 2 303 2 188 1 364 1 
367 6 311 1 45 1 101 7 26 2 340 1 341 2 234 1 204 2 158 1 376 2 301 2 131 1 14 2 326 3 16 1 35 13 83 2 164 1 354 4 303 2 17 1 87 2 188 1 357 2 364 1 
367 7 311 1 45 1 101 4 26 2 340 1 341 1 204 3 234 1 158 1 376 3 301 3 210 1 131 1 14 2 326 1 16 1 35 11 83 3 164 1 354 6 17 1 87 1 188 1 357 2 364 1 
367 7 311 1 45 1 101 4 26 2 340 1 10 1 341 1 234 2 204 3 158 1 376 3 301 3 131 1 14 2 326 3 16 1 35 11 83 3 164 1 354 6 303 1 17 1 87 1 188 1 357 2 364 1 
308 1 377 2 367 3 1 3 313 1 101 4 326 6 26 1 35 7 303 3 155 3 341 1 234 3 
367 7 311 1 45 1 101 4 26 2 340 1 10 1 341 1 204 3 234 1 158 1 376 3 301 3 131 1 14 2 326 1 16 1 35 11 83 3 164 1 354 6 17 1 87 1 188 1 357 2 364 1 
308 1 301 2 376 2 377 1 367 4 311 1 1 1 313 1 26 1 101 4 326 3 35 8 83 2 253 1 303 2 354 4 155 1 341 1 234 1 204 2 
308 1 377 1 367 3 146 1 1 1 313 1 101 3 326 2 26 1 35 6 253 1 303 2 155 1 341 1 
301 1 376 1 367 2 210 1 14 1 101 2 326 2 26 1 83 1 35 4 303 1 354 2 87 1 341 1 357 1 204 1 234 1 
367 3 45 1 14 1 101 4 26 1 326 2 16 2 35 7 303 1 87 1 341 1 357 1 234 1 364 1 183 1 
308 1 367 11 1 2 311 2 313 1 45 2 26 3 101 12 253 1 155 2 341 3 75 1 234 4 204 2 105 1 183 1 377 1 301 2 376 2 14 2 326 9 16 2 35 23 83 2 36 1 303 5 354 4 87 2 357 2 
101 1 16 1 35 1 
367 1 45 1 35 1 
376 1 301 1 367 3 210 1 14 1 101 3 26 1 326 3 83 1 35 6 241 1 354 2 303 2 87 1 341 1 357 1 204 1 234 1 
367 6 311 1 45 1 101 7 26 2 340 1 341 2 234 1 204 2 158 1 376 2 301 2 131 1 14 2 326 3 16 1 35 13 83 2 164 1 354 4 303 2 17 1 87 2 188 1 357 2 364 1 
367 3 1 1 313 1 26 1 101 3 326 2 35 6 303 1 155 1 341 1 234 1 
308 1 377 1 301 1 376 1 367 1 1 1 311 1 326 2 101 2 35 3 83 1 303 1 354 2 155 1 234 1 204 1 105 1 
250 1 209 1 55 1 279 1 195 1 228 1 171 1 
52 1 250 1 209 1 55 1 286 1 94 1 279 1 195 1 179 1 228 1 171 1 72 1 
284 1 198 1 120 1 270 1 2 1 259 4 225 1 218 4 219 1 156 4 290 1 373 1 41 1 
310 1 175 1 46 1 259 1 336 1 225 1 218 1 355 1 219 1 156 1 373 2 374 1 41 1 
165 1 218 1 156 1 88 1 270 1 225 1 259 1 373 1 143 1 32 1 
229 1 218 2 219 1 156 2 267 1 198 1 80 1 225 1 259 2 373 1 41 1 
345 1 284 1 120 1 198 1 270 1 98 1 259 5 225 2 218 4 229 1 219 3 156 5 190 1 290 1 373 2 41 2 
284 1 120 1 198 1 270 1 98 1 259 5 225 2 353 1 218 4 229 1 219 3 156 5 190 1 290 1 373 2 41 2 
218 1 219 1 156 1 146 1 120 1 270 1 290 1 225 1 259 1 373 1 41 1 
250 1 209 1 109 1 175 1 270 1 259 1 225 1 86 1 228 2 114 1 218 1 219 1 156 1 370 1 168 1 373 1 195 2 41 1 
250 1 175 2 98 1 225 1 149 1 228 1 156 1 231 1 370 1 373 1 209 1 109 1 259 1 86 1 114 1 218 1 219 2 243 2 92 1 244 1 168 1 195 1 41 2 
250 1 175 2 98 1 225 1 149 1 228 1 275 1 156 1 231 1 370 1 373 1 209 1 259 1 86 1 114 1 218 1 219 2 243 2 92 1 244 1 168 1 195 1 41 2 
250 1 119 1 175 1 269 1 98 1 335 1 224 2 225 1 228 1 156 1 276 1 318 1 281 1 373 1 208 1 12 1 33 1 324 1 259 1 86 1 218 1 219 3 187 2 92 1 168 1 141 1 246 1 195 1 41 1 42 1 
250 1 119 1 175 1 269 1 98 1 335 1 224 2 225 1 228 1 156 1 276 1 373 1 208 1 12 1 33 1 324 1 259 1 86 1 218 1 219 3 187 2 89 1 92 1 168 1 141 1 246 1 195 1 41 1 42 1 
218 1 156 1 54 1 225 1 259 1 373 1 
175 1 270 1 46 1 15 1 259 1 225 1 218 1 355 1 219 1 156 1 157 1 373 2 41 1 
308 1 250 1 367 3 1 1 175 1 198 1 313 1 101 3 26 1 225 1 228 2 253 1 155 1 122 1 156 1 341 1 339 1 370 1 204 2 373 1 161 2 377 1 301 2 376 2 209 2 257 1 163 2 109 1 132 1 326 2 35 6 133 1 83 2 259 1 86 1 303 2 114 1 354 4 60 1 218 1 219 1 186 1 168 1 18 1 195 2 41 1 248 1 
291 1 268 1 270 1 269 1 224 3 230 1 103 1 7 1 156 1 78 2 12 1 348 2 324 1 81 2 259 1 215 1 218 1 62 1 219 2 187 3 89 1 189 1 220 1 141 2 246 1 363 1 67 2 42 1 
198 1 175 1 269 1 259 2 225 1 260 1 218 2 219 2 54 1 156 2 157 1 373 2 41 1 
250 1 209 1 175 1 270 1 259 1 225 1 86 1 228 2 114 1 218 1 219 1 156 1 275 1 370 1 168 1 373 1 195 2 41 1 
175 1 46 1 98 1 15 1 259 1 225 1 218 1 355 1 219 1 156 1 157 1 373 2 41 1 
154 1 209 1 285 1 271 1 245 1 
250 1 119 1 335 1 271 2 224 2 149 1 228 1 337 1 154 2 276 1 342 1 31 1 375 1 208 1 209 1 33 1 285 1 324 1 86 1 62 1 187 2 331 1 243 1 244 1 245 2 168 1 246 1 195 1 42 1 
250 1 285 1 271 1 152 1 228 1 154 1 8 1 329 1 195 1 
285 1 271 1 224 1 149 1 337 1 154 1 187 1 342 1 331 1 243 1 244 1 245 1 375 1 42 1 
217 1 58 1 239 1 182 1 66 1 287 1 137 1 37 1 
24 1 13 1 223 1 58 2 239 4 4 1 137 1 287 3 37 4 153 1 73 2 304 1 182 1 66 2 
334 1 347 1 222 1 58 1 239 2 287 1 137 1 37 2 217 1 73 1 182 1 66 1 
44 1 24 1 223 2 58 1 239 3 4 2 287 1 137 1 37 3 217 1 182 1 66 1 
23 1 298 1 135 2 287 2 
217 1 239 1 182 1 127 1 137 1 37 1 
217 1 73 1 256 1 58 1 239 2 182 1 66 1 287 1 137 1 37 2 
115 1 
217 1 58 1 239 1 182 1 66 1 287 1 137 1 37 1 
146 1 58 1 66 1 287 1 
58 1 239 1 182 1 66 1 287 1 137 1 37 1 
239 1 206 1 214 1 
24 1 223 1 58 1 239 3 4 2 287 1 137 1 37 3 217 1 90 1 182 1 66 1 
73 1 255 1 58 1 239 2 182 1 66 1 287 1 137 1 37 2 
165 1 217 1 13 1 378 1 239 1 182 1 287 1 137 1 143 1 247 1 37 1 
217 1 58 1 239 1 182 1 287 1 137 1 37 1 
217 1 58 2 239 1 182 1 66 1 137 1 37 1 
249 1 58 1 25 1 239 2 287 1 137 2 37 2 217 1 182 2 142 1 
256 1 13 1 58 1 239 3 137 1 287 2 37 3 217 1 63 1 73 2 304 1 182 1 66 1 
58 1 239 2 287 1 137 1 37 2 217 1 165 1 73 1 378 1 182 1 205 1 66 1 170 1 32 1 143 2 
255 1 13 1 58 1 239 4 137 2 287 2 37 4 217 1 73 2 304 1 182 2 233 1 66 1 
256 1 58 1 239 3 4 1 137 1 287 1 37 3 217 1 73 1 182 1 66 1 
153 1 304 1 13 1 287 1 
58 1 287 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (7,63,199,350) (7,63,199,350) (7,63,199,350) 299 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 9 (93,218) (93,218) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 9 (93,218) (93,218) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 9 (93,218) (93,218) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 9 (93,218) (93,218) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 9 (2,26) (2,26) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (7,63,199,350) (7,63,199,350) (7,63,199,350) 299 269 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (7,63,199,350) (7,63,199,350) (7,63,199,350) 299 269 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 96 357 184 123 190 274 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (231,298) (231,298) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (40,106,322) (11,48,69) (11,48,69) (11,48,69) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (40,106,322) (11,48,69) (11,48,69) (11,48,69) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (40,106,322) (11,48,69) (11,48,69) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (40,106,322) (11,48,69) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 35 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (236,347) 60 96 357 184 124 367 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 96 357 184 123 196 271 273 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 96 357 184 123 196 271 273 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 96 357 184 123 196 271 273 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 96 357 184 123 196 271 273 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (40,106,322) (40,106,322) (40,106,322) 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (40,106,322) (40,106,322) (40,106,322) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (40,106,322) (40,106,322) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 96 357 184 123 190 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 96 357 184 123 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 96 357 184 124 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 96 357 184 123 29 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 85 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
87 1 350 2 192 1 299 1 41 1 7 2 63 2 
93 1 87 1 350 1 218 1 192 1 41 1 7 1 63 1 9 1 
93 1 87 1 350 1 218 1 192 1 41 1 7 1 63 1 9 1 
93 1 87 1 350 1 218 1 192 1 41 1 7 1 63 1 9 1 
93 1 87 1 350 1 218 1 192 1 41 1 7 1 63 1 9 1 
350 1 219 1 108 3 162 1 25 2 7 4 247 2 364 1 199 3 125 1 192 4 41 1 317 1 331 1 63 1 309 1 116 1 118 1 
87 1 350 1 2 1 192 1 41 1 7 1 63 1 9 1 259 1 26 1 
199 1 87 1 350 2 269 1 192 2 299 1 41 1 346 1 7 3 63 2 
199 1 87 1 350 2 269 1 192 2 299 1 41 1 346 1 7 3 63 2 
172 1 163 1 237 1 303 1 248 1 56 1 18 1 113 1 353 1 224 1 201 1 252 1 47 1 332 1 
71 1 
56 2 200 1 169 1 146 1 234 1 163 1 71 1 303 2 
172 1 254 1 237 1 86 1 278 2 303 5 56 5 59 1 113 1 328 1 224 1 353 1 201 1 332 1 94 1 284 1 146 1 208 1 163 2 17 1 339 1 209 2 248 1 71 2 366 2 249 5 18 1 368 2 169 2 234 2 195 1 316 1 44 2 252 1 47 1 49 1 151 4 79 2 
169 1 197 1 71 1 
127 1 302 2 71 1 
206 1 113 2 224 2 201 2 237 2 252 2 332 1 248 2 
81 1 82 1 3 2 22 1 352 1 258 1 237 3 301 1 176 1 88 1 177 1 113 2 89 2 61 1 224 2 354 1 201 2 204 2 158 1 332 1 120 1 143 1 206 1 207 1 245 1 360 1 186 1 362 1 189 2 248 2 72 1 168 1 19 1 251 1 103 2 77 1 252 3 
18 1 113 1 224 1 353 1 201 1 237 1 252 1 47 1 332 1 248 1 
31 1 338 1 237 1 71 1 365 1 248 1 303 1 56 1 18 1 342 1 169 1 239 1 261 1 252 1 
31 1 338 1 237 1 71 1 248 1 303 2 56 2 18 1 113 1 342 1 169 1 224 1 201 1 261 1 252 1 
56 1 234 1 163 1 279 1 303 1 
56 2 305 1 169 1 146 1 234 1 163 1 71 1 303 2 
56 1 234 1 303 1 
206 2 113 1 154 1 224 1 185 1 201 1 237 2 252 2 248 2 
60 1 73 1 347 1 
82 1 206 1 3 1 258 1 237 1 187 1 301 1 189 1 72 1 176 1 168 1 88 1 177 1 103 1 77 1 252 1 
206 1 197 1 
82 1 3 1 24 1 258 1 301 1 237 2 165 1 189 1 248 1 176 1 72 1 177 1 88 1 168 1 113 1 224 1 103 1 77 1 347 1 252 2 
206 1 113 3 224 3 201 1 237 3 252 3 165 1 248 3 
18 1 113 1 224 1 237 1 252 1 47 1 248 1 
18 1 113 1 154 1 224 1 185 1 201 1 237 1 252 1 248 1 
81 1 82 1 3 1 22 1 24 1 323 1 352 1 258 1 301 1 237 4 303 1 56 1 176 1 177 1 88 1 113 3 89 1 61 1 260 1 224 3 354 1 201 2 261 1 204 2 158 1 332 1 143 1 31 1 206 1 185 1 360 1 186 1 338 1 165 1 189 1 248 3 72 1 168 1 18 1 342 1 19 1 103 1 77 1 252 4 
206 1 113 1 224 1 239 1 78 1 237 2 252 2 165 1 248 2 
31 1 185 1 24 1 338 1 237 3 165 2 71 1 303 1 248 3 56 1 18 1 113 3 342 1 260 1 224 3 201 1 261 1 252 3 30 1 
113 2 73 1 224 2 185 1 201 1 347 1 237 2 252 2 165 1 248 2 
82 1 206 1 3 1 258 1 237 1 301 1 189 1 72 1 176 1 168 1 88 1 177 1 103 1 77 1 252 1 
82 1 206 1 3 1 258 1 237 1 138 1 189 1 72 1 176 1 88 1 177 1 213 1 103 1 77 1 252 1 
81 1 296 1 22 1 23 1 236 1 352 1 198 1 60 2 61 1 89 4 354 2 355 1 204 2 95 1 96 1 245 2 360 1 227 1 186 1 366 1 73 2 43 1 44 1 347 2 
18 1 113 1 224 1 36 1 261 1 237 1 252 1 248 1 
206 1 51 1 185 1 24 1 237 5 165 2 248 5 113 4 233 1 224 4 201 1 239 1 78 1 252 5 
18 1 113 2 224 2 36 1 237 2 252 2 47 1 248 2 
214 1 27 1 222 1 
92 1 264 1 277 1 361 1 27 2 222 2 
27 1 222 1 
27 1 222 1 
264 1 277 1 
264 1 277 1 
264 1 277 1 
76 1 27 1 222 1 
76 1 27 1 222 1 
76 1 27 1 222 1 
262 1 27 1 222 1 
262 1 27 1 222 1 
262 1 27 1 222 1 
334 1 80 3 285 1 349 2 242 2 98 1 14 2 109 1 6 2 71 1 222 2 27 2 303 2 56 2 326 2 344 1 329 1 272 1 92 1 
80 1 320 1 6 1 53 1 237 2 27 1 222 1 303 1 56 1 326 1 113 2 224 2 62 1 334 1 183 1 206 1 242 1 14 1 289 1 248 2 268 1 214 1 252 2 20 1 
259 1 
125 1 317 1 116 1 
259 1 
259 1 
259 1 
320 1 297 1 321 1 302 3 303 5 56 5 281 1 357 1 240 1 95 1 183 1 96 1 263 2 146 1 163 4 209 1 101 2 71 2 249 2 366 1 212 1 368 1 169 1 74 1 127 1 234 1 44 1 46 2 49 1 79 1 151 3 20 1 
297 1 302 9 279 5 303 9 56 9 28 1 357 3 240 2 32 1 95 3 96 3 263 6 67 1 146 1 163 7 37 5 17 1 209 2 101 6 147 1 71 5 249 6 366 3 38 1 267 1 169 1 368 2 74 2 127 3 234 6 44 3 49 1 20 4 79 2 151 8 
321 1 302 4 303 3 56 3 357 1 240 1 95 1 96 1 263 2 163 2 17 1 209 1 101 2 71 3 366 1 249 2 212 1 169 1 368 1 74 1 127 2 44 1 46 1 79 1 151 3 20 1 
321 1 302 7 303 4 56 4 28 1 357 2 240 1 95 2 96 2 263 4 67 1 163 3 17 1 209 1 101 4 71 4 366 2 249 4 38 1 212 1 169 1 368 1 74 1 127 3 44 2 46 2 79 1 151 5 20 2 
5 1 
82 1 115 1 197 1 
82 1 99 1 
176 1 82 1 
176 1 82 3 75 1 115 2 258 1 128 1 
176 1 82 1 258 1 
82 1 149 1 
83 1 161 1 68 1 257 1 245 4 8 1 86 1 366 1 328 1 89 7 354 3 104 1 43 3 316 1 355 2 202 1 44 1 358 2 
274 1 96 1 83 1 184 1 245 4 123 1 313 1 366 1 190 1 89 5 126 1 104 1 354 1 357 1 358 1 
12 1 81 2 83 1 68 1 22 2 257 1 245 5 360 2 352 2 8 1 86 1 366 1 328 1 89 9 354 4 104 1 307 1 316 1 43 4 355 3 44 1 358 2 204 4 119 1 
83 1 68 1 245 4 257 1 8 1 86 1 366 1 328 1 89 7 354 3 104 1 43 3 316 1 355 2 202 1 44 1 358 2 
83 1 68 1 245 4 257 1 8 1 86 1 366 1 328 1 89 7 354 3 104 1 43 3 316 1 355 2 202 1 44 1 358 2 
350 1 82 1 3 1 298 1 153 1 173 2 276 1 7 1 87 2 176 1 88 1 325 1 114 2 63 1 157 1 16 1 189 1 72 1 231 1 232 2 192 1 103 1 77 1 
106 1 350 1 3 1 69 1 15 1 173 1 7 1 259 1 189 1 87 1 88 1 191 1 210 1 232 1 192 1 11 1 114 1 103 1 41 1 77 1 63 1 48 1 
106 1 350 1 3 1 69 1 15 1 173 1 7 1 259 1 189 1 87 1 88 1 191 1 341 1 232 1 192 1 11 1 114 1 103 1 41 1 77 1 63 1 48 1 
106 1 350 1 3 1 69 1 145 1 15 1 173 1 7 2 259 1 189 1 199 1 87 1 88 1 191 1 325 1 210 1 232 1 192 2 11 1 114 1 103 1 77 1 63 1 
106 1 3 1 69 1 145 1 173 1 7 1 259 1 189 1 199 1 87 1 88 1 191 1 210 1 232 1 192 1 114 1 103 1 77 1 
275 1 
52 2 153 1 3 2 237 1 56 5 112 4 238 1 239 1 157 1 240 1 13 1 338 1 209 1 71 2 248 1 249 2 72 2 18 1 293 1 342 1 169 1 127 2 77 1 215 2 252 1 129 1 216 1 79 1 21 2 82 1 256 1 302 2 303 5 175 2 176 1 88 1 139 2 261 1 31 1 359 1 310 2 311 1 146 3 189 2 363 1 365 1 39 1 368 1 103 2 234 6 318 2 369 1 49 1 370 1 151 2 
237 1 303 3 56 3 112 2 200 1 238 1 239 1 261 1 31 1 359 1 310 1 146 1 338 1 248 1 365 1 18 1 342 1 234 2 252 1 369 1 129 1 370 1 
237 1 303 3 56 3 112 3 200 1 238 1 239 1 261 1 31 1 359 1 146 1 338 1 248 1 365 1 71 1 18 1 342 1 169 1 234 1 318 1 252 1 369 1 129 1 370 1 
52 1 237 1 303 3 56 3 112 3 200 1 238 1 239 1 261 1 31 1 359 1 310 1 146 1 338 1 248 1 365 1 71 1 18 1 342 1 169 1 234 2 318 1 252 1 369 1 129 1 370 1 
52 4 237 1 56 5 57 1 112 6 200 1 238 1 239 1 338 1 209 1 248 1 71 5 249 1 18 1 342 1 169 5 127 2 252 1 215 2 129 1 79 1 21 2 303 5 175 2 139 2 141 1 261 1 31 1 359 1 310 4 97 1 33 1 311 1 146 3 188 1 365 1 363 1 368 1 234 7 318 4 369 1 370 1 49 1 151 1 
52 2 237 1 56 4 112 4 238 1 239 1 338 1 209 1 248 1 71 2 249 1 18 1 293 1 342 1 169 1 127 2 252 1 215 2 129 1 79 1 21 2 302 2 303 4 175 2 139 2 261 1 31 1 359 1 310 2 311 1 146 2 365 1 363 1 368 1 234 4 318 2 369 1 49 1 370 1 151 1 
21 2 52 2 237 1 303 4 175 2 56 4 112 4 139 2 238 1 141 1 239 1 261 1 31 1 359 1 310 2 33 1 311 1 146 2 338 1 209 1 188 1 71 1 363 1 248 1 365 1 249 1 18 1 342 1 169 1 368 1 234 4 127 2 318 2 215 2 252 1 369 1 129 1 370 1 49 1 151 1 79 1 
21 2 52 2 237 1 303 4 175 2 56 4 112 4 139 2 238 1 141 1 239 1 261 1 31 1 359 1 310 2 33 1 311 1 146 2 338 1 209 1 188 1 71 1 363 1 248 1 365 1 249 1 18 1 342 1 169 1 368 1 234 4 127 2 318 2 215 2 252 1 369 1 129 1 370 1 49 1 151 1 79 1 
31 1 359 1 35 1 338 1 237 1 303 2 365 1 248 1 56 2 112 2 18 1 342 1 238 1 261 1 239 1 369 1 252 1 129 1 370 1 
21 2 52 3 237 1 303 4 175 2 56 4 57 1 112 5 139 2 238 1 141 1 239 1 261 1 31 1 359 1 33 1 310 3 311 1 146 2 338 1 209 1 188 1 71 1 363 1 248 1 365 1 249 1 18 1 342 1 169 1 368 1 127 2 234 5 318 3 215 2 252 1 369 1 129 1 49 1 370 1 151 1 79 1 
21 2 52 3 237 1 303 4 175 2 56 4 57 1 112 5 139 2 238 1 141 1 239 1 261 1 31 1 359 1 33 1 310 3 311 1 146 2 338 1 209 1 188 1 71 1 363 1 248 1 365 1 249 1 18 1 342 1 169 1 368 1 127 2 234 5 318 3 215 2 252 1 369 1 129 1 49 1 370 1 151 1 79 1 
52 2 237 1 56 4 112 4 238 1 239 1 241 2 338 1 209 1 248 1 71 1 249 1 18 1 293 1 342 1 169 1 252 1 129 1 79 1 302 2 303 4 175 2 139 2 261 1 31 1 359 1 310 2 146 2 365 1 363 1 194 1 368 1 234 4 318 2 369 1 45 2 49 1 370 1 151 1 
0 1 81 2 82 3 3 8 153 1 22 2 352 2 237 1 176 2 88 2 113 1 61 2 89 2 224 1 225 1 354 1 204 4 158 1 157 1 160 1 120 2 207 1 227 1 360 2 245 1 186 2 265 1 165 1 290 1 100 1 189 8 248 1 72 2 210 1 341 1 103 7 42 1 77 2 252 1 
81 1 22 1 352 1 237 1 60 1 140 1 113 1 61 1 89 3 224 1 201 1 354 2 355 1 204 2 357 1 95 1 96 1 185 1 360 1 245 1 186 1 248 1 366 1 73 1 43 1 44 1 347 1 252 1 50 1 
81 1 22 1 257 1 352 1 86 1 60 1 61 1 328 1 89 6 354 3 355 2 204 2 358 1 206 2 68 1 360 1 227 1 245 3 186 1 366 1 73 1 316 1 43 2 44 1 347 1 197 1 
81 1 96 1 184 1 22 1 245 3 360 1 352 1 186 1 313 1 366 1 124 1 60 4 140 1 89 4 61 1 367 1 126 1 354 1 347 4 357 1 204 2 
81 1 82 1 3 1 22 1 24 1 258 1 352 1 301 1 54 1 237 2 176 1 177 1 88 1 140 1 113 1 61 1 89 2 224 1 354 1 204 2 333 1 158 1 206 1 243 1 207 1 360 1 245 1 186 1 187 1 165 1 189 1 248 1 72 1 168 1 73 1 103 1 77 1 252 2 
3 1 237 3 113 1 60 4 328 1 61 3 204 6 158 1 206 2 68 1 207 1 245 7 165 1 248 1 167 1 72 1 292 2 168 2 73 4 77 2 252 3 347 4 348 1 295 1 81 3 82 2 351 1 22 3 24 1 257 1 352 3 258 2 86 1 301 2 176 2 88 2 177 2 140 1 89 14 224 1 354 7 355 3 358 1 357 1 143 2 95 1 96 1 144 2 360 3 186 3 189 1 366 2 103 1 316 1 43 3 44 2 
81 1 96 1 22 1 227 1 360 1 245 2 352 1 8 1 186 1 198 1 366 1 60 1 73 1 89 2 61 1 43 1 347 1 204 2 
81 1 95 1 22 1 23 1 227 1 360 1 352 1 186 1 60 1 73 1 89 2 61 1 354 2 43 1 355 1 44 1 347 1 204 2 
95 1 81 1 96 1 22 1 227 1 360 1 245 2 352 1 8 1 186 1 366 1 60 2 73 2 89 4 61 1 354 2 43 2 355 1 44 1 347 2 204 2 357 1 
81 1 96 1 22 1 360 1 245 2 352 1 8 1 186 1 290 1 198 1 366 1 60 1 73 1 89 2 61 1 43 1 347 1 204 2 
81 1 95 1 22 1 23 1 360 1 352 1 186 1 290 1 60 1 73 1 89 2 61 1 354 2 43 1 355 1 44 1 347 1 204 2 
95 1 81 1 96 1 22 1 360 1 245 2 352 1 8 1 186 1 290 1 366 1 60 2 73 2 89 4 61 1 354 2 43 2 355 1 44 1 347 2 204 2 357 1 
95 1 81 1 96 1 22 1 360 1 245 2 352 1 8 1 186 1 366 1 60 2 73 2 61 1 89 4 354 2 43 2 355 1 44 1 347 2 204 2 357 1 
81 1 82 1 3 1 22 1 258 1 352 1 301 1 237 1 176 1 177 1 88 1 89 2 61 1 354 1 204 2 158 1 143 1 206 1 207 1 245 1 360 1 186 1 189 1 72 1 168 1 103 1 77 1 252 1 
81 1 82 1 3 1 22 1 258 1 352 1 138 1 237 1 176 1 177 1 88 1 89 2 61 1 354 1 204 2 158 1 206 1 207 1 245 1 360 1 186 1 189 1 72 1 213 1 343 1 103 1 77 1 252 1 
95 1 81 1 96 1 22 1 360 1 245 2 352 1 8 1 186 1 366 1 60 2 140 1 73 2 89 4 61 1 354 2 43 2 355 1 44 1 347 2 204 2 357 1 
81 1 82 1 3 1 22 1 258 1 352 1 8 1 301 1 237 1 176 1 177 1 88 1 60 2 89 4 61 1 354 2 355 1 204 2 357 1 95 1 143 1 96 1 144 1 245 2 360 1 186 1 189 1 366 1 168 1 341 1 73 2 103 1 43 2 77 1 44 1 347 2 252 1 
81 1 22 1 84 1 352 1 8 1 237 1 140 1 113 1 60 1 61 1 89 3 224 1 354 1 201 1 204 2 357 1 95 1 96 1 185 1 360 1 245 2 186 1 248 1 366 1 73 1 43 1 44 1 252 1 347 1 
81 2 96 1 184 1 22 2 245 4 360 2 352 2 123 1 313 1 366 1 280 1 89 6 345 1 126 1 90 1 354 2 307 1 271 1 273 1 196 1 357 1 204 4 
81 3 22 3 352 3 8 2 280 4 89 26 90 1 354 12 307 1 180 1 355 2 29 1 330 1 204 6 357 3 181 1 12 2 182 1 95 2 96 3 360 3 245 14 312 1 337 1 123 2 313 2 366 3 270 1 126 2 43 4 271 2 44 2 196 2 273 1 
81 2 96 1 184 1 22 2 245 4 360 2 352 2 123 1 313 1 366 1 280 1 89 6 345 1 126 1 90 1 354 2 307 1 271 1 273 1 196 1 357 1 204 4 
81 2 96 1 184 1 22 2 245 4 360 2 352 2 123 1 313 1 366 1 280 1 89 6 345 1 126 1 90 1 354 2 307 1 271 1 273 1 196 1 357 1 204 4 
81 1 22 1 257 1 352 1 86 1 280 1 328 1 89 11 90 1 307 1 354 4 355 1 358 1 204 2 357 1 96 1 184 1 68 1 360 1 245 7 123 1 313 1 366 2 126 1 43 1 271 1 316 1 44 1 196 1 273 1 
285 1 326 1 242 1 255 1 344 1 14 1 6 1 92 1 27 1 222 1 
214 1 289 1 
326 1 242 1 14 1 6 1 294 1 356 1 55 1 27 1 222 1 
334 1 80 2 285 1 349 1 242 1 98 1 14 1 6 1 71 1 303 1 222 1 27 1 56 1 326 1 344 1 329 1 272 1 92 1 
334 1 80 2 285 1 349 1 242 1 98 1 14 1 6 1 71 1 303 1 222 1 27 1 56 1 326 1 344 1 329 1 272 1 92 1 
334 1 80 2 285 1 349 1 242 1 98 1 14 1 6 1 71 1 303 1 222 1 27 1 56 1 326 1 344 1 329 1 272 1 92 1 
76 1 361 1 226 1 
76 1 361 1 226 1 
133 1 262 1 
133 1 361 1 262 1 
62 1 53 1 
80 1 349 1 320 1 6 1 53 1 237 2 303 1 27 1 222 1 56 1 326 1 113 2 224 2 62 1 121 1 183 1 206 1 242 1 14 1 163 1 289 1 248 2 268 1 214 1 272 1 252 2 20 1 
76 1 226 1 
133 1 361 1 262 1 
81 1 82 1 3 2 22 1 134 1 174 1 352 1 237 2 176 1 88 1 140 1 61 1 89 2 354 1 204 2 158 1 160 1 120 2 207 1 360 1 245 1 186 1 164 1 100 1 189 2 229 1 291 1 248 2 103 2 77 1 252 2 
82 1 3 1 153 1 276 1 70 1 189 1 176 1 72 1 88 1 170 1 114 1 103 1 77 1 157 1 
106 1 3 1 15 1 322 1 259 1 189 1 88 1 210 1 191 1 170 1 114 1 103 1 40 1 77 1 
106 1 3 2 15 1 322 1 259 1 189 2 88 1 210 1 341 1 191 1 170 1 114 1 103 2 40 1 77 1 
106 1 88 1 191 1 210 1 148 1 114 1 3 1 15 1 40 1 103 1 77 1 259 1 189 1 
319 1 
284 1 254 1 209 1 71 1 249 1 368 1 169 1 49 1 79 1 151 1 
95 2 96 2 263 5 101 5 302 10 278 2 71 5 167 1 366 2 249 5 59 1 127 5 44 2 357 2 151 5 
56 1 169 1 146 1 234 1 71 1 303 1 
82 1 3 4 153 1 136 2 221 1 303 3 56 3 176 1 88 1 240 2 157 1 65 1 13 2 146 2 17 1 209 2 189 4 250 1 249 2 72 2 39 1 368 2 103 4 234 4 77 1 216 1 49 1 79 2 151 2 
249 1 284 1 254 1 169 1 197 1 151 1 71 1 
21 1 311 1 146 1 209 1 302 1 303 1 71 2 56 1 249 1 169 1 368 1 234 1 127 1 215 1 49 1 79 1 151 1 
235 2 3 3 278 2 56 5 59 2 115 2 283 2 240 2 159 1 284 1 13 1 288 2 338 2 209 4 71 8 167 2 249 8 72 1 341 1 169 2 127 6 77 3 128 1 79 4 82 10 254 1 258 3 135 2 136 1 221 1 302 12 304 1 303 5 176 3 88 4 357 2 95 2 96 2 263 6 34 1 146 3 99 3 228 2 189 3 101 6 366 2 368 4 103 3 234 5 150 2 149 2 44 2 49 4 151 9 
217 1 302 6 303 1 278 2 56 1 59 1 29 1 330 1 357 2 240 1 13 1 182 1 95 2 96 2 263 5 146 1 312 1 337 1 209 2 101 5 123 1 313 1 71 5 249 5 366 2 211 1 368 2 169 2 126 1 234 1 127 3 44 2 49 2 151 8 79 2 
172 1 237 1 86 1 278 2 303 1 56 1 59 1 113 1 328 1 353 1 224 1 141 1 201 1 332 1 209 1 248 1 366 2 249 2 18 1 368 1 195 1 316 1 44 1 252 1 47 1 49 1 79 1 151 2 
81 1 82 1 3 1 22 1 352 1 258 1 237 3 301 1 176 1 88 1 177 1 113 2 89 1 61 1 224 2 354 1 201 2 204 2 158 1 332 1 143 1 206 1 360 1 186 1 189 1 248 2 72 1 168 1 19 1 103 1 77 1 252 3 
13 1 263 2 209 1 302 4 101 2 71 4 249 2 368 1 169 2 127 2 358 1 49 1 240 1 79 1 151 1 
285 1 326 1 14 1 53 1 137 1 
326 1 14 1 111 1 
326 1 14 1 111 1 
326 1 14 1 111 1 
326 1 14 1 315 1 
326 1 14 1 315 1 
326 1 14 1 315 1 
326 1 14 1 
27 1 222 1 
81 1 22 1 360 1 245 5 352 1 8 2 86 2 366 2 89 10 328 1 307 1 195 1 354 5 316 2 43 5 355 3 44 2 204 2 
81 1 96 1 22 1 360 1 245 2 352 1 8 1 366 1 89 2 307 1 43 1 204 2 
95 1 81 1 96 1 22 1 360 1 245 2 352 1 8 1 366 1 89 4 354 2 307 1 43 2 355 1 44 1 204 2 357 1 
12 1 81 3 22 3 360 3 245 1 352 3 8 1 86 1 324 1 89 3 345 1 354 2 307 1 316 1 43 2 355 1 204 6 
81 4 22 4 257 1 352 4 8 2 86 1 223 1 328 1 89 24 354 11 307 1 355 3 308 1 358 1 204 8 357 3 12 1 95 2 96 3 184 1 68 1 360 4 245 13 122 1 123 1 313 3 190 1 366 4 345 1 126 3 316 1 43 5 44 3 
12 1 81 2 22 2 68 1 245 4 360 2 257 1 352 2 8 1 86 1 366 1 328 1 89 8 354 4 43 3 316 1 355 2 44 1 358 1 204 4 
68 1 257 1 245 3 86 1 366 1 328 1 89 6 354 3 316 1 43 2 355 2 44 1 358 1 197 1 
95 1 81 1 96 1 22 1 360 1 245 2 352 1 8 1 366 1 223 1 89 4 354 2 43 2 355 1 44 1 204 2 357 1 
366 1 96 1 184 1 89 4 126 1 245 3 354 1 357 1 123 1 313 1 
366 1 96 1 124 1 184 1 89 4 126 1 245 3 354 1 357 1 313 1 
89 1 354 1 313 1 
89 1 126 1 245 1 
81 1 95 1 96 1 22 1 360 1 245 3 352 1 8 1 167 1 366 1 223 1 89 6 354 3 43 3 355 2 44 1 204 2 357 1 
81 1 22 1 352 1 8 1 89 12 354 6 307 1 355 1 29 1 330 1 204 2 357 2 182 1 95 2 96 2 360 1 245 6 312 1 337 1 123 1 313 1 366 2 126 1 43 2 44 2 
245 3 8 1 86 1 366 1 328 1 89 6 354 3 316 1 43 2 355 1 44 1 
12 1 81 1 22 1 68 1 245 1 257 1 360 1 352 1 8 1 86 1 324 1 89 3 354 2 43 2 316 1 355 1 204 2 
81 1 22 1 257 1 352 1 86 1 89 8 328 1 354 4 307 1 355 2 29 1 358 1 204 2 68 1 360 1 245 4 123 1 313 1 366 1 126 1 316 1 43 2 44 1 
81 2 96 1 184 1 22 2 245 3 360 2 352 2 123 1 313 1 366 1 223 1 89 4 126 1 307 1 354 1 29 1 357 1 204 4 
81 3 22 3 257 1 352 3 8 1 86 1 223 1 328 1 89 19 354 10 307 1 355 3 29 1 330 1 358 1 204 6 357 2 12 1 182 1 95 2 96 2 68 1 360 3 245 9 312 1 337 1 123 1 313 1 366 3 126 1 316 1 43 4 44 3 
81 3 22 3 257 1 352 3 8 2 86 1 223 1 328 1 89 17 354 7 307 1 355 3 29 1 330 1 358 1 204 6 357 2 12 1 182 1 95 1 96 2 68 1 360 3 245 10 312 1 337 1 123 1 313 1 366 3 126 1 316 1 43 5 44 2 
81 1 22 1 257 1 352 1 86 1 89 8 328 1 354 4 307 1 355 2 29 1 358 1 204 2 68 1 360 1 245 4 123 1 313 1 366 1 126 1 316 1 43 2 44 1 
81 1 22 1 352 1 8 1 89 12 354 6 307 1 355 1 29 1 330 1 204 2 357 2 182 1 95 2 96 2 360 1 245 6 312 1 337 1 123 1 313 1 366 2 126 1 43 2 44 2 
81 4 22 4 257 1 352 4 8 2 86 1 223 1 328 1 89 18 354 8 307 1 355 3 29 1 330 1 358 1 204 8 357 2 12 2 182 1 95 1 96 2 68 1 360 4 245 10 312 1 337 1 123 1 313 1 366 3 126 1 316 1 43 5 44 2 
81 4 22 4 352 4 8 3 89 16 354 7 307 1 355 3 29 1 330 1 204 8 357 3 12 2 182 1 95 2 96 3 360 4 245 9 312 1 337 1 123 1 313 1 366 3 345 1 126 1 43 6 44 2 
68 1 257 2 245 3 8 3 86 3 366 1 89 7 328 1 354 4 316 3 43 6 355 3 44 1 
81 4 22 4 257 1 352 4 8 1 86 1 328 1 89 18 354 8 307 1 355 3 29 1 330 1 358 1 204 8 357 2 12 2 182 1 95 1 96 2 68 1 360 4 245 10 312 1 337 1 123 1 313 1 366 3 345 1 126 1 316 1 43 4 44 2 
206 1 239 1 78 1 237 1 252 1 64 1 248 1 
253 1 66 1 206 1 237 1 220 1 266 1 248 1 230 1 78 1 239 1 252 1 64 1 
152 1 82 1 3 4 153 1 300 1 189 4 72 1 176 1 88 1 341 1 103 4 77 1 157 1 
82 1 3 2 4 1 258 1 136 1 189 2 156 1 176 1 179 1 88 2 103 2 282 1 77 1 205 1 
72 1 88 1 191 1 3 1 103 1 77 1 259 1 189 1 
160 1 176 1 88 1 210 1 341 1 82 1 3 2 103 2 134 1 77 1 189 2 
160 1 82 3 153 1 3 5 300 1 136 1 265 1 189 5 72 1 176 2 341 1 88 2 103 4 225 1 77 2 157 1 
160 1 131 1 82 3 153 1 3 5 300 1 136 1 265 1 189 5 72 1 176 2 341 1 88 2 103 4 77 2 157 1 
176 1 72 1 88 1 82 1 153 1 3 1 103 1 77 1 197 1 157 1 189 1 
82 1 206 1 3 1 258 1 237 2 301 1 165 1 189 1 248 1 176 1 72 1 177 1 88 1 113 1 224 1 103 1 77 1 252 2 
82 3 206 1 3 1 135 1 258 2 136 1 237 2 301 1 165 1 189 1 248 2 176 2 18 1 177 1 88 1 342 1 113 2 224 1 103 1 149 1 77 1 261 1 252 2 
152 1 82 3 206 1 3 2 135 1 258 2 136 1 237 2 138 1 165 1 189 2 248 2 176 2 18 1 177 1 88 1 342 1 113 2 224 1 103 2 149 1 77 1 261 1 252 2 
152 1 82 4 3 3 258 1 135 1 110 1 338 1 136 1 99 1 189 3 71 1 303 2 56 2 72 1 176 1 88 1 327 1 169 1 103 3 234 1 149 1 115 1 77 1 
152 1 235 1 82 4 3 3 258 1 135 1 338 1 136 1 99 1 189 3 71 1 303 2 56 2 72 1 176 1 88 1 169 1 103 3 234 1 149 1 115 1 77 1 
88 1 3 1 103 1 42 1 77 1 189 1 
160 1 335 1 120 1 0 1 82 3 3 7 258 1 265 1 189 7 72 2 176 2 210 1 341 1 179 1 88 3 103 6 225 1 282 1 42 1 128 1 77 2 
81 2 82 1 3 1 22 2 257 1 258 1 352 2 86 1 237 2 301 1 176 1 177 1 88 1 60 1 140 1 113 1 89 6 328 1 61 2 224 1 354 3 355 2 358 1 204 4 143 1 144 1 206 2 68 1 245 3 360 2 186 2 165 1 189 1 291 1 248 1 366 1 292 1 341 1 168 1 73 1 103 1 43 2 316 1 77 1 44 1 347 1 252 2 
235 1 82 2 254 1 3 1 221 1 303 3 56 3 115 1 283 1 284 1 288 1 146 1 163 1 99 1 338 1 209 2 189 1 71 1 249 1 72 1 169 1 368 2 103 1 234 2 150 1 49 2 151 1 79 2 
82 2 3 2 258 1 189 2 176 1 341 1 88 2 103 2 115 1 42 1 128 1 77 1 159 1 
82 1 206 1 3 1 258 1 237 2 138 1 165 1 189 1 248 1 176 1 72 1 177 1 88 1 113 1 224 1 103 1 77 1 252 2 
335 1 82 1 3 1 258 1 136 1 189 1 176 1 179 1 88 2 103 1 282 1 128 1 77 1 
286 1 287 1 206 1 102 1 10 1 
31 1 286 2 287 2 206 1 107 1 163 1 338 1 166 1 71 1 303 2 56 2 18 1 178 1 342 1 10 1 102 2 169 1 260 1 261 1 
286 1 174 1 237 1 164 1 229 1 248 1 102 1 10 1 252 1 
178 1 10 1 166 1 
350 1 192 1 108 1 41 1 7 1 331 1 63 1 364 1 
350 1 108 3 25 1 7 4 364 2 199 2 192 4 314 1 193 1 91 1 331 2 63 1 117 1 118 1 
350 1 108 1 7 2 364 1 155 1 199 1 58 1 192 2 41 1 346 1 331 1 63 1 
350 1 108 1 336 1 7 3 364 1 192 3 193 1 314 2 41 1 91 2 63 1 331 1 
1 2 132 1 108 2 142 1 
350 1 192 1 41 1 7 1 203 1 63 1 
199 1 350 1 192 2 108 1 41 1 246 1 7 2 331 1 63 1 364 1 
171 1 
350 1 192 1 108 1 41 1 7 1 331 1 63 1 364 1 
108 1 331 1 197 1 364 1 
350 1 192 1 108 1 7 1 331 1 63 1 364 1 
87 1 232 1 192 1 
350 1 108 1 7 3 364 1 192 3 193 1 314 2 41 1 91 1 63 1 331 1 130 1 
199 1 350 1 192 2 108 1 7 2 331 1 247 1 63 1 364 1 
350 1 125 1 192 1 108 1 162 1 41 1 25 1 7 1 317 1 116 1 63 1 
350 1 192 1 108 1 41 1 7 1 331 1 63 1 
350 1 192 1 41 1 7 1 331 2 63 1 364 1 
350 2 108 1 244 1 7 2 340 1 192 2 41 1 105 1 331 1 63 2 
350 1 108 2 25 1 7 3 246 1 364 1 199 2 192 3 306 1 41 1 331 1 63 1 118 1 
350 1 192 1 85 1 41 1 7 1 63 1 259 1 
350 2 219 1 108 2 25 1 7 4 247 1 364 1 199 2 192 4 41 1 331 1 63 2 118 1 
199 1 350 1 192 3 314 1 108 1 41 1 246 1 7 3 331 1 63 1 364 1 
108 1 25 1 117 1 118 1 
108 1 331 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (38,110,140) (38,110,140) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 124 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) (0,72) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) (0,72) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (38,110,140) (38,110,140) 145 166 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (38,110,140) (38,110,140) 145 166 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (38,110,140) (38,110,140) 145 166 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (38,110,140) (38,110,140) 145 166 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (38,110,140) (38,110,140) 145 166 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (38,110,140) (38,110,140) 145 166 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (38,110,140) (38,110,140) 145 166 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (38,110,140) (38,110,140) 145 166 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (38,110,140) (38,110,140) 145 166 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (38,110,140) (38,110,140) 145 166 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (38,110,140) (38,110,140) 145 166 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (38,110,140) (38,110,140) 145 166 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 286 89 55 285 229 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 286 89 55 285 229 244 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 286 89 55 285 229 244 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 286 89 55 285 229 244 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 264 55 285 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 286 89 55 285 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 286 89 55 285 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 286 89 55 285 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 286 89 55 285 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 286 89 55 285 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 286 89 55 285 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 286 89 55 285 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (49,107,133,318) (49,107,133,318) (49,107,133,318) 245 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4814 | stmt -> ;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 245 1 
255 1 216 1 68 1 
135 2 216 1 115 1 
270 2 221 1 142 2 1 2 279 2 9 2 43 1 171 2 
221 1 1 3 179 1 9 2 43 1 258 2 186 1 185 1 138 1 82 1 83 2 48 2 87 1 142 2 192 1 227 1 300 1 93 1 265 2 101 1 302 1 270 3 308 1 201 2 200 1 273 1 158 1 203 1 164 1 65 1 277 1 120 1 31 1 279 2 33 1 171 2 174 1 
270 1 142 1 1 1 279 1 9 1 43 1 171 1 242 1 27 1 316 1 
38 1 140 1 
270 1 38 1 1 1 202 2 9 1 182 1 110 2 13 1 316 1 142 1 279 1 171 1 216 1 68 1 100 1 
202 1 110 1 172 1 293 1 215 1 
202 2 110 2 172 1 216 1 68 1 293 1 295 1 149 1 
202 1 110 1 293 1 
270 1 142 1 1 1 279 1 202 1 9 1 43 1 284 1 171 1 110 1 172 1 242 1 27 1 316 1 
216 1 
272 1 202 2 110 2 172 1 216 1 68 1 293 1 295 1 
291 1 202 5 7 2 8 1 110 5 293 2 295 1 62 1 297 1 188 1 210 2 212 1 281 1 263 2 172 2 230 1 216 1 68 1 21 1 
270 2 308 1 201 1 1 2 9 1 158 1 203 1 258 1 138 1 87 1 226 1 192 1 142 1 279 1 92 1 193 1 101 1 265 1 174 1 302 1 
221 1 255 1 
270 2 221 2 1 2 9 2 10 1 262 1 142 1 279 1 171 1 
226 1 276 1 122 1 
270 1 221 1 201 1 308 1 1 1 158 1 203 1 258 1 138 1 85 1 87 1 192 1 265 1 101 1 174 1 302 1 
270 3 221 1 142 3 1 3 279 3 92 1 9 3 171 1 
270 1 142 1 1 1 279 1 9 1 27 1 316 1 
270 1 262 1 142 1 1 1 279 1 9 1 10 1 171 1 316 1 
221 1 38 1 1 4 223 1 10 1 9 3 43 1 182 1 258 1 186 1 13 1 138 1 83 2 48 1 87 1 192 1 142 3 300 1 93 1 92 1 193 1 101 1 100 1 265 1 302 1 270 4 308 1 200 1 201 1 202 1 273 1 158 1 203 1 110 1 164 1 316 1 65 1 120 1 31 1 319 1 279 3 33 1 171 2 174 1 
270 2 221 1 142 1 1 2 279 1 9 2 92 1 204 1 69 1 
270 3 251 1 38 1 1 3 202 1 10 1 9 3 110 1 182 1 13 1 316 1 142 3 279 3 319 1 92 2 171 1 193 1 216 1 100 1 
270 2 1 2 10 1 9 2 142 2 226 1 276 1 279 2 92 1 171 1 
270 1 221 1 201 1 308 1 1 1 203 1 158 1 258 1 138 1 87 1 192 1 265 1 101 1 174 1 302 1 
270 1 221 1 201 1 308 1 1 1 132 1 203 1 158 1 258 1 138 1 192 1 16 1 265 1 101 1 302 1 
305 1 24 1 154 1 109 1 273 1 136 1 186 1 83 2 48 2 164 1 226 1 276 1 65 2 31 1 52 1 121 1 122 1 93 1 33 1 
270 1 142 1 1 1 289 1 279 1 9 1 100 1 316 1 
270 5 221 1 1 5 9 5 10 1 204 1 313 1 142 4 279 4 92 2 171 1 126 1 193 1 69 1 
270 2 142 2 289 1 1 2 279 2 9 2 27 1 316 1 
66 1 190 1 
66 1 190 1 
22 1 292 1 
22 1 292 1 
22 1 292 1 
66 1 206 1 190 1 
66 1 159 1 190 1 
22 1 292 1 15 1 66 2 315 1 190 2 
66 1 206 1 190 1 
66 1 206 1 190 1 
106 1 66 1 190 1 
106 1 66 1 190 1 
106 1 66 1 190 1 
73 1 2 1 237 2 310 1 6 1 202 2 312 2 110 2 299 2 190 2 86 2 64 1 14 1 15 1 247 2 66 2 216 1 98 1 266 3 
221 1 252 1 1 2 9 2 137 1 86 1 190 1 189 1 142 2 14 1 54 1 266 1 267 1 103 1 270 2 237 1 202 1 312 1 110 1 159 1 163 1 279 2 247 1 66 1 
261 1 51 1 169 1 
261 1 117 1 51 1 
261 3 117 1 180 1 282 1 169 2 141 1 
261 2 117 1 180 1 282 1 169 1 128 1 
261 2 117 1 282 1 180 2 169 1 
309 1 202 4 110 4 293 1 295 1 246 1 146 1 124 1 172 3 67 1 216 1 68 1 
1 1 9 1 43 1 293 1 142 1 148 1 57 1 270 1 202 2 110 2 242 1 27 1 316 1 279 1 284 1 172 2 171 1 215 1 68 1 216 1 249 1 
7 1 78 2 8 1 135 4 297 2 47 2 189 1 89 1 146 1 263 1 230 3 305 1 23 1 309 1 202 3 110 3 115 2 243 1 121 1 246 1 210 1 124 1 172 2 68 1 216 3 286 1 
78 4 7 1 8 1 135 7 297 4 47 4 189 2 89 2 146 1 263 1 230 5 19 1 305 2 23 2 309 2 202 4 110 4 115 3 243 1 121 2 280 1 210 1 246 1 124 1 172 3 68 1 216 4 287 1 286 2 
255 1 168 1 158 1 
158 1 314 1 
25 1 
158 1 203 1 
308 1 168 2 123 1 158 3 203 1 114 1 
308 1 158 1 203 1 
158 1 116 1 
23 1 177 1 42 1 154 2 225 1 113 1 136 3 11 1 48 7 274 1 65 3 144 1 118 1 121 1 227 4 173 2 233 1 
23 1 177 1 42 1 154 2 225 1 113 1 136 3 11 1 48 7 274 1 65 3 144 1 118 1 121 1 227 4 173 2 233 1 
23 1 177 1 42 1 154 2 225 1 113 1 136 3 11 1 48 7 274 1 65 3 50 1 144 1 118 1 121 1 227 4 173 2 233 1 
177 2 3 3 253 1 40 1 42 1 77 1 225 1 11 1 136 10 186 1 83 2 48 31 89 3 144 2 227 16 93 1 233 2 305 3 23 4 108 1 154 5 273 1 111 4 113 5 28 1 274 2 65 15 118 1 278 1 121 4 33 1 173 3 35 1 286 3 
177 2 42 2 225 1 11 1 136 4 186 1 83 2 48 14 144 1 227 8 93 1 233 1 269 1 23 3 154 3 273 1 113 1 240 1 274 2 65 6 121 3 33 1 173 2 70 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 72 1 
0 1 74 1 75 1 5 1 133 2 44 1 80 1 258 1 296 1 141 1 261 2 192 1 51 1 53 1 96 1 265 1 20 1 302 1 201 1 107 2 205 1 207 1 117 1 169 1 220 2 
49 1 318 1 107 1 72 1 
49 1 318 1 107 1 245 1 
131 1 
38 1 7 1 291 1 181 1 293 2 258 2 295 1 45 1 138 2 297 1 140 1 192 1 145 1 263 1 99 1 230 1 265 2 302 1 201 2 202 2 158 1 110 2 203 1 243 1 210 1 166 1 32 1 170 1 125 1 214 1 
38 1 145 1 166 1 202 1 181 1 110 1 214 1 140 1 
38 1 145 1 166 1 202 1 181 1 110 1 214 1 140 1 
38 1 145 1 166 1 202 1 181 1 110 1 214 1 140 1 
38 1 145 1 166 1 272 1 202 2 181 1 110 2 214 1 293 1 295 1 140 1 
38 1 145 1 210 1 166 1 7 1 291 1 202 1 263 1 181 1 110 1 214 1 140 1 
38 1 145 1 166 1 202 1 181 1 110 1 214 1 140 1 
38 1 145 1 166 1 202 1 181 1 110 1 214 1 140 1 
38 1 145 1 166 1 202 1 181 1 110 1 214 1 140 1 
38 1 145 1 166 1 202 1 181 1 110 1 214 1 140 1 
38 1 145 1 166 1 202 1 181 1 110 1 214 1 140 1 
38 1 145 1 210 1 166 1 7 1 291 1 202 1 263 1 181 1 110 1 214 1 140 1 
221 2 177 1 255 1 42 1 225 1 11 1 136 2 186 1 83 2 48 6 226 1 227 3 93 1 23 1 109 1 154 2 273 1 164 1 274 1 276 1 65 3 31 1 121 1 122 1 33 1 173 1 
221 1 3 3 136 2 186 2 82 1 83 4 48 15 226 12 89 3 227 10 93 2 232 1 234 1 23 3 108 2 273 2 111 4 113 2 63 1 164 1 65 5 276 3 120 1 31 2 122 12 33 2 35 1 71 1 218 1 286 3 
221 1 1 2 9 1 258 1 138 1 186 1 82 1 83 2 85 1 48 2 87 1 192 1 142 1 227 1 93 1 92 1 193 1 101 1 265 1 18 1 302 1 270 2 308 1 201 1 273 1 158 1 203 1 26 1 164 1 276 1 65 1 31 1 279 1 120 1 33 1 213 1 174 1 218 1 
1 2 9 1 258 1 186 2 83 4 87 1 192 1 89 1 92 1 93 2 193 1 265 1 101 1 270 2 201 1 200 1 23 1 273 2 203 1 113 2 276 2 120 1 279 1 31 2 122 2 33 2 218 1 286 1 130 1 136 3 46 1 138 1 139 1 48 5 142 1 226 2 227 3 302 1 308 1 154 1 158 1 239 1 164 2 65 2 322 1 174 1 
176 1 1 1 41 1 179 2 9 1 183 1 258 7 45 1 138 2 186 2 296 1 82 1 83 4 48 2 142 1 192 2 227 1 92 1 93 2 265 8 58 1 268 1 302 2 270 1 201 8 109 1 311 1 273 2 158 3 203 2 164 2 65 1 279 1 31 2 120 1 33 2 321 1 125 1 324 1 
1 1 10 1 9 1 136 1 186 1 83 2 48 3 226 1 142 1 89 1 227 1 93 1 304 1 270 1 305 1 23 1 154 1 273 1 164 1 276 1 65 2 31 1 279 1 121 1 122 1 33 1 171 1 218 1 286 1 
23 1 224 1 109 1 273 1 136 1 113 1 186 1 83 2 48 2 164 1 226 1 276 1 31 1 227 2 122 1 93 1 33 1 286 1 
305 1 24 1 154 1 109 1 273 1 136 1 186 1 83 2 48 2 164 1 226 1 276 1 65 2 31 1 121 1 122 1 93 1 33 1 
136 2 186 1 83 2 48 4 226 2 89 1 227 2 93 1 305 1 23 1 109 1 154 1 273 1 113 1 164 1 276 2 65 2 31 1 121 1 122 2 33 1 286 1 
176 1 23 1 224 1 273 1 136 1 113 1 186 1 83 2 48 2 164 1 226 1 276 1 31 1 227 2 122 1 93 1 33 1 286 1 
305 1 176 1 24 1 154 1 273 1 136 1 186 1 83 2 48 2 164 1 226 1 276 1 65 2 31 1 121 1 122 1 93 1 33 1 
176 1 23 1 273 1 136 1 113 1 186 1 83 2 48 2 164 1 226 1 276 1 89 1 31 1 227 2 122 1 93 1 33 1 286 1 
23 1 273 1 136 1 113 1 186 1 83 2 164 1 48 2 226 1 276 1 89 1 31 1 227 2 122 1 93 1 33 1 286 1 
221 1 1 1 258 1 138 1 186 1 82 1 83 2 48 2 87 1 192 1 227 1 93 1 101 1 265 1 302 1 270 1 308 1 200 1 201 1 273 1 203 1 158 1 164 1 65 1 31 1 120 1 33 1 174 1 
221 1 1 1 132 1 258 1 138 1 186 1 82 1 83 2 48 2 192 1 227 1 93 1 16 1 101 1 265 1 302 1 270 1 308 1 201 1 273 1 203 1 158 1 164 1 65 1 31 1 120 1 33 1 248 1 
23 1 273 1 136 1 113 1 186 1 83 2 48 2 164 1 226 1 276 1 89 1 31 1 227 2 122 1 93 1 33 1 218 1 286 1 
1 1 136 1 258 1 186 1 83 2 48 2 87 1 226 1 192 1 89 1 227 2 93 1 101 1 265 1 302 1 270 1 308 1 200 1 201 1 23 1 273 1 203 1 158 1 113 1 164 1 276 1 31 1 122 1 33 1 322 1 174 1 286 1 324 1 
1 1 10 1 9 1 136 1 186 1 83 2 48 2 142 1 226 1 89 1 227 2 93 1 270 1 104 1 23 1 273 1 113 1 164 1 276 1 31 1 279 1 122 1 33 1 171 1 218 1 286 1 
4 1 3 1 136 6 186 2 83 4 48 19 89 3 227 9 93 2 229 1 195 2 236 1 305 3 152 1 23 3 60 1 154 3 108 1 273 2 111 2 240 1 113 3 241 2 244 1 65 10 121 3 33 2 320 1 35 1 286 3 
3 2 77 1 136 1 186 2 83 4 48 17 89 2 227 9 55 1 93 2 264 1 229 2 305 1 152 1 23 2 154 1 273 2 111 2 240 1 241 2 244 1 65 8 121 1 33 2 167 1 320 2 35 2 285 1 323 1 286 2 
3 3 77 1 136 4 186 3 83 6 48 30 89 4 227 15 55 1 93 3 264 1 229 1 195 1 236 1 305 3 152 1 23 4 60 1 154 2 108 1 273 3 111 4 240 1 113 2 241 3 244 1 65 15 121 3 167 1 33 3 320 2 35 3 323 1 285 1 286 4 127 1 
3 3 77 1 136 5 186 3 83 6 48 30 89 4 227 15 55 1 93 3 264 1 229 1 195 1 236 1 305 3 152 1 23 4 60 1 154 3 108 1 273 3 111 4 240 1 113 2 241 3 244 1 65 15 121 3 167 1 33 3 320 2 35 3 323 1 285 1 286 4 127 1 
177 1 3 4 42 1 225 1 11 1 136 10 186 1 83 2 48 41 89 6 227 22 55 1 93 1 264 1 229 1 234 2 305 5 152 1 23 7 154 6 108 2 273 1 111 4 240 1 113 4 241 2 244 1 274 1 65 19 121 6 167 1 33 1 320 1 173 1 35 2 323 1 285 1 286 6 
151 1 73 1 237 1 310 1 312 1 15 1 247 1 66 1 86 1 190 1 
252 1 159 1 
237 1 254 1 156 1 312 1 247 1 66 1 187 1 86 1 190 1 
73 1 2 1 237 1 310 1 202 1 312 1 110 1 299 1 190 1 86 1 64 1 14 1 15 1 247 1 66 1 216 1 98 1 266 2 
73 1 2 1 237 1 310 1 202 1 312 1 110 1 299 1 190 1 86 1 64 1 14 1 15 1 247 1 66 1 216 1 98 1 266 2 
73 1 2 1 237 1 310 1 202 1 312 1 110 1 299 1 190 1 86 1 64 1 14 1 15 1 247 1 66 1 216 1 98 1 266 2 
39 1 315 1 206 1 
39 1 315 1 206 1 
106 1 250 1 
106 1 315 1 250 1 
54 1 103 1 
221 1 252 1 1 2 9 2 137 1 299 1 86 1 190 1 189 1 142 2 54 1 95 1 266 1 267 1 103 1 270 2 237 1 202 1 312 1 110 1 159 1 163 1 64 1 279 2 247 1 172 1 66 1 
39 1 206 1 
106 1 315 1 250 1 
1 2 41 1 179 2 9 2 79 1 258 2 186 1 82 1 83 2 48 2 192 1 227 1 93 1 194 1 17 1 265 2 58 1 196 1 302 1 270 2 201 2 153 1 273 1 158 1 203 1 164 1 65 1 31 1 120 1 33 1 218 1 
201 2 75 1 44 1 258 2 296 1 298 1 141 1 261 2 117 1 192 1 51 1 94 1 169 1 265 2 20 1 302 1 219 1 324 1 102 1 
201 1 59 1 75 1 44 1 258 1 296 1 298 1 141 1 261 2 117 1 192 1 51 1 169 1 265 1 20 1 302 1 102 1 
201 1 75 1 158 1 203 1 258 1 45 1 138 1 192 1 317 1 125 1 265 1 302 1 219 1 235 1 
201 1 75 1 44 1 258 1 296 1 298 1 141 1 261 2 117 1 192 1 51 1 94 1 169 1 265 1 20 1 302 1 219 1 102 1 
36 1 
255 1 230 1 216 1 68 1 297 1 188 1 21 1 
222 1 7 1 291 1 135 1 257 1 293 1 295 1 297 1 263 1 230 1 202 1 110 1 115 1 29 1 210 1 216 2 68 1 
76 1 7 4 78 6 258 3 13 2 188 1 88 2 192 3 89 2 90 2 263 4 265 3 21 1 198 1 201 3 105 1 23 2 202 5 203 3 110 5 114 1 115 6 116 2 210 4 121 2 32 1 216 8 217 1 286 2 129 2 290 2 291 4 134 2 135 12 293 5 295 3 46 2 138 1 297 8 47 6 228 2 230 9 302 4 306 1 305 2 308 3 158 10 314 3 161 2 243 2 168 2 68 2 175 2 324 1 
3 1 78 4 7 2 291 2 135 6 293 1 295 1 259 1 297 3 47 4 89 1 55 1 263 2 264 1 230 5 305 1 23 1 202 1 110 1 111 1 115 3 210 2 121 1 167 1 35 1 216 4 68 1 175 1 285 1 323 1 286 1 
1 1 177 1 290 1 7 1 291 1 42 1 9 1 43 1 294 1 297 2 142 1 263 1 230 2 269 1 270 1 23 2 202 1 110 1 242 1 27 1 316 1 274 1 210 1 121 1 279 1 284 1 171 1 175 2 
291 1 7 1 188 1 297 1 210 1 263 1 68 1 216 1 230 1 21 1 
305 2 23 2 290 1 78 5 135 10 46 1 115 5 297 5 47 5 89 2 121 2 216 5 230 5 175 2 286 2 
202 1 110 1 216 1 68 1 293 1 295 1 
76 2 7 2 291 1 8 1 12 1 293 4 258 4 295 2 45 1 138 2 297 2 192 1 263 2 99 1 230 2 265 4 302 1 307 1 201 4 202 3 158 1 203 1 110 3 243 2 210 2 32 2 170 1 125 1 217 1 
221 1 1 3 9 2 43 1 258 1 138 1 186 1 83 2 48 1 87 1 142 2 192 1 300 1 93 1 265 1 101 1 302 1 270 3 201 1 200 1 308 1 273 1 203 1 158 1 164 1 65 1 120 1 279 2 31 1 33 1 171 2 174 1 
78 2 291 1 7 1 135 4 115 2 243 1 297 2 47 2 210 1 263 1 32 1 173 1 230 1 68 2 216 4 
119 1 312 1 86 1 
73 1 312 1 260 1 103 1 86 1 
119 1 312 1 86 1 
119 1 312 1 86 1 
312 1 283 1 86 1 
312 1 283 1 86 1 
312 1 283 1 86 1 
312 1 86 1 
66 1 190 1 
23 1 177 1 42 1 154 2 77 1 273 2 225 1 113 1 136 3 11 1 186 2 83 4 48 8 274 1 65 4 121 1 227 4 93 2 33 2 173 1 
177 1 23 1 255 1 154 2 42 1 225 1 11 1 136 2 48 6 274 1 65 3 227 3 121 1 173 1 
305 1 23 1 271 1 154 1 273 1 136 2 113 1 186 1 83 2 48 4 65 2 89 1 121 1 227 2 93 1 33 1 286 1 
305 1 23 1 3 1 154 1 108 1 111 2 113 1 136 2 48 7 65 4 89 1 121 1 227 3 35 1 286 1 
177 2 3 2 42 1 77 2 225 1 11 1 136 9 186 2 83 4 48 23 89 2 227 11 93 2 301 1 234 1 305 2 23 3 108 1 154 5 273 2 111 2 113 4 63 1 274 2 65 12 121 3 33 2 173 1 286 2 
65 1 111 1 48 1 
3 1 227 1 48 1 
305 1 23 1 271 1 154 2 273 1 113 1 136 3 46 1 186 1 83 2 48 6 65 3 89 1 227 3 121 1 33 1 93 1 286 1 
305 1 23 2 3 1 154 1 273 1 111 1 136 1 240 1 186 1 83 2 48 10 89 2 65 4 121 1 227 6 55 1 167 1 93 1 33 1 264 1 35 1 323 1 285 1 286 2 
23 1 177 1 42 1 154 1 136 2 113 1 48 6 274 1 65 3 227 3 121 1 
177 1 154 1 77 1 273 1 225 1 113 1 136 2 11 1 186 1 83 2 48 3 274 1 65 2 227 1 93 1 33 1 301 1 
177 2 23 2 154 3 42 1 273 1 240 1 136 5 113 2 186 1 83 2 48 10 274 2 65 5 227 5 121 2 33 1 93 1 269 1 
23 1 273 1 240 1 113 1 136 1 186 1 83 2 48 2 227 2 93 1 33 1 286 1 
305 1 23 1 154 1 273 1 136 2 240 1 113 1 186 1 83 2 48 4 65 2 89 1 121 1 227 2 93 1 33 1 286 1 
177 1 60 1 77 1 154 1 273 3 240 1 136 2 113 1 186 3 83 6 48 3 274 1 65 2 227 1 93 3 33 3 301 1 
177 3 40 1 253 1 3 3 42 2 77 2 225 1 11 1 136 12 186 5 83 10 48 34 89 3 227 16 93 5 301 1 305 3 23 5 271 1 60 1 108 1 154 7 273 5 111 4 240 1 113 5 274 3 65 18 278 1 121 5 33 5 173 1 35 1 286 3 
177 1 3 1 42 1 225 1 11 1 136 2 186 1 83 2 48 8 227 4 93 1 23 1 154 2 273 1 111 1 240 1 274 1 65 4 121 1 33 1 173 1 35 1 285 1 
177 1 3 1 42 1 225 1 11 1 136 3 186 2 83 4 48 11 89 1 227 6 93 2 23 2 271 1 154 2 108 1 273 2 111 2 240 1 113 1 274 1 65 5 121 1 33 2 173 1 35 1 285 1 286 1 
305 1 23 2 3 1 77 1 154 1 273 2 111 1 136 1 240 1 186 2 83 4 48 11 89 2 65 5 121 1 227 6 55 1 167 1 93 2 33 2 264 1 35 1 323 1 285 1 286 2 
305 1 23 2 3 1 154 1 273 1 111 1 136 1 240 1 186 1 83 2 48 10 89 2 65 4 121 1 227 6 55 1 167 1 93 1 33 1 264 1 35 1 323 1 285 1 286 2 
177 1 3 1 42 1 225 1 11 1 136 2 186 1 83 2 48 8 227 4 93 1 23 1 154 2 273 1 111 1 240 1 274 1 65 4 121 1 33 1 173 1 35 1 285 1 
305 1 23 2 3 1 154 1 273 1 111 1 136 1 240 1 186 1 83 2 48 10 89 2 65 4 121 1 227 6 55 1 167 1 93 1 33 1 264 1 35 1 323 1 285 1 286 2 
3 1 77 1 136 1 186 3 83 6 48 11 89 2 227 6 55 1 93 3 264 1 305 1 23 2 271 1 154 1 273 3 111 1 240 1 65 5 121 1 33 3 167 1 35 1 285 1 323 1 286 2 
3 1 77 1 136 2 186 3 83 6 48 11 89 2 227 6 55 1 93 3 264 1 305 1 23 2 60 1 154 2 273 3 111 1 240 1 65 5 121 1 33 3 167 1 35 1 285 1 323 1 286 2 
177 3 23 1 154 3 42 1 225 1 11 2 136 6 113 3 48 7 274 3 65 4 121 1 227 3 
3 1 77 1 136 1 186 3 83 6 48 11 89 2 227 6 55 1 93 3 264 1 305 1 23 2 60 1 154 1 273 3 111 1 240 1 65 5 121 1 33 3 167 1 35 1 285 1 323 1 286 2 
270 1 221 1 1 1 9 1 204 1 81 1 69 1 
270 1 221 1 1 1 9 1 204 1 81 1 162 1 275 1 211 1 56 1 97 1 69 1 
192 1 201 1 255 1 158 1 203 1 125 1 45 1 265 1 258 1 138 1 302 1 
270 2 221 1 308 1 201 1 1 2 9 1 158 1 203 1 258 1 138 1 87 1 142 1 192 1 279 1 92 1 101 1 265 1 302 1 
221 1 1 2 76 1 9 2 134 1 182 1 258 1 87 1 192 1 142 1 92 1 265 1 101 1 100 1 302 1 270 2 201 1 308 2 203 2 158 3 116 1 316 1 279 2 
221 1 1 2 132 1 76 1 9 2 134 1 182 1 258 2 192 1 142 1 92 1 265 2 101 1 100 1 302 1 270 2 199 1 201 2 308 2 203 2 158 3 116 1 316 1 279 2 
76 1 134 1 293 1 258 3 13 1 138 1 84 1 192 1 265 3 302 1 199 1 201 3 308 1 155 1 202 2 158 4 110 2 203 1 314 1 116 1 168 1 68 1 216 1 
199 1 308 1 201 3 202 2 76 1 134 1 203 1 110 2 158 4 314 1 293 1 258 3 138 1 13 1 116 1 88 1 192 1 168 1 216 1 68 1 265 3 302 1 
192 1 201 1 265 1 258 1 268 1 302 1 
201 7 308 1 41 1 179 1 311 1 61 1 183 1 203 2 158 3 114 1 258 6 138 2 296 1 192 2 143 1 321 1 265 7 268 1 303 1 302 3 324 1 
1 2 177 1 9 1 11 1 258 1 186 2 83 4 87 1 192 1 92 1 93 2 17 1 265 1 101 1 270 2 200 1 201 1 23 1 273 2 203 1 274 1 276 1 279 1 31 2 121 1 122 1 33 2 218 1 221 2 42 1 225 1 136 2 139 1 48 6 142 1 226 1 227 3 302 1 308 1 154 2 158 1 164 2 65 3 173 1 322 1 174 1 324 1 
7 2 291 2 293 2 258 1 295 1 138 1 13 1 297 1 188 1 88 1 90 1 263 2 228 1 230 1 265 1 21 1 201 1 202 3 110 3 158 2 161 1 314 1 210 2 168 1 172 1 216 1 68 1 217 1 
192 1 308 1 201 2 105 1 168 1 158 2 203 1 114 1 265 2 258 2 268 1 302 2 324 1 
199 1 201 4 203 1 158 1 258 4 45 1 138 1 208 1 192 1 125 1 265 4 302 1 324 1 
201 2 308 1 76 1 256 1 61 1 203 1 158 1 112 1 258 2 192 1 143 1 91 1 265 2 302 2 
261 1 117 1 192 1 201 1 51 1 44 1 265 1 258 1 138 1 302 1 
201 2 41 1 203 1 158 1 258 2 296 1 192 1 194 1 265 2 302 1 324 1 
201 5 41 1 76 1 183 1 203 2 158 3 45 1 258 4 138 1 208 1 192 2 125 1 321 1 265 5 302 2 324 1 
201 5 41 1 76 1 238 1 203 2 158 3 45 1 258 4 138 1 208 1 192 2 125 1 321 1 265 5 302 2 324 1 
270 2 221 1 308 1 201 1 1 2 132 1 9 1 158 1 203 1 258 1 138 1 142 1 192 1 279 1 92 1 101 1 265 1 302 1 
201 1 308 1 76 1 61 1 203 1 158 1 114 1 258 1 192 1 143 1 265 1 303 1 302 2 
191 1 221 1 147 1 160 1 184 1 
221 1 38 1 202 2 182 1 110 2 160 1 184 2 13 1 316 1 191 2 209 1 319 1 165 1 172 1 147 2 34 1 216 1 68 1 100 1 
270 1 1 1 153 1 9 1 79 1 160 1 184 1 191 1 196 1 
209 1 165 1 160 1 
74 1 5 1 255 1 207 1 
49 1 318 1 107 1 
53 1 80 1 220 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 231 1 245 1 
49 1 318 1 107 1 245 1 
49 1 261 1 117 1 318 1 107 1 245 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 245 1 
49 1 30 1 318 1 107 2 133 1 220 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 245 1 
5 2 157 2 150 1 197 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 245 1 
178 1 
49 1 318 1 107 1 245 1 
49 1 318 1 107 1 245 1 
30 1 5 1 37 1 288 1 
5 1 207 1 

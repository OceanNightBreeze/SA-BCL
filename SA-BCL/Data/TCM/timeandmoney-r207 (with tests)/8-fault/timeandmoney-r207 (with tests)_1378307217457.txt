#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 85 255 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 189 245 221 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 85 255 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2408 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
52 1 176 1 30 1 229 1 230 1 180 1 233 9 350 2 258 1 354 1 184 2 207 1 79 2 279 2 361 1 282 2 162 4 369 9 167 1 105 1 370 2 88 1 290 3 222 1 89 6 323 2 110 5 157 1 
52 1 176 1 30 1 229 1 230 1 180 1 233 9 350 2 258 1 354 1 184 2 207 1 279 2 79 2 361 1 162 4 282 2 369 9 167 1 105 1 370 2 88 1 290 3 222 1 89 6 323 2 110 5 157 1 
52 1 176 1 30 1 229 1 230 1 180 1 233 10 350 2 258 1 354 1 184 2 207 1 279 2 79 2 361 1 162 5 282 2 369 10 167 1 105 1 370 2 88 1 290 4 222 1 89 7 323 2 110 6 157 1 
52 1 176 1 30 1 229 1 230 1 180 1 233 7 350 2 258 1 354 1 184 2 207 1 279 2 79 2 361 1 162 3 282 1 369 7 167 1 105 1 370 2 88 1 290 2 222 1 89 4 323 2 110 4 
282 2 52 1 162 2 176 1 369 4 167 1 350 1 233 4 370 1 258 1 290 1 354 1 89 3 184 1 323 1 110 3 279 1 157 1 
324 1 176 1 164 1 69 1 369 2 167 1 105 1 350 1 233 2 370 1 354 1 184 1 207 1 323 1 110 1 79 1 
162 1 176 1 369 3 167 1 350 2 233 3 354 1 290 1 222 1 89 1 323 2 79 1 110 2 
52 1 176 1 30 1 180 1 233 9 350 2 36 1 258 1 354 1 184 1 79 1 279 1 162 4 282 2 369 9 167 1 216 1 370 1 290 3 222 1 89 7 323 2 110 5 157 1 
52 1 176 1 30 1 180 1 233 9 350 2 36 1 258 1 354 1 184 1 79 1 279 1 162 4 282 2 369 9 167 1 216 1 370 1 290 3 222 1 89 7 323 2 110 5 157 1 
289 1 53 1 235 1 
143 1 235 1 302 2 
239 1 19 2 23 2 70 2 128 2 155 2 61 2 94 1 
272 2 29 1 1 1 32 1 70 2 273 1 34 1 2 2 94 1 72 1 351 1 277 1 75 2 120 1 121 2 7 1 308 1 239 1 311 1 283 1 127 2 364 1 241 1 144 1 190 1 128 2 366 1 103 1 340 1 61 3 131 1 19 2 23 3 321 1 155 2 195 1 295 1 
128 1 70 1 367 1 94 1 61 1 319 1 19 1 342 1 23 1 155 1 
58 1 13 1 93 1 61 1 217 1 305 1 289 1 342 1 235 1 23 1 236 1 155 1 51 1 360 1 
128 1 70 1 93 2 61 1 217 1 305 1 289 1 19 1 342 1 235 1 23 1 236 1 155 1 51 1 360 2 
206 1 278 1 93 1 360 1 17 1 
289 1 206 1 248 1 235 1 278 1 242 1 93 2 360 2 
278 1 93 1 360 1 
299 1 128 1 70 1 93 1 367 1 94 1 61 1 319 1 19 1 342 1 206 1 23 1 155 1 360 1 
235 1 
352 1 289 1 206 1 235 1 278 1 242 1 93 2 360 2 
362 1 161 1 11 1 203 1 12 2 242 1 93 5 16 1 266 1 117 1 151 1 287 2 135 1 289 1 206 2 235 1 278 2 237 2 360 5 
239 1 53 1 
141 1 239 1 128 1 70 1 61 2 149 1 19 1 342 1 23 2 155 2 139 1 
251 1 249 1 246 1 
308 1 239 1 283 1 127 1 364 1 241 1 190 1 347 1 2 1 34 1 61 1 277 1 75 1 23 1 321 1 195 1 
239 1 70 2 128 1 61 2 149 1 19 2 342 1 23 2 122 1 155 2 139 1 
19 2 342 1 115 1 23 2 70 2 155 2 367 1 61 2 
308 1 283 1 127 1 364 1 241 1 190 1 70 1 34 1 2 1 246 1 61 2 277 1 288 1 19 1 75 1 321 1 23 2 195 1 122 1 155 1 
239 1 128 1 70 3 61 3 19 3 342 1 23 3 155 3 122 1 139 1 
19 1 342 1 23 1 70 1 155 1 367 1 61 1 
141 1 128 1 70 1 61 1 149 1 19 1 342 1 23 1 155 1 
272 1 29 1 32 1 70 3 273 1 93 1 34 1 2 1 72 1 94 1 351 1 277 1 305 1 75 1 78 1 121 2 236 1 122 1 360 1 308 1 10 1 239 1 283 1 311 1 127 1 364 1 241 1 144 1 190 1 128 2 103 1 340 1 61 4 149 1 217 1 131 1 288 1 19 3 342 1 321 1 23 4 195 1 155 3 51 1 
239 1 19 1 13 1 23 2 70 1 155 2 122 1 265 1 61 2 
10 1 59 1 128 1 70 3 93 1 61 3 149 1 217 1 288 1 305 1 19 3 342 1 235 1 23 3 236 1 122 2 155 3 51 1 360 1 
128 1 70 2 61 2 246 1 149 1 19 2 23 2 122 1 155 2 249 1 
308 1 239 1 283 1 127 1 364 1 241 1 190 1 2 1 34 1 61 1 277 1 75 1 23 1 321 1 195 1 
239 1 283 1 127 1 364 1 241 1 190 1 2 1 34 1 61 1 277 1 5 1 75 1 332 1 23 1 321 1 
26 1 67 1 272 4 29 1 251 2 32 1 273 1 351 1 120 2 121 2 185 1 259 1 81 1 315 1 144 2 192 1 340 1 246 2 46 1 131 1 109 1 249 2 132 1 133 1 
19 1 342 1 115 1 23 1 70 1 155 1 51 1 61 1 
50 1 64 1 
50 1 64 1 
150 1 77 1 
150 1 77 1 
150 1 77 1 
312 1 50 1 64 1 
50 1 64 1 359 1 
150 1 77 1 196 1 224 1 50 2 64 2 
312 1 50 1 64 1 
312 1 50 1 64 1 
50 1 64 1 232 1 
50 1 64 1 232 1 
50 1 64 1 232 1 
111 1 200 1 325 1 54 1 0 1 70 2 93 1 76 1 355 1 359 1 360 1 42 1 239 1 187 1 264 1 61 2 19 2 22 1 292 1 23 2 155 2 50 1 64 1 373 1 
297 1 200 3 201 2 91 1 54 2 187 1 177 1 93 2 60 1 62 1 355 2 235 1 292 2 22 2 343 1 224 1 50 2 64 2 360 2 
370 1 184 1 279 1 
370 1 69 1 184 1 
69 1 184 3 328 1 279 2 99 1 9 1 
69 1 184 2 328 1 279 1 99 1 106 1 
69 1 184 2 279 1 328 1 99 2 
203 2 33 1 302 3 93 5 179 2 96 2 206 4 76 1 235 2 278 1 237 1 360 5 362 1 259 1 142 1 81 1 285 2 11 3 315 1 143 1 12 1 262 1 242 1 264 1 218 1 287 1 289 1 109 1 49 1 371 1 373 1 156 1 
203 6 252 1 33 1 302 9 93 9 116 1 179 6 276 1 117 1 256 1 353 1 206 7 76 4 235 5 278 6 237 2 360 9 362 1 259 3 43 1 81 3 285 6 11 8 315 3 143 3 12 2 242 1 17 5 218 2 287 2 86 5 289 1 109 3 371 2 156 3 
203 2 93 3 302 4 179 2 117 1 96 1 206 2 76 1 235 3 237 1 360 3 259 1 81 1 11 3 285 2 315 1 143 2 12 1 262 1 218 1 287 1 289 1 109 1 49 1 371 1 156 1 
203 4 302 7 93 4 179 4 116 1 117 1 256 1 96 2 206 3 76 2 235 4 237 1 360 4 259 2 43 1 81 2 285 4 11 5 315 2 143 3 12 1 262 1 218 1 287 1 289 1 109 2 49 1 371 1 156 2 
53 1 364 1 335 1 
364 1 68 1 
291 1 
277 1 364 1 34 1 
364 1 211 1 
277 1 364 1 
277 1 364 3 34 1 335 2 134 1 160 1 
26 2 259 1 272 7 315 1 144 3 316 1 129 1 192 3 178 1 286 1 329 1 74 2 293 1 120 4 138 1 307 1 25 1 
26 2 259 1 272 7 315 1 144 3 316 1 129 1 192 3 178 1 286 1 329 1 74 2 293 1 120 4 138 1 307 1 25 1 
26 2 259 1 272 7 315 1 144 3 316 1 129 1 192 3 178 1 286 1 329 1 74 2 293 1 120 4 63 1 138 1 307 1 25 1 
26 6 272 34 29 1 32 1 178 1 329 3 330 1 74 1 120 17 136 1 121 2 138 1 98 1 307 1 208 1 259 5 81 3 189 3 315 5 144 17 316 3 129 7 192 13 146 1 340 1 245 1 286 2 131 1 21 4 109 3 293 2 194 1 156 3 25 1 66 1 
26 3 259 1 272 9 29 2 315 1 144 4 316 1 32 2 129 1 192 4 178 1 340 2 286 1 329 1 131 2 74 2 136 1 293 1 120 5 153 1 121 4 138 1 357 1 25 1 
176 1 90 1 69 1 301 1 2 1 254 1 233 2 350 1 306 1 75 1 354 1 184 2 279 1 79 1 9 1 283 1 127 1 314 1 190 1 84 1 166 1 369 2 167 1 169 1 370 1 20 1 269 1 89 1 323 1 110 1 
176 1 90 1 69 1 71 1 2 1 254 1 233 3 350 1 306 1 75 1 184 2 279 1 79 1 9 1 283 1 127 1 190 1 84 1 166 1 341 1 369 3 167 1 169 1 370 1 20 1 269 1 154 1 89 2 323 1 110 1 
176 1 69 1 71 1 2 1 254 1 233 2 306 1 75 1 184 2 79 1 279 1 9 1 283 1 127 1 190 1 84 1 166 1 341 1 369 2 167 1 370 1 20 1 269 1 89 2 110 1 
283 1 127 1 364 1 28 1 241 1 190 1 102 1 45 1 369 1 2 1 166 2 350 1 233 1 95 1 277 1 306 2 75 1 269 2 119 1 154 1 223 1 323 1 79 2 
90 1 69 1 2 1 254 1 233 1 350 1 306 1 75 1 354 1 184 2 279 1 79 1 9 1 283 1 127 1 314 1 190 1 84 1 166 1 341 1 369 1 169 1 370 1 20 1 269 1 323 1 
268 1 
362 1 127 1 203 1 12 1 241 1 242 1 93 2 85 1 2 1 255 1 287 1 75 1 278 2 237 1 360 2 186 1 
93 3 231 1 352 1 305 1 333 2 236 1 278 2 360 3 58 1 13 1 365 1 242 1 61 1 247 1 217 1 219 1 342 1 23 1 155 1 322 1 51 1 198 1 
93 3 231 1 352 1 305 1 333 3 235 1 278 1 236 1 360 3 58 1 13 1 365 1 242 1 15 1 61 1 247 1 217 1 219 1 289 1 342 1 23 1 155 1 322 1 51 1 
93 3 231 1 352 1 305 1 333 3 235 1 236 1 278 2 360 3 338 1 58 1 13 1 365 1 242 1 15 1 61 1 247 1 217 1 219 1 289 1 342 1 23 1 155 1 322 1 51 1 198 1 
93 5 231 1 331 2 97 1 333 6 235 5 236 1 278 7 237 1 338 4 100 1 284 1 58 1 11 1 13 1 12 1 143 2 242 3 15 4 61 1 247 1 287 1 289 5 342 1 23 1 155 1 198 4 27 2 203 1 35 1 352 1 305 1 38 2 360 5 362 1 260 1 365 1 212 2 217 1 219 1 320 1 51 1 322 1 225 1 
93 4 231 1 331 2 97 1 333 4 235 2 236 1 278 4 237 1 338 2 284 1 58 1 11 1 13 1 12 1 143 2 101 1 242 2 15 2 61 1 247 1 287 1 289 1 342 1 23 1 155 1 198 2 27 2 203 1 302 2 305 1 38 2 360 4 362 1 365 1 212 2 217 1 219 1 51 1 322 1 
27 2 203 1 93 4 35 1 231 1 305 1 331 2 38 2 97 1 235 1 333 4 278 4 236 1 237 1 360 4 362 1 338 2 284 1 58 1 11 1 143 2 12 1 13 1 212 2 365 1 242 2 15 2 61 1 247 1 217 1 287 1 219 1 289 1 342 1 320 1 23 1 155 1 322 1 51 1 225 1 198 2 
27 2 203 1 93 4 35 1 231 1 305 1 331 2 38 2 97 1 235 1 333 4 278 4 236 1 237 1 360 4 362 1 338 2 284 1 58 1 11 1 143 2 12 1 13 1 212 2 365 1 242 2 15 2 61 1 247 1 217 1 287 1 219 1 289 1 342 1 320 1 23 1 155 1 322 1 51 1 225 1 198 2 
27 2 203 1 302 2 93 4 35 1 231 1 305 1 97 1 235 1 333 4 278 4 236 1 237 1 57 1 209 2 360 4 362 1 125 1 338 2 58 1 11 1 313 1 12 1 13 1 212 2 365 1 242 2 15 2 61 1 247 1 217 1 287 1 219 1 289 1 18 2 342 1 23 1 155 1 322 1 51 1 198 2 
27 2 203 1 93 4 35 1 231 1 305 1 331 2 38 2 97 1 235 1 333 5 236 1 278 5 237 1 360 4 362 1 100 1 338 3 284 1 58 1 11 1 143 2 12 1 13 1 212 2 365 1 242 2 15 3 61 1 247 1 217 1 287 1 219 1 289 1 320 1 342 1 23 1 155 1 322 1 51 1 225 1 198 3 
27 2 203 1 93 4 35 1 231 1 305 1 331 2 38 2 97 1 235 1 333 5 236 1 278 5 237 1 360 4 362 1 100 1 338 3 284 1 58 1 11 1 143 2 12 1 13 1 212 2 365 1 242 2 15 3 61 1 247 1 217 1 287 1 219 1 289 1 320 1 342 1 23 1 155 1 322 1 51 1 225 1 198 3 
27 2 203 1 302 2 93 4 231 1 305 1 97 1 235 1 333 4 278 4 236 1 237 1 209 2 360 4 362 1 338 2 58 1 11 1 313 1 12 1 13 1 101 1 212 2 365 1 242 2 15 2 61 1 247 1 217 1 287 1 219 1 289 1 18 2 342 1 23 1 155 1 322 1 51 1 198 2 
26 2 259 1 239 2 53 1 272 6 67 1 29 1 251 1 315 1 144 3 32 1 316 1 192 2 273 1 178 1 340 1 246 1 351 1 329 1 131 1 74 1 120 3 121 2 138 1 249 1 25 1 
26 1 272 14 29 2 251 11 1 1 32 2 273 1 351 2 330 1 183 1 73 1 39 1 120 8 121 4 280 1 259 2 81 1 239 1 189 3 315 1 144 6 129 1 192 2 103 1 340 2 245 1 246 11 108 1 131 2 21 3 109 2 156 2 249 4 
272 2 29 1 1 1 70 1 32 1 347 1 273 1 34 1 2 1 159 1 349 1 351 1 277 1 183 1 75 1 120 1 121 2 122 1 308 1 336 1 239 1 283 1 127 1 364 1 241 1 190 1 144 1 103 1 340 1 61 2 131 1 288 1 19 1 321 1 23 2 195 1 155 1 249 1 
272 20 1 1 273 3 178 1 2 3 329 1 277 2 183 1 6 1 138 1 239 2 283 2 241 1 144 10 190 2 192 8 103 1 340 3 341 1 61 3 246 7 288 1 19 1 109 2 23 3 155 1 195 2 249 7 156 2 25 1 26 4 29 3 251 7 32 3 70 1 253 2 205 1 34 2 351 3 74 1 75 3 120 10 121 6 122 1 308 2 259 3 81 2 311 2 127 3 364 2 315 3 44 2 316 1 129 4 267 2 131 3 220 2 87 1 321 2 
112 1 67 1 272 2 29 2 1 1 70 1 32 2 301 1 273 2 2 8 181 1 351 2 277 2 75 7 55 1 120 1 119 1 121 4 122 1 7 2 283 2 127 8 364 3 241 2 190 2 144 1 263 1 103 1 340 2 341 1 61 1 131 2 172 1 19 1 23 1 155 1 223 1 296 1 199 1 
26 1 272 3 29 1 251 1 70 1 32 1 273 1 351 1 183 1 120 1 121 2 337 1 259 1 81 1 315 1 144 2 128 1 192 1 340 1 246 1 61 1 149 1 131 1 19 1 109 1 23 1 155 1 249 1 156 1 
259 1 272 2 67 1 29 1 251 1 32 1 192 1 129 1 273 1 340 1 246 1 351 1 131 1 109 1 120 2 121 2 249 1 133 1 
26 1 81 1 272 2 67 1 29 1 251 1 315 1 144 2 32 1 192 1 273 1 340 1 246 1 351 1 131 1 121 2 249 1 132 1 
26 1 67 1 272 4 29 1 251 2 32 1 273 1 351 1 120 2 121 2 259 1 81 1 315 1 144 2 129 1 192 2 340 1 246 2 131 1 109 1 156 1 249 2 
259 1 272 2 29 1 251 1 32 1 192 1 129 1 273 1 340 1 246 1 351 1 131 1 55 1 109 1 120 2 121 2 249 1 133 1 
26 1 81 1 272 2 29 1 251 1 315 1 144 2 32 1 192 1 273 1 340 1 246 1 351 1 131 1 55 1 121 2 249 1 132 1 
26 1 272 4 29 1 251 2 32 1 273 1 351 1 55 1 120 2 121 2 259 1 81 1 315 1 144 2 129 1 192 2 340 1 246 2 131 1 109 1 156 1 249 2 
26 1 272 4 29 1 251 2 32 1 273 1 351 1 120 2 121 2 259 1 81 1 315 1 144 2 129 1 192 2 340 1 246 2 131 1 109 1 156 1 249 2 
272 2 29 1 1 1 32 1 273 1 34 1 2 1 351 1 277 1 75 1 120 1 121 2 308 1 239 1 283 1 311 1 127 1 364 1 241 1 190 1 144 1 103 1 340 1 61 1 131 1 321 1 23 1 195 1 
271 1 272 2 29 1 1 1 32 1 273 1 34 1 2 1 351 1 277 1 5 1 75 1 332 1 120 1 121 2 239 1 283 1 127 1 364 1 241 1 190 1 144 1 103 1 340 1 61 1 131 1 321 1 23 1 
26 1 272 4 29 1 251 2 32 1 273 1 351 1 183 1 120 2 121 2 259 1 81 1 315 1 144 2 129 1 192 2 340 1 246 2 131 1 109 1 156 1 249 2 
26 1 272 4 29 1 251 2 32 1 301 1 273 1 34 1 2 1 351 1 277 1 75 1 120 2 121 2 308 1 259 1 81 1 283 1 311 1 127 1 364 1 315 1 144 2 190 1 192 2 129 1 340 1 246 2 61 1 267 1 131 1 109 1 321 1 23 1 195 1 249 2 156 1 
272 3 29 1 251 1 70 1 32 1 273 1 351 1 183 1 120 2 121 2 259 1 81 1 315 1 144 1 128 1 192 1 129 1 340 1 317 1 61 1 246 1 149 1 131 1 19 1 109 1 23 1 155 1 156 1 249 1 
26 3 272 19 29 2 345 1 32 2 3 1 330 1 120 9 121 4 357 1 310 1 259 3 163 2 81 3 189 1 315 3 144 10 129 3 192 6 214 2 340 2 368 1 245 1 131 2 170 1 21 2 109 3 372 1 294 1 156 3 
26 2 272 26 29 3 345 1 204 1 32 3 3 2 182 1 118 1 136 2 120 14 121 6 357 1 310 1 259 3 163 4 81 2 189 2 315 2 144 12 129 2 192 4 214 1 340 3 147 1 245 2 131 3 170 2 221 1 21 2 152 1 109 3 294 1 156 3 
26 4 272 41 29 3 345 1 204 1 32 3 274 1 178 1 3 1 329 1 182 1 330 1 74 1 118 1 136 1 120 20 121 6 138 1 357 1 310 1 259 5 163 4 81 4 189 3 315 5 144 21 316 1 129 4 192 8 214 1 340 3 368 1 147 1 245 3 131 3 221 1 170 2 21 4 152 1 109 4 294 1 156 4 25 1 
26 4 272 38 29 4 345 1 204 1 32 4 274 1 178 1 3 1 329 1 182 1 330 1 74 1 118 1 136 2 120 20 121 8 138 1 357 1 310 1 259 5 163 4 81 3 189 3 315 4 144 18 316 1 129 3 192 7 214 1 340 4 368 1 147 1 245 3 131 4 221 1 170 2 21 4 152 1 109 4 294 1 156 4 25 1 
26 7 272 52 29 2 345 1 204 1 32 2 178 1 3 1 329 1 182 1 330 2 74 1 118 1 136 1 120 27 121 4 138 1 357 1 310 1 259 8 163 4 81 7 189 4 315 8 144 25 316 1 129 7 192 14 214 1 340 2 147 1 245 2 108 2 131 2 221 1 170 1 21 4 152 1 109 7 294 1 156 7 25 1 
297 1 54 1 355 1 22 1 292 1 31 1 224 1 50 1 60 1 64 1 
111 1 359 1 
54 1 355 1 22 1 292 1 213 1 334 1 50 1 64 1 275 1 
165 1 312 1 
196 1 232 1 197 1 
297 1 200 2 201 1 187 1 54 1 177 1 93 1 60 1 62 1 355 1 235 1 292 1 22 1 343 1 224 1 50 1 64 1 360 1 
297 1 200 2 201 1 187 1 54 1 177 1 93 1 60 1 62 1 355 1 235 1 292 1 22 1 343 1 224 1 50 1 64 1 360 1 
297 1 200 2 201 1 187 1 54 1 177 1 93 1 60 1 62 1 355 1 235 1 292 1 22 1 343 1 224 1 50 1 64 1 360 1 
165 1 312 1 196 1 
165 1 312 1 196 1 
232 1 197 1 
196 1 232 1 197 1 
42 1 0 1 
111 1 200 1 325 1 201 1 54 1 177 1 0 1 70 2 93 1 206 1 76 1 355 1 359 1 360 1 42 1 239 1 264 1 215 1 61 2 19 2 22 1 292 1 23 2 155 2 50 1 64 1 373 1 
272 2 29 1 1 1 32 1 273 1 2 2 181 1 348 1 351 1 277 1 303 1 183 1 75 2 120 1 121 2 7 2 140 1 283 1 127 2 364 1 190 1 144 1 263 1 103 1 340 1 61 2 107 1 131 1 23 2 155 2 175 1 
283 1 127 2 69 1 190 1 301 1 84 1 341 1 2 2 104 1 169 1 370 1 47 1 20 1 75 2 306 1 184 2 279 1 80 1 9 1 
283 1 127 1 69 1 190 1 84 1 341 1 2 1 148 1 169 1 370 1 47 1 20 1 75 1 306 1 184 2 279 1 9 1 
283 1 127 1 364 1 241 1 190 1 2 1 95 1 277 1 75 1 306 1 270 1 119 1 223 1 80 1 
283 1 127 1 69 1 190 1 84 1 341 1 2 1 104 1 169 1 370 1 47 1 20 1 75 1 306 1 184 2 279 1 80 1 9 1 
113 1 
266 1 161 1 289 1 53 1 11 1 203 1 235 1 
203 1 302 1 93 1 331 1 38 1 235 2 278 1 237 1 360 1 362 1 284 1 11 1 143 1 12 1 242 1 287 1 289 1 
326 1 344 1 68 2 203 3 227 1 302 6 93 1 179 3 2 1 34 1 304 1 277 1 75 1 235 3 278 1 237 2 238 1 360 1 160 1 362 2 259 1 81 1 283 2 261 1 127 1 285 3 363 1 364 3 11 4 315 1 143 3 241 1 12 2 190 1 242 1 145 1 287 2 220 1 109 1 371 1 156 1 
362 1 189 1 11 1 285 1 203 1 143 1 12 1 302 2 179 1 245 1 287 1 221 1 21 1 235 1 237 1 
299 1 203 2 70 1 93 1 178 1 94 1 329 1 237 1 98 1 360 1 124 1 362 1 259 2 261 2 11 2 12 1 315 1 316 1 128 1 367 1 61 1 287 1 319 1 19 1 342 1 320 1 23 1 155 1 
362 1 161 1 11 1 12 1 203 1 266 1 287 1 289 1 235 1 237 1 
124 1 259 2 81 2 220 1 261 2 11 5 285 5 315 2 143 5 203 5 109 2 235 5 302 10 179 5 156 2 
289 1 235 1 278 1 242 1 93 1 360 1 
362 1 127 1 203 1 241 1 12 1 242 1 93 1 2 1 85 1 255 1 287 1 75 1 278 2 237 1 8 1 360 1 186 1 
272 1 29 1 32 1 70 2 273 1 2 1 34 1 94 1 72 1 351 1 277 1 75 1 121 2 308 1 239 1 311 1 283 1 127 1 364 1 241 1 144 1 190 1 128 2 103 1 340 1 61 3 131 1 19 2 23 3 321 1 155 2 195 1 
362 1 285 2 11 1 143 2 203 2 12 1 302 4 179 2 287 1 74 1 289 2 235 4 371 1 237 1 186 1 
126 1 355 1 22 1 
0 1 355 1 228 1 22 1 60 1 
126 1 355 1 22 1 
126 1 355 1 22 1 
309 1 355 1 22 1 
309 1 355 1 22 1 
309 1 355 1 22 1 
355 1 22 1 
50 1 64 1 
26 2 259 1 272 8 29 2 315 1 144 4 32 2 316 1 129 1 192 3 178 1 340 2 329 1 131 2 74 1 120 4 136 1 121 4 138 1 25 1 
26 2 259 1 53 1 272 6 315 1 144 3 316 1 192 2 178 1 329 1 74 1 120 3 138 1 25 1 
26 1 259 1 81 1 272 4 29 1 315 1 144 2 32 1 192 2 129 1 340 1 131 1 109 1 120 2 121 2 156 1 281 1 
26 1 259 1 81 1 272 7 189 1 315 1 144 4 129 1 192 2 245 1 330 1 21 2 109 1 120 3 156 1 
26 5 272 23 29 2 32 2 178 1 329 2 330 1 74 1 73 1 120 11 136 2 121 4 138 1 259 3 81 2 189 2 315 3 144 12 316 2 192 9 129 4 340 2 108 1 131 2 21 2 109 2 156 2 25 1 226 1 
272 1 21 1 144 1 
272 1 189 1 120 1 
26 2 259 1 81 1 272 6 29 1 315 1 144 3 32 1 129 1 192 3 340 1 131 1 220 1 109 1 120 3 121 2 156 1 281 1 
26 1 272 12 29 1 204 1 32 1 182 1 118 1 120 6 121 2 357 1 259 2 81 2 189 1 315 2 144 6 129 1 192 2 340 1 245 1 131 1 221 1 21 1 109 2 152 1 156 2 
26 1 259 1 272 6 315 1 144 3 316 1 192 2 129 1 178 1 329 1 120 3 
26 1 272 3 29 1 144 2 316 1 32 1 129 1 192 2 340 1 329 1 131 1 120 1 136 1 121 2 138 1 25 1 226 1 
26 3 259 2 272 10 29 1 315 2 144 5 32 1 316 2 192 5 129 2 178 1 340 1 329 2 131 1 120 5 121 2 357 1 98 1 
259 1 272 2 29 1 32 1 129 1 192 1 340 1 131 1 109 1 120 2 121 2 357 1 
26 1 259 1 81 1 272 4 29 1 315 1 144 2 32 1 192 2 129 1 340 1 131 1 109 1 120 2 121 2 357 1 156 1 
26 1 272 3 29 3 144 2 32 3 316 1 192 2 129 1 340 3 368 1 329 1 131 3 136 1 120 1 121 6 357 1 226 1 
26 7 272 34 29 5 32 5 178 2 329 3 330 1 74 1 136 2 120 16 121 10 138 1 357 1 208 1 281 1 259 5 81 3 189 3 315 5 144 18 316 3 146 1 129 5 192 12 340 5 368 1 245 1 131 5 21 4 109 3 156 3 25 1 66 1 226 1 
26 2 272 8 29 1 32 1 178 1 329 1 74 1 120 4 121 2 138 1 357 1 259 1 189 1 315 1 144 4 316 1 192 2 340 1 245 1 131 1 221 1 21 1 25 1 
26 2 272 11 29 2 32 2 178 1 329 1 330 1 74 1 120 6 121 4 138 1 357 1 281 1 259 2 189 1 315 1 144 5 316 1 129 1 192 3 340 2 245 1 131 2 221 1 21 2 109 1 156 1 25 1 
26 3 272 19 29 3 204 1 32 3 178 1 329 1 182 1 74 1 118 1 120 9 136 1 121 6 138 1 357 1 281 1 259 3 81 2 189 1 315 3 144 10 316 1 129 1 192 4 340 3 245 1 131 3 221 1 21 1 109 2 152 1 156 2 25 1 
26 3 272 17 29 3 204 1 32 3 178 1 329 1 182 1 74 1 118 1 136 1 120 10 121 6 138 1 357 1 281 1 259 3 81 1 189 1 315 2 144 7 316 1 129 2 192 5 340 3 245 1 131 3 221 1 21 1 109 2 152 1 156 2 25 1 
26 2 272 8 29 1 32 1 178 1 329 1 74 1 120 4 121 2 138 1 357 1 259 1 189 1 315 1 144 4 316 1 192 2 340 1 245 1 131 1 221 1 21 1 25 1 
26 1 272 12 29 1 204 1 32 1 182 1 118 1 120 6 121 2 357 1 259 2 81 2 189 1 315 2 144 6 129 1 192 2 340 1 245 1 131 1 221 1 21 1 109 2 152 1 156 2 
26 3 272 18 29 4 204 1 32 4 178 1 329 1 182 1 74 1 118 1 120 10 136 2 121 8 138 1 357 1 281 1 259 3 81 1 189 1 315 2 144 8 316 1 129 2 192 5 340 4 245 1 131 4 221 1 21 1 152 1 109 2 156 2 25 1 
26 3 272 16 29 4 204 1 32 4 182 1 118 1 120 9 136 2 121 8 357 1 259 3 81 2 189 1 315 2 144 7 129 3 192 6 340 4 368 1 245 1 131 4 221 1 21 1 152 1 109 3 156 3 
26 3 259 1 272 7 315 1 144 4 316 3 192 6 129 3 178 1 329 3 120 3 138 1 25 2 
26 3 272 18 29 4 204 1 32 4 178 1 329 1 182 1 74 1 118 1 120 10 136 2 121 8 138 1 357 1 259 3 81 1 189 1 315 2 144 8 316 1 129 1 192 4 340 4 368 1 245 1 131 4 221 1 21 1 152 1 109 2 156 2 25 1 
239 1 13 1 23 1 155 1 65 1 265 1 61 1 
210 1 298 1 239 1 13 1 346 1 191 1 265 1 61 1 23 1 155 1 358 1 65 1 
277 1 283 1 53 1 127 1 75 1 364 1 241 1 190 1 119 1 223 1 2 1 
239 1 283 1 127 1 364 1 241 1 190 1 70 1 34 1 2 1 61 2 277 1 19 1 75 1 321 1 23 2 122 1 155 1 195 1 
70 1 2 1 34 2 277 2 305 1 75 1 122 1 239 1 283 1 127 1 364 3 211 1 190 1 61 2 19 2 342 1 193 1 23 2 321 1 195 1 155 2 51 1 250 1 
70 1 2 2 34 2 277 2 305 1 5 1 75 2 122 1 239 1 283 1 127 2 364 3 211 1 190 1 61 2 171 1 19 2 342 1 193 1 23 2 321 1 155 2 51 1 250 1 
299 1 68 1 92 1 70 1 93 1 2 1 94 1 75 1 235 1 360 1 127 1 364 1 128 1 367 1 61 1 289 1 319 1 19 1 342 1 193 1 23 1 155 1 
299 1 68 1 70 1 93 1 2 1 94 1 304 1 75 1 235 1 360 1 127 1 364 1 128 1 367 1 61 1 289 1 319 1 19 1 342 1 193 1 23 1 155 1 
283 1 127 1 75 1 190 1 2 1 296 1 
112 1 283 3 127 7 364 3 241 2 190 2 301 1 263 1 341 1 2 7 34 1 130 1 277 2 172 1 75 6 48 1 137 1 7 1 296 1 199 1 160 1 
26 2 272 6 29 2 251 1 70 1 32 2 273 2 301 1 178 1 253 1 34 1 2 1 348 1 351 2 329 1 277 1 183 1 74 1 75 1 120 3 121 4 138 1 122 1 308 1 259 1 239 2 283 1 311 1 127 1 364 1 315 1 144 3 190 1 316 1 192 2 340 2 246 1 61 2 267 1 131 2 19 1 321 1 23 2 155 1 195 1 249 1 25 1 
227 1 93 2 178 1 2 1 94 1 329 1 235 2 278 1 237 2 8 1 98 1 11 4 12 2 241 1 242 1 145 1 61 1 287 2 289 2 19 1 342 1 23 1 155 1 299 1 344 1 68 1 203 5 70 1 304 1 206 1 75 1 360 2 124 1 362 2 161 1 259 2 127 1 261 2 364 1 315 2 316 1 128 1 367 1 266 1 319 1 
326 1 283 2 127 2 364 2 190 1 301 1 2 2 34 1 277 1 75 2 335 1 296 1 160 1 
283 1 127 4 364 1 241 1 300 1 190 1 301 1 2 4 277 1 171 1 75 4 119 1 223 1 
283 2 127 2 364 1 190 1 2 2 34 1 168 1 130 1 277 1 87 1 75 2 193 1 137 1 41 1 
370 1 283 1 127 1 75 1 69 1 241 1 190 1 184 1 84 1 2 1 
283 1 127 2 364 1 190 1 301 1 263 1 2 2 341 1 277 1 75 2 140 1 
112 1 283 2 127 5 364 3 241 1 300 1 190 2 301 1 263 1 2 5 277 2 75 4 193 1 119 1 223 1 199 1 
112 1 283 2 127 5 364 3 241 1 300 1 83 1 190 2 301 1 263 1 2 5 277 2 75 4 193 1 119 1 223 1 
239 1 283 1 127 1 364 1 241 1 190 1 70 1 34 1 2 1 61 2 277 1 19 1 5 1 75 1 321 1 23 2 122 1 155 1 
277 1 283 2 127 1 75 1 364 1 193 1 190 1 48 1 137 1 34 1 2 1 160 1 130 1 
37 1 82 1 239 1 243 1 123 1 
82 1 299 1 14 1 70 1 128 1 93 1 367 1 318 1 61 1 94 1 19 1 319 1 289 1 342 1 206 1 234 1 235 1 23 1 155 1 360 1 
82 1 61 1 37 1 107 1 303 1 23 1 155 1 175 1 123 1 
82 1 14 1 234 1 
176 1 53 1 110 1 167 1 
176 1 369 1 323 1 110 1 167 1 233 1 350 1 
269 1 369 1 79 1 
176 1 202 1 339 1 327 1 369 3 167 1 350 1 233 3 354 1 323 1 207 2 110 1 
282 1 176 1 89 1 369 2 323 1 110 1 167 1 233 2 350 1 
162 1 52 1 370 1 354 1 184 1 369 1 323 1 279 1 110 1 233 1 350 1 
354 1 369 1 323 1 110 1 167 1 233 1 350 1 
176 1 354 1 369 1 323 1 167 2 233 1 350 1 
188 1 369 2 167 1 350 2 233 2 354 1 56 1 174 1 323 2 110 1 
162 1 176 1 30 1 369 3 167 1 180 1 350 1 233 3 354 1 290 1 89 2 323 1 110 2 
176 1 240 1 69 1 369 2 167 1 350 1 233 2 370 1 354 1 89 1 184 2 323 1 110 1 279 1 9 1 
282 1 162 1 176 1 369 4 167 1 350 2 233 4 354 1 290 1 89 2 323 2 110 2 157 1 
176 1 354 1 369 1 323 1 110 1 167 1 233 1 350 1 
162 1 176 2 202 1 327 1 158 1 369 4 167 2 233 4 350 1 290 1 89 2 207 1 323 1 110 3 
176 1 369 2 4 1 167 1 350 1 233 2 36 1 354 1 356 1 89 1 323 1 110 1 
176 1 202 2 327 1 369 3 167 1 350 1 233 3 354 1 323 1 40 1 207 2 110 1 
257 1 114 2 244 1 110 2 
354 1 173 1 369 1 323 1 233 1 350 1 
176 1 354 1 30 1 89 1 369 2 323 1 110 1 167 1 233 2 350 1 
24 1 
176 1 354 1 369 1 323 1 110 1 167 1 233 1 350 1 
176 1 354 1 30 1 89 1 207 1 369 3 323 1 110 1 167 1 233 3 350 1 
162 1 290 1 158 1 110 1 
110 1 167 1 

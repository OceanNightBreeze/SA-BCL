#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 193 309 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 193 309 339 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 82 284 268 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 269 279 127 224 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 269 279 127 224 157 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 269 279 127 224 157 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 269 279 127 224 157 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 82 286 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 193 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 193 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 193 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 193 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 193 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 193 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 193 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 82 284 268 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 82 286 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 82 284 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 82 170 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
247 9 133 2 222 1 58 1 183 1 225 2 136 1 184 1 326 2 310 1 210 1 11 4 13 1 232 2 256 1 235 1 44 3 260 9 195 2 219 1 295 1 51 1 267 2 273 1 274 6 96 2 119 1 132 5 
247 9 133 2 222 1 58 1 183 1 225 2 136 1 184 1 326 2 310 1 210 1 11 4 13 1 232 2 256 1 235 1 44 3 260 9 195 2 219 1 295 1 51 1 267 2 273 1 274 6 96 2 119 1 132 5 
247 10 133 2 222 1 58 1 183 1 225 2 136 1 184 1 326 2 310 1 210 1 11 5 13 1 232 2 256 1 235 1 44 4 260 10 195 2 219 1 295 1 51 1 267 2 273 1 274 7 96 2 119 1 132 6 
247 7 133 1 222 1 183 1 225 2 136 1 184 1 326 2 310 1 210 1 11 3 13 1 232 2 256 1 235 1 44 2 260 7 195 2 219 1 295 1 51 1 267 2 273 1 274 4 96 2 119 1 132 4 
247 4 133 2 44 1 222 1 58 1 260 4 225 1 136 1 195 1 326 1 219 1 51 1 267 1 11 2 232 1 274 3 235 1 132 3 
247 2 324 1 144 1 260 2 225 1 136 1 195 1 295 1 208 1 51 1 267 1 232 1 96 1 119 1 132 1 235 1 
247 3 44 1 260 3 136 1 51 1 267 2 11 1 232 2 256 1 274 1 96 1 235 1 132 2 
247 9 133 2 222 1 58 1 225 1 136 1 326 1 165 1 310 1 11 4 346 1 13 1 232 2 256 1 235 1 44 3 260 9 195 1 219 1 51 1 267 2 274 7 96 1 132 5 
247 9 133 2 222 1 58 1 225 1 136 1 326 1 165 1 310 1 11 4 346 1 13 1 232 2 256 1 235 1 44 3 260 9 195 1 219 1 51 1 267 2 274 7 96 1 132 5 
38 1 176 1 280 1 
25 2 143 1 176 1 
350 2 139 2 60 2 314 1 188 2 101 2 148 1 257 2 
221 1 27 1 182 1 60 3 344 1 101 2 62 1 104 1 206 1 65 1 187 2 171 1 139 3 126 1 314 1 188 2 42 1 257 2 43 2 69 2 15 1 288 1 191 1 238 1 350 2 142 1 145 1 148 1 149 1 47 2 48 1 338 1 153 2 355 1 357 1 78 1 301 1 
90 1 350 1 139 1 60 1 188 1 101 1 148 1 71 1 226 1 257 1 
90 1 258 1 248 1 350 1 277 1 278 1 176 1 60 1 280 1 125 1 115 1 139 1 313 1 120 1 
90 1 258 2 350 1 277 1 176 1 60 1 280 1 101 1 125 1 115 1 139 1 313 2 188 1 257 1 120 1 
258 1 204 1 313 1 80 1 262 1 
258 2 259 1 176 1 313 2 280 1 316 1 80 1 262 1 
258 1 313 1 262 1 
90 1 258 1 350 1 60 1 71 1 148 1 101 1 226 1 139 1 283 1 313 1 188 1 80 1 257 1 
176 1 
258 2 179 1 176 1 313 2 280 1 316 1 80 1 262 1 
287 1 318 1 258 5 161 1 192 2 176 1 280 1 262 2 63 1 9 1 150 2 50 1 116 1 117 1 313 5 245 1 316 1 80 2 140 2 
55 1 15 1 221 1 238 1 350 1 182 1 145 1 60 2 149 1 320 1 47 1 48 1 104 1 65 1 187 1 139 2 231 1 188 1 257 1 43 1 
38 1 314 1 
90 1 350 2 60 2 101 1 163 1 207 1 139 2 314 1 188 1 257 1 174 1 
20 1 39 1 231 1 
15 1 221 1 238 1 182 1 145 1 60 1 149 1 47 1 104 1 48 1 65 1 187 1 139 1 296 1 314 1 43 1 
350 3 139 3 60 3 314 1 101 1 188 3 320 1 257 3 
90 1 350 1 139 1 60 1 188 1 226 1 257 1 
90 1 350 1 60 1 101 1 163 1 207 1 139 1 188 1 257 1 
55 1 221 1 277 1 182 1 60 4 101 2 104 1 65 1 187 1 139 4 188 3 69 2 15 1 288 1 238 1 191 1 142 1 145 1 148 1 149 1 115 1 338 1 153 1 120 1 300 1 301 1 27 1 304 1 163 1 206 1 125 1 171 1 313 1 314 1 257 3 42 1 174 1 43 1 90 2 258 1 350 3 47 1 320 1 48 1 355 1 
90 1 248 1 350 2 60 2 320 1 152 1 139 2 314 1 188 1 257 1 174 1 
90 1 55 1 258 1 350 3 277 1 176 1 60 3 101 1 163 1 320 2 125 1 115 1 139 3 313 1 188 3 315 1 120 1 257 3 300 1 
350 2 60 2 101 1 320 1 163 1 39 1 139 2 231 1 188 2 257 2 
15 1 221 1 238 1 182 1 145 1 60 1 47 1 149 1 104 1 48 1 65 1 187 1 139 1 314 1 43 1 
221 1 238 1 319 1 145 1 60 1 47 1 149 1 104 1 48 1 49 1 65 1 187 1 139 1 314 1 43 1 
1 1 27 1 251 1 59 1 344 2 99 1 31 1 34 1 171 1 39 2 211 1 349 1 231 2 330 1 42 1 69 2 288 1 142 1 196 1 74 1 338 2 153 4 20 2 301 1 
90 1 350 1 277 1 60 1 113 1 139 1 188 1 257 1 
55 1 248 1 350 5 290 1 60 5 101 1 320 2 163 1 152 1 67 1 139 5 314 1 188 4 257 4 
90 1 350 1 139 1 60 1 188 1 226 1 257 1 
86 1 281 1 
86 1 281 1 
70 1 332 1 
70 1 332 1 
70 1 332 1 
198 1 86 1 281 1 
8 1 86 1 281 1 
70 1 332 1 98 1 81 1 86 2 281 2 
198 1 86 1 281 1 
198 1 86 1 281 1 
93 1 86 1 281 1 
93 1 86 1 281 1 
93 1 86 1 281 1 
309 1 0 1 193 1 306 1 86 1 281 1 
258 1 309 1 0 1 339 1 193 1 313 1 306 1 86 1 281 1 
225 1 195 1 326 1 
208 1 225 1 195 1 
215 1 208 1 138 1 225 3 68 1 326 2 
215 1 208 1 333 1 225 2 68 1 326 1 
215 1 208 1 225 2 68 2 326 1 
1 1 25 2 59 1 122 1 280 1 100 2 164 1 307 1 9 1 63 3 36 1 211 1 313 5 173 2 14 1 316 1 213 1 140 1 318 2 258 5 239 1 143 2 192 1 176 2 146 2 218 1 262 1 150 1 196 1 244 1 77 1 79 1 80 4 
1 3 25 6 26 1 59 3 204 5 280 1 100 6 253 1 227 1 164 3 205 1 9 1 63 8 209 1 36 3 327 5 211 3 313 9 173 6 14 1 316 1 213 2 140 2 287 1 318 6 258 9 236 1 239 2 143 6 192 2 176 5 262 6 150 2 196 3 21 1 77 4 80 7 
1 1 25 2 59 1 280 1 100 2 164 1 63 3 36 1 211 1 313 3 173 2 213 1 140 1 287 1 258 3 318 2 236 1 239 1 143 2 192 1 176 3 146 1 150 1 196 1 244 1 77 1 79 1 80 2 
1 2 25 4 26 1 59 2 280 1 100 4 253 1 164 2 63 5 36 2 211 2 313 4 173 4 213 1 140 1 287 1 258 4 318 4 236 1 239 1 143 4 192 1 176 4 146 2 150 1 196 2 244 1 21 1 77 2 79 1 80 3 
38 1 352 1 149 1 
194 1 149 1 
3 1 
221 1 149 1 
221 1 352 2 212 1 149 3 48 1 107 1 
221 1 149 1 48 1 
291 1 149 1 
237 1 292 1 17 2 344 4 99 3 263 1 196 1 34 2 87 1 338 3 153 7 75 1 211 1 341 1 52 1 158 1 89 1 
237 1 292 1 17 2 344 4 99 3 263 1 196 1 34 2 87 1 338 3 153 7 75 1 211 1 341 1 52 1 158 1 89 1 
237 1 292 1 17 2 344 4 99 3 263 1 196 1 34 2 87 1 338 3 153 7 75 1 130 1 211 1 341 1 52 1 158 1 89 1 
1 3 279 1 5 3 59 3 344 16 99 10 34 5 64 1 124 1 87 1 167 1 36 3 171 1 211 4 89 2 69 2 288 1 237 2 142 1 292 1 17 3 45 1 263 2 196 4 73 1 338 15 153 31 75 5 269 4 341 1 298 1 52 1 158 2 301 1 
135 1 344 5 99 4 34 3 64 1 87 1 171 2 211 1 89 1 69 4 288 2 237 1 142 2 292 1 17 2 263 1 196 1 338 4 154 1 153 9 75 1 52 1 158 1 301 2 
247 2 250 1 28 1 225 2 136 1 326 1 65 1 208 1 187 1 138 1 232 1 235 1 43 1 238 1 331 1 109 1 260 2 195 1 147 1 47 1 129 1 51 1 267 1 274 1 276 1 275 1 358 1 96 1 132 1 23 1 
247 3 28 1 225 2 61 1 326 1 65 1 208 1 187 1 138 1 232 1 235 1 43 1 238 1 331 1 109 1 260 3 195 1 147 1 47 1 293 1 178 1 129 1 51 1 267 1 274 2 276 1 275 1 96 1 132 1 23 1 
247 2 225 2 326 1 65 1 208 1 187 1 138 1 235 1 43 1 238 1 331 1 260 2 147 1 195 1 47 1 293 1 178 1 129 1 51 1 274 2 96 1 276 1 275 1 132 1 23 1 
221 1 247 1 238 1 252 1 112 1 260 1 61 1 147 2 6 1 149 1 47 1 104 1 65 1 166 1 187 1 168 1 267 1 348 1 232 1 96 2 275 2 276 2 43 1 
247 1 250 1 28 1 225 2 136 1 326 1 65 1 208 1 187 1 138 1 232 1 43 1 238 1 331 1 109 1 260 1 195 1 147 1 47 1 178 1 129 1 267 1 276 1 275 1 96 1 23 1 
197 1 
56 1 221 1 323 1 277 1 278 1 223 1 60 1 280 1 104 2 63 2 9 1 65 1 106 2 187 2 139 1 140 1 238 1 239 1 143 2 192 1 240 2 149 1 150 1 151 2 115 1 76 2 297 1 120 1 201 1 159 1 248 1 162 4 25 2 24 1 252 1 33 1 345 1 125 1 255 1 35 1 311 2 168 1 313 5 172 1 316 3 43 2 90 1 318 2 258 5 217 2 350 1 176 2 47 2 262 6 181 2 
90 1 258 3 248 1 162 2 277 1 350 1 278 1 223 1 240 1 60 1 262 2 125 1 115 1 35 1 179 1 139 1 297 1 172 1 313 3 316 1 120 1 159 1 
90 1 258 3 248 1 162 3 277 1 350 1 278 1 176 1 223 1 60 1 280 1 262 1 125 1 115 1 35 1 179 1 76 1 139 1 297 1 172 1 313 3 316 1 120 1 159 1 
248 1 162 3 277 1 278 1 223 1 60 1 280 1 125 1 35 1 139 1 313 3 172 1 316 1 90 1 258 3 350 1 217 1 176 1 240 1 262 2 115 1 179 1 76 1 297 1 120 1 159 1 
134 1 277 1 278 1 4 1 223 1 60 1 280 5 9 1 63 1 186 1 106 2 139 1 140 1 16 1 143 2 192 1 240 4 150 1 151 2 115 1 76 4 297 1 120 1 159 1 248 1 162 6 24 1 203 1 125 1 35 1 255 1 311 2 172 1 313 5 316 3 90 1 258 5 318 1 217 4 350 1 176 5 262 7 179 1 181 2 
56 1 277 1 278 1 223 1 60 1 280 1 9 1 63 1 106 2 139 1 140 1 143 2 192 1 240 2 150 1 151 2 115 1 76 2 297 1 120 1 159 1 248 1 162 4 24 1 25 2 125 1 35 1 255 1 311 2 172 1 313 4 316 2 90 1 258 4 318 1 350 1 217 2 176 2 262 4 181 2 
248 1 162 4 134 1 24 1 277 1 278 1 203 1 223 1 60 1 280 1 63 1 9 1 186 1 106 2 125 1 255 1 35 1 311 2 139 1 313 4 172 1 316 2 140 1 90 1 318 1 258 4 217 2 350 1 143 2 192 1 176 1 240 2 262 4 150 1 151 2 115 1 76 2 297 1 181 2 120 1 159 1 
248 1 162 4 134 1 24 1 277 1 278 1 203 1 223 1 60 1 280 1 63 1 9 1 186 1 106 2 125 1 255 1 35 1 311 2 139 1 313 4 172 1 316 2 140 1 90 1 318 1 258 4 217 2 350 1 143 2 192 1 176 1 240 2 262 4 150 1 151 2 115 1 76 2 297 1 181 2 120 1 159 1 
248 1 162 4 25 2 277 1 278 1 203 1 223 1 60 1 280 1 63 1 9 1 228 1 125 1 255 1 35 1 139 1 313 4 172 1 316 2 140 1 90 1 318 1 258 4 175 1 217 2 350 1 192 1 176 1 240 2 177 1 262 4 150 1 264 2 151 2 115 1 76 2 297 1 181 2 322 2 120 1 159 1 
248 1 162 3 277 1 278 1 4 1 223 1 60 2 280 1 101 1 226 1 125 1 35 1 139 2 283 1 313 2 172 1 188 1 257 1 90 2 258 2 350 2 217 1 176 1 240 1 148 1 71 1 262 1 115 1 76 1 297 1 120 1 159 1 
248 1 162 3 277 1 278 1 4 1 223 1 60 2 280 1 101 1 226 1 125 1 35 1 139 2 283 1 313 2 172 1 188 1 257 1 90 2 258 2 350 2 217 1 176 1 240 1 148 1 71 1 262 1 115 1 76 1 297 1 120 1 159 1 
56 1 248 1 162 4 25 2 277 1 278 1 223 1 60 1 280 1 63 1 9 1 228 1 125 1 255 1 35 1 139 1 313 4 172 1 316 2 140 1 90 1 318 1 258 4 217 2 350 1 192 1 176 1 240 2 262 4 150 1 264 2 151 2 115 1 76 2 297 1 181 2 322 2 120 1 159 1 
27 1 344 3 99 2 34 2 87 1 39 1 38 1 171 1 211 1 231 1 314 2 42 1 89 1 69 2 288 1 142 1 292 1 17 1 263 1 196 1 74 1 338 3 153 6 20 1 52 1 301 1 
343 1 27 2 5 1 344 1 254 1 171 2 231 3 314 1 233 1 42 1 174 1 90 1 69 4 288 2 191 1 142 2 95 1 353 1 338 3 153 4 20 3 269 1 301 2 
55 1 221 1 343 1 27 1 182 1 60 2 344 1 104 1 65 1 187 1 12 1 137 1 39 1 171 1 139 2 126 1 314 1 188 1 42 1 257 1 43 1 69 2 15 1 288 1 238 1 191 1 350 1 142 1 145 1 149 1 47 1 320 1 48 1 338 1 153 2 296 1 199 1 301 1 
55 1 221 2 1 2 325 2 182 2 59 2 60 3 99 8 104 1 65 2 187 3 139 3 231 7 188 1 69 6 108 2 15 2 288 3 191 1 238 2 142 3 292 1 145 2 17 1 111 2 149 2 196 3 294 1 338 10 153 20 20 7 75 4 200 1 301 3 160 2 343 1 27 3 344 10 85 1 34 4 87 1 36 2 171 3 39 7 211 3 126 1 314 2 257 1 42 3 89 1 43 3 350 1 47 3 320 1 263 1 48 2 178 1 355 2 52 1 
54 1 221 3 27 2 57 1 252 1 60 1 344 1 103 1 104 2 65 3 187 4 282 1 168 1 139 1 171 2 312 1 284 1 126 1 188 1 257 1 42 2 43 4 69 4 288 2 238 2 191 1 350 1 142 2 320 1 149 3 47 4 48 1 74 1 338 1 266 1 153 2 268 1 358 1 78 1 301 2 82 1 
249 1 343 1 1 1 27 1 59 1 60 1 344 1 99 1 101 1 163 1 34 1 36 1 39 1 171 1 139 1 211 1 231 1 188 1 257 1 42 1 69 2 288 1 350 1 142 1 196 1 338 2 20 1 153 3 301 1 
69 2 288 1 27 1 142 1 59 1 344 2 99 1 196 1 74 1 20 1 153 2 75 1 39 1 171 1 231 1 330 1 42 1 301 1 
69 2 288 1 1 1 27 1 142 1 99 1 31 1 34 1 74 1 338 2 20 1 153 2 39 1 171 1 211 1 231 1 42 1 301 1 
1 1 27 1 59 1 344 2 99 2 34 1 36 1 171 1 39 2 211 1 231 2 42 1 69 2 288 1 142 1 196 1 74 1 338 2 153 4 20 2 75 1 301 1 
69 2 288 1 27 1 142 1 57 1 59 1 344 2 99 1 196 1 20 1 153 2 75 1 39 1 171 1 231 1 330 1 42 1 301 1 
69 2 288 1 1 1 27 1 142 1 57 1 99 1 31 1 34 1 338 2 20 1 153 2 39 1 171 1 211 1 231 1 42 1 301 1 
1 1 27 1 57 1 59 1 344 2 99 2 34 1 36 1 171 1 39 2 211 1 231 2 42 1 69 2 288 1 142 1 196 1 338 2 153 4 20 2 75 1 301 1 
69 2 288 1 1 1 27 1 142 1 59 1 344 2 99 2 34 1 196 1 338 2 20 2 153 4 75 1 36 1 39 2 171 1 211 1 231 2 42 1 301 1 
221 1 27 1 182 1 60 1 344 1 104 1 65 1 187 1 139 1 171 1 126 1 314 1 42 1 43 1 69 2 15 1 288 1 238 1 191 1 142 1 145 1 47 1 149 1 48 1 338 1 153 2 355 1 301 1 
221 1 27 1 60 1 344 1 104 1 65 1 187 1 139 1 171 1 126 1 314 1 42 1 43 1 69 2 141 1 288 1 238 1 191 1 142 1 145 1 319 1 47 1 149 1 48 1 49 1 338 1 153 2 301 1 
343 1 1 1 27 1 59 1 344 2 99 2 34 1 36 1 171 1 39 2 211 1 231 2 42 1 69 2 288 1 142 1 196 1 338 2 153 4 20 2 75 1 301 1 
221 1 1 1 27 1 182 1 59 1 60 1 344 2 99 2 34 1 65 1 187 1 36 1 39 2 139 1 171 1 211 1 231 2 42 1 43 1 69 2 15 1 288 1 238 1 142 1 145 1 47 1 149 1 48 1 196 1 338 2 20 2 153 4 75 1 355 1 358 1 301 1 160 1 
1 1 343 1 27 1 59 1 60 1 344 2 99 1 101 1 163 1 105 1 36 1 171 1 139 1 39 1 211 1 231 1 188 1 257 1 42 1 69 2 288 1 350 1 142 1 196 1 338 1 153 3 20 1 75 1 301 1 
1 3 279 1 224 1 5 1 59 3 135 1 344 9 99 6 34 3 88 1 169 2 36 3 171 2 211 3 69 4 288 2 142 2 94 2 337 1 18 1 196 3 354 1 338 10 153 19 75 3 269 2 321 1 298 1 157 1 301 2 
69 2 127 1 288 1 142 1 279 2 94 1 5 1 224 2 344 2 135 1 354 1 338 3 153 5 269 2 171 1 321 2 157 1 301 1 
1 2 279 3 224 1 5 2 59 2 135 1 344 8 99 3 34 1 169 1 36 2 171 2 211 2 69 4 127 1 288 2 142 2 94 2 337 1 18 1 196 2 354 1 338 10 153 18 75 2 269 4 321 2 298 1 157 1 301 2 246 1 
1 2 279 3 224 1 5 2 59 2 135 1 344 8 99 4 34 2 169 1 36 2 171 2 211 2 69 4 127 1 288 2 142 2 94 2 337 1 18 1 196 2 354 1 338 10 153 18 75 2 269 4 321 2 298 1 157 1 301 2 246 1 
1 2 279 2 224 1 5 2 59 2 135 1 344 10 99 5 34 3 87 1 36 2 171 1 211 3 234 1 89 1 69 2 127 1 288 1 142 1 94 1 292 1 17 1 263 1 196 3 354 1 338 10 153 20 75 2 269 3 321 1 298 1 52 1 157 1 301 1 
54 1 221 2 343 1 27 1 60 2 344 1 103 1 65 2 187 2 282 1 171 1 139 2 312 1 126 1 286 1 42 1 43 2 214 1 69 2 288 1 238 1 191 1 350 2 142 1 334 1 110 1 149 2 47 2 48 1 19 1 338 1 266 1 153 2 78 2 301 1 82 1 
289 1 238 1 331 1 109 1 29 1 225 2 336 1 195 1 147 1 47 2 326 1 65 1 208 1 178 1 187 2 138 1 358 1 43 2 23 1 
289 1 238 1 331 1 109 1 225 2 195 1 147 1 47 1 326 1 65 1 208 1 178 1 187 1 138 1 155 1 43 1 23 1 
221 1 238 1 252 1 112 1 336 1 147 1 149 1 47 1 104 1 65 1 187 1 168 1 342 1 43 1 
289 1 238 1 331 1 109 1 29 1 225 2 336 1 195 1 147 1 47 1 326 1 65 1 208 1 178 1 187 1 138 1 43 1 23 1 
30 1 
318 1 50 1 116 1 38 1 176 1 280 1 63 1 
24 1 25 1 280 1 63 1 9 1 106 1 311 1 313 1 316 1 140 1 318 1 258 1 143 1 192 1 176 2 262 1 150 1 
221 1 1 2 59 2 280 1 100 6 104 1 185 1 63 8 9 3 229 2 65 2 187 1 285 2 140 3 236 2 238 1 239 2 143 6 192 3 111 2 194 3 149 6 150 3 196 2 114 2 118 2 120 2 25 6 123 1 164 2 345 1 36 2 211 2 313 5 212 1 173 6 316 3 43 1 258 5 318 7 176 7 352 2 47 1 48 1 262 5 128 2 220 1 
25 3 1 2 279 1 5 1 59 2 280 2 100 5 32 1 164 2 63 8 9 2 308 1 345 1 36 2 347 1 211 2 313 1 173 5 316 1 140 2 258 1 318 5 127 1 236 1 239 1 143 3 192 2 176 5 351 1 261 1 262 1 150 2 196 2 269 1 356 1 
60 1 101 1 226 1 164 2 9 1 63 2 186 1 139 1 211 1 283 1 313 1 188 1 257 1 89 1 140 1 90 1 258 1 318 2 236 1 350 1 192 1 292 1 71 1 148 1 263 1 150 1 196 2 271 1 
318 1 192 1 176 1 280 1 9 1 150 1 63 1 50 1 116 1 140 1 
318 2 236 1 25 2 1 1 143 2 59 1 176 2 100 2 164 1 63 2 196 1 36 1 211 1 173 2 
258 1 176 1 313 1 280 1 316 1 262 1 
97 2 221 1 323 1 252 1 7 1 104 2 9 1 63 2 65 1 345 2 187 4 168 1 313 3 316 2 140 2 43 4 287 1 318 2 258 3 238 1 92 1 239 2 192 2 242 1 149 1 47 4 262 4 150 2 201 1 
221 1 27 1 182 1 60 3 101 2 104 1 206 1 65 1 187 1 139 3 171 1 314 1 188 2 257 2 42 1 43 1 69 2 15 1 288 1 191 1 238 1 350 2 142 1 145 1 148 1 47 1 149 1 48 1 338 1 153 1 355 1 301 1 
318 2 25 2 239 1 143 2 192 1 176 4 17 1 280 2 100 2 9 1 150 1 63 1 345 1 173 2 140 1 
0 1 193 1 
0 1 193 1 
0 1 193 1 
0 1 193 1 
0 1 193 1 
0 1 193 1 
0 1 193 1 
0 1 193 1 
86 1 281 1 
69 4 288 2 142 2 292 1 17 1 344 4 99 3 263 1 196 1 34 2 64 1 87 1 338 4 153 8 75 1 171 2 211 1 52 1 301 2 89 1 
196 1 34 2 87 1 338 3 153 6 38 1 211 1 292 1 17 1 344 3 99 2 52 1 89 1 263 1 
69 2 288 1 1 1 142 1 59 1 344 2 99 2 305 1 34 1 196 1 338 2 153 4 36 1 75 1 171 1 211 1 301 1 
1 1 279 1 5 1 59 1 344 3 99 2 34 1 196 1 338 4 153 7 36 1 75 1 269 2 211 1 298 1 
5 1 344 7 99 6 64 1 34 3 87 1 171 1 211 2 89 2 69 2 288 1 142 1 292 1 95 1 263 2 196 2 353 1 338 8 153 15 75 3 269 1 271 1 52 1 301 1 
338 1 153 1 269 1 
153 1 5 1 344 1 
69 2 288 1 1 1 142 1 59 1 111 1 344 3 99 3 305 1 196 1 34 2 338 3 153 6 36 1 75 1 171 1 211 1 301 1 
1 2 279 1 5 1 59 2 135 1 344 6 99 2 32 1 308 1 34 1 36 2 171 1 347 1 211 2 69 2 127 1 288 1 142 1 351 1 196 2 338 6 153 12 75 1 269 1 301 1 
292 1 344 3 99 2 263 1 196 1 34 1 338 3 153 6 75 1 211 1 89 1 
69 2 288 1 142 1 344 1 99 2 263 1 34 1 64 1 353 1 87 1 338 2 153 3 75 1 171 1 52 1 89 1 301 1 
69 2 288 1 142 1 292 1 135 1 344 5 99 5 263 2 34 3 196 2 338 5 153 10 75 2 171 1 271 1 211 2 301 1 89 2 
69 2 288 1 142 1 59 1 135 1 344 2 99 1 196 1 153 2 75 1 171 1 301 1 
69 2 288 1 1 1 142 1 59 1 135 1 344 2 99 2 34 1 196 1 338 2 153 4 36 1 75 1 171 1 211 1 301 1 
69 6 288 3 142 3 135 1 344 1 99 2 337 1 263 1 64 1 34 1 353 1 338 2 153 3 75 1 171 3 301 3 89 1 
1 3 279 1 5 3 59 3 135 1 344 16 99 12 305 1 64 2 34 7 87 1 167 1 36 3 171 5 211 5 89 3 69 10 288 5 142 5 292 2 17 1 45 1 337 1 263 3 196 5 353 1 73 1 338 18 153 34 75 5 269 4 298 1 52 1 301 5 
279 1 5 1 135 1 344 4 99 2 34 2 87 1 171 1 211 1 89 1 69 2 127 1 288 1 142 1 292 1 17 1 263 1 196 1 338 4 153 8 269 1 52 1 301 1 
279 1 5 1 59 1 135 1 344 6 99 3 305 1 34 2 87 1 36 1 171 2 211 1 89 1 69 4 127 1 288 2 142 2 292 1 17 1 263 1 196 2 338 5 153 11 75 1 269 2 298 1 52 1 301 2 
1 2 279 1 5 1 59 2 135 1 344 9 99 4 32 1 305 1 308 1 34 3 64 1 87 1 36 2 171 3 347 1 211 3 89 1 69 6 127 1 288 3 142 3 292 1 17 1 351 1 263 1 196 3 338 10 153 19 75 1 269 1 52 1 301 3 
1 1 279 1 5 1 59 2 135 1 344 10 99 5 32 1 305 1 64 1 308 1 34 3 87 1 36 2 171 3 347 1 211 2 89 1 69 6 127 1 288 3 142 3 292 1 17 1 351 1 263 1 196 3 338 7 153 17 75 2 269 1 52 1 301 3 
279 1 5 1 135 1 344 4 99 2 34 2 87 1 171 1 211 1 89 1 69 2 127 1 288 1 142 1 292 1 17 1 263 1 196 1 338 4 153 8 269 1 52 1 301 1 
1 2 279 1 5 1 59 2 135 1 344 6 99 2 32 1 308 1 34 1 36 2 171 1 347 1 211 2 69 2 127 1 288 1 142 1 351 1 196 2 338 6 153 12 75 1 269 1 301 1 
1 1 279 1 5 1 59 2 135 1 344 10 99 5 32 1 305 1 308 1 34 3 64 2 87 1 36 2 171 4 347 1 211 2 89 1 69 8 127 1 288 4 142 4 292 1 17 1 351 1 263 1 196 3 338 8 153 18 75 2 269 1 52 1 301 4 
1 2 279 1 5 1 59 3 135 1 344 9 99 6 32 1 308 1 34 3 64 2 36 3 171 4 347 1 211 2 69 8 127 1 288 4 142 4 351 1 337 1 196 3 338 7 153 16 75 3 269 1 301 4 
292 1 344 3 99 6 263 3 34 3 196 1 87 1 338 4 153 7 75 3 211 1 52 2 89 3 
1 1 279 1 5 1 59 2 135 1 344 10 99 4 32 1 308 1 34 3 64 2 87 1 36 2 171 4 347 1 211 2 89 1 69 8 127 1 288 4 142 4 292 1 17 1 351 1 337 1 263 1 196 3 338 8 153 18 75 1 269 1 52 1 301 4 
317 1 248 1 152 1 350 1 139 1 60 1 314 1 
317 1 248 1 302 1 350 1 121 1 60 1 72 1 152 1 230 1 139 1 340 1 314 1 
65 1 221 1 238 1 187 1 168 1 38 1 252 1 149 1 47 1 104 1 43 1 
221 1 238 1 350 1 182 1 145 1 60 2 149 1 320 1 47 1 48 1 104 1 65 1 187 1 139 2 314 1 188 1 257 1 43 1 
97 1 221 2 277 1 182 1 83 1 60 2 65 1 187 1 139 2 314 1 188 2 257 1 174 1 43 1 90 2 238 1 350 2 291 1 145 1 47 1 320 1 149 3 48 2 115 1 
97 1 221 2 277 1 83 1 60 2 65 1 187 1 139 2 314 1 188 2 257 1 174 1 43 1 90 2 238 1 350 2 291 1 145 1 47 1 320 1 149 3 48 2 49 1 115 1 
258 2 221 1 97 1 238 1 291 1 83 1 176 1 280 1 352 1 194 1 47 3 243 1 149 4 104 1 48 1 262 1 65 1 187 3 37 1 328 1 313 2 120 1 43 3 
258 2 221 1 97 1 238 1 291 1 83 1 176 1 280 1 352 1 194 1 47 3 149 4 104 1 48 1 262 1 65 1 187 3 328 1 313 2 120 1 118 1 43 3 
65 1 238 1 187 1 84 1 47 1 43 1 
54 2 221 3 238 2 103 1 47 3 149 3 104 2 48 2 65 4 266 1 187 3 282 2 268 1 284 1 212 1 358 1 41 1 82 1 43 3 
221 1 182 1 60 2 99 2 65 1 187 1 139 2 231 1 188 1 108 1 69 4 15 1 288 2 238 1 142 2 145 1 292 1 17 1 149 1 196 1 19 1 338 3 153 6 20 1 301 2 160 1 343 1 27 2 344 3 34 2 87 1 39 1 171 2 211 1 314 2 257 1 42 2 89 1 43 1 350 1 47 1 320 1 48 1 263 1 355 1 52 1 358 1 
280 1 104 1 63 1 9 2 229 1 187 1 313 3 285 1 316 1 43 1 140 2 318 1 258 3 192 2 176 1 352 1 242 1 194 1 47 1 149 2 262 2 150 2 114 1 50 1 116 1 80 1 118 1 120 1 
221 1 238 1 84 1 352 1 123 1 47 2 149 2 48 1 65 2 187 2 212 1 358 1 43 2 
65 1 221 1 265 1 238 1 187 4 168 1 328 1 252 1 358 1 149 1 47 4 104 1 43 4 
54 1 97 1 221 1 238 1 85 1 47 2 103 1 149 1 48 1 65 2 187 2 266 1 282 1 43 2 
65 1 208 1 238 1 187 1 225 1 195 1 47 1 104 1 23 1 43 1 
54 1 221 2 238 1 47 2 149 2 103 1 48 1 65 2 178 1 187 2 266 1 282 1 358 1 286 1 43 2 82 1 
54 1 221 2 238 1 47 2 149 2 103 1 104 1 48 1 65 2 187 2 266 1 282 1 284 1 358 1 43 2 82 1 
54 1 221 2 238 1 47 2 149 2 103 1 104 1 48 1 65 2 187 2 266 1 282 1 170 1 358 1 43 2 82 1 
221 1 238 1 350 1 145 1 60 2 149 1 320 1 47 1 48 1 104 1 49 1 65 1 187 1 139 2 314 1 188 1 257 1 43 1 
54 1 97 1 221 1 238 1 47 1 149 1 48 1 65 2 187 1 282 1 212 1 41 1 43 1 
190 1 202 1 350 1 2 1 110 1 334 1 60 1 139 1 214 1 
190 1 329 1 40 1 
190 1 216 1 202 1 2 1 314 1 
202 1 277 1 2 1 60 1 280 1 101 1 102 1 226 1 125 1 139 1 329 1 283 1 313 2 188 1 40 1 257 1 190 1 90 2 258 2 216 1 350 1 176 1 148 1 71 1 115 1 300 1 80 1 120 1 
51 1 38 1 132 1 235 1 
247 1 51 1 267 1 260 1 232 1 132 1 235 1 
260 1 96 1 276 1 
247 3 46 1 260 3 136 1 267 1 51 1 232 1 272 1 189 1 119 2 132 1 235 1 
247 2 133 1 51 1 267 1 260 2 232 1 274 1 132 1 235 1 
247 1 11 1 222 1 267 1 260 1 232 1 225 1 136 1 195 1 326 1 132 1 
247 1 267 1 260 1 232 1 136 1 132 1 235 1 
247 1 51 1 267 1 260 1 232 1 136 1 235 2 
247 2 91 1 260 2 136 1 66 1 267 2 232 2 131 1 132 1 235 1 
247 3 44 1 260 3 136 1 310 1 51 1 267 1 11 1 13 1 232 1 274 2 235 1 132 2 
247 2 260 2 225 2 136 1 195 1 326 1 208 1 51 1 267 1 270 1 138 1 232 1 274 1 132 1 235 1 
247 4 133 1 44 1 58 1 260 4 136 1 51 1 267 2 11 1 232 2 274 2 235 1 132 2 
247 1 51 1 267 1 260 1 232 1 136 1 132 1 235 1 
247 4 44 1 335 1 260 4 51 2 267 1 11 1 272 1 232 1 274 2 119 1 189 1 235 2 132 3 
247 2 260 2 136 1 165 1 267 1 51 1 180 1 232 1 156 1 274 1 132 1 235 1 
247 3 303 1 260 3 136 1 267 1 51 1 272 1 232 1 189 2 119 2 132 1 235 1 
10 1 299 1 22 2 132 2 
247 1 267 1 260 1 232 1 136 1 53 1 
310 1 247 2 51 1 267 1 260 2 232 1 274 1 136 1 132 1 235 1 
241 1 
247 1 51 1 267 1 260 1 232 1 136 1 132 1 235 1 
247 3 260 3 136 1 310 1 267 1 51 1 232 1 274 1 119 1 235 1 132 1 
11 1 44 1 335 1 132 1 
132 1 235 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 40 312 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 40 98 115 88 (35,90) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 40 8 25 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 40 8 25 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 40 8 25 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 40 8 25 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 40 8 25 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 186 324 165 133 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 327 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 40 2 332 113 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 40 312 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 40 98 115 230 202 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 40 312 361 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 40 98 115 230 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 40 98 115 88 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 40 98 115 230 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 40 98 115 88 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 40 98 115 230 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 40 98 115 230 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 40 312 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 40 312 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 40 98 115 230 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 40 98 115 230 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 40 98 115 230 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 40 116 82 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 40 116 82 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 40 116 82 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 40 116 82 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 40 116 82 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 40 312 361 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 40 2 166 183 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 40 2 166 183 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 40 2 166 183 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 40 2 166 183 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 40 2 166 183 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 40 2 166 183 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 40 2 166 183 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 40 2 166 183 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 42 320 286 (292,301) (292,301) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 40 2 166 183 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 42 320 286 (292,301) (292,301) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 327 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 40 98 115 230 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 40 2 166 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 40 2 332 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 40 2 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 40 98 115 230 202 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 40 2 166 183 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 40 98 316 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 42 320 286 (292,301) (292,301) 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 40 98 316 253 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 40 98 115 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 40 98 115 230 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 42 320 286 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 40 2 166 69 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 40 98 316 (292,301) (292,301) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
259 1 306 2 198 1 238 1 239 2 129 9 53 1 263 1 201 1 81 3 182 4 311 1 249 2 7 1 11 2 211 1 12 6 294 1 13 5 67 1 91 1 192 1 37 2 214 2 18 9 121 2 258 1 171 1 
259 1 306 2 198 1 238 1 239 2 129 9 53 1 263 1 201 1 81 3 182 4 311 1 249 2 7 1 11 2 211 1 12 6 294 1 13 5 67 1 91 1 192 1 37 2 18 9 214 2 121 2 258 1 171 1 
259 1 306 2 198 1 238 1 239 2 129 10 53 1 263 1 201 1 81 4 182 5 311 1 249 2 7 1 11 2 211 1 12 7 294 1 13 6 67 1 91 1 192 1 37 2 18 10 214 2 121 2 258 1 171 1 
259 1 306 2 198 1 238 1 239 2 129 7 53 1 263 1 201 1 81 2 182 3 311 1 249 2 7 1 11 2 211 1 12 4 294 1 13 4 67 1 91 1 192 1 37 2 18 7 214 1 121 2 258 1 
259 1 306 1 239 1 129 4 53 1 11 1 294 1 12 3 13 3 201 1 81 1 37 1 18 4 214 2 182 2 121 1 311 1 171 1 
259 1 30 1 306 1 198 1 249 1 129 2 211 1 11 1 13 1 201 1 68 1 37 1 18 2 121 1 72 1 311 1 
259 1 306 2 249 1 129 3 11 2 12 1 263 1 13 2 201 1 81 1 18 3 182 1 311 1 
259 1 306 2 238 1 128 1 239 1 129 9 53 1 263 1 201 1 81 3 182 4 311 1 206 1 249 1 12 7 11 2 294 1 13 5 91 1 37 1 18 9 214 2 121 1 171 1 
259 1 306 2 238 1 128 1 239 1 129 9 53 1 263 1 201 1 81 3 182 4 311 1 206 1 249 1 12 7 11 2 294 1 13 5 91 1 37 1 18 9 214 2 121 1 171 1 
254 1 327 1 170 1 
186 2 97 1 170 1 
174 1 322 1 177 2 280 2 157 2 29 2 229 2 298 2 
305 1 146 1 174 1 0 1 322 1 278 1 177 2 280 3 261 2 149 1 184 1 312 1 157 3 29 2 313 1 248 1 333 1 87 1 354 1 270 1 295 1 15 1 111 2 296 1 272 1 229 2 298 2 93 1 299 1 17 1 255 2 40 1 41 1 358 1 123 1 364 1 20 1 
208 1 174 1 345 1 177 1 344 1 280 1 157 1 29 1 229 1 298 1 
159 1 285 1 208 1 74 1 136 1 357 1 280 1 55 1 229 1 254 1 95 1 170 1 124 1 157 1 
159 1 285 1 74 2 208 1 136 2 177 1 280 1 55 1 298 1 229 1 254 1 95 1 170 1 29 1 157 1 
141 1 74 1 288 1 136 1 47 1 
254 1 74 2 288 1 215 1 136 2 170 1 47 1 36 1 
74 1 136 1 47 1 
208 1 74 1 288 1 174 1 136 1 345 1 344 1 177 1 280 1 298 1 229 1 196 1 29 1 157 1 
170 1 
254 1 74 2 288 1 215 1 136 2 96 1 170 1 47 1 
74 5 174 1 345 1 177 1 344 1 325 1 280 1 200 2 265 1 105 2 157 1 29 1 208 1 286 1 162 1 334 2 288 2 107 5 136 5 226 1 316 1 110 2 229 1 298 1 213 4 297 1 253 1 254 2 273 2 215 1 119 1 196 1 320 1 43 1 170 2 98 2 218 1 47 2 
322 1 327 1 
208 1 177 1 322 1 323 1 280 2 229 2 298 1 274 1 83 1 157 2 29 1 
66 1 90 1 103 1 
305 1 352 1 87 1 354 1 322 1 280 1 261 1 111 1 296 1 149 1 255 1 41 1 184 1 157 1 123 1 20 1 
343 1 305 1 354 1 87 1 177 1 126 1 280 2 261 1 103 1 149 1 296 1 111 1 298 1 229 1 255 1 41 1 184 1 157 2 123 1 20 1 
225 1 343 1 177 4 322 1 126 2 280 5 223 1 89 1 298 4 229 5 83 1 124 1 157 5 29 1 
112 1 208 1 345 1 177 2 280 2 157 2 229 2 298 2 
322 1 177 3 126 1 280 3 29 1 157 3 229 3 298 3 
208 1 345 1 177 1 280 1 157 1 229 1 298 1 
208 1 177 1 280 1 298 1 229 1 83 1 274 1 29 1 157 1 
343 1 305 1 74 1 146 1 174 1 322 1 177 3 126 1 280 4 261 1 149 1 55 1 5 1 83 1 184 1 29 2 157 4 159 1 285 1 313 1 248 1 208 1 333 1 354 1 87 1 136 1 295 1 15 1 296 1 111 1 272 1 229 3 298 3 93 1 299 1 17 1 255 1 95 1 41 1 358 1 123 1 364 1 20 1 276 1 
225 1 322 1 177 1 126 1 280 2 124 1 157 2 229 2 298 1 
285 1 343 1 159 1 74 1 208 1 173 1 136 1 177 3 126 2 280 3 55 1 298 3 229 3 5 1 95 1 83 1 170 1 29 1 157 3 
83 1 177 2 126 1 280 2 90 1 157 2 29 1 103 1 229 2 298 2 
305 1 87 1 354 1 322 1 280 1 261 1 111 1 296 1 149 1 255 1 41 1 184 1 157 1 123 1 20 1 
305 1 87 1 354 1 322 1 280 1 261 1 139 1 111 1 149 1 255 1 340 1 41 1 157 1 123 1 20 1 
313 2 248 1 333 1 35 1 88 1 66 1 90 1 295 1 103 1 15 2 102 1 272 1 93 1 17 1 308 1 40 1 115 1 283 1 105 1 98 1 73 1 364 1 
159 1 112 1 208 1 177 1 280 1 157 1 229 1 298 1 
132 1 205 1 
132 1 205 1 
125 1 109 1 
125 1 109 1 
125 1 109 1 
31 1 132 1 205 1 
85 1 132 1 205 1 
152 1 125 1 109 1 267 1 132 2 205 2 
31 1 132 1 205 1 
31 1 132 1 205 1 
204 1 132 1 205 1 
204 1 132 1 205 1 
204 1 132 1 205 1 
74 1 1 1 322 1 177 2 280 2 240 1 101 1 242 1 151 1 27 1 85 1 132 1 205 1 157 2 106 1 136 1 298 2 229 2 339 1 39 1 257 1 144 1 319 1 233 1 
134 1 74 2 106 3 260 1 136 2 240 2 80 1 243 1 150 1 151 2 143 1 27 2 257 2 144 1 195 2 170 1 267 1 205 2 132 2 
37 1 121 1 239 1 
68 1 37 1 121 1 
231 1 68 1 56 1 37 3 353 1 239 2 
68 1 56 1 37 2 353 1 239 1 326 1 
68 1 56 2 37 2 353 1 239 1 
74 5 200 1 24 1 101 1 242 1 155 2 203 1 105 1 351 2 107 2 209 1 334 1 288 4 136 5 186 3 251 1 228 1 230 1 213 3 254 1 273 1 115 1 215 1 319 1 97 1 359 2 43 1 170 2 98 1 342 1 73 1 47 1 
74 9 200 2 24 2 178 1 101 4 155 6 203 1 105 3 86 1 33 1 107 6 288 7 334 2 136 9 186 9 14 1 297 1 230 3 213 8 141 5 254 1 273 2 142 1 115 3 215 1 97 3 359 6 70 5 170 5 43 1 122 1 98 3 342 2 73 3 47 6 
74 3 200 1 24 1 101 1 155 2 105 1 351 1 288 2 209 1 334 1 107 2 136 3 186 4 228 1 297 1 213 3 230 1 254 1 273 1 115 1 97 2 359 2 170 3 98 1 342 1 73 1 
74 4 200 1 24 1 178 1 101 2 155 4 105 2 351 2 33 1 334 1 209 1 288 3 107 4 136 4 186 7 228 1 297 1 213 5 230 2 254 1 273 1 115 2 97 3 359 4 170 4 122 1 98 2 342 1 73 2 
305 1 237 1 327 1 
305 1 318 1 
227 1 
305 1 41 1 149 1 
305 1 161 1 
305 1 149 1 
305 3 179 1 41 1 237 2 189 1 149 1 
25 1 307 1 40 1 8 1 
25 1 307 1 40 1 8 1 
25 1 307 1 40 1 8 1 293 1 
25 1 307 1 40 1 8 1 
25 1 307 1 40 1 8 1 
259 1 306 1 99 1 50 1 239 1 127 1 78 1 261 1 129 2 201 1 131 1 311 1 246 1 249 1 87 1 271 1 12 1 11 1 13 1 111 1 68 1 231 1 255 1 37 2 18 2 121 1 120 1 362 1 219 1 20 1 
306 1 99 1 50 1 239 1 78 1 261 1 129 3 201 1 311 1 246 1 348 1 249 1 87 1 271 1 11 1 12 2 13 1 111 1 252 1 231 1 68 1 255 1 37 2 18 3 114 1 121 1 120 1 362 1 219 1 20 1 
99 1 50 1 78 1 239 1 261 1 129 2 201 1 311 1 246 1 348 1 249 1 87 1 271 1 12 2 13 1 111 1 252 1 68 1 231 1 255 1 37 2 18 2 121 1 362 1 20 1 
305 1 306 1 49 1 99 2 277 1 50 2 261 1 129 1 346 1 149 1 185 1 246 2 268 1 249 2 87 1 11 1 212 1 111 1 255 1 18 1 114 1 123 1 20 1 
259 1 306 1 99 1 50 1 239 1 78 1 261 1 129 1 131 1 246 1 249 1 87 1 271 1 11 1 111 1 252 1 68 1 231 1 255 1 37 2 18 1 121 1 120 1 362 1 219 1 20 1 
363 1 
321 2 277 1 324 1 200 1 100 1 149 1 153 2 245 1 62 2 107 2 334 1 289 1 336 2 111 2 213 2 255 2 256 1 215 3 117 1 170 1 342 1 123 2 302 1 20 1 305 1 74 4 172 1 261 2 79 1 310 1 268 1 136 4 87 1 186 2 355 2 191 1 273 1 94 2 38 2 317 1 97 2 43 1 44 2 47 6 
74 2 136 2 321 1 256 1 215 1 317 1 117 1 96 1 245 1 302 1 47 2 
74 1 62 1 256 1 136 1 117 1 317 1 336 1 245 1 302 1 
74 2 62 1 136 2 321 1 336 1 38 1 256 1 215 1 317 1 117 1 96 1 245 1 302 1 47 2 
321 4 147 1 324 1 280 1 200 1 153 2 157 1 245 1 158 1 208 1 62 3 334 1 107 1 289 1 336 3 65 1 165 1 213 1 298 1 254 2 256 1 215 3 117 1 170 2 302 1 220 1 74 4 174 1 345 1 344 1 177 1 29 1 136 4 355 2 229 1 273 1 38 4 94 2 317 1 96 1 97 2 196 1 43 1 44 2 47 7 
74 3 321 2 324 1 200 1 79 1 153 2 245 1 62 2 334 1 107 1 136 3 289 1 186 2 336 2 355 2 213 1 254 1 273 1 38 2 94 2 256 1 215 2 117 1 317 1 97 2 170 2 43 1 44 2 47 4 302 1 
74 3 321 2 147 1 324 1 200 1 153 2 245 1 158 1 62 2 334 1 107 1 136 3 289 1 336 2 355 2 165 1 213 1 254 1 273 1 38 2 94 2 256 1 215 2 117 1 317 1 97 2 170 1 43 1 44 2 47 4 302 1 
74 3 321 2 147 1 324 1 200 1 153 2 245 1 158 1 62 2 334 1 107 1 136 3 289 1 336 2 355 2 165 1 213 1 254 1 273 1 38 2 94 2 256 1 215 2 117 1 317 1 97 2 170 1 43 1 44 2 47 4 302 1 
74 1 107 1 334 1 136 1 186 1 355 1 324 1 200 1 328 1 165 1 329 1 213 1 273 1 256 1 153 1 317 1 117 1 43 1 45 1 245 1 133 1 302 1 
74 3 321 3 147 1 324 1 200 1 153 2 245 1 158 1 62 3 334 1 107 1 136 3 289 1 355 2 336 3 65 1 165 1 213 1 254 1 273 1 94 2 38 3 256 1 215 2 117 1 317 1 97 2 170 1 43 1 44 2 47 5 302 1 
74 3 321 3 147 1 324 1 200 1 153 2 245 1 158 1 62 3 334 1 107 1 136 3 289 1 355 2 336 3 65 1 165 1 213 1 254 1 273 1 94 2 38 3 256 1 215 2 117 1 317 1 97 2 170 1 43 1 44 2 47 5 302 1 
74 3 321 2 324 1 200 1 328 2 79 1 153 2 245 1 62 2 334 1 107 1 136 3 186 2 336 2 355 2 140 2 213 1 254 1 273 1 38 2 256 1 215 2 117 1 317 1 170 1 43 1 45 1 47 4 302 1 
248 1 286 1 333 1 222 1 327 1 292 1 316 1 295 1 272 1 93 1 17 1 308 1 40 1 320 1 98 1 46 1 301 1 364 1 
313 1 248 1 333 1 2 1 66 1 295 1 103 1 15 1 272 1 93 1 17 1 113 1 40 1 244 1 266 1 332 1 364 1 
343 1 313 1 248 1 146 1 333 1 177 1 126 1 280 1 295 1 15 1 298 1 229 1 272 1 92 1 93 1 17 1 40 1 244 1 312 1 157 1 247 1 364 1 
343 1 305 1 146 1 177 1 126 1 281 1 280 2 261 1 103 1 149 1 202 1 244 1 184 1 59 1 157 2 6 1 313 2 248 2 333 2 354 1 87 1 66 1 90 1 295 2 296 1 111 1 15 2 230 1 272 2 229 1 298 1 93 2 17 2 255 1 40 1 41 1 115 1 358 1 145 1 98 1 123 1 20 1 364 2 
248 1 333 1 10 1 261 1 295 1 111 1 272 1 93 1 17 1 255 1 40 1 361 1 312 1 123 1 364 1 
248 1 333 1 177 1 188 1 280 1 295 1 230 1 229 1 298 1 272 1 93 1 17 1 40 1 83 1 115 1 244 1 98 1 157 1 29 1 364 1 
93 1 248 1 17 1 308 1 40 1 333 1 115 1 88 1 98 1 295 1 364 1 272 1 
313 2 248 1 333 1 222 1 66 1 90 1 295 1 103 1 15 2 272 1 93 1 17 1 308 1 283 1 105 1 46 1 73 1 364 1 
93 1 248 1 17 1 308 1 40 1 333 1 115 1 98 1 295 1 230 1 364 1 272 1 
93 1 248 1 17 1 40 1 333 1 115 1 88 1 10 1 98 1 295 1 364 1 272 1 
313 2 248 1 333 1 222 1 10 1 66 1 90 1 295 1 103 1 15 2 272 1 93 1 17 1 283 1 105 1 46 1 73 1 364 1 
93 1 248 1 17 1 40 1 333 1 115 1 10 1 98 1 295 1 230 1 364 1 272 1 
93 1 248 1 17 1 40 1 333 1 115 1 98 1 295 1 230 1 364 1 272 1 
305 1 146 1 322 1 261 1 280 1 149 1 184 1 312 1 157 1 313 1 248 1 333 1 354 1 87 1 295 1 296 1 111 1 15 1 272 1 93 1 255 1 17 1 40 1 41 1 358 1 123 1 20 1 364 1 
305 1 146 1 322 1 261 1 280 1 149 1 312 1 157 1 313 1 248 1 333 1 354 1 87 1 139 1 295 1 111 1 15 1 272 1 93 1 255 1 17 1 40 1 41 1 340 1 118 1 123 1 20 1 364 1 
93 1 248 1 17 1 40 1 333 1 115 1 244 1 98 1 295 1 230 1 364 1 272 1 
305 1 127 1 261 1 280 1 149 1 184 1 157 1 248 1 333 1 354 1 87 1 295 1 296 1 111 1 272 1 230 1 93 1 255 1 17 1 40 1 41 1 115 1 358 1 145 1 98 1 20 1 364 1 
248 1 333 1 177 1 280 1 295 1 230 1 229 1 298 1 272 1 93 1 17 1 40 1 83 1 115 1 244 1 197 1 98 1 157 1 29 1 364 1 
313 1 248 1 176 1 3 1 295 1 337 1 15 1 272 1 17 1 82 1 26 1 40 1 116 1 364 1 
313 1 248 1 176 1 3 1 295 1 337 1 15 1 272 1 17 1 82 1 26 1 40 1 116 1 364 1 
313 1 248 1 176 1 3 1 295 1 337 1 15 1 272 1 17 1 82 1 26 1 40 1 116 1 364 1 
313 1 248 1 176 1 3 1 295 1 337 1 15 1 272 1 17 1 82 1 26 1 40 1 116 1 364 1 
313 1 248 1 176 1 3 1 295 1 337 1 15 1 272 1 17 1 82 1 26 1 40 1 116 1 364 1 
134 1 151 1 143 1 27 1 257 1 267 1 132 1 205 1 240 1 148 1 
1 1 85 1 
303 1 151 1 27 1 257 1 4 1 210 1 132 1 205 1 240 1 
31 1 60 1 
152 1 204 1 71 1 
134 1 74 1 106 2 260 1 136 1 240 1 80 1 243 1 151 1 143 1 27 1 144 1 257 1 195 1 170 1 267 1 205 1 132 1 
134 1 74 1 106 2 260 1 136 1 240 1 80 1 243 1 151 1 143 1 27 1 144 1 257 1 195 1 170 1 267 1 205 1 132 1 
134 1 74 1 106 2 260 1 136 1 240 1 80 1 243 1 151 1 143 1 27 1 144 1 257 1 195 1 170 1 267 1 205 1 132 1 
31 1 152 1 60 1 
31 1 152 1 60 1 
204 1 71 1 
152 1 204 1 71 1 
39 1 233 1 
74 1 1 1 322 1 177 2 280 2 240 1 101 1 242 1 243 1 151 1 27 1 85 1 132 1 205 1 157 2 349 1 106 1 288 1 136 1 298 2 229 2 339 1 39 1 257 1 195 1 319 1 233 1 
248 1 333 1 187 1 280 2 295 1 241 1 130 1 229 2 272 1 93 1 17 1 40 1 244 1 309 1 361 1 312 1 157 2 364 1 
207 1 87 1 314 1 51 1 239 1 127 1 78 1 261 2 271 1 111 2 252 1 231 1 68 1 255 2 37 2 121 1 120 1 246 1 20 1 
350 1 314 1 87 1 239 1 78 1 261 1 271 1 111 1 252 1 231 1 68 1 255 1 37 2 121 1 120 1 246 1 20 1 
305 1 87 1 277 1 51 1 261 1 149 1 111 1 255 1 61 1 185 1 123 1 246 1 20 1 268 1 
207 1 314 1 87 1 51 1 239 1 78 1 261 1 271 1 111 1 252 1 231 1 68 1 255 1 37 2 121 1 120 1 246 1 20 1 
34 1 
254 1 107 1 265 1 226 1 327 1 170 1 213 1 
74 1 200 1 107 1 334 1 289 1 136 1 186 1 213 1 254 1 273 1 94 1 215 1 97 1 43 1 170 2 44 1 47 1 
237 2 52 2 325 2 200 4 100 1 54 1 149 3 202 2 155 6 105 2 285 2 161 2 334 4 107 8 110 2 111 3 213 9 254 2 255 3 215 3 115 2 169 2 341 2 170 8 342 2 123 1 73 2 20 4 305 10 74 5 75 2 175 1 77 2 127 1 261 3 347 1 265 1 135 1 226 1 87 3 136 5 186 12 189 1 230 2 273 4 41 3 318 3 359 6 97 6 360 1 275 2 43 4 98 2 47 5 
21 1 2 1 200 1 266 1 155 5 183 1 105 2 334 1 107 4 186 6 137 1 9 1 291 1 213 6 230 2 166 1 273 1 115 2 359 5 97 3 43 1 170 3 98 2 73 2 
74 1 174 1 345 1 344 1 177 1 325 1 280 1 200 1 105 1 157 1 29 1 158 1 208 1 286 1 334 1 107 2 136 1 110 2 316 1 213 2 298 1 229 1 253 1 273 1 196 1 320 1 43 1 98 2 
334 1 107 1 226 1 200 1 213 1 254 1 273 1 265 1 43 1 170 1 
107 5 186 10 325 1 110 2 230 2 213 5 202 1 115 2 155 5 359 5 97 5 105 2 170 5 98 2 73 2 
254 1 74 1 136 1 215 1 170 1 47 1 
221 1 305 2 74 3 175 1 277 1 200 2 261 4 100 2 347 2 149 2 181 1 282 1 310 1 268 1 160 1 334 2 107 2 87 2 136 3 138 1 191 1 111 4 297 1 213 2 273 2 255 4 19 1 41 1 215 2 43 1 123 2 342 2 47 4 20 3 
305 1 146 1 174 1 322 1 177 2 261 1 280 3 149 1 184 1 157 3 29 2 313 1 248 1 333 1 87 1 354 1 295 1 15 1 111 1 296 1 229 2 298 2 272 1 93 1 299 1 17 1 255 1 41 1 358 1 123 1 364 1 20 1 
107 2 334 1 8 1 186 4 200 1 100 1 213 1 254 2 273 1 155 2 359 2 97 2 43 1 170 4 342 1 
151 1 257 1 279 1 
151 1 264 1 143 1 257 1 233 1 
151 1 257 1 279 1 
151 1 257 1 279 1 
151 1 257 1 290 1 
151 1 257 1 290 1 
151 1 257 1 290 1 
151 1 257 1 
132 1 205 1 
313 1 166 1 248 1 17 1 40 1 2 1 266 1 183 1 3 1 295 1 15 1 364 1 272 1 
248 2 313 1 2 1 3 1 315 1 295 2 15 1 272 2 17 2 166 1 40 1 266 1 183 1 364 2 
313 1 166 1 248 1 17 1 40 1 2 1 266 1 183 1 3 1 295 1 15 1 364 1 272 1 
313 1 166 1 248 1 17 1 40 1 2 1 266 1 183 1 3 1 295 1 15 1 364 1 272 1 
313 1 166 1 248 1 17 1 40 1 2 1 266 1 183 1 3 1 295 1 15 1 364 1 272 1 
313 1 166 1 248 1 17 1 40 1 2 1 266 1 183 1 3 1 295 1 15 1 364 1 272 1 
248 2 313 1 2 1 3 1 315 1 295 2 15 1 272 2 17 2 166 1 40 1 266 1 183 1 364 2 
248 2 313 1 2 1 3 1 295 2 15 1 272 2 17 2 166 1 40 1 266 1 194 1 183 1 364 2 
286 1 222 1 42 1 320 1 292 1 46 1 301 1 
248 2 313 1 2 1 3 1 295 2 15 1 272 2 17 2 166 1 40 1 266 1 194 1 183 1 364 2 
248 2 286 1 222 1 292 1 295 2 272 2 17 2 42 1 320 1 46 1 301 1 364 2 234 1 
286 1 40 1 222 1 327 1 320 1 292 1 98 1 316 1 46 1 301 1 
248 1 17 1 40 1 115 1 98 1 315 1 295 1 230 1 364 1 272 1 
313 1 166 1 40 1 2 1 266 1 15 1 
313 1 40 1 2 1 266 1 332 1 15 1 
313 1 266 1 15 1 
40 1 2 1 
313 1 40 1 202 1 115 1 98 1 15 1 230 1 
313 1 166 1 248 1 17 1 40 1 2 1 266 1 183 1 3 1 295 1 15 1 364 1 272 1 
40 1 98 1 316 1 
286 1 313 1 248 1 222 1 292 1 224 1 295 1 15 1 272 1 17 1 42 1 320 1 46 1 301 1 234 1 364 1 
253 1 286 1 40 1 222 1 320 1 98 1 316 1 46 1 
248 1 17 1 40 1 115 1 3 1 98 1 295 1 364 1 272 1 
248 1 17 1 40 1 115 1 3 1 98 1 295 1 230 1 364 1 272 1 
248 2 286 1 222 1 3 1 295 2 272 2 17 2 194 1 42 1 320 1 46 1 364 2 
313 1 248 3 2 1 3 1 315 1 295 3 15 1 272 3 17 3 166 1 40 1 266 1 194 1 69 1 364 3 
225 1 322 1 168 1 280 1 157 1 124 1 229 1 
225 1 236 1 250 1 322 1 280 1 190 1 229 1 193 1 168 1 216 1 124 1 157 1 
305 1 255 1 87 1 277 1 327 1 261 1 123 1 149 1 111 1 20 1 268 1 
305 1 354 1 87 1 322 1 177 1 126 1 280 2 261 1 149 1 111 1 296 1 298 1 229 1 255 1 41 1 157 2 123 1 20 1 
305 3 75 1 322 1 177 1 126 1 261 1 280 2 347 1 149 2 157 2 159 1 208 1 161 1 87 1 354 1 296 1 111 1 229 2 298 2 255 1 95 1 41 2 20 1 
305 3 75 1 22 1 322 1 177 1 126 1 261 2 280 2 347 1 149 2 157 2 159 1 208 1 161 1 87 1 354 1 111 2 229 2 298 2 255 2 95 1 340 1 41 2 20 1 
305 2 74 2 174 1 237 1 345 1 344 1 177 1 280 1 261 1 347 1 58 1 157 1 29 1 285 1 208 1 136 2 111 1 229 1 298 1 254 1 255 1 318 1 196 1 170 1 47 1 
285 1 305 4 74 2 161 1 75 1 22 1 136 2 237 1 87 1 261 3 347 1 149 1 111 3 254 1 255 3 41 1 318 1 170 1 341 1 123 1 47 1 20 1 
255 1 330 1 87 1 261 1 111 1 20 1 
304 1 160 1 305 3 87 2 278 1 127 1 356 1 163 1 23 1 261 6 164 1 189 1 111 7 149 2 252 1 255 7 330 1 41 1 181 1 123 2 20 3 
305 1 222 1 177 1 126 1 127 1 280 2 261 1 281 1 130 1 149 1 244 1 184 1 157 2 286 1 248 2 333 2 354 1 87 1 292 1 316 1 295 2 111 1 296 1 272 2 229 1 298 1 93 2 17 2 255 1 40 1 41 1 358 1 145 1 320 1 98 1 46 1 301 1 20 1 364 2 
305 2 74 3 175 1 237 1 77 1 261 1 200 2 265 1 285 1 107 1 334 2 288 1 226 1 136 3 111 1 213 1 254 1 273 2 255 1 215 1 318 1 275 1 170 1 43 2 169 1 341 1 123 1 47 2 
305 2 237 1 87 1 127 1 261 2 189 1 54 1 111 2 149 1 255 2 330 1 41 1 20 2 
305 1 22 1 87 1 63 1 277 1 127 1 261 4 111 4 149 1 255 4 123 1 20 1 268 1 
221 1 160 1 305 1 108 1 87 1 261 2 347 1 111 2 149 1 255 2 41 1 282 1 181 1 20 2 
68 1 255 1 37 1 87 1 121 1 261 1 271 1 123 1 111 1 20 1 
305 1 255 2 87 1 64 1 127 1 163 1 261 2 149 1 111 2 20 1 252 1 
305 3 87 2 63 1 277 1 127 1 261 4 23 1 163 1 356 1 347 1 111 5 149 2 255 5 123 1 268 1 20 2 
305 3 87 2 63 1 277 1 127 1 261 4 163 1 356 1 347 1 111 5 149 2 255 5 16 1 123 1 268 1 20 2 
305 1 354 1 87 1 322 1 177 1 126 1 280 2 261 1 149 1 111 1 298 1 229 1 255 1 41 1 340 1 157 2 123 1 20 1 
160 1 305 1 87 1 261 1 164 1 189 1 347 1 111 1 149 1 255 1 41 1 181 1 20 2 
57 1 232 1 322 1 300 1 338 1 
285 1 159 1 208 1 48 1 74 2 32 1 288 1 136 2 322 1 55 1 338 2 254 1 5 1 57 2 95 1 232 2 180 1 300 1 170 1 
57 1 187 1 309 1 300 1 280 1 157 1 241 1 229 1 338 1 
32 1 180 1 300 1 
327 1 13 1 311 1 201 1 
306 1 18 1 129 1 11 1 13 1 311 1 201 1 
249 1 99 1 129 1 
259 1 306 1 76 1 335 1 129 3 11 1 211 2 13 1 201 1 18 3 167 1 311 1 
306 1 214 1 18 2 129 2 12 1 11 1 13 1 311 1 201 1 
259 1 306 1 239 1 129 1 53 1 11 1 13 1 37 1 18 1 182 1 121 1 
259 1 306 1 18 1 129 1 11 1 13 1 201 1 
259 1 306 1 18 1 129 1 11 1 311 1 201 2 
259 1 306 2 129 2 11 2 13 1 201 1 18 2 104 1 284 1 156 1 
259 1 306 1 238 1 129 3 11 1 12 2 13 2 201 1 91 1 81 1 18 3 182 1 311 1 
259 1 306 1 239 1 129 2 11 1 12 1 13 1 201 1 68 1 231 1 37 2 18 2 121 1 217 1 311 1 
259 1 306 2 129 4 11 2 12 2 13 2 201 1 81 1 18 4 214 1 182 1 311 1 171 1 
259 1 306 1 18 1 129 1 11 1 13 1 311 1 201 1 
235 1 306 1 335 1 129 4 211 1 12 2 11 1 13 3 201 2 81 1 167 1 18 4 182 1 311 2 
259 1 306 1 287 1 199 1 129 2 11 1 12 1 13 1 201 1 18 2 311 1 206 1 
259 1 306 1 335 2 269 1 129 3 11 1 211 2 13 1 201 1 167 1 18 3 311 1 
154 2 262 1 28 1 13 2 
259 1 306 1 18 1 84 1 129 1 11 1 
259 1 306 1 18 2 129 2 12 1 11 1 13 1 311 1 201 1 91 1 
331 1 
259 1 306 1 18 1 129 1 11 1 13 1 311 1 201 1 
259 1 306 1 129 3 12 1 11 1 211 1 13 1 201 1 91 1 18 3 311 1 
81 1 235 1 182 1 13 1 
13 1 201 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 274 340 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 274 340 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 274 340 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 274 340 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 274 340 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 274 (73,328) (73,328) 322 185 320 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 274 (73,328) (73,328) 322 185 320 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 274 (73,328) (73,328) 320 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 274 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 274 (73,328) (73,328) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 274 (73,328) (73,328) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 274 (73,328) (73,328) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 274 (73,328) (73,328) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 274 (73,328) (73,328) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 274 (73,328) (73,328) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 274 (73,328) (73,328) 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 274 (73,328) (73,328) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 274 (73,328) (73,328) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 274 (73,328) (73,328) 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 274 (73,328) (73,328) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | == -> <=
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
225 4 272 1 178 1 133 1 202 2 361 2 92 9 157 1 367 1 369 3 210 1 373 2 164 1 68 2 70 1 16 6 45 1 237 1 240 1 170 1 192 2 127 1 218 9 108 5 353 1 323 2 325 1 222 2 
225 4 272 1 178 1 133 1 361 2 92 9 202 2 157 1 367 1 369 3 210 1 373 2 164 1 68 2 70 1 16 6 45 1 237 1 240 1 170 1 192 2 127 1 218 9 108 5 353 1 323 2 325 1 222 2 
225 5 272 1 178 1 133 1 361 2 92 10 202 2 157 1 367 1 369 4 210 1 373 2 164 1 68 2 70 1 16 7 45 1 237 1 240 1 170 1 192 2 127 1 218 10 108 6 353 1 323 2 325 1 222 2 
225 3 272 1 178 1 133 1 361 2 92 7 202 1 157 1 367 1 369 2 210 1 373 2 164 1 68 2 70 1 16 4 45 1 237 1 240 1 192 2 127 1 218 7 108 4 353 1 323 2 325 1 222 2 
225 2 373 1 164 1 68 1 16 3 92 4 202 2 237 1 170 1 192 1 157 1 218 4 108 3 323 1 367 1 222 1 369 1 210 1 
373 1 164 1 68 1 92 2 361 1 240 1 157 1 108 1 218 2 128 1 353 1 324 1 323 1 367 1 232 1 222 1 
225 1 373 2 164 1 68 2 16 1 92 3 45 1 361 1 157 1 218 3 108 2 367 1 369 1 
225 4 178 1 361 1 92 9 202 2 34 1 157 1 367 1 369 3 210 1 373 2 164 1 68 2 16 7 45 1 237 1 192 1 170 1 218 9 108 5 323 1 325 1 222 1 54 1 
225 4 178 1 361 1 92 9 202 2 34 1 157 1 367 1 369 3 210 1 373 2 164 1 68 2 16 7 45 1 237 1 192 1 170 1 218 9 108 5 323 1 325 1 222 1 54 1 
6 1 304 1 35 1 
252 1 148 2 6 1 
194 1 137 2 175 2 32 2 5 2 301 2 154 1 169 2 
87 1 330 1 311 1 180 1 32 2 90 2 91 1 277 1 5 2 227 2 154 1 135 2 58 1 137 3 336 1 138 1 365 2 208 1 125 1 341 1 301 3 285 1 257 1 349 1 165 1 169 2 216 1 76 1 194 1 262 2 19 1 21 1 175 2 197 1 52 1 198 1 223 1 
137 1 175 1 32 1 71 1 27 1 5 1 301 1 150 1 154 1 169 1 
85 1 189 1 6 1 5 1 317 1 304 1 319 1 79 1 137 1 281 1 109 1 27 1 301 1 211 1 
189 1 32 1 6 1 5 1 317 1 169 1 304 1 319 1 79 2 137 1 281 2 175 1 27 1 301 1 211 1 
79 1 346 1 281 1 292 1 112 1 
79 2 123 1 281 2 131 1 6 1 292 1 112 1 304 1 
79 1 281 1 112 1 
32 1 71 1 5 1 154 1 169 1 79 1 137 1 281 1 175 1 27 1 292 1 231 1 150 1 301 1 
6 1 
79 2 123 1 281 2 6 1 292 1 112 1 304 1 171 1 
161 1 213 1 4 1 273 1 104 1 6 1 304 1 146 1 318 2 94 1 193 2 79 5 123 1 281 5 122 1 254 2 292 2 160 1 112 2 
194 1 35 1 
310 1 32 1 5 2 169 1 194 1 137 2 175 1 27 1 301 2 267 1 343 1 
233 1 313 1 224 1 
285 1 90 1 91 1 277 1 135 1 119 1 76 1 58 1 194 1 137 1 336 1 365 1 208 1 125 1 301 1 223 1 
285 1 375 1 90 1 91 1 277 1 5 1 8 1 169 1 135 1 58 1 76 1 137 2 336 1 175 1 365 1 208 1 125 1 301 2 223 1 224 1 
194 1 137 3 375 1 175 3 32 1 5 3 301 3 169 3 
137 1 175 1 71 1 27 1 5 1 301 1 169 1 
310 1 32 1 5 1 169 1 137 1 175 1 27 1 301 1 343 1 
87 1 330 1 311 1 180 1 32 2 90 1 91 1 277 1 5 3 8 1 227 2 154 1 135 1 58 1 137 4 336 1 281 1 365 1 208 1 125 1 341 1 301 4 211 1 343 1 285 1 189 1 375 1 286 1 165 1 317 1 169 3 76 1 194 1 262 1 319 1 79 1 19 1 21 1 175 3 52 1 198 1 27 1 111 1 223 1 
194 1 220 1 137 2 175 1 375 1 109 1 5 2 301 2 169 1 
189 1 375 2 32 1 286 1 6 1 5 3 8 1 214 1 317 1 169 3 79 1 319 1 137 3 281 1 175 3 27 1 301 3 211 1 343 1 
375 1 233 1 32 1 5 2 169 2 137 2 175 2 301 2 224 1 343 1 
285 1 90 1 277 1 91 1 135 1 76 1 58 1 194 1 137 1 336 1 365 1 208 1 125 1 301 1 223 1 
285 1 90 1 277 1 91 1 135 1 76 1 58 1 362 1 194 1 205 1 137 1 336 1 365 1 208 1 301 1 
357 1 311 1 180 1 227 2 313 2 184 1 337 1 341 2 258 1 233 2 302 1 261 1 262 4 106 1 19 1 21 1 50 1 197 2 306 1 52 1 198 1 378 1 224 2 113 1 
137 1 175 1 126 1 27 1 5 1 301 1 317 1 169 1 
375 2 246 1 32 1 5 5 8 1 93 1 169 4 194 1 220 1 137 5 175 4 109 1 301 5 343 1 
137 2 175 2 126 1 71 1 27 1 5 2 301 2 169 2 
377 1 130 1 
377 1 130 1 
186 1 265 1 
186 1 265 1 
186 1 265 1 
377 1 259 1 130 1 
377 1 259 1 130 1 
271 1 377 1 130 1 
298 1 377 2 186 1 242 1 265 1 130 2 
377 1 259 1 130 1 
377 1 300 1 130 1 
377 1 300 1 130 1 
377 1 300 1 130 1 
275 2 132 1 6 1 295 1 79 2 334 1 280 2 377 2 281 2 22 1 124 1 51 3 326 2 354 2 242 1 188 1 130 2 100 1 284 2 
271 1 88 1 275 1 5 2 280 1 137 2 281 1 301 2 13 1 284 1 348 1 169 2 77 1 78 1 194 1 79 1 173 1 377 1 175 2 22 1 51 1 326 1 130 1 28 1 
323 1 222 1 192 1 
128 1 323 1 222 1 
128 1 323 3 110 1 75 1 192 2 29 1 
0 1 128 1 323 2 110 1 75 1 192 1 
128 1 323 2 110 2 192 1 75 1 
357 1 88 1 273 1 6 2 248 1 136 1 252 1 123 1 281 5 139 1 338 1 254 1 209 2 344 1 212 1 213 2 258 1 350 2 104 3 318 1 304 1 193 1 78 1 79 5 50 1 148 3 263 2 306 1 292 4 268 1 28 1 112 1 
357 3 358 1 273 1 117 1 332 1 6 5 248 1 252 3 281 9 123 1 139 2 254 2 209 6 160 1 344 2 212 3 346 5 213 6 66 1 258 3 350 6 104 8 304 1 318 2 78 4 193 2 79 9 48 1 50 3 148 9 306 3 53 1 292 7 112 6 270 5 
357 1 6 3 136 1 252 2 281 3 139 1 338 1 254 1 209 2 160 1 344 1 212 1 213 2 258 1 350 2 104 3 304 1 318 1 193 1 78 1 79 3 50 1 263 1 148 4 306 1 292 2 
357 2 358 1 117 1 6 4 136 1 252 3 281 4 139 1 338 1 254 1 209 4 160 1 344 1 212 2 213 4 258 2 350 4 104 5 304 1 318 1 193 1 78 2 79 4 50 2 148 7 263 2 306 2 53 1 292 3 
244 1 91 1 35 1 
91 1 99 1 
374 1 
91 1 277 1 
345 1 244 2 208 1 91 3 277 1 371 1 
208 1 91 1 277 1 
91 1 339 1 
262 1 327 1 274 1 197 1 340 1 
262 1 327 1 274 1 197 1 340 1 
262 1 297 1 327 1 274 1 197 1 340 1 
262 1 327 1 274 1 197 1 340 1 
262 1 327 1 274 1 197 1 340 1 
151 1 179 1 90 1 92 2 361 1 247 1 135 1 58 1 229 1 157 1 365 1 367 1 230 1 314 1 373 1 285 1 15 1 142 1 164 1 68 1 16 1 192 1 108 1 218 2 49 1 128 1 323 2 222 1 114 1 29 1 
151 1 179 1 90 1 92 3 361 1 247 1 135 1 58 1 250 1 229 1 365 1 367 1 230 1 102 1 373 1 285 1 15 1 142 1 164 1 68 1 16 2 192 1 108 1 218 3 81 1 49 1 128 1 323 2 222 1 29 1 
151 1 179 1 90 1 361 1 92 2 247 1 135 1 58 1 250 1 365 1 367 1 230 1 102 1 285 1 15 1 164 1 16 2 192 1 108 1 218 2 49 1 128 1 323 2 222 1 29 1 
179 2 90 1 359 1 277 1 91 1 92 1 361 2 135 1 58 1 364 1 365 1 230 2 370 1 285 1 373 1 63 1 15 2 68 1 303 1 76 1 218 1 81 1 266 1 
151 1 179 1 90 1 92 1 361 1 247 1 135 1 58 1 229 1 157 1 365 1 230 1 102 1 373 1 285 1 15 1 142 1 68 1 192 1 218 1 49 1 128 1 323 2 222 1 114 1 29 1 
206 1 
331 1 6 2 5 1 58 1 155 1 249 1 156 1 252 2 123 3 254 1 301 1 211 1 213 2 347 2 303 1 304 1 74 2 76 2 79 5 27 1 269 1 85 1 273 1 89 1 90 2 181 1 277 1 91 1 33 2 360 1 135 2 183 1 364 1 137 1 281 5 365 2 139 1 97 2 39 1 140 2 285 1 189 1 42 1 190 2 104 2 238 2 317 1 46 4 318 1 193 1 319 1 148 2 149 1 109 1 112 6 
85 1 5 1 249 1 156 1 137 1 281 3 123 1 301 1 211 1 189 1 42 1 317 1 46 2 238 1 171 1 319 1 79 3 109 1 149 1 27 1 269 1 112 2 
85 1 5 1 6 1 249 1 156 1 137 1 281 3 123 1 97 1 301 1 211 1 189 1 42 1 317 1 46 3 304 1 171 1 319 1 79 3 109 1 149 1 27 1 112 1 269 1 
85 1 5 1 6 1 249 1 156 1 137 1 123 1 281 3 97 1 301 1 211 1 140 1 189 1 42 1 317 1 46 3 238 1 304 1 171 1 319 1 79 3 109 1 149 1 27 1 269 1 112 2 
116 1 56 1 5 1 6 5 249 1 156 1 335 1 252 2 123 3 254 1 301 1 211 1 213 1 347 2 304 5 74 2 171 1 79 5 27 1 269 1 85 1 273 1 89 1 181 1 33 2 278 1 137 1 281 5 97 4 140 4 189 1 42 1 190 2 104 1 238 4 46 6 317 1 318 1 47 1 193 1 319 1 149 1 109 1 112 7 
331 1 5 1 6 2 249 1 156 1 252 2 123 2 254 1 301 1 211 1 213 1 347 2 74 2 304 1 79 4 27 1 269 1 85 1 273 1 89 1 181 1 33 2 137 1 281 4 97 2 140 2 189 1 42 1 190 2 104 1 46 4 317 1 238 2 318 1 193 1 319 1 148 2 109 1 149 1 112 4 
85 1 273 1 89 1 181 1 56 1 6 1 33 2 5 1 278 1 249 1 156 1 252 2 335 1 137 1 123 2 281 4 97 2 254 1 301 1 211 1 140 2 189 1 213 1 42 1 190 2 347 2 104 1 238 2 317 1 46 4 304 1 74 2 318 1 193 1 319 1 79 4 109 1 149 1 27 1 112 4 269 1 
85 1 273 1 89 1 181 1 56 1 6 1 33 2 5 1 278 1 249 1 156 1 252 2 335 1 137 1 123 2 281 4 97 2 254 1 301 1 211 1 140 2 189 1 213 1 42 1 190 2 347 2 104 1 238 2 317 1 46 4 304 1 74 2 318 1 193 1 319 1 79 4 109 1 149 1 27 1 112 4 269 1 
85 1 309 2 273 1 89 1 6 1 5 1 249 1 156 1 335 1 137 1 123 2 281 4 97 2 254 1 301 1 159 2 211 1 140 2 189 1 213 1 42 1 347 2 104 1 236 1 238 2 317 1 46 4 304 1 74 2 318 1 193 1 319 1 79 4 148 2 109 1 149 1 83 1 27 1 355 1 112 4 269 1 
85 1 116 1 273 1 89 1 181 1 56 1 6 1 33 2 5 1 278 1 249 1 156 1 252 2 335 1 137 1 123 2 281 4 254 1 97 3 301 1 211 1 140 3 189 1 213 1 42 1 190 2 347 2 104 1 317 1 46 5 238 3 304 1 74 2 318 1 193 1 319 1 79 4 109 1 149 1 27 1 269 1 112 5 
85 1 116 1 273 1 89 1 181 1 56 1 6 1 33 2 5 1 278 1 249 1 156 1 252 2 335 1 137 1 123 2 281 4 254 1 97 3 301 1 211 1 140 3 189 1 213 1 42 1 190 2 347 2 104 1 317 1 46 5 238 3 304 1 74 2 318 1 193 1 319 1 79 4 109 1 149 1 27 1 269 1 112 5 
331 1 5 1 6 1 249 1 156 1 123 2 254 1 301 1 159 2 211 1 213 1 347 2 74 2 304 1 79 4 27 1 269 1 85 1 309 2 273 1 89 1 137 1 281 4 97 2 140 2 189 1 42 1 236 1 104 1 46 4 317 1 238 2 318 1 193 1 319 1 148 2 109 1 149 1 112 4 
328 1 274 1 258 1 311 1 180 1 227 2 73 1 239 1 35 1 194 1 262 5 19 1 21 1 50 1 337 1 290 1 197 3 52 1 198 1 341 2 378 1 201 1 113 1 
357 1 311 2 180 1 118 1 227 4 313 11 59 1 282 1 138 1 38 1 341 6 212 2 64 1 144 1 258 2 233 4 165 1 289 1 194 1 262 14 19 2 80 3 21 2 321 3 50 1 197 8 306 2 52 2 198 2 378 2 293 1 224 11 113 1 
311 1 180 1 90 1 91 1 277 1 5 1 8 1 227 2 135 1 58 1 119 1 137 2 336 1 365 1 138 1 366 1 208 1 125 1 301 2 341 1 285 1 141 1 375 1 233 1 165 1 169 1 76 1 194 1 262 2 19 1 21 1 175 1 129 1 197 1 52 1 198 1 293 1 223 1 
328 1 330 1 5 1 8 1 58 1 299 1 336 1 208 1 125 1 341 11 301 2 212 2 258 4 165 1 73 1 169 1 76 1 262 21 19 2 21 2 175 1 306 2 84 1 27 1 267 1 223 1 224 6 357 2 311 2 180 2 90 1 277 1 91 1 227 4 313 6 135 1 137 2 365 1 368 1 285 1 375 1 143 1 233 6 316 1 239 1 289 1 376 2 194 1 50 4 290 1 197 10 52 2 198 2 378 5 293 1 200 2 201 1 113 4 
152 1 311 2 153 1 180 2 90 8 91 3 277 2 5 1 227 4 135 7 58 2 137 1 364 1 337 1 365 8 138 1 314 1 301 1 341 1 102 1 285 2 375 1 165 1 303 1 169 1 76 2 216 2 262 2 18 1 19 2 219 1 147 1 21 2 175 1 352 1 197 1 52 2 198 2 26 1 
357 1 311 1 32 1 180 1 5 1 313 1 227 2 137 1 301 1 341 2 343 1 212 1 258 1 233 1 169 1 262 3 19 1 21 1 107 1 175 1 50 1 306 1 197 1 52 1 198 1 378 1 293 1 224 1 113 1 
311 1 258 1 233 1 180 1 302 1 313 1 227 2 289 1 262 2 19 1 21 1 337 1 306 1 197 2 52 1 198 1 378 1 224 1 
357 1 311 1 233 1 180 1 313 1 227 2 262 2 19 1 106 1 21 1 337 1 50 1 52 1 198 1 341 2 378 1 224 1 113 1 
357 1 311 1 180 1 227 2 313 2 337 1 341 2 212 1 258 1 233 2 289 1 262 4 19 1 21 1 50 1 197 2 306 1 52 1 198 1 378 2 224 2 113 1 
153 1 311 1 258 1 233 1 180 1 302 1 313 1 227 2 289 1 262 2 19 1 21 1 306 1 197 2 52 1 198 1 378 1 224 1 
357 1 153 1 311 1 233 1 180 1 313 1 227 2 262 2 19 1 106 1 21 1 50 1 52 1 198 1 341 2 378 1 224 1 113 1 
357 1 311 1 153 1 180 1 227 2 313 2 341 2 212 1 258 1 233 2 289 1 262 4 19 1 21 1 50 1 197 2 306 1 52 1 198 1 378 2 224 2 113 1 
357 1 311 1 180 1 227 2 313 2 341 2 212 1 258 1 233 2 289 1 262 4 19 1 21 1 50 1 197 2 306 1 52 1 198 1 378 2 224 2 113 1 
330 1 311 1 180 1 90 1 277 1 91 1 227 2 135 1 58 1 137 1 336 1 138 1 365 1 208 1 125 1 301 1 341 1 285 1 165 1 76 1 194 1 262 2 19 1 21 1 197 1 52 1 198 1 223 1 
311 1 180 1 90 1 277 1 91 1 227 2 135 1 58 1 362 1 205 1 137 1 336 1 138 1 365 1 208 1 301 1 341 1 285 1 162 1 165 1 76 1 194 1 262 2 19 1 21 1 197 1 52 1 198 1 
357 1 311 1 180 1 227 2 313 2 341 2 212 1 258 1 233 2 289 1 262 4 19 1 21 1 50 1 197 2 306 1 52 1 198 1 293 1 378 2 224 2 113 1 
357 1 330 1 311 1 180 1 90 1 277 1 91 1 313 2 227 2 135 1 58 1 137 1 336 1 365 1 208 1 125 1 314 1 341 2 301 1 285 1 212 1 258 1 233 2 289 1 262 4 19 1 21 1 50 1 197 2 306 1 84 1 52 1 198 1 378 2 223 1 224 2 113 1 
357 1 311 1 32 1 180 1 5 1 227 2 313 1 137 1 61 1 341 1 301 1 343 1 212 1 258 1 233 1 169 1 289 1 262 3 19 1 21 1 50 1 175 1 306 1 197 2 52 1 198 1 378 1 293 1 224 1 
328 1 3 1 203 1 57 1 120 1 207 1 341 21 255 1 212 4 64 1 258 5 72 1 260 1 73 1 172 1 262 41 19 3 21 3 80 4 306 4 357 4 274 1 227 6 185 1 283 2 144 3 43 1 287 1 239 1 289 4 321 3 241 1 320 1 50 5 322 1 290 1 197 20 52 3 198 3 378 7 201 1 379 4 113 3 
328 1 357 3 3 1 274 1 57 1 203 1 227 8 120 1 185 1 207 2 341 18 255 1 283 2 212 4 64 1 144 3 258 5 43 1 287 1 72 1 73 1 260 1 239 1 289 3 172 1 262 38 19 4 80 4 320 1 21 4 241 1 321 3 322 1 50 4 290 1 197 20 306 4 52 4 198 4 378 7 201 1 379 4 113 4 
328 1 274 1 203 1 227 2 185 1 341 4 283 1 144 1 258 1 73 1 239 1 262 9 19 1 80 1 320 1 21 1 241 1 321 1 50 1 290 1 197 5 52 1 198 1 378 1 201 1 379 1 113 1 
357 3 3 1 57 1 203 1 227 4 296 1 185 1 341 10 255 2 283 1 212 3 64 1 144 1 258 3 289 3 262 19 19 2 80 2 320 1 21 2 241 1 321 1 50 3 197 9 306 3 52 2 198 2 378 6 379 2 113 3 
357 2 57 1 203 1 227 6 120 1 185 2 207 2 341 12 255 1 283 2 212 3 144 2 258 3 43 1 287 1 72 1 260 1 289 1 262 26 19 3 320 1 21 3 241 1 80 2 321 2 322 1 50 2 197 14 306 3 52 3 198 3 378 2 379 4 113 1 
105 1 377 1 280 1 124 1 275 1 132 1 326 1 242 1 130 1 284 1 
271 1 13 1 
377 1 280 1 82 1 275 1 326 1 342 1 130 1 308 1 284 1 
275 1 132 1 6 1 295 1 79 1 334 1 280 1 377 1 281 1 22 1 124 1 51 2 326 1 354 1 242 1 188 1 130 1 284 1 
275 1 132 1 6 1 295 1 79 1 334 1 280 1 377 1 281 1 22 1 124 1 51 2 326 1 354 1 242 1 188 1 130 1 284 1 
275 1 132 1 6 1 295 1 79 1 334 1 280 1 377 1 281 1 22 1 124 1 51 2 326 1 354 1 242 1 188 1 130 1 284 1 
298 1 307 1 259 1 
298 1 307 1 259 1 
300 1 55 1 
298 1 300 1 55 1 
173 1 348 1 
271 1 88 1 275 1 276 1 5 2 334 1 137 2 280 1 281 1 301 2 13 1 284 1 348 1 169 2 77 1 78 1 194 1 79 1 173 1 377 1 175 2 51 1 354 1 326 1 292 1 130 1 28 1 
307 1 259 1 
298 1 300 1 55 1 
245 1 311 1 180 1 90 2 91 1 277 1 5 2 227 2 135 2 58 1 121 1 137 2 365 2 138 1 301 2 341 1 285 1 372 1 165 1 167 1 216 2 262 2 19 1 21 1 352 1 176 1 197 1 52 1 198 1 26 1 293 1 
285 1 90 2 134 1 145 1 247 1 135 2 192 1 58 1 229 1 49 1 128 1 365 2 323 2 96 1 230 1 314 1 222 1 29 1 102 1 
285 1 163 1 90 1 145 1 247 1 135 1 192 1 58 1 229 1 49 1 128 1 365 1 323 2 230 1 222 1 29 1 102 1 
285 1 63 1 90 1 44 1 91 1 277 1 134 1 303 1 135 1 58 1 76 1 364 1 365 1 230 1 
285 1 90 1 134 1 145 1 247 1 135 1 192 1 58 1 229 1 49 1 128 1 365 1 323 2 96 1 230 1 222 1 29 1 102 1 
98 1 
213 1 4 1 104 1 6 1 304 1 146 1 35 1 
213 1 190 1 273 1 181 1 6 2 104 1 33 1 304 1 318 1 193 1 79 1 252 1 281 1 123 1 148 1 254 1 112 1 
243 2 244 2 4 1 6 8 9 2 204 1 58 3 251 1 252 6 123 3 60 2 208 3 339 2 254 4 209 6 256 2 212 2 213 8 258 2 350 6 304 2 76 1 217 1 79 5 221 2 306 2 357 2 273 4 312 2 90 3 91 10 277 3 360 1 135 3 363 1 37 2 281 5 365 3 139 2 314 1 99 3 371 1 285 4 189 2 104 9 146 1 318 4 376 2 193 4 148 12 50 2 196 1 199 2 112 5 
357 2 273 2 360 1 6 5 9 2 120 1 37 1 252 3 281 1 123 1 139 1 254 2 209 5 212 2 213 5 144 1 258 2 43 1 350 5 287 1 351 1 104 8 72 1 191 1 260 1 318 2 304 2 193 2 79 1 80 1 321 1 148 6 50 2 306 2 112 1 
273 1 32 1 5 1 9 2 154 1 278 1 37 1 137 1 281 1 254 1 301 1 231 1 368 1 213 2 258 2 71 1 104 2 239 1 169 1 318 1 193 1 79 1 50 1 175 1 290 1 27 1 150 1 201 1 
213 1 4 1 273 1 6 1 104 1 146 1 318 1 304 1 193 1 254 1 
212 2 357 2 213 5 258 2 350 5 6 5 104 5 9 2 376 1 37 1 252 5 148 10 50 2 306 2 209 5 
79 1 281 1 123 1 6 1 112 1 304 1 
273 1 90 4 91 1 277 1 182 1 360 2 204 1 135 4 58 1 155 1 364 1 123 2 281 3 365 4 139 2 39 1 254 2 160 1 285 1 213 2 67 1 104 2 303 1 318 2 76 2 193 2 217 2 79 3 112 4 
87 1 330 1 311 1 32 2 180 1 90 1 277 1 91 1 5 2 227 2 154 1 135 1 58 1 137 3 336 1 365 1 208 1 125 1 341 1 301 3 285 1 165 1 169 2 76 1 194 1 262 1 19 1 21 1 175 2 52 1 198 1 223 1 
213 2 274 1 273 1 350 1 104 1 6 2 360 1 318 1 304 1 193 1 252 1 148 2 139 1 254 1 209 1 
226 1 326 1 284 1 
226 1 326 1 284 1 
348 1 132 1 326 1 103 1 284 1 
226 1 326 1 284 1 
329 1 326 1 284 1 
329 1 326 1 284 1 
329 1 326 1 284 1 
326 1 284 1 
377 1 130 1 
328 1 274 1 203 1 227 2 120 1 341 3 144 1 258 1 73 1 239 1 262 7 19 1 321 1 80 1 21 1 50 1 290 1 197 4 52 1 198 1 378 1 201 1 113 1 
328 1 274 1 203 1 227 4 120 1 341 4 212 1 64 1 144 1 258 2 73 1 239 1 289 1 262 10 19 2 80 2 21 2 321 1 50 1 195 1 290 1 197 6 306 1 52 2 198 2 378 2 201 1 113 1 
328 1 357 2 274 1 203 1 227 6 120 1 207 1 341 9 212 2 144 1 258 3 43 1 287 1 72 1 73 1 260 1 239 1 289 1 262 18 19 3 321 1 80 1 21 3 50 3 195 1 290 1 197 9 306 2 52 3 198 3 378 3 201 1 113 2 
328 1 357 1 274 1 203 1 227 6 120 1 207 1 341 6 212 2 144 1 258 3 43 1 287 1 72 1 73 1 260 1 239 1 289 2 262 16 19 3 321 1 80 1 21 3 50 2 195 1 290 1 197 10 306 2 52 3 198 3 378 4 201 1 113 2 
328 1 274 1 203 1 227 2 120 1 341 3 144 1 258 1 73 1 239 1 262 7 19 1 321 1 80 1 21 1 50 1 290 1 197 4 52 1 198 1 378 1 201 1 113 1 
212 2 357 2 144 1 258 2 43 1 287 1 72 1 203 1 260 1 227 2 289 1 120 1 262 12 19 1 21 1 80 1 321 1 50 2 306 2 197 6 52 1 198 1 341 6 378 2 113 1 
328 1 357 1 274 1 203 1 227 8 120 1 207 2 341 7 212 2 144 1 258 3 43 1 287 1 72 1 73 1 260 1 239 1 289 1 262 17 19 4 80 1 21 4 321 1 50 2 195 1 290 1 197 10 306 2 52 4 198 4 378 3 201 1 113 2 
357 2 3 1 203 1 227 8 120 1 207 2 341 7 212 3 144 1 258 3 43 1 287 1 72 1 260 1 289 3 262 16 19 4 80 1 21 4 321 1 50 2 197 9 306 3 52 4 198 4 378 6 113 3 
328 1 258 1 73 2 239 1 289 3 262 7 50 1 290 3 197 3 341 4 378 6 201 3 113 3 
328 1 357 1 3 1 274 1 203 1 227 8 120 1 207 2 341 7 212 2 144 1 258 3 43 1 287 1 72 1 73 1 260 1 239 1 289 1 262 17 19 4 80 1 21 4 321 1 50 2 290 1 197 10 306 2 52 4 198 4 378 3 201 1 113 2 
328 1 274 1 258 1 227 4 73 1 239 1 289 1 262 7 19 2 21 2 50 1 207 1 290 1 197 4 52 2 198 2 341 3 378 2 201 1 113 1 
328 1 274 1 258 1 73 1 239 1 35 1 262 5 50 1 290 1 197 3 341 2 378 1 201 1 113 1 
212 1 357 1 258 1 227 2 289 1 262 4 19 1 21 1 50 1 195 1 306 1 197 2 52 1 198 1 341 2 378 2 113 1 
212 1 357 1 64 1 144 1 258 1 289 1 262 7 80 2 321 1 50 1 197 3 306 1 341 4 378 2 113 1 
328 1 357 2 274 1 118 1 227 2 207 1 38 1 341 8 212 2 64 1 258 3 73 1 239 1 289 1 262 17 19 1 321 2 80 2 21 1 50 3 290 1 306 2 197 9 52 1 198 1 378 3 201 1 113 2 
262 1 80 1 341 1 
262 1 321 1 197 1 
212 1 357 1 258 1 227 2 376 1 289 1 262 6 19 1 21 1 50 1 195 1 306 1 197 3 52 1 198 1 341 3 378 3 113 2 
212 2 357 2 144 1 258 2 43 1 287 1 72 1 203 1 260 1 227 2 289 1 120 1 262 12 19 1 21 1 80 1 321 1 50 2 306 2 197 6 52 1 198 1 341 6 378 2 113 1 
258 1 239 1 289 1 262 6 50 1 290 1 197 3 341 3 378 2 201 1 113 1 
328 1 73 1 227 2 289 1 262 3 19 1 20 1 21 1 207 1 290 1 197 1 52 1 198 1 341 2 378 2 201 1 113 1 
258 2 239 1 289 3 262 12 50 2 290 2 197 6 341 6 368 1 378 6 201 2 113 3 
258 1 203 1 227 2 289 1 262 2 19 1 21 1 306 1 197 2 52 1 198 1 378 1 
212 1 357 1 258 1 203 1 227 2 289 1 262 4 19 1 21 1 50 1 306 1 197 2 52 1 198 1 341 2 378 2 113 1 
3 1 203 1 227 6 289 1 262 3 19 3 20 1 21 3 207 1 290 1 197 1 52 3 198 3 341 2 378 2 201 1 113 1 
328 1 357 2 3 1 274 1 203 1 227 8 207 1 341 10 212 2 41 1 144 1 258 3 234 1 166 1 73 1 239 1 289 2 262 21 19 4 80 3 21 4 321 3 50 3 195 1 290 1 197 11 306 2 52 4 198 4 378 4 201 1 113 2 
194 1 137 1 220 1 279 1 109 1 5 1 301 1 
194 1 86 1 137 1 220 1 279 1 109 1 187 1 5 1 301 1 215 1 115 1 36 1 
285 1 364 1 365 1 90 1 91 1 277 1 303 1 135 1 58 1 76 1 35 1 
285 1 375 1 90 1 91 1 277 1 5 1 169 1 135 1 76 1 58 1 194 1 137 2 336 1 175 1 365 1 208 1 125 1 301 2 
90 1 277 2 91 3 5 2 135 1 58 1 137 2 336 1 365 1 208 2 125 1 339 1 301 2 211 1 285 1 375 1 317 1 169 2 194 1 217 1 175 1 221 1 27 1 
90 2 277 2 91 3 5 2 135 2 58 1 205 1 137 2 336 1 365 2 208 2 339 1 301 2 211 1 285 1 375 1 315 1 317 1 169 2 194 1 217 1 175 1 221 1 27 1 
285 1 189 1 244 1 90 3 277 1 91 4 6 1 315 1 135 3 76 1 304 1 305 1 58 1 79 2 217 1 281 2 365 3 221 1 208 1 339 1 24 1 99 1 112 1 
243 1 285 1 189 1 244 1 90 3 277 1 91 4 6 1 315 1 135 3 76 1 304 1 58 1 79 2 217 1 281 2 365 3 221 1 208 1 339 1 99 1 112 1 
285 1 18 1 365 1 90 1 135 1 58 1 
1 1 177 1 285 3 152 1 90 7 277 2 91 3 135 6 216 1 76 2 58 2 18 1 219 1 147 1 365 7 208 1 26 1 314 1 25 1 102 1 371 1 
328 1 330 1 274 1 311 2 180 2 90 1 91 1 277 1 5 1 227 4 135 1 58 1 137 2 336 1 365 1 208 1 125 1 314 1 341 2 301 2 285 1 372 1 375 1 258 1 73 1 316 1 239 1 169 1 194 1 262 5 19 2 21 2 50 1 175 1 290 1 197 3 52 2 84 1 198 2 378 1 293 1 201 1 223 1 113 1 
243 1 244 1 4 1 273 2 312 1 90 1 91 2 6 1 135 1 204 1 281 3 123 1 365 1 254 2 99 1 256 1 189 1 213 1 104 1 304 1 146 1 76 1 318 2 193 2 79 3 199 1 292 1 112 2 
285 2 244 1 90 2 277 1 91 2 135 2 58 1 363 1 18 1 365 2 208 1 314 1 371 1 
285 1 90 4 277 1 91 1 303 1 315 1 135 4 76 1 58 1 364 1 365 4 314 1 294 1 
177 1 285 2 69 1 90 2 277 1 91 1 228 1 135 2 58 1 217 1 365 2 208 1 25 1 12 1 
285 1 128 1 365 1 323 1 90 1 222 1 247 1 135 1 58 1 76 1 
285 1 365 2 90 2 91 1 277 1 26 1 314 1 167 1 135 2 58 1 102 1 
285 2 152 1 90 5 277 2 91 3 303 1 135 4 76 1 58 2 217 1 364 1 219 1 365 5 314 1 26 1 294 1 
285 2 31 1 90 5 277 2 91 3 303 1 135 4 76 1 58 2 217 1 364 1 219 1 365 5 314 1 26 1 294 1 
285 1 375 1 90 1 91 1 277 1 5 1 169 1 135 1 76 1 58 1 194 1 205 1 137 2 336 1 175 1 365 1 208 1 301 2 
1 1 177 1 285 2 90 1 277 1 91 1 135 1 58 1 217 1 365 1 208 1 25 1 371 1 
137 1 245 1 11 1 176 1 5 1 301 1 168 1 158 1 121 1 
95 1 11 1 23 1 
194 1 11 1 168 1 158 1 10 1 
189 1 286 1 6 1 317 1 168 2 10 2 304 1 194 1 79 2 319 1 17 1 281 2 95 1 11 1 23 1 27 1 292 1 158 2 211 1 
108 1 164 1 367 1 35 1 
373 1 108 1 218 1 164 1 68 1 367 1 92 1 
15 1 361 1 92 1 
373 1 30 1 2 1 68 1 164 1 92 3 157 1 108 1 218 3 353 2 253 1 367 1 
373 1 108 1 218 2 164 1 68 1 367 1 16 1 202 1 92 2 
225 1 373 1 157 1 108 1 218 1 323 1 68 1 92 1 222 1 237 1 192 1 
373 1 157 1 108 1 218 1 68 1 367 1 92 1 
373 1 157 1 218 1 164 1 68 1 367 2 92 1 
373 2 65 1 68 2 235 1 92 2 157 1 108 1 218 2 367 1 264 1 
225 1 373 1 178 1 164 1 68 1 16 2 92 3 157 1 218 3 108 2 367 1 325 1 369 1 
373 1 40 1 164 1 68 1 16 1 92 2 192 1 157 1 108 1 218 2 128 1 323 2 367 1 222 1 29 1 
225 1 373 2 164 1 68 2 16 2 92 4 202 1 170 1 157 1 218 4 108 2 367 1 369 1 
373 1 157 1 108 1 218 1 164 1 68 1 367 1 92 1 
225 1 373 1 30 1 2 1 164 2 68 1 16 2 92 4 218 4 108 3 353 1 367 2 369 1 14 1 
373 1 68 1 164 1 16 1 92 2 34 1 157 1 108 1 218 2 174 1 367 1 356 1 
373 1 30 2 2 1 68 1 164 1 92 3 333 1 157 1 108 1 218 3 353 2 367 1 
108 2 291 1 7 2 62 1 
373 1 157 1 218 1 68 1 288 1 92 1 
373 1 157 1 108 1 218 2 178 1 164 1 68 1 367 1 16 1 92 2 
101 1 
373 1 157 1 108 1 218 1 164 1 68 1 367 1 92 1 
373 1 178 1 68 1 164 1 16 1 92 3 157 1 218 3 108 1 353 1 367 1 
225 1 108 1 369 1 14 1 
108 1 367 1 

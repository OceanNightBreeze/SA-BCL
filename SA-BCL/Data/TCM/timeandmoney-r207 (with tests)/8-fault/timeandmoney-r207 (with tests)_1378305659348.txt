#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (162,332) (51,365) (51,365) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (162,332) (51,365) (51,365) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (162,332) (51,365) (51,365) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (162,332) (51,365) (51,365) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 143 290 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (162,332) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (162,332) 88 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (162,332) 88 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 54 (45,145) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 54 (45,145) (45,145) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 54 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 54 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 53 210 331 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 201 354 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 201 354 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 201 354 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 201 354 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 201 354 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 54 (45,145) (45,145) 70 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 54 (45,145) (45,145) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7110 | stmt -> ;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
217 1 365 1 143 1 192 1 263 2 51 1 117 1 332 1 122 1 69 2 223 1 41 1 162 1 109 1 43 1 324 1 
365 1 217 1 143 1 192 1 263 2 51 1 117 1 332 1 122 1 69 2 223 1 41 1 162 1 109 1 43 1 324 1 
365 1 217 1 143 1 192 1 263 2 51 1 117 1 332 1 122 1 69 2 223 1 41 1 162 1 109 1 43 1 324 1 
365 1 217 1 143 1 192 1 263 2 51 1 117 1 332 1 122 1 69 2 223 1 41 1 162 1 109 1 43 1 324 1 
217 1 143 1 192 1 263 2 11 1 36 1 219 1 290 1 122 1 69 2 185 1 41 1 18 1 109 1 
152 1 114 1 143 1 11 1 192 1 263 2 117 1 77 1 122 1 69 2 223 1 41 1 242 1 109 1 187 1 324 1 
69 1 122 1 263 1 192 1 41 1 162 1 
88 1 307 1 69 2 122 1 263 2 192 1 41 1 162 1 18 1 
88 1 307 1 69 2 122 1 263 2 192 1 41 1 162 1 18 1 
91 1 191 1 67 1 
91 1 285 1 203 2 
305 2 172 2 268 2 167 2 371 2 155 1 57 1 179 2 
44 1 312 1 46 1 130 1 261 1 155 1 87 1 179 2 289 1 267 1 339 1 268 2 161 2 294 1 293 1 269 1 363 2 246 1 247 1 167 2 74 1 75 1 57 1 97 1 305 3 278 1 222 2 100 1 370 2 172 3 121 2 123 1 371 2 149 1 127 1 310 1 311 1 
305 1 45 1 54 1 172 1 268 1 167 1 371 1 57 1 179 1 
91 1 271 1 83 1 272 1 273 1 191 1 23 1 328 1 64 1 179 1 305 1 14 1 172 1 147 1 
91 1 271 1 83 2 273 1 167 1 191 1 64 2 328 1 179 1 305 1 14 1 172 1 268 1 147 1 371 1 
270 1 340 1 83 1 78 1 64 1 
270 1 188 1 91 1 340 1 83 2 191 1 64 2 336 1 
340 1 83 1 64 1 
270 1 45 1 83 1 167 1 64 1 57 1 145 1 179 1 305 1 54 1 172 1 268 1 371 1 
91 1 
270 1 188 1 91 1 340 1 83 2 191 1 348 1 64 2 
270 2 256 2 351 1 188 1 91 1 83 5 300 2 191 1 142 1 314 1 132 1 64 5 355 1 133 1 221 1 340 2 58 1 224 2 281 1 
155 1 67 1 
167 1 155 2 179 2 235 1 305 2 172 2 268 1 108 1 371 1 
207 1 165 1 4 1 
46 1 130 1 154 1 155 1 75 1 289 1 97 1 305 1 222 1 339 1 370 1 172 1 121 1 123 1 293 1 310 1 
244 2 245 1 84 1 167 1 23 1 155 1 177 1 86 1 179 5 235 1 305 5 172 5 268 4 371 4 
305 1 54 1 172 1 268 1 371 1 179 1 
165 1 245 1 244 1 46 1 130 1 75 1 179 1 97 1 289 1 305 2 222 1 339 1 370 1 172 2 268 1 121 1 123 1 371 1 293 1 310 1 
305 3 244 1 172 3 268 3 167 1 371 3 155 1 179 3 
305 1 54 1 172 1 268 1 371 1 179 1 
305 1 271 1 172 1 268 1 167 1 108 1 371 1 179 1 235 1 
44 1 46 1 130 1 83 1 261 1 155 1 64 1 87 1 235 1 179 3 289 1 267 1 339 1 268 3 161 1 293 1 359 1 269 1 89 1 363 2 244 1 245 1 271 1 273 1 246 1 167 2 74 1 328 1 75 1 57 1 97 1 305 4 278 1 222 1 14 1 370 1 172 4 147 1 121 1 123 1 371 3 127 1 310 1 311 1 
305 2 244 1 172 2 268 1 23 1 371 1 155 1 177 1 179 2 
245 1 244 2 91 1 83 1 271 1 273 1 167 1 64 1 328 1 235 1 179 3 305 3 14 1 172 3 268 3 147 1 371 3 186 1 359 1 
207 1 165 1 244 1 167 1 235 1 179 2 305 2 172 2 268 2 371 2 
46 1 130 1 155 1 75 1 289 1 97 1 305 1 222 1 370 1 339 1 172 1 121 1 123 1 293 1 310 1 
130 1 155 1 329 1 75 1 289 1 97 1 305 1 222 1 370 1 339 1 172 1 56 1 121 1 123 1 310 1 
207 2 44 1 261 1 65 1 87 2 267 1 319 1 356 1 161 4 183 1 137 1 4 2 294 2 269 1 243 1 361 1 165 2 363 2 112 1 194 1 38 1 278 1 254 1 311 1 
305 1 14 1 271 1 172 1 268 1 286 1 371 1 179 1 
178 1 350 1 
178 1 350 1 
32 1 119 1 
32 1 119 1 
32 1 119 1 
178 1 7 1 350 1 
37 1 178 1 350 1 
32 1 343 1 178 2 180 1 119 1 350 2 
178 1 7 1 350 1 
178 1 7 1 350 1 
292 1 178 1 350 1 
292 1 178 1 350 1 
292 1 178 1 350 1 
129 1 83 1 22 1 234 1 287 1 155 1 64 1 178 1 66 1 179 2 268 2 136 1 322 1 304 1 37 1 305 2 99 1 172 2 102 1 371 2 17 1 349 1 173 1 350 1 
362 1 91 1 83 2 129 3 335 1 326 1 116 2 304 2 64 2 178 2 180 1 66 1 99 2 55 1 160 1 349 2 17 2 323 1 350 2 
217 1 143 1 109 1 
114 1 143 1 109 1 
266 1 230 1 217 2 5 1 114 1 109 3 
266 1 230 1 217 1 327 1 114 1 109 2 
266 2 230 1 217 1 114 1 109 2 
256 1 258 1 351 1 285 1 83 5 353 1 287 1 314 2 85 1 64 5 65 1 317 2 340 1 136 1 138 1 243 1 270 4 188 1 189 1 91 2 300 1 191 1 274 2 142 3 194 1 277 2 102 1 224 1 203 3 228 1 254 1 280 1 
256 2 351 1 285 3 83 9 353 3 314 6 64 9 65 3 133 1 317 6 134 1 340 6 136 4 138 2 295 5 243 3 270 7 188 1 189 1 91 5 248 1 113 1 300 2 191 1 142 8 344 1 194 3 277 6 98 1 78 5 224 2 203 9 308 1 228 2 254 3 
256 1 285 2 83 3 353 1 314 2 85 1 64 3 65 1 133 1 317 2 136 1 138 1 243 1 270 2 91 3 300 1 191 1 142 3 274 1 194 1 277 2 224 1 203 4 228 1 254 1 280 1 
256 1 285 3 83 4 353 2 314 4 64 4 85 1 65 2 133 1 317 4 136 2 138 1 243 2 270 3 91 4 248 1 113 1 300 1 191 1 142 5 274 2 194 2 277 4 98 1 224 1 203 7 228 1 254 2 280 1 
339 1 209 1 67 1 
339 1 156 1 
204 1 
339 1 130 1 123 1 
339 1 249 1 
339 1 123 1 
209 2 339 3 130 1 48 1 141 1 123 1 
299 1 21 2 366 1 303 1 105 1 276 1 87 3 194 1 316 1 250 1 369 1 319 2 183 3 161 7 294 4 254 1 372 1 
299 1 21 2 366 1 303 1 105 1 276 1 87 3 194 1 316 1 250 1 369 1 319 2 183 3 161 7 294 4 254 1 372 1 
299 1 21 2 366 1 303 1 105 1 276 1 87 3 194 1 316 1 250 1 369 1 319 2 183 3 161 7 202 1 294 4 254 1 372 1 
44 1 174 4 20 1 21 3 353 3 105 5 65 3 87 15 316 1 267 1 319 5 27 1 161 31 183 10 294 16 296 1 269 1 243 3 363 2 299 2 190 1 366 1 303 1 193 1 276 2 194 4 195 3 250 2 196 1 369 2 229 1 254 4 372 1 311 1 
44 2 21 2 105 1 87 4 316 1 267 2 319 3 27 1 161 9 183 4 294 5 269 2 298 1 363 4 299 1 303 1 276 1 194 1 250 1 369 1 254 1 79 1 372 1 311 2 
103 1 263 2 106 1 211 1 213 1 182 1 69 2 5 1 242 1 109 2 187 1 33 1 342 1 217 1 10 1 35 1 114 1 143 1 11 1 192 1 75 1 97 1 222 1 370 1 121 1 122 1 223 1 41 1 59 1 18 1 
263 3 52 1 106 1 213 1 182 1 69 3 5 1 242 1 109 2 187 1 33 1 342 1 217 1 10 1 35 1 114 1 143 1 11 1 192 1 94 1 75 1 97 1 222 1 370 1 15 1 121 1 122 1 223 1 59 1 18 2 
263 2 106 1 213 1 182 1 69 2 5 1 242 1 109 2 187 1 33 1 10 1 217 1 114 1 143 1 11 1 94 1 75 1 97 1 222 1 370 1 15 1 223 1 121 1 59 1 18 2 
259 1 263 1 288 1 52 1 106 2 289 1 2 1 339 1 182 2 159 1 69 1 10 2 92 1 192 1 168 1 75 1 97 1 222 1 370 1 121 1 122 1 223 2 123 1 
263 1 106 1 211 1 213 1 182 1 69 1 5 1 109 2 33 1 342 1 217 1 10 1 35 1 114 1 143 1 192 1 94 1 75 1 97 1 222 1 370 1 121 1 122 1 223 1 41 1 59 1 
347 1 
128 2 285 2 83 5 1 1 179 1 2 1 289 2 238 1 53 1 239 1 339 1 340 6 139 1 6 2 188 3 91 2 300 1 191 1 142 2 12 1 97 1 305 1 13 2 14 1 346 1 147 1 203 2 256 1 351 1 151 1 63 2 23 1 262 1 314 2 64 5 26 2 214 4 72 1 271 1 272 1 273 1 168 1 328 1 75 1 330 2 118 2 222 2 171 1 370 2 172 1 121 2 123 1 224 1 228 1 227 1 
83 3 128 1 23 1 64 3 179 1 1 1 238 1 239 1 214 2 340 2 188 1 271 1 273 1 272 1 328 1 305 1 171 1 14 1 172 1 147 1 348 1 227 1 
83 3 63 1 23 1 64 3 179 1 1 1 238 1 239 1 340 1 214 3 188 1 271 1 91 1 273 1 272 1 191 1 328 1 305 1 171 1 14 1 172 1 147 1 348 1 227 1 
83 3 128 1 63 1 23 1 64 3 179 1 1 1 238 1 239 1 214 3 340 2 188 1 271 1 91 1 273 1 272 1 191 1 328 1 330 1 305 1 171 1 14 1 172 1 147 1 348 1 227 1 
284 1 128 4 83 5 285 2 232 1 1 1 179 1 238 1 239 1 53 1 340 7 6 2 188 3 91 5 300 1 191 5 142 1 305 1 14 1 13 2 147 1 348 1 148 1 256 1 351 1 63 4 23 1 262 1 314 1 64 5 210 1 214 6 26 2 271 1 273 1 272 1 328 1 330 4 118 2 171 1 172 1 225 1 224 1 227 1 
83 4 285 2 128 2 179 1 1 1 238 1 239 1 53 1 340 4 139 1 6 2 188 2 91 2 300 1 191 1 142 1 305 1 14 1 13 2 147 1 203 2 256 1 351 1 63 2 23 1 262 1 314 1 64 4 214 4 26 2 271 1 273 1 272 1 328 1 118 2 330 2 171 1 172 1 224 1 227 1 
256 1 351 1 128 2 285 2 83 4 63 2 23 1 262 1 314 1 64 4 210 1 179 1 1 1 238 1 53 1 239 1 340 4 26 2 214 4 6 2 188 2 91 1 271 1 273 1 272 1 300 1 191 1 142 1 328 1 330 2 118 2 305 1 171 1 13 2 14 1 172 1 147 1 224 1 225 1 227 1 148 1 
256 1 351 1 128 2 285 2 83 4 63 2 23 1 262 1 314 1 64 4 210 1 179 1 1 1 238 1 53 1 239 1 340 4 26 2 214 4 6 2 188 2 91 1 271 1 273 1 272 1 300 1 191 1 142 1 328 1 330 2 118 2 305 1 171 1 13 2 14 1 172 1 147 1 224 1 225 1 227 1 148 1 
83 2 23 1 64 2 210 1 179 1 1 1 238 1 239 1 53 1 26 1 214 2 6 1 271 1 273 1 272 1 328 1 305 1 331 1 171 1 14 1 172 1 147 1 227 1 
256 1 351 1 285 2 83 4 128 3 63 3 232 1 23 1 262 1 314 1 64 4 210 1 179 1 1 1 238 1 53 1 239 1 26 2 214 5 340 5 6 2 188 2 91 1 271 1 273 1 272 1 300 1 191 1 142 1 328 1 118 2 330 3 305 1 171 1 13 2 14 1 172 1 147 1 224 1 225 1 148 1 227 1 
256 1 351 1 285 2 83 4 128 3 63 3 232 1 23 1 262 1 314 1 64 4 210 1 179 1 1 1 238 1 53 1 239 1 26 2 214 5 340 5 6 2 188 2 91 1 271 1 273 1 272 1 300 1 191 1 142 1 328 1 118 2 330 3 305 1 171 1 13 2 14 1 172 1 147 1 224 1 225 1 148 1 227 1 
83 4 128 2 179 1 1 1 238 1 239 1 53 1 340 4 139 1 6 2 188 2 91 1 300 1 191 1 142 1 305 1 14 1 147 1 203 2 256 1 351 1 63 2 23 1 314 1 64 4 157 2 214 4 26 2 320 2 271 1 273 1 272 1 328 1 330 2 171 1 172 1 224 1 227 1 373 1 
207 1 44 1 21 1 261 1 155 2 67 1 87 3 316 1 267 1 319 2 183 2 161 6 4 1 294 3 269 1 165 1 363 2 303 1 276 1 38 1 194 1 250 1 278 1 254 1 372 1 311 1 
207 4 174 3 44 2 353 2 261 1 155 1 105 1 65 1 87 6 107 1 338 1 158 1 267 2 319 1 183 2 161 14 4 11 294 8 269 2 243 2 216 1 165 11 363 4 247 1 190 1 74 1 194 2 195 3 278 2 229 1 206 1 254 1 311 2 
207 1 19 1 44 1 46 1 130 1 154 1 261 1 155 1 179 1 87 1 289 1 267 1 339 1 268 1 161 2 293 1 294 1 241 1 269 1 244 1 245 1 363 2 247 1 74 1 75 1 97 1 305 2 278 1 222 1 370 1 172 2 121 1 123 1 371 1 124 1 206 1 310 1 311 1 
44 3 46 2 130 2 233 2 87 10 179 1 289 1 339 2 183 5 4 7 293 2 294 10 341 1 243 2 245 1 244 1 247 1 303 1 194 3 97 2 250 1 305 3 199 2 16 1 206 1 205 2 254 3 310 2 311 3 207 7 21 1 353 2 261 3 155 2 105 1 65 2 316 1 267 3 319 4 268 1 161 20 269 3 165 7 363 6 74 1 115 2 75 2 276 1 278 3 222 1 370 1 172 3 121 1 123 2 371 1 127 2 372 1 
44 2 312 2 103 1 261 2 179 1 87 1 289 2 2 1 181 1 267 2 339 3 268 1 161 2 294 1 269 2 9 1 244 1 363 4 90 1 247 1 74 1 168 1 94 1 75 2 218 1 38 1 97 2 305 1 278 2 198 1 222 7 370 8 251 1 172 1 121 8 123 2 371 1 150 1 311 2 
207 1 44 1 353 1 261 1 65 1 235 1 179 1 87 2 267 1 319 1 268 1 183 1 161 3 4 1 294 1 269 1 243 1 71 1 165 1 363 2 167 1 194 1 305 1 278 1 172 1 371 1 206 1 254 1 311 1 
207 1 165 1 44 1 363 2 261 1 105 1 38 1 194 1 278 1 267 1 356 1 183 1 161 2 4 1 294 2 269 1 311 1 243 1 
207 1 165 1 44 1 363 2 112 1 261 1 65 1 38 1 87 2 278 1 267 1 319 1 183 1 161 2 4 1 254 1 269 1 311 1 
207 2 44 1 353 1 261 1 105 1 65 1 87 2 267 1 319 1 161 4 183 2 4 2 294 2 269 1 243 1 165 2 363 2 194 1 38 1 278 1 254 1 311 1 
207 1 165 1 44 1 363 2 261 1 105 1 194 1 181 1 278 1 267 1 356 1 183 1 161 2 4 1 294 2 269 1 311 1 243 1 
207 1 165 1 44 1 363 2 112 1 261 1 65 1 87 2 181 1 278 1 267 1 319 1 183 1 161 2 4 1 254 1 269 1 311 1 
207 2 44 1 353 1 261 1 105 1 65 1 87 2 181 1 267 1 319 1 161 4 183 2 4 2 294 2 269 1 243 1 165 2 363 2 194 1 278 1 254 1 311 1 
207 2 165 2 44 1 363 2 353 1 261 1 65 1 105 1 87 2 194 1 278 1 267 1 319 1 183 2 161 4 4 2 294 2 254 1 269 1 311 1 243 1 
44 1 46 1 130 1 261 1 155 1 87 1 289 1 267 1 339 1 161 2 294 1 293 1 269 1 363 2 247 1 74 1 75 1 97 1 305 1 278 1 222 1 370 1 172 1 121 1 123 1 127 1 310 1 311 1 
44 1 130 1 261 1 155 1 87 1 289 1 267 1 339 1 161 2 56 1 294 1 269 1 363 2 247 1 74 1 75 1 329 1 368 1 97 1 305 1 278 1 222 1 370 1 172 1 121 1 123 1 310 1 311 1 
207 2 44 1 353 1 261 1 105 1 65 1 87 2 267 1 319 1 161 4 183 2 4 2 294 2 269 1 243 1 165 2 363 2 194 1 278 1 206 1 254 1 311 1 
207 2 44 1 46 1 130 1 103 1 353 1 261 1 65 1 105 1 87 2 267 1 339 1 319 1 183 2 161 4 4 2 294 2 293 1 269 1 243 1 165 2 363 2 115 1 75 1 194 1 97 1 305 1 278 1 222 1 370 1 172 1 121 1 123 1 254 1 127 1 310 1 311 1 
207 1 44 1 353 1 261 1 65 1 105 1 87 1 235 1 179 1 267 1 268 1 183 1 161 3 4 1 294 2 269 1 243 1 165 1 363 2 167 1 194 1 305 1 278 1 172 1 252 1 371 1 254 1 206 1 311 1 
298 1 267 1 44 1 363 2 24 1 201 1 354 1 269 1 311 1 164 1 
298 1 267 1 44 1 363 2 24 1 201 1 354 1 269 1 311 1 164 1 
298 1 267 1 44 1 363 2 24 1 201 1 354 1 269 1 311 1 164 1 
298 1 267 1 44 1 363 2 24 1 201 1 354 1 269 1 311 1 164 1 
298 1 267 1 44 1 363 2 24 1 201 1 354 1 269 1 311 1 164 1 
99 1 335 1 160 1 17 1 349 1 304 1 178 1 180 1 60 1 350 1 
322 1 37 1 
325 1 99 1 140 1 352 1 17 1 349 1 304 1 178 1 350 1 
47 1 7 1 
8 1 343 1 292 1 
362 1 91 1 83 1 129 2 335 1 326 1 116 1 64 1 304 1 178 1 180 1 66 1 99 1 55 1 160 1 349 1 17 1 350 1 
362 1 91 1 83 1 129 2 335 1 326 1 116 1 64 1 304 1 178 1 180 1 66 1 99 1 55 1 160 1 349 1 17 1 350 1 
362 1 91 1 83 1 129 2 335 1 326 1 116 1 64 1 304 1 178 1 180 1 66 1 99 1 55 1 160 1 349 1 17 1 350 1 
47 1 343 1 7 1 
47 1 343 1 7 1 
8 1 292 1 
8 1 343 1 292 1 
22 1 234 1 
83 1 129 1 22 1 234 1 287 1 155 1 64 1 178 1 179 2 240 1 268 2 136 1 322 1 270 1 362 1 116 1 304 1 37 1 305 2 99 1 172 2 102 1 371 2 17 1 349 1 173 1 350 1 
44 1 312 2 131 1 261 1 179 2 87 1 267 1 339 1 25 1 161 2 294 1 269 1 363 2 247 1 74 1 75 1 218 1 169 1 97 1 220 1 305 2 278 1 222 2 370 2 172 2 121 2 123 1 206 1 150 1 311 1 80 1 
166 1 33 1 103 1 217 1 10 1 114 1 35 1 143 1 94 1 75 1 97 1 222 2 370 2 121 2 5 1 253 1 59 1 333 1 109 2 
334 1 33 1 217 1 10 1 114 1 35 1 143 1 94 1 75 1 97 1 222 1 370 1 121 1 5 1 253 1 59 1 109 2 
10 1 49 1 288 1 168 1 75 1 97 1 289 1 2 1 222 1 339 1 370 1 121 1 123 1 333 1 
166 1 33 1 217 1 10 1 114 1 35 1 143 1 94 1 75 1 97 1 222 1 370 1 121 1 5 1 253 1 59 1 333 1 109 2 
93 1 
91 1 191 1 142 1 58 1 314 1 355 1 67 1 
256 1 351 1 285 1 83 1 262 1 314 1 64 1 340 1 188 1 91 2 300 1 191 1 142 1 118 1 13 1 224 1 203 1 
130 3 83 5 285 6 48 1 236 1 289 1 339 10 340 5 297 2 243 2 188 3 91 8 300 4 191 2 142 9 144 2 249 2 12 1 194 2 97 3 58 1 203 12 309 2 205 2 254 2 255 2 256 4 351 4 208 1 209 2 103 1 353 2 314 8 64 5 355 1 156 3 65 2 317 6 163 2 73 1 328 2 75 4 367 3 277 6 39 1 222 3 370 3 40 2 279 2 121 3 226 1 123 3 224 4 228 2 
256 2 257 1 174 1 351 2 83 1 285 3 353 2 314 5 64 1 65 2 337 1 68 1 317 5 340 1 215 1 321 1 358 1 243 2 188 1 91 5 300 2 191 2 142 8 367 1 12 1 194 2 277 5 195 1 40 2 224 2 203 6 228 1 229 1 254 2 282 1 
256 1 351 1 45 1 83 1 314 1 64 1 179 1 54 1 268 1 70 1 300 1 167 1 142 2 276 1 57 1 194 1 145 1 305 1 250 1 172 1 40 2 224 1 371 1 148 1 254 1 372 1 
256 1 351 1 91 1 300 1 191 1 142 1 314 1 355 1 58 1 224 1 
285 5 91 5 353 2 142 5 314 5 367 1 65 2 194 2 277 5 317 5 40 2 203 10 205 1 254 2 243 2 
188 1 91 1 83 1 340 1 191 1 64 1 
256 2 351 1 151 1 83 3 175 1 314 2 64 3 236 1 289 2 2 1 133 1 339 1 340 4 188 2 300 2 275 1 142 2 168 1 75 1 12 2 97 1 39 2 222 4 370 4 346 1 121 4 123 1 224 2 228 2 
44 1 46 1 130 1 261 1 155 1 87 1 179 2 289 1 267 1 339 1 268 2 161 1 293 1 269 1 363 2 246 1 167 2 74 1 75 1 57 1 97 1 305 3 278 1 222 1 370 1 172 3 121 1 123 1 371 2 127 1 310 1 311 1 
256 1 351 1 285 2 91 4 21 1 300 1 191 2 142 1 314 2 12 1 277 2 317 2 224 1 203 4 228 1 
82 1 17 1 349 1 
0 1 160 1 234 1 17 1 349 1 
82 1 17 1 349 1 
82 1 17 1 349 1 
135 1 17 1 349 1 
135 1 17 1 349 1 
135 1 17 1 349 1 
17 1 349 1 
178 1 350 1 
44 2 363 4 21 1 303 1 105 1 276 1 194 1 87 4 316 1 250 1 267 2 319 2 27 1 161 8 183 3 294 4 254 1 372 1 269 2 311 2 
21 1 303 1 276 1 87 3 67 1 194 1 316 1 250 1 319 2 183 2 161 6 294 3 254 1 372 1 
44 1 363 2 31 1 353 1 65 1 105 1 87 2 194 1 267 1 319 1 183 2 161 4 294 2 254 1 269 1 311 1 243 1 
174 2 190 1 353 1 65 1 105 1 87 4 194 1 195 1 319 1 161 7 183 2 294 3 254 1 229 1 243 1 
174 2 44 2 21 1 353 2 105 4 65 2 87 12 316 1 158 1 267 2 319 5 27 2 3 1 183 9 161 23 294 11 269 2 243 2 216 1 363 4 190 1 303 1 276 2 194 3 195 2 250 2 254 3 372 1 311 2 
174 1 161 1 87 1 
161 1 294 1 195 1 
44 1 363 2 31 1 353 1 105 2 65 1 87 3 194 1 267 1 319 2 161 6 183 4 294 3 205 1 254 1 269 1 311 1 243 1 
257 1 174 1 44 1 353 2 105 1 65 2 87 6 337 1 68 1 267 1 319 1 161 12 183 2 215 1 294 6 358 1 269 1 243 2 298 1 363 2 194 2 195 1 229 1 254 2 311 1 
276 1 105 1 194 1 87 3 250 1 319 1 161 6 183 2 294 3 254 1 372 1 
44 1 363 2 303 1 105 1 276 1 87 2 316 1 250 1 267 1 319 1 3 1 27 1 183 2 161 3 294 1 269 1 311 1 
298 1 44 1 363 2 276 2 105 2 87 5 194 2 250 2 267 1 319 3 183 5 161 10 70 1 294 5 254 2 269 1 372 1 311 1 
298 1 44 1 363 2 105 1 194 1 267 1 161 2 183 1 294 2 269 1 311 1 243 1 
298 1 44 1 363 2 353 1 65 1 105 1 87 2 194 1 267 1 319 1 183 2 161 4 294 2 254 1 269 1 311 1 243 1 
298 1 44 3 363 6 276 1 105 1 87 2 250 1 267 3 319 1 27 1 3 1 28 1 161 3 183 2 294 1 269 3 311 3 
174 4 44 5 21 1 353 3 105 5 65 3 87 18 316 1 267 5 319 7 3 1 27 2 28 1 161 34 183 12 294 16 296 1 269 5 243 3 298 1 363 10 31 1 190 1 303 1 193 1 276 3 194 5 195 3 250 3 196 1 229 1 254 5 372 2 311 5 
174 1 44 1 21 1 87 4 316 1 267 1 319 2 161 8 183 2 215 1 294 4 269 1 298 1 363 2 303 1 276 1 194 1 195 1 250 1 254 1 229 1 372 1 311 1 
174 2 44 2 21 1 353 1 105 1 87 5 316 1 267 2 319 2 161 11 183 3 215 1 294 6 269 2 243 1 298 1 363 4 31 1 190 1 303 1 276 1 194 2 195 1 250 1 254 1 229 1 372 1 311 2 
257 1 174 1 44 3 21 1 353 2 105 1 65 2 337 1 87 10 316 1 68 1 267 3 319 3 27 1 161 19 183 4 215 1 294 9 358 1 269 3 243 2 298 1 363 6 31 1 303 1 276 1 194 3 195 1 250 1 229 1 254 3 372 1 311 3 
257 1 174 1 44 3 21 1 353 2 65 1 105 2 87 7 337 1 316 1 68 1 267 3 319 2 27 1 161 17 183 4 215 1 294 10 358 1 269 3 243 2 298 1 363 6 31 1 303 1 276 1 194 3 195 1 250 1 229 1 254 2 372 1 311 3 
174 1 44 1 21 1 87 4 316 1 267 1 319 2 161 8 183 2 215 1 294 4 269 1 298 1 363 2 303 1 276 1 194 1 195 1 250 1 254 1 229 1 372 1 311 1 
257 1 174 1 44 1 353 2 65 2 105 1 87 6 337 1 68 1 267 1 161 12 183 1 215 1 294 6 358 1 269 1 243 2 298 1 363 2 194 2 195 1 229 1 254 2 311 1 
257 1 174 1 44 4 21 1 353 2 105 2 65 1 337 1 87 8 316 1 68 1 267 4 319 3 27 2 161 18 183 5 215 1 358 1 294 10 269 4 243 2 298 1 363 8 31 1 303 1 276 1 194 3 195 1 250 1 229 1 254 2 372 1 311 4 
257 1 174 1 44 4 353 3 105 3 65 2 337 1 87 7 68 1 267 4 319 3 27 2 161 16 28 1 183 6 215 1 358 1 294 9 269 4 243 3 298 1 363 8 194 3 195 1 229 1 254 2 311 4 
303 2 276 3 105 3 87 4 194 1 316 1 250 3 319 3 161 7 183 6 294 3 254 1 372 1 
257 1 174 1 44 4 21 1 353 2 105 1 65 1 337 1 87 8 316 1 68 1 267 4 319 3 27 2 161 18 28 1 183 4 215 1 358 1 294 10 269 4 243 2 298 1 363 8 303 1 276 1 194 3 195 1 250 1 229 1 254 2 372 1 311 4 
305 1 172 1 364 1 23 1 155 1 177 1 179 1 
364 1 23 1 155 1 265 1 315 1 177 1 179 1 305 1 212 1 172 1 125 1 126 1 
222 1 339 1 370 1 121 1 123 1 168 1 75 1 67 1 97 1 2 1 289 1 
244 1 130 1 155 1 75 1 179 1 289 1 97 1 305 2 222 1 339 1 370 1 172 2 268 1 121 1 123 1 371 1 293 1 310 1 
244 1 271 1 130 2 155 1 144 1 75 1 249 1 179 2 97 1 305 2 39 1 222 1 14 1 339 3 370 1 172 2 147 1 268 2 121 1 123 2 371 1 293 1 310 1 
244 1 271 1 130 2 155 1 144 1 75 1 249 1 179 2 97 1 305 2 39 1 222 2 14 1 339 3 370 2 172 2 147 1 268 2 56 1 121 2 123 2 371 1 310 1 61 1 
283 1 45 1 209 1 83 2 64 2 156 1 179 1 339 2 54 1 340 1 268 1 91 1 167 1 191 1 328 1 57 1 145 1 305 1 39 1 222 1 370 1 172 1 121 1 371 1 
209 1 91 1 130 1 83 2 191 1 328 1 144 1 64 2 75 1 156 1 249 1 289 1 97 1 39 1 222 3 370 3 339 4 340 1 279 1 121 3 123 1 61 1 
222 1 198 1 370 1 121 1 75 1 97 1 
9 1 312 1 90 1 130 1 103 1 48 1 94 1 75 3 289 2 97 2 76 1 146 1 198 1 222 6 370 7 339 3 251 1 121 7 123 2 150 1 110 1 
207 1 44 2 46 1 130 1 21 1 103 1 261 2 155 2 87 3 179 1 316 1 267 2 339 1 319 2 268 1 161 6 183 2 4 1 294 3 293 1 269 2 165 1 244 1 363 4 115 1 303 1 75 1 276 1 169 1 194 1 97 1 250 1 305 2 278 2 222 1 370 1 172 2 199 1 121 1 123 1 371 1 254 1 206 1 127 1 372 1 310 1 311 2 
256 2 351 2 209 1 83 3 314 1 64 3 355 1 156 1 289 1 236 1 339 2 340 2 297 1 163 1 270 1 188 1 91 1 300 2 191 1 142 1 328 1 222 1 370 1 279 1 121 1 58 1 224 2 255 1 
208 1 209 1 130 1 103 1 48 1 75 2 97 1 198 1 222 2 370 2 339 2 121 2 123 1 
103 1 168 1 75 1 345 1 289 1 2 1 97 1 222 4 370 4 339 1 121 4 123 1 61 1 
62 1 130 1 95 1 75 2 97 1 76 1 39 1 146 1 222 2 370 2 339 1 121 2 184 1 123 1 
222 1 370 1 121 1 114 1 143 1 59 1 75 1 109 1 97 1 289 1 
103 1 94 1 75 1 97 1 222 2 370 2 339 1 25 1 121 2 123 1 150 1 
9 1 103 1 168 1 75 2 345 1 2 1 289 1 97 2 39 1 222 4 370 5 339 3 251 1 121 5 123 2 150 1 
103 1 168 1 75 2 345 1 2 1 289 1 97 2 39 1 222 4 370 5 339 3 251 1 121 5 123 2 357 1 150 1 
244 1 130 1 155 1 75 1 179 1 289 1 97 1 305 2 222 1 339 1 370 1 172 2 268 1 56 1 121 1 123 1 371 1 310 1 
130 1 48 1 75 2 97 1 76 1 146 1 39 1 222 1 370 1 339 1 121 1 123 1 110 1 
131 1 179 1 237 1 220 1 305 1 291 1 172 1 30 1 80 1 
291 1 34 1 301 1 
237 1 200 1 291 1 155 1 30 1 
270 1 91 1 271 1 83 2 34 1 273 1 301 1 191 1 155 1 328 1 64 2 237 2 14 1 291 1 200 2 147 1 359 1 42 1 30 2 
11 1 242 1 187 1 67 1 
69 1 122 1 11 1 263 1 192 1 242 1 187 1 
223 1 263 1 106 1 
81 1 111 1 11 1 192 1 263 3 117 2 170 1 122 1 69 3 41 1 242 1 187 1 
69 2 122 1 11 1 263 2 192 1 18 1 36 1 242 1 187 1 
217 1 69 1 122 1 143 1 185 1 11 1 263 1 192 1 41 1 109 1 219 1 
69 1 122 1 11 1 263 1 192 1 41 1 242 1 
69 1 122 1 263 1 192 1 41 1 242 2 187 1 
260 1 11 1 192 2 263 2 318 1 122 2 69 2 41 1 360 1 242 1 
176 1 302 1 192 1 263 3 50 1 11 2 219 1 122 1 69 3 41 1 18 2 242 1 187 1 
217 1 114 1 143 1 11 1 192 1 263 2 104 1 122 1 69 2 5 1 41 1 18 1 242 1 109 2 187 1 
302 1 192 2 263 4 11 2 36 1 219 1 122 2 69 4 41 1 18 2 242 1 29 1 187 1 
69 1 122 1 11 1 263 1 192 1 41 1 242 1 187 1 
81 1 111 1 313 1 302 1 263 4 192 1 11 3 117 1 219 1 69 4 122 1 18 2 242 2 187 2 
231 1 11 1 192 1 263 2 197 1 307 1 122 1 69 2 41 1 18 1 242 1 187 1 
81 2 111 1 11 1 192 1 263 3 96 1 117 2 122 1 69 3 41 1 242 1 187 1 
120 2 101 1 153 1 11 2 
69 1 122 1 263 1 192 1 41 1 264 1 
69 2 122 1 11 1 50 1 263 2 192 1 41 1 18 1 242 1 187 1 
306 1 
69 1 122 1 11 1 263 1 192 1 41 1 242 1 187 1 
192 1 263 3 11 1 50 1 117 1 122 1 69 3 41 1 18 1 242 1 187 1 
313 1 302 1 11 1 219 1 
11 1 242 1 

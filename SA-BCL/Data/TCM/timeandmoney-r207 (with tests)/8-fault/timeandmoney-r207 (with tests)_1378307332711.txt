#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (139,212,254,255) (139,212,254,255) (139,212,254,255) 219 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (139,212,254,255) (139,212,254,255) (139,212,254,255) 219 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (139,212,254,255) (139,212,254,255) (139,212,254,255) 219 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (139,212,254,255) (139,212,254,255) (139,212,254,255) 219 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (139,212,254,255) (139,212,254,255) (139,212,254,255) 219 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (139,212,254,255) (139,212,254,255) (139,212,254,255) 219 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (139,212,254,255) (139,212,254,255) (139,212,254,255) 219 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (139,212,254,255) (139,212,254,255) (139,212,254,255) 219 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (139,212,254,255) (139,212,254,255) (139,212,254,255) 219 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (67,125,234) (67,125,234) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (67,125,234) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (67,125,234) 42 173 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (67,125,234) 42 297 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (139,212,254,255) (139,212,254,255) (139,212,254,255) 219 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (139,212,254,255) (139,212,254,255) (139,212,254,255) (126,256) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (139,212,254,255) (139,212,254,255) (126,256) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (139,212,254,255) (139,212,254,255) (139,212,254,255) (126,256) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (139,212,254,255) (139,212,254,255) (139,212,254,255) 219 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (67,125,234) (67,125,234) 87 120 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (67,125,234) (67,125,234) 87 120 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (67,125,234) (67,125,234) 87 120 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (67,125,234) (67,125,234) 87 120 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (67,125,234) (67,125,234) 87 120 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (67,125,234) (67,125,234) 87 120 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (67,125,234) (67,125,234) 87 120 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (67,125,234) (67,125,234) 87 120 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (67,125,234) (67,125,234) 87 120 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (67,125,234) (67,125,234) 87 120 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (67,125,234) (67,125,234) 87 120 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (67,125,234) (67,125,234) 87 120 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (84,146) 26 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (84,146) 60 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (84,146) 60 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (84,146) 26 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (67,125,234) 42 137 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 1442 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
212 1 62 1 255 1 254 1 219 1 
212 1 62 1 255 1 254 1 219 1 
212 1 62 1 255 1 254 1 219 1 
212 1 62 1 255 1 254 1 219 1 
212 1 62 1 255 1 254 1 219 1 
212 1 62 1 255 1 254 1 219 1 
212 1 62 1 255 1 254 1 219 1 
212 1 62 1 255 1 254 1 219 1 
212 1 62 1 255 1 254 1 219 1 
310 1 260 1 123 1 
49 2 150 1 123 1 
190 2 10 2 24 2 293 1 223 2 66 2 290 1 92 2 
187 1 186 1 190 3 2 1 284 1 155 2 290 1 35 1 199 1 157 1 202 1 119 1 79 1 10 2 293 1 244 1 246 1 129 1 215 2 134 2 304 2 88 1 305 1 307 2 309 1 218 1 92 3 94 1 179 1 24 2 223 2 66 2 226 1 27 1 278 1 280 1 69 1 
190 1 10 1 263 1 24 1 293 1 223 1 274 1 66 1 315 1 92 1 
190 1 24 1 234 1 67 1 177 1 92 1 
190 1 10 1 24 1 223 1 66 1 67 1 92 1 
257 1 210 1 281 1 182 1 125 1 
310 1 257 1 281 2 123 1 295 1 182 1 125 2 185 1 
281 1 182 1 125 1 
257 1 190 1 281 1 263 1 92 1 240 1 10 1 293 1 24 1 223 1 274 1 66 1 125 1 315 1 
123 1 
310 1 257 1 281 2 123 1 85 1 295 1 182 1 125 2 
257 2 70 1 258 2 106 1 171 1 281 5 282 2 110 2 193 1 6 1 200 1 310 1 123 1 295 1 249 1 125 5 298 1 182 2 207 1 
260 1 290 1 
190 2 130 1 290 2 92 2 78 1 10 1 24 2 223 1 66 1 
314 1 235 1 135 1 
186 1 187 1 190 1 284 1 215 1 304 1 307 1 290 1 309 1 157 1 218 1 92 1 266 1 179 1 27 1 69 1 
190 5 130 1 109 1 233 2 290 1 177 1 92 5 10 4 24 5 40 1 223 4 66 1 279 1 227 1 
190 2 10 2 263 1 24 2 223 2 274 1 101 1 92 2 
190 3 10 3 24 3 223 3 66 1 233 1 290 1 92 3 
190 1 10 1 263 1 24 1 223 1 274 1 92 1 
78 1 190 1 10 1 130 1 24 1 223 1 274 1 66 1 92 1 
190 2 10 2 130 1 173 1 24 2 223 2 66 1 233 1 42 1 67 1 279 1 92 2 
190 2 10 1 24 2 223 1 233 1 290 1 177 1 227 1 92 2 
190 1 10 1 24 1 223 1 297 1 233 1 42 1 67 1 279 1 92 1 
190 2 130 1 233 1 235 1 135 1 92 2 10 2 24 2 223 2 66 1 
186 1 187 1 190 1 284 1 215 1 304 1 307 1 290 1 309 1 157 1 218 1 92 1 179 1 27 1 69 1 
186 1 187 1 190 1 215 1 304 1 307 1 232 1 290 1 309 1 218 1 92 1 179 1 27 1 316 1 69 1 
105 1 2 1 1 1 235 2 155 4 35 1 119 2 239 1 36 1 79 2 244 1 44 1 43 1 259 1 211 1 129 1 134 2 53 1 135 2 313 1 94 1 314 2 271 1 226 1 
190 1 10 1 24 1 64 1 223 1 274 1 92 1 101 1 
187 1 186 1 190 2 284 1 215 1 304 1 233 1 307 1 135 1 309 1 218 1 157 1 92 2 10 1 179 1 24 1 223 1 27 1 279 1 69 1 
165 1 117 1 
165 1 117 1 
63 1 231 1 
63 1 231 1 
63 1 231 1 
265 1 165 1 117 1 
74 1 165 1 117 1 
181 1 63 1 231 1 165 2 117 2 84 1 
265 1 165 1 117 1 
265 1 165 1 117 1 
21 1 165 1 117 1 
21 1 165 1 117 1 
21 1 165 1 117 1 
102 1 190 2 29 1 281 1 153 1 285 1 154 1 73 1 196 1 74 1 290 1 117 1 10 2 241 1 124 1 125 1 165 1 253 1 303 1 92 2 141 1 220 1 24 2 223 2 
102 3 29 2 303 2 281 2 51 1 108 1 285 2 114 2 76 1 117 2 141 2 143 1 123 1 294 1 146 1 125 2 208 1 165 2 253 1 
228 1 13 1 144 1 
228 1 144 1 91 1 
93 1 13 2 144 3 65 1 214 1 91 1 
93 1 13 1 144 2 65 1 163 1 91 1 
93 2 13 1 144 2 65 1 91 1 
106 2 107 1 150 1 282 1 281 5 110 1 154 1 73 1 200 3 239 1 162 1 247 2 123 2 295 1 249 1 125 5 44 1 257 4 258 1 211 1 49 3 262 1 89 1 90 2 142 1 310 1 267 1 220 1 313 1 182 1 98 1 183 2 
150 1 156 3 239 1 240 1 10 1 247 2 249 1 251 1 257 5 258 1 172 1 262 1 263 1 89 1 92 1 267 1 24 1 274 1 182 4 183 2 190 1 107 1 106 2 281 6 282 1 110 1 200 3 293 1 123 3 295 1 125 6 44 1 210 3 302 1 211 1 49 3 310 1 220 2 313 1 223 1 66 1 315 1 
70 1 106 2 150 2 282 1 281 3 110 1 200 3 239 1 123 3 247 2 125 3 44 1 257 2 258 1 211 1 49 4 262 1 90 1 89 1 310 1 142 1 267 1 220 1 313 1 98 1 183 2 
70 1 106 4 150 3 282 1 281 4 110 1 112 1 7 1 200 5 239 2 123 4 247 4 125 4 44 2 257 3 258 1 211 2 49 7 262 1 17 1 90 2 89 2 310 1 142 1 267 1 220 2 313 2 98 1 183 4 
188 1 260 1 27 1 
301 1 27 1 
71 1 
187 1 27 1 218 1 
115 1 27 1 
187 1 27 1 
188 2 187 1 269 1 287 1 27 3 218 1 
167 1 28 2 152 1 236 1 155 7 119 3 140 1 8 1 239 1 36 2 79 4 271 3 41 1 204 1 83 1 44 1 45 1 
167 1 28 2 152 1 236 1 155 7 119 3 140 1 8 1 239 1 36 2 79 4 271 3 41 1 204 1 83 1 44 1 45 1 
167 1 28 2 283 1 152 1 236 1 155 7 119 3 8 1 140 1 239 1 36 2 79 4 271 3 41 1 204 1 83 1 44 1 45 1 
28 3 2 1 30 1 152 1 33 1 155 31 236 2 238 1 35 1 8 1 119 15 239 4 36 5 79 16 242 1 244 1 80 4 41 2 204 2 83 1 11 3 45 1 44 4 167 5 168 1 48 1 211 3 134 2 89 3 140 2 313 3 271 10 275 1 226 1 
28 2 2 2 155 9 236 1 35 2 119 4 8 1 239 1 36 3 291 1 79 5 244 2 204 1 41 1 83 1 252 1 44 1 45 1 167 1 48 1 134 4 140 1 271 4 226 2 
212 1 62 1 255 1 254 1 219 1 
256 1 212 1 62 1 255 1 254 1 
62 1 255 1 139 1 126 1 
256 1 212 1 62 1 255 1 254 1 
212 1 62 1 255 1 254 1 219 1 
82 1 
186 1 187 1 190 1 106 1 282 1 281 2 151 1 110 1 234 1 200 1 120 1 122 1 296 1 295 1 249 1 125 2 258 1 262 1 213 1 174 1 215 2 175 1 87 1 304 2 307 2 309 2 177 1 92 1 24 1 222 1 182 2 27 1 67 1 69 1 
120 1 190 1 281 1 24 1 122 1 87 1 296 1 234 1 125 1 67 1 177 1 92 1 
120 1 190 1 281 1 24 1 122 1 87 1 296 1 234 1 125 1 67 1 177 1 92 1 
120 1 190 1 281 1 24 1 122 1 87 1 296 1 234 1 125 1 67 1 177 1 92 1 
190 1 281 2 85 1 87 1 234 1 177 1 92 1 120 1 24 1 122 1 295 1 296 1 125 2 182 1 67 1 
190 1 258 1 281 1 282 1 110 1 87 1 234 1 177 1 92 1 120 1 24 1 122 1 296 1 249 1 125 1 67 1 
120 1 190 1 281 1 24 1 122 1 87 1 296 1 234 1 125 1 67 1 177 1 92 1 
120 1 190 1 281 1 24 1 122 1 87 1 296 1 234 1 125 1 67 1 177 1 92 1 
120 1 190 1 281 1 24 1 122 1 87 1 296 1 234 1 125 1 67 1 177 1 92 1 
120 1 190 1 281 1 24 1 122 1 87 1 296 1 234 1 125 1 67 1 177 1 92 1 
120 1 190 1 281 1 24 1 122 1 87 1 296 1 234 1 125 1 67 1 177 1 92 1 
190 1 258 1 281 1 282 1 110 1 87 1 234 1 177 1 92 1 120 1 24 1 122 1 296 1 249 1 125 1 67 1 
28 1 259 1 260 1 129 1 2 1 134 2 235 1 155 6 290 2 135 1 35 1 119 3 8 1 239 1 36 2 79 3 314 1 94 1 271 2 244 1 226 1 41 1 204 1 83 1 44 1 45 1 
104 1 30 1 72 1 2 2 288 1 235 4 155 14 290 1 197 1 238 1 35 2 202 1 119 6 36 1 239 1 79 8 80 3 244 2 250 1 11 3 44 2 167 1 129 2 211 1 134 4 88 1 89 2 135 11 313 2 94 1 314 11 271 2 226 2 
187 1 186 1 190 2 2 1 284 1 235 1 233 1 155 2 290 1 197 1 157 1 35 1 119 1 202 1 10 1 79 1 160 1 244 1 245 1 129 1 215 1 304 1 134 2 307 1 88 1 309 1 218 1 92 2 266 1 179 1 94 1 24 1 223 1 226 1 27 1 100 1 279 1 69 1 
2 3 233 1 235 7 155 20 77 1 157 2 8 1 239 3 10 1 79 10 244 3 246 2 83 1 167 4 88 1 89 2 178 2 92 3 94 3 179 2 24 1 270 2 271 8 273 2 27 2 279 1 186 2 187 2 28 1 190 3 31 1 284 2 290 2 197 1 35 3 202 1 119 10 36 4 41 1 204 1 45 1 44 3 129 3 211 2 131 1 215 3 304 3 134 6 306 1 307 3 309 1 135 7 218 2 57 2 313 2 314 7 223 1 226 3 69 2 
186 2 187 2 190 1 189 1 149 1 2 2 3 1 194 1 233 1 155 2 118 1 35 2 202 1 119 1 10 1 79 1 244 2 169 1 261 1 259 1 129 2 131 1 215 8 175 1 304 7 134 4 307 8 88 1 309 2 92 1 94 2 24 1 222 1 223 1 226 2 27 3 68 1 69 2 280 2 
190 1 2 1 191 1 235 1 155 3 197 1 35 1 119 2 36 1 239 1 10 1 79 1 244 1 44 1 129 1 211 1 130 1 134 2 89 1 135 1 92 1 313 1 314 1 94 1 271 1 24 1 223 1 66 1 226 1 
167 1 259 1 129 1 2 1 134 2 53 1 235 1 155 2 135 1 35 1 313 1 79 2 314 1 94 1 271 1 244 1 226 1 44 1 
259 1 129 1 2 1 211 1 134 2 235 1 155 2 135 1 35 1 119 2 36 1 239 1 314 1 94 1 271 1 244 1 226 1 43 1 
2 1 235 2 155 4 35 1 119 2 239 1 36 1 79 2 244 1 44 1 167 1 259 1 129 1 211 1 134 2 89 1 135 2 313 1 94 1 314 2 271 2 226 1 
167 1 189 1 129 1 2 1 134 2 53 1 235 1 155 2 135 1 35 1 313 1 79 2 314 1 94 1 271 1 244 1 226 1 44 1 
189 1 129 1 2 1 211 1 134 2 235 1 155 2 135 1 35 1 119 2 36 1 239 1 314 1 94 1 271 1 244 1 226 1 43 1 
189 1 2 1 235 2 155 4 35 1 119 2 239 1 36 1 79 2 244 1 44 1 167 1 129 1 211 1 134 2 89 1 135 2 313 1 94 1 314 2 271 2 226 1 
2 1 235 2 155 4 35 1 119 2 239 1 36 1 79 2 244 1 44 1 167 1 129 1 211 1 134 2 89 1 135 2 313 1 94 1 314 2 271 2 226 1 
187 1 186 1 190 1 2 1 284 1 155 2 290 1 157 1 35 1 202 1 119 1 79 1 244 1 246 1 129 1 215 1 304 1 134 2 307 1 88 1 309 1 218 1 92 1 179 1 94 1 226 1 27 1 69 1 
187 1 186 1 190 1 2 1 232 1 155 2 290 1 35 1 202 1 119 1 79 1 244 1 129 1 215 1 304 1 134 2 307 1 88 1 309 1 218 1 92 1 179 1 94 1 226 1 97 1 27 1 69 1 316 1 
2 1 235 2 155 4 197 1 35 1 119 2 239 1 36 1 79 2 244 1 44 1 167 1 129 1 211 1 134 2 89 1 135 2 313 1 94 1 314 2 271 2 226 1 
186 1 187 1 190 1 2 1 284 1 194 1 235 2 155 4 157 1 35 1 119 2 36 1 239 1 79 2 244 1 246 1 44 1 167 1 211 1 129 1 215 1 304 1 134 2 307 1 89 1 135 2 218 1 92 1 57 1 313 1 314 2 179 1 94 1 271 2 226 1 27 1 69 1 
190 1 2 1 235 1 155 3 197 1 35 1 201 1 119 1 239 1 10 1 79 2 244 1 44 1 167 1 211 1 129 1 130 1 134 2 89 1 135 1 92 1 313 1 94 1 314 1 271 1 24 1 223 1 66 1 226 1 
2 3 4 1 5 1 229 1 155 41 238 1 237 1 8 1 239 5 79 20 244 3 80 4 83 1 164 1 11 3 167 4 14 1 15 1 89 4 271 8 95 1 99 1 28 1 30 3 35 3 119 21 36 4 291 1 292 1 204 1 41 1 299 1 44 5 45 1 46 4 48 1 211 4 134 6 138 1 56 1 312 2 313 4 226 3 
28 1 30 3 2 4 4 1 5 1 229 1 155 38 237 1 238 1 35 4 8 1 119 18 36 4 239 4 291 1 79 20 292 1 80 4 244 4 41 1 204 1 83 1 299 1 164 1 11 3 45 1 44 5 46 4 167 3 48 2 211 3 14 1 15 1 134 8 89 4 138 1 56 1 312 2 313 4 271 7 95 1 226 4 99 1 
28 1 72 2 30 2 2 3 4 1 5 1 229 1 155 53 238 2 35 3 8 1 119 26 36 8 239 8 291 1 79 27 80 4 244 3 41 1 204 1 83 1 299 1 164 1 11 4 45 1 44 8 46 4 167 7 48 2 211 7 14 1 15 1 134 6 89 7 138 1 56 1 312 1 313 7 271 15 95 1 226 3 99 1 
30 1 2 2 5 1 155 19 238 1 35 2 119 10 36 3 239 3 291 1 79 9 292 1 80 2 244 2 11 1 44 3 46 2 167 3 211 3 14 1 134 4 89 3 217 1 138 2 312 1 313 3 271 6 95 1 226 2 99 1 
2 3 30 2 4 1 5 1 229 1 155 26 35 3 119 12 36 2 239 2 291 1 79 14 244 3 80 2 299 1 164 1 11 2 44 3 46 4 167 2 48 2 211 2 14 2 15 1 134 6 89 3 138 1 56 1 312 2 313 3 271 4 95 1 226 3 99 1 
141 1 29 1 303 1 143 1 146 1 285 1 20 1 208 1 165 1 117 1 
241 1 74 1 
141 1 311 1 29 1 303 1 285 1 205 1 165 1 117 1 300 1 
265 1 60 1 
21 1 26 1 84 1 
102 2 29 1 303 1 281 1 51 1 108 1 285 1 114 1 76 1 117 1 141 1 143 1 123 1 146 1 125 1 208 1 165 1 253 1 
102 2 29 1 303 1 281 1 51 1 108 1 285 1 114 1 76 1 117 1 141 1 143 1 123 1 146 1 125 1 208 1 165 1 253 1 
102 2 29 1 303 1 281 1 51 1 108 1 285 1 114 1 76 1 117 1 141 1 143 1 123 1 146 1 125 1 208 1 165 1 253 1 
265 1 60 1 84 1 
265 1 60 1 84 1 
21 1 26 1 
21 1 26 1 84 1 
153 1 124 1 
102 1 190 2 29 1 281 1 153 1 114 1 285 1 154 1 73 1 196 1 74 1 290 1 117 1 241 1 10 2 124 1 125 1 165 1 257 1 303 1 51 1 92 2 141 1 220 1 24 2 145 1 223 2 
186 1 187 1 148 1 190 2 2 1 3 1 155 2 197 1 35 1 202 1 119 1 79 1 244 1 129 1 16 1 215 2 134 2 304 2 307 2 88 1 136 1 92 2 58 1 94 1 61 1 24 2 226 1 27 1 69 1 68 1 280 2 
186 1 228 1 128 1 13 1 131 1 214 1 215 2 194 1 286 1 304 2 307 2 75 1 91 1 198 1 37 1 144 2 81 1 276 1 69 1 
186 1 228 1 13 1 131 1 214 1 215 1 286 1 304 1 307 1 75 1 91 1 198 1 37 1 144 2 243 1 276 1 69 1 
186 1 187 1 128 1 12 1 215 1 175 1 304 1 307 1 309 1 159 1 222 1 276 1 27 1 69 1 
186 1 228 1 128 1 13 1 131 1 214 1 215 1 286 1 304 1 307 1 75 1 91 1 198 1 37 1 144 2 81 1 276 1 69 1 
9 1 
310 1 260 1 106 1 123 1 193 1 207 1 200 1 
106 1 150 1 282 1 281 1 110 1 32 1 200 1 123 2 295 1 249 1 125 1 47 1 258 1 49 1 18 1 310 1 182 1 
0 1 150 6 239 2 158 2 247 6 248 2 249 4 258 4 262 2 174 1 86 2 89 2 178 2 23 1 96 2 182 5 183 6 27 10 186 4 187 3 188 2 106 8 282 4 281 5 110 4 111 2 194 1 193 1 115 2 287 1 200 9 203 1 121 2 39 1 38 2 123 8 295 3 125 5 207 1 44 2 301 3 127 1 49 12 211 2 215 3 304 3 307 3 309 1 218 3 55 2 310 2 313 2 147 2 69 3 
30 1 106 5 281 1 282 2 150 3 4 1 110 2 229 1 200 8 239 2 80 1 247 5 123 5 248 1 295 1 249 2 125 1 164 1 11 1 44 2 209 1 258 2 49 6 211 2 262 1 15 1 174 1 19 1 89 2 56 1 310 2 313 2 96 2 182 1 183 5 
190 1 106 2 282 1 281 1 110 1 200 2 239 1 240 1 10 1 293 1 248 1 249 1 41 1 204 1 125 1 83 1 44 2 258 1 263 1 92 1 268 1 59 1 24 1 223 1 274 1 66 1 96 2 315 1 
258 1 106 1 282 1 110 1 193 1 200 1 310 1 123 1 249 1 207 1 
106 5 49 10 211 2 150 5 89 2 178 1 200 5 239 2 313 2 247 5 123 5 248 1 96 2 183 5 44 2 
310 1 281 1 123 1 295 1 125 1 182 1 
70 1 186 1 187 1 106 2 282 2 281 3 151 1 110 2 195 1 200 2 39 2 295 2 249 1 125 3 258 2 127 1 262 2 213 1 174 2 215 4 175 1 304 4 307 4 309 2 222 1 182 4 277 1 27 1 69 1 
186 1 187 1 190 3 2 1 284 1 155 1 290 1 35 1 157 1 119 1 10 2 293 1 244 1 246 1 129 1 215 1 134 2 304 1 88 1 307 1 309 1 218 1 92 3 179 1 94 1 24 2 223 2 66 2 226 1 27 1 278 1 69 1 
28 1 258 1 49 4 106 2 150 2 282 1 262 1 174 1 110 1 200 1 310 2 247 2 123 4 249 1 183 2 
141 1 303 1 216 1 
141 1 303 1 143 1 153 1 206 1 
141 1 303 1 216 1 
141 1 303 1 216 1 
141 1 303 1 113 1 
141 1 303 1 113 1 
141 1 303 1 113 1 
141 1 303 1 
165 1 117 1 
28 1 30 1 2 1 229 1 155 8 35 1 119 4 8 1 239 1 36 2 291 1 79 4 80 1 244 1 204 1 41 1 83 1 11 1 44 1 45 1 134 2 271 2 226 1 
28 1 30 1 2 2 229 1 155 11 238 1 35 2 8 1 119 5 239 1 36 2 291 1 79 6 80 2 244 2 41 1 204 1 83 1 11 1 45 1 44 2 167 1 134 4 308 1 89 1 313 1 271 3 226 2 
28 1 30 1 2 3 4 1 229 1 155 19 35 3 8 1 119 10 239 3 36 3 291 1 79 9 80 1 244 3 41 1 204 1 83 1 164 1 11 1 45 1 44 3 167 1 48 1 211 2 15 1 134 6 308 1 89 2 56 1 313 2 271 4 226 3 
30 1 2 4 4 1 229 1 155 12 35 4 119 5 239 1 36 2 291 1 79 7 80 1 244 4 164 1 11 1 44 2 167 1 48 2 211 1 15 1 134 8 308 1 89 2 56 1 313 2 271 3 226 4 
28 1 30 1 2 1 229 1 155 8 35 1 119 4 8 1 239 1 36 2 291 1 79 4 80 1 244 1 204 1 41 1 83 1 11 1 44 1 45 1 134 2 271 2 226 1 
30 1 2 2 4 1 229 1 155 13 35 2 119 7 239 2 36 2 291 1 79 6 80 1 244 2 164 1 11 1 44 2 167 1 48 1 211 2 15 1 134 4 89 2 56 1 313 2 271 3 226 2 
28 1 30 1 2 4 4 1 229 1 155 18 35 4 8 1 119 8 239 2 36 3 291 1 79 10 80 1 244 4 41 1 204 1 83 1 164 1 11 1 45 1 44 3 167 2 48 2 211 1 15 1 134 8 308 1 89 2 56 1 313 2 271 5 226 4 
30 1 2 4 4 1 229 1 155 16 35 4 119 7 239 2 36 3 291 1 79 9 292 1 80 1 244 4 164 1 11 1 44 3 167 3 48 2 211 2 15 1 134 8 89 3 56 1 313 3 271 6 226 4 
167 3 155 7 119 4 8 2 239 1 36 3 79 3 271 6 204 3 41 3 83 1 45 1 44 1 
28 1 30 1 2 4 4 1 229 1 155 18 35 4 8 1 119 8 239 2 36 3 291 1 79 10 292 1 80 1 244 4 41 1 204 1 83 1 164 1 11 1 45 1 44 3 167 1 48 2 211 1 15 1 134 8 89 2 56 1 313 2 271 4 226 4 
28 1 167 1 48 1 2 2 134 4 155 8 35 2 119 4 8 1 239 1 36 2 79 4 271 3 244 2 226 2 204 1 41 1 83 1 44 1 45 1 
28 1 260 1 155 6 119 3 8 1 36 2 239 1 79 3 271 2 204 1 41 1 83 1 45 1 44 1 
167 1 211 1 2 1 134 2 308 1 89 1 155 4 35 1 119 2 36 1 239 1 313 1 79 2 271 2 244 1 226 1 44 1 
167 1 211 1 30 1 155 7 89 1 238 1 119 4 36 1 239 1 79 3 313 1 271 2 80 2 11 1 44 1 
28 1 104 1 72 1 2 2 155 23 238 1 35 2 8 1 119 12 239 3 36 5 79 11 80 2 244 2 41 2 204 2 83 1 166 1 11 2 45 1 44 3 167 4 48 2 211 2 134 4 89 2 313 2 271 9 226 2 
80 1 155 1 119 1 
79 1 155 1 11 1 
167 1 2 1 211 1 134 2 308 1 155 6 89 1 35 1 178 1 119 3 239 1 36 2 313 1 79 3 271 3 244 1 226 1 44 1 
30 1 2 2 4 1 229 1 155 13 35 2 119 7 239 2 36 2 291 1 79 6 80 1 244 2 164 1 11 1 44 2 167 1 48 1 211 2 15 1 134 4 89 2 56 1 313 2 271 3 226 2 
167 1 155 6 119 3 239 1 36 1 79 3 271 2 204 1 41 1 83 1 44 1 
167 1 48 1 2 1 134 2 155 3 35 1 8 1 119 2 36 1 79 1 271 2 244 1 226 1 41 1 204 1 166 1 45 1 
167 2 2 1 134 2 155 10 35 1 119 5 36 3 239 2 291 1 59 1 79 5 271 5 244 1 226 1 204 2 41 2 83 1 44 2 
167 1 2 1 134 2 155 2 35 1 291 1 313 1 79 2 271 1 244 1 226 1 44 1 
167 1 211 1 2 1 134 2 89 1 155 4 35 1 119 2 36 1 239 1 291 1 313 1 79 2 271 2 244 1 226 1 44 1 
167 1 48 1 2 3 134 6 155 3 35 3 119 2 36 1 291 1 79 1 292 1 271 2 244 3 226 3 204 1 41 1 166 1 
28 1 30 1 2 5 33 1 155 34 238 1 35 5 8 1 119 18 239 5 36 7 291 1 79 16 292 1 80 4 244 5 41 3 204 3 83 2 166 1 11 3 45 1 44 5 168 1 167 5 48 2 211 3 134 10 308 1 89 3 313 3 271 12 275 1 226 5 
190 1 24 1 290 1 116 1 177 1 92 1 227 1 
103 1 190 1 22 1 290 1 54 1 116 1 177 1 92 1 180 1 24 1 225 1 227 1 
186 1 187 1 260 1 222 1 175 1 215 1 304 1 307 1 27 1 309 1 69 1 
187 1 186 1 190 2 284 1 215 1 304 1 233 1 307 1 290 1 309 1 218 1 92 2 10 1 179 1 24 1 223 1 27 1 69 1 
187 2 186 1 190 2 284 1 133 1 215 1 115 1 304 1 233 1 307 1 290 1 218 2 92 2 10 2 39 1 179 1 24 2 64 1 223 1 274 1 27 3 147 1 69 1 
187 2 186 1 190 2 133 1 215 2 115 1 304 2 233 1 307 2 232 1 289 1 290 1 218 2 92 2 10 2 39 1 179 1 24 2 64 1 223 1 274 1 27 3 147 1 69 1 
188 1 186 1 187 1 281 2 115 1 289 1 158 1 39 1 123 1 125 2 301 1 215 3 304 3 307 3 176 1 309 1 218 1 310 1 272 1 182 1 27 4 147 1 69 1 
187 1 186 1 188 1 301 1 281 2 215 3 115 1 304 3 307 3 289 1 309 1 218 1 55 1 310 1 158 1 39 1 123 1 125 2 182 1 27 4 147 1 69 1 
186 1 215 1 304 1 307 1 118 1 69 1 
187 2 186 3 169 1 261 1 149 1 50 1 131 1 52 1 264 1 194 1 215 7 304 6 307 7 287 1 118 1 309 2 218 1 27 3 280 1 68 1 69 2 
2 2 235 1 233 1 155 6 157 1 8 1 239 1 10 1 79 3 244 2 246 1 83 1 16 1 92 2 94 2 179 1 24 1 271 2 273 1 27 1 186 1 187 1 190 2 28 1 284 1 194 1 197 1 290 2 35 2 119 3 36 2 204 1 41 1 45 1 44 1 129 2 215 1 304 1 134 4 307 1 135 1 218 1 57 1 314 1 223 1 226 2 69 1 
188 1 106 1 282 2 281 3 110 2 193 1 200 1 121 1 158 1 38 1 123 1 295 1 249 2 125 3 207 1 257 1 301 1 258 2 127 1 86 1 215 1 304 1 307 1 309 1 55 1 310 1 182 2 27 2 
188 1 0 1 187 1 186 2 194 1 215 2 304 2 307 2 287 1 118 1 218 1 27 2 69 1 
186 1 187 1 215 4 194 1 175 1 304 4 307 4 289 1 34 1 309 1 222 1 27 1 69 1 
187 1 186 2 170 1 50 1 264 1 215 2 304 2 307 2 77 1 218 1 39 1 27 1 184 1 69 1 
186 1 228 1 144 1 286 1 215 1 304 1 307 1 91 1 309 1 69 1 
187 1 186 1 131 1 194 1 215 2 304 2 307 2 58 1 27 1 68 1 69 1 
187 2 186 2 169 1 149 1 175 1 215 5 194 1 304 4 307 5 34 1 309 1 39 1 222 1 27 3 68 1 69 2 
187 2 186 2 169 1 175 1 215 5 194 1 304 4 307 5 34 1 309 1 39 1 222 1 25 1 27 3 68 1 69 2 
187 1 186 1 190 2 215 1 304 1 233 1 307 1 232 1 290 1 309 1 218 1 92 2 10 1 179 1 24 1 223 1 27 1 69 1 
187 1 186 2 50 1 52 1 264 1 215 1 304 1 307 1 287 1 218 1 39 1 27 1 69 1 
148 1 190 1 132 1 230 1 136 1 92 1 61 1 161 1 24 1 
224 1 132 1 137 1 
221 1 161 1 132 1 230 1 290 1 
257 1 221 1 281 1 192 1 161 1 224 1 132 1 230 1 42 1 125 1 67 1 137 1 

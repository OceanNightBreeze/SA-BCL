#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 332 207 235 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 332 207 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 212 249 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 332 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 332 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 332 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 332 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 332 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 332 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 332 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
23 5 210 1 246 2 262 1 29 1 263 1 293 1 213 2 294 9 231 1 155 2 35 1 172 1 324 1 123 9 348 2 125 1 131 1 130 2 349 1 59 6 107 1 134 3 109 1 19 1 20 4 311 2 281 2 
23 5 210 1 246 2 262 1 29 1 263 1 293 1 213 2 294 9 231 1 155 2 35 1 172 1 324 1 123 9 348 2 125 1 131 1 130 2 349 1 59 6 107 1 134 3 109 1 19 1 20 4 311 2 281 2 
23 6 210 1 246 2 262 1 29 1 263 1 293 1 213 2 294 10 231 1 155 2 35 1 172 1 324 1 123 10 348 2 125 1 131 1 130 2 349 1 59 7 107 1 134 4 109 1 19 1 20 5 311 2 281 2 
23 4 210 1 246 1 262 1 29 1 263 1 293 1 213 2 294 7 231 1 155 2 35 1 172 1 324 1 123 7 348 2 125 1 131 1 130 2 349 1 59 4 107 1 134 2 19 1 20 3 311 2 281 2 
23 3 155 1 210 1 123 4 246 2 262 1 348 1 130 1 131 1 59 3 107 1 134 1 293 1 109 1 213 1 294 4 20 2 311 1 
113 1 23 1 155 1 123 2 262 1 348 1 28 1 125 1 349 1 131 1 130 1 293 1 213 1 294 2 158 1 281 1 
23 2 123 3 262 1 348 2 263 1 131 1 59 1 134 1 293 1 213 2 294 3 20 1 281 1 
23 5 210 1 246 2 262 1 263 1 224 1 293 1 213 2 294 9 35 1 155 1 324 1 123 9 348 2 59 7 131 1 130 1 107 1 134 3 109 1 20 4 159 1 311 1 281 1 
23 5 210 1 246 2 262 1 263 1 224 1 293 1 213 2 294 9 35 1 155 1 324 1 123 9 348 2 59 7 131 1 130 1 107 1 134 3 109 1 20 4 159 1 311 1 281 1 
129 1 94 1 24 1 
315 1 24 1 18 2 
227 1 327 1 41 2 298 2 72 2 7 2 81 2 55 2 
111 1 259 1 222 1 182 1 72 2 162 1 46 1 27 1 186 1 285 1 31 1 289 2 271 1 7 2 55 3 54 1 227 1 56 2 298 2 229 1 230 1 197 1 103 2 122 1 173 1 126 1 81 2 82 2 327 1 132 1 201 1 41 3 178 1 238 1 138 1 310 1 110 2 
44 1 327 1 41 1 298 1 72 1 243 1 7 1 99 1 81 1 55 1 
273 1 295 1 44 1 216 1 298 1 24 1 94 1 136 1 41 1 268 1 95 1 55 1 53 1 22 1 
273 1 295 1 44 1 298 1 72 1 24 1 81 1 94 1 268 2 41 1 95 1 7 1 55 1 53 1 22 2 
248 1 268 1 57 1 341 1 22 1 
44 1 282 1 298 1 72 1 243 1 24 1 81 1 327 1 62 1 41 1 268 2 248 1 94 1 7 1 341 1 99 1 214 1 55 1 22 2 
248 1 268 1 22 1 
44 1 282 1 298 1 72 1 243 1 81 1 327 1 268 1 41 1 341 1 7 1 99 1 22 1 55 1 
24 1 
62 1 94 1 248 1 144 1 268 2 24 1 341 1 22 2 
112 1 24 1 145 1 316 2 73 1 26 1 200 1 328 2 318 1 62 1 94 1 268 5 248 2 108 2 84 1 341 2 280 1 342 1 22 5 
344 1 227 1 114 1 298 5 72 4 211 2 81 4 336 1 286 1 308 1 136 1 41 5 7 1 55 5 
204 1 44 1 41 2 298 2 72 2 243 1 81 2 55 2 
129 1 227 1 
227 2 298 2 72 1 81 1 336 1 41 2 220 1 7 1 55 2 
143 1 242 1 174 1 
227 1 259 1 68 1 229 1 162 1 103 1 122 1 82 1 132 1 201 1 41 1 178 1 238 1 271 1 110 1 55 1 
259 1 229 1 298 1 242 1 72 1 162 1 122 1 103 1 211 1 81 1 82 1 132 1 286 1 201 1 41 2 178 1 238 1 271 1 110 1 55 2 
227 1 41 3 298 3 72 3 211 1 7 1 81 3 55 3 
44 1 41 1 298 1 72 1 243 1 81 1 55 1 
336 1 44 1 41 1 298 1 220 1 72 1 7 1 81 1 55 1 
44 1 111 1 259 1 182 1 72 3 162 1 46 1 211 1 27 1 186 1 336 1 31 1 286 1 268 1 289 2 95 1 271 1 52 1 7 2 55 4 53 1 273 1 295 1 227 1 56 1 229 1 298 3 197 1 122 1 103 1 173 1 16 1 81 3 82 1 132 1 327 1 201 1 41 4 178 1 238 1 138 1 310 1 110 1 22 1 
227 1 344 1 136 1 41 2 298 2 72 1 211 1 81 1 55 2 
44 1 273 1 295 1 298 3 72 3 24 1 0 1 211 2 81 3 336 1 286 1 268 1 41 3 95 1 52 1 7 1 22 1 53 1 55 3 
298 2 72 2 242 1 211 1 174 1 81 2 336 1 41 2 7 1 55 2 
227 1 259 1 229 1 103 1 122 1 162 1 82 1 132 1 201 1 41 1 178 1 238 1 271 1 110 1 55 1 
227 1 259 1 120 1 103 1 122 1 162 1 82 1 201 1 352 1 41 1 178 1 238 1 271 1 110 1 55 1 
111 1 182 1 143 2 86 1 242 2 314 1 117 1 186 1 31 1 149 1 289 2 270 1 194 1 56 4 119 1 230 2 197 1 233 1 173 2 174 2 40 1 17 1 310 1 221 1 
44 1 295 1 204 1 41 1 298 1 72 1 81 1 55 1 
237 1 255 1 
237 1 255 1 
350 1 185 1 
350 1 185 1 
350 1 185 1 
237 1 255 1 139 1 
237 1 255 1 139 1 
237 1 279 1 255 1 
237 2 350 1 42 1 87 1 255 2 185 1 
237 1 255 1 139 1 
237 1 251 1 255 1 
237 1 251 1 255 1 
237 1 251 1 255 1 
237 1 157 1 207 1 188 1 268 1 255 1 332 1 22 1 235 1 
237 1 157 1 207 1 188 1 255 1 332 1 
130 1 155 1 311 1 
130 1 155 1 158 1 
130 3 133 1 320 1 104 1 158 1 311 2 
130 2 320 1 104 1 244 1 158 1 311 1 
130 2 320 2 104 1 158 1 311 1 
205 1 70 1 86 1 315 1 145 2 316 1 24 2 146 1 261 2 26 3 148 1 4 1 149 1 93 1 248 1 268 5 94 1 290 1 341 4 342 1 194 1 228 1 328 1 277 1 39 2 62 1 108 1 18 3 221 1 202 1 21 1 141 2 22 5 
205 1 86 3 315 3 145 6 146 4 24 5 316 2 73 1 223 1 74 5 261 6 1 1 26 8 76 1 4 2 49 1 149 3 248 6 268 9 94 1 290 3 118 1 341 7 342 1 153 1 194 3 57 5 328 2 62 1 108 2 18 9 354 1 221 3 202 3 21 2 141 6 22 9 
86 1 315 2 24 3 316 1 146 1 145 2 73 1 261 2 26 3 148 1 4 1 93 1 149 1 94 1 268 3 290 1 118 1 341 2 194 1 328 1 39 1 108 1 18 4 221 1 202 1 21 1 141 2 22 3 
86 2 315 3 24 4 316 1 146 2 145 4 73 1 261 4 26 5 76 1 148 1 4 1 49 1 93 1 149 2 94 1 268 4 290 2 118 1 341 3 194 2 328 1 39 2 108 1 18 7 354 1 221 2 202 2 21 1 141 4 22 4 
259 1 201 1 162 1 
162 1 278 1 
326 1 129 1 162 1 
162 1 212 1 
102 1 
201 1 162 1 
326 2 259 1 201 1 253 1 162 3 50 1 
119 3 283 1 56 7 86 1 314 2 230 4 173 3 37 1 165 1 329 2 77 1 43 1 96 1 221 1 152 1 258 1 192 1 
119 3 283 1 56 7 86 1 314 2 230 4 173 3 37 1 165 1 329 2 77 1 43 1 96 1 221 1 152 1 258 1 192 1 
119 3 283 1 56 7 86 1 314 2 230 4 173 3 37 1 165 1 329 2 77 1 43 1 226 1 96 1 221 1 152 1 258 1 192 1 
160 1 111 1 206 1 283 2 313 4 240 1 86 4 314 5 116 1 186 1 31 1 165 1 149 3 77 2 289 2 290 3 96 1 151 1 152 2 192 2 171 3 194 3 56 31 119 10 230 16 173 15 37 5 329 3 83 1 43 1 310 1 221 4 355 1 258 1 
160 1 111 2 283 1 86 1 314 3 186 2 31 2 165 1 77 1 289 4 167 1 152 1 192 1 56 9 119 4 230 5 173 4 37 1 329 2 43 1 310 2 221 1 66 1 258 1 
23 1 71 1 209 1 262 1 287 1 293 1 213 1 294 2 191 1 101 1 12 1 155 1 103 1 122 1 123 2 325 1 348 1 82 1 59 1 131 1 130 2 133 1 309 1 179 1 178 1 110 1 158 1 311 1 281 1 203 1 
23 1 71 1 209 1 262 1 287 1 293 1 269 1 213 1 294 3 98 1 101 1 12 1 155 1 103 1 232 1 122 1 123 3 325 1 348 1 82 1 59 2 130 2 133 1 179 1 178 1 110 1 158 1 311 1 281 1 203 1 
23 1 71 1 209 1 262 1 293 1 269 1 294 2 101 1 12 1 103 1 232 1 122 1 155 1 123 2 82 1 59 2 130 2 133 1 179 1 178 1 110 1 158 1 311 1 281 1 203 1 
71 2 162 1 213 1 97 1 294 1 98 1 274 1 12 2 122 1 103 1 13 1 123 1 300 1 36 1 348 1 82 1 201 1 179 2 178 1 238 1 330 1 110 1 281 2 
71 1 209 1 287 1 213 1 294 1 191 1 101 1 12 1 155 1 103 1 232 1 122 1 123 1 325 1 348 1 82 1 131 1 130 2 133 1 179 1 178 1 110 1 158 1 311 1 281 1 203 1 
338 1 
44 1 315 2 145 2 316 1 264 2 4 1 317 1 92 1 94 1 268 5 95 1 97 1 55 1 53 1 272 2 273 1 103 2 14 2 198 1 234 1 275 1 276 1 328 1 201 1 62 3 108 1 238 2 18 2 110 2 65 1 22 5 24 2 162 1 26 2 248 6 169 4 342 1 215 1 295 1 216 1 298 1 122 1 36 1 80 2 124 1 304 2 218 2 82 2 307 1 136 1 41 1 178 1 85 1 256 1 140 2 
44 1 295 1 273 1 216 1 144 1 298 1 276 1 317 1 92 1 62 1 248 2 268 3 136 1 41 1 95 1 169 2 256 1 65 1 140 1 53 1 22 3 55 1 
44 1 144 1 24 1 317 1 264 1 92 1 248 1 268 3 94 1 95 1 169 3 55 1 53 1 273 1 295 1 216 1 298 1 276 1 62 1 41 1 136 1 65 1 256 1 22 3 
44 1 144 1 24 1 317 1 264 1 92 1 268 3 248 2 94 1 95 1 169 3 55 1 53 1 273 1 295 1 216 1 298 1 218 1 276 1 62 1 41 1 136 1 65 1 256 1 140 1 22 3 
44 1 144 1 315 2 316 1 145 1 317 1 264 4 92 1 268 5 94 5 95 1 53 1 55 1 272 2 273 1 14 2 199 1 275 1 276 1 328 1 62 3 108 1 65 1 22 5 24 5 26 1 248 7 169 6 342 1 295 1 216 1 298 1 250 1 347 1 80 2 124 1 304 2 218 4 351 1 41 1 136 1 180 1 256 1 140 4 
44 1 315 2 316 1 145 1 317 1 264 2 92 1 268 4 94 1 95 1 53 1 55 1 272 2 273 1 14 2 198 1 275 1 276 1 328 1 62 2 108 1 18 2 65 1 22 4 24 2 26 1 248 4 169 4 342 1 295 1 216 1 298 1 80 2 124 1 304 2 218 2 41 1 136 1 256 1 140 2 
44 1 315 2 24 1 145 1 316 1 26 1 264 2 317 1 92 1 94 1 248 4 268 4 95 1 169 4 342 1 55 1 53 1 272 2 273 1 295 1 216 1 298 1 250 1 14 2 347 1 80 2 124 1 304 2 218 2 275 1 276 1 328 1 351 1 62 2 41 1 136 1 108 1 65 1 256 1 140 2 22 4 
44 1 315 2 24 1 145 1 316 1 26 1 264 2 317 1 92 1 94 1 248 4 268 4 95 1 169 4 342 1 55 1 53 1 272 2 273 1 295 1 216 1 298 1 250 1 14 2 347 1 80 2 124 1 304 2 218 2 275 1 276 1 328 1 351 1 62 2 41 1 136 1 108 1 65 1 256 1 140 2 22 4 
44 1 184 1 24 1 145 1 316 1 260 1 26 1 163 2 264 2 317 1 92 1 94 1 248 4 268 4 95 1 169 4 342 1 55 1 53 1 273 1 295 1 323 1 216 1 298 1 14 2 347 1 304 2 218 2 275 1 276 1 328 1 62 2 254 2 41 1 136 1 108 1 18 2 65 1 256 1 140 2 22 4 
44 1 315 2 24 1 145 1 316 1 26 1 317 1 264 3 92 1 94 1 268 4 248 5 95 1 169 5 342 1 55 1 53 1 272 2 273 1 295 1 216 1 298 1 250 1 14 2 347 1 80 2 124 1 304 2 275 1 218 3 276 1 328 1 351 1 62 2 41 1 136 1 108 1 180 1 65 1 256 1 140 3 22 4 
44 1 315 2 24 1 145 1 316 1 26 1 317 1 264 3 92 1 94 1 268 4 248 5 95 1 169 5 342 1 55 1 53 1 272 2 273 1 295 1 216 1 298 1 250 1 14 2 347 1 80 2 124 1 304 2 275 1 218 3 276 1 328 1 351 1 62 2 41 1 136 1 108 1 180 1 65 1 256 1 140 3 22 4 
44 1 316 1 145 1 317 1 264 2 92 1 268 4 94 1 95 1 53 1 55 1 273 1 323 1 14 2 198 1 275 1 276 1 328 1 62 2 108 1 18 2 65 1 22 4 24 1 26 1 163 2 248 4 169 4 342 1 295 1 216 1 298 1 304 2 218 2 41 1 136 1 254 2 256 1 140 2 
111 1 182 1 143 1 242 1 314 2 86 1 186 1 31 1 165 1 289 2 152 1 192 1 227 2 119 2 56 6 197 1 230 3 233 1 173 3 174 1 129 1 329 1 43 1 310 1 221 1 258 1 
111 2 206 1 313 3 182 2 143 11 314 1 242 11 86 1 116 1 3 1 47 1 186 2 285 1 31 2 149 2 289 4 290 2 10 1 227 1 171 3 194 1 119 2 345 1 56 14 197 1 230 8 173 6 174 4 37 1 138 1 310 2 221 2 257 1 
259 1 239 1 111 1 68 1 182 1 72 1 162 1 211 1 3 1 186 1 285 1 286 1 31 1 289 2 51 1 271 1 32 1 55 2 227 1 56 2 229 1 298 1 122 1 103 1 197 1 230 1 173 1 174 1 82 1 81 1 132 1 201 1 41 2 178 1 238 1 138 1 310 1 110 1 
259 2 182 3 143 7 314 4 86 3 3 1 186 3 149 2 271 2 152 1 192 1 55 3 227 2 194 2 56 20 229 2 232 1 103 3 197 3 230 10 201 2 329 1 238 1 110 3 67 2 111 3 72 1 242 7 162 2 211 1 27 2 30 1 285 1 31 3 286 1 165 1 339 1 289 6 290 2 340 2 119 8 298 1 122 2 173 10 174 7 82 3 81 1 37 4 252 2 177 2 132 2 135 1 41 3 178 2 138 1 43 1 310 3 221 3 258 1 
111 2 182 2 72 1 162 3 284 1 211 1 186 2 265 1 285 1 31 2 291 1 289 4 225 1 97 1 55 1 193 1 56 2 346 1 297 1 298 1 232 1 122 2 103 8 197 2 230 1 233 1 173 1 36 1 81 1 82 7 126 2 201 2 309 1 41 1 178 2 238 2 138 1 310 2 110 8 
111 1 182 1 143 1 314 1 242 1 72 1 86 1 2 1 3 1 336 1 186 1 31 1 149 1 289 2 290 1 7 1 55 1 194 1 119 1 56 3 298 1 197 1 230 1 173 2 174 1 81 1 41 1 310 1 221 1 
111 1 119 1 56 2 182 1 143 1 242 1 197 1 230 2 233 1 174 1 37 1 186 1 31 1 149 1 289 2 270 1 310 1 221 1 
111 1 194 1 119 1 56 2 182 1 143 1 314 1 242 1 86 1 197 1 233 1 173 2 174 1 117 1 186 1 31 1 289 2 310 1 
111 1 182 1 143 2 242 2 86 1 314 1 186 1 31 1 149 1 290 1 289 2 194 1 56 4 119 2 230 2 197 1 233 1 173 2 174 2 37 1 310 1 221 1 
111 1 119 1 56 2 346 1 182 1 143 1 242 1 197 1 230 2 174 1 37 1 186 1 31 1 149 1 289 2 270 1 310 1 221 1 
111 1 194 1 119 1 56 2 346 1 182 1 143 1 314 1 242 1 86 1 197 1 173 2 174 1 117 1 186 1 31 1 289 2 310 1 
111 1 182 1 143 2 242 2 86 1 314 1 186 1 31 1 149 1 290 1 289 2 194 1 56 4 119 2 346 1 230 2 197 1 173 2 174 2 37 1 310 1 221 1 
194 1 111 1 119 2 56 4 182 1 143 2 314 1 86 1 242 2 197 1 230 2 173 2 174 2 37 1 186 1 31 1 149 1 289 2 290 1 310 1 221 1 
259 1 111 1 182 1 162 1 27 1 186 1 285 1 31 1 289 2 271 1 55 1 227 1 56 2 229 1 230 1 122 1 103 1 197 1 173 1 82 1 132 1 201 1 41 1 178 1 238 1 138 1 310 1 110 1 
259 1 111 1 182 1 162 1 186 1 285 1 31 1 289 2 271 1 55 1 227 1 56 2 120 1 230 1 122 1 103 1 197 1 173 1 302 1 82 1 201 1 352 1 41 1 178 1 238 1 138 1 310 1 110 1 
111 1 182 1 143 2 242 2 86 1 314 1 3 1 186 1 31 1 149 1 290 1 289 2 194 1 56 4 119 2 230 2 197 1 173 2 174 2 37 1 310 1 221 1 
67 1 259 1 111 1 182 1 143 2 314 1 86 1 242 2 162 1 27 1 186 1 31 1 149 1 289 2 290 1 271 1 55 1 194 1 119 2 56 4 229 1 230 2 122 1 103 1 197 1 173 2 174 2 37 1 82 1 132 1 201 1 309 1 41 1 178 1 310 1 221 1 110 1 
312 1 111 1 182 1 143 1 86 1 72 1 242 1 3 1 336 1 186 1 31 1 149 1 289 2 290 1 7 1 55 1 194 1 119 1 56 3 298 1 197 1 230 2 173 1 174 1 37 1 81 1 41 1 310 1 221 1 
111 2 206 1 313 2 314 3 86 3 115 1 116 1 186 2 48 1 164 1 31 2 149 3 289 4 290 3 167 1 6 2 171 1 194 3 56 19 119 6 296 2 230 9 173 10 37 3 58 1 306 1 60 1 61 1 310 2 221 3 
160 2 111 3 142 1 313 2 183 1 314 2 86 2 115 1 116 2 186 3 48 2 31 3 149 3 289 6 189 1 290 3 167 1 6 4 171 2 194 2 119 4 56 26 296 1 196 1 217 1 230 14 15 1 173 12 37 2 58 2 60 1 61 1 310 3 221 3 
181 1 142 1 313 4 183 1 86 5 314 4 186 3 48 2 149 4 189 1 6 4 152 1 192 1 194 4 56 41 196 1 230 20 15 1 58 1 61 1 60 1 329 1 160 1 206 1 111 3 115 1 116 3 164 1 31 3 165 1 290 4 289 6 167 1 171 3 119 8 296 1 217 1 173 21 37 4 43 1 310 3 221 5 258 1 
160 2 181 1 111 4 206 1 142 1 313 4 183 1 314 4 86 4 115 1 116 3 186 4 48 2 164 1 31 4 165 1 149 4 189 1 289 8 290 4 167 1 6 4 152 1 192 1 171 3 194 3 56 38 119 7 296 1 196 1 217 1 230 20 15 1 173 18 37 3 58 1 60 1 61 1 329 1 43 1 310 4 221 5 258 1 
160 1 111 2 206 2 142 1 313 4 183 1 314 7 86 8 115 1 116 2 186 2 48 1 31 2 165 1 149 7 189 1 289 4 290 7 167 1 6 4 152 1 192 1 171 4 194 7 56 52 119 14 296 1 196 1 217 1 230 27 15 1 173 25 37 7 58 1 60 1 61 1 329 1 43 1 310 2 221 8 257 2 258 1 
111 1 182 1 333 1 162 1 75 1 3 1 186 1 285 1 31 1 289 2 225 1 170 1 55 2 56 2 297 1 298 2 34 1 122 1 103 2 197 1 230 1 173 1 126 2 82 2 201 1 41 2 178 1 64 1 138 1 310 1 110 2 
101 1 71 1 155 1 122 1 232 1 103 2 325 1 82 2 127 1 247 1 130 2 133 1 309 1 178 1 110 2 158 1 311 1 343 1 203 1 
101 1 71 1 155 1 232 1 103 1 122 1 325 1 82 1 247 1 130 2 133 1 267 1 178 1 110 1 158 1 311 1 203 1 
71 1 122 1 162 1 103 1 147 1 300 1 36 1 82 1 127 1 201 1 178 1 238 1 97 1 110 1 
101 1 71 1 155 1 122 1 232 1 103 1 325 1 82 1 127 1 247 1 130 2 133 1 178 1 110 1 158 1 311 1 343 1 203 1 
303 1 
129 1 94 1 24 1 145 1 84 1 26 1 200 1 
272 1 315 1 24 2 316 1 145 1 80 1 26 1 124 1 328 1 62 1 94 1 268 1 248 1 108 1 18 1 342 1 22 1 
259 1 195 1 122 1 162 1 316 1 103 1 82 1 328 1 201 1 178 1 108 1 249 1 238 1 212 1 50 1 110 1 342 1 
142 1 313 1 183 1 315 3 86 2 316 2 24 5 145 5 261 5 26 8 116 1 335 1 4 1 266 1 149 2 268 1 248 1 94 2 189 1 290 2 118 1 342 2 171 1 194 2 196 1 217 1 234 1 328 2 62 1 108 2 18 6 221 2 202 2 141 5 22 1 
44 1 282 1 86 1 72 1 243 1 316 1 145 2 26 2 268 1 118 1 190 1 152 1 7 1 99 1 342 1 55 1 192 1 298 1 250 1 81 1 328 1 327 1 41 1 108 1 43 1 221 2 202 2 22 1 
328 1 94 1 108 1 24 1 145 1 316 1 84 1 26 1 200 1 342 1 
194 1 315 2 86 1 145 2 24 2 261 2 26 2 149 1 290 1 18 4 118 1 221 1 202 1 141 2 
62 1 94 1 268 1 248 1 24 1 22 1 
69 1 162 1 316 2 145 2 334 2 73 1 26 2 4 2 248 4 268 3 97 1 342 1 215 1 122 1 103 4 156 1 79 1 36 1 234 2 82 4 328 2 201 1 62 2 178 1 108 2 238 2 85 1 110 4 22 3 
111 1 259 1 182 1 72 2 162 1 46 1 27 1 186 1 31 1 289 2 271 1 7 2 55 3 227 1 56 1 298 2 229 1 103 1 122 1 197 1 173 1 82 1 81 2 327 1 132 1 201 1 41 3 178 1 238 1 138 1 310 1 110 1 
315 2 145 2 316 1 24 4 261 2 26 1 234 1 4 1 328 1 329 1 94 2 108 1 18 4 141 2 342 1 
188 1 332 1 
188 1 332 1 
188 1 332 1 
188 1 332 1 
188 1 332 1 
188 1 332 1 
188 1 332 1 
188 1 332 1 
237 1 255 1 
160 1 111 2 56 8 119 3 86 1 314 2 230 4 173 4 37 1 186 2 31 2 165 1 329 1 289 4 43 1 310 2 221 1 152 1 258 1 192 1 
119 2 56 6 314 2 86 1 230 3 173 3 129 1 165 1 329 1 43 1 152 1 221 1 258 1 192 1 
194 1 111 1 119 2 56 4 314 1 86 1 230 2 173 2 37 1 186 1 31 1 149 1 321 1 289 2 290 1 310 1 221 1 
194 1 171 1 206 1 56 7 119 2 313 2 314 1 86 1 230 3 173 4 116 1 37 1 149 1 290 1 221 1 
160 2 206 1 111 2 313 2 86 3 314 5 47 1 186 2 31 2 165 1 149 2 290 2 289 4 152 2 192 2 171 2 194 2 119 9 56 23 230 11 173 12 37 4 329 1 353 1 43 1 310 2 221 3 257 1 258 1 
56 1 313 1 173 1 
171 1 56 1 230 1 
111 1 194 1 56 6 119 3 86 1 314 2 230 3 173 3 37 1 186 1 177 1 31 1 149 1 289 2 321 1 290 1 310 1 221 1 
111 1 142 1 313 1 183 1 86 2 314 1 116 1 186 1 31 1 149 2 189 1 289 2 290 2 167 1 171 1 194 2 56 12 119 2 196 1 217 1 230 6 173 6 37 1 310 1 221 2 
119 2 56 6 314 1 86 1 230 3 173 3 43 1 152 1 221 1 37 1 192 1 
160 1 111 1 119 2 56 3 314 1 230 1 173 2 37 1 186 1 31 1 165 1 353 1 289 2 310 1 152 1 258 1 192 1 
111 1 119 5 56 10 314 3 86 2 230 5 173 5 37 2 186 1 31 1 289 2 167 1 43 1 310 1 190 1 152 2 221 2 192 2 
111 1 56 2 119 1 230 2 37 1 186 1 31 1 149 1 289 2 167 1 310 1 221 1 
194 1 111 1 119 2 56 4 314 1 86 1 230 2 173 2 37 1 186 1 31 1 149 1 289 2 290 1 167 1 310 1 221 1 
160 1 111 3 56 3 119 2 314 1 230 1 173 2 37 1 186 3 164 1 31 3 353 1 289 6 167 1 310 3 152 1 192 1 
160 2 111 5 206 1 313 4 240 1 86 5 314 7 116 1 186 5 164 1 31 5 165 1 149 3 321 1 289 10 290 3 167 1 152 3 192 3 171 3 194 3 56 34 119 12 230 16 173 18 37 5 329 1 83 1 353 1 43 2 310 5 221 5 355 1 258 1 
111 1 313 1 86 1 314 2 116 1 186 1 31 1 165 1 189 1 289 2 167 1 152 1 192 1 171 1 56 8 119 2 230 4 173 4 329 1 43 1 310 1 221 1 258 1 
111 2 206 1 313 2 86 1 314 2 116 1 186 2 31 2 165 1 149 1 189 1 289 4 321 1 290 1 167 1 152 1 192 1 171 1 56 11 119 3 230 6 173 5 37 1 329 1 43 1 310 2 221 2 258 1 
160 1 111 3 142 1 313 1 183 1 86 3 314 3 116 1 186 3 31 3 165 1 149 2 321 1 189 1 289 6 290 2 167 1 152 1 192 1 171 1 194 2 56 19 119 4 196 1 217 1 230 9 173 10 37 1 329 1 43 1 310 3 221 3 258 1 
160 1 111 3 142 1 313 1 183 1 86 2 314 3 116 1 186 3 31 3 165 1 149 2 321 1 189 1 289 6 290 2 167 1 152 1 192 1 171 1 194 1 56 17 119 5 196 1 217 1 230 10 173 7 37 2 329 1 43 1 310 3 221 3 258 1 
111 1 313 1 86 1 314 2 116 1 186 1 31 1 165 1 189 1 289 2 167 1 152 1 192 1 171 1 56 8 119 2 230 4 173 4 329 1 43 1 310 1 221 1 258 1 
111 1 142 1 313 1 183 1 86 2 314 1 116 1 186 1 31 1 149 2 189 1 289 2 290 2 167 1 171 1 194 2 56 12 119 2 196 1 217 1 230 6 173 6 37 1 310 1 221 2 
160 2 111 4 142 1 313 1 183 1 86 2 314 3 116 1 186 4 31 4 165 1 149 2 189 1 321 1 289 8 290 2 167 1 152 1 192 1 171 1 194 1 56 18 119 5 196 1 217 1 230 10 173 8 37 2 329 1 43 1 310 4 221 3 258 1 
160 2 111 4 142 1 313 1 183 1 86 2 314 3 116 1 186 4 164 1 31 4 149 3 189 1 289 8 290 3 167 1 171 1 194 2 56 16 119 6 196 1 217 1 230 9 173 7 37 3 310 4 221 3 
56 7 119 6 86 1 314 3 230 3 173 4 37 3 165 1 43 1 152 3 221 1 258 2 192 3 
160 2 111 4 142 1 313 1 183 1 86 2 314 3 116 1 186 4 164 1 31 4 165 1 149 2 189 1 289 8 290 2 167 1 152 1 192 1 171 1 194 1 56 18 119 4 196 1 217 1 230 10 173 8 37 1 329 1 43 1 310 4 221 3 258 1 
11 1 227 1 344 1 41 1 298 1 136 1 55 1 
11 1 227 1 344 1 161 1 298 1 121 1 305 1 187 1 5 1 136 1 41 1 55 1 
227 1 259 1 298 1 72 1 162 1 122 1 103 1 211 1 81 1 82 1 201 1 352 1 41 2 178 1 238 1 271 1 110 1 55 2 
259 1 103 1 162 1 122 2 334 1 105 1 245 1 88 1 82 1 201 1 178 1 50 1 110 1 
129 1 201 1 178 1 122 1 162 1 103 1 238 1 36 1 97 1 110 1 82 1 
227 1 259 1 298 1 229 1 72 1 162 1 122 1 103 1 211 1 81 1 82 1 201 1 41 2 178 1 238 1 271 1 110 1 55 2 
44 1 259 2 72 1 162 3 334 1 211 1 337 1 95 1 271 1 55 2 295 1 227 1 229 1 298 2 103 1 122 1 82 1 81 2 201 2 41 2 178 1 278 1 110 1 
44 1 259 2 72 1 162 3 334 1 211 1 337 1 95 1 271 1 55 2 33 1 295 1 227 1 298 2 103 2 122 1 82 2 81 2 201 2 352 1 41 2 178 1 278 1 110 2 
44 1 282 1 72 1 243 1 162 2 24 1 334 1 91 1 248 1 268 2 94 1 212 1 7 1 99 1 55 1 53 1 298 1 103 1 82 1 81 1 326 1 327 1 41 1 110 1 22 2 
44 1 282 1 72 1 243 1 162 2 24 1 334 1 248 1 268 2 94 1 212 1 7 1 99 1 55 1 53 1 298 1 299 1 103 1 82 1 81 1 326 1 327 1 41 1 110 1 22 2 
265 1 178 1 122 1 103 1 110 1 82 1 
193 1 259 1 232 1 103 7 162 3 122 3 284 1 105 1 245 1 88 1 126 1 82 6 265 1 201 2 309 1 291 1 178 2 225 1 238 2 50 1 110 7 
67 1 259 1 111 2 182 2 143 1 242 1 86 1 314 2 72 1 162 1 211 1 27 1 3 1 186 2 31 2 165 1 289 4 271 1 152 1 340 1 192 1 170 1 55 2 227 2 56 6 119 2 298 1 229 1 230 3 122 1 197 2 103 1 173 3 174 1 81 1 82 1 132 1 201 1 329 1 309 1 41 2 178 1 43 1 310 2 221 1 110 1 258 1 
69 1 24 1 145 1 316 2 162 2 26 1 89 1 94 1 268 3 288 1 248 2 212 1 341 1 342 2 53 1 78 1 299 1 103 1 200 1 82 1 326 1 328 2 62 1 108 2 238 1 84 1 110 1 22 3 
259 1 195 1 102 1 103 1 162 1 122 1 82 1 326 1 265 1 201 1 178 1 50 1 110 1 
33 1 122 1 103 4 162 1 36 1 82 4 175 1 201 1 309 1 178 1 238 1 97 1 110 4 
259 1 103 2 162 1 122 2 334 1 25 1 245 1 88 1 82 2 176 1 201 1 135 1 178 1 110 2 
130 1 101 1 178 1 155 1 122 1 103 1 238 1 110 1 158 1 82 1 
201 1 309 1 178 1 333 1 122 1 162 1 225 1 232 1 103 2 110 2 82 2 
103 5 162 3 122 2 334 1 36 1 284 1 82 4 175 1 201 2 309 1 178 2 291 1 238 1 225 1 97 1 110 5 
103 5 162 3 122 2 334 1 36 1 82 4 175 1 201 2 309 1 319 1 178 2 291 1 238 1 225 1 97 1 110 5 
227 1 106 1 322 1 154 1 292 1 
44 1 295 1 273 1 227 1 322 1 154 2 208 1 24 1 90 1 106 2 219 1 94 1 268 2 292 2 95 1 52 1 341 1 53 1 22 2 
322 1 34 1 298 1 75 1 106 1 41 1 64 1 292 1 55 1 
322 1 219 1 90 1 
129 1 23 1 293 1 262 1 
23 1 293 1 123 1 262 1 348 1 213 1 294 1 
179 1 294 1 281 1 
241 1 23 1 123 3 348 1 262 1 38 1 131 1 349 2 150 1 293 1 213 1 294 3 
59 1 23 1 293 1 246 1 123 2 262 1 348 1 213 1 294 2 
23 1 155 1 123 1 348 1 131 1 130 1 107 1 213 1 294 1 20 1 311 1 
131 1 23 1 123 1 262 1 348 1 213 1 294 1 
131 1 293 1 123 1 262 2 348 1 213 1 294 1 
100 1 23 1 123 2 262 1 348 2 128 1 131 1 213 2 294 2 8 1 
23 2 35 1 324 1 123 3 262 1 348 1 131 1 59 2 134 1 293 1 213 1 294 3 20 1 
23 1 155 1 123 2 262 1 348 1 130 2 131 1 59 1 133 1 293 1 213 1 294 2 158 1 311 1 9 1 
23 2 123 4 246 1 262 1 348 2 131 1 59 2 134 1 293 1 109 1 213 2 294 4 20 1 
131 1 23 1 293 1 123 1 262 1 348 1 213 1 294 1 
241 1 23 3 123 4 262 2 348 1 38 1 349 1 59 2 134 1 293 2 331 1 213 1 294 4 20 1 
23 1 123 2 262 1 348 1 236 1 131 1 59 1 137 1 293 1 213 1 294 2 159 1 
38 1 349 2 131 1 45 1 241 2 23 1 293 1 123 3 262 1 348 1 213 1 294 3 
23 1 166 1 168 1 
131 1 123 1 348 1 213 1 301 1 294 1 
59 1 131 1 23 1 35 1 293 1 123 2 262 1 348 1 213 1 294 2 
63 1 
131 1 23 1 293 1 123 1 262 1 348 1 213 1 294 1 
23 1 35 1 123 3 348 1 262 1 59 1 131 1 349 1 293 1 213 1 294 3 
134 1 23 1 331 1 20 1 
23 1 262 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
353 2 66 3 301 1 285 1 68 1 256 1 147 1 326 2 259 1 360 1 131 6 30 1 334 2 307 9 149 5 112 4 364 1 295 1 36 2 11 9 114 1 180 1 247 2 248 2 319 2 321 1 298 1 122 1 
353 2 66 3 301 1 285 1 68 1 256 1 147 1 326 2 259 1 360 1 131 6 30 1 334 2 307 9 149 5 112 4 364 1 295 1 36 2 11 9 114 1 180 1 247 2 248 2 319 2 321 1 298 1 122 1 
353 2 66 4 301 1 285 1 68 1 256 1 147 1 326 2 259 1 360 1 131 7 30 1 334 2 307 10 149 6 112 5 364 1 295 1 36 2 11 10 114 1 180 1 247 2 248 2 319 2 321 1 298 1 122 1 
353 2 66 2 301 1 285 1 68 1 256 1 147 1 326 2 259 1 360 1 131 4 30 1 334 2 307 7 149 4 112 3 364 1 295 1 36 2 11 7 114 1 180 1 247 2 248 1 319 2 321 1 122 1 
149 3 353 1 112 2 66 1 364 1 285 1 295 1 68 1 11 4 256 1 326 1 247 1 248 2 319 1 131 3 334 1 298 1 307 4 
149 1 353 1 364 1 113 1 285 1 68 1 11 2 69 1 36 1 147 1 326 1 259 1 4 1 319 1 334 1 307 2 
149 2 353 2 112 1 66 1 364 1 285 1 68 1 11 3 36 1 131 1 334 2 321 1 307 3 
353 2 66 3 285 1 68 1 256 1 326 1 3 1 131 7 334 2 307 9 149 5 112 4 364 1 295 1 36 1 11 9 180 1 247 1 297 1 248 2 319 1 321 1 122 1 298 1 
353 2 66 3 285 1 68 1 256 1 326 1 3 1 131 7 334 2 307 9 149 5 112 4 364 1 295 1 36 1 11 9 180 1 247 1 297 1 248 2 319 1 321 1 122 1 298 1 
20 1 
53 1 2 1 199 2 
369 2 13 2 58 1 55 2 340 2 19 2 194 2 44 1 
352 1 96 1 356 1 70 1 327 1 260 2 261 1 148 2 211 1 74 1 77 1 194 2 233 1 169 1 108 1 32 2 170 2 172 1 9 1 55 2 340 3 242 1 198 1 317 1 369 3 13 2 14 2 370 1 58 1 276 1 88 1 89 1 373 1 184 1 19 2 93 1 44 1 
369 1 13 1 25 1 231 1 55 1 340 1 19 1 194 1 258 1 44 1 
362 1 25 1 340 1 255 1 243 1 99 1 84 1 369 1 15 1 289 1 53 1 194 1 375 1 106 1 
362 2 25 1 55 1 340 1 255 1 243 1 99 1 84 2 369 1 13 1 15 1 53 1 19 1 194 1 106 1 
362 1 324 1 105 1 292 1 84 1 
362 2 324 1 53 1 240 1 292 1 107 1 99 1 84 2 
362 1 324 1 84 1 
362 1 351 1 25 1 55 1 340 1 258 1 84 1 369 1 13 1 231 1 19 1 194 1 292 1 44 1 
53 1 
362 2 136 1 324 1 53 1 292 1 107 1 99 1 84 2 
362 5 324 2 137 1 354 1 273 1 176 2 227 2 229 1 71 1 99 1 84 5 230 1 166 1 52 2 53 1 192 1 292 2 107 1 143 1 
369 3 13 3 58 1 55 3 340 3 19 1 132 1 194 3 
369 1 13 1 25 1 55 1 340 1 194 1 258 1 
369 1 13 1 25 1 55 1 61 1 340 1 19 1 220 1 194 1 
352 1 144 1 25 1 96 1 255 1 356 1 286 1 327 1 260 1 261 1 148 2 211 1 74 1 132 1 194 3 233 1 106 1 169 1 78 1 108 1 32 1 362 1 170 1 172 1 9 1 55 3 340 4 242 1 243 1 84 1 369 4 370 1 13 3 14 1 15 1 58 1 276 1 88 1 89 1 373 1 184 1 19 2 220 1 44 1 
369 2 13 1 58 1 289 1 55 1 340 2 132 1 194 2 303 1 
362 1 25 1 55 3 255 1 340 3 243 1 84 1 12 1 286 1 369 3 13 3 15 1 53 1 19 1 220 1 132 2 194 3 106 1 78 1 
55 2 56 1 340 2 369 2 13 2 72 1 132 1 220 1 19 1 194 2 
352 1 96 1 340 1 327 1 369 1 260 1 14 1 261 1 370 1 58 1 88 1 74 1 184 1 233 1 32 1 
96 1 340 1 369 1 260 1 14 1 261 1 370 1 58 1 168 1 264 1 88 1 74 1 184 1 233 1 32 1 
283 1 262 1 304 1 72 2 148 2 232 1 134 1 169 1 214 1 170 4 35 1 236 2 172 1 9 1 294 1 56 2 242 1 317 2 179 1 276 2 89 1 119 1 373 1 94 1 
369 1 13 1 25 1 55 1 340 1 225 1 194 1 243 1 
352 1 56 1 96 1 55 1 340 2 327 1 369 2 260 1 370 1 261 1 13 1 14 1 88 1 74 1 184 1 132 1 194 1 233 1 78 1 32 1 
20 1 
55 1 340 2 369 2 13 1 58 2 61 1 220 1 19 1 194 2 
72 1 236 1 56 1 
352 1 96 1 340 1 177 1 327 1 369 1 260 1 14 1 261 1 370 1 58 1 88 1 74 1 184 1 233 1 32 1 
369 5 13 4 271 1 58 1 289 1 55 4 300 1 340 5 19 1 220 1 132 2 194 5 303 1 78 1 
369 2 13 2 25 1 55 2 340 2 225 1 194 2 258 1 
363 1 102 1 46 1 
363 1 102 1 203 1 
363 1 102 1 203 1 
363 1 102 1 203 1 
363 1 102 1 
363 1 102 1 
54 1 126 1 
54 1 126 1 
54 1 126 1 
363 1 102 1 46 1 
363 1 102 1 46 1 
363 1 102 1 272 1 
363 2 167 1 54 1 102 2 355 1 126 1 
362 2 268 3 65 1 363 2 173 2 197 1 208 2 138 2 84 2 85 1 167 1 201 2 37 1 102 2 263 1 287 1 249 1 53 1 76 2 
0 1 208 1 102 1 31 1 194 2 195 1 268 1 362 1 363 1 272 1 55 2 173 1 340 2 215 1 138 1 84 1 369 2 13 2 201 1 37 1 371 1 58 1 320 1 348 1 
247 1 319 1 326 1 
319 1 4 1 326 1 
247 2 319 3 4 1 359 1 302 1 367 1 
247 1 319 2 4 1 302 1 367 1 266 1 
247 1 319 2 4 1 302 2 367 1 
351 1 324 1 25 1 125 2 354 1 26 1 47 1 258 1 227 1 99 1 166 2 52 1 231 1 53 1 194 1 292 4 107 1 214 1 362 5 294 1 55 1 238 1 340 1 273 1 343 1 176 1 199 1 84 5 369 1 13 1 116 1 87 1 318 1 348 1 19 1 42 1 44 1 
351 1 324 1 25 1 223 1 258 1 99 1 231 1 53 1 194 1 105 1 292 2 362 2 55 1 340 1 10 1 84 2 369 1 13 1 19 1 21 1 44 1 
351 1 25 1 125 1 26 1 258 1 227 1 2 1 99 1 166 2 262 1 231 1 52 1 192 1 53 2 194 1 292 2 214 1 362 3 35 1 55 1 238 1 294 1 340 1 273 3 176 1 343 2 199 3 84 3 369 1 13 1 116 2 87 1 318 1 348 1 19 1 42 1 44 1 
125 2 26 1 227 1 2 2 99 1 262 2 166 4 52 1 361 1 192 1 53 3 292 3 196 1 214 2 362 4 35 2 238 1 294 2 273 5 176 1 343 4 199 6 84 4 216 1 116 4 87 1 318 1 348 2 42 2 
184 1 233 1 
282 1 96 1 254 1 184 3 331 2 233 1 
20 1 
8 1 184 1 
22 1 
96 1 184 1 233 1 
184 1 146 1 
123 1 170 7 283 3 294 1 155 1 98 1 316 1 328 1 317 4 129 1 262 1 304 2 276 3 141 1 332 1 378 2 337 1 
123 1 170 7 283 3 294 1 155 1 98 1 316 1 328 1 317 4 129 1 262 1 304 2 276 3 141 1 332 1 378 2 337 1 
123 1 170 7 283 3 294 1 155 1 98 1 316 1 328 1 317 4 129 1 262 1 304 2 276 3 291 1 141 1 332 1 378 2 337 1 
123 2 283 10 226 1 228 1 98 1 357 1 328 2 129 1 262 4 304 5 165 1 148 2 332 1 335 3 214 3 337 2 170 31 35 3 81 1 172 1 294 4 312 1 155 1 242 1 316 5 317 16 276 15 89 1 373 1 92 4 141 2 42 3 281 1 378 3 
123 1 186 1 283 4 98 1 357 1 328 1 262 1 304 3 148 4 332 1 337 1 170 9 172 2 294 1 341 1 155 1 242 2 316 1 317 5 276 4 89 2 373 2 141 1 378 2 
353 1 299 1 284 1 285 1 68 1 326 1 29 1 260 1 261 1 130 1 4 1 131 1 290 1 359 1 73 1 74 1 334 1 32 1 307 2 149 1 364 1 152 1 11 2 36 1 83 1 14 1 247 1 319 2 206 1 322 1 
353 1 299 1 285 1 326 1 29 1 260 1 101 1 261 1 130 1 4 1 359 1 131 2 290 1 73 1 74 1 334 1 32 1 307 3 149 1 364 1 152 1 11 3 36 1 83 1 14 1 247 1 319 2 376 1 206 1 350 1 
149 1 299 1 364 1 285 1 11 2 152 1 36 1 326 1 83 1 260 1 261 1 101 1 14 1 247 1 319 2 4 1 130 1 359 1 131 2 74 1 73 1 206 1 307 2 32 1 350 1 
64 1 353 1 260 1 261 1 130 2 74 1 73 2 103 1 334 1 233 1 32 1 307 1 80 1 11 1 152 2 36 2 244 1 14 1 88 1 184 1 250 1 158 1 376 1 
299 1 353 1 284 1 36 1 68 1 11 1 152 1 326 1 83 1 29 1 260 1 261 1 14 1 247 1 319 2 4 1 130 1 359 1 290 1 74 1 73 1 334 1 206 1 307 1 32 1 350 1 
90 1 
323 1 324 6 227 1 2 2 99 1 189 4 49 1 52 1 288 2 289 1 53 2 191 1 333 2 103 1 194 1 233 1 107 3 106 1 110 2 340 1 199 2 243 1 296 1 14 2 15 1 202 2 59 1 347 1 120 1 62 1 158 1 25 1 354 1 255 1 257 2 260 2 166 2 261 1 74 1 75 1 32 2 362 5 171 1 273 2 176 1 139 1 84 5 369 1 218 2 318 1 372 2 88 2 184 1 375 1 43 1 
324 2 25 1 255 1 189 2 49 1 289 1 194 1 106 1 107 1 362 3 136 1 171 1 340 1 243 1 84 3 296 1 369 1 15 1 202 1 347 1 375 1 43 1 
324 1 25 1 255 1 99 1 189 3 49 1 289 1 53 1 194 1 333 1 106 1 107 1 362 3 136 1 171 1 340 1 243 1 84 3 296 1 369 1 15 1 347 1 375 1 43 1 
324 2 25 1 255 1 99 1 189 3 49 1 289 1 288 1 53 1 194 1 333 1 107 1 106 1 362 3 136 1 171 1 340 1 243 1 84 3 296 1 369 1 15 1 202 1 347 1 375 1 43 1 
324 7 227 1 2 2 99 5 189 6 49 1 52 1 288 4 289 1 53 5 194 1 333 4 106 1 107 3 110 2 340 1 243 1 344 1 296 1 246 1 15 1 202 4 347 1 118 1 62 1 25 1 255 1 354 1 257 2 166 1 75 1 34 1 362 5 136 1 171 1 273 1 274 1 176 1 84 5 369 1 218 2 372 2 375 1 43 1 
323 1 324 4 25 1 354 1 255 1 257 2 227 1 2 2 99 1 189 4 166 1 49 1 52 1 288 2 289 1 53 2 75 1 333 2 194 1 107 2 106 1 362 4 110 2 171 1 340 1 273 1 176 1 199 2 243 1 84 4 296 1 369 1 15 1 202 2 218 2 372 2 347 1 62 1 375 1 43 1 
324 4 25 1 255 1 354 1 257 2 227 1 2 2 99 1 189 4 166 1 49 1 52 1 288 2 289 1 53 1 75 1 333 2 194 1 107 2 106 1 362 4 110 2 171 1 340 1 273 1 274 1 176 1 243 1 84 4 296 1 369 1 246 1 15 1 202 2 218 2 372 2 118 1 347 1 62 1 375 1 43 1 
324 4 25 1 255 1 354 1 257 2 227 1 2 2 99 1 189 4 166 1 49 1 52 1 288 2 289 1 53 1 75 1 333 2 194 1 107 2 106 1 362 4 110 2 171 1 340 1 273 1 274 1 176 1 243 1 84 4 296 1 369 1 246 1 15 1 202 2 218 2 372 2 118 1 347 1 62 1 375 1 43 1 
160 2 324 4 25 1 255 1 354 1 257 2 227 1 99 1 189 4 166 1 49 1 52 1 288 2 212 1 289 1 213 1 53 1 333 2 194 1 107 2 106 1 362 4 171 1 340 1 273 1 176 1 199 2 243 1 84 4 296 1 369 1 15 1 202 2 218 2 118 1 347 1 60 1 219 2 62 1 375 1 43 1 
324 5 25 1 354 1 255 1 257 2 227 1 2 2 99 1 189 5 166 1 49 1 52 1 289 1 288 3 53 1 75 1 194 1 333 3 107 2 106 1 34 1 362 4 110 2 171 1 340 1 273 1 274 1 176 1 243 1 84 4 296 1 369 1 246 1 15 1 218 2 202 3 372 2 118 1 347 1 62 1 375 1 43 1 
324 5 25 1 354 1 255 1 257 2 227 1 2 2 99 1 189 5 166 1 49 1 52 1 289 1 288 3 53 1 75 1 194 1 333 3 107 2 106 1 34 1 362 4 110 2 171 1 340 1 273 1 274 1 176 1 243 1 84 4 296 1 369 1 246 1 15 1 218 2 202 3 372 2 118 1 347 1 62 1 375 1 43 1 
323 1 160 2 324 4 25 1 354 1 255 1 257 2 227 1 99 1 189 4 166 1 49 1 52 1 288 2 289 1 212 1 53 1 333 2 194 1 107 2 106 1 362 4 171 1 340 1 273 1 176 1 199 2 243 1 84 4 296 1 369 1 15 1 202 2 218 2 347 1 219 2 62 1 375 1 43 1 
170 2 236 1 283 1 9 1 172 1 56 1 294 1 242 1 316 1 317 2 72 1 148 2 89 1 119 1 373 1 232 1 169 1 214 1 
170 2 236 1 35 1 283 1 9 1 172 1 56 1 242 1 304 1 262 1 72 1 148 2 276 2 89 1 119 1 373 1 134 1 169 1 
283 2 262 1 304 1 72 2 148 2 214 1 169 1 170 4 236 2 35 1 172 1 9 1 294 1 56 2 242 1 316 1 317 2 276 2 89 1 119 1 373 1 42 1 
170 2 236 1 311 1 283 1 9 1 172 1 56 1 294 1 242 1 316 1 317 2 72 1 148 2 89 1 373 1 232 1 169 1 214 1 
170 2 236 1 35 1 311 1 283 1 9 1 172 1 56 1 242 1 304 1 262 1 72 1 148 2 276 2 89 1 373 1 134 1 169 1 
283 2 262 1 304 1 72 2 148 2 214 1 169 1 170 4 236 2 35 1 311 1 172 1 9 1 294 1 56 2 242 1 316 1 317 2 276 2 89 1 373 1 42 1 
283 2 262 1 304 1 72 2 148 2 214 1 169 1 170 4 236 2 35 1 172 1 9 1 294 1 56 2 242 1 316 1 317 2 276 2 89 1 373 1 42 1 
352 1 96 1 356 1 70 1 327 1 260 1 261 1 148 2 211 1 74 1 233 1 32 1 169 1 170 2 9 1 172 1 340 1 242 1 317 1 369 1 370 1 14 1 58 1 276 1 88 1 89 1 184 1 373 1 
63 1 96 1 356 1 70 1 260 1 261 1 148 2 264 1 168 1 74 1 233 1 32 1 169 1 170 2 9 1 172 1 340 1 242 1 317 1 369 1 370 1 14 1 58 1 276 1 88 1 89 1 184 1 373 1 
283 2 262 1 304 1 72 2 148 2 214 1 169 1 270 1 170 4 236 2 35 1 172 1 9 1 294 1 56 2 242 1 316 1 317 2 276 2 89 1 373 1 42 1 
352 1 162 1 283 2 96 1 327 1 260 1 304 1 262 1 261 1 72 2 148 2 211 1 74 1 233 1 214 1 32 1 169 1 170 4 35 1 236 2 9 1 172 1 56 2 294 1 340 1 242 1 316 1 317 2 369 1 370 1 14 1 276 2 89 1 184 1 373 1 42 1 322 1 
283 1 27 1 262 1 72 1 148 2 194 1 169 1 214 1 270 1 170 3 35 1 236 1 172 1 9 1 55 1 294 1 56 1 340 1 242 1 316 1 317 2 369 1 13 1 276 1 89 1 373 1 19 1 220 1 42 1 
148 2 172 1 9 1 89 1 119 1 373 1 242 1 169 1 20 1 
283 2 67 1 226 1 356 1 70 1 304 1 262 1 72 4 148 4 335 3 169 1 214 3 270 1 170 17 236 13 35 1 172 2 9 2 56 13 294 3 339 1 312 2 241 1 242 2 316 1 245 1 317 10 58 1 276 7 89 2 92 4 373 2 42 3 
352 1 96 1 356 1 28 1 164 1 70 1 327 1 260 1 261 1 72 1 148 2 74 1 132 1 194 1 233 1 32 1 169 1 78 1 270 1 170 2 172 1 9 1 55 1 340 2 175 1 177 1 242 1 317 1 369 2 370 1 14 1 13 1 58 1 276 1 88 1 89 1 184 1 373 1 
283 5 96 2 98 1 328 1 327 2 148 6 332 1 194 1 233 2 234 1 235 2 111 1 236 6 9 3 55 1 56 6 294 4 340 3 155 1 242 3 14 1 13 1 58 1 346 2 252 2 123 1 352 2 162 2 25 1 356 1 70 1 260 1 261 2 262 4 304 4 72 6 211 2 74 2 132 1 32 1 78 1 169 3 214 2 270 1 170 22 35 2 172 3 82 1 316 1 317 11 369 3 370 2 276 11 88 1 89 3 91 1 373 3 184 2 42 2 
356 1 1 1 70 1 260 7 261 2 50 1 148 4 74 2 132 1 194 1 103 1 293 1 233 2 32 8 169 2 269 1 170 2 311 1 172 2 9 2 55 1 340 1 242 2 200 1 317 1 156 1 369 1 13 1 14 8 276 1 88 2 89 2 119 1 184 3 373 2 93 2 158 1 350 1 322 1 
283 1 224 1 304 1 262 1 72 1 148 2 194 1 169 1 214 1 270 1 170 3 236 1 35 1 172 1 9 1 56 1 55 1 294 1 340 1 242 1 317 1 369 1 13 1 276 2 89 1 373 1 19 1 220 1 42 1 
221 1 45 2 283 6 226 1 304 3 262 3 148 4 305 1 335 1 214 3 170 19 35 3 151 1 172 2 294 3 341 1 312 1 342 2 242 2 316 3 317 9 276 10 157 1 278 1 89 2 92 2 373 2 374 1 42 3 379 1 
221 1 45 1 283 4 163 1 226 2 187 1 357 2 304 2 262 2 148 6 190 1 265 1 335 2 33 1 214 3 170 26 35 2 151 2 172 3 294 3 341 1 342 4 242 3 316 2 317 14 276 12 157 1 89 3 279 1 373 3 92 2 374 2 42 3 379 1 
221 1 45 1 283 8 226 3 187 1 98 1 328 1 148 6 190 1 332 1 335 3 151 2 294 6 341 1 342 4 239 1 155 1 242 3 157 1 123 1 163 1 357 1 262 5 304 4 265 1 305 1 214 5 33 1 170 44 35 4 172 3 312 2 316 4 317 22 276 22 89 3 279 1 373 3 92 5 42 5 374 1 378 1 379 1 
123 1 221 1 45 1 283 8 163 1 226 3 98 1 187 1 357 2 328 1 304 5 262 5 148 8 190 1 265 1 305 1 332 1 335 3 33 1 214 5 170 43 35 4 151 2 172 4 294 6 341 1 312 2 342 4 239 1 155 1 242 4 316 3 317 22 276 21 157 1 89 4 279 1 92 5 373 4 374 1 42 5 378 1 379 1 
123 1 221 1 45 1 283 14 163 1 226 2 98 1 187 1 357 1 328 1 304 7 262 8 148 4 190 1 265 1 332 1 335 4 33 1 214 7 170 52 35 7 151 1 172 2 294 8 341 1 312 2 342 4 155 1 241 2 242 2 316 7 317 27 276 25 157 1 89 2 279 1 92 4 373 2 374 1 42 7 378 1 379 1 
362 1 268 2 65 1 363 1 173 1 197 1 208 1 138 1 84 1 85 1 167 1 37 1 201 1 102 1 263 1 287 1 53 1 76 1 
362 1 268 2 65 1 363 1 173 1 197 1 208 1 138 1 84 1 85 1 167 1 37 1 201 1 102 1 263 1 287 1 53 1 76 1 
362 1 268 2 65 1 363 1 173 1 197 1 208 1 138 1 84 1 85 1 167 1 37 1 201 1 102 1 263 1 287 1 53 1 76 1 
159 1 46 1 355 1 
159 1 46 1 355 1 
79 1 203 1 
79 1 203 1 355 1 
0 1 215 1 
0 1 208 1 102 1 287 1 76 1 31 1 194 2 195 1 292 1 362 1 268 1 363 1 272 1 173 1 55 2 340 2 154 1 215 1 138 1 84 1 369 2 13 2 201 1 371 1 58 1 320 1 348 1 
85 1 363 1 167 1 201 1 102 1 263 1 173 1 208 1 138 1 7 1 
371 1 272 1 
363 1 201 1 102 1 325 1 173 1 208 1 138 1 358 1 188 1 
159 1 46 1 
79 1 203 1 355 1 
356 1 70 1 329 1 260 2 261 1 148 2 74 1 306 1 194 2 233 1 293 1 32 2 169 1 270 1 170 2 338 1 172 1 9 1 340 2 368 1 242 1 275 1 317 1 156 1 369 2 14 2 276 1 89 1 184 1 373 1 93 2 
152 1 326 1 83 1 260 2 261 1 14 2 247 1 319 2 4 1 359 1 182 1 290 1 74 1 142 1 206 1 32 2 308 1 350 1 322 1 
152 1 326 1 209 1 83 1 260 1 14 1 261 1 247 1 319 2 4 1 359 1 290 1 74 1 142 1 206 1 32 1 350 1 
64 1 152 1 260 1 261 1 14 1 88 1 39 1 74 1 184 1 103 1 158 1 233 1 32 1 308 1 
152 1 326 1 83 1 260 1 14 1 261 1 247 1 319 2 4 1 359 1 182 1 290 1 74 1 142 1 206 1 32 1 308 1 350 1 
86 1 
20 1 
362 1 110 1 324 1 354 1 273 1 176 1 227 1 199 1 2 1 99 1 84 1 166 1 52 1 372 1 53 2 75 1 107 1 
282 1 324 5 145 2 96 3 146 2 227 4 2 6 99 2 330 2 51 1 52 4 53 8 331 2 336 1 233 3 107 3 8 3 294 2 343 6 199 12 14 3 115 2 116 6 346 2 204 2 120 1 205 2 23 1 354 4 255 2 260 3 261 3 166 8 262 2 210 1 74 4 32 3 214 2 362 5 309 2 35 2 137 1 365 1 273 9 366 2 176 4 84 5 181 2 318 2 88 1 184 10 42 2 143 1 322 1 
324 1 354 2 163 1 226 1 227 2 2 3 187 1 99 2 166 5 262 2 52 2 265 1 53 5 335 1 107 1 33 1 214 2 362 1 35 2 294 2 273 8 343 5 176 2 199 6 84 1 217 1 181 2 116 5 318 1 17 1 279 1 120 1 205 1 92 1 42 2 
123 1 351 1 25 1 354 1 258 1 227 1 98 1 328 1 166 2 262 1 52 1 231 1 194 1 362 1 294 2 55 1 340 1 273 2 274 1 176 1 84 1 369 1 13 1 181 2 91 1 205 1 19 1 44 1 
137 1 354 1 273 1 176 1 227 1 99 1 166 1 52 1 53 1 143 1 
35 2 294 2 273 5 343 5 199 10 2 5 166 5 262 2 181 2 116 5 346 1 53 5 205 1 42 2 214 2 
362 1 324 1 53 1 107 1 99 1 84 1 
324 4 354 1 227 2 260 4 261 1 166 2 51 2 52 2 192 1 74 1 191 1 103 1 233 1 336 1 107 2 32 4 362 3 174 1 273 2 176 2 84 3 14 4 318 2 59 1 88 2 40 1 184 1 120 2 158 1 
352 1 96 1 356 1 327 1 260 1 261 1 148 2 211 1 74 1 194 2 233 1 32 1 108 1 169 1 170 1 9 1 172 1 55 2 340 3 242 1 369 3 14 1 13 2 370 1 58 1 276 1 88 1 89 1 373 1 184 1 19 2 44 1 
354 1 273 1 343 2 176 1 227 1 2 2 199 4 99 2 166 2 116 2 52 1 318 1 53 4 120 1 378 1 
201 1 208 1 95 1 
201 1 183 1 208 1 
201 1 183 1 208 1 
201 1 183 1 208 1 
201 1 208 1 
363 1 102 1 
201 1 208 1 95 1 
201 1 208 1 95 1 
85 1 207 1 201 1 215 1 208 1 
123 1 170 8 283 3 172 2 294 1 155 1 242 2 98 1 316 1 357 1 317 4 328 1 262 1 304 2 148 4 276 4 89 2 373 2 332 1 378 1 
20 1 
170 4 35 1 283 2 172 1 294 1 57 1 242 1 316 1 317 2 304 1 262 1 148 2 276 2 89 1 373 1 42 1 214 1 
170 7 35 1 283 2 294 1 312 1 226 1 316 1 317 3 304 1 262 1 276 4 92 2 335 1 42 1 214 1 
123 2 283 9 98 1 357 2 328 2 262 3 304 5 148 4 332 1 335 2 214 2 170 23 135 1 35 2 172 2 294 3 312 1 339 1 155 1 241 1 242 2 316 4 317 11 276 12 89 2 92 2 373 2 42 2 378 1 
170 1 276 1 92 1 
170 1 335 1 317 1 
170 6 35 1 172 1 283 3 294 1 57 1 242 1 316 1 317 3 262 1 304 2 148 2 276 3 346 1 89 1 373 1 42 1 214 1 
283 2 226 1 163 1 187 1 262 2 304 1 148 2 265 1 335 1 33 1 214 2 170 12 35 2 172 1 294 2 341 1 242 1 316 1 317 6 276 6 89 1 279 1 92 1 373 1 42 2 
123 1 170 6 283 2 294 1 98 1 316 1 317 3 328 1 262 1 304 1 276 3 
123 1 135 1 170 3 283 2 172 1 155 1 242 1 316 1 357 1 317 1 328 1 304 1 148 2 276 2 89 1 373 1 332 1 
123 2 170 10 172 1 283 5 294 2 341 1 242 1 98 1 316 2 328 2 317 5 304 3 262 2 148 2 276 5 89 1 91 1 373 1 
170 2 172 1 283 1 294 1 341 1 242 1 316 1 317 2 148 2 89 1 373 1 214 1 
170 4 35 1 283 2 172 1 294 1 341 1 242 1 316 1 317 2 304 1 262 1 148 2 276 2 89 1 373 1 42 1 214 1 
123 1 135 1 170 3 172 3 283 2 341 1 242 3 357 1 316 1 328 1 317 1 304 1 148 6 276 2 89 3 305 1 373 3 
123 3 283 12 226 1 228 1 98 2 357 2 328 3 165 1 262 5 304 7 148 10 305 1 332 1 335 3 214 3 135 1 170 34 35 3 81 1 172 5 294 5 57 1 341 1 312 1 155 1 242 5 316 5 317 16 276 18 89 5 92 4 373 5 42 3 378 1 
123 1 283 2 226 1 98 1 328 1 262 1 304 2 148 2 332 1 335 1 214 1 170 11 172 1 294 2 341 1 312 1 155 1 242 1 317 6 276 5 89 1 279 1 92 2 373 1 42 1 378 1 
123 1 283 3 226 1 98 1 328 1 262 1 304 2 148 4 332 1 335 1 214 1 170 11 172 2 294 2 341 1 57 1 312 1 155 1 242 2 316 1 317 6 276 5 89 2 279 1 92 2 373 2 42 1 378 1 
123 1 283 4 226 1 163 1 98 1 187 1 357 1 328 1 262 3 304 3 148 6 265 1 332 1 335 1 33 1 214 2 170 19 35 2 172 3 294 3 57 1 341 1 155 1 242 3 316 1 317 9 276 10 89 3 279 1 92 1 373 3 42 2 378 1 
123 1 283 5 226 1 163 1 98 1 187 1 357 1 328 1 262 2 304 3 148 6 265 1 332 1 335 1 33 1 214 2 170 17 35 1 172 3 294 3 57 1 341 1 155 1 242 3 316 2 317 10 276 7 89 3 279 1 92 1 373 3 42 2 378 1 
123 1 283 2 226 1 98 1 328 1 262 1 304 2 148 2 332 1 335 1 214 1 170 11 172 1 294 2 341 1 312 1 155 1 242 1 317 6 276 5 89 1 279 1 92 2 373 1 42 1 378 1 
283 2 226 1 163 1 187 1 262 2 304 1 148 2 265 1 335 1 33 1 214 2 170 12 35 2 172 1 294 2 341 1 242 1 316 1 317 6 276 6 89 1 279 1 92 1 373 1 42 2 
123 1 283 5 163 1 226 1 98 1 187 1 357 2 328 1 262 2 304 3 148 8 265 1 332 1 335 1 33 1 214 2 170 18 35 1 172 4 294 3 57 1 341 1 155 1 242 4 316 2 317 10 276 8 89 4 279 1 92 1 373 4 42 2 378 1 
283 6 163 1 226 1 187 1 357 2 262 2 304 3 148 8 265 1 305 1 335 1 33 1 214 3 170 16 35 2 172 4 294 3 341 1 242 4 316 3 317 9 276 7 89 4 279 1 92 1 373 4 42 3 
123 3 170 7 283 6 294 1 155 2 98 1 316 3 328 3 317 3 262 1 304 3 276 4 332 1 
123 1 283 4 163 1 226 1 98 1 187 1 357 2 328 1 262 2 304 3 148 8 265 1 305 1 332 1 335 1 33 1 214 2 170 18 35 1 172 4 294 3 341 1 155 1 242 4 316 1 317 10 276 8 89 4 279 1 92 1 373 4 42 2 378 1 
369 1 58 1 289 1 340 1 194 1 303 1 178 1 
253 1 340 1 303 1 178 1 369 1 58 1 16 1 289 1 194 1 104 1 109 1 267 1 
260 1 14 1 88 1 32 1 20 1 
96 1 55 1 340 2 327 1 369 2 260 1 370 1 13 1 14 1 261 1 58 1 88 1 74 1 184 1 132 1 194 1 233 1 32 1 
25 1 96 2 146 1 327 1 260 1 261 1 51 1 74 1 132 1 194 2 233 2 32 1 55 2 340 2 243 1 369 2 14 1 13 1 370 1 15 1 115 1 58 1 184 3 
25 1 96 2 146 1 260 2 261 1 264 1 51 1 74 1 132 1 194 2 233 2 32 2 55 2 340 2 153 1 243 1 369 2 14 2 13 1 370 1 15 1 115 1 58 1 184 3 
362 2 324 1 310 1 150 1 8 1 96 1 255 1 146 1 153 1 99 1 84 2 260 3 14 3 261 1 115 1 51 1 88 1 53 1 74 1 184 4 331 1 233 1 32 3 
362 2 324 1 8 1 96 1 255 1 146 1 153 1 99 1 84 2 260 3 14 3 261 1 115 1 330 1 51 1 88 1 53 1 74 1 184 4 331 1 233 1 32 3 
260 1 269 1 261 1 14 1 74 1 32 1 
269 1 282 1 96 1 1 1 315 1 200 1 156 1 260 6 14 7 261 2 50 1 88 2 277 1 74 3 184 3 193 1 93 1 233 2 32 7 350 1 322 1 
123 1 352 1 162 1 283 2 96 1 98 1 328 1 327 1 260 1 262 1 304 2 261 1 72 1 148 4 211 1 74 1 306 1 132 1 332 1 194 1 233 1 169 2 32 1 270 1 170 6 236 1 172 2 9 2 56 1 294 1 55 1 340 2 155 1 242 2 317 3 369 2 370 1 13 1 14 1 58 2 276 3 89 2 184 1 373 2 378 1 252 1 322 1 
324 2 354 2 255 1 227 2 99 1 260 1 166 1 330 1 52 2 53 1 331 1 336 1 292 1 107 1 32 1 362 3 309 1 8 1 137 1 273 1 366 1 176 2 84 3 14 1 88 1 204 1 184 2 143 1 
282 1 260 2 269 1 261 1 14 2 96 1 74 2 365 1 184 2 331 1 233 1 32 2 322 1 
314 1 153 1 260 4 14 4 261 1 88 1 74 1 184 1 103 1 158 1 233 1 32 4 322 1 
96 1 315 1 260 2 14 2 261 1 140 1 51 1 345 1 74 2 185 1 184 1 193 1 233 1 32 2 
260 1 261 1 14 1 319 1 4 1 88 1 74 1 326 1 206 1 32 1 
368 1 260 2 156 1 14 2 261 1 74 1 184 1 233 1 32 2 322 1 350 1 
314 1 1 1 200 1 260 4 156 1 14 5 261 2 51 1 88 1 74 2 184 3 103 1 158 1 233 2 32 5 322 1 
161 1 314 1 1 1 260 4 156 1 14 5 261 2 51 1 88 1 74 2 184 3 103 1 158 1 233 2 32 5 322 1 
96 1 55 1 340 2 369 2 260 1 370 1 13 1 14 1 261 1 58 1 264 1 88 1 74 1 184 1 132 1 194 1 233 1 32 1 
282 1 96 1 315 1 260 1 14 1 261 1 51 1 277 1 74 2 184 1 193 1 233 1 32 1 
338 1 237 1 340 1 275 1 329 1 369 1 280 1 194 1 251 1 
124 1 280 1 128 1 
58 1 117 1 237 1 280 1 251 1 
362 2 124 1 25 1 237 2 255 1 128 1 243 1 99 1 84 2 286 1 15 1 58 1 117 2 53 1 280 1 133 1 292 1 251 2 106 1 
20 1 
149 1 353 1 364 1 285 1 11 1 334 1 307 1 
130 1 36 1 307 1 
353 1 364 1 313 1 285 1 68 1 11 1 334 1 349 1 307 1 377 1 
149 1 353 1 248 1 364 1 131 1 285 1 11 2 334 1 307 2 
149 1 353 1 112 1 295 1 68 1 11 1 326 1 247 1 319 1 334 1 307 1 
149 1 353 1 285 1 11 1 68 1 334 1 307 1 
353 1 364 1 285 2 11 1 68 1 334 1 307 1 
149 1 353 2 285 1 68 1 11 2 5 1 41 1 334 2 6 1 307 2 
149 2 353 1 112 1 66 1 364 1 285 1 68 1 11 3 180 1 131 2 334 1 122 1 307 3 
149 1 24 1 353 1 364 1 285 1 68 1 11 2 326 1 247 1 4 1 319 2 359 1 131 1 334 1 307 2 
149 2 353 2 112 1 66 1 364 1 285 1 68 1 11 4 248 1 131 2 334 2 298 1 307 4 
149 1 353 1 364 1 285 1 11 1 68 1 334 1 307 1 
149 2 353 1 112 1 66 1 364 2 313 1 285 2 11 3 131 2 334 1 349 2 377 1 307 3 
149 1 100 1 353 1 3 1 364 1 131 1 97 1 285 1 11 2 68 1 334 1 307 2 
353 1 364 1 285 1 68 1 11 1 48 1 334 1 349 1 307 1 377 1 
149 2 38 1 222 2 18 1 
353 1 127 1 11 1 68 1 334 1 307 1 
149 1 353 1 364 1 131 1 285 1 11 2 68 1 334 1 122 1 307 2 
121 1 
149 1 353 1 364 1 285 1 11 1 68 1 334 1 307 1 
149 1 353 1 364 1 285 1 68 1 11 3 259 1 131 1 334 1 122 1 307 3 
149 1 112 1 66 1 349 1 
149 1 285 1 

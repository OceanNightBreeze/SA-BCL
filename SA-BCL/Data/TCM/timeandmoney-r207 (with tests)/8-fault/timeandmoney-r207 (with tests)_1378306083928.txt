#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (73,96,160,168) (73,96,160,168) (73,96,160,168) 52 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (73,96,160,168) (73,96,160,168) (73,96,160,168) 52 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (73,96,160,168) (73,96,160,168) (73,96,160,168) 52 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (73,96,160,168) (73,96,160,168) (73,96,160,168) 52 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (73,96,160,168) (73,96,160,168) (73,96,160,168) 52 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (73,96,160,168) (73,96,160,168) (73,96,160,168) 52 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (73,96,160,168) (73,96,160,168) (73,96,160,168) 52 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (73,96,160,168) (73,96,160,168) (73,96,160,168) 52 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (73,96,160,168) (73,96,160,168) (73,96,160,168) 52 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 152 (130,159,167) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 152 42 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 152 42 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 192 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (73,96,160,168) (73,96,160,168) (73,96,160,168) 52 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (73,96,160,168) (73,96,160,168) (73,96,160,168) (70,211) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (73,96,160,168) (73,96,160,168) (70,211) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (73,96,160,168) (73,96,160,168) (73,96,160,168) (70,211) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (73,96,160,168) (73,96,160,168) (73,96,160,168) 52 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 152 (130,159,167) 304 250 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 152 (130,159,167) 304 250 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 152 (130,159,167) 304 250 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 152 (130,159,167) 304 250 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 152 (130,159,167) 304 250 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 152 (130,159,167) 304 250 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 152 (130,159,167) 304 250 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 152 (130,159,167) 304 250 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 152 (130,159,167) 304 250 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 152 (130,159,167) 304 250 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 152 (130,159,167) 304 250 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 152 (130,159,167) 304 250 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 152 42 229 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 152 42 229 200 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
73 1 168 1 52 1 96 1 253 1 
73 1 168 1 52 1 96 1 253 1 
73 1 168 1 52 1 96 1 253 1 
73 1 168 1 52 1 96 1 253 1 
73 1 168 1 52 1 96 1 253 1 
73 1 168 1 52 1 96 1 253 1 
73 1 168 1 52 1 96 1 253 1 
73 1 168 1 52 1 96 1 253 1 
73 1 168 1 52 1 96 1 253 1 
206 1 
238 1 155 2 7 1 
202 2 175 2 91 2 276 2 68 2 93 1 301 1 251 2 
202 3 1 1 86 2 47 1 91 2 276 2 51 1 94 1 93 1 170 2 240 1 11 1 172 1 175 2 287 1 138 1 178 1 142 1 24 1 251 2 23 1 179 1 27 1 181 1 145 1 219 2 118 2 68 3 301 1 189 1 262 1 36 1 230 1 231 2 156 1 199 1 128 1 
202 1 62 1 175 1 90 1 91 1 276 1 68 1 93 1 251 1 252 1 
159 1 152 1 
238 1 202 1 130 1 167 2 62 1 218 1 91 1 276 1 68 1 282 1 102 1 175 1 38 1 269 2 251 1 
167 1 126 1 269 1 281 1 144 1 
238 1 83 1 167 2 218 1 126 1 261 1 269 2 281 1 
167 1 126 1 269 1 
202 1 167 1 62 1 90 1 91 1 276 1 93 1 68 1 281 1 175 1 79 1 269 1 251 1 252 1 
238 1 
238 1 167 2 218 1 311 1 126 1 261 1 269 2 281 1 
238 1 167 5 218 1 65 1 298 2 261 1 281 2 248 1 196 1 232 1 140 2 161 1 269 5 80 1 126 2 143 1 106 1 25 1 293 2 
206 1 
202 2 91 2 276 1 68 2 301 2 53 1 175 1 81 1 251 1 
153 1 255 1 97 1 
202 1 86 1 68 1 170 1 94 1 301 1 240 1 262 1 12 1 287 1 231 1 156 1 142 1 24 1 128 1 179 1 
202 2 86 1 257 1 91 1 276 1 94 1 68 2 170 1 240 1 97 1 262 1 287 1 231 1 156 1 142 1 24 1 251 1 128 1 179 1 237 1 
202 3 175 1 257 1 91 3 276 3 68 3 301 1 251 3 
202 1 62 1 91 1 276 1 68 1 251 1 252 1 
202 1 62 1 175 1 91 1 276 1 68 1 81 1 251 1 53 1 
130 1 202 4 167 1 86 1 47 1 92 1 91 3 276 3 51 1 94 1 93 1 170 1 240 1 53 1 282 1 11 1 172 1 102 1 287 1 175 2 177 1 178 1 142 1 24 1 23 1 251 3 179 1 181 1 62 1 145 1 257 1 219 2 118 1 68 4 301 1 189 1 262 1 156 1 231 1 38 1 199 1 269 1 128 1 237 1 
202 1 257 1 91 1 276 1 68 1 251 1 42 1 152 1 
238 1 202 3 130 1 167 1 62 1 257 2 185 1 91 3 276 3 68 3 53 1 282 1 102 1 175 1 38 1 269 1 177 1 251 3 237 1 
202 2 257 1 91 2 276 2 68 2 97 1 53 1 153 1 175 1 251 2 
202 1 86 1 68 1 170 1 94 1 301 1 240 1 262 1 287 1 231 1 156 1 142 1 24 1 128 1 179 1 
202 1 86 1 68 1 170 1 94 1 301 1 262 1 287 1 231 1 78 1 312 1 142 1 24 1 128 1 179 1 
203 1 204 1 47 1 48 1 277 1 95 1 242 1 97 2 11 1 172 1 138 2 18 1 19 1 178 2 181 1 255 2 145 1 146 1 33 1 219 2 118 4 189 1 153 2 235 1 
202 1 62 1 209 1 91 1 38 1 276 1 68 1 251 1 
202 4 257 2 91 4 276 4 68 4 301 1 53 1 152 1 246 1 175 1 251 4 42 1 292 1 237 1 
202 2 209 1 62 1 91 2 276 2 68 2 251 2 252 1 
124 1 5 1 
124 1 5 1 
113 1 184 1 
113 1 184 1 
113 1 184 1 
124 1 5 1 129 1 
113 1 184 1 210 1 124 2 5 2 100 1 
124 1 60 1 5 1 
124 1 5 1 129 1 
124 1 5 1 129 1 
308 1 124 1 5 1 
308 1 124 1 5 1 
308 1 124 1 5 1 
238 1 167 2 239 2 5 2 221 2 10 1 34 1 100 1 121 1 263 1 195 3 306 1 124 2 290 2 22 1 269 2 272 1 26 2 166 2 
215 1 84 1 202 2 167 1 239 1 148 1 91 2 276 2 68 2 5 1 301 1 244 1 74 1 263 1 195 1 264 1 124 1 290 1 60 1 269 1 251 2 82 1 26 1 166 1 
123 1 32 1 108 1 
123 1 32 1 265 1 
87 1 217 1 32 3 265 1 260 1 108 2 
44 1 87 1 217 1 32 2 265 1 108 1 
87 2 217 1 32 2 265 1 108 1 
238 2 167 5 45 1 203 1 3 1 95 1 7 1 244 1 281 4 248 3 289 2 18 1 139 1 140 1 143 1 293 1 254 1 112 2 295 1 65 2 218 1 33 1 148 1 298 1 67 1 261 1 74 1 155 3 37 1 126 1 269 5 127 2 
167 1 58 1 269 1 281 1 191 1 192 1 
238 3 167 3 45 1 203 1 3 1 95 1 7 2 281 2 248 3 289 2 18 1 140 1 139 1 25 1 254 1 293 1 112 1 218 1 65 2 33 1 298 1 67 1 74 1 155 4 269 3 127 2 
238 4 167 4 45 1 203 2 3 1 95 2 7 3 281 3 248 5 289 4 18 2 140 1 139 2 212 1 25 1 293 1 254 1 112 2 218 1 65 4 186 1 33 2 298 1 67 1 74 2 155 7 157 1 269 4 127 4 
206 1 
283 1 24 1 
300 1 
94 1 24 1 
49 1 6 2 94 1 21 1 142 1 24 3 
94 1 142 1 24 1 
208 1 24 1 
131 1 33 1 48 2 118 7 277 3 278 1 72 1 302 1 227 1 15 2 59 1 138 4 18 1 39 1 178 3 61 1 201 1 
131 1 33 1 48 2 118 7 277 3 278 1 72 1 302 1 227 1 15 2 59 1 138 4 18 1 39 1 178 3 61 1 201 1 
131 1 169 1 33 1 48 2 118 7 277 3 278 1 72 1 302 1 227 1 15 2 59 1 138 4 18 1 39 1 178 3 61 1 201 1 
131 5 203 3 48 5 278 2 277 10 95 3 243 1 280 1 11 1 172 1 284 4 15 3 59 1 138 16 139 3 18 4 178 15 61 1 107 1 181 1 63 1 297 1 145 1 116 3 219 2 33 4 118 31 72 1 302 2 227 2 122 1 233 1 39 1 201 2 
131 1 48 3 278 1 277 4 101 1 11 2 172 2 15 2 138 5 18 1 178 4 61 1 181 2 145 2 33 1 219 4 118 9 71 1 72 1 302 1 227 1 122 1 39 1 201 1 
73 1 168 1 52 1 96 1 253 1 
73 1 168 1 96 1 70 1 253 1 
73 1 160 1 211 1 253 1 
73 1 168 1 96 1 70 1 253 1 
73 1 168 1 52 1 96 1 253 1 
313 1 
86 2 167 2 45 1 133 1 4 1 170 2 94 1 136 1 241 1 248 1 287 1 140 1 250 1 143 1 24 1 179 1 293 1 65 1 298 1 261 1 262 2 152 1 226 1 304 1 75 1 231 2 159 1 269 2 126 2 271 1 
167 1 304 1 75 1 159 1 4 1 250 1 269 1 152 1 
167 1 304 1 75 1 159 1 4 1 250 1 269 1 152 1 
167 1 304 1 75 1 159 1 4 1 250 1 269 1 152 1 
167 2 304 1 75 1 159 1 4 1 311 1 250 1 126 1 261 1 269 2 152 1 
167 1 298 1 4 1 152 1 75 1 304 1 159 1 140 1 269 1 250 1 143 1 293 1 
167 1 304 1 75 1 159 1 4 1 250 1 269 1 152 1 
167 1 304 1 75 1 159 1 4 1 250 1 269 1 152 1 
167 1 304 1 75 1 159 1 4 1 250 1 269 1 152 1 
167 1 304 1 75 1 159 1 4 1 250 1 269 1 152 1 
167 1 304 1 75 1 159 1 4 1 250 1 269 1 152 1 
167 1 298 1 4 1 152 1 75 1 304 1 159 1 140 1 269 1 250 1 143 1 293 1 
172 1 145 1 47 1 219 2 19 1 206 1 189 1 181 1 11 1 
131 1 203 2 47 1 48 1 277 2 95 1 243 1 97 11 11 2 172 2 284 3 17 1 138 8 139 2 18 1 20 1 178 6 27 1 181 2 111 1 255 11 296 1 145 2 297 1 116 3 219 4 33 2 118 14 301 1 189 2 303 1 153 4 199 1 
202 2 86 1 47 1 91 1 276 1 94 1 170 1 240 1 11 1 12 1 172 1 14 1 103 1 287 1 138 1 142 1 178 1 24 1 251 1 179 1 181 1 27 1 145 1 257 1 219 2 118 2 299 1 68 2 301 1 189 1 262 1 303 1 153 1 156 1 231 1 199 1 128 1 237 1 
86 3 91 1 170 3 94 2 240 2 95 2 97 7 11 3 172 3 173 2 15 1 176 1 18 3 178 10 251 1 23 2 24 2 179 2 27 1 181 3 255 7 257 1 33 3 118 20 258 1 259 2 188 2 189 3 262 1 199 1 39 1 201 1 128 2 202 3 131 4 203 2 47 3 48 4 276 1 277 8 54 2 287 2 138 10 139 2 142 2 61 1 145 3 219 6 222 1 68 3 301 2 72 1 303 1 153 7 227 1 231 3 156 2 163 1 237 1 
43 1 274 1 202 1 86 8 47 2 91 1 276 1 170 7 94 2 136 1 241 1 11 2 171 1 172 2 287 2 138 1 141 1 19 1 178 1 251 1 24 3 179 2 181 2 27 1 182 1 257 1 145 2 219 4 118 2 222 1 68 1 189 2 262 2 154 1 231 8 230 2 198 1 199 1 270 1 
202 1 203 1 47 1 48 1 91 1 276 1 277 1 95 1 97 1 53 1 11 1 172 1 175 1 138 1 139 1 18 1 178 2 251 1 181 1 255 1 145 1 219 2 33 1 118 3 68 1 189 1 303 1 153 1 267 1 
131 1 255 1 203 1 145 1 47 1 219 2 33 1 118 2 277 1 242 1 97 1 189 1 11 1 153 1 172 1 138 2 19 1 181 1 
255 1 145 1 204 1 47 1 219 2 48 1 118 2 277 1 95 1 97 1 189 1 11 1 153 1 172 1 18 1 19 1 178 2 181 1 
131 1 203 1 47 1 48 1 277 2 95 1 97 2 11 1 172 1 138 2 139 1 18 1 19 1 178 2 181 1 255 2 145 1 33 1 219 2 118 4 189 1 153 2 
182 1 131 1 255 1 203 1 145 1 47 1 219 2 33 1 118 2 277 1 242 1 97 1 189 1 11 1 153 1 172 1 138 2 181 1 
182 1 255 1 145 1 204 1 47 1 219 2 48 1 118 2 277 1 95 1 97 1 189 1 11 1 153 1 172 1 18 1 178 2 181 1 
131 1 203 1 47 1 48 1 277 2 95 1 97 2 11 1 172 1 138 2 139 1 18 1 178 2 181 1 182 1 255 2 145 1 33 1 219 2 118 4 189 1 153 2 
131 1 255 2 203 1 145 1 47 1 219 2 33 1 48 1 118 4 277 2 95 1 97 2 189 1 11 1 153 2 172 1 138 2 18 1 139 1 178 2 181 1 
202 1 86 1 47 1 94 1 170 1 240 1 11 1 172 1 287 1 138 1 142 1 178 1 23 1 24 1 179 1 27 1 181 1 145 1 219 2 118 2 68 1 301 1 189 1 262 1 156 1 231 1 199 1 128 1 
202 1 86 1 47 1 94 1 170 1 11 1 172 1 287 1 138 1 142 1 178 1 24 1 179 1 27 1 181 1 145 1 219 2 118 2 68 1 301 1 189 1 262 1 76 1 78 1 231 1 199 1 312 1 128 1 
131 1 203 1 47 1 48 1 277 2 95 1 97 2 11 1 172 1 138 2 139 1 18 1 178 2 181 1 255 2 145 1 33 1 219 2 118 4 189 1 303 1 153 2 
43 1 131 1 202 1 86 1 203 1 47 1 48 1 277 2 170 1 94 1 95 1 240 1 97 2 11 1 172 1 173 1 287 1 138 2 18 1 139 1 178 2 142 1 23 1 24 1 179 1 181 1 255 2 145 1 33 1 219 2 118 4 68 1 189 1 153 2 156 1 231 1 128 1 
131 1 202 1 203 1 47 1 91 1 276 1 277 1 95 1 97 1 53 1 11 1 172 1 175 1 138 2 18 1 139 1 178 1 251 1 181 1 29 1 255 1 145 1 219 2 33 1 118 3 68 1 189 1 303 1 153 1 
0 2 131 3 203 3 48 3 277 6 95 3 243 1 101 1 11 2 172 2 284 2 286 1 138 9 139 3 18 3 178 10 181 2 64 1 115 1 145 2 297 1 116 1 117 2 219 4 33 3 119 1 118 19 150 1 190 1 305 1 
131 2 0 4 203 3 89 1 48 2 277 4 95 2 243 2 101 1 11 3 172 3 56 1 284 2 286 1 138 14 18 2 139 3 178 12 291 1 181 3 64 2 115 1 145 3 116 2 117 1 219 6 33 3 118 26 190 1 122 2 305 2 197 1 162 1 273 1 
0 4 131 4 203 4 89 1 48 4 277 8 95 4 243 3 101 1 11 3 172 3 56 1 284 4 286 1 15 1 138 20 139 4 18 5 178 21 61 1 291 1 181 3 64 1 115 1 145 3 297 1 116 3 117 1 219 6 33 5 119 1 118 41 190 1 72 1 227 1 122 1 305 2 197 1 310 1 39 1 162 1 201 1 273 1 
0 4 131 3 203 4 89 1 48 4 277 7 95 3 243 3 101 1 11 4 172 4 56 1 284 4 286 1 15 1 138 20 139 4 18 4 178 18 61 1 291 1 181 4 64 1 115 1 145 4 297 1 116 3 117 1 219 8 33 5 119 1 118 38 190 1 72 1 227 1 122 2 305 2 197 1 310 1 39 1 162 1 201 1 273 1 
0 4 131 7 203 7 89 1 48 7 277 14 95 7 243 2 101 1 11 2 172 2 56 1 284 4 286 1 15 1 138 27 139 7 18 8 178 25 61 1 291 1 181 2 111 2 64 1 115 1 145 2 297 2 116 4 117 1 219 4 33 8 118 52 190 1 72 1 227 1 122 1 305 1 197 1 39 1 162 1 201 1 273 1 
306 1 239 1 290 1 124 1 5 1 22 1 99 1 100 1 26 1 166 1 
84 1 60 1 
30 1 239 1 290 1 124 1 5 1 125 1 98 1 26 1 166 1 
238 1 167 1 239 1 5 1 221 1 34 1 100 1 121 1 263 1 195 2 306 1 124 1 290 1 22 1 269 1 272 1 26 1 166 1 
238 1 167 1 239 1 5 1 221 1 34 1 100 1 121 1 263 1 195 2 306 1 124 1 290 1 22 1 269 1 272 1 26 1 166 1 
238 1 167 1 239 1 5 1 221 1 34 1 100 1 121 1 263 1 195 2 306 1 124 1 290 1 22 1 269 1 272 1 26 1 166 1 
134 1 210 1 129 1 
134 1 210 1 129 1 
214 1 308 1 
214 1 308 1 210 1 
215 1 264 1 
202 2 84 1 167 1 239 1 91 2 276 2 5 1 244 1 281 1 290 1 60 1 251 2 26 1 215 1 256 1 148 1 68 2 221 1 301 1 74 1 195 1 264 1 124 1 269 1 272 1 82 1 166 1 
134 1 129 1 
214 1 308 1 210 1 
202 2 86 2 47 1 275 1 91 2 94 1 170 2 135 1 9 1 11 1 172 1 287 1 138 1 178 1 24 1 179 1 181 1 27 1 216 1 145 1 31 1 219 2 118 2 68 2 189 1 303 1 154 1 231 2 230 2 198 1 199 1 
43 1 85 1 86 2 132 1 32 2 260 1 222 1 170 2 245 1 151 1 123 1 174 1 287 1 307 1 265 1 231 2 40 1 108 1 179 1 
85 1 86 1 32 2 260 1 222 1 170 1 245 1 225 1 123 1 174 1 287 1 307 1 265 1 231 1 40 1 108 1 179 1 
85 1 86 1 132 1 94 1 170 1 224 1 136 1 241 1 262 1 247 1 287 1 231 1 24 1 179 1 
85 1 86 1 132 1 32 2 260 1 222 1 170 1 245 1 151 1 123 1 174 1 287 1 307 1 265 1 231 1 40 1 108 1 179 1 
223 1 
206 1 
248 1 65 1 104 1 298 1 140 1 205 1 143 1 293 1 
238 8 86 3 167 5 94 3 170 3 6 2 7 6 95 2 248 9 16 1 18 2 24 10 179 3 109 2 180 2 33 2 187 1 261 3 262 1 35 2 266 1 126 5 269 5 127 6 271 1 43 1 45 2 203 2 49 1 50 2 282 2 54 2 283 3 208 2 287 4 288 2 289 6 140 4 139 2 142 3 143 4 293 4 294 2 218 2 65 8 149 2 298 4 77 1 155 12 231 3 232 1 234 2 161 1 165 1 
238 5 45 1 167 1 203 2 89 1 7 3 95 2 243 1 56 1 248 8 284 1 288 2 289 5 140 2 139 2 18 2 143 2 291 1 180 1 293 2 116 1 65 5 218 2 33 2 298 2 220 1 261 1 120 1 155 6 197 1 269 1 126 1 127 5 162 1 271 1 
167 1 298 1 207 1 227 1 285 1 288 1 140 1 269 1 143 1 201 1 293 1 
238 1 65 1 218 1 298 1 248 1 232 1 140 1 161 1 143 1 293 1 
238 5 203 2 65 5 33 2 7 5 95 2 54 1 248 5 155 10 288 2 289 5 139 2 18 2 127 5 180 1 
238 1 167 1 218 1 269 1 126 1 261 1 
86 4 45 2 167 3 133 1 94 1 170 4 136 1 241 1 249 1 248 2 287 1 140 2 143 1 24 1 25 1 179 1 293 2 114 1 65 2 298 2 261 2 262 2 226 1 77 1 266 2 231 4 126 4 269 3 271 2 
202 3 86 1 47 1 91 2 276 2 51 1 170 1 93 1 94 1 240 1 11 1 172 1 175 2 287 1 178 1 142 1 251 2 23 1 24 1 179 1 181 1 145 1 219 2 118 1 68 3 301 1 189 1 262 1 231 1 156 1 199 1 128 1 
238 4 45 1 65 2 218 2 298 1 7 2 248 1 15 1 155 4 289 2 140 1 127 2 143 1 271 1 293 1 
13 1 290 1 166 1 
215 1 306 1 290 1 213 1 166 1 
13 1 290 1 166 1 
13 1 290 1 166 1 
57 1 290 1 166 1 
57 1 290 1 166 1 
57 1 290 1 166 1 
290 1 166 1 
124 1 5 1 
131 1 145 2 33 1 219 4 48 2 118 8 277 3 72 1 11 2 172 2 227 1 15 1 122 1 138 4 18 1 39 1 178 4 61 1 201 1 181 2 
206 1 
131 1 203 1 145 1 219 2 33 1 48 1 118 4 277 2 95 1 11 1 172 1 137 1 138 2 18 1 139 1 178 2 181 1 
131 1 203 1 297 1 116 1 33 1 48 1 118 7 277 2 95 1 243 1 284 2 138 3 18 1 139 1 178 4 
131 4 203 2 48 5 277 9 95 2 11 2 172 2 284 2 15 1 17 1 138 11 139 2 18 3 178 12 61 1 181 2 111 1 297 1 145 2 116 2 33 3 219 4 118 23 72 1 227 2 122 2 268 1 39 1 201 2 
284 1 118 1 178 1 
116 1 138 1 118 1 
131 1 203 1 145 1 219 2 33 1 48 2 118 6 277 3 95 1 11 1 54 1 172 1 137 1 138 3 139 1 18 1 178 3 181 1 
131 1 203 2 89 1 48 1 277 2 95 2 243 1 101 1 11 1 172 1 284 1 56 1 138 6 139 2 18 2 178 6 291 1 181 1 145 1 116 1 219 2 33 2 118 12 197 1 162 1 
131 1 33 1 48 1 118 6 277 2 227 1 138 3 18 1 39 1 178 3 201 1 
131 1 145 1 219 2 48 1 118 3 277 2 72 1 11 1 172 1 227 1 122 1 138 1 268 1 178 2 61 1 201 1 181 1 
227 1 285 1 48 1 277 1 201 1 
131 1 203 1 145 1 219 2 33 1 118 2 277 1 101 1 11 1 172 1 138 2 181 1 
131 1 203 1 145 1 219 2 33 1 48 1 118 4 277 2 95 1 101 1 11 1 172 1 138 2 18 1 139 1 178 2 181 1 
131 1 145 3 219 6 48 1 119 1 118 3 277 2 101 1 11 3 172 3 227 1 122 1 138 1 268 1 178 2 201 1 181 3 
131 5 203 3 48 7 277 12 95 3 243 1 101 1 11 5 172 5 284 4 15 1 137 1 138 16 139 3 18 5 178 18 61 1 107 1 181 5 63 1 145 5 297 1 116 3 219 10 33 5 119 1 118 34 72 1 227 3 122 2 233 1 268 1 39 2 201 3 
48 2 277 2 243 1 101 1 11 1 172 1 284 1 15 1 138 4 18 1 178 4 61 1 181 1 145 1 116 1 33 1 219 2 118 8 72 1 227 1 39 1 162 1 201 1 
131 1 203 1 48 2 277 3 243 1 101 1 11 2 172 2 284 2 15 1 137 1 138 6 18 1 139 1 178 5 61 1 181 2 145 2 297 1 116 1 219 4 33 2 118 11 72 1 227 1 39 1 162 1 201 1 
131 1 203 2 89 1 48 3 277 4 95 2 243 1 101 1 11 3 172 3 56 1 284 1 15 1 137 1 138 9 139 2 18 3 178 10 61 1 291 1 181 3 145 3 116 1 219 6 33 3 118 19 72 1 227 1 122 1 197 1 39 1 162 1 201 1 
131 2 203 2 89 1 48 3 277 5 95 1 243 1 101 1 11 3 172 3 284 1 56 1 15 1 137 1 138 10 139 2 18 2 178 7 61 1 291 1 181 3 145 3 116 1 219 6 33 3 118 17 72 1 227 1 122 1 197 1 39 1 162 1 201 1 
48 2 277 2 243 1 101 1 11 1 172 1 284 1 15 1 138 4 18 1 178 4 61 1 181 1 145 1 116 1 33 1 219 2 118 8 72 1 227 1 39 1 162 1 201 1 
131 1 203 2 89 1 48 1 277 2 95 2 243 1 101 1 11 1 172 1 284 1 56 1 138 6 139 2 18 2 178 6 291 1 181 1 145 1 116 1 219 2 33 2 118 12 197 1 162 1 
131 2 203 2 89 1 48 3 277 5 95 1 243 1 101 1 11 4 172 4 56 1 284 1 15 1 137 1 138 10 139 2 18 2 178 8 61 1 291 1 181 4 145 4 116 1 219 8 33 3 118 18 72 1 227 1 122 2 197 1 39 1 162 1 201 1 
131 3 203 3 89 1 48 3 277 6 95 2 243 1 101 1 11 4 172 4 56 1 284 1 138 9 139 3 18 2 178 7 291 1 181 4 145 4 116 1 219 8 33 3 118 16 119 1 122 2 197 1 162 1 
131 3 33 1 48 3 118 7 277 6 72 2 227 3 138 3 18 1 39 1 178 4 61 1 201 3 
131 1 203 2 89 1 48 3 277 4 95 1 243 1 101 1 11 4 172 4 56 1 284 1 15 1 138 10 139 2 18 2 178 8 61 1 291 1 181 4 145 4 116 1 219 8 33 3 118 18 119 1 72 1 227 1 122 2 197 1 39 1 162 1 201 1 
229 1 42 1 152 1 
183 1 55 1 229 1 228 1 309 1 200 1 42 1 152 1 
86 1 231 1 170 1 206 1 262 1 
202 2 86 1 257 1 91 1 276 1 94 1 68 2 170 1 301 1 240 1 262 1 287 1 231 1 142 1 24 1 251 1 128 1 179 1 
202 2 86 1 91 2 276 2 170 1 94 2 240 1 102 1 208 1 287 1 142 2 251 1 24 3 179 1 109 1 62 1 257 1 68 2 301 1 231 1 266 1 38 1 128 1 
202 2 86 2 91 2 276 2 170 2 94 2 102 1 208 1 287 1 142 2 251 1 24 3 179 1 109 1 62 1 257 1 68 2 301 1 231 2 266 1 38 1 312 1 41 1 128 1 
238 1 167 2 86 3 218 1 94 1 170 3 6 1 262 1 282 1 283 1 208 1 287 1 266 1 231 3 105 1 269 2 126 1 142 1 164 1 24 4 41 1 179 1 109 1 
238 1 294 1 167 2 86 3 218 1 94 1 170 3 6 1 262 1 282 1 283 1 208 1 287 1 266 1 231 3 269 2 126 1 142 1 24 4 41 1 179 1 109 1 
86 1 287 1 231 1 170 1 141 1 179 1 
43 1 274 1 86 7 147 1 49 1 222 1 170 6 94 2 262 2 171 1 287 3 230 1 231 7 141 1 198 1 270 1 142 1 24 3 236 1 179 2 110 1 
43 1 202 2 86 1 47 2 48 2 91 1 276 1 277 2 94 1 170 1 240 1 97 1 11 2 172 2 173 1 15 1 287 1 138 3 18 1 178 3 142 1 61 1 24 1 251 1 23 1 179 1 181 2 255 1 145 2 257 1 31 1 33 1 219 4 118 6 68 2 259 1 301 2 189 2 72 1 303 1 153 1 227 1 231 1 156 1 39 1 201 1 128 1 
238 1 86 1 167 3 170 1 6 1 281 1 282 1 283 1 248 1 140 2 143 2 24 2 293 2 294 1 218 1 65 1 298 2 149 1 261 1 262 1 35 1 77 1 231 1 232 1 234 1 161 1 269 3 126 2 
43 1 86 2 49 1 6 1 170 2 94 1 16 1 287 2 231 2 141 1 142 1 24 2 179 1 
43 1 86 4 66 1 170 4 94 1 136 1 241 1 262 1 287 1 231 4 24 1 41 1 179 1 
86 2 147 1 46 1 170 2 94 1 8 1 287 2 266 1 231 2 176 1 142 1 24 1 236 1 179 1 
86 1 123 1 287 1 32 1 265 1 231 1 170 1 245 1 262 1 179 1 
43 1 86 2 287 1 231 2 94 1 198 1 222 1 170 2 135 1 24 1 179 1 
43 1 274 1 86 5 66 1 170 4 94 2 241 1 136 1 262 1 171 1 287 2 266 1 231 5 198 1 24 3 179 2 
43 1 274 1 86 5 66 1 170 4 94 2 241 1 136 1 262 1 193 1 287 2 266 1 231 5 198 1 24 3 179 2 
202 2 86 1 257 1 91 1 276 1 94 1 68 2 170 1 301 1 262 1 287 1 231 1 142 1 312 1 24 1 251 1 128 1 179 1 
86 1 147 1 49 1 170 1 94 1 287 2 266 1 231 1 142 1 24 1 236 1 179 1 110 1 
216 1 202 1 275 1 91 1 68 1 69 1 9 1 194 1 28 1 
158 1 279 1 28 1 
194 1 2 1 301 1 69 1 28 1 
238 1 130 1 167 2 62 1 88 1 2 2 218 1 301 1 279 1 69 2 282 1 281 1 102 1 194 2 158 1 38 1 269 2 177 1 28 1 

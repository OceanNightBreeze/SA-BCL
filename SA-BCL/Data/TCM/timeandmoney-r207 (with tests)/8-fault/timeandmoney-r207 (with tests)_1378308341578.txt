#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (96,257) (96,257) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (96,257) (96,257) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (96,257) (96,257) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (96,257) (96,257) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 136 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (22,112,338) (140,201,341) (140,201,341) (140,201,341) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 123 334 9 208 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 220 (47,70) (47,70) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 10 2 241 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (22,112,338) (22,112,338) (22,112,338) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 10 2 241 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 10 273 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
164 1 40 1 204 1 169 1 257 1 183 1 108 2 96 1 16 1 211 2 225 1 376 1 297 1 357 1 60 1 
164 1 40 1 204 1 169 1 257 1 183 1 108 2 96 1 16 1 211 2 225 1 376 1 297 1 357 1 60 1 
164 1 40 1 204 1 169 1 257 1 183 1 108 2 96 1 16 1 211 2 225 1 376 1 297 1 357 1 60 1 
164 1 40 1 204 1 169 1 257 1 183 1 108 2 96 1 16 1 211 2 225 1 376 1 297 1 357 1 60 1 
164 1 42 1 108 4 33 1 44 1 263 3 23 1 16 1 211 4 265 3 160 1 8 2 339 1 225 1 376 1 380 2 297 1 357 1 
164 1 204 1 169 1 244 1 108 2 265 1 23 1 211 2 16 1 339 1 225 1 196 1 376 1 357 1 355 1 60 1 
164 2 117 1 108 3 263 1 23 1 211 3 265 2 160 1 339 1 225 2 380 1 357 1 60 1 
164 2 91 1 42 1 117 1 44 1 263 7 23 1 211 9 265 5 8 2 339 1 297 1 373 1 158 1 108 9 33 1 16 1 160 3 189 1 225 2 376 1 380 4 357 1 60 1 
164 2 91 1 42 1 117 1 44 1 263 7 23 1 211 9 265 5 8 2 339 1 297 1 373 1 158 1 108 9 33 1 16 1 160 3 189 1 225 2 376 1 380 4 357 1 60 1 
330 1 38 1 272 1 
123 2 272 1 61 1 
320 1 329 2 64 2 15 1 141 2 304 2 144 2 11 2 
320 1 166 2 64 2 141 2 363 2 287 2 3 1 144 2 207 1 148 1 72 1 149 1 47 1 235 1 25 1 236 1 48 1 177 2 75 1 329 3 53 1 220 1 221 1 156 1 304 2 306 1 246 1 129 1 11 3 275 2 82 1 110 1 15 1 277 1 313 1 84 1 85 1 
113 1 329 1 64 1 15 1 141 1 304 1 144 1 11 1 283 1 337 1 
113 1 0 1 64 1 141 2 144 1 337 1 231 1 366 1 150 1 74 1 329 2 181 1 304 1 305 1 11 2 272 1 15 1 86 1 378 1 38 1 283 2 
113 1 64 2 141 2 144 2 337 1 231 1 366 1 150 2 329 2 181 1 304 2 305 1 11 2 272 1 15 1 86 2 378 1 38 1 283 2 
131 1 1 1 150 1 86 1 138 1 
131 1 90 1 150 2 38 1 86 2 272 1 261 1 138 1 
150 1 86 1 138 1 
113 1 329 1 64 1 141 1 181 1 304 1 144 1 11 1 337 1 131 1 15 1 150 1 86 1 283 1 
272 1 
131 1 345 1 90 1 150 2 38 1 86 2 272 1 138 1 
300 1 89 1 219 1 90 1 128 1 272 1 206 1 21 1 131 2 250 1 69 2 251 1 71 2 351 2 150 5 38 1 86 5 87 1 138 2 
320 1 26 1 329 3 64 1 141 3 304 3 144 3 11 3 
113 1 329 1 141 1 304 1 144 1 11 1 283 1 
329 1 64 1 141 1 116 1 304 1 144 1 11 1 145 1 283 1 
141 3 3 1 287 1 193 1 144 3 95 1 145 1 231 1 148 1 47 1 149 1 235 1 150 1 48 1 236 1 53 1 304 3 305 1 157 1 246 1 11 4 15 1 110 1 320 1 166 1 64 2 363 1 207 1 366 1 72 1 177 2 26 1 329 4 220 1 221 1 129 1 275 1 81 1 82 1 277 1 84 1 85 1 86 1 378 1 283 2 
320 1 329 2 26 1 141 2 304 1 55 1 144 1 74 1 11 2 
26 2 329 3 64 1 141 3 304 3 305 1 157 1 144 3 145 1 272 1 11 3 231 1 81 1 366 1 150 1 86 1 378 1 215 1 283 1 
26 1 329 2 64 1 141 2 304 2 144 2 145 1 11 2 20 1 122 1 
320 1 329 1 166 1 220 1 363 1 3 1 246 1 11 1 275 1 148 1 277 1 72 1 235 1 48 1 85 1 
320 1 329 1 166 1 199 1 363 1 3 1 246 1 11 1 275 1 276 1 148 1 277 1 72 1 235 1 85 1 
321 1 287 4 207 1 20 2 7 1 367 1 121 2 122 2 149 1 24 1 177 2 342 1 238 1 370 1 53 1 221 1 184 1 309 1 187 1 82 1 110 1 313 2 84 2 203 1 
329 1 366 1 141 1 304 1 144 1 205 1 11 1 283 1 
26 1 329 2 166 1 141 1 220 1 304 1 363 1 3 1 157 1 246 1 144 1 11 2 20 1 275 1 148 1 277 1 72 1 235 1 48 1 85 1 
320 1 330 1 
320 2 329 2 64 1 141 2 116 1 304 1 144 1 11 2 145 1 
122 1 121 1 20 1 
320 1 88 1 329 1 166 1 220 1 363 1 3 1 246 1 11 1 275 1 148 1 277 1 72 1 235 1 48 1 85 1 
76 1 320 1 26 2 329 5 64 1 141 5 304 4 157 1 55 1 144 4 11 5 145 1 74 1 298 1 
113 1 329 2 141 2 304 2 205 1 144 2 11 2 283 1 
311 1 271 1 37 1 
311 1 271 1 37 1 
311 1 271 1 280 1 
311 1 271 1 280 1 
311 1 271 1 280 1 
311 1 271 1 
311 1 271 1 
249 1 270 1 
249 1 270 1 
249 1 270 1 
311 1 271 1 37 1 
100 1 311 1 271 1 
249 1 270 1 311 2 271 2 73 1 200 1 
180 1 114 1 218 2 271 2 65 2 324 1 170 1 272 1 289 2 262 2 130 3 194 1 311 2 57 1 150 2 73 1 190 2 86 2 163 1 
320 1 141 2 65 1 118 1 144 2 262 1 289 1 100 1 150 1 296 1 178 1 102 1 180 1 329 2 218 1 271 1 304 2 11 2 130 1 375 1 83 1 311 1 86 1 356 1 
16 1 376 1 297 1 
16 1 376 1 196 1 
286 1 361 1 16 3 167 1 196 1 297 2 
361 1 16 2 167 1 196 1 101 1 297 1 
361 1 16 2 167 2 196 1 297 1 
89 1 90 1 206 2 98 2 21 3 69 1 367 1 266 2 71 1 173 1 123 3 24 1 150 5 296 1 153 1 102 1 370 1 31 1 272 2 34 1 274 1 131 4 83 1 351 1 316 1 134 1 203 1 86 5 111 2 38 1 61 1 138 1 
89 1 1 5 90 1 206 6 98 6 290 1 21 8 46 1 69 2 367 3 266 6 71 2 173 3 123 9 24 3 150 9 153 1 102 4 370 3 52 1 372 5 272 5 34 2 131 7 250 1 351 2 36 1 134 2 203 3 86 9 38 1 162 1 136 1 61 3 138 6 
113 1 64 1 141 1 144 1 206 2 337 1 98 2 21 3 69 1 367 1 71 1 266 2 173 1 123 4 24 1 150 3 102 1 329 1 370 1 181 1 304 1 31 1 11 1 272 3 34 1 274 1 131 2 250 1 15 1 351 1 134 1 203 1 38 1 86 3 111 1 283 1 61 2 
206 2 98 2 21 3 69 1 367 1 266 2 71 1 173 1 123 4 24 1 150 2 102 1 370 1 31 1 272 2 34 1 274 1 131 1 250 1 351 1 134 1 203 1 86 2 111 1 136 1 61 2 
235 1 3 1 
302 2 132 1 277 1 174 1 235 3 3 1 
302 1 330 1 235 1 
18 1 235 1 
54 1 
277 1 235 1 3 1 
235 1 192 1 
155 1 360 1 370 1 126 1 287 7 184 3 4 1 146 1 309 2 333 1 367 1 313 4 84 3 268 1 237 1 269 1 137 2 
155 1 360 1 370 1 126 1 287 7 184 3 4 1 146 1 309 2 333 1 367 1 313 4 84 3 268 1 237 1 269 1 137 2 
155 1 360 1 103 1 370 1 126 1 287 7 184 3 4 1 146 1 309 2 333 1 367 1 313 4 84 3 268 1 237 1 269 1 137 2 
62 3 360 2 115 1 143 1 287 31 146 1 4 5 207 1 45 1 234 1 367 4 173 3 149 1 24 3 177 2 237 2 268 2 269 2 155 1 126 1 370 4 53 1 197 1 221 1 184 10 309 5 12 4 333 1 224 1 313 16 84 15 203 3 226 1 137 3 
155 1 360 1 370 1 53 2 77 1 221 2 143 1 287 9 184 4 106 1 146 1 4 1 207 2 309 3 333 1 367 1 313 5 84 4 149 2 177 4 268 1 237 1 269 1 137 2 
164 1 359 1 140 1 29 1 80 1 108 1 260 1 338 1 211 1 161 1 201 1 225 1 341 1 357 1 60 1 
164 1 359 1 166 1 165 1 286 1 363 1 263 2 338 1 265 1 23 1 211 3 293 1 339 1 196 1 341 1 297 1 152 1 301 1 29 1 80 1 246 1 108 3 275 1 16 2 201 1 161 1 225 1 376 1 85 1 60 1 
359 1 166 1 165 1 286 1 363 1 263 2 338 1 265 1 23 1 211 2 339 1 196 1 341 1 152 1 297 1 301 1 29 1 80 1 246 1 108 2 275 1 16 2 376 1 85 1 60 1 
164 1 359 2 166 1 363 1 3 1 119 1 148 1 211 1 293 1 235 1 213 1 29 2 80 2 247 1 246 1 108 1 275 1 225 1 85 1 354 1 318 1 252 1 60 2 
164 1 359 1 166 1 140 1 286 1 363 1 338 1 211 1 196 1 341 1 297 1 152 1 301 1 29 1 80 1 246 1 108 1 275 1 16 2 201 1 161 1 225 1 376 1 85 1 357 1 60 1 
186 1 
285 2 89 1 0 1 335 2 141 1 90 3 3 1 229 1 43 1 231 1 5 1 148 2 292 2 235 1 150 5 305 1 243 1 246 1 11 1 56 1 347 2 109 1 351 1 252 1 253 1 61 2 166 2 363 2 168 1 258 2 259 2 119 1 206 2 19 1 209 1 21 2 69 1 366 1 71 1 267 4 123 2 74 1 179 2 217 1 329 1 272 4 34 1 275 2 85 1 334 1 86 5 378 1 38 3 283 1 138 6 
329 1 0 1 345 1 141 1 90 1 168 1 305 1 272 2 11 1 56 1 19 1 231 1 366 1 109 1 292 1 267 2 150 3 38 2 378 1 86 3 74 1 283 1 253 1 138 2 
329 1 0 1 141 1 168 1 305 1 259 1 272 2 11 1 56 1 19 1 231 1 366 1 109 1 267 3 150 2 38 2 378 1 86 2 74 1 283 1 253 1 
0 1 141 1 90 1 168 1 259 1 19 1 231 1 366 1 292 1 267 3 150 3 74 1 179 1 329 1 345 1 305 1 11 1 272 3 56 1 109 1 86 3 378 1 38 3 253 1 283 1 138 2 
285 2 89 1 0 1 141 2 335 2 90 3 144 1 337 1 231 1 292 4 150 5 50 1 345 1 9 1 304 1 305 1 11 2 56 1 308 1 347 2 15 1 109 1 351 1 253 1 61 2 113 1 64 1 323 1 168 1 258 2 259 3 206 1 19 1 209 1 21 1 366 1 69 1 71 1 267 5 368 1 74 1 179 4 329 2 181 1 272 4 38 4 378 1 86 5 334 1 283 2 138 7 
285 2 89 1 0 1 141 1 335 2 90 2 231 1 292 2 150 4 305 1 243 1 11 1 56 1 347 2 109 1 351 1 253 1 61 2 168 1 258 2 206 1 259 2 19 1 209 1 21 1 366 1 69 1 71 1 267 4 123 2 74 1 179 2 329 1 272 4 38 3 378 1 86 4 334 1 283 1 138 4 
285 2 89 1 0 1 335 2 141 1 90 2 168 1 258 2 259 2 206 1 19 1 209 1 231 1 21 1 69 1 366 1 292 2 71 1 267 4 368 1 150 4 74 1 179 2 329 1 50 1 9 1 305 1 11 1 272 3 56 1 347 2 109 1 351 1 334 1 86 4 378 1 38 3 253 1 283 1 138 4 61 2 
285 2 89 1 0 1 335 2 141 1 90 2 168 1 258 2 259 2 206 1 19 1 209 1 231 1 21 1 69 1 366 1 292 2 71 1 267 4 368 1 150 4 74 1 179 2 329 1 50 1 9 1 305 1 11 1 272 3 56 1 347 2 109 1 351 1 334 1 86 4 378 1 38 3 253 1 283 1 138 4 61 2 
285 1 89 1 0 1 141 1 168 1 258 1 206 1 19 1 208 1 264 1 231 1 21 1 69 1 366 1 71 1 267 2 123 1 150 2 151 1 74 1 329 1 104 1 9 1 305 1 11 1 272 2 56 1 109 1 351 1 334 1 86 2 378 1 38 2 253 1 283 1 
285 2 89 1 0 1 335 2 141 1 90 2 168 1 258 2 206 1 259 3 19 1 209 1 231 1 21 1 69 1 366 1 71 1 292 3 267 5 368 1 150 4 74 1 179 3 329 1 50 1 9 1 305 1 11 1 272 3 56 1 308 1 347 2 109 1 351 1 334 1 86 4 378 1 38 3 253 1 283 1 61 2 138 5 
285 2 89 1 0 1 335 2 141 1 90 2 168 1 258 2 206 1 259 3 19 1 209 1 231 1 21 1 69 1 366 1 71 1 292 3 267 5 368 1 150 4 74 1 179 3 329 1 50 1 9 1 305 1 11 1 272 3 56 1 308 1 347 2 109 1 351 1 334 1 86 4 378 1 38 3 253 1 283 1 61 2 138 5 
285 2 89 1 0 1 141 1 90 2 168 1 258 2 259 2 206 1 19 1 231 1 21 1 69 1 366 1 292 2 71 1 267 4 123 2 150 4 151 1 74 1 179 2 329 1 104 2 78 2 305 1 243 1 11 1 272 3 56 1 109 1 351 1 334 1 86 4 378 1 38 3 253 1 283 1 138 4 
321 1 370 1 53 1 221 1 287 2 184 1 4 1 20 1 207 1 110 1 82 1 122 1 121 1 313 2 149 1 24 1 342 1 177 2 
53 1 221 1 287 2 184 1 20 1 207 1 309 1 7 1 110 1 82 1 122 1 121 1 367 1 84 2 149 1 203 1 342 1 177 2 
287 4 4 1 207 1 20 2 121 2 122 2 367 1 173 1 24 1 149 1 177 2 342 1 370 1 53 1 221 1 184 2 309 1 82 1 110 1 313 2 84 2 203 1 
321 1 370 1 53 1 221 1 287 2 94 1 184 1 4 1 20 1 207 1 110 1 82 1 122 1 121 1 313 2 149 1 24 1 177 2 
53 1 221 1 287 2 94 1 184 1 20 1 207 1 309 1 7 1 110 1 82 1 122 1 121 1 367 1 84 2 149 1 203 1 177 2 
94 1 287 4 4 1 207 1 20 2 121 2 122 2 367 1 173 1 24 1 149 1 177 2 370 1 53 1 221 1 184 2 309 1 82 1 110 1 313 2 84 2 203 1 
287 4 4 1 207 1 20 2 121 2 122 2 367 1 173 1 24 1 149 1 177 2 370 1 53 1 221 1 184 2 309 1 82 1 110 1 313 2 84 2 203 1 
320 1 166 1 363 1 287 2 3 1 207 1 148 1 72 1 47 1 149 1 235 1 25 1 48 1 236 1 177 2 329 1 220 1 53 1 221 1 246 1 11 1 275 1 110 1 82 1 277 1 313 1 84 1 85 1 
320 1 166 1 363 1 287 2 3 1 207 1 233 1 148 1 72 1 149 1 235 1 25 1 236 1 177 2 329 1 53 1 199 1 221 1 246 1 11 1 275 1 276 1 110 1 82 1 277 1 313 1 84 1 85 1 
287 4 4 1 207 1 20 2 6 1 121 2 122 2 367 1 173 1 24 1 149 1 177 2 370 1 53 1 221 1 184 2 309 1 82 1 110 1 313 2 84 2 203 1 
70 1 220 1 47 1 260 1 
64 1 141 1 287 3 144 1 4 1 145 1 207 1 20 1 230 1 6 1 367 1 121 1 122 1 173 1 149 1 24 1 177 2 329 1 370 1 53 1 221 1 304 1 184 1 11 1 82 1 110 1 313 2 84 1 203 1 
320 2 360 1 287 6 146 1 20 1 207 1 122 1 367 1 121 1 149 1 177 2 342 1 269 1 155 1 330 1 370 1 53 1 221 1 184 2 309 2 333 1 82 1 110 1 313 3 84 3 137 1 
320 1 62 3 287 14 4 1 207 2 20 11 45 1 6 1 121 11 122 4 367 1 173 2 149 2 24 2 25 1 236 1 328 1 177 4 370 2 197 1 53 2 221 2 184 2 307 1 309 1 12 3 82 2 110 1 313 8 84 6 135 1 203 1 284 1 
320 1 88 1 166 1 141 1 363 1 3 1 287 2 144 1 207 1 6 1 148 1 122 1 72 1 149 1 235 1 48 1 236 1 25 1 177 2 329 2 26 1 27 1 220 1 53 1 221 1 304 1 157 1 246 1 11 2 185 1 275 1 82 1 110 1 277 1 313 1 278 1 84 1 85 1 
141 1 287 20 3 2 144 1 146 1 4 4 6 1 148 1 149 3 47 2 235 2 236 1 48 2 301 1 239 1 155 1 53 3 304 1 157 1 105 1 246 2 11 3 309 4 110 3 313 10 203 2 320 2 166 3 360 1 363 3 207 3 20 7 70 2 367 3 121 7 122 7 172 1 173 2 72 2 24 2 25 1 214 2 177 6 269 1 26 1 329 3 370 3 220 2 371 2 221 3 331 2 184 8 275 3 333 1 82 3 277 2 84 10 85 2 137 1 
166 3 141 1 363 3 2 1 94 1 287 2 3 1 144 1 260 1 119 1 207 2 327 1 148 2 149 2 235 1 25 1 236 1 342 1 177 4 329 1 26 1 53 2 221 2 241 1 304 1 306 1 10 1 246 1 11 1 275 3 82 2 110 2 313 1 84 1 85 1 252 1 
64 1 141 1 287 3 144 1 145 1 20 1 207 1 6 1 122 1 121 1 367 1 173 1 149 1 24 1 177 2 329 1 370 1 53 1 221 1 304 1 184 1 11 1 309 1 82 1 110 1 313 1 84 2 202 1 203 1 
39 1 139 1 62 3 63 1 287 31 4 3 207 2 364 3 45 1 367 4 173 4 149 2 24 4 177 4 344 1 370 4 197 3 53 2 198 1 221 2 77 1 374 1 127 1 242 2 182 1 184 4 309 1 223 1 12 4 348 1 188 1 313 15 84 16 352 1 203 4 59 1 
39 1 139 1 62 3 63 1 143 1 287 32 4 3 207 3 364 4 45 1 367 3 173 4 149 3 24 4 177 6 344 1 370 4 197 3 53 3 198 1 221 3 77 1 374 1 127 1 242 2 182 1 184 5 309 2 223 1 12 4 348 1 188 1 313 17 84 15 352 1 203 3 59 1 
39 1 139 1 62 4 360 1 63 1 143 2 287 53 146 1 4 7 207 3 364 4 45 2 367 8 173 7 149 3 24 7 177 6 269 1 344 1 155 1 370 8 197 2 53 3 198 1 221 3 77 1 127 1 242 1 182 1 184 15 309 8 223 1 12 4 333 1 348 1 188 1 313 27 84 26 203 7 59 1 137 1 284 2 
39 1 139 1 62 1 63 1 287 19 4 3 207 2 364 2 45 1 367 3 173 3 149 2 24 3 177 4 344 2 370 3 197 1 53 2 221 2 77 1 242 1 184 6 309 3 223 1 12 2 349 1 313 9 84 10 352 1 203 3 
39 2 139 1 62 2 63 1 143 1 287 23 4 1 207 2 364 3 367 2 173 3 149 2 24 3 177 4 344 1 370 3 53 2 197 2 198 1 221 2 77 1 127 1 242 2 182 1 184 1 223 1 12 2 348 1 188 1 313 13 84 10 203 2 59 1 
180 1 114 1 218 1 271 1 65 1 324 1 272 1 289 1 262 1 130 2 194 1 311 1 57 1 150 1 73 1 190 1 86 1 163 1 
180 1 114 1 218 1 271 1 65 1 324 1 272 1 289 1 262 1 130 2 194 1 311 1 57 1 150 1 73 1 190 1 86 1 163 1 
180 1 114 1 218 1 271 1 65 1 324 1 272 1 289 1 262 1 130 2 194 1 311 1 57 1 150 1 73 1 190 1 86 1 163 1 
295 1 200 1 37 1 
295 1 200 1 37 1 
280 1 353 1 
280 1 353 1 200 1 
178 1 375 1 
320 1 141 2 65 1 324 1 118 1 144 2 262 1 289 1 100 1 150 1 296 1 178 1 102 1 329 2 218 1 271 1 303 1 304 2 11 2 130 1 375 1 131 1 83 1 311 1 190 1 86 1 356 1 
218 1 271 1 65 1 346 1 79 1 289 1 262 1 195 1 311 1 358 1 
100 1 356 1 
210 1 227 1 218 1 28 1 311 1 271 1 65 1 262 1 289 1 
295 1 37 1 
280 1 353 1 200 1 
166 2 141 2 363 2 3 1 287 2 207 1 6 1 327 1 149 1 235 1 25 1 236 1 177 2 216 1 329 2 240 1 51 1 53 1 221 1 306 2 246 1 10 1 248 1 11 2 275 2 82 1 110 1 312 1 313 1 84 1 85 1 
275 1 301 1 338 1 166 1 22 1 161 1 363 1 80 1 260 1 112 1 326 1 
301 1 166 1 286 1 363 1 80 1 246 1 275 1 338 1 16 2 22 1 161 1 376 1 196 1 85 1 297 1 152 1 191 1 
166 1 363 1 3 1 246 1 80 1 32 1 119 1 326 1 275 1 148 1 235 1 85 1 354 1 252 1 
301 1 166 1 286 1 363 1 80 1 246 1 326 1 275 1 338 1 16 2 22 1 161 1 376 1 196 1 85 1 297 1 152 1 112 1 
282 1 
21 1 330 1 251 1 128 1 38 1 272 1 206 1 
89 1 335 1 90 1 206 1 209 1 21 1 69 1 71 1 123 1 150 1 272 2 347 1 351 1 86 1 38 1 61 1 138 1 
89 2 336 1 90 1 3 1 98 3 148 1 294 1 235 4 150 2 302 1 246 1 310 1 17 1 351 2 315 1 203 1 61 3 18 2 166 1 363 1 66 1 206 3 21 4 69 2 71 2 266 3 367 1 173 1 174 1 123 6 24 1 124 1 370 1 331 1 272 3 34 1 275 1 277 1 281 1 85 2 378 1 86 2 138 2 
62 1 89 1 206 4 98 5 21 6 69 1 266 5 71 1 367 2 173 2 123 6 24 2 370 2 197 1 198 1 127 1 182 1 272 3 12 1 188 1 351 1 203 2 59 1 61 3 
113 1 89 1 360 1 64 1 141 1 144 1 325 1 206 2 337 1 21 2 69 1 71 1 367 1 368 1 124 2 150 1 269 1 329 1 370 2 181 1 304 1 11 1 333 1 15 1 35 1 351 1 86 1 283 1 
89 1 21 1 69 1 251 1 71 1 351 1 128 1 38 1 272 1 206 1 
370 2 331 1 325 1 206 5 272 5 98 5 21 5 266 5 367 2 173 2 123 10 24 2 124 2 203 2 61 5 
90 1 150 1 38 1 86 1 272 1 138 1 
89 1 166 4 90 2 363 4 3 1 229 1 43 2 206 2 119 1 21 2 69 2 148 2 71 2 235 1 212 1 150 3 217 1 222 2 246 1 34 2 275 4 250 1 351 2 85 1 377 1 86 3 379 1 252 1 138 4 
320 1 166 1 64 2 141 2 363 1 287 1 3 1 144 2 207 1 148 1 72 1 149 1 47 1 235 1 236 1 48 1 177 2 329 3 53 1 220 1 221 1 304 2 246 1 129 1 11 3 275 1 15 1 110 1 82 1 277 1 84 1 85 1 
89 1 43 1 206 2 272 4 98 2 34 1 21 1 69 1 266 2 71 1 123 4 351 1 38 2 137 1 61 2 
218 1 97 1 262 1 
218 1 97 1 262 1 
41 1 218 1 262 1 
41 1 218 1 262 1 
41 1 218 1 262 1 
218 1 262 1 
311 1 271 1 
218 1 97 1 262 1 
218 1 30 1 262 1 163 1 375 1 
62 1 360 1 287 8 146 1 207 1 367 1 149 1 177 2 269 1 155 1 370 1 197 1 53 1 221 1 77 1 182 1 184 2 309 2 12 1 333 1 313 4 84 4 137 1 
62 1 360 1 287 11 146 1 4 1 207 2 45 1 367 1 173 1 149 2 24 1 49 1 177 4 269 1 155 1 370 2 197 1 53 2 77 1 221 2 182 1 184 3 309 2 12 2 333 1 313 6 84 5 137 1 
62 1 287 12 4 1 207 2 367 2 173 2 149 2 24 2 49 1 177 4 370 2 197 1 53 2 221 2 77 1 198 1 127 1 182 1 184 1 12 1 188 1 313 6 84 6 203 2 59 1 
62 1 143 2 287 12 4 1 207 4 367 1 173 2 149 4 24 2 49 1 177 8 370 2 197 1 53 4 221 4 77 1 198 1 127 1 182 1 184 3 309 2 12 1 188 1 313 7 84 5 203 1 59 1 
62 1 360 1 287 8 146 1 207 1 367 1 149 1 177 2 269 1 155 1 370 1 197 1 53 1 221 1 77 1 182 1 184 2 309 2 12 1 333 1 313 4 84 4 137 1 
62 1 143 1 287 13 4 1 207 2 367 2 173 2 149 2 24 2 177 4 370 2 197 1 53 2 221 2 77 1 198 1 127 1 182 1 184 3 309 2 12 1 188 1 313 6 84 7 203 2 59 1 
62 1 143 1 287 11 4 1 207 3 367 1 173 2 149 3 24 2 49 1 177 6 370 2 197 1 53 3 221 3 77 1 198 1 127 1 182 1 184 1 12 1 188 1 313 7 84 4 203 1 59 1 
62 1 143 1 287 11 4 2 207 3 367 1 173 2 149 3 24 2 177 6 370 2 197 1 53 3 77 1 221 3 198 1 127 1 182 1 184 3 309 1 12 1 188 1 313 7 84 4 352 1 203 1 59 1 
155 2 360 3 370 1 287 7 184 6 146 1 4 3 309 3 333 1 367 1 313 3 84 4 269 3 
62 1 143 1 287 11 4 1 207 3 367 1 173 2 149 3 24 2 177 6 370 2 197 1 53 3 77 1 221 3 198 1 127 1 182 1 184 1 12 1 188 1 313 7 84 4 352 1 203 1 59 1 
155 1 360 1 370 1 53 2 221 2 143 1 287 8 184 3 4 1 146 1 207 2 309 2 333 1 367 1 313 4 84 4 149 2 177 4 137 1 269 1 
330 1 155 1 360 1 370 1 287 6 184 2 146 1 309 2 333 1 367 1 313 3 84 3 137 1 269 1 
370 1 53 1 221 1 287 4 184 2 4 1 207 1 309 1 367 1 173 1 313 2 84 2 149 1 24 1 203 1 49 1 177 2 
62 1 370 1 197 1 287 7 184 2 4 1 309 1 12 2 45 1 367 1 313 3 173 1 84 4 24 1 203 1 
62 2 360 2 143 2 287 23 146 1 4 4 207 2 45 1 367 3 173 2 24 2 149 2 177 4 269 2 155 1 370 3 53 2 221 2 184 9 309 5 12 2 333 1 313 11 84 12 135 1 203 2 317 1 137 1 284 1 
12 1 84 1 287 1 
62 1 313 1 287 1 
370 1 53 1 221 1 331 1 287 6 184 3 4 1 207 1 309 2 367 1 173 1 313 3 84 3 149 1 24 1 49 1 203 1 177 2 
62 1 143 1 287 13 4 1 207 2 367 2 173 2 149 2 24 2 177 4 370 2 197 1 53 2 221 2 77 1 198 1 127 1 182 1 184 3 309 2 12 1 188 1 313 6 84 7 203 2 59 1 
360 1 370 1 287 6 184 2 4 1 309 1 333 1 367 1 313 3 84 3 269 1 
155 1 360 1 53 1 221 1 143 1 287 3 184 2 4 1 146 1 207 1 309 1 313 1 84 2 149 1 317 1 177 2 269 1 
360 2 370 2 53 1 221 1 77 1 287 10 184 5 4 2 207 1 309 3 333 1 35 1 367 2 313 5 84 5 149 1 177 2 269 2 
370 1 53 1 77 1 221 1 287 2 184 1 4 1 207 1 313 2 149 1 24 1 177 2 
370 1 53 1 77 1 221 1 287 4 184 2 4 1 207 1 309 1 367 1 173 1 313 2 84 2 149 1 24 1 203 1 177 2 
360 1 53 3 77 1 221 3 143 1 287 3 184 2 4 1 207 3 309 1 313 1 84 2 352 1 149 3 317 1 177 6 269 1 
62 3 360 3 115 1 143 2 287 34 146 1 4 5 207 5 45 1 367 5 173 3 149 5 24 3 49 1 177 10 269 3 155 1 370 5 197 1 53 5 221 5 77 1 184 12 309 7 12 4 333 2 224 1 313 16 84 18 352 1 317 1 203 3 226 1 137 1 
320 1 329 1 141 1 55 1 11 1 74 1 319 1 
320 1 329 1 147 1 68 1 141 1 279 1 55 1 245 1 11 1 74 1 319 1 299 1 
275 1 330 1 166 1 148 1 363 1 235 1 3 1 85 1 246 1 119 1 252 1 
320 1 26 1 329 2 166 1 141 1 304 1 363 1 3 1 144 1 246 1 11 2 275 1 148 1 277 1 72 1 235 1 48 1 85 1 
320 1 26 1 329 2 166 1 141 2 304 2 222 1 363 1 305 1 192 1 3 2 144 1 246 1 11 2 275 1 13 1 366 1 277 2 72 1 235 3 48 1 85 1 283 1 
320 1 26 1 329 2 166 2 141 2 199 1 304 2 222 1 363 2 305 1 192 1 3 2 288 1 144 1 246 1 11 2 275 2 13 1 366 1 277 2 72 1 235 3 85 1 283 1 
113 1 18 1 166 1 64 1 141 1 363 1 3 1 192 1 144 1 337 1 232 1 171 1 235 4 150 2 329 1 302 1 181 1 304 1 222 1 246 1 11 1 272 1 275 1 13 1 15 1 277 1 85 1 86 2 378 1 38 1 283 1 138 1 
113 1 18 1 166 1 64 1 141 1 336 1 363 1 3 1 192 1 144 1 337 1 235 4 150 2 329 1 302 1 181 1 304 1 222 1 246 1 11 1 272 1 275 1 13 1 15 1 277 1 85 1 86 2 378 1 38 1 283 1 138 1 
275 1 166 1 363 1 93 1 85 1 246 1 
154 1 166 2 241 1 363 2 2 1 3 1 10 1 246 1 260 1 275 2 148 2 277 1 314 1 174 1 175 1 235 1 85 2 
26 1 329 1 51 1 53 1 141 1 221 1 304 1 144 1 260 1 11 1 207 1 6 1 110 1 82 1 149 1 177 2 
89 2 141 1 90 1 336 1 144 1 337 1 148 1 294 1 235 2 150 3 302 1 304 1 11 1 251 1 15 1 17 1 351 2 315 1 113 1 18 1 166 1 360 1 64 1 363 1 325 1 206 5 21 4 69 2 71 2 367 2 212 1 124 2 269 1 329 1 370 2 181 1 128 1 272 2 275 1 131 1 333 1 35 1 378 1 86 3 38 2 283 1 138 2 
302 1 166 1 363 1 93 1 66 1 3 1 246 1 260 1 275 1 277 1 174 1 235 2 85 2 
154 1 254 1 166 1 363 1 3 1 246 1 260 1 365 1 275 1 148 1 277 1 314 1 235 1 85 2 252 1 
154 1 254 1 166 2 222 1 363 2 3 1 246 1 365 1 275 2 277 1 314 1 172 1 235 1 85 2 
275 1 166 1 148 1 16 1 363 1 376 1 196 1 85 1 246 1 152 1 
275 1 301 1 166 1 363 1 260 1 
275 1 166 1 148 1 363 1 260 1 
273 1 275 1 166 1 148 1 363 1 10 1 260 1 
320 1 26 1 329 2 166 1 141 1 199 1 304 1 363 1 3 1 144 1 246 1 11 2 275 1 148 1 277 1 72 1 235 1 85 1 
154 1 166 1 222 1 363 1 3 1 246 1 275 1 277 1 314 1 174 1 175 1 235 1 85 2 
329 1 240 1 141 1 248 1 11 1 67 1 99 1 312 1 340 1 
255 1 99 1 343 1 
320 1 99 1 340 1 120 1 67 1 
113 1 255 1 64 1 141 1 144 1 120 1 67 1 337 1 231 1 99 1 366 1 340 1 150 2 343 1 329 1 181 1 304 1 305 1 11 1 272 1 131 1 81 1 15 1 159 1 86 2 378 1 38 1 283 2 
330 1 265 1 23 1 339 1 
164 1 265 1 23 1 211 1 339 1 225 1 108 1 
359 1 108 1 60 1 
164 1 369 1 256 1 169 2 108 3 291 1 265 1 211 3 23 1 339 1 225 1 357 1 
164 1 265 1 23 1 211 2 8 1 339 1 225 1 108 2 263 1 
164 1 16 1 265 1 211 1 225 1 376 1 297 1 380 1 33 1 108 1 357 1 
164 1 265 1 23 1 211 1 225 1 108 1 357 1 
164 1 23 2 211 1 339 1 225 1 108 1 357 1 
164 2 125 1 108 2 265 1 23 1 211 2 133 1 350 1 225 2 357 1 
164 1 91 1 108 3 263 2 23 1 211 3 265 2 189 1 160 1 339 1 225 1 380 1 357 1 
164 1 286 1 92 1 108 2 263 1 265 1 23 1 16 2 211 2 339 1 225 1 196 1 376 1 297 1 357 1 
164 2 108 4 44 1 263 2 23 1 211 4 265 2 8 1 160 1 339 1 225 2 380 1 357 1 
164 1 265 1 23 1 211 1 339 1 225 1 108 1 357 1 
164 1 369 1 169 1 256 1 108 4 263 2 23 2 211 4 265 3 160 1 339 2 176 1 225 1 380 1 
164 1 373 1 228 1 108 2 263 1 265 1 23 1 211 2 339 1 225 1 58 1 357 1 
164 1 369 2 256 1 169 2 107 1 108 3 265 1 211 3 23 1 339 1 225 1 357 1 
14 2 265 2 362 1 332 1 
164 1 322 1 211 1 225 1 108 1 357 1 
164 1 265 1 23 1 211 2 189 1 339 1 225 1 108 2 357 1 263 1 
142 1 
164 1 265 1 23 1 211 1 339 1 225 1 108 1 357 1 
164 1 265 1 23 1 211 3 189 1 339 1 169 1 225 1 108 3 357 1 263 1 
265 1 160 1 176 1 380 1 
265 1 23 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 259 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
50 1 290 1 1 1 26 1 357 2 113 1 56 1 313 2 142 1 144 9 250 1 145 2 63 1 11 1 176 3 66 2 346 2 68 1 370 4 279 9 199 2 307 1 201 1 242 5 109 2 285 1 157 1 131 6 
50 1 290 1 1 1 26 1 357 2 113 1 56 1 313 2 142 1 144 9 250 1 145 2 63 1 11 1 176 3 66 2 346 2 68 1 370 4 279 9 199 2 307 1 201 1 242 5 109 2 285 1 157 1 131 6 
50 1 290 1 1 1 26 1 357 2 113 1 56 1 313 2 142 1 144 10 250 1 145 2 63 1 11 1 176 4 66 2 346 2 68 1 370 5 279 10 199 2 307 1 201 1 242 6 109 2 285 1 157 1 131 7 
50 1 1 1 26 1 357 2 113 1 56 1 313 2 142 1 144 7 250 1 145 2 63 1 11 1 176 2 66 2 346 1 68 1 370 3 279 7 199 2 307 1 201 1 242 4 109 2 285 1 157 1 131 4 
176 1 290 1 66 1 1 1 26 1 346 2 68 1 113 1 370 2 279 4 313 1 199 1 242 3 144 4 109 1 285 1 145 1 131 3 
365 1 66 1 135 1 68 1 357 1 113 1 279 2 313 1 199 1 242 1 350 1 144 2 109 1 285 1 11 1 63 1 
50 1 176 1 199 2 313 2 242 2 68 1 357 1 144 3 370 1 113 1 285 1 131 1 279 3 
50 1 1 1 290 1 26 1 357 1 113 1 313 2 142 1 144 9 145 1 95 1 176 3 216 1 66 1 346 2 68 1 370 4 279 9 199 2 307 1 242 5 109 1 285 1 131 7 
50 1 1 1 290 1 26 1 357 1 113 1 313 2 142 1 144 9 145 1 95 1 176 3 216 1 66 1 346 2 68 1 370 4 279 9 199 2 307 1 242 5 109 1 285 1 131 7 
333 1 259 1 323 1 
333 1 338 2 20 1 
57 2 372 1 134 2 81 2 291 2 331 1 36 2 175 2 
206 2 134 2 3 1 79 1 81 3 185 1 263 1 291 3 268 1 57 2 212 1 34 1 172 1 117 2 92 1 295 1 316 1 213 2 174 1 36 2 148 1 175 2 219 1 195 1 303 1 348 1 122 1 280 1 372 1 306 1 256 1 373 1 110 1 328 1 331 1 379 2 205 2 
57 1 372 1 134 1 81 1 291 1 214 1 36 1 175 1 227 1 
333 1 134 1 228 1 337 1 81 1 165 1 291 1 137 1 196 1 323 1 126 1 325 1 9 1 344 1 
333 1 134 1 228 1 337 1 81 1 165 2 291 1 323 1 126 1 57 1 325 1 9 1 344 2 36 1 175 1 
270 1 189 1 165 1 318 1 344 1 
333 1 270 1 217 1 165 2 318 1 344 2 323 1 239 1 
165 1 318 1 344 1 
134 1 81 1 165 1 291 1 292 1 57 1 270 1 372 1 214 1 344 1 36 1 227 1 175 1 
333 1 
161 1 333 1 270 1 217 1 165 2 318 1 344 2 323 1 
333 1 134 1 27 1 53 2 81 1 165 5 291 1 292 1 5 2 167 1 293 1 6 1 57 1 31 1 270 2 359 1 214 1 318 2 344 5 36 1 175 1 215 2 37 1 217 1 40 2 221 2 349 4 70 1 323 1 123 1 372 1 16 1 127 1 154 1 111 4 227 1 244 2 
134 1 79 1 81 2 102 1 303 1 291 2 30 1 348 1 324 1 57 1 306 1 256 1 373 1 34 1 117 1 316 1 174 1 213 1 175 1 205 1 
134 5 81 5 102 1 291 5 196 1 322 1 324 2 57 4 327 1 58 1 331 1 36 1 297 1 175 4 
57 1 134 1 81 1 291 1 214 1 175 1 
259 1 331 1 
289 1 134 2 81 2 291 2 322 1 57 1 331 2 36 1 175 1 
170 1 30 1 118 1 
79 1 81 1 291 1 303 1 348 1 340 1 306 1 256 1 373 1 34 1 117 1 213 1 174 1 316 1 331 1 205 1 
324 1 57 3 134 3 81 3 291 3 331 1 36 1 175 3 
57 1 134 1 81 1 291 1 214 1 175 1 
289 1 57 1 134 1 337 1 81 1 291 1 322 1 36 1 175 1 
206 2 134 3 228 1 79 1 337 1 185 1 81 4 165 1 291 4 268 1 57 3 212 1 34 1 172 1 117 1 92 1 295 1 316 1 174 1 9 1 213 1 344 1 36 2 175 3 219 1 102 1 195 1 303 1 348 1 322 1 122 1 126 1 324 1 325 1 306 1 372 1 256 1 373 1 19 1 328 1 376 1 331 1 379 1 205 1 
57 1 324 1 134 2 81 2 291 2 331 1 196 1 297 1 175 1 
333 1 134 3 228 1 337 1 81 3 102 1 165 1 291 3 322 1 126 1 324 2 57 3 325 1 171 1 19 1 9 1 344 1 36 1 175 3 
134 2 81 2 291 2 30 1 322 1 324 1 57 2 118 1 36 1 175 2 
79 1 81 1 291 1 303 1 348 1 306 1 256 1 373 1 34 1 117 1 213 1 174 1 316 1 331 1 205 1 
79 1 81 1 291 1 303 1 348 1 7 1 373 1 34 1 117 1 224 1 213 1 174 1 316 1 331 1 205 1 
206 2 207 1 3 2 208 1 229 1 30 2 4 1 268 1 212 1 170 2 272 1 172 2 92 1 295 1 118 2 275 1 215 1 178 1 40 1 120 1 195 1 328 1 379 4 286 1 
325 1 57 1 134 1 337 1 81 1 73 1 291 1 175 1 
246 1 147 1 
246 1 147 1 
301 1 284 1 
301 1 284 1 
301 1 284 1 
258 1 246 1 147 1 
258 1 246 1 147 1 
258 1 246 1 147 1 
51 1 246 1 147 1 
246 1 147 1 281 1 
301 1 284 1 203 1 246 2 223 1 147 2 
51 1 246 1 147 1 
51 1 246 1 147 1 
0 1 24 1 134 2 81 2 165 1 291 2 246 1 188 1 57 2 91 1 12 1 344 1 147 1 175 2 179 1 151 1 281 1 255 1 326 1 202 1 330 1 331 1 48 1 158 1 
333 1 0 2 25 1 209 1 165 2 358 1 253 1 246 2 223 1 71 1 255 1 169 1 202 3 352 2 48 2 158 2 12 2 344 2 147 2 
66 1 109 1 145 1 
365 1 66 1 109 1 
365 1 66 3 341 1 14 1 145 2 139 1 
365 1 66 2 341 1 80 1 14 1 145 1 
365 1 66 2 341 2 145 1 14 1 
24 1 333 2 262 2 112 1 52 2 2 1 53 1 338 3 165 5 188 1 270 4 272 1 173 1 318 1 344 5 275 1 215 1 37 1 299 1 217 1 39 1 40 1 221 1 150 2 349 3 323 1 46 1 374 1 330 1 20 1 111 2 244 1 
333 5 112 1 2 3 53 2 165 8 338 9 291 1 292 1 57 1 214 1 344 8 175 1 215 3 218 4 217 1 221 2 349 8 70 1 305 1 351 1 20 3 227 1 134 1 78 1 262 6 81 1 270 6 189 4 272 3 318 5 36 1 275 3 37 1 38 1 39 2 40 3 150 6 323 1 46 2 372 1 108 1 329 1 330 4 111 6 244 2 
333 3 52 1 262 2 2 1 53 1 165 3 338 4 270 2 272 1 344 3 275 1 215 1 299 1 39 1 221 1 40 1 150 2 349 3 70 1 323 1 46 1 374 1 330 1 20 2 111 2 244 1 
333 4 52 1 2 2 53 1 165 3 338 7 291 1 292 1 57 1 214 1 344 3 175 1 215 2 299 1 221 1 349 5 70 1 351 1 20 3 227 1 134 1 262 4 81 1 270 2 272 2 275 2 36 1 38 1 39 1 40 2 150 4 323 1 46 1 372 1 374 1 108 1 330 2 111 4 244 1 
373 1 303 1 316 1 
373 1 69 1 
315 1 373 1 259 1 
236 1 373 1 
186 1 
373 1 303 1 
315 2 373 3 303 1 54 1 316 1 84 1 
215 1 366 1 3 4 40 1 4 3 210 2 167 1 31 1 115 1 16 1 17 1 172 3 273 1 10 1 379 7 183 1 286 2 
215 1 366 1 3 4 40 1 4 3 210 2 167 1 31 1 115 1 16 1 17 1 172 3 273 1 10 1 379 7 183 1 286 2 
215 1 366 1 3 4 40 1 149 1 4 3 210 2 167 1 31 1 115 1 16 1 17 1 172 3 273 1 10 1 379 7 183 1 286 2 
206 2 2 3 3 16 264 1 210 3 4 10 167 2 268 1 115 1 31 2 212 1 271 4 172 15 272 3 273 1 92 1 10 2 275 3 215 4 366 1 277 3 302 1 40 4 347 1 320 1 16 1 241 1 17 5 18 1 328 1 379 31 226 1 183 2 286 5 
206 4 3 5 28 1 210 2 4 4 167 1 268 2 115 1 31 1 212 2 172 4 92 2 273 1 10 1 215 1 252 1 40 1 16 1 17 1 18 1 328 2 379 9 183 1 286 3 
79 1 357 1 113 1 187 1 139 1 313 1 117 1 144 2 145 1 213 1 64 1 276 1 365 1 278 1 66 2 68 1 180 1 304 1 348 1 279 2 199 1 242 1 109 1 130 1 76 1 285 1 377 1 131 1 205 1 288 1 
79 1 357 1 139 1 313 1 117 1 144 3 145 1 213 1 64 1 276 1 365 1 119 1 278 1 66 2 68 1 180 1 348 1 279 3 45 1 199 1 242 1 129 1 109 1 130 1 76 1 285 1 377 1 131 2 205 1 288 1 
79 1 357 1 139 1 117 1 144 2 213 1 145 1 64 1 276 1 365 1 278 1 66 2 68 1 180 1 348 1 279 2 45 1 242 1 129 1 130 1 109 1 285 1 377 1 131 2 205 1 
64 2 119 1 79 1 220 1 357 2 303 1 348 1 166 1 279 1 313 1 199 1 373 1 34 1 128 1 243 1 156 1 144 1 117 1 130 2 317 1 213 1 377 2 205 1 
79 1 357 1 113 1 187 1 139 1 313 1 117 1 144 1 145 1 213 1 64 1 276 1 365 1 278 1 66 2 180 1 348 1 279 1 45 1 199 1 109 1 130 1 76 1 377 1 205 1 288 1 
354 1 
333 2 53 1 337 1 338 2 165 5 291 1 166 1 249 1 59 2 117 2 213 2 9 1 61 1 344 5 345 2 65 2 217 3 221 1 303 1 349 2 348 1 222 2 124 1 126 1 15 1 20 2 182 2 134 1 228 1 79 1 81 1 137 1 266 1 85 1 34 2 90 4 318 6 146 2 235 1 37 1 96 1 100 1 196 1 103 1 323 1 46 1 325 1 371 1 373 1 243 1 111 2 159 1 287 2 244 1 205 2 
161 1 96 1 217 1 134 1 228 1 100 1 337 1 81 1 165 3 291 1 137 1 196 1 103 1 124 1 126 1 325 1 371 1 90 2 9 1 318 2 344 3 287 1 
161 1 333 1 96 1 217 1 134 1 228 1 100 1 337 1 81 1 165 3 291 1 137 1 196 1 222 1 103 1 323 1 124 1 126 1 325 1 371 1 90 3 9 1 318 1 344 3 
161 1 333 1 134 1 228 1 337 1 81 1 165 3 291 1 137 1 59 1 90 3 9 1 318 2 344 3 96 1 217 1 100 1 196 1 103 1 222 1 323 1 124 1 126 1 325 1 371 1 287 1 
161 1 333 1 337 1 53 1 165 5 291 2 292 1 57 1 294 1 59 4 9 1 61 1 214 1 344 5 175 1 345 2 65 2 217 3 221 1 349 1 222 2 124 1 126 1 125 1 182 2 20 2 227 1 134 2 228 1 81 2 137 1 266 1 90 4 318 7 274 1 146 2 36 1 37 1 96 1 100 1 101 1 196 1 103 1 323 1 325 1 372 1 371 1 155 1 111 1 287 4 244 1 
333 1 337 1 53 1 165 4 338 2 291 2 292 1 57 1 59 2 61 1 9 1 214 1 344 4 175 1 345 2 65 2 217 2 221 1 349 1 222 2 124 1 126 1 182 2 20 2 227 1 134 2 228 1 81 2 137 1 266 1 85 1 90 4 318 4 146 2 36 1 37 1 96 1 100 1 196 1 103 1 323 1 325 1 372 1 371 1 111 1 244 1 287 2 
333 1 53 1 337 1 165 4 291 2 292 1 57 1 59 2 9 1 61 1 214 1 344 4 175 1 345 2 65 2 217 2 221 1 349 1 222 2 124 1 126 1 125 1 182 2 20 2 227 1 134 2 228 1 81 2 137 1 266 1 90 4 274 1 318 4 146 2 36 1 37 1 96 1 100 1 101 1 196 1 103 1 323 1 325 1 372 1 371 1 111 1 244 1 287 2 
333 1 53 1 337 1 165 4 291 2 292 1 57 1 59 2 9 1 61 1 214 1 344 4 175 1 345 2 65 2 217 2 221 1 349 1 222 2 124 1 126 1 125 1 182 2 20 2 227 1 134 2 228 1 81 2 137 1 266 1 90 4 274 1 318 4 146 2 36 1 37 1 96 1 100 1 101 1 196 1 103 1 323 1 325 1 372 1 371 1 111 1 244 1 287 2 
333 1 53 1 337 1 165 4 338 2 291 2 292 1 57 1 59 2 343 1 9 1 214 1 344 4 175 1 65 2 217 2 221 1 349 1 222 2 124 1 126 1 125 1 181 1 182 2 227 1 134 2 228 1 81 2 137 1 266 1 143 2 90 4 318 4 36 1 37 1 96 1 100 1 196 1 103 1 323 1 325 1 372 1 371 1 111 1 378 1 244 1 332 2 287 2 
333 1 337 1 53 1 165 4 291 2 292 1 57 1 294 1 59 3 9 1 61 1 214 1 344 4 175 1 345 2 65 2 217 2 221 1 349 1 222 3 124 1 126 1 125 1 182 2 20 2 227 1 134 2 228 1 81 2 137 1 266 1 90 5 318 5 274 1 146 2 36 1 37 1 96 1 100 1 101 1 196 1 103 1 323 1 325 1 372 1 371 1 111 1 287 3 244 1 
333 1 337 1 53 1 165 4 291 2 292 1 57 1 294 1 59 3 9 1 61 1 214 1 344 4 175 1 345 2 65 2 217 2 221 1 349 1 222 3 124 1 126 1 125 1 182 2 20 2 227 1 134 2 228 1 81 2 137 1 266 1 90 5 318 5 274 1 146 2 36 1 37 1 96 1 100 1 101 1 196 1 103 1 323 1 325 1 372 1 371 1 111 1 287 3 244 1 
333 1 337 1 53 1 165 4 338 2 291 2 292 1 57 1 59 2 9 1 214 1 344 4 175 1 65 2 217 2 221 1 349 1 222 2 124 1 126 1 182 2 227 1 134 2 228 1 81 2 137 1 266 1 85 1 143 2 90 4 318 4 36 1 37 1 96 1 100 1 196 1 103 1 323 1 325 1 372 1 371 1 111 1 378 1 244 1 332 2 287 2 
206 2 3 3 30 1 4 2 210 1 167 1 268 1 31 1 115 1 212 1 170 1 172 3 273 1 92 1 295 1 118 1 215 1 178 1 40 1 195 1 16 1 328 1 259 1 331 2 379 6 286 2 
206 4 312 1 2 2 3 8 4 2 30 11 264 1 268 2 212 2 271 3 170 11 35 1 172 6 272 1 92 2 295 2 118 4 275 2 215 1 277 3 300 1 219 1 97 1 40 2 195 1 282 1 17 1 110 1 328 2 331 1 379 14 226 1 286 1 
206 2 134 1 79 1 3 1 81 2 291 2 268 1 57 1 340 1 212 1 34 1 35 1 117 1 172 1 295 1 92 1 316 1 174 1 213 1 118 1 175 1 219 1 102 1 303 1 195 1 348 1 44 1 324 1 306 1 256 1 200 1 373 1 328 1 110 1 331 1 21 1 379 2 205 1 
206 6 2 2 3 10 245 1 291 3 210 1 4 8 167 1 115 1 57 1 212 3 170 7 172 10 117 3 295 3 213 3 174 2 118 7 296 1 175 1 215 3 219 1 303 2 348 2 16 1 306 2 256 2 17 4 308 2 134 1 79 2 81 3 185 2 30 7 268 3 31 1 314 2 34 1 35 1 272 2 273 1 92 3 316 2 275 2 99 2 40 3 102 1 195 3 43 2 45 1 198 1 324 1 373 2 110 1 328 3 331 2 379 20 286 4 205 3 
206 4 162 1 134 1 79 2 3 1 81 1 291 1 166 1 268 2 57 1 212 2 34 2 117 8 172 1 92 2 295 2 213 7 361 1 175 1 219 1 178 1 194 1 195 2 303 2 304 1 348 2 280 2 45 1 72 1 324 1 373 3 106 1 243 1 328 2 110 1 379 2 132 1 205 8 204 1 
206 2 134 1 2 1 3 1 81 1 291 1 4 1 30 1 268 1 57 1 212 1 170 1 35 1 272 1 172 2 92 1 295 1 118 1 36 1 275 1 175 1 215 1 367 1 40 1 195 1 322 1 328 1 379 3 286 1 
206 2 178 1 3 2 40 1 229 1 195 1 4 1 30 1 268 1 212 1 17 1 170 1 328 1 295 1 92 1 118 1 379 2 275 1 
206 2 215 1 178 1 120 1 195 1 4 1 30 1 268 1 212 1 170 1 272 1 172 2 328 1 295 1 92 1 118 1 379 2 286 1 
206 2 2 1 3 2 30 2 4 2 268 1 212 1 170 2 272 1 172 2 92 1 295 1 118 2 275 1 215 1 178 1 40 1 195 1 17 1 328 1 379 4 286 1 
206 2 3 2 40 1 229 1 195 1 4 1 30 1 268 1 212 1 17 1 170 1 328 1 295 1 92 1 361 1 118 1 379 2 275 1 
206 2 215 1 120 1 195 1 4 1 30 1 268 1 212 1 170 1 272 1 172 2 328 1 295 1 92 1 361 1 118 1 379 2 286 1 
206 2 2 1 3 2 30 2 4 2 268 1 212 1 170 2 272 1 172 2 92 1 295 1 361 1 118 2 275 1 215 1 40 1 195 1 17 1 328 1 379 4 286 1 
206 2 2 1 3 2 30 2 4 2 268 1 212 1 170 2 272 1 172 2 92 1 295 1 118 2 275 1 215 1 40 1 195 1 17 1 328 1 379 4 286 1 
206 2 3 1 79 1 185 1 81 1 291 1 268 1 212 1 34 1 117 1 172 1 295 1 92 1 316 1 174 1 213 1 219 1 303 1 195 1 348 1 306 1 256 1 373 1 110 1 328 1 331 1 379 2 205 1 
206 2 3 1 79 1 81 1 291 1 268 1 7 1 212 1 33 1 34 1 117 1 172 1 295 1 92 1 316 1 174 1 213 1 219 1 303 1 195 1 348 1 373 1 224 1 110 1 328 1 331 1 379 2 205 1 
206 2 2 1 3 2 30 2 4 2 268 1 212 1 170 2 35 1 272 1 172 2 92 1 295 1 118 2 275 1 215 1 40 1 195 1 17 1 328 1 379 4 286 1 
206 2 2 1 3 2 79 1 185 1 81 1 291 1 4 2 30 2 268 1 212 1 170 2 172 2 272 1 117 1 295 1 92 1 316 1 174 1 213 1 118 2 275 1 215 1 99 1 40 1 303 1 195 1 348 1 304 1 306 1 256 1 17 1 373 1 328 1 379 4 286 1 205 1 
206 2 134 1 2 1 3 2 356 1 81 1 291 1 4 1 30 1 268 1 57 1 212 1 170 1 35 1 172 1 272 1 92 1 295 1 118 1 36 1 275 1 175 1 215 1 40 1 195 1 322 1 17 1 328 1 379 3 
206 6 163 1 336 1 2 4 3 20 28 1 55 1 210 1 264 1 4 8 82 1 167 1 339 1 268 3 31 1 115 1 269 1 212 3 271 4 116 4 172 21 272 4 60 1 273 1 92 3 342 1 93 1 362 1 275 4 215 5 277 3 368 1 40 5 152 2 42 1 16 1 17 4 18 1 107 1 328 3 379 41 226 3 286 4 
206 8 163 1 336 1 2 4 3 20 28 1 55 1 210 1 264 1 4 7 82 1 167 1 339 1 268 4 31 1 115 1 269 1 212 4 271 4 116 4 172 18 272 3 60 1 273 1 92 4 342 1 93 1 362 1 275 4 215 4 277 3 368 1 40 5 152 2 42 1 16 1 17 3 18 2 107 1 328 4 379 38 226 3 286 4 
206 4 163 1 336 1 2 7 3 27 28 1 55 1 210 1 264 2 4 14 167 1 339 1 268 2 31 1 115 1 269 1 212 2 271 4 116 4 172 25 272 7 273 1 92 2 342 1 93 1 362 1 275 7 215 8 277 4 368 1 97 2 40 8 152 1 42 1 16 1 17 7 18 1 107 1 328 2 379 52 226 2 286 7 
206 4 163 1 2 3 3 9 28 1 264 1 4 6 82 1 268 2 212 2 271 2 88 1 116 2 172 10 272 3 92 2 342 1 362 1 275 3 215 3 277 1 40 3 152 1 42 1 17 3 107 2 328 2 379 19 226 1 286 3 
206 6 163 1 336 1 2 3 3 14 28 1 55 1 4 4 339 1 268 3 269 1 212 3 271 2 172 12 116 4 272 2 92 3 342 1 93 1 362 2 275 3 215 2 277 2 368 1 40 3 152 2 42 1 17 2 18 2 107 1 328 3 379 26 226 2 286 2 
248 1 258 1 
51 1 141 1 203 1 
133 1 0 1 209 1 246 1 48 1 223 1 71 1 12 1 158 1 147 1 
179 1 281 1 
211 1 0 1 257 1 246 1 48 1 12 1 158 1 238 1 147 1 
333 1 0 1 25 1 209 1 165 1 253 1 246 1 223 1 71 1 255 1 169 1 202 2 352 1 48 1 344 1 158 1 12 1 147 1 
333 1 0 1 25 1 209 1 165 1 253 1 246 1 223 1 71 1 255 1 169 1 202 2 352 1 48 1 344 1 158 1 12 1 147 1 
333 1 0 1 25 1 209 1 165 1 253 1 246 1 223 1 71 1 255 1 169 1 202 2 352 1 48 1 344 1 158 1 12 1 147 1 
248 1 258 1 203 1 
248 1 258 1 203 1 
51 1 141 1 
51 1 141 1 203 1 
91 1 151 1 
0 1 24 1 134 2 81 2 165 1 291 2 246 1 114 1 188 1 57 2 270 1 91 1 344 1 12 1 147 1 175 2 179 1 253 1 151 1 281 1 326 1 202 1 330 1 352 1 331 1 48 1 158 1 
206 2 162 1 134 2 79 1 3 1 81 2 291 2 138 1 268 1 231 1 212 1 35 1 117 2 172 1 295 1 92 1 213 2 219 1 303 1 195 1 348 1 321 1 280 2 240 1 373 1 328 1 110 1 353 1 379 2 205 2 204 1 
64 1 276 1 365 1 355 1 66 2 251 1 79 1 180 1 348 1 304 1 139 1 45 1 117 2 109 1 145 1 213 2 375 1 205 2 288 1 
64 1 276 1 365 1 66 2 79 1 180 1 348 1 139 1 45 1 117 1 109 1 145 1 213 1 375 1 205 1 192 1 288 1 
64 1 298 1 251 1 79 1 303 1 348 1 166 1 373 1 34 1 117 1 156 1 243 1 213 1 205 1 
64 1 276 1 365 1 355 1 66 2 251 1 79 1 180 1 348 1 139 1 45 1 117 1 109 1 145 1 213 1 375 1 205 1 288 1 
363 1 
127 1 259 1 6 1 
333 2 53 1 338 1 165 1 61 1 318 1 146 1 344 1 345 1 37 1 217 1 221 1 349 1 323 1 20 1 111 1 244 1 
37 1 236 1 79 1 53 1 221 1 303 1 54 1 348 2 197 1 247 1 373 2 34 1 117 1 316 1 213 1 244 1 205 1 
333 5 136 1 262 5 336 1 2 2 53 2 165 1 338 6 5 2 293 1 339 1 269 1 271 1 272 2 8 1 93 1 318 1 344 1 275 2 37 2 215 2 277 1 217 1 368 1 221 2 40 2 150 5 349 8 323 2 46 1 20 3 111 5 159 1 226 1 244 2 
134 1 53 1 81 1 165 1 291 1 292 1 5 2 167 1 293 1 31 1 57 1 214 1 274 1 344 1 36 1 175 1 37 1 215 1 221 1 40 2 349 2 16 1 372 1 154 1 111 2 244 1 227 1 
37 1 53 1 221 1 6 1 244 1 
215 2 333 5 262 5 2 2 40 2 150 5 338 10 349 5 5 2 293 1 314 1 272 2 111 5 20 5 275 2 
333 1 217 1 165 1 318 1 344 1 323 1 
335 1 79 1 53 2 165 3 166 1 34 2 89 2 117 4 213 4 318 4 344 3 235 1 37 1 217 2 221 2 303 1 348 1 349 2 70 1 46 2 15 1 373 1 47 1 243 1 225 1 111 2 159 2 244 2 205 4 
206 2 134 2 79 1 81 3 185 1 291 3 268 1 57 2 212 1 34 1 172 1 117 1 92 1 295 1 213 1 174 1 316 1 36 2 175 2 219 1 303 1 195 1 348 1 122 1 372 1 306 1 256 1 373 1 328 1 331 1 379 1 205 1 
37 1 333 4 262 2 53 1 221 1 338 4 150 2 210 1 349 1 323 2 46 1 20 2 111 2 159 1 244 1 
0 1 48 1 267 1 
0 1 48 1 267 1 
0 1 48 1 267 1 
0 1 48 1 234 1 
0 1 209 1 151 1 48 1 22 1 
0 1 48 1 234 1 
0 1 48 1 234 1 
0 1 48 1 
246 1 147 1 
206 2 3 4 28 1 210 1 4 2 167 1 339 1 268 1 115 1 31 1 212 1 271 1 172 4 92 1 273 1 215 1 277 1 40 1 16 1 328 1 379 8 226 1 286 2 
206 4 2 1 3 6 28 1 210 1 264 1 4 3 167 1 339 1 268 2 31 1 115 1 212 2 271 2 172 5 273 1 92 2 275 1 215 1 277 1 67 1 40 2 16 1 17 1 328 2 379 11 226 1 286 2 
206 6 336 1 2 2 3 9 28 1 210 1 4 4 167 1 339 1 268 3 31 1 115 1 269 1 212 3 271 1 172 10 272 2 273 1 92 3 93 1 275 2 215 3 277 1 368 1 67 1 40 3 16 1 17 1 18 1 328 3 379 19 226 1 286 3 
206 6 336 1 2 2 3 10 28 1 210 1 4 5 167 1 339 1 268 3 31 1 115 1 212 3 269 1 271 1 172 7 272 1 273 1 92 3 93 1 275 2 215 2 277 1 368 1 67 1 40 3 16 1 17 2 18 1 328 3 379 17 226 1 286 3 
206 2 3 4 28 1 210 1 4 2 167 1 339 1 268 1 115 1 31 1 212 1 271 1 172 4 92 1 273 1 215 1 277 1 40 1 16 1 328 1 379 8 226 1 286 2 
206 2 336 1 2 2 3 6 28 1 4 2 339 1 268 1 212 1 269 1 271 1 172 6 272 2 92 1 93 1 275 2 215 2 277 1 368 1 40 2 17 1 328 1 379 12 226 1 286 1 
206 8 336 1 2 2 3 10 28 1 210 1 4 5 167 1 339 1 268 4 31 1 115 1 269 1 212 4 271 1 172 8 272 1 273 1 92 4 93 1 275 2 215 2 277 1 368 1 67 1 40 3 16 1 17 2 18 2 328 4 379 18 226 1 286 3 
206 8 336 1 2 3 3 9 28 1 4 6 82 1 339 1 268 4 269 1 212 4 271 1 172 7 272 2 92 4 93 1 275 3 215 2 277 1 368 1 40 3 17 3 18 2 328 4 379 16 226 1 286 3 
215 1 3 3 40 1 4 6 167 3 115 1 31 3 16 1 17 3 172 4 273 2 379 7 286 3 
206 8 336 1 2 2 3 10 28 1 210 1 4 4 82 1 167 1 339 1 268 4 31 1 115 1 269 1 212 4 271 1 172 8 272 1 273 1 92 4 93 1 275 2 215 2 277 1 368 1 40 3 16 1 17 1 18 2 328 4 379 18 226 1 286 3 
215 1 206 4 3 4 40 1 210 1 4 3 167 1 268 2 115 1 31 1 16 1 212 2 17 1 18 1 172 4 328 2 92 2 273 1 379 8 286 2 
215 1 3 3 40 1 210 1 4 2 167 1 115 1 31 1 16 1 172 3 259 1 273 1 379 6 286 2 
215 1 206 2 67 1 2 1 3 2 40 1 4 2 268 1 212 1 17 1 172 2 272 1 328 1 92 1 379 4 275 1 286 1 
215 1 277 1 2 1 3 3 40 1 264 1 4 2 271 2 17 1 272 1 172 4 379 7 226 1 275 1 286 1 
206 4 2 2 3 11 210 1 4 9 264 1 167 2 268 2 140 1 31 2 115 1 212 2 271 2 172 12 272 2 273 1 92 2 275 2 215 3 277 2 97 1 40 3 282 1 16 1 17 4 18 2 328 2 379 23 286 5 
271 1 172 1 379 1 
277 1 3 1 379 1 
206 2 215 1 67 1 2 1 3 3 40 1 4 3 268 1 314 1 212 1 17 1 172 3 272 1 328 1 92 1 379 6 275 1 286 2 
206 2 336 1 2 2 3 6 28 1 4 2 339 1 268 1 212 1 269 1 271 1 172 6 272 2 92 1 93 1 275 2 215 2 277 1 368 1 40 2 17 1 328 1 379 12 226 1 286 1 
215 1 3 3 40 1 4 2 167 1 31 1 16 1 17 1 172 3 379 6 286 1 
206 2 3 1 4 2 167 1 268 1 140 1 31 1 115 1 212 1 17 1 18 1 172 2 328 1 273 1 92 1 379 3 286 1 
206 2 215 2 3 5 40 2 28 1 4 5 167 2 268 1 31 2 212 1 16 1 17 2 154 1 172 5 328 1 92 1 379 10 286 3 
206 2 3 2 40 1 28 1 4 1 268 1 212 1 17 1 328 1 92 1 379 2 275 1 
215 1 206 2 2 1 3 2 40 1 28 1 4 2 268 1 212 1 17 1 172 2 272 1 328 1 92 1 379 4 275 1 286 1 
206 6 3 1 28 1 4 2 82 1 167 1 268 3 140 1 31 1 212 3 17 1 18 1 172 2 328 3 92 3 379 3 286 1 
206 10 2 3 3 16 28 1 210 1 264 1 4 12 82 1 167 3 268 5 140 1 31 3 115 1 212 5 271 4 172 18 272 3 273 1 92 5 275 3 215 5 277 3 67 1 347 1 40 5 320 1 16 2 241 1 17 5 18 2 328 5 379 34 226 1 286 7 
334 1 134 1 81 1 291 1 331 1 196 1 297 1 
311 1 334 1 134 1 177 1 81 1 291 1 196 1 87 1 331 1 62 1 49 1 297 1 
134 1 79 1 81 2 303 1 291 2 348 1 324 1 57 1 7 1 373 1 34 1 117 1 316 1 174 1 213 1 331 1 175 1 205 1 
184 1 79 1 54 1 303 1 348 2 265 1 32 1 373 1 89 1 117 1 213 1 316 1 205 1 
373 1 34 1 79 1 243 1 117 1 303 1 259 1 348 1 213 1 166 1 205 1 
134 1 79 1 81 2 303 1 291 2 348 1 324 1 57 1 256 1 373 1 34 1 117 1 316 1 174 1 213 1 331 1 175 1 205 1 
310 1 134 2 337 1 79 1 69 1 81 2 303 2 291 2 348 1 126 1 325 1 324 1 57 1 256 1 373 3 89 1 117 1 316 2 174 1 213 1 331 1 175 2 205 1 
310 1 134 2 98 1 337 1 79 1 69 1 81 2 303 2 291 2 348 1 126 1 325 1 324 1 57 1 7 1 373 3 89 1 117 2 316 2 174 1 213 2 331 1 175 2 205 2 
310 1 333 1 236 1 98 1 79 1 69 1 165 2 303 1 237 1 348 1 323 1 315 1 373 4 34 1 86 1 89 1 117 3 9 1 316 1 213 3 318 1 344 2 205 3 
310 1 333 1 236 1 98 1 79 1 69 1 165 2 303 1 348 1 323 1 254 1 315 1 373 4 34 1 89 1 117 3 9 1 316 1 213 3 318 1 344 2 205 3 
79 1 194 1 117 1 348 1 213 1 205 1 
162 1 184 1 79 2 194 1 54 1 303 2 304 1 348 3 265 1 280 1 45 1 72 1 32 1 373 3 34 2 106 1 117 7 213 6 316 1 132 1 205 7 
206 4 134 1 3 3 79 1 81 2 185 1 291 2 30 1 210 1 4 2 167 1 268 2 31 1 115 1 231 1 57 1 212 2 170 1 35 1 172 3 117 1 273 1 295 2 92 2 316 1 174 1 213 1 118 1 175 1 215 1 99 1 40 1 303 1 195 2 348 1 304 1 43 1 324 1 16 1 306 1 256 1 373 1 328 2 331 2 379 6 286 2 205 1 
333 1 53 2 165 3 291 1 292 1 5 2 167 1 293 1 168 1 6 1 57 1 117 1 9 1 213 1 214 1 344 3 175 1 215 2 217 1 221 2 349 4 254 1 127 1 16 1 227 1 134 1 81 1 31 1 270 1 315 1 34 1 318 2 94 1 36 1 37 2 236 1 40 2 323 1 153 1 372 1 373 2 47 1 154 1 111 4 244 2 205 1 
79 1 194 1 54 1 303 1 304 1 348 2 197 1 315 1 373 2 117 2 213 2 316 1 205 2 
160 1 98 1 79 1 303 1 348 1 304 1 166 1 373 1 34 1 117 4 243 1 213 4 205 4 
79 1 13 1 121 1 303 1 348 2 265 1 32 1 373 1 89 1 117 2 213 2 316 1 296 1 205 2 
365 1 66 1 34 1 79 1 180 1 117 1 109 1 348 1 213 1 205 1 
162 1 373 1 79 1 117 2 303 1 348 1 213 2 304 1 321 1 45 1 205 2 
160 1 162 1 79 2 303 2 304 1 348 2 166 1 373 3 34 1 106 1 89 1 243 1 117 5 213 4 132 1 205 5 
160 1 162 1 79 2 303 2 304 1 348 2 166 1 83 1 373 3 34 1 106 1 89 1 243 1 117 5 213 4 205 5 
261 1 105 1 164 1 29 1 331 1 
261 2 333 1 228 1 337 1 164 2 29 1 165 2 323 1 126 1 325 1 270 1 105 2 19 1 190 1 9 1 331 1 319 1 344 2 77 1 
261 1 134 1 81 1 164 1 29 1 291 1 138 1 240 1 353 1 
29 1 190 1 77 1 
242 1 68 1 259 1 285 1 
199 1 313 1 242 1 68 1 144 1 285 1 279 1 
357 1 130 1 279 1 
68 1 113 1 279 3 313 1 199 1 104 1 242 1 144 3 285 1 233 1 11 2 260 1 
199 1 313 1 242 1 346 1 68 1 144 2 285 1 131 1 279 2 
199 1 313 1 66 1 26 1 242 1 144 1 109 1 370 1 113 1 145 1 279 1 
199 1 313 1 242 1 68 1 144 1 113 1 279 1 
199 1 313 1 68 2 144 1 113 1 285 1 279 1 
309 1 364 1 68 1 113 1 279 2 313 2 199 2 283 1 242 1 144 2 
176 1 199 1 313 1 307 1 142 1 242 2 68 1 144 3 370 1 113 1 285 1 131 2 279 3 
365 1 66 2 193 1 68 1 113 1 279 2 139 1 313 1 199 1 242 1 144 2 109 1 285 1 145 1 131 1 
176 1 199 2 313 2 290 1 242 2 346 1 68 1 144 4 370 1 113 1 285 1 131 2 279 4 
199 1 313 1 242 1 68 1 144 1 113 1 285 1 279 1 
176 1 68 2 370 1 279 4 313 1 199 1 104 1 242 3 144 4 285 2 11 1 131 2 260 1 23 1 
199 1 313 1 216 1 242 1 68 1 144 2 113 1 285 1 232 1 131 1 230 1 279 2 
199 1 313 1 104 2 242 1 68 1 360 1 144 3 113 1 285 1 11 2 279 3 260 1 
242 2 74 2 41 1 75 1 
199 1 313 1 369 1 144 1 113 1 279 1 
199 1 313 1 142 1 242 1 68 1 144 2 113 1 285 1 131 1 279 2 
191 1 
199 1 313 1 242 1 68 1 144 1 113 1 285 1 279 1 
68 1 113 1 279 3 313 1 199 1 142 1 242 1 144 3 285 1 131 1 11 1 
176 1 242 1 370 1 23 1 
242 1 68 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 185 275 162 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 4694 | = null
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isPositive()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
145 1 262 1 123 4 1 3 95 1 339 2 6 2 7 1 98 1 54 1 207 1 359 1 361 2 298 6 209 2 159 1 107 2 37 5 108 9 87 2 134 1 62 1 281 9 254 1 331 2 17 1 113 1 376 1 
145 1 262 1 123 4 1 3 95 1 339 2 6 2 7 1 98 1 54 1 207 1 359 1 361 2 298 6 209 2 159 1 107 2 37 5 87 2 108 9 134 1 62 1 281 9 254 1 331 2 17 1 113 1 376 1 
145 1 262 1 123 5 1 4 95 1 339 2 6 2 7 1 98 1 54 1 207 1 359 1 361 2 298 7 209 2 159 1 107 2 37 6 87 2 108 10 134 1 62 1 281 10 254 1 331 2 17 1 113 1 376 1 
145 1 262 1 123 3 1 2 95 1 339 1 6 2 7 1 98 1 54 1 207 1 359 1 361 2 298 4 209 2 159 1 107 2 37 4 87 2 108 7 134 1 281 7 254 1 331 2 17 1 113 1 376 1 
145 1 123 2 1 1 107 1 37 3 108 4 87 1 62 1 281 4 254 1 339 2 6 1 7 1 207 1 361 1 113 1 298 3 209 1 
145 1 37 1 107 1 108 2 134 1 281 2 6 1 331 1 207 1 17 1 361 1 113 1 116 1 130 1 209 1 338 1 
145 1 262 1 123 1 1 1 37 2 108 3 281 3 6 2 331 1 207 1 361 2 113 1 298 1 
159 1 145 1 262 1 123 4 1 3 107 1 37 5 87 1 108 9 164 1 357 1 62 1 339 2 254 1 281 9 6 2 7 1 331 1 54 1 207 1 361 2 113 1 298 7 209 1 
159 1 145 1 262 1 123 4 1 3 107 1 37 5 87 1 108 9 164 1 357 1 62 1 339 2 254 1 281 9 6 2 7 1 331 1 54 1 207 1 361 2 113 1 298 7 209 1 
150 1 256 1 282 1 
213 2 150 1 296 1 
0 2 223 2 355 1 364 2 68 2 58 2 293 1 81 2 
0 2 2 1 223 3 355 1 153 1 154 1 293 1 52 1 8 1 125 1 81 3 316 1 268 2 126 1 246 1 247 1 273 2 227 1 364 2 56 1 13 1 58 2 183 2 324 1 161 2 301 1 332 1 138 1 308 1 219 1 167 1 41 1 309 1 68 2 238 2 142 1 353 1 
0 1 105 1 111 1 223 1 260 1 364 1 68 1 58 1 293 1 81 1 
240 1 150 1 264 1 223 1 327 1 155 1 256 1 81 1 234 1 235 1 111 1 333 1 68 1 228 1 
0 1 150 1 223 1 327 1 155 2 256 1 81 1 234 1 235 2 111 1 333 1 364 1 68 1 58 1 228 1 
235 1 313 1 83 1 155 1 91 1 
235 2 148 1 150 1 83 1 285 1 155 2 91 1 256 1 
235 1 83 1 155 1 
105 1 0 1 223 1 293 1 155 1 81 1 235 1 111 1 284 1 260 1 364 1 68 1 58 1 91 1 
150 1 
235 2 150 1 83 1 285 1 155 2 91 1 79 1 256 1 
235 3 162 1 3 1 55 1 292 1 315 1 275 1 155 3 91 2 185 1 
355 1 282 1 
0 1 223 2 174 1 355 2 81 2 30 1 364 1 68 2 58 1 
82 1 158 1 306 1 
311 1 324 1 161 1 223 1 355 1 8 1 138 1 81 1 316 1 246 1 309 1 247 1 273 1 13 1 183 1 142 1 
0 1 252 1 223 3 355 1 364 3 68 3 58 3 81 3 
111 1 223 1 260 1 364 1 68 1 58 1 81 1 
0 1 30 1 111 1 223 1 174 1 364 1 68 1 58 1 81 1 
0 2 2 1 223 4 94 1 355 1 153 1 52 1 293 1 26 1 8 1 155 1 125 1 81 4 316 1 268 2 30 1 246 1 247 1 273 1 227 1 364 3 13 1 58 3 183 1 228 1 324 1 161 1 301 1 252 1 327 1 332 1 138 1 234 1 235 1 219 1 167 1 41 1 309 1 111 1 333 1 42 1 68 3 238 1 142 1 
103 1 264 1 223 2 252 1 355 1 364 1 68 2 58 1 81 2 
0 1 150 1 94 1 252 2 223 3 327 1 155 1 81 3 234 1 30 1 235 1 110 1 111 1 333 1 364 3 42 1 68 3 58 3 228 1 
0 1 252 1 223 2 306 1 81 2 30 1 82 1 364 2 68 2 58 2 
161 1 324 1 223 1 355 1 8 1 138 1 81 1 316 1 246 1 309 1 247 1 273 1 13 1 183 1 142 1 
161 1 324 1 223 1 355 1 138 1 81 1 316 1 11 1 246 1 247 1 273 1 193 1 13 1 183 1 142 1 
45 1 287 1 2 1 48 1 153 1 53 1 125 2 29 1 268 2 82 2 227 1 158 2 14 1 301 1 186 1 85 1 306 2 65 1 167 1 41 1 168 1 377 1 238 4 353 2 
111 1 327 1 223 1 328 1 364 1 68 1 58 1 81 1 
324 1 161 1 94 1 252 1 223 2 8 1 138 1 81 2 316 1 246 1 82 1 309 1 247 1 273 1 364 1 13 1 68 1 58 1 183 1 142 1 
0 1 94 1 252 2 223 3 355 1 81 3 30 1 111 1 342 1 364 3 68 3 58 3 
111 1 223 2 328 1 260 1 364 2 68 2 58 2 81 2 
274 1 310 1 
274 1 310 1 
18 1 378 1 
18 1 378 1 
18 1 378 1 
274 1 70 1 310 1 
302 1 274 1 310 1 
18 1 274 2 136 1 378 1 310 2 367 1 
274 1 70 1 310 1 
274 1 70 1 310 1 
274 1 267 1 310 1 
274 1 267 1 310 1 
274 1 267 1 310 1 
242 3 150 1 23 2 265 2 51 2 78 1 329 1 155 2 225 1 180 2 307 1 235 2 156 1 257 2 274 2 129 1 352 1 310 2 367 1 
242 1 223 2 23 1 355 1 265 1 155 1 180 1 179 1 81 2 157 1 364 2 274 1 129 1 58 2 229 1 250 1 302 1 166 1 235 1 257 1 112 1 19 1 68 2 310 1 
107 1 87 1 209 1 
107 1 116 1 209 1 
72 1 160 1 107 3 87 2 116 1 286 1 
72 1 146 1 107 2 87 1 116 1 286 1 
72 2 107 2 87 1 116 1 286 1 
45 1 75 1 150 2 3 1 77 1 202 1 292 1 315 1 177 2 296 1 155 5 29 1 317 1 360 2 157 1 83 1 184 1 250 1 213 3 253 1 216 2 166 1 256 1 65 1 235 5 236 1 168 1 285 1 350 2 91 4 44 1 71 3 
45 3 313 5 172 1 150 5 75 1 3 2 199 5 77 1 202 3 315 2 292 2 177 6 296 3 155 9 29 3 360 6 83 6 55 1 210 1 279 1 250 4 213 9 84 1 36 1 232 1 216 6 256 1 65 3 235 9 236 2 168 3 285 1 91 7 44 2 71 8 
45 1 150 3 3 1 292 1 315 1 202 1 177 2 296 2 155 3 29 1 317 1 360 2 55 1 250 1 213 4 253 1 216 2 256 1 65 1 235 3 236 1 168 1 350 1 91 2 44 1 71 3 
45 2 150 4 3 1 292 1 315 1 202 2 177 4 296 3 155 4 29 2 317 1 360 4 55 1 279 1 250 2 213 7 84 1 253 1 232 1 216 4 256 1 65 2 235 4 236 1 168 2 350 2 91 3 44 1 71 5 
324 1 347 1 282 1 
324 1 140 1 
9 1 
324 1 247 1 
324 3 323 1 347 2 247 1 96 1 142 1 
324 1 247 1 142 1 
324 1 115 1 
325 2 35 1 222 1 186 2 303 1 304 1 125 3 29 1 269 1 373 1 320 1 168 1 362 1 377 3 237 1 238 7 353 4 
325 2 35 1 222 1 186 2 303 1 304 1 125 3 29 1 269 1 373 1 320 1 168 1 362 1 377 3 237 1 238 7 353 4 
325 2 35 1 222 1 186 2 303 1 304 1 125 3 40 1 29 1 269 1 373 1 320 1 168 1 362 1 377 3 237 1 238 7 353 4 
45 3 222 1 2 1 149 1 356 1 224 3 202 3 206 4 125 17 29 5 269 3 268 2 320 1 362 2 272 1 227 1 325 1 35 3 301 1 186 6 303 7 304 1 188 1 372 1 65 3 373 2 375 1 41 1 168 5 237 1 377 13 20 1 238 34 93 1 353 17 
2 2 222 1 288 1 125 4 29 1 268 4 269 1 320 1 362 1 227 2 325 2 35 1 301 2 186 3 303 1 190 1 373 1 41 2 168 1 377 4 237 1 20 1 238 9 353 5 
145 1 73 1 6 1 204 1 316 1 207 1 358 1 361 1 298 1 273 1 321 1 365 1 13 1 183 1 276 1 209 1 160 1 161 1 37 1 107 2 87 1 108 2 305 1 280 1 281 2 331 1 113 1 116 1 351 1 337 1 
73 1 6 1 204 1 316 1 207 1 361 1 273 1 298 2 321 1 365 1 13 1 183 1 209 1 160 1 161 1 37 1 107 2 87 1 108 3 305 1 280 1 281 3 331 1 189 1 113 1 116 1 220 1 351 1 337 1 119 1 
204 1 316 1 207 1 273 1 298 2 321 1 13 1 183 1 209 1 160 1 161 1 37 1 107 2 108 2 87 1 305 1 280 1 281 2 331 1 189 1 113 1 116 1 351 1 337 1 119 1 
299 1 324 1 161 1 163 1 86 1 108 1 266 1 281 1 6 1 331 2 204 2 64 1 316 1 246 1 361 1 247 1 273 1 321 2 13 1 43 1 220 1 183 1 337 2 
145 1 73 1 6 1 204 1 316 1 361 1 273 1 321 1 365 1 13 1 183 1 276 1 209 1 160 1 161 1 107 2 87 1 108 1 305 1 280 1 281 1 331 1 189 1 116 1 351 1 337 1 
100 1 
240 1 147 2 195 1 150 2 289 1 3 1 50 1 291 2 292 1 296 2 155 5 101 2 246 2 247 1 249 2 13 1 212 4 161 2 213 2 15 2 345 1 63 2 16 1 256 1 111 1 258 1 68 1 121 2 71 2 264 1 223 1 76 1 77 1 315 1 266 1 25 1 81 1 316 1 360 2 83 6 273 2 363 1 183 2 228 1 324 1 327 1 86 1 187 1 133 1 88 1 234 1 235 5 236 1 333 1 285 3 
240 1 223 1 264 1 50 1 76 1 25 1 155 3 79 1 81 1 83 2 228 1 212 2 345 1 327 1 16 1 234 1 235 3 111 1 333 1 285 1 68 1 121 1 
240 1 223 1 264 1 150 1 50 1 76 1 25 1 155 3 79 1 81 1 101 1 83 1 228 1 212 3 345 1 327 1 16 1 256 1 234 1 235 3 111 1 333 1 285 1 68 1 
240 1 147 1 223 1 264 1 150 1 50 1 76 1 25 1 155 3 79 1 81 1 101 1 83 2 228 1 212 3 345 1 327 1 16 1 256 1 234 1 235 3 111 1 333 1 285 1 68 1 121 1 
0 1 240 1 147 2 150 1 50 1 3 1 292 1 293 1 155 3 58 1 105 1 212 2 345 1 16 1 256 1 111 2 260 1 68 2 121 2 71 1 221 1 223 2 264 1 76 1 77 1 315 1 25 1 79 1 81 2 360 1 83 3 364 1 363 1 228 1 327 1 89 1 234 1 235 3 374 1 284 1 333 1 285 1 143 1 
240 1 147 2 195 1 289 1 150 2 3 1 50 1 291 2 292 1 155 4 296 2 101 2 249 2 212 4 213 2 345 1 15 2 63 2 16 1 256 1 111 1 68 1 121 2 71 1 223 1 264 1 76 1 77 1 315 1 25 1 81 1 360 1 83 4 363 1 228 1 327 1 234 1 235 4 333 1 285 2 
0 1 240 1 221 1 150 1 223 2 264 1 50 1 3 1 76 1 77 1 292 1 315 1 293 1 25 1 155 2 81 2 360 1 364 1 363 1 58 1 228 1 105 1 212 2 345 1 327 1 16 1 256 1 234 1 235 2 374 1 284 1 111 2 333 1 260 1 68 2 71 1 
0 1 240 1 221 1 150 1 223 2 264 1 50 1 3 1 76 1 77 1 292 1 315 1 293 1 25 1 155 2 81 2 360 1 364 1 363 1 58 1 228 1 105 1 212 2 345 1 327 1 16 1 256 1 234 1 235 2 374 1 284 1 111 2 333 1 260 1 68 2 71 1 
144 1 240 1 147 2 195 1 150 1 223 1 264 1 50 1 3 1 76 1 291 2 77 1 292 1 315 1 25 1 155 4 101 2 81 1 360 1 83 4 228 1 343 2 277 1 368 2 212 4 213 2 345 1 327 1 132 1 63 2 16 1 256 1 234 1 235 4 111 1 333 1 114 1 285 2 68 1 121 2 71 1 
0 1 240 1 147 1 150 1 50 1 3 1 292 1 293 1 155 2 101 1 58 1 105 1 212 3 345 1 16 1 256 1 111 2 260 1 68 2 121 1 71 1 221 1 264 1 223 2 76 1 77 1 315 1 25 1 81 2 360 1 83 1 363 1 364 1 228 1 327 1 234 1 235 2 374 1 284 1 333 1 143 1 
0 1 240 1 147 1 150 1 50 1 3 1 292 1 293 1 155 2 101 1 58 1 105 1 212 3 345 1 16 1 256 1 111 2 260 1 68 2 121 1 71 1 221 1 264 1 223 2 76 1 77 1 315 1 25 1 81 2 360 1 83 1 363 1 364 1 228 1 327 1 234 1 235 2 374 1 284 1 333 1 143 1 
240 1 147 2 195 1 289 1 150 1 3 1 50 1 291 2 292 1 155 4 101 2 343 2 212 4 213 2 345 1 63 2 16 1 256 1 111 1 68 1 121 2 71 1 223 1 264 1 76 1 77 1 315 1 25 1 81 1 360 1 83 4 228 1 277 1 368 2 327 1 234 1 235 4 333 1 285 2 
222 1 2 1 153 1 355 2 125 3 29 1 268 2 269 1 82 1 320 1 227 1 158 1 14 1 325 1 35 1 301 1 186 2 306 1 282 1 167 1 41 1 168 1 237 1 377 2 238 6 353 3 
45 2 2 2 196 1 355 1 153 2 356 1 224 3 202 2 206 3 125 6 29 2 268 4 82 11 227 2 12 1 158 11 33 1 326 1 61 1 186 1 301 2 303 1 188 1 332 1 306 4 65 1 308 1 167 1 41 2 168 1 377 2 238 14 353 8 
311 1 2 1 223 2 94 1 355 1 153 1 8 1 181 1 81 2 125 1 316 1 268 2 246 1 319 1 247 1 273 1 227 1 364 1 13 1 183 1 58 1 324 1 161 1 326 1 300 1 301 1 252 1 306 1 332 1 138 1 308 1 167 1 309 1 41 1 68 1 238 2 142 1 353 1 
45 2 2 3 94 1 153 3 202 2 294 2 203 1 8 2 246 1 247 2 13 2 58 1 158 7 60 2 161 3 301 3 252 1 303 4 306 7 218 2 65 2 308 1 219 2 167 3 309 2 168 3 68 1 353 10 222 1 223 3 355 2 27 1 125 10 81 3 316 2 29 3 269 1 268 6 82 7 320 1 273 3 364 1 227 3 183 3 325 1 326 1 34 2 324 2 35 1 186 4 231 1 189 1 332 1 138 2 41 3 237 1 377 8 238 20 142 2 
241 1 2 2 223 1 153 2 154 2 266 1 81 1 28 1 125 1 316 2 358 1 268 4 246 2 247 2 273 8 364 1 227 2 13 2 58 1 183 8 14 1 324 3 161 7 301 2 252 1 86 1 165 1 217 1 189 1 137 1 332 1 308 1 167 2 41 2 141 1 68 1 238 2 170 1 353 1 
0 1 45 1 2 1 312 1 223 1 153 1 202 1 81 1 125 2 29 1 30 1 268 2 82 1 227 1 364 1 58 1 158 1 326 1 186 1 301 1 306 1 65 1 167 1 41 1 168 1 377 1 68 1 238 3 353 1 
45 1 14 1 2 1 301 1 303 1 48 1 153 1 306 1 29 1 268 2 82 1 167 1 41 1 377 1 227 1 238 2 158 1 353 2 
14 1 2 1 186 1 301 1 85 1 153 1 306 1 125 2 65 1 268 2 82 1 167 1 41 1 168 1 377 1 227 1 238 2 158 1 
45 1 2 1 153 1 202 1 125 2 29 1 268 2 82 2 227 1 158 2 14 1 301 1 186 1 303 1 306 2 65 1 167 1 41 1 168 1 377 2 238 4 353 2 
45 1 2 1 301 1 303 1 48 1 153 1 306 1 28 1 29 1 268 2 82 1 167 1 41 1 377 1 227 1 238 2 158 1 353 2 
2 1 186 1 301 1 85 1 153 1 306 1 28 1 125 2 65 1 268 2 82 1 167 1 41 1 168 1 377 1 227 1 238 2 158 1 
45 1 2 1 153 1 202 1 28 1 125 2 29 1 268 2 82 2 227 1 158 2 301 1 186 1 303 1 306 2 65 1 167 1 41 1 168 1 377 2 238 4 353 2 
45 1 2 1 153 1 202 1 125 2 29 1 268 2 82 2 227 1 158 2 301 1 186 1 303 1 306 2 65 1 167 1 41 1 168 1 377 2 238 4 353 2 
2 1 223 1 355 1 153 1 8 1 81 1 125 1 316 1 268 2 246 1 247 1 273 1 227 1 13 1 183 1 161 1 324 1 301 1 332 1 138 1 308 1 219 1 167 1 309 1 41 1 238 2 142 1 353 1 
2 1 223 1 355 1 153 1 81 1 125 1 316 1 11 1 268 2 246 1 247 1 273 1 227 1 208 1 13 1 183 1 161 1 324 1 301 1 332 1 138 1 308 1 167 1 41 1 193 1 238 2 142 1 353 1 
45 1 2 1 153 1 202 1 125 2 29 1 268 2 82 2 227 1 158 2 326 1 301 1 186 1 303 1 306 2 65 1 167 1 41 1 168 1 377 2 238 4 353 2 
45 1 2 1 223 1 153 1 202 1 8 1 125 2 81 1 29 1 316 1 358 1 268 2 82 2 247 1 273 1 227 1 13 1 183 1 158 2 34 1 161 1 324 1 186 1 301 1 303 1 306 2 138 1 65 1 219 1 167 1 309 1 41 1 168 1 377 2 238 4 142 1 353 2 
0 1 45 1 2 1 223 1 153 1 202 1 125 1 81 1 29 1 30 1 268 2 82 1 227 1 364 1 58 1 158 1 326 1 301 1 303 1 306 1 65 1 167 1 41 1 168 1 377 1 335 1 68 1 238 3 353 2 
45 3 263 2 2 2 288 1 49 1 356 1 224 1 202 3 206 2 226 1 125 10 29 3 271 1 268 4 297 2 227 2 32 1 278 1 344 1 186 3 301 2 303 3 188 1 65 3 41 2 168 3 334 1 377 6 238 19 353 9 
45 3 263 1 2 3 288 1 356 2 224 2 202 3 243 1 295 1 226 1 206 2 125 12 29 3 271 1 268 6 297 4 227 3 32 1 344 2 186 2 301 3 303 2 39 1 255 1 65 2 41 3 168 2 377 4 334 2 349 1 20 2 118 1 238 26 353 14 
45 4 263 1 222 1 2 3 288 1 49 1 356 3 224 3 202 4 243 1 295 1 206 4 226 1 125 21 29 5 271 1 269 1 268 6 297 4 320 1 227 3 32 1 344 1 325 1 35 1 186 4 301 3 303 4 188 1 39 1 255 1 65 4 41 3 168 5 348 1 237 1 334 2 377 8 349 1 20 1 118 1 238 41 353 20 
45 4 263 1 222 1 2 4 288 1 49 1 356 3 224 3 202 4 243 1 295 1 206 4 226 1 125 18 29 5 271 1 269 1 268 8 297 4 320 1 227 4 32 1 344 1 325 1 35 1 186 4 301 4 303 3 188 1 39 1 255 1 65 3 41 4 168 4 348 1 237 1 334 2 377 7 349 1 20 2 118 1 238 38 353 20 
45 7 263 1 222 1 2 2 288 1 356 2 224 4 202 7 243 1 295 1 206 4 226 1 125 25 29 8 271 1 269 1 268 4 297 4 320 1 227 2 32 1 344 1 325 1 35 1 61 2 186 7 301 2 303 7 188 2 39 1 255 1 65 7 41 2 168 8 237 1 334 1 377 14 349 1 20 1 118 1 238 52 353 27 
47 1 257 1 23 1 265 1 274 1 329 1 225 1 310 1 180 1 367 1 
302 1 112 1 
257 1 67 1 259 1 23 1 265 1 274 1 310 1 180 1 92 1 
242 2 150 1 23 1 265 1 51 1 78 1 329 1 155 1 225 1 180 1 307 1 235 1 257 1 129 1 274 1 352 1 310 1 367 1 
242 2 150 1 23 1 265 1 51 1 78 1 329 1 155 1 225 1 180 1 307 1 235 1 257 1 129 1 274 1 352 1 310 1 367 1 
242 2 150 1 23 1 265 1 51 1 78 1 329 1 155 1 225 1 180 1 307 1 235 1 257 1 129 1 274 1 352 1 310 1 367 1 
136 1 70 1 99 1 
136 1 70 1 99 1 
290 1 267 1 
290 1 136 1 267 1 
19 1 179 1 
242 1 223 2 74 1 23 1 355 1 51 1 265 1 78 1 155 1 180 1 179 1 81 2 157 1 364 2 274 1 58 2 229 1 250 1 302 1 166 1 235 1 257 1 112 1 19 1 68 2 91 1 310 1 
70 1 99 1 
290 1 136 1 267 1 
2 1 223 2 24 1 153 1 201 1 154 2 80 1 81 2 125 1 316 1 268 2 247 1 273 2 227 1 13 1 183 2 59 1 324 1 326 1 161 2 301 1 217 1 332 1 308 1 167 1 41 1 141 1 68 2 238 2 169 1 353 1 
160 1 161 2 73 1 107 2 87 1 305 1 280 1 189 1 341 1 233 1 316 1 270 1 358 1 273 2 321 1 116 1 13 1 183 2 209 1 
160 1 161 1 73 1 251 1 107 2 87 1 305 1 280 1 189 1 341 1 316 1 273 1 321 1 116 1 13 1 183 1 209 1 
299 1 324 1 161 1 86 1 266 1 316 1 270 1 246 1 247 1 273 1 321 1 261 1 13 1 183 1 
160 1 161 1 73 1 107 2 87 1 305 1 280 1 189 1 341 1 233 1 316 1 270 1 273 1 321 1 116 1 13 1 183 1 209 1 
151 1 
360 1 150 1 22 1 176 1 256 1 282 1 71 1 
150 2 3 1 77 1 292 1 315 1 296 1 155 1 360 1 83 1 363 1 249 1 213 1 15 1 256 1 235 1 285 1 71 1 
45 2 150 8 3 4 198 2 292 4 202 2 294 2 340 1 155 5 296 6 246 1 247 3 13 3 161 3 213 12 214 2 216 6 256 2 65 2 66 2 347 2 168 2 115 2 69 2 21 1 122 1 71 9 22 1 173 1 77 4 176 1 315 4 177 6 316 4 29 2 358 1 360 8 182 2 83 5 273 3 183 3 230 2 324 10 323 1 131 2 38 1 133 1 235 5 236 2 140 3 333 2 285 3 142 3 239 2 
45 4 150 7 3 2 198 5 356 1 77 2 292 2 315 2 224 2 202 4 177 8 295 1 155 1 296 8 206 2 29 4 31 1 360 8 83 1 214 1 213 13 61 1 133 1 188 1 39 1 216 8 255 1 256 2 65 4 235 1 90 1 236 1 168 4 285 1 349 1 118 1 71 13 
0 1 221 1 223 1 3 1 198 2 77 1 292 1 315 1 293 1 155 1 81 1 29 2 269 1 360 2 320 1 272 1 364 1 58 1 105 1 214 1 35 1 235 1 111 1 284 1 168 1 260 1 68 1 71 2 
22 1 150 1 3 1 77 1 315 1 292 1 176 1 256 1 360 1 71 1 
45 2 214 1 213 10 150 5 198 2 202 2 294 1 177 5 216 5 296 5 29 2 65 2 360 5 168 2 71 5 
235 1 150 1 83 1 285 1 155 1 256 1 
3 2 173 1 77 1 292 2 315 2 266 1 155 3 316 1 246 2 360 2 248 1 247 1 83 4 273 4 55 1 13 1 183 4 324 1 161 4 187 1 86 1 370 1 133 2 235 3 236 2 258 1 285 2 122 2 71 2 
0 2 2 1 223 3 355 1 153 1 293 1 52 1 8 1 125 1 81 3 316 1 268 2 246 1 247 1 273 1 227 1 364 2 13 1 183 1 58 2 161 1 324 1 301 1 332 1 138 1 219 1 167 1 309 1 41 1 68 2 238 1 142 1 
325 1 213 4 150 4 3 1 77 1 133 1 315 1 292 1 177 2 216 2 296 2 256 2 360 2 236 1 71 1 
257 1 23 1 354 1 
257 1 19 1 23 1 152 1 225 1 
257 1 23 1 354 1 
257 1 23 1 354 1 
283 1 257 1 23 1 
283 1 257 1 23 1 
283 1 257 1 23 1 
257 1 23 1 
274 1 310 1 
325 1 2 2 222 1 35 1 186 2 301 2 303 1 125 4 29 1 268 4 269 1 320 1 41 2 168 1 377 3 237 1 227 2 20 1 238 8 353 4 
325 1 222 1 35 1 186 2 282 1 125 3 29 1 269 1 320 1 168 1 237 1 377 2 238 6 353 3 
45 1 2 1 186 1 301 1 303 1 202 1 125 2 65 1 29 1 268 2 191 1 41 1 168 1 377 2 227 1 238 4 353 2 
45 1 186 1 303 1 356 1 188 1 224 1 202 1 206 2 125 4 65 1 29 1 168 1 377 2 238 7 353 3 
45 2 222 1 2 2 196 1 202 2 224 2 178 1 206 2 125 12 29 3 269 2 268 4 320 1 227 2 325 1 35 2 61 1 186 5 301 2 303 4 188 1 65 2 41 2 168 3 237 1 377 9 20 2 238 23 353 11 
238 1 206 1 125 1 
224 1 238 1 353 1 
45 1 2 1 301 1 186 2 303 1 202 1 294 1 125 3 29 1 65 1 268 2 191 1 41 1 168 1 377 3 227 1 238 6 353 3 
45 2 2 1 186 1 288 1 301 1 303 1 356 1 39 1 202 2 224 1 295 1 255 1 206 1 125 6 65 2 29 2 268 2 41 1 168 2 377 2 227 1 349 1 118 1 238 12 353 6 
35 1 186 1 303 1 125 3 29 1 269 1 320 1 168 1 377 2 238 6 353 3 
35 1 222 1 2 1 186 1 301 1 303 1 178 1 125 2 269 1 268 2 41 1 377 2 237 1 227 1 20 1 238 3 353 1 
2 1 35 2 301 1 288 1 186 3 303 2 125 5 29 2 268 2 269 2 41 1 320 1 168 2 272 1 377 5 227 1 238 10 353 5 
45 1 2 1 288 1 301 1 303 1 29 1 268 2 41 1 377 1 227 1 238 2 353 2 
45 1 2 1 186 1 288 1 301 1 303 1 202 1 125 2 65 1 29 1 268 2 41 1 168 1 377 2 227 1 238 4 353 2 
2 3 35 1 288 1 301 3 186 1 303 1 49 1 178 1 125 2 268 6 269 1 41 3 377 2 227 3 20 1 238 3 353 1 
45 3 222 1 2 5 149 1 288 1 49 1 356 1 224 3 202 3 178 1 206 4 125 18 29 5 269 3 268 10 320 2 227 5 325 1 35 3 301 5 186 7 303 5 188 1 372 1 65 3 191 1 375 1 41 5 168 5 237 1 377 12 20 2 238 34 353 16 
325 1 35 1 222 1 2 1 186 2 288 1 301 1 356 1 224 1 295 1 206 1 125 4 29 1 269 1 268 2 320 1 41 1 168 1 377 2 237 1 227 1 238 8 353 4 
45 1 222 1 2 2 288 1 356 1 224 1 202 1 295 1 206 2 125 5 29 2 269 1 268 4 320 1 227 2 325 1 35 1 186 2 301 2 303 1 188 1 191 1 41 2 168 1 237 1 377 3 238 11 353 6 
45 2 222 1 2 3 288 1 356 1 224 1 202 2 295 1 206 1 125 10 29 3 269 1 268 6 320 1 227 3 325 1 35 1 301 3 186 3 303 1 39 1 255 1 65 2 191 1 41 3 168 3 237 1 377 4 349 1 20 1 118 1 238 19 353 9 
45 2 222 1 2 3 288 1 356 1 224 1 202 2 295 1 206 1 125 7 29 3 269 1 268 6 320 1 227 3 325 1 35 1 301 3 186 3 303 2 39 1 255 1 65 1 191 1 41 3 168 2 237 1 377 5 349 1 20 1 238 17 118 1 353 10 
325 1 35 1 222 1 2 1 186 2 288 1 301 1 356 1 224 1 295 1 206 1 125 4 29 1 269 1 268 2 320 1 41 1 168 1 377 2 237 1 227 1 238 8 353 4 
45 2 2 1 186 1 288 1 301 1 303 1 356 1 39 1 202 2 224 1 295 1 255 1 206 1 125 6 65 2 29 2 268 2 41 1 168 2 377 2 227 1 349 1 118 1 238 12 353 6 
45 2 222 1 2 4 288 1 356 1 224 1 202 2 295 1 206 1 125 8 29 3 269 1 268 8 320 1 227 4 325 1 35 1 301 4 186 3 303 2 39 1 255 1 65 1 191 1 41 4 168 2 237 1 377 5 349 1 20 2 118 1 238 18 353 10 
45 3 2 4 288 1 49 1 356 1 224 1 202 3 295 1 206 1 125 7 29 3 268 8 227 4 301 4 186 3 303 3 39 1 255 1 65 2 41 4 168 2 377 6 349 1 20 2 118 1 238 16 353 9 
222 2 35 3 186 3 303 3 125 4 29 1 269 3 320 1 168 1 237 1 377 6 238 7 353 3 
45 2 222 1 2 4 288 1 49 1 356 1 224 1 202 2 295 1 206 1 125 8 29 3 269 1 268 8 320 1 227 4 325 1 35 1 301 4 186 3 303 1 39 1 255 1 65 1 41 4 168 2 237 1 377 4 349 1 20 2 118 1 238 18 353 10 
103 1 369 1 223 1 264 1 355 1 68 1 81 1 
369 1 264 1 223 1 355 1 244 1 245 1 371 1 81 1 103 1 336 1 68 1 211 1 
316 1 324 1 161 1 246 1 247 1 86 1 273 1 13 1 266 1 183 1 282 1 
324 1 161 1 252 1 223 2 355 1 8 1 138 1 81 2 316 1 246 1 247 1 273 1 364 1 68 1 13 1 58 1 183 1 142 1 
324 3 161 1 327 1 252 1 223 2 355 1 8 1 138 1 234 1 81 2 316 1 111 1 247 2 115 1 273 1 364 2 68 2 13 1 58 1 183 1 142 2 239 1 122 1 
223 2 355 1 81 2 316 1 11 1 247 2 273 2 364 2 13 1 183 2 58 1 106 1 161 2 324 3 252 1 327 1 138 1 234 1 111 1 115 1 68 2 142 2 239 1 122 1 
150 1 155 2 316 1 246 1 83 1 247 1 273 3 13 1 57 1 183 3 106 1 324 4 161 3 135 1 256 1 235 2 347 1 140 1 333 1 115 1 142 1 239 1 122 1 
230 1 106 1 161 3 324 4 150 1 155 2 256 1 316 1 235 2 246 1 347 1 140 1 333 1 247 1 83 1 115 1 273 3 13 1 183 3 142 1 239 1 122 1 
316 1 161 1 241 1 273 1 13 1 183 1 
46 1 241 1 161 6 323 1 324 3 154 1 165 1 109 1 330 1 189 1 137 1 316 3 358 1 246 2 247 2 273 7 141 1 13 2 183 7 142 1 170 1 
222 1 2 2 223 2 355 2 153 2 201 1 8 1 125 3 81 2 29 1 316 1 269 1 268 4 358 1 82 1 320 1 247 1 273 1 227 2 364 1 13 1 58 1 183 1 158 1 60 1 325 1 324 1 326 1 161 1 34 1 35 1 186 2 301 2 252 1 306 1 138 1 219 1 167 2 41 2 309 1 168 1 377 2 237 1 68 1 238 6 142 1 353 3 
150 1 22 1 3 2 173 1 77 2 176 1 292 2 315 2 155 3 360 1 246 1 182 1 83 2 273 1 183 1 230 1 161 1 324 2 256 1 235 3 66 1 347 1 140 1 333 1 285 1 69 1 91 1 71 1 
316 2 358 1 324 2 323 1 161 2 241 1 347 1 247 1 273 2 38 1 13 1 183 2 142 1 
106 1 161 4 324 1 86 1 266 1 102 1 316 1 358 1 246 1 247 1 273 4 13 1 183 4 
161 2 324 1 124 1 346 1 109 1 231 1 330 1 316 2 247 1 273 2 13 1 183 2 142 1 122 1 
316 1 161 1 246 1 107 1 273 1 116 1 13 1 280 1 183 1 209 1 
316 1 358 1 324 1 161 2 247 1 273 2 141 1 13 1 183 2 59 1 189 1 
161 4 324 3 86 1 266 1 165 1 102 1 316 2 358 1 246 1 247 2 273 5 141 1 13 2 183 5 170 1 122 1 
161 4 324 3 86 1 266 1 165 1 102 1 316 2 358 1 246 1 247 2 273 5 141 1 13 2 183 5 122 1 104 1 
324 1 161 1 252 1 223 2 355 1 138 1 81 2 316 1 11 1 246 1 247 1 273 1 364 1 68 1 13 1 58 1 183 1 142 1 
46 1 161 1 323 1 324 1 109 1 330 1 316 2 247 1 273 1 13 1 183 1 142 1 122 1 
223 1 24 1 197 1 175 1 80 1 81 1 127 1 68 1 169 1 
4 1 175 1 5 1 
127 1 355 1 197 1 175 1 366 1 
150 1 327 1 355 1 197 2 97 1 175 1 4 1 5 1 155 2 256 1 234 1 235 2 127 2 111 1 333 1 42 1 228 1 91 1 366 2 
207 1 113 1 37 1 282 1 
207 1 361 1 113 1 37 1 108 1 281 1 6 1 
281 1 331 1 337 1 
171 1 207 1 17 2 10 1 145 1 361 1 113 1 37 1 192 1 108 3 281 3 6 1 
207 1 361 1 113 1 37 1 298 1 108 2 339 1 281 2 6 1 
145 1 123 1 37 1 107 1 108 1 87 1 281 1 6 1 7 1 361 1 209 1 
207 1 145 1 361 1 37 1 108 1 281 1 6 1 
207 2 145 1 361 1 113 1 108 1 281 1 6 1 
145 1 37 1 108 2 281 2 6 2 139 1 207 1 361 2 379 1 120 1 
159 1 145 1 123 1 1 1 37 2 108 3 281 3 6 1 54 1 207 1 361 1 113 1 298 2 
145 1 160 1 37 1 107 2 108 2 87 1 281 2 6 1 207 1 361 1 318 1 113 1 298 1 116 1 209 1 
145 1 123 1 1 1 37 2 108 4 281 4 62 1 339 1 6 2 207 1 361 2 113 1 298 2 
207 1 145 1 361 1 113 1 37 1 108 1 281 1 6 1 
123 1 1 1 37 3 108 4 200 1 281 4 6 1 17 1 10 1 207 2 361 1 113 2 298 2 192 1 
145 1 37 1 108 2 314 1 357 1 281 2 6 1 207 1 361 1 113 1 298 1 194 1 
145 1 37 1 108 3 281 3 6 1 10 2 17 2 207 1 361 1 113 1 192 1 117 1 
322 1 37 1 128 1 
145 1 361 1 215 1 108 1 281 1 6 1 
159 1 207 1 145 1 361 1 113 1 37 1 298 1 108 2 281 2 6 1 
205 1 
207 1 145 1 361 1 113 1 37 1 108 1 281 1 6 1 
159 1 145 1 37 1 108 3 281 3 6 1 17 1 207 1 361 1 113 1 298 1 
123 1 1 1 37 1 200 1 
207 1 37 1 

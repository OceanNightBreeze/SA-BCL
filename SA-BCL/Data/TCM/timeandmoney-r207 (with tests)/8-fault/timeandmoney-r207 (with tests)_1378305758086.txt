#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 177 370 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
182 1 340 1 273 1 163 1 322 2 8 9 117 5 118 1 347 1 210 1 278 3 13 1 329 1 349 9 281 2 67 2 283 1 284 4 20 1 169 2 73 1 27 2 107 1 266 6 75 1 54 2 377 1 200 2 
182 1 340 1 273 1 163 1 322 2 8 9 117 5 118 1 347 1 210 1 278 3 13 1 329 1 349 9 281 2 67 2 283 1 284 4 20 1 169 2 73 1 27 2 107 1 266 6 75 1 54 2 377 1 200 2 
182 1 340 1 273 1 163 1 322 2 8 10 117 6 118 1 347 1 210 1 278 4 13 1 329 1 349 10 281 2 67 2 283 1 284 5 20 1 169 2 73 1 27 2 107 1 266 7 75 1 54 2 377 1 200 2 
182 1 340 1 273 1 163 1 322 2 8 7 117 4 118 1 347 1 210 1 278 2 13 1 349 7 281 2 67 2 283 1 284 3 20 1 169 2 73 1 27 1 107 1 266 4 75 1 54 2 377 1 200 2 
67 1 182 1 284 2 20 1 169 1 322 1 73 1 8 4 27 2 117 3 347 1 107 1 278 1 266 3 329 1 349 4 200 1 281 1 
67 1 340 1 193 1 169 1 311 1 59 1 322 1 73 1 8 2 117 1 118 1 347 1 107 1 54 1 349 2 281 1 
284 1 169 2 322 2 73 1 8 3 117 2 347 1 107 1 278 1 266 1 13 1 54 1 349 3 
182 1 273 1 322 2 86 1 8 9 117 5 347 1 278 3 13 1 329 1 349 9 281 1 283 1 67 1 284 4 20 1 169 2 73 1 27 2 52 1 107 1 266 7 54 1 200 1 
182 1 273 1 322 2 86 1 8 9 117 5 347 1 278 3 13 1 329 1 349 9 281 1 283 1 67 1 284 4 20 1 169 2 73 1 27 2 52 1 107 1 266 7 54 1 200 1 
211 1 
319 1 185 1 180 2 
85 2 227 1 26 2 125 2 161 2 351 2 214 1 238 2 
227 1 132 1 316 1 271 1 161 2 299 1 255 1 275 1 256 1 85 2 115 1 187 1 10 2 259 2 214 1 215 2 238 3 93 2 98 1 167 1 69 1 125 2 168 2 102 1 149 1 351 3 170 1 152 1 23 1 265 1 26 2 221 1 291 1 176 1 129 1 355 1 56 1 
85 1 227 1 26 1 285 1 125 1 161 1 351 1 4 1 131 1 238 1 
68 1 125 1 319 1 351 1 183 1 232 1 2 1 4 1 307 1 154 1 363 1 165 1 178 1 238 1 
161 1 125 1 319 1 351 1 183 1 232 2 2 2 4 1 85 1 26 1 307 1 154 1 363 1 178 1 238 1 
232 1 267 1 2 1 362 1 72 1 
74 1 319 1 109 1 183 1 232 2 267 1 2 2 72 1 
232 1 2 1 72 1 
227 1 285 1 161 1 125 1 351 1 232 1 33 1 2 1 4 1 85 1 26 1 267 1 131 1 238 1 
319 1 
202 1 319 1 109 1 183 1 232 2 267 1 2 2 72 1 
317 1 319 1 183 1 232 5 2 5 243 1 172 1 105 1 72 2 24 1 260 2 295 2 109 1 212 1 267 2 166 2 77 1 269 1 40 1 
211 1 
125 2 161 1 351 2 22 1 85 1 26 1 64 1 214 2 238 2 
100 1 179 1 174 1 
316 1 271 1 262 1 69 1 351 1 149 1 170 1 275 1 115 1 221 1 176 1 259 1 214 1 215 1 238 1 93 1 
271 1 316 1 57 1 359 1 100 1 69 1 161 1 125 1 149 1 351 2 170 1 275 1 115 1 26 1 221 1 176 1 259 1 215 1 238 2 93 1 
85 1 57 1 26 3 125 3 161 3 351 3 214 1 238 3 
26 1 125 1 161 1 351 1 4 1 131 1 238 1 
85 1 26 1 64 1 125 1 161 1 351 1 4 1 22 1 238 1 
271 1 316 1 57 1 132 1 227 1 359 1 253 1 161 3 232 1 2 1 255 1 4 1 275 1 85 2 115 1 187 1 64 1 307 1 10 2 363 1 259 1 214 1 215 1 238 4 93 1 98 1 167 1 69 1 125 3 168 1 102 1 149 1 351 4 170 1 152 1 23 1 265 1 26 3 221 1 196 1 176 1 154 1 355 1 178 1 
57 1 26 1 160 1 125 2 161 1 165 1 351 2 214 1 238 2 
57 2 359 1 253 1 161 3 125 3 319 1 351 3 232 1 2 1 4 1 85 1 26 3 64 1 307 1 154 1 363 1 178 1 38 1 238 3 
57 1 100 1 161 2 125 2 351 2 85 1 26 2 64 1 179 1 238 2 
316 1 271 1 69 1 351 1 149 1 170 1 275 1 115 1 221 1 176 1 259 1 214 1 215 1 238 1 93 1 
271 1 145 1 69 1 351 1 149 1 170 1 115 1 221 1 176 1 259 1 214 1 190 1 215 1 238 1 93 1 
184 1 205 1 234 1 206 1 139 1 187 1 10 2 11 1 98 1 167 1 100 2 102 2 168 4 70 1 150 1 288 1 23 1 174 2 265 1 291 2 222 1 355 1 179 2 157 1 
26 1 125 1 161 1 351 1 178 1 4 1 79 1 238 1 
57 2 160 1 359 1 161 4 125 5 351 5 320 1 106 1 85 1 26 4 64 1 165 1 214 1 238 5 
26 2 125 2 161 2 351 2 4 1 131 1 79 1 238 2 
241 1 330 1 
241 1 330 1 
94 1 60 1 
94 1 60 1 
94 1 60 1 
241 1 32 1 330 1 
94 1 241 2 121 1 5 1 60 1 330 2 
241 1 338 1 330 1 
241 1 338 1 330 1 
241 1 338 1 330 1 
41 1 241 1 330 1 
41 1 241 1 330 1 
41 1 241 1 330 1 
99 2 319 1 241 2 232 2 103 3 233 1 2 2 46 2 104 1 5 1 324 1 325 2 353 1 120 2 65 1 261 1 223 2 88 1 330 2 
360 1 161 2 232 1 32 1 2 1 36 1 116 1 140 1 120 1 364 1 214 1 330 1 238 2 99 1 125 2 241 1 351 2 103 1 331 1 44 1 46 1 104 1 26 2 223 1 
67 1 200 1 281 1 
67 1 193 1 281 1 
67 3 193 1 240 1 3 1 200 2 47 1 
67 2 193 1 240 1 3 1 366 1 200 1 
67 2 193 1 240 2 3 1 200 1 
319 2 232 5 183 1 205 1 2 5 185 1 139 1 36 1 116 1 308 1 11 1 260 1 141 1 142 2 212 1 166 1 14 2 40 3 42 1 70 1 242 1 44 1 172 2 72 1 295 1 335 1 109 1 267 4 76 2 156 1 180 3 82 1 
135 5 317 1 319 5 232 9 183 1 205 3 2 9 185 3 362 5 345 1 139 3 11 3 260 2 141 2 327 1 236 1 142 6 212 1 166 2 40 8 18 1 42 3 70 3 44 4 172 6 48 1 72 6 293 1 335 1 295 2 109 1 267 7 76 6 156 2 180 9 
317 1 319 3 183 1 232 3 2 3 205 1 185 2 139 1 308 1 11 1 260 1 141 1 142 2 166 1 40 3 14 1 42 1 70 1 44 1 172 2 295 1 267 2 156 1 76 2 180 4 82 1 
317 1 319 4 183 1 232 4 2 4 205 2 185 3 345 1 139 2 308 1 11 2 260 1 141 1 327 1 142 4 166 1 40 5 14 2 42 2 70 2 44 2 172 4 48 1 295 1 267 3 76 4 156 1 180 7 82 1 
211 1 
368 1 149 1 
216 1 
221 1 149 1 
115 1 221 1 252 1 149 3 264 2 343 1 
115 1 221 1 149 1 
149 1 71 1 
263 1 102 4 168 9 70 1 361 1 205 1 341 1 312 1 305 1 291 5 222 2 177 1 348 1 189 1 268 2 157 3 296 1 
263 1 102 4 168 9 70 1 361 1 205 1 341 1 312 1 305 1 291 5 222 2 177 1 348 1 189 1 268 2 157 3 296 1 
263 1 102 4 168 9 70 1 361 1 205 1 274 1 341 1 312 1 305 1 291 5 222 2 177 1 348 1 189 1 268 2 157 3 296 1 
181 1 134 3 361 1 341 1 205 5 139 3 305 7 187 1 10 2 11 3 348 2 213 1 189 2 144 1 19 1 42 3 167 1 310 1 263 1 102 17 168 35 70 5 370 1 312 3 23 1 332 1 198 4 291 18 222 6 248 1 177 3 355 1 268 2 296 1 157 13 
228 1 361 1 205 1 341 1 187 2 305 1 10 4 348 1 189 1 123 1 167 2 263 1 168 11 102 5 70 1 23 2 312 1 291 6 222 3 248 1 177 1 355 2 268 2 157 4 
83 1 322 1 8 2 117 1 347 1 259 1 365 1 90 1 215 1 349 2 281 1 93 1 67 2 193 1 126 1 169 1 352 1 170 1 47 1 50 1 73 1 197 1 176 1 107 1 266 1 54 1 380 1 78 1 200 1 81 1 
83 1 162 1 322 1 302 1 8 3 117 1 347 1 259 1 365 1 90 1 215 1 349 3 281 1 93 1 67 2 193 1 126 1 169 1 352 1 170 1 47 1 245 1 50 1 197 1 176 1 107 1 266 2 54 1 78 1 200 1 
83 1 162 1 8 2 117 1 347 1 259 1 215 1 349 2 93 1 281 1 67 2 193 1 126 1 352 1 170 1 47 1 245 1 50 1 197 1 176 1 107 1 266 2 54 1 78 1 200 1 
69 1 149 1 169 1 126 2 170 1 289 1 322 1 302 1 114 1 344 1 50 2 138 1 8 1 221 1 176 1 259 1 354 1 54 2 122 1 78 2 349 1 215 1 93 1 
83 1 322 1 8 1 259 1 365 1 90 1 215 1 349 1 281 1 93 1 67 2 193 1 126 1 169 1 352 1 170 1 47 1 245 1 50 1 73 1 197 1 176 1 54 1 78 1 200 1 81 1 
31 1 
204 1 254 4 301 1 2 5 4 1 303 1 307 1 208 1 259 2 260 1 165 1 212 1 166 1 215 2 68 1 69 2 125 1 351 1 170 1 172 2 173 1 72 6 221 1 176 1 354 1 178 1 225 2 180 2 315 1 318 2 319 2 183 1 232 5 185 2 186 2 35 2 188 1 363 1 235 2 191 2 40 2 93 2 238 1 146 2 101 1 194 1 149 1 289 1 195 1 374 1 51 1 154 1 295 1 109 3 156 1 
202 1 254 2 301 1 232 3 2 3 4 1 307 1 208 1 363 1 165 1 235 1 238 1 68 1 125 1 351 1 173 1 72 2 51 1 154 1 109 1 178 1 315 1 
202 1 68 1 254 3 125 1 319 1 301 1 351 1 183 1 232 3 2 3 4 1 173 1 72 1 307 1 51 1 154 1 208 1 363 1 165 1 109 1 178 1 191 1 315 1 238 1 
202 1 68 1 146 1 254 3 125 1 319 1 301 1 351 1 183 1 232 3 2 3 4 1 173 1 72 2 307 1 51 1 154 1 208 1 363 1 165 1 109 1 235 1 178 1 191 1 315 1 238 1 
202 1 254 6 301 1 2 5 4 1 7 1 307 1 208 1 258 1 165 1 260 1 212 1 166 1 15 1 68 1 125 1 351 1 172 1 173 1 72 7 175 1 178 1 225 2 315 1 318 2 319 5 232 5 183 5 185 2 186 2 35 2 188 1 363 1 235 4 191 4 367 1 40 1 238 1 146 4 101 1 51 1 154 1 295 1 109 3 
254 4 301 1 2 4 4 1 303 1 307 1 208 1 165 1 260 1 212 1 166 1 68 1 125 1 351 1 172 1 173 1 72 4 178 1 225 2 180 2 315 1 318 2 319 2 232 4 183 1 185 2 186 2 35 2 188 1 363 1 235 2 40 1 191 2 238 1 146 2 101 1 51 1 154 1 295 1 109 2 
318 2 254 4 319 1 301 1 183 1 232 4 2 4 185 2 4 1 186 2 7 1 35 2 188 1 307 1 208 1 258 1 363 1 165 1 260 1 235 2 212 1 166 1 191 2 40 1 367 1 238 1 68 1 146 2 101 1 125 1 351 1 172 1 173 1 72 4 51 1 154 1 295 1 109 2 178 1 225 2 315 1 
318 2 254 4 319 1 301 1 183 1 232 4 2 4 185 2 4 1 186 2 7 1 35 2 188 1 307 1 208 1 258 1 363 1 165 1 260 1 235 2 212 1 166 1 191 2 40 1 367 1 238 1 68 1 146 2 101 1 125 1 351 1 172 1 173 1 72 4 51 1 154 1 295 1 109 2 178 1 225 2 315 1 
203 1 318 2 254 4 112 1 319 1 301 1 183 1 232 4 2 4 4 1 6 1 186 2 307 1 208 1 258 1 363 1 165 1 260 1 235 2 212 1 166 1 191 2 40 1 238 1 68 1 146 2 101 1 125 1 351 1 171 2 172 1 173 1 72 4 51 1 154 1 295 1 109 2 178 1 28 2 180 2 315 1 
318 2 254 5 319 1 301 1 183 1 232 4 2 4 185 2 4 1 186 2 7 1 35 2 188 1 307 1 208 1 258 1 363 1 260 1 165 1 212 1 235 3 166 1 40 1 367 1 191 3 238 1 15 1 68 1 146 3 101 1 125 1 351 1 172 1 173 1 72 5 51 1 154 1 295 1 109 2 178 1 225 2 315 1 
318 2 254 5 319 1 301 1 183 1 232 4 2 4 185 2 4 1 186 2 7 1 35 2 188 1 307 1 208 1 258 1 363 1 260 1 165 1 212 1 235 3 166 1 40 1 367 1 191 3 238 1 15 1 68 1 146 3 101 1 125 1 351 1 172 1 173 1 72 5 51 1 154 1 295 1 109 2 178 1 225 2 315 1 
254 4 301 1 2 4 4 1 6 1 303 1 307 1 208 1 165 1 260 1 212 1 166 1 68 1 125 1 351 1 171 2 172 1 173 1 72 4 178 1 28 2 180 2 315 1 318 2 319 1 232 4 183 1 186 2 363 1 235 2 40 1 191 2 238 1 146 2 101 1 51 1 154 1 295 1 109 2 
265 1 187 1 98 1 167 1 10 2 211 1 355 1 206 1 23 1 
134 3 205 2 207 1 139 1 305 1 187 2 10 4 11 2 214 1 282 1 19 1 98 2 42 2 167 2 100 11 102 6 168 14 70 1 244 1 152 1 23 2 174 11 332 1 265 1 198 3 291 8 222 1 247 1 246 1 355 2 56 1 157 2 179 4 
271 1 316 1 297 1 57 1 359 1 161 1 136 1 275 1 115 1 187 1 10 2 259 1 214 1 215 1 92 1 93 1 238 2 98 1 69 1 262 1 167 1 125 1 149 1 351 2 102 1 168 2 170 1 244 1 23 1 152 1 265 1 26 1 221 1 176 1 291 1 355 1 179 1 56 1 
57 1 161 1 341 1 205 3 255 2 115 2 305 4 9 1 10 6 259 3 11 2 214 3 215 3 69 1 167 3 263 1 125 1 351 3 168 22 70 3 170 2 21 1 312 1 23 3 174 7 265 3 26 1 221 2 176 2 222 4 177 1 355 3 268 1 179 7 316 2 271 2 359 1 361 1 275 2 139 2 187 3 279 2 93 3 238 3 97 2 98 3 42 2 100 7 102 11 149 2 151 2 244 1 152 1 245 1 291 11 376 2 110 1 56 1 157 8 
57 1 1 1 161 1 206 1 256 2 115 1 10 4 259 7 66 1 215 7 124 1 167 2 69 2 125 1 168 2 351 1 218 1 170 3 23 2 265 2 26 1 221 3 176 4 224 1 354 1 355 2 30 1 187 2 277 1 89 1 93 6 238 1 98 2 102 1 149 4 371 1 373 1 289 1 152 1 245 1 291 1 153 1 56 1 
161 1 205 1 164 1 85 1 139 1 187 1 64 1 10 2 11 1 238 1 98 1 42 1 100 1 167 1 125 1 351 1 168 3 102 2 70 1 244 1 23 1 174 1 265 1 26 1 291 1 222 1 355 1 157 1 179 1 
98 1 100 1 167 1 168 2 150 1 206 1 205 1 23 1 174 1 265 1 305 1 187 1 291 2 10 2 11 1 355 1 157 1 179 1 
98 1 100 1 167 1 168 2 102 2 70 1 206 1 234 1 23 1 174 1 265 1 139 1 187 1 222 1 10 2 355 1 157 1 179 1 
205 1 206 1 139 1 187 1 305 1 10 2 11 1 98 1 42 1 167 1 100 2 168 4 102 2 70 1 23 1 174 2 265 1 291 2 222 1 355 1 179 2 157 2 
30 1 98 1 100 1 167 1 168 2 150 1 205 1 23 1 174 1 265 1 305 1 187 1 291 2 10 2 11 1 355 1 157 1 179 1 
30 1 98 1 100 1 167 1 168 2 102 2 70 1 234 1 23 1 174 1 265 1 139 1 187 1 222 1 10 2 355 1 157 1 179 1 
30 1 205 1 139 1 187 1 305 1 10 2 11 1 98 1 42 1 167 1 100 2 168 4 102 2 70 1 23 1 174 2 265 1 291 2 222 1 355 1 179 2 157 2 
205 1 139 1 187 1 305 1 10 2 11 1 98 1 42 1 167 1 100 2 168 4 102 2 70 1 23 1 174 2 265 1 291 2 222 1 355 1 179 2 157 2 
271 1 316 1 255 1 275 1 115 1 187 1 10 2 259 1 214 1 215 1 93 1 238 1 98 1 69 1 167 1 168 2 149 1 351 1 102 1 170 1 23 1 152 1 265 1 221 1 291 1 176 1 355 1 56 1 
271 1 115 1 187 1 10 2 37 1 259 1 214 1 190 1 215 1 93 1 238 1 145 1 98 1 69 1 167 1 168 2 149 1 351 1 102 1 170 1 23 1 152 1 265 1 221 1 291 1 176 1 355 1 56 1 
205 1 139 1 187 1 305 1 10 2 11 1 98 1 42 1 167 1 100 2 168 4 102 2 70 1 244 1 23 1 174 2 265 1 291 2 222 1 355 1 179 2 157 2 
271 1 316 1 205 1 255 1 275 1 115 1 139 1 305 1 187 1 10 2 11 1 259 1 215 1 93 1 238 1 98 1 42 1 100 2 167 1 102 2 168 4 149 1 351 1 70 1 170 1 23 1 174 2 265 1 221 1 291 2 176 1 222 1 376 1 355 1 380 1 157 2 179 2 
161 1 205 1 85 1 139 1 305 1 187 1 64 1 10 2 11 1 238 1 98 1 42 1 167 1 100 1 125 1 102 1 351 1 168 3 70 1 244 1 23 1 219 1 174 1 265 1 26 1 291 2 355 1 157 1 179 1 
357 1 134 1 205 1 139 1 187 2 305 1 10 4 209 1 11 1 123 1 19 1 42 1 167 2 102 5 168 9 43 1 70 1 23 2 332 1 25 1 198 2 291 4 222 1 53 1 108 1 336 1 355 2 379 1 157 2 
357 1 134 1 205 1 139 1 187 2 305 1 10 4 209 1 11 1 123 1 19 1 42 1 167 2 102 5 168 9 43 1 70 1 23 2 332 1 25 1 198 2 291 4 222 1 53 1 108 1 336 1 355 2 379 1 157 2 
357 1 134 4 361 1 341 1 205 7 139 6 187 1 305 5 10 2 11 6 17 1 16 1 123 1 19 2 42 6 167 1 263 1 102 22 168 46 43 2 70 7 127 1 312 1 23 1 332 2 25 1 220 1 198 4 291 24 222 6 247 2 53 1 108 1 177 1 336 1 249 1 355 1 268 1 313 1 379 1 157 11 
357 1 134 1 205 1 139 1 187 2 305 1 10 4 209 1 11 1 123 1 19 1 42 1 167 2 102 5 168 9 43 1 70 1 23 2 333 1 332 1 198 2 291 4 222 1 53 1 108 1 336 1 355 2 379 1 157 2 
357 2 134 2 205 2 139 1 187 2 10 4 11 2 17 1 16 1 123 1 19 2 42 2 167 2 102 9 168 20 70 1 43 3 127 1 23 2 25 1 220 1 291 11 198 2 222 1 248 1 53 1 108 2 336 1 355 2 249 1 379 1 313 1 157 1 
324 1 99 1 120 1 241 1 250 1 223 1 233 1 46 1 5 1 330 1 
32 1 331 1 
99 1 12 1 120 1 241 1 378 1 223 1 34 1 46 1 330 1 
99 1 319 1 241 1 232 1 103 2 233 1 2 1 104 1 46 1 5 1 324 1 325 1 353 1 120 1 261 1 223 1 88 1 330 1 
99 1 319 1 241 1 232 1 103 2 233 1 2 1 104 1 46 1 5 1 324 1 325 1 353 1 120 1 261 1 223 1 88 1 330 1 
99 1 319 1 241 1 232 1 103 2 233 1 2 1 104 1 46 1 5 1 324 1 325 1 353 1 120 1 261 1 223 1 88 1 330 1 
121 1 338 1 158 1 
121 1 338 1 158 1 
41 1 369 1 
41 1 369 1 121 1 
140 1 360 1 
201 1 360 1 161 2 232 1 32 1 2 1 36 1 116 1 140 1 325 1 120 1 88 1 364 1 214 1 330 1 238 2 99 1 125 2 351 2 241 1 103 1 331 1 44 1 46 1 26 2 267 1 223 1 
338 1 158 1 
41 1 369 1 121 1 
300 1 84 1 256 2 187 1 10 2 259 2 66 1 215 2 238 2 93 2 192 1 95 1 98 1 148 1 167 1 125 2 149 1 351 2 168 2 102 1 218 1 170 1 244 1 23 1 152 1 265 1 221 1 176 1 291 1 355 1 56 1 
67 2 193 1 83 1 350 1 170 1 47 1 245 1 197 1 176 1 259 2 337 1 90 1 380 1 78 1 200 1 215 2 281 1 93 2 309 1 
67 2 193 1 83 1 350 1 170 1 47 1 245 1 323 1 197 1 176 1 259 1 90 1 78 1 200 1 215 1 281 1 93 1 
69 1 149 1 170 1 289 1 344 1 221 1 176 1 259 1 199 1 354 1 78 1 215 1 93 1 309 1 
67 2 193 1 83 1 350 1 170 1 47 1 245 1 197 1 176 1 259 1 337 1 90 1 78 1 200 1 215 1 281 1 93 1 309 1 
321 1 
211 1 
319 2 232 1 183 1 2 1 185 1 35 1 188 1 260 1 212 1 166 1 40 1 172 1 72 1 295 1 109 1 225 1 180 1 
0 2 252 1 58 1 2 5 205 2 304 2 115 3 306 2 307 2 259 3 11 2 260 4 212 4 166 4 215 3 69 1 70 2 264 2 71 2 170 3 172 8 72 5 221 3 176 4 76 6 269 1 180 12 270 2 319 8 230 1 231 1 183 2 232 5 185 6 139 2 142 6 328 2 91 2 279 2 280 1 40 9 93 3 368 3 42 2 194 1 149 10 105 1 290 2 292 1 295 4 109 3 55 2 156 2 380 1 
134 1 0 2 298 1 319 5 232 1 183 2 2 1 205 2 185 3 139 2 11 2 260 2 328 1 142 5 212 2 166 2 40 8 16 1 19 1 42 2 194 1 286 1 70 2 127 1 172 5 72 1 220 1 198 1 295 2 109 1 249 1 156 1 76 5 313 1 180 6 
0 1 232 1 370 1 2 1 172 1 312 1 260 1 295 1 177 1 212 1 166 1 40 1 367 1 
319 1 183 1 105 1 172 1 260 1 295 1 212 1 166 1 269 1 40 1 
0 2 42 2 319 5 70 2 205 2 185 5 172 5 139 2 11 2 328 1 142 5 76 5 279 1 180 10 40 5 
319 1 109 1 183 1 232 1 2 1 72 1 
358 1 204 1 317 1 231 1 232 3 2 3 326 1 259 4 260 2 212 1 166 2 280 2 215 4 40 2 93 4 69 2 194 2 149 1 170 1 172 2 195 1 289 1 72 4 221 1 176 1 295 2 109 2 354 1 156 2 
227 1 132 1 316 1 271 1 161 2 255 1 275 1 85 2 115 1 187 1 10 2 259 1 214 1 215 1 93 1 238 3 98 1 167 1 69 1 125 2 168 1 102 1 351 3 149 1 170 1 152 1 23 1 265 1 26 2 221 1 176 1 355 1 
194 1 319 4 183 2 185 2 172 2 260 1 295 1 142 2 212 1 268 1 76 2 156 1 166 1 180 4 40 1 
324 1 360 1 155 1 120 1 223 1 
120 1 287 1 223 1 
120 1 287 1 223 1 
120 1 287 1 223 1 
120 1 223 1 113 1 
120 1 223 1 113 1 
120 1 223 1 113 1 
120 1 223 1 
241 1 330 1 
134 1 361 1 205 1 341 1 187 1 10 2 123 1 19 1 167 1 263 1 168 10 102 5 70 1 127 1 23 1 312 1 198 1 291 5 222 2 177 1 355 1 268 1 157 2 
134 1 361 1 341 1 205 2 187 2 305 1 10 4 11 1 123 1 19 1 42 1 167 2 263 1 168 13 102 6 70 1 127 1 312 1 23 2 332 1 198 2 291 7 222 2 177 1 355 2 268 1 356 1 157 3 
134 1 361 1 341 1 205 3 139 2 305 1 187 3 10 6 11 2 16 1 123 1 19 1 42 2 167 3 263 1 168 21 102 11 70 3 127 1 312 1 23 3 220 1 198 1 291 10 222 3 248 1 177 1 355 3 249 1 268 1 356 1 313 1 157 4 
134 1 205 2 139 1 187 2 10 4 11 2 16 1 123 1 19 1 42 2 167 2 168 11 102 4 70 1 127 1 23 2 220 1 198 1 291 7 222 1 355 2 249 1 356 1 313 1 157 1 
134 1 361 1 205 1 341 1 187 1 10 2 123 1 19 1 167 1 263 1 168 10 102 5 70 1 127 1 23 1 312 1 198 1 291 5 222 2 177 1 355 1 268 1 157 2 
134 1 205 2 139 2 305 1 187 1 10 2 11 2 16 1 123 1 19 1 42 2 167 1 168 12 102 6 70 2 127 1 23 1 220 1 198 1 291 6 222 1 355 1 249 1 313 1 157 2 
134 1 205 2 139 1 187 3 10 6 11 2 16 1 123 1 19 1 42 2 167 3 168 12 102 5 70 1 127 1 23 3 220 1 198 1 291 7 222 1 248 1 355 3 249 1 356 1 313 1 157 1 
134 1 205 2 139 1 305 2 187 3 10 6 209 1 11 2 16 1 123 1 19 1 42 2 167 3 168 12 102 5 70 1 127 1 23 3 220 1 198 1 291 7 222 2 248 1 355 3 249 1 313 1 157 4 
168 4 102 2 361 2 341 1 312 2 305 2 291 2 222 2 177 2 157 4 
134 1 205 2 139 1 187 3 10 6 209 1 11 2 16 1 123 1 19 1 42 2 167 3 168 12 102 5 70 1 127 1 23 3 220 1 198 1 291 7 222 1 248 1 355 3 249 1 313 1 157 1 
167 2 361 1 341 1 23 2 312 1 305 1 187 2 222 1 10 4 248 1 177 1 355 2 157 2 
211 1 
42 1 167 1 102 2 168 4 70 1 205 1 23 1 139 1 187 1 305 1 291 2 222 1 10 2 11 1 355 1 356 1 157 2 
19 1 134 1 42 1 102 4 168 7 70 1 205 1 332 1 139 1 305 1 198 2 291 3 222 1 11 1 157 2 
134 2 361 1 341 1 205 3 207 1 139 2 305 4 187 2 10 4 11 2 42 2 167 2 263 1 168 21 102 11 70 3 312 2 23 2 332 1 334 1 291 10 198 2 222 5 247 1 248 2 177 2 355 2 268 1 157 9 
198 1 168 1 102 1 
134 1 291 1 168 1 
42 1 167 1 102 3 168 6 70 1 205 1 23 1 139 1 187 1 305 1 291 3 10 2 222 2 11 1 355 1 356 1 279 1 157 3 
134 1 205 2 139 2 305 1 187 1 10 2 11 2 16 1 123 1 19 1 42 2 167 1 168 12 102 6 70 2 127 1 23 1 220 1 198 1 291 6 222 1 355 1 249 1 313 1 157 2 
263 1 168 6 102 3 70 1 205 1 312 1 305 1 291 3 222 1 177 1 157 2 
167 1 102 1 168 1 361 1 341 1 312 1 23 1 334 1 305 1 187 1 222 1 10 2 248 1 177 1 355 1 157 2 
123 1 167 1 263 1 168 10 102 5 70 2 370 1 205 2 23 1 312 1 187 1 305 2 291 5 10 2 222 2 177 1 355 1 157 4 
123 1 167 1 168 2 205 1 23 1 187 1 305 1 291 2 10 2 11 1 355 1 157 1 
123 1 42 1 167 1 102 2 168 4 70 1 205 1 23 1 139 1 187 1 305 1 291 2 222 1 10 2 11 1 355 1 157 2 
123 1 167 1 102 1 168 2 23 1 312 1 187 1 291 1 10 2 222 1 177 1 355 1 157 1 
181 1 134 3 361 1 341 1 205 4 139 1 187 4 305 4 10 8 209 1 11 2 144 1 123 1 19 1 42 2 167 4 310 1 263 1 102 11 168 24 70 3 370 1 312 2 23 4 198 3 291 13 222 3 248 1 177 2 355 4 356 1 157 7 
62 1 160 1 125 1 351 1 165 1 214 1 238 1 
96 1 159 1 160 1 147 1 125 1 351 1 62 1 165 1 214 1 143 1 80 1 238 1 
69 1 259 1 211 1 215 1 93 1 
271 1 57 1 316 1 69 1 161 1 125 1 149 1 351 2 170 1 115 1 26 1 221 1 176 1 259 1 214 1 215 1 238 2 93 1 
271 1 57 1 316 1 161 2 125 2 149 3 351 2 71 1 170 1 4 1 115 2 26 1 221 2 176 1 154 1 259 1 178 1 214 1 270 1 280 1 215 1 238 2 93 1 
57 1 271 1 161 2 4 1 115 2 259 2 214 1 190 1 215 2 280 1 93 2 238 2 125 2 351 2 149 3 71 1 170 1 26 1 221 2 128 1 176 1 154 1 178 1 270 1 
319 1 232 2 183 1 2 2 137 1 61 1 115 1 307 1 259 3 215 3 280 1 93 3 368 1 69 1 149 4 264 1 71 1 170 1 72 1 221 1 128 1 176 1 270 1 
368 1 69 1 319 1 149 4 183 1 71 1 232 2 264 1 2 2 170 1 72 1 115 1 221 1 128 1 307 1 176 1 259 3 91 1 270 1 280 1 215 3 93 3 
176 1 259 1 224 1 170 1 215 1 93 1 
124 1 69 2 252 1 149 3 218 1 371 1 170 2 372 1 373 1 245 1 256 1 115 1 221 2 153 1 176 3 259 6 277 1 224 1 215 6 93 5 
57 1 161 1 341 1 205 1 255 1 115 1 10 4 259 1 214 3 215 1 167 2 125 1 263 1 351 2 168 8 70 1 170 1 23 2 312 1 174 1 265 2 26 1 221 1 176 1 222 2 177 1 355 2 268 1 179 1 316 1 271 1 361 1 275 1 187 2 93 1 238 2 192 1 98 2 100 1 149 1 102 4 151 1 244 1 291 4 376 1 380 1 157 2 
319 1 183 1 231 1 232 3 2 3 304 1 306 1 307 1 259 1 260 2 212 2 166 2 91 1 40 1 215 1 93 1 368 1 69 1 149 2 264 1 172 1 105 1 72 2 295 2 109 1 267 1 55 1 269 1 
252 1 149 2 230 1 264 1 170 1 115 1 221 1 176 2 259 2 224 1 380 1 215 2 93 2 
69 1 149 1 170 1 289 1 221 1 128 1 176 1 119 1 259 4 354 1 380 1 215 4 93 4 
1 1 149 1 170 1 373 1 115 1 221 1 176 2 259 2 277 1 89 1 110 1 280 1 215 2 93 2 
67 1 197 1 193 1 176 1 69 1 259 1 170 1 215 1 281 1 93 1 
221 1 176 1 259 2 149 1 300 1 218 1 170 1 380 1 215 2 245 1 93 2 
124 1 69 1 149 3 218 1 371 1 170 2 289 1 221 2 176 2 119 1 259 5 354 1 380 1 280 1 215 5 93 4 
124 1 69 1 149 3 218 1 170 2 289 1 221 2 176 2 119 1 259 5 354 1 29 1 380 1 280 1 215 5 93 4 
271 1 57 1 69 1 161 1 125 1 149 1 351 2 170 1 115 1 26 1 221 1 176 1 259 1 214 1 190 1 215 1 238 2 93 1 
252 1 149 1 170 1 372 1 373 1 115 1 221 1 176 2 259 1 277 1 280 1 215 1 93 1 
217 1 95 1 148 1 125 1 351 1 84 1 130 1 226 1 238 1 
217 1 294 1 339 1 
217 1 257 1 214 1 130 1 226 1 
217 1 253 1 319 1 183 1 232 2 2 2 4 1 49 1 257 2 307 1 154 1 294 1 363 1 178 1 267 1 214 1 130 2 226 2 339 1 
211 1 
8 1 117 1 347 1 107 1 169 1 322 1 349 1 
50 1 54 1 349 1 
251 1 73 1 8 3 117 1 118 2 347 1 107 1 169 1 45 1 322 1 39 1 349 3 
27 1 8 2 117 1 347 1 107 1 266 1 169 1 322 1 349 2 
67 1 73 1 284 1 182 1 8 1 117 1 169 1 322 1 200 1 349 1 281 1 
73 1 8 1 117 1 107 1 169 1 322 1 349 1 
73 1 8 1 347 1 107 2 169 1 322 1 349 1 
272 1 169 2 322 2 73 1 8 2 117 1 375 1 87 1 107 1 349 2 
283 1 284 1 169 1 273 1 322 1 73 1 8 3 117 2 347 1 107 1 266 2 278 1 349 3 
67 2 193 1 169 1 322 1 47 1 73 1 8 2 117 1 347 1 107 1 266 1 314 1 349 2 200 1 281 1 
284 1 169 2 322 2 73 1 8 4 27 1 117 2 347 1 107 1 266 2 278 1 329 1 349 4 
73 1 8 1 117 1 347 1 107 1 169 1 322 1 349 1 
284 1 169 1 45 1 322 1 8 4 63 1 117 3 118 1 347 2 107 2 266 2 278 1 39 1 349 4 
239 1 169 1 342 1 322 1 73 1 8 2 117 1 52 1 347 1 107 1 266 1 349 2 
229 1 169 1 45 2 322 1 73 1 8 3 117 1 118 2 347 1 107 1 39 1 349 3 
133 1 117 2 111 2 237 1 
276 1 73 1 8 1 169 1 322 1 349 1 
73 1 8 2 117 1 347 1 107 1 266 1 273 1 169 1 322 1 349 2 
346 1 
73 1 8 1 117 1 347 1 107 1 169 1 322 1 349 1 
169 1 273 1 322 1 73 1 8 3 117 1 118 1 347 1 266 1 107 1 349 3 
284 1 63 1 117 1 278 1 
117 1 107 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (136,142) (136,142) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (93,295,344) (93,295,344) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (93,295,344) (93,295,344) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (93,295,344) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (93,295,344) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
145 1 68 1 310 3 126 2 234 1 79 1 237 2 349 1 81 2 86 1 202 1 63 1 112 3 
178 2 68 1 70 1 115 1 310 9 118 1 117 1 246 1 288 2 215 2 145 6 278 1 225 1 193 1 259 1 126 2 234 2 79 3 237 2 349 4 81 5 86 1 62 1 202 1 63 1 64 2 66 1 112 9 
178 2 68 1 70 1 115 1 310 9 118 1 117 1 246 1 288 2 215 2 145 6 278 1 225 1 193 1 259 1 126 2 234 2 79 3 237 2 349 4 81 5 86 1 62 1 202 1 63 1 64 2 66 1 112 9 
178 2 68 1 70 1 115 1 310 10 118 1 117 1 246 1 288 2 215 2 145 7 278 1 225 1 193 1 259 1 126 2 234 2 79 4 237 2 349 5 81 6 86 1 62 1 202 1 63 1 64 2 66 1 112 10 
178 2 68 1 70 1 115 1 310 7 118 1 117 1 246 1 288 2 215 2 145 4 278 1 225 1 259 1 126 2 234 2 79 2 237 2 349 3 81 4 86 1 62 1 202 1 63 1 64 1 66 1 112 7 
145 3 178 1 68 1 310 4 225 1 118 1 193 1 126 1 288 1 79 1 237 1 349 2 81 3 86 1 215 1 63 1 64 2 112 4 
278 1 178 1 68 1 310 2 373 1 126 1 234 1 81 1 237 1 36 1 378 1 86 1 215 1 63 1 112 2 66 1 
178 1 68 1 115 1 310 9 118 1 246 1 288 1 138 1 215 1 145 7 225 1 193 1 126 2 234 1 79 3 349 4 237 2 81 5 238 1 86 1 202 1 63 1 64 2 112 9 
178 1 68 1 115 1 310 9 118 1 246 1 288 1 138 1 215 1 145 7 225 1 193 1 126 2 234 1 79 3 349 4 237 2 81 5 238 1 86 1 202 1 63 1 64 2 112 9 
256 1 32 1 0 1 1 1 347 1 195 1 262 1 327 1 82 1 84 1 60 1 293 1 307 1 368 1 
107 1 
350 1 84 2 1 1 98 1 124 1 293 2 304 1 107 1 
309 1 132 2 1 2 270 2 361 1 304 1 107 1 57 1 350 1 362 1 59 1 84 5 197 2 5 1 98 2 293 5 343 1 51 1 298 1 
350 1 169 1 107 1 
191 2 346 1 107 1 
262 2 82 2 0 2 347 2 307 2 368 1 312 1 195 2 
357 2 0 2 179 1 22 1 312 1 287 1 339 1 341 1 95 1 185 2 296 1 187 1 275 1 368 1 297 1 8 1 166 1 76 1 277 1 190 2 11 1 347 2 302 1 230 1 105 1 195 2 106 1 262 3 108 2 82 3 127 2 153 1 307 2 130 1 286 1 383 1 111 1 
256 1 262 1 327 1 82 1 32 1 0 1 347 1 307 1 368 1 195 1 
355 1 256 1 55 1 280 1 228 1 107 1 262 1 350 1 82 1 84 1 6 1 307 1 293 1 204 1 
355 1 256 1 0 1 347 1 280 1 195 1 107 1 262 1 350 1 82 1 84 2 6 1 293 2 307 1 204 1 
84 1 1 1 98 1 103 1 293 1 
350 1 84 2 1 1 98 1 293 2 154 1 304 1 107 1 
84 1 98 1 293 1 
0 1 347 1 195 1 312 2 73 1 262 2 82 2 307 2 65 1 
209 1 229 1 267 1 
277 1 123 1 302 1 312 1 106 1 262 1 108 1 82 1 127 1 185 1 275 1 297 1 8 1 166 1 383 1 76 1 
277 1 43 1 347 1 302 1 125 1 195 1 106 1 262 2 108 1 82 2 127 1 185 1 307 1 275 1 166 1 8 1 297 1 267 1 383 1 76 1 
169 1 312 1 
43 1 0 1 347 4 228 1 125 2 195 4 312 1 173 1 262 5 82 5 305 1 307 5 366 1 65 1 
256 1 262 2 82 2 32 1 347 2 307 2 89 1 195 2 
262 3 82 3 0 1 347 3 307 3 125 1 312 1 195 3 
256 1 262 1 82 1 32 1 347 1 307 1 195 1 
256 1 73 1 262 1 82 1 0 1 347 1 307 1 195 1 65 1 
355 1 357 1 43 1 0 2 179 1 22 1 4 1 312 1 287 1 341 1 185 1 252 1 6 1 293 1 296 1 187 1 275 1 368 1 166 1 8 1 297 1 76 1 256 1 277 1 190 2 11 1 347 3 280 1 302 1 125 1 195 3 106 1 262 4 108 1 82 4 127 1 84 1 153 1 307 3 130 1 204 1 383 1 111 1 65 1 
262 2 82 2 305 1 347 1 228 1 307 2 125 1 312 1 195 1 
256 1 355 1 43 1 0 1 347 3 280 1 125 2 4 1 195 3 107 1 262 3 82 3 84 1 6 1 293 1 307 3 7 1 204 1 65 1 
262 2 82 2 0 1 209 1 347 2 307 2 125 1 267 1 195 2 65 1 
277 1 302 1 312 1 106 1 262 1 108 1 82 1 127 1 185 1 275 1 297 1 8 1 166 1 383 1 76 1 
277 1 2 1 302 1 135 1 312 1 262 1 108 1 82 1 127 1 185 1 275 1 297 1 8 1 166 1 76 1 
91 1 357 4 190 2 333 1 133 1 209 2 11 1 229 2 230 2 20 1 210 1 22 1 338 1 232 1 287 1 376 1 341 2 153 1 198 1 39 1 50 1 187 1 296 1 267 2 
256 1 355 1 262 1 82 1 347 1 307 1 89 1 195 1 
250 1 199 1 30 1 
250 2 321 1 164 1 41 1 199 2 353 1 
250 1 199 1 
250 1 199 1 
164 1 41 1 
164 1 41 1 
164 1 41 1 
250 1 199 1 266 1 
250 1 199 1 266 1 
250 1 199 1 266 1 
250 1 69 1 199 1 
250 1 69 1 199 1 
250 1 69 1 199 1 
156 1 312 1 74 1 250 1 293 1 140 1 367 1 218 1 30 1 146 1 257 1 300 1 347 2 104 1 195 2 262 2 35 1 82 2 84 1 285 1 307 2 199 1 109 1 110 1 
206 1 156 2 0 1 249 1 213 1 74 2 250 2 293 2 367 1 140 2 368 1 218 2 256 1 32 1 122 1 347 1 170 1 231 1 195 1 107 1 262 1 327 1 82 1 38 1 84 2 60 1 17 1 307 1 199 2 264 1 109 2 
178 2 378 1 261 1 29 2 288 1 
178 1 215 1 288 1 
178 1 378 1 215 1 
26 1 178 3 378 1 261 1 29 1 288 2 
178 2 378 1 329 1 261 1 29 1 288 1 
91 1 132 1 133 1 1 4 270 1 210 1 360 1 271 1 361 3 313 1 362 2 363 1 27 1 98 1 293 5 217 1 191 3 257 1 346 1 304 1 107 2 57 1 37 2 350 1 196 1 197 1 84 5 198 1 285 1 380 2 110 1 88 1 268 2 
91 3 132 2 133 3 1 7 270 2 210 3 360 3 271 2 361 8 137 1 290 1 212 1 362 6 363 1 27 3 98 6 293 9 273 1 51 1 191 9 257 4 346 3 103 5 304 1 325 1 107 5 57 1 37 6 350 1 196 2 84 9 197 2 198 3 380 6 42 1 354 5 
132 1 91 1 133 1 0 1 1 2 270 1 210 1 360 1 271 1 361 3 362 2 27 1 293 3 51 1 368 1 217 1 256 1 191 4 32 1 257 1 10 1 346 2 347 1 195 1 107 3 262 1 327 1 37 2 82 1 350 1 196 1 60 1 197 1 84 3 198 1 380 2 307 1 88 1 268 1 
91 2 132 1 133 2 0 1 1 3 137 1 290 1 293 4 51 1 256 1 191 7 257 2 346 3 10 1 347 1 195 1 107 4 262 1 196 1 350 1 197 1 60 1 198 2 307 1 268 2 270 1 210 2 271 1 360 2 361 5 212 1 362 4 27 2 368 1 217 1 32 1 37 4 327 1 82 1 84 4 380 4 88 1 
358 1 
169 1 275 1 203 1 
224 1 275 1 
277 1 275 1 76 1 
61 1 275 1 
275 1 76 1 
80 1 277 1 120 1 275 3 203 2 76 1 
357 7 67 1 45 1 336 1 116 1 230 4 210 1 232 2 341 3 175 1 163 1 364 1 198 1 39 3 308 2 101 1 143 1 53 1 
67 1 18 3 357 31 91 3 208 1 133 3 45 1 336 5 116 1 210 4 22 1 287 1 341 15 291 4 364 2 27 3 186 1 296 1 101 2 143 1 53 2 221 1 190 2 319 1 230 16 171 1 232 5 236 1 175 2 153 1 198 4 39 10 201 1 308 3 
67 1 357 9 190 4 336 1 116 1 230 5 210 1 22 2 232 3 287 2 236 1 341 4 175 1 364 1 153 2 198 1 39 4 331 1 381 1 296 2 308 2 101 1 143 1 53 1 
357 7 67 1 45 1 336 1 116 1 230 4 210 1 232 2 341 3 175 1 364 1 198 1 39 3 308 2 101 1 143 1 53 1 
357 7 67 1 45 1 336 1 116 1 230 4 210 1 232 2 341 3 175 1 364 1 198 1 39 3 308 2 101 1 143 1 53 1 
134 1 310 1 136 1 126 1 234 2 108 1 237 1 127 1 152 1 185 1 85 2 297 1 142 1 112 1 
108 1 237 1 127 1 185 1 310 1 85 1 344 1 294 1 63 1 93 1 126 1 234 1 112 1 
108 1 237 1 127 1 185 1 330 1 310 1 85 1 344 1 63 1 93 1 126 1 234 1 112 1 
145 1 134 1 310 2 245 1 126 1 234 1 108 1 237 1 127 1 185 1 85 1 344 1 294 1 112 2 
108 1 145 1 127 1 185 1 310 1 245 1 85 1 295 1 294 1 234 1 112 1 
243 1 
132 1 335 1 180 2 3 1 46 1 185 2 98 6 6 1 293 5 297 2 8 1 256 1 191 2 346 2 55 1 14 1 304 3 107 2 57 1 108 2 262 1 350 1 197 1 307 1 265 1 204 1 355 1 205 1 356 1 71 1 270 1 271 1 361 2 160 2 23 4 362 2 272 1 165 2 216 2 275 1 166 1 167 1 76 1 318 2 280 1 228 1 323 2 375 1 328 1 127 2 82 1 379 1 84 5 87 1 332 2 
256 1 355 1 205 1 356 1 71 1 55 1 280 1 124 1 180 1 228 1 304 1 375 1 23 2 262 1 82 1 84 3 98 2 6 1 293 3 307 1 204 1 167 1 
355 1 205 1 356 1 71 1 160 1 23 3 98 1 6 1 293 3 167 1 256 1 55 1 280 1 228 1 124 1 375 1 304 1 107 1 262 1 82 1 350 1 84 3 307 1 204 1 
355 1 205 1 356 1 71 1 180 1 160 1 23 3 6 1 98 2 293 3 216 1 167 1 256 1 55 1 280 1 124 1 228 1 304 1 375 1 107 1 262 1 82 1 350 1 84 3 307 1 204 1 
355 1 205 1 356 1 71 1 0 1 180 1 23 2 98 2 6 1 293 3 216 1 368 1 167 1 256 2 32 1 55 1 347 1 280 1 228 1 124 1 375 1 304 1 195 1 107 1 262 2 327 1 350 1 82 2 60 1 84 3 307 2 131 1 204 1 
355 1 205 1 356 1 132 1 71 1 335 1 180 2 270 1 3 1 361 1 160 2 23 4 362 1 272 1 98 4 6 1 293 4 165 2 216 2 167 1 256 1 191 2 318 2 346 2 55 1 280 1 228 1 323 2 304 2 375 1 107 2 57 1 262 1 350 1 82 1 197 1 84 4 307 1 204 1 332 2 
355 1 205 1 356 1 132 1 71 1 180 2 3 1 270 1 361 1 160 2 289 1 23 4 362 1 272 1 98 4 6 1 293 4 165 2 216 2 28 1 167 1 256 1 318 2 346 2 279 1 55 1 280 1 228 1 323 2 304 2 375 1 107 1 262 1 57 1 350 1 82 1 197 1 84 4 307 1 204 1 332 2 
355 1 205 1 356 1 132 1 71 1 180 2 3 1 270 1 361 1 160 2 289 1 23 4 362 1 272 1 98 4 6 1 293 4 165 2 216 2 28 1 167 1 256 1 318 2 346 2 279 1 55 1 280 1 228 1 323 2 304 2 375 1 107 1 262 1 57 1 350 1 82 1 197 1 84 4 307 1 204 1 332 2 
355 1 205 1 356 1 132 1 71 1 44 1 180 2 270 1 337 2 361 1 159 1 160 2 289 1 23 4 362 1 272 1 98 4 6 1 293 4 216 2 255 1 167 1 144 2 256 1 191 2 318 2 55 1 280 1 228 1 323 2 304 2 375 1 107 1 262 1 57 1 350 1 82 1 197 1 84 4 307 1 204 1 
355 1 205 1 132 1 356 1 71 1 180 3 3 1 270 1 361 1 160 3 289 1 23 5 362 1 272 1 6 1 365 1 98 5 293 4 165 2 216 3 28 1 167 1 256 1 318 2 346 2 279 1 55 1 280 1 228 1 323 2 304 2 375 1 107 1 57 1 262 1 350 1 82 1 197 1 84 4 307 1 204 1 332 2 
355 1 205 1 132 1 356 1 71 1 180 3 3 1 270 1 361 1 160 3 289 1 23 5 362 1 272 1 6 1 365 1 98 5 293 4 165 2 216 3 28 1 167 1 256 1 318 2 346 2 279 1 55 1 280 1 228 1 323 2 304 2 375 1 107 1 57 1 262 1 350 1 82 1 197 1 84 4 307 1 204 1 332 2 
355 1 205 1 356 1 132 1 71 1 335 1 180 2 270 1 337 2 361 1 159 1 160 2 23 4 362 1 272 1 98 4 6 1 293 4 216 2 167 1 144 2 256 1 191 2 318 2 55 1 280 1 228 1 323 2 304 2 375 1 107 1 57 1 262 1 350 1 82 1 197 1 84 4 307 1 204 1 
357 2 22 2 182 1 287 2 72 1 247 1 341 1 97 1 185 8 50 1 294 1 188 1 275 3 296 2 187 2 166 2 8 2 297 2 76 2 190 4 11 2 347 1 230 1 283 1 125 1 105 2 195 1 262 1 108 8 82 1 127 7 328 1 153 2 330 1 307 1 200 1 265 1 286 1 111 1 
91 1 357 3 133 1 0 1 209 1 210 1 22 1 287 1 341 2 49 1 27 1 296 1 187 1 190 2 11 1 347 1 229 1 230 1 232 1 195 1 326 1 262 1 82 1 153 1 198 1 39 1 307 1 267 1 65 1 
67 1 357 6 209 1 116 1 210 1 22 1 287 1 312 2 341 3 50 1 296 1 187 1 101 1 53 1 143 1 190 2 11 1 169 1 229 1 230 3 232 2 153 1 198 1 39 2 308 1 267 1 
357 14 18 3 91 2 133 1 336 1 209 4 210 2 22 2 312 1 287 2 341 6 291 3 49 1 27 2 186 1 296 2 187 1 102 1 147 1 190 4 149 1 11 2 320 1 229 11 230 8 232 1 153 2 198 1 39 2 201 1 286 1 267 11 111 1 
43 1 357 2 209 1 22 1 312 1 287 1 211 1 341 1 214 1 49 1 185 1 275 1 187 1 296 1 166 1 8 1 297 1 76 1 317 1 277 1 190 2 11 1 347 1 302 1 123 1 230 1 125 1 195 1 106 1 108 1 262 2 127 1 82 2 153 1 307 1 383 1 286 1 111 1 
43 1 91 2 133 2 336 4 179 2 287 3 341 10 184 1 49 1 185 3 99 2 294 1 296 3 187 3 297 1 8 2 101 1 143 1 53 1 190 6 11 3 347 1 302 2 56 2 195 1 106 2 108 3 262 3 153 3 198 3 307 1 308 1 267 7 111 1 67 1 357 20 209 7 116 1 210 3 22 3 312 2 25 2 27 2 275 2 166 2 76 2 277 2 31 1 229 7 78 1 230 10 125 1 232 4 127 3 82 3 128 2 39 8 286 1 383 2 
357 2 190 2 91 1 336 1 209 1 11 1 229 1 230 2 210 1 22 1 287 1 376 1 153 1 39 1 50 1 187 1 296 1 267 1 
357 2 190 2 333 1 133 1 209 1 11 1 229 1 22 1 232 1 287 1 341 2 153 1 198 1 39 1 50 1 187 1 296 1 267 1 
357 4 190 2 91 1 133 1 336 1 209 2 11 1 229 2 230 2 210 1 22 1 232 1 287 1 341 2 153 1 198 1 39 2 27 1 50 1 187 1 296 1 267 2 
357 2 190 2 91 1 336 1 209 1 11 1 229 1 230 2 210 1 22 1 287 1 376 1 153 1 39 1 200 1 187 1 296 1 267 1 
357 2 190 2 333 1 133 1 209 1 11 1 229 1 22 1 232 1 287 1 341 2 153 1 198 1 39 1 200 1 187 1 296 1 267 1 
357 4 190 2 91 1 133 1 336 1 209 2 11 1 229 2 230 2 210 1 22 1 232 1 287 1 341 2 153 1 198 1 39 2 27 1 200 1 187 1 296 1 267 2 
190 2 91 1 357 4 133 1 336 1 209 2 11 1 229 2 230 2 210 1 22 1 232 1 287 1 341 2 153 1 198 1 39 2 27 1 187 1 296 1 267 2 
357 2 179 1 22 1 312 1 287 1 341 1 185 1 275 1 187 1 296 1 166 1 8 1 297 1 76 1 277 1 190 2 11 1 302 1 230 1 106 1 108 1 262 1 127 1 82 1 153 1 286 1 383 1 111 1 
357 2 2 1 135 1 22 1 312 1 287 1 341 1 315 1 185 1 275 1 187 1 296 1 166 1 8 1 297 1 76 1 277 1 190 2 11 1 302 1 230 1 108 1 262 1 127 1 82 1 153 1 286 1 111 1 
357 4 190 2 91 1 133 1 336 1 209 2 11 1 229 2 230 2 210 1 22 1 232 1 287 1 341 2 49 1 153 1 198 1 39 2 27 1 187 1 296 1 267 2 
357 4 91 1 133 1 336 1 209 2 179 1 210 1 22 1 287 1 341 2 185 1 27 1 275 1 187 1 296 1 166 1 8 1 76 1 277 1 190 2 11 1 229 2 302 1 230 2 56 1 232 1 106 1 108 1 262 1 127 1 82 1 153 1 198 1 330 1 39 2 267 2 383 1 
91 1 357 3 133 1 0 1 336 1 209 1 210 1 22 1 287 1 341 1 49 1 27 1 296 1 187 1 190 2 11 1 347 1 374 1 229 1 230 2 195 1 262 1 82 1 153 1 198 1 39 1 307 1 267 1 65 1 
242 2 357 19 18 1 91 3 133 3 336 3 210 3 22 2 287 2 341 10 291 2 292 2 27 3 186 1 274 1 141 1 296 2 190 4 13 1 192 1 230 9 151 1 232 3 352 1 153 2 198 3 239 1 331 1 39 6 201 1 
242 1 357 26 18 2 91 3 133 2 336 2 210 3 22 3 287 3 94 1 341 12 291 2 292 4 27 3 316 1 296 3 370 1 190 6 13 2 192 2 230 14 151 1 232 2 236 2 377 1 176 1 352 1 153 3 198 2 239 1 39 4 331 1 382 1 201 2 
242 1 91 4 133 4 336 4 287 3 94 1 183 1 341 21 291 4 292 4 186 1 296 3 101 1 53 1 143 1 190 6 13 1 192 2 151 1 352 1 153 3 198 5 201 3 308 1 18 3 357 41 67 1 116 1 210 5 22 3 27 4 316 1 274 1 370 1 230 20 232 4 236 1 377 1 176 1 39 8 331 1 239 1 382 1 
242 1 67 1 357 38 18 3 91 4 133 3 336 3 116 1 210 5 22 4 287 4 183 1 94 1 341 18 291 4 292 4 27 4 316 1 186 1 274 1 296 4 101 1 143 1 53 1 370 1 190 8 13 1 192 2 230 20 151 1 232 4 236 2 377 1 176 1 352 1 153 4 198 4 239 1 331 1 39 7 382 1 201 3 308 1 
242 1 67 1 357 52 18 4 91 7 133 7 336 7 116 1 210 8 22 2 287 2 94 1 341 25 291 4 292 4 27 7 316 1 186 2 296 2 101 1 143 1 53 1 370 1 190 4 149 2 13 1 192 1 230 27 151 1 232 7 236 1 377 1 176 1 352 1 153 2 198 8 239 1 331 1 39 14 382 1 201 2 308 1 
156 1 260 1 231 1 249 1 213 1 250 1 74 1 199 1 264 1 140 1 218 1 
300 1 30 1 
74 1 250 1 156 1 306 1 139 1 199 1 140 1 92 1 218 1 
96 1 266 1 
69 1 12 1 321 1 
206 1 156 1 0 1 249 1 213 1 74 1 250 1 293 1 140 1 367 1 368 1 218 1 256 1 32 1 122 1 347 1 170 1 231 1 195 1 107 1 262 1 327 1 82 1 38 1 84 1 60 1 17 1 307 1 199 1 264 1 109 2 
206 1 156 1 0 1 249 1 213 1 74 1 250 1 293 1 140 1 367 1 368 1 218 1 256 1 32 1 122 1 347 1 170 1 231 1 195 1 107 1 262 1 327 1 82 1 38 1 84 1 60 1 17 1 307 1 199 1 264 1 109 2 
206 1 156 1 0 1 249 1 213 1 74 1 250 1 293 1 140 1 367 1 368 1 218 1 256 1 32 1 122 1 347 1 170 1 231 1 195 1 107 1 262 1 327 1 82 1 38 1 84 1 60 1 17 1 307 1 199 1 264 1 109 2 
96 1 321 1 266 1 
96 1 321 1 266 1 
69 1 12 1 
69 1 12 1 321 1 
146 1 104 1 
206 1 156 1 1 1 312 1 74 1 250 1 293 1 140 1 218 1 30 1 148 1 146 1 122 1 257 1 300 1 347 2 104 1 195 2 262 2 35 1 82 2 84 1 285 1 307 2 199 1 109 1 110 1 
357 2 114 1 22 1 287 1 72 1 341 1 49 1 185 2 75 1 275 1 187 1 296 1 166 1 8 1 76 1 54 1 190 2 11 1 299 1 230 1 283 1 105 2 108 2 262 2 83 1 82 2 127 2 153 1 307 2 286 1 111 1 
113 1 322 1 108 1 127 1 328 1 129 1 185 1 40 1 265 1 275 1 166 1 8 1 297 1 76 1 
178 2 371 1 113 1 181 1 288 1 108 1 26 1 127 1 378 1 48 1 185 1 40 1 215 1 240 1 294 1 241 1 166 1 8 1 
178 2 371 1 113 1 181 1 288 1 108 2 26 1 127 2 378 1 48 1 185 2 330 1 40 1 215 1 240 1 294 1 241 1 166 1 8 1 
178 2 371 1 113 1 33 1 181 1 288 1 108 1 26 1 127 1 378 1 48 1 185 1 215 1 240 1 294 1 8 1 166 1 
77 1 
57 1 350 1 362 1 132 1 197 1 270 1 343 1 361 1 298 1 107 1 
91 1 191 4 133 1 10 1 346 2 210 1 360 1 361 2 107 2 37 2 362 2 198 1 27 1 380 2 
350 1 84 1 98 1 293 1 304 1 107 1 
132 2 270 2 46 1 271 2 361 2 362 2 185 4 98 4 293 3 253 1 51 1 275 1 166 1 8 1 297 2 76 1 226 2 303 1 14 1 304 2 57 1 108 4 127 4 328 1 197 2 84 3 177 1 265 1 87 2 
350 1 362 1 169 1 343 1 361 1 298 1 107 1 
191 1 132 1 346 1 270 1 3 1 304 1 361 1 107 2 57 1 350 1 362 1 84 1 197 1 98 1 293 1 165 1 332 1 
132 2 91 1 133 1 47 1 185 1 98 2 6 1 293 2 99 1 8 1 297 1 100 1 191 6 346 3 304 1 107 3 57 2 108 1 16 1 197 2 198 1 203 1 270 2 157 1 210 1 271 1 360 2 361 4 362 3 314 1 27 1 275 4 166 2 276 1 76 1 277 1 223 1 224 2 80 1 37 3 127 1 84 2 380 3 
132 2 18 1 91 2 133 2 270 2 210 2 271 1 360 1 361 8 94 1 362 5 291 1 98 1 27 2 293 1 316 1 191 6 372 1 10 2 346 3 258 1 304 1 107 5 57 2 37 5 377 1 350 2 176 1 84 1 197 2 198 2 380 5 382 1 201 1 87 1 
132 1 0 1 270 1 210 2 360 1 361 2 362 2 293 1 368 1 101 1 53 1 143 1 256 1 32 1 10 2 279 1 347 1 195 1 262 1 174 1 57 1 327 1 82 1 197 1 84 1 60 1 198 1 307 1 
357 1 0 2 179 1 22 1 312 1 287 1 341 1 185 1 296 1 275 1 187 1 368 1 297 1 8 1 166 1 76 1 277 1 190 2 11 1 347 2 302 1 195 2 106 1 108 1 262 3 127 1 82 3 153 1 307 2 130 1 383 1 111 1 
191 2 132 1 346 1 270 1 271 1 361 1 107 2 57 1 362 1 350 1 197 1 380 1 87 1 
284 1 74 1 146 1 254 1 218 1 
74 1 359 1 218 1 
74 1 359 1 218 1 
74 1 359 1 218 1 
74 1 281 1 218 1 
74 1 281 1 218 1 
74 1 281 1 218 1 
74 1 218 1 
250 1 199 1 
190 2 357 10 336 2 230 5 210 2 22 1 232 3 287 1 174 1 341 5 153 1 198 2 331 1 39 5 296 1 101 2 53 2 143 1 
190 2 91 1 357 2 336 1 230 2 210 1 22 1 287 1 153 1 331 1 39 1 296 1 
190 2 91 1 357 4 133 1 336 1 230 2 210 1 22 1 232 1 287 1 341 2 153 1 198 1 39 2 331 1 27 1 296 1 
357 3 190 6 168 1 336 1 230 1 22 3 232 1 287 3 236 1 341 2 153 3 331 1 39 2 274 1 296 3 101 1 53 1 
67 1 357 34 18 3 91 3 208 1 133 3 336 5 116 1 210 5 22 5 287 5 341 18 291 4 27 3 186 1 274 1 296 5 101 3 143 2 53 3 221 1 190 10 168 1 319 1 230 16 232 7 236 2 235 1 153 5 198 5 331 1 39 12 201 1 308 1 
67 1 190 2 357 8 18 1 116 1 230 4 210 1 22 1 232 2 287 1 377 1 341 4 153 1 291 1 198 1 39 2 331 1 296 1 201 1 308 1 101 1 143 1 53 1 
67 1 357 11 18 1 91 1 336 1 116 1 210 2 22 2 287 2 341 5 291 2 27 1 186 1 296 2 101 1 143 1 53 1 190 4 230 6 232 2 235 1 377 1 153 2 198 1 331 1 39 3 201 1 308 1 
67 1 18 1 357 19 91 2 133 2 336 1 116 1 210 3 22 3 287 3 94 1 341 10 291 1 27 2 316 1 296 3 101 1 143 1 53 1 190 6 230 9 232 3 235 1 236 1 377 1 176 1 153 3 198 3 331 1 39 4 382 1 201 1 308 1 
67 1 18 1 357 17 91 2 133 1 336 2 116 1 210 3 22 3 287 3 94 1 341 7 291 1 27 2 316 1 296 3 101 1 143 1 53 1 190 6 230 10 232 3 235 1 236 1 377 1 176 1 153 3 198 2 331 1 39 5 382 1 201 1 308 1 
67 1 190 2 357 8 18 1 116 1 230 4 210 1 22 1 232 2 287 1 377 1 341 4 153 1 291 1 198 1 39 2 331 1 296 1 201 1 308 1 101 1 143 1 53 1 
18 1 357 12 91 2 133 2 336 1 210 2 22 1 287 1 94 1 341 6 291 1 27 2 316 1 296 1 190 2 230 6 232 1 377 1 176 1 153 1 198 2 331 1 39 2 382 1 201 1 
67 1 357 18 18 1 91 2 133 1 336 2 116 1 210 3 22 4 287 4 94 1 341 8 291 1 27 2 316 1 296 4 101 1 143 1 53 1 190 8 230 10 232 3 235 1 236 2 377 1 176 1 153 4 198 2 331 1 39 5 382 1 201 1 308 1 
357 16 18 1 91 3 133 2 336 3 210 3 22 4 287 4 94 1 341 7 291 1 27 3 316 1 274 1 296 4 190 8 230 9 232 3 236 2 377 1 176 1 153 4 198 2 331 1 39 6 382 1 201 1 
357 7 67 1 336 3 116 2 230 3 210 1 232 3 341 4 198 1 39 6 101 3 53 3 143 1 
67 1 357 18 18 1 91 2 133 1 336 1 116 1 210 3 22 4 287 4 94 1 341 8 291 1 27 2 316 1 274 1 296 4 101 1 143 1 53 1 190 8 230 10 232 3 236 2 377 1 176 1 153 4 198 2 331 1 39 4 382 1 201 1 308 1 
357 8 190 4 67 1 336 1 116 1 230 4 210 1 22 2 232 2 287 2 236 1 341 4 153 2 198 1 39 3 296 2 308 1 101 1 143 1 53 1 
67 1 357 6 169 1 116 1 230 3 210 1 232 2 341 3 198 1 39 2 308 1 101 1 53 1 143 1 
190 2 91 1 357 4 133 1 336 1 230 2 210 1 22 1 232 1 287 1 235 1 341 2 153 1 198 1 39 2 27 1 296 1 
91 1 18 1 357 7 341 4 133 1 336 1 291 2 198 1 39 2 27 1 186 1 230 3 210 1 201 1 232 1 
67 1 91 2 18 2 357 23 133 2 336 4 116 1 210 3 22 2 287 2 341 12 291 2 27 2 186 1 296 2 101 2 143 1 53 2 147 1 190 4 149 1 168 1 230 11 232 5 236 2 153 2 198 3 39 9 308 1 
357 1 341 1 291 1 
357 1 18 1 230 1 
190 2 357 6 91 1 133 1 336 1 230 3 210 1 22 1 232 2 287 1 235 1 341 3 153 1 198 1 27 1 39 3 99 1 296 1 
18 1 357 12 91 2 133 2 336 1 210 2 22 1 287 1 94 1 341 6 291 1 27 2 316 1 296 1 190 2 230 6 232 1 377 1 176 1 153 1 198 2 331 1 39 2 382 1 201 1 
357 6 336 1 230 3 210 1 232 1 341 3 198 1 39 2 101 1 143 1 53 1 
357 3 190 2 67 1 336 1 168 1 116 1 230 1 22 1 232 1 287 1 236 1 341 2 153 1 39 2 296 1 101 1 53 1 
262 1 82 1 305 1 307 1 228 1 312 1 324 1 
207 1 228 1 150 1 233 1 172 1 312 1 324 1 262 1 82 1 351 1 305 1 307 1 
90 1 301 1 108 4 127 4 328 1 185 4 330 1 265 1 275 1 166 1 297 1 8 1 76 1 
277 1 31 1 226 1 161 1 15 1 108 2 127 2 185 2 275 1 369 1 8 1 166 2 189 1 76 1 
108 1 178 1 127 1 378 1 48 1 185 1 215 1 166 1 8 1 297 1 
54 1 283 1 108 2 127 2 330 1 185 2 294 1 275 1 8 1 166 1 76 1 
301 1 226 1 283 1 247 1 108 5 328 1 127 4 97 1 185 5 330 1 265 1 275 3 297 1 8 2 166 2 76 2 
220 1 301 1 226 1 283 1 108 5 328 1 127 4 97 1 185 5 330 1 265 1 275 3 297 1 8 2 166 2 76 2 
108 1 328 1 127 1 169 1 185 1 265 1 275 1 166 1 8 1 297 1 76 1 
277 1 347 1 302 1 125 1 312 1 195 1 106 1 262 2 108 1 82 2 127 1 185 1 307 1 275 1 166 1 297 1 8 1 76 1 
355 1 312 1 185 1 275 3 8 1 166 1 76 2 256 1 277 2 347 2 280 1 226 1 302 1 125 1 195 1 106 1 108 1 262 2 127 1 82 2 263 1 61 1 307 2 
355 1 90 1 135 1 312 1 185 2 275 3 8 1 166 1 76 2 256 1 277 2 347 2 280 1 226 1 302 1 125 1 195 1 108 2 262 2 127 2 82 2 263 1 61 1 307 2 
90 1 334 1 21 1 185 3 98 1 6 1 293 2 275 4 8 1 166 1 297 1 76 1 277 1 224 1 226 1 107 1 108 3 127 3 350 1 84 2 263 1 61 1 203 1 
90 1 277 1 223 1 224 1 226 1 107 1 108 3 350 1 127 3 84 2 61 1 263 1 185 3 6 1 98 1 293 2 275 4 203 1 297 1 166 1 8 1 76 1 
108 1 127 1 185 1 166 1 8 1 182 1 
277 1 283 1 194 1 105 1 182 1 247 1 161 1 108 7 80 1 127 6 97 1 330 1 185 7 294 1 188 1 275 3 297 2 369 1 8 2 166 3 76 2 
357 6 67 1 209 1 116 1 179 1 210 1 22 2 312 2 287 2 341 3 49 1 185 1 275 1 187 2 296 2 166 1 8 1 101 1 143 1 53 1 76 1 277 1 190 4 11 2 347 1 229 1 302 1 230 3 56 1 125 1 232 2 195 1 106 1 262 2 108 1 83 1 82 2 127 1 128 1 153 2 198 1 330 1 39 2 307 1 308 1 267 1 383 1 
132 2 1 1 270 2 361 1 47 1 362 1 185 1 98 2 6 1 293 3 343 1 275 2 298 1 297 1 100 1 223 1 224 1 304 1 107 1 108 1 57 2 16 1 350 1 127 1 197 2 84 3 177 1 203 1 
277 1 157 1 182 1 108 2 80 1 127 2 330 1 185 2 275 2 203 1 8 1 166 2 76 1 
277 1 347 1 302 1 135 1 125 1 312 1 195 1 262 2 108 1 82 2 127 1 185 1 307 1 275 1 166 1 297 1 8 1 76 1 
277 1 226 1 194 1 161 1 108 1 80 1 127 1 185 1 275 1 369 1 8 1 166 2 76 1 
340 1 155 1 34 1 227 1 312 1 
256 1 355 1 155 2 280 1 1 1 34 2 227 1 119 1 282 1 4 1 312 1 107 1 340 2 350 1 251 1 84 2 6 1 293 2 204 1 
262 1 155 1 82 1 299 1 114 1 34 1 227 1 307 1 75 1 
251 1 119 1 227 1 
81 1 237 1 68 1 310 1 86 1 63 1 126 1 112 1 
145 2 278 1 68 2 310 4 348 1 126 1 24 1 79 1 237 1 349 1 81 3 86 2 345 1 112 4 
145 1 68 1 310 2 158 1 126 1 81 1 237 1 138 1 86 1 63 1 112 2 9 1 
278 2 68 1 19 1 310 3 126 1 24 1 81 1 237 1 86 1 63 1 112 3 345 2 
81 2 222 2 269 1 244 1 
237 1 310 1 63 1 219 1 126 1 112 1 
145 1 81 1 237 1 68 1 310 2 86 1 246 1 63 1 126 1 112 2 
58 1 
81 1 237 1 68 1 310 1 86 1 63 1 126 1 112 1 
81 1 68 1 169 1 86 1 
81 1 237 1 68 1 310 1 86 1 126 1 112 1 
162 1 234 1 112 1 
278 2 68 1 310 3 126 1 248 1 24 1 81 1 237 1 86 1 63 1 112 3 345 1 
145 1 81 1 237 1 68 1 310 2 86 1 64 1 126 1 112 2 
178 1 81 1 349 1 237 1 310 1 118 1 215 1 63 1 126 1 288 1 112 1 
81 1 237 1 68 1 310 1 63 1 126 1 112 1 
237 1 68 2 310 1 86 1 63 1 126 1 112 1 
68 1 310 2 126 2 81 1 237 2 342 1 121 1 63 1 52 1 112 2 
145 2 68 1 115 1 310 3 246 1 126 1 79 1 237 1 349 1 81 2 86 1 63 1 112 3 
145 1 178 2 68 1 310 2 311 1 126 1 288 1 81 1 237 1 26 1 378 1 86 1 215 1 63 1 112 2 
145 2 68 1 310 4 193 1 126 2 79 1 237 2 349 1 81 2 86 1 63 1 64 1 112 4 
145 1 278 1 68 1 310 3 246 1 126 1 237 1 81 1 86 1 63 1 112 3 
79 1 81 1 349 1 348 1 
81 1 68 1 

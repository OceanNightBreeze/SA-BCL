#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 286 (33,92,237) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 331 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 61 198 154 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 61 198 154 204 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (42,124,212,283) (42,124,212,283) 277 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 3127 | = null
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
334 1 283 7 124 2 242 1 212 9 344 1 228 1 276 4 140 1 171 1 143 1 183 1 109 1 279 1 341 1 42 2 129 1 187 1 23 3 149 2 133 4 150 9 
334 1 283 7 124 2 242 1 212 9 344 1 228 1 276 4 140 1 171 1 143 1 183 1 109 1 279 1 341 1 42 2 129 1 187 1 23 3 149 2 150 9 133 4 
334 1 124 2 125 1 228 1 276 4 337 1 183 1 341 2 109 1 129 2 187 1 23 3 239 1 133 4 188 1 283 6 242 1 212 9 344 2 140 1 171 2 222 1 42 2 311 1 150 9 149 2 
334 1 124 2 125 1 228 1 276 4 337 1 183 1 341 2 109 1 129 2 187 1 23 3 239 1 133 4 188 1 283 6 242 1 212 9 344 2 140 1 171 2 222 1 42 2 311 1 150 9 149 2 
334 1 124 2 125 1 228 1 276 4 337 1 183 1 341 2 109 1 129 2 187 1 23 3 239 1 133 4 188 1 283 6 242 1 212 9 344 2 140 1 171 2 222 1 42 2 311 1 150 9 149 2 
334 1 188 1 283 4 124 2 242 1 212 7 125 1 344 2 276 3 337 1 140 1 171 2 222 1 183 1 109 1 341 2 42 2 23 2 187 1 129 2 239 1 149 1 133 3 150 7 311 1 
334 1 283 3 124 1 212 4 344 1 228 1 276 2 140 1 171 1 183 1 42 1 23 1 129 1 150 4 149 2 133 2 
0 1 124 1 302 1 212 2 344 1 276 1 171 1 222 1 183 1 306 1 67 1 341 1 42 1 239 1 148 1 150 2 
283 1 124 2 302 1 212 3 276 2 183 1 341 1 42 2 187 1 23 1 148 1 150 3 133 1 
236 1 336 1 233 1 
248 1 145 2 233 1 
184 2 303 2 291 1 80 2 87 2 359 2 339 2 152 1 
226 1 123 2 227 2 291 1 293 1 101 1 295 1 74 1 359 3 339 3 231 1 261 2 158 2 182 1 78 1 54 1 184 2 22 1 80 2 299 1 112 1 282 1 301 1 81 1 190 1 303 2 192 1 87 2 246 2 64 1 89 1 377 1 147 1 252 1 270 1 152 1 380 1 
287 1 184 1 303 1 291 1 251 1 321 1 80 1 87 1 359 1 339 1 
97 1 336 1 5 1 73 1 259 1 61 1 359 1 339 1 233 1 287 1 141 1 20 1 80 1 313 1 
97 1 336 1 303 1 87 1 73 1 259 1 359 1 339 1 233 1 141 2 287 1 184 1 20 2 80 1 313 1 
221 1 141 1 20 1 47 1 193 1 
221 1 141 2 336 1 274 1 20 2 47 1 292 1 233 1 
141 1 20 1 47 1 
291 1 303 1 87 1 359 1 339 1 63 1 221 1 287 1 141 1 20 1 184 1 251 1 321 1 80 1 
233 1 
221 1 141 2 336 1 20 2 47 1 292 1 130 1 233 1 
46 1 96 1 290 1 336 1 292 1 316 2 47 2 34 1 170 1 102 1 233 1 221 2 141 5 51 1 20 5 281 1 271 2 44 2 153 1 
236 1 152 1 
342 1 303 1 87 1 359 2 339 2 232 1 184 1 80 2 152 2 
135 1 196 1 218 1 
226 1 227 1 74 1 359 1 339 1 88 1 261 1 231 1 158 1 182 1 78 1 22 1 299 1 270 1 152 1 301 1 
135 1 226 1 227 1 303 1 87 1 74 1 359 2 339 2 231 1 261 1 158 1 182 1 91 1 78 1 22 1 299 1 80 1 43 1 270 1 301 1 
91 1 184 1 303 3 80 3 87 3 359 3 339 3 152 1 
287 1 303 1 321 1 80 1 87 1 359 1 339 1 
287 1 342 1 184 1 303 1 80 1 87 1 359 1 339 1 232 1 
226 1 97 1 123 1 227 1 291 1 293 1 73 1 259 1 295 1 74 1 359 4 339 4 231 1 261 1 158 1 182 1 78 1 54 1 184 2 20 1 22 1 299 1 80 3 282 1 301 1 81 1 166 1 342 1 190 1 303 3 192 1 87 3 246 2 64 1 287 1 141 1 91 1 147 1 43 1 270 1 152 1 380 1 95 1 313 1 
91 1 303 1 80 2 87 1 61 1 198 1 359 2 339 2 152 1 
166 1 97 1 342 1 303 3 87 3 73 1 259 1 359 3 339 3 233 1 12 1 141 1 287 1 91 2 184 1 20 1 80 3 43 1 313 1 
135 1 342 1 303 2 87 2 359 2 218 1 339 2 91 1 184 1 80 2 
226 1 227 1 74 1 359 1 339 1 261 1 231 1 158 1 182 1 78 1 22 1 299 1 270 1 152 1 301 1 
226 1 227 1 214 1 74 1 359 1 339 1 261 1 231 1 158 1 182 1 53 1 299 1 270 1 152 1 301 1 
2 1 123 4 4 1 101 2 295 1 278 1 262 1 106 1 235 1 54 1 165 1 282 2 81 1 135 2 190 1 368 1 192 1 245 1 246 2 218 2 194 1 196 2 147 1 70 1 
287 1 97 1 303 1 41 1 80 1 87 1 359 1 339 1 
342 1 303 4 87 4 61 1 357 1 359 5 339 5 91 2 184 1 307 1 80 5 43 1 198 1 152 1 
287 1 303 2 41 1 321 1 80 2 87 2 359 2 339 2 
237 1 352 1 
237 1 352 1 
33 1 286 1 
33 1 286 1 
33 1 286 1 
83 1 237 1 352 1 
83 1 237 1 352 1 
237 1 33 1 352 1 286 1 
92 1 237 1 352 1 
83 1 237 1 352 1 
379 1 237 1 352 1 
379 1 237 1 352 1 
379 1 237 1 352 1 
31 1 32 2 72 2 99 1 327 2 118 1 10 1 76 1 347 2 233 1 141 2 20 2 68 1 237 2 308 1 352 2 353 2 58 1 71 3 
100 1 359 2 230 1 339 2 108 1 20 1 237 1 111 1 80 2 243 1 115 1 303 2 32 1 327 1 87 2 347 1 35 1 141 1 92 1 308 1 352 1 353 1 152 1 71 1 
344 1 129 1 171 1 
0 1 344 1 171 1 
0 1 343 1 163 1 146 1 129 2 171 3 
0 1 343 1 146 1 129 1 199 1 171 2 
0 1 343 2 146 1 129 1 171 2 
336 1 203 2 317 1 316 1 47 1 292 1 230 1 233 2 106 1 108 1 51 3 20 5 6 1 111 1 24 2 165 1 113 1 136 1 59 2 368 1 34 1 170 2 248 1 221 4 38 1 141 5 145 3 44 1 271 1 175 1 253 1 70 1 
336 1 291 1 47 1 356 1 359 1 339 1 233 1 161 1 20 2 184 1 321 1 80 1 137 1 303 1 87 1 193 1 63 1 221 2 287 1 141 2 251 1 
290 1 336 1 203 1 317 1 316 1 233 3 106 1 51 3 20 3 6 1 111 1 24 2 165 1 368 1 59 2 170 2 248 2 221 2 141 3 38 1 145 4 44 1 271 1 175 1 253 1 70 1 
290 1 336 1 203 2 316 1 317 1 179 1 233 4 106 2 51 5 20 4 6 1 111 2 24 4 165 2 59 4 368 2 117 1 170 4 329 1 248 3 221 3 141 4 38 2 145 7 44 1 271 1 175 1 253 1 70 2 
236 1 186 1 270 1 
294 1 270 1 
181 1 
270 1 231 1 
226 1 186 2 197 1 270 3 231 1 366 1 
226 1 270 1 231 1 
280 1 270 1 
325 1 2 2 123 7 116 2 371 1 101 4 217 1 194 3 37 1 340 1 21 1 7 1 363 1 164 1 282 3 165 1 70 1 
325 1 2 2 123 7 116 2 371 1 101 4 217 1 194 3 37 1 340 1 21 1 7 1 363 1 164 1 282 3 165 1 70 1 
325 1 2 2 123 7 116 2 371 1 101 4 217 1 194 3 37 1 340 1 66 1 21 1 7 1 363 1 164 1 282 3 165 1 70 1 
2 5 123 31 101 16 295 1 106 3 340 1 54 1 21 2 185 1 7 2 208 1 363 1 164 1 282 15 165 4 300 1 325 1 82 1 190 1 368 3 116 3 371 2 192 1 244 3 246 2 217 2 373 1 194 10 36 1 37 5 38 3 223 4 225 1 70 4 
2 3 123 9 257 1 101 5 295 2 340 1 54 2 21 1 185 1 7 1 164 1 165 1 282 4 325 1 190 2 116 2 192 2 371 1 246 4 217 1 194 4 37 1 351 1 70 1 
0 1 227 1 124 1 314 1 156 1 276 1 256 1 74 1 261 1 158 1 183 1 163 1 341 1 129 1 301 1 283 1 302 1 266 1 212 2 344 1 85 1 285 1 171 2 42 1 350 1 309 1 310 1 148 1 69 1 150 2 
0 1 227 1 124 1 314 1 254 1 156 1 256 1 74 1 261 1 158 1 163 1 341 1 129 1 323 1 301 1 283 1 212 2 344 1 85 1 285 1 216 1 62 1 171 2 42 1 350 1 310 1 69 1 150 2 
158 1 227 1 285 1 216 1 62 1 261 1 
289 1 124 1 227 1 314 2 254 1 212 1 156 2 372 1 285 2 74 1 231 1 261 1 157 1 158 1 160 1 182 1 19 1 341 2 42 1 270 1 150 1 301 1 8 1 
0 1 227 1 124 1 314 1 156 1 256 1 74 1 261 1 158 1 183 1 163 1 341 1 129 1 301 1 212 1 344 1 85 1 285 1 216 1 171 2 42 1 350 1 309 1 310 1 69 1 150 1 
49 1 
97 1 355 2 336 1 5 1 292 2 316 1 47 5 73 1 259 1 127 1 359 1 17 3 103 3 339 1 105 1 233 1 207 1 51 1 20 4 263 1 80 1 28 1 60 2 169 1 139 2 34 1 170 1 61 1 119 1 9 2 220 1 375 1 248 2 141 4 287 1 332 3 349 5 40 1 250 1 44 1 271 1 313 1 
97 1 355 2 336 1 5 1 292 2 316 1 47 5 73 1 259 1 127 1 359 1 17 3 103 3 339 1 105 1 233 1 207 1 51 1 20 4 263 1 80 1 28 1 60 2 169 1 139 2 34 1 170 1 61 1 119 1 9 2 220 1 375 1 248 2 141 4 287 1 332 3 349 5 40 1 250 1 44 1 271 1 313 1 
97 1 336 1 5 1 47 4 292 2 316 1 73 1 259 1 127 1 103 2 17 2 359 1 339 1 233 1 234 2 51 1 20 4 263 1 80 1 324 1 28 1 60 2 139 2 34 1 170 1 119 1 61 1 267 1 375 1 141 4 287 1 332 2 268 2 349 4 40 1 145 2 44 1 271 1 313 1 
97 1 336 1 5 1 292 3 47 6 259 1 103 2 339 1 261 2 158 2 160 1 51 2 6 1 263 1 301 1 60 2 169 1 345 1 170 2 119 1 61 1 9 2 172 1 348 1 349 4 271 1 270 1 313 1 227 2 355 2 316 1 73 1 74 1 127 1 17 2 359 1 231 1 233 2 182 2 20 5 80 1 324 1 28 1 139 2 372 1 34 1 247 1 375 1 248 2 141 5 287 1 332 2 40 1 145 2 44 1 
97 1 5 1 292 1 47 2 259 1 73 1 119 1 127 1 61 1 359 1 339 1 375 1 287 1 141 3 332 1 40 1 349 2 20 3 263 1 80 1 130 1 313 1 
97 1 336 1 5 1 47 1 292 1 73 1 259 1 127 1 359 1 103 1 339 1 233 1 20 3 263 1 80 1 130 1 61 1 119 1 375 1 141 3 287 1 349 3 40 1 313 1 
97 1 336 1 5 1 292 1 47 2 73 1 259 1 127 1 359 1 17 1 103 1 339 1 233 1 20 3 263 1 80 1 130 1 61 1 119 1 375 1 141 3 287 1 332 1 349 3 40 1 313 1 
97 1 336 5 5 1 292 3 47 7 259 1 103 4 339 1 105 1 207 1 51 1 263 1 60 2 169 1 119 1 61 1 170 1 9 2 220 1 349 6 271 1 313 1 355 2 316 1 73 1 127 1 17 4 359 1 233 5 20 5 80 1 130 1 28 1 139 2 34 1 375 1 248 2 195 1 287 1 141 5 332 4 40 1 250 1 44 1 
97 1 355 2 336 1 5 1 47 4 292 2 316 1 73 1 259 1 127 1 103 2 17 2 359 1 339 1 233 2 51 1 20 4 263 1 80 1 324 1 28 1 60 2 169 1 139 2 34 1 170 1 119 1 61 1 9 2 375 1 248 2 141 4 287 1 332 2 349 4 40 1 145 2 44 1 271 1 313 1 
97 1 355 2 336 1 5 1 47 4 292 2 316 1 73 1 259 1 127 1 103 2 17 2 359 1 339 1 105 1 233 1 207 1 51 1 20 4 263 1 80 1 28 1 60 2 169 1 139 2 34 1 170 1 61 1 119 1 9 2 375 1 220 1 248 2 141 4 287 1 332 2 349 4 40 1 44 1 271 1 313 1 
97 1 355 2 336 1 5 1 47 4 292 2 316 1 73 1 259 1 127 1 103 2 17 2 359 1 339 1 105 1 233 1 207 1 51 1 20 4 263 1 80 1 28 1 60 2 169 1 139 2 34 1 170 1 61 1 119 1 9 2 375 1 220 1 248 2 141 4 287 1 332 2 349 4 40 1 44 1 271 1 313 1 
97 1 336 1 5 1 47 4 292 2 316 1 73 1 259 1 127 1 103 2 17 2 359 1 339 1 233 1 234 2 207 1 51 1 20 4 263 1 80 1 322 1 28 1 60 2 139 2 34 1 170 1 267 1 61 1 119 1 375 1 141 4 287 1 65 1 332 2 268 2 349 4 40 1 145 2 44 1 271 1 313 1 
2 2 123 6 101 3 295 1 340 1 236 1 54 1 164 1 165 1 282 3 135 1 81 1 325 1 190 1 116 1 192 1 371 1 245 1 246 2 217 1 218 1 194 2 196 1 147 1 70 1 152 2 
2 1 123 14 178 1 101 8 229 1 295 2 106 1 54 2 112 1 282 6 56 1 165 2 81 2 135 11 190 2 368 2 370 1 192 2 244 3 246 4 373 1 218 4 194 2 37 1 38 2 142 1 223 3 196 11 147 1 225 1 70 1 152 1 380 1 
226 1 227 1 123 2 101 1 74 1 295 1 359 2 339 2 231 1 261 1 158 1 182 1 78 1 162 1 54 1 22 1 299 1 80 1 112 1 282 1 301 1 81 1 190 1 303 1 192 1 87 1 246 2 218 1 88 1 142 1 91 1 144 1 147 1 43 1 270 1 176 1 152 1 380 1 
2 4 293 2 258 2 101 10 295 3 339 3 261 3 158 3 106 2 340 1 54 3 110 1 297 1 299 2 164 1 112 1 165 3 301 2 303 1 116 1 216 1 217 1 218 7 270 2 70 3 226 2 272 2 227 3 123 20 74 2 359 3 231 2 320 1 182 1 78 2 22 2 80 1 282 10 325 1 81 3 135 7 190 3 368 2 371 1 192 3 87 1 246 6 194 8 37 4 38 2 142 1 90 2 91 1 378 2 196 7 147 3 43 1 152 2 380 1 
122 1 227 8 123 2 126 1 101 1 74 2 295 2 359 1 339 1 261 8 231 2 158 7 206 1 182 2 160 1 54 2 79 1 80 1 112 1 282 1 26 1 301 2 81 2 210 1 190 2 266 1 303 1 192 2 245 1 87 1 372 1 246 4 216 1 374 1 89 2 91 1 147 2 270 3 380 1 
2 1 123 3 101 1 295 1 359 1 339 1 106 1 54 1 184 1 361 1 80 1 165 1 282 2 135 1 81 1 342 1 190 1 368 1 303 1 192 1 87 1 246 2 218 1 194 1 38 1 142 1 196 1 147 1 70 1 
135 1 81 1 123 2 190 1 368 1 4 1 192 1 245 1 101 2 295 1 246 2 218 1 194 1 37 1 54 1 196 1 147 1 165 1 
2 1 135 1 81 1 123 2 190 1 192 1 245 1 295 1 246 2 218 1 194 1 106 1 235 1 54 1 196 1 147 1 282 2 70 1 
2 1 123 4 101 2 295 1 106 1 54 1 165 1 282 2 81 1 135 2 368 1 190 1 192 1 245 1 246 2 218 2 194 2 37 1 38 1 196 2 147 1 70 1 
135 1 81 1 123 2 190 1 368 1 4 1 192 1 101 2 295 1 246 2 218 1 194 1 37 1 206 1 54 1 196 1 147 1 165 1 
2 1 135 1 81 1 123 2 190 1 192 1 295 1 246 2 218 1 194 1 206 1 106 1 235 1 54 1 196 1 147 1 282 2 70 1 
2 1 123 4 101 2 295 1 206 1 106 1 54 1 165 1 282 2 81 1 135 2 368 1 190 1 192 1 246 2 218 2 194 2 37 1 38 1 196 2 147 1 70 1 
2 1 135 2 81 1 123 4 190 1 368 1 192 1 101 2 295 1 246 2 218 2 194 2 106 1 37 1 38 1 54 1 196 2 147 1 282 2 165 1 70 1 
226 1 123 2 227 1 293 1 101 1 74 1 295 1 359 1 339 1 231 1 261 1 158 1 182 1 78 1 54 1 22 1 299 1 112 1 282 1 301 1 81 1 190 1 192 1 246 2 147 1 270 1 152 1 380 1 
226 1 123 2 227 1 101 1 74 1 295 1 75 1 359 1 339 1 231 1 261 1 158 1 182 1 53 1 54 1 299 1 112 1 282 1 301 1 81 1 190 1 192 1 214 1 246 2 147 1 270 1 152 1 380 1 
2 1 123 4 101 2 295 1 106 1 54 1 165 1 282 2 81 1 135 2 368 1 190 1 192 1 246 2 218 2 194 2 37 1 38 1 142 1 196 2 147 1 70 1 
2 1 226 1 123 4 227 1 293 1 101 2 74 1 295 1 359 1 339 1 261 1 231 1 106 1 158 1 78 1 54 1 22 1 299 1 282 2 165 1 301 1 135 2 81 1 368 1 190 1 266 1 192 1 246 2 218 2 194 2 37 1 38 1 90 1 196 2 147 1 270 1 70 1 
123 3 101 2 295 1 128 1 359 1 339 1 106 1 54 1 184 1 80 1 282 1 165 1 81 1 135 1 342 1 190 1 368 1 303 1 192 1 87 1 246 2 218 1 194 1 37 1 38 1 142 1 196 1 147 1 70 1 
2 4 1 1 335 1 257 1 101 20 295 3 104 1 106 4 107 1 340 1 54 3 164 1 165 5 57 1 213 1 116 1 217 1 219 4 223 4 225 1 70 5 15 1 123 41 358 1 185 1 282 21 27 1 325 1 241 1 326 1 368 4 190 3 369 1 244 3 192 3 371 1 246 6 373 3 194 8 37 4 38 4 333 2 94 1 
1 1 2 4 15 1 123 38 335 1 257 1 101 20 295 4 358 1 104 1 106 3 107 1 340 1 54 4 185 2 164 1 282 18 165 5 27 1 57 1 325 1 326 1 241 1 190 4 368 4 369 1 213 1 116 1 371 1 192 4 244 3 246 8 217 1 219 4 373 3 194 7 37 3 38 4 223 4 333 2 225 1 70 4 94 1 
1 1 2 7 15 1 123 52 257 1 101 27 229 2 295 2 358 1 104 1 106 7 107 1 340 1 54 2 185 1 164 1 282 25 165 8 27 1 57 1 325 1 241 1 190 2 368 7 369 1 213 1 116 1 371 1 192 2 244 4 246 4 217 1 219 4 373 2 194 14 37 7 38 7 223 4 333 1 225 2 70 8 94 1 
2 3 15 1 123 19 335 1 257 1 101 9 295 2 358 1 106 3 107 1 54 2 282 10 165 3 265 1 190 2 368 3 369 2 213 1 192 2 244 1 246 4 219 2 373 1 194 6 37 3 38 3 223 2 333 1 225 1 70 3 
1 1 2 2 15 1 123 26 257 1 101 14 295 3 358 1 104 1 106 2 107 2 54 3 185 2 282 12 165 3 57 1 27 1 241 1 190 3 368 3 369 1 213 1 192 3 244 2 246 6 219 4 373 2 194 4 37 2 38 3 223 2 333 2 70 2 94 1 
31 1 237 1 32 1 327 1 209 1 352 1 353 1 76 1 347 1 58 1 
92 1 115 1 
3 1 237 1 32 1 327 1 362 1 352 1 353 1 347 1 131 1 
31 1 32 1 72 1 99 1 327 1 118 1 76 1 347 1 233 1 141 1 20 1 68 1 237 1 308 1 352 1 353 1 58 1 71 2 
31 1 32 1 72 1 99 1 327 1 118 1 76 1 347 1 233 1 141 1 20 1 68 1 237 1 308 1 352 1 353 1 58 1 71 2 
31 1 32 1 72 1 99 1 327 1 118 1 76 1 347 1 233 1 141 1 20 1 68 1 237 1 308 1 352 1 353 1 58 1 71 2 
83 1 269 1 114 1 
83 1 269 1 114 1 
159 1 379 1 
159 1 379 1 114 1 
243 1 100 1 
221 1 141 1 331 1 20 1 237 1 32 1 327 1 352 1 353 1 347 1 
83 1 269 1 
159 1 379 1 114 1 
227 2 123 2 101 1 74 1 295 1 359 2 339 2 231 1 261 2 77 1 158 2 54 1 79 1 80 2 112 1 282 1 301 1 81 1 190 1 86 1 192 1 246 2 374 1 13 1 142 1 249 1 89 2 330 1 147 1 270 1 380 1 
0 1 227 2 211 1 266 1 156 1 344 1 338 1 74 1 171 2 216 1 261 2 158 2 163 1 55 1 350 1 129 1 310 1 69 1 301 1 
0 1 227 1 156 1 344 1 338 1 74 1 171 2 216 1 261 1 296 1 158 1 163 1 350 1 129 1 310 1 69 1 301 1 
227 1 156 1 372 1 74 1 231 1 261 1 158 1 182 1 160 1 50 1 19 1 55 1 270 1 301 1 
0 1 227 1 211 1 156 1 344 1 338 1 74 1 171 2 216 1 261 1 158 1 163 1 55 1 350 1 129 1 310 1 69 1 301 1 
45 1 
226 1 123 1 227 1 291 1 293 1 295 1 74 1 359 3 339 3 261 1 231 1 158 1 182 1 78 1 54 1 184 2 22 1 80 2 299 1 282 1 301 1 81 1 190 1 303 2 192 1 87 2 246 2 64 1 147 1 270 1 152 1 380 1 
59 2 336 2 116 1 316 1 34 1 170 2 233 4 172 1 248 2 51 1 6 1 145 4 24 2 271 1 44 1 
46 1 51 1 236 1 336 1 170 1 233 1 153 1 
355 1 336 1 169 1 47 1 292 1 316 1 34 1 170 1 9 1 233 2 248 1 141 1 51 1 20 1 145 1 271 1 44 1 
47 5 292 3 294 3 261 1 205 2 158 1 106 2 51 7 52 1 6 1 165 2 264 1 301 1 59 6 170 7 172 1 174 2 270 6 271 3 70 2 313 2 226 1 272 2 227 1 316 3 74 2 231 1 233 6 182 1 20 5 186 2 24 6 365 1 366 1 29 2 134 2 368 2 34 3 248 6 141 5 38 2 39 2 145 12 44 3 151 2 
16 1 315 1 336 2 47 1 292 1 316 2 104 1 233 5 106 2 51 8 6 1 20 1 24 5 165 2 57 1 27 1 241 1 59 5 368 2 244 1 34 2 170 5 373 1 172 1 248 3 141 1 39 2 38 2 376 1 223 1 145 6 44 2 271 2 70 2 94 1 
202 1 291 1 316 1 359 1 339 1 51 2 20 1 184 1 321 1 80 1 165 2 325 1 303 1 371 1 87 1 34 1 170 2 217 1 220 1 63 1 287 1 39 2 141 1 376 1 251 1 44 1 271 1 70 1 
46 1 336 1 316 1 34 1 170 1 233 1 51 1 271 1 44 1 153 1 
272 1 368 2 59 5 170 5 233 5 248 5 106 2 39 2 38 2 376 1 51 5 145 10 24 5 165 2 70 2 
141 1 336 1 20 1 47 1 292 1 233 1 
227 4 290 1 316 2 47 4 292 2 74 1 48 1 231 1 261 4 180 1 158 4 182 2 160 1 51 2 6 2 20 3 25 2 301 1 30 1 345 1 34 1 372 1 170 2 247 1 172 2 141 3 270 1 44 2 271 2 
284 1 327 1 347 1 
284 1 327 1 347 1 
273 1 243 1 327 1 76 1 347 1 
284 1 327 1 347 1 
327 1 347 1 11 1 
327 1 347 1 11 1 
327 1 347 1 11 1 
327 1 347 1 
237 1 352 1 
2 2 123 8 257 1 101 4 295 1 340 1 54 1 164 1 165 1 282 4 57 1 325 1 190 1 116 1 244 1 192 1 371 1 246 2 217 1 373 1 194 2 223 1 70 1 
2 2 123 11 257 1 101 6 295 2 340 1 54 2 164 1 282 5 165 2 57 1 325 1 190 2 368 1 116 1 371 1 192 2 244 1 246 4 217 1 373 1 194 3 37 1 38 1 223 2 225 1 120 1 70 1 
2 3 123 19 257 1 101 9 295 3 104 1 106 2 340 1 54 3 185 1 164 1 282 10 165 3 57 1 27 1 325 1 241 1 190 3 368 2 116 1 371 1 244 1 192 3 246 6 217 1 373 1 194 4 37 1 38 2 223 1 120 1 70 3 94 1 
2 3 123 17 257 1 101 10 295 3 104 1 106 1 340 1 54 3 185 1 164 1 282 7 165 3 57 1 27 1 325 1 241 1 190 3 368 2 116 1 371 1 244 1 192 3 246 6 217 1 373 1 194 5 37 2 38 2 223 1 120 1 70 2 94 1 
2 2 123 8 257 1 101 4 295 1 340 1 54 1 164 1 165 1 282 4 57 1 325 1 190 1 116 1 244 1 192 1 371 1 246 2 217 1 373 1 194 2 223 1 70 1 
2 1 123 12 257 1 101 6 295 1 104 1 106 2 54 1 282 6 165 2 57 1 27 1 241 1 190 1 368 2 244 1 192 1 246 2 373 1 194 2 37 1 38 2 223 1 70 2 94 1 
2 3 123 18 257 1 101 10 295 4 104 1 106 1 340 1 54 4 185 2 164 1 282 8 165 3 57 1 27 1 325 1 241 1 190 4 368 2 116 1 371 1 192 4 244 1 246 8 217 1 373 1 194 5 37 2 38 2 223 1 120 1 70 2 94 1 
2 3 123 16 335 1 257 1 101 9 295 4 104 1 106 2 54 4 185 2 282 7 165 3 57 1 27 1 241 1 190 4 368 3 192 4 244 1 246 8 373 1 194 6 37 3 38 3 223 1 70 2 94 1 
2 3 325 1 123 7 371 3 101 3 217 3 194 6 37 3 340 1 164 2 282 4 165 1 70 1 
2 3 123 18 335 1 257 1 101 10 295 4 104 1 106 1 340 1 54 4 185 2 164 1 282 8 165 3 57 1 27 1 325 1 241 1 190 4 368 2 116 1 371 1 192 4 244 1 246 8 217 1 373 1 194 4 37 1 38 2 223 1 70 2 94 1 
325 1 2 2 123 8 190 2 116 1 192 2 371 1 101 4 295 2 246 4 217 1 194 3 37 1 340 1 54 2 185 1 164 1 165 1 282 4 70 1 
2 2 325 1 123 6 116 1 371 1 101 3 217 1 194 2 340 1 236 1 164 1 282 3 165 1 70 1 
2 1 123 4 190 1 368 1 192 1 101 2 295 1 246 2 194 2 106 1 37 1 38 1 54 1 282 2 165 1 120 1 70 1 
2 1 123 7 368 1 244 1 101 3 373 1 194 2 106 1 37 1 38 1 223 2 282 4 225 1 165 1 70 1 
2 5 123 23 178 1 101 11 229 1 295 2 106 2 340 1 54 2 185 2 164 1 165 3 282 12 325 1 368 2 190 2 116 1 371 2 244 2 192 2 246 4 346 1 217 2 194 9 37 4 38 2 223 2 225 1 70 3 
123 1 223 1 282 1 
123 1 244 1 101 1 
272 1 2 2 123 6 190 1 368 1 192 1 101 3 246 2 295 1 194 3 37 1 106 1 38 1 54 1 282 3 165 1 120 1 70 1 
2 1 123 12 257 1 101 6 295 1 104 1 106 2 54 1 282 6 165 2 57 1 27 1 241 1 190 1 368 2 244 1 192 1 246 2 373 1 194 2 37 1 38 2 223 1 70 2 94 1 
325 1 2 1 123 6 371 1 101 3 217 1 194 2 37 1 165 1 282 3 70 1 
2 1 123 3 190 1 371 1 192 1 101 1 346 1 295 1 246 2 217 1 194 2 37 1 340 1 54 1 185 1 164 1 282 2 
2 3 325 1 123 10 190 1 202 1 192 1 257 1 371 2 101 5 246 2 295 1 217 2 194 5 37 2 54 1 282 5 165 2 70 2 
123 2 190 1 368 1 257 1 192 1 101 2 295 1 246 2 194 1 37 1 54 1 165 1 
2 1 123 4 190 1 368 1 257 1 192 1 101 2 295 1 246 2 194 2 106 1 37 1 38 1 54 1 282 2 165 1 70 1 
2 1 123 3 335 1 190 3 257 1 192 3 371 1 101 1 346 1 295 3 246 6 217 1 194 2 37 1 54 3 185 1 282 2 
2 7 123 34 335 1 257 1 101 16 295 5 106 3 340 1 54 5 185 2 208 1 164 1 282 18 165 5 300 1 325 2 190 5 368 3 116 1 371 3 192 5 244 3 346 1 246 10 217 3 373 1 194 12 36 1 37 5 38 3 223 4 225 1 120 1 70 5 
154 1 61 1 198 1 
14 1 154 1 138 1 298 1 61 1 198 1 260 1 204 1 
158 1 160 1 227 1 182 1 236 1 372 1 74 1 270 1 231 1 261 1 301 1 
226 1 227 1 303 1 87 1 74 1 359 2 339 2 231 1 261 1 158 1 182 1 91 1 22 1 299 1 80 1 270 1 152 1 301 1 
226 2 97 1 227 1 259 1 74 1 359 2 339 2 261 1 231 2 158 1 22 1 80 2 299 1 280 1 25 1 301 1 189 1 303 1 87 2 287 1 91 1 270 3 152 1 
226 2 97 1 227 2 259 1 74 1 359 2 339 2 261 2 231 2 158 2 53 1 80 2 299 1 280 1 25 1 132 1 301 1 189 1 303 1 87 2 287 1 91 1 270 3 152 1 
226 1 227 3 189 1 336 1 168 1 47 1 294 1 74 1 231 1 261 3 233 1 158 3 141 2 182 1 20 2 186 1 280 1 25 1 270 4 132 1 201 1 313 1 301 1 
226 1 227 3 189 1 336 1 47 1 294 1 74 1 231 1 261 3 205 1 233 1 158 3 141 2 182 1 20 2 186 1 280 1 25 1 270 4 132 1 313 1 301 1 
158 1 227 1 210 1 74 1 261 1 301 1 
122 1 226 1 210 1 227 7 266 1 155 1 126 1 74 3 216 1 261 7 319 1 231 2 158 6 89 1 182 2 79 1 224 1 270 3 26 1 366 1 301 2 
2 2 226 1 123 6 227 1 293 1 258 1 101 3 74 1 295 2 359 2 339 2 231 1 261 1 158 1 340 1 78 1 54 2 22 1 299 1 80 1 164 1 282 3 165 1 301 1 135 1 325 1 81 2 190 2 266 1 303 1 116 1 371 1 86 1 192 2 87 1 246 4 217 1 218 1 194 2 142 1 90 1 91 1 196 1 147 2 270 1 70 1 152 2 
46 1 227 1 336 1 316 2 47 2 292 1 294 1 261 1 205 1 233 1 158 1 180 1 182 1 51 1 20 3 186 1 29 1 34 2 170 1 221 1 141 3 174 1 44 2 271 2 270 2 153 1 151 1 313 1 
226 1 158 2 227 2 210 1 266 1 186 1 74 2 270 2 365 1 231 1 366 1 261 2 301 1 
227 4 266 1 275 1 372 1 74 1 261 4 231 1 158 4 182 1 160 1 270 1 132 1 301 1 
226 1 227 2 167 1 155 1 74 2 261 2 231 1 305 1 320 1 158 2 224 1 25 1 270 1 301 1 
0 1 158 1 227 1 182 1 344 1 74 1 171 1 69 1 261 1 301 1 
227 2 266 1 74 1 216 1 261 2 231 1 77 1 158 2 79 1 270 1 301 1 
122 1 227 5 266 1 275 1 372 1 74 2 261 5 231 2 158 4 160 1 182 1 79 1 25 1 270 3 26 1 301 2 
121 1 122 1 227 5 266 1 275 1 372 1 74 2 261 5 231 2 158 4 160 1 182 1 79 1 25 1 270 3 301 2 
226 1 227 1 303 1 87 1 74 1 359 2 339 2 231 1 261 1 158 1 182 1 91 1 53 1 299 1 80 1 270 1 152 1 301 1 
226 1 227 1 155 1 74 2 261 1 319 1 231 1 158 1 224 1 25 1 270 1 366 1 301 1 
13 1 18 1 249 1 360 1 330 1 80 1 359 1 339 1 328 1 
360 1 255 1 312 1 
18 1 360 1 98 1 328 1 152 1 
97 1 166 1 336 1 255 1 98 2 259 1 73 1 328 2 233 1 221 1 287 1 141 2 18 2 360 1 20 2 200 1 312 1 152 1 313 1 
283 1 124 1 302 1 222 1 212 3 183 1 109 1 276 1 42 1 148 1 150 3 
276 1 23 1 323 1 133 1 
276 1 148 1 
302 1 236 1 276 1 148 1 
124 1 302 1 212 1 276 1 42 1 148 1 150 1 
314 1 341 1 150 1 
124 1 84 1 302 1 212 3 276 1 177 1 183 1 222 2 42 1 238 1 148 1 150 3 
283 1 124 1 302 1 212 2 276 1 42 1 148 1 149 1 150 2 
124 1 212 1 344 1 276 1 140 1 171 1 183 1 42 1 129 1 150 1 133 1 
124 1 212 1 183 1 276 1 42 1 148 1 150 1 
124 1 302 1 212 1 183 1 42 1 148 2 150 1 
124 2 212 2 276 1 215 1 183 1 42 2 288 1 148 1 93 1 150 2 
283 2 124 1 302 1 242 1 212 3 276 2 183 1 109 1 42 1 23 1 148 1 150 3 133 1 
0 1 283 1 124 1 212 2 183 1 42 1 277 1 171 1 150 1 
283 2 124 2 302 1 212 4 228 1 276 2 183 1 42 2 23 1 148 1 150 4 149 1 133 1 
124 1 302 1 212 1 183 1 276 1 42 1 148 1 150 1 
283 2 124 1 302 2 212 4 276 3 177 1 222 1 238 1 42 1 23 1 323 1 148 2 150 4 133 1 
283 1 124 1 302 1 212 2 276 1 318 1 304 1 183 1 279 1 42 1 148 1 150 2 
124 1 302 1 212 3 276 1 177 2 183 1 222 2 238 1 42 1 148 1 150 3 354 1 
367 2 191 1 276 2 240 1 
124 1 212 1 183 1 42 1 364 1 150 1 
283 1 124 1 302 1 212 2 183 1 109 1 276 1 42 1 148 1 150 2 
173 1 
124 1 302 1 212 1 183 1 276 1 42 1 148 1 150 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (34,68,162,236) (34,68,162,236) (34,68,162,236) 199 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (34,68,162,236) (34,68,162,236) (34,68,162,236) 199 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (34,68,162,236) (34,68,162,236) (34,68,162,236) 199 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (34,68,162,236) (34,68,162,236) (34,68,162,236) 199 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (34,68,162,236) (34,68,162,236) (34,68,162,236) 199 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (34,68,162,236) (34,68,162,236) (34,68,162,236) 199 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (34,68,162,236) (34,68,162,236) (34,68,162,236) 199 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (34,68,162,236) (34,68,162,236) (34,68,162,236) 199 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (34,68,162,236) (34,68,162,236) (34,68,162,236) 199 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (34,68,162,236) (34,68,162,236) (34,68,162,236) 199 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (34,68,162,236) (34,68,162,236) (34,68,162,236) (77,114) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (34,68,162,236) (34,68,162,236) (77,114) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (34,68,162,236) (34,68,162,236) (34,68,162,236) (77,114) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (34,68,162,236) (34,68,162,236) (34,68,162,236) 199 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 145 220 71 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 145 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 145 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 145 220 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 145 220 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 317 227 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
236 1 199 1 34 1 192 1 162 1 
236 1 199 1 34 1 192 1 162 1 
236 1 199 1 34 1 192 1 162 1 
236 1 199 1 34 1 192 1 162 1 
236 1 199 1 34 1 192 1 162 1 
236 1 199 1 34 1 192 1 162 1 
236 1 199 1 34 1 192 1 162 1 
236 1 199 1 34 1 192 1 162 1 
236 1 199 1 34 1 192 1 162 1 
313 1 200 1 125 1 
132 2 225 1 200 1 
131 2 322 1 110 2 242 2 75 2 128 2 194 2 329 1 
261 1 35 1 123 1 75 2 76 1 126 1 128 2 130 2 42 1 174 1 175 1 131 3 85 1 308 1 231 2 182 1 183 1 95 1 186 2 143 1 100 1 239 1 244 1 242 2 146 1 24 1 194 3 105 1 59 2 30 1 322 1 110 2 323 2 113 1 329 1 330 1 163 1 
41 1 131 1 322 1 98 1 110 1 242 1 75 1 13 1 128 1 194 1 
99 1 125 1 22 1 170 1 38 1 194 1 284 1 131 1 200 1 110 1 13 1 115 1 309 1 211 1 
99 2 242 1 125 1 75 1 128 1 38 1 194 1 284 2 131 1 200 1 110 1 13 1 115 1 309 1 211 1 
284 1 99 1 2 1 25 1 160 1 
267 1 164 1 284 2 200 1 99 2 125 1 2 1 160 1 
284 1 99 1 2 1 
98 1 99 1 242 1 75 1 26 1 128 1 194 1 284 1 41 1 131 1 322 1 110 1 13 1 160 1 
200 1 
267 1 284 2 177 1 200 1 99 2 125 1 2 1 160 1 
96 1 262 1 37 1 99 5 240 1 125 1 2 2 78 2 195 2 40 1 267 1 284 5 268 1 155 1 200 1 135 1 306 1 160 2 181 2 
313 1 329 1 
242 1 75 1 296 1 128 1 194 2 131 2 110 2 138 1 329 2 
134 1 86 1 159 1 
95 1 239 1 100 1 24 1 126 1 194 1 130 1 30 1 59 1 174 1 131 1 323 1 161 1 182 1 329 1 163 1 
95 1 121 1 100 1 239 1 242 1 24 1 126 1 128 1 194 2 301 1 130 1 30 1 59 1 174 1 131 2 110 1 323 1 159 1 182 1 163 1 
131 3 110 3 242 3 75 1 128 3 194 3 301 1 329 1 
131 1 98 1 110 1 242 1 13 1 128 1 194 1 
131 1 110 1 242 1 75 1 13 1 128 1 296 1 138 1 194 1 
212 1 261 1 35 1 121 1 75 2 76 1 126 1 296 1 128 3 38 1 301 1 130 1 42 1 174 1 131 4 85 1 308 1 13 1 231 2 182 1 93 1 309 1 183 1 95 1 186 1 100 1 239 1 99 1 244 1 242 3 24 1 194 4 284 1 30 1 59 1 322 1 110 3 323 1 113 1 115 1 329 1 330 1 163 1 211 1 
131 2 110 2 242 1 3 1 170 1 128 1 194 2 301 1 329 1 
212 1 121 1 99 1 242 3 75 1 296 1 128 3 38 1 194 3 301 2 284 1 131 3 200 1 110 3 13 1 115 1 117 1 309 1 211 1 
242 2 75 1 296 1 128 2 194 2 301 1 131 2 110 2 86 1 159 1 
95 1 239 1 100 1 24 1 126 1 194 1 130 1 30 1 59 1 174 1 131 1 323 1 182 1 329 1 163 1 
100 1 24 1 126 1 148 1 194 1 130 1 30 1 59 1 174 1 131 1 323 1 48 1 182 1 329 1 163 1 
165 1 69 1 35 1 261 2 124 1 4 1 42 1 175 2 134 2 136 1 86 2 231 2 183 1 276 1 186 4 144 1 244 1 191 1 319 1 106 1 252 1 113 1 159 2 330 1 
131 1 110 1 242 1 13 1 38 1 128 1 194 1 223 1 
121 1 73 1 242 4 3 1 75 1 170 1 128 4 296 1 194 5 301 2 131 5 198 1 110 5 329 1 
131 2 98 1 110 2 242 2 13 1 128 2 194 2 223 1 
21 1 104 1 
21 1 104 1 
203 1 193 1 
203 1 193 1 
203 1 193 1 
21 1 253 1 104 1 
53 1 21 1 104 1 
154 1 21 2 203 1 255 1 104 2 193 1 
21 1 253 1 104 1 
21 1 253 1 104 1 
21 1 101 1 104 1 
21 1 101 1 104 1 
21 1 101 1 104 1 
1 2 314 1 119 2 120 1 215 1 21 2 99 2 104 2 295 2 172 2 281 2 282 1 173 1 284 2 321 1 154 1 84 1 200 1 90 3 
119 1 72 1 122 1 294 1 295 1 128 2 172 1 131 2 90 1 140 1 53 1 21 1 99 1 242 2 104 1 194 2 281 1 282 1 284 1 249 1 110 2 204 1 157 1 329 1 
63 1 147 1 271 1 
147 1 271 1 79 1 
44 1 63 2 201 1 271 3 79 1 221 1 
44 1 63 1 201 1 289 1 271 2 79 1 
44 1 63 1 201 2 271 2 79 1 
165 1 69 1 70 1 72 1 37 2 124 1 2 1 125 1 294 1 78 1 300 2 39 1 40 1 267 1 132 3 225 1 178 2 47 1 181 1 139 1 140 1 99 5 278 1 190 1 195 1 106 1 284 5 286 1 200 2 155 3 64 2 160 4 
165 3 69 3 72 4 37 6 124 3 2 6 125 1 78 2 300 6 39 2 40 1 267 1 11 1 132 9 225 3 135 1 178 6 47 3 181 2 51 1 99 9 57 5 278 2 25 5 58 1 195 2 283 1 106 3 284 9 286 1 200 5 155 8 290 1 116 1 160 7 
165 1 69 1 72 1 37 2 124 1 75 1 125 1 128 1 78 1 300 2 39 1 41 1 131 1 132 4 225 2 135 1 178 2 13 1 47 1 181 1 139 1 98 1 99 3 242 1 278 1 26 1 190 1 194 1 195 1 106 1 284 3 322 1 110 1 200 3 155 3 64 1 160 2 
165 1 69 1 72 1 37 2 124 1 78 1 300 2 39 1 132 4 225 2 135 1 178 2 47 1 181 1 139 1 99 2 278 1 190 1 195 1 106 1 284 2 200 2 155 3 64 1 116 1 160 1 
313 1 15 1 163 1 
317 1 163 1 
243 1 
100 1 163 1 
174 1 292 1 100 1 15 2 163 3 302 1 
174 1 100 1 163 1 
189 1 163 1 
165 1 274 1 261 3 186 7 234 1 97 1 144 3 55 1 316 2 124 1 264 1 248 1 175 4 251 1 252 2 14 1 158 1 
165 1 274 1 261 3 186 7 234 1 97 1 144 3 55 1 316 2 124 1 264 1 248 1 175 4 251 1 252 2 14 1 158 1 
165 1 274 1 312 1 261 3 186 7 234 1 97 1 144 3 55 1 316 2 124 1 264 1 248 1 251 1 175 4 252 2 14 1 158 1 
165 1 69 1 274 1 186 8 261 4 144 2 316 1 124 1 169 2 248 2 222 1 106 1 175 4 305 1 252 1 307 1 47 1 14 1 229 1 291 1 
165 1 35 2 261 4 124 1 264 1 42 2 175 5 45 1 14 1 231 4 183 2 274 1 186 9 234 1 19 1 97 1 316 2 144 4 55 1 248 1 251 1 252 3 324 1 113 2 
236 1 199 1 34 1 192 1 162 1 
236 1 34 1 114 1 192 1 162 1 
192 1 77 1 68 1 162 1 
236 1 34 1 114 1 192 1 162 1 
236 1 199 1 34 1 192 1 162 1 
258 1 
168 2 2 6 170 1 78 1 266 1 267 3 269 2 13 1 88 1 181 1 182 1 100 1 99 5 278 1 24 1 188 1 22 1 23 4 194 1 29 2 195 1 284 5 30 2 285 1 197 1 200 2 110 1 115 1 207 1 211 1 37 2 125 1 38 1 218 1 40 1 130 2 304 1 132 2 131 1 225 2 49 2 309 1 141 1 52 1 142 1 56 2 318 1 247 2 59 2 156 2 155 2 61 1 323 2 259 1 163 1 
2 2 170 1 38 1 218 1 267 1 131 1 177 1 13 1 309 1 141 1 142 1 99 3 22 1 188 1 23 2 318 1 194 1 29 1 284 3 110 1 115 1 211 1 
2 1 125 1 170 1 38 1 218 1 267 1 131 1 177 1 13 1 309 1 141 1 142 1 99 3 22 1 188 1 23 3 318 1 247 1 194 1 284 3 110 1 200 1 115 1 211 1 
2 2 125 1 170 1 38 1 218 1 267 1 177 1 131 1 13 1 49 1 309 1 141 1 142 1 99 3 22 1 188 1 23 3 318 1 247 1 194 1 29 1 284 3 110 1 200 1 115 1 211 1 
71 1 2 3 170 1 38 1 218 1 220 1 267 1 177 1 131 1 13 1 49 2 309 1 141 1 142 1 145 1 99 3 22 1 188 1 23 2 318 1 194 1 29 2 284 3 110 1 115 1 211 1 
168 2 2 4 170 1 78 1 266 1 267 2 269 2 13 1 181 1 99 4 23 4 188 1 22 1 194 1 195 1 29 2 284 4 197 1 110 1 200 2 115 1 211 1 37 1 125 1 38 1 218 1 40 1 131 1 132 2 225 2 49 2 309 1 141 1 142 1 52 1 56 2 318 1 247 2 155 1 156 2 
141 1 142 1 145 1 99 2 23 2 188 1 22 1 318 1 170 1 38 1 218 1 194 1 284 2 131 1 110 1 13 1 115 1 309 1 211 1 
141 1 142 1 145 1 99 2 23 2 188 1 22 1 318 1 170 1 38 1 218 1 194 1 284 2 131 1 110 1 13 1 115 1 309 1 211 1 
0 2 37 1 125 1 2 4 170 1 38 1 78 1 218 1 266 1 40 1 267 2 132 2 131 1 269 2 270 1 13 1 49 2 181 1 309 1 141 1 142 1 187 2 56 2 99 4 22 1 188 1 23 4 318 1 247 2 194 1 29 2 195 1 320 1 284 4 196 1 200 1 155 1 110 1 115 1 67 1 211 1 
141 1 142 1 145 1 99 2 2 1 23 3 188 1 22 1 318 1 170 1 247 1 38 1 218 1 194 1 220 1 29 1 284 2 131 1 110 1 13 1 115 1 49 1 309 1 211 1 
141 1 142 1 145 1 99 2 2 1 23 3 188 1 22 1 318 1 170 1 247 1 38 1 218 1 194 1 220 1 29 1 284 2 131 1 110 1 13 1 115 1 49 1 309 1 211 1 
0 2 2 4 170 1 78 1 266 1 267 2 269 2 13 1 181 1 187 2 99 4 23 4 188 1 22 1 194 1 195 1 29 2 284 4 196 1 110 1 200 1 115 1 211 1 37 1 125 1 38 1 218 1 40 1 131 1 132 2 49 2 309 1 141 1 142 1 52 1 56 2 318 1 247 2 155 1 
165 1 261 3 186 6 35 1 313 1 234 1 97 1 316 1 144 2 55 1 124 1 244 1 264 1 191 1 42 1 175 3 251 1 134 1 252 2 86 1 113 1 159 1 231 2 329 2 330 1 183 1 
69 1 165 1 261 6 35 2 123 1 124 2 169 3 222 1 224 1 42 2 175 8 305 1 85 1 134 11 86 4 47 2 229 3 231 4 272 1 183 2 274 1 185 1 186 14 237 1 144 2 244 1 106 2 252 1 113 2 206 1 159 11 329 1 330 2 
35 1 261 1 121 1 123 1 126 1 128 1 301 1 130 1 174 1 42 1 131 2 175 1 85 1 86 1 179 1 231 2 182 1 183 1 95 1 186 2 237 1 54 1 100 1 239 1 244 1 242 1 24 1 103 1 194 2 59 1 30 1 323 1 110 1 113 1 161 1 329 1 330 1 163 1 
165 3 69 2 261 10 264 1 174 2 175 10 85 1 87 2 86 7 89 2 182 2 183 3 95 2 274 4 186 20 97 1 100 2 24 2 194 3 106 2 30 1 110 1 113 3 35 3 121 1 123 1 124 3 126 2 217 2 128 1 299 1 301 1 130 3 42 3 131 3 134 7 46 1 308 2 47 2 231 6 50 1 234 1 238 1 237 1 316 1 55 1 239 2 144 8 242 1 244 3 149 2 59 3 251 1 252 4 323 3 159 7 329 2 330 3 163 2 
213 1 35 2 261 1 214 1 123 1 128 1 301 1 130 8 43 1 42 2 304 1 131 1 175 1 85 1 228 1 230 1 16 1 231 4 182 2 183 2 186 2 143 2 238 1 100 2 242 1 244 2 24 2 191 1 194 1 107 1 59 8 30 2 110 1 323 7 62 1 113 2 207 1 330 2 163 3 
69 1 165 1 35 1 261 2 293 1 124 1 75 1 128 1 296 1 42 1 131 1 175 1 134 1 86 1 47 1 231 2 183 1 186 3 237 1 144 1 244 1 242 1 194 1 106 1 252 1 110 1 113 1 159 1 330 1 
274 1 186 2 35 1 144 1 244 1 124 1 4 1 191 1 106 1 42 1 175 2 134 1 86 1 113 1 159 1 231 2 330 1 183 1 
69 1 165 1 186 2 35 1 261 2 144 1 244 1 191 1 319 1 42 1 134 1 252 1 86 1 113 1 159 1 231 2 330 1 183 1 
69 1 165 1 35 1 261 2 124 1 42 1 175 2 134 2 86 2 47 1 231 2 183 1 274 1 186 4 144 2 244 1 191 1 106 1 252 1 113 1 159 2 330 1 
274 1 186 2 35 1 144 1 244 1 124 1 4 1 106 1 42 1 175 2 134 1 86 1 113 1 159 1 230 1 231 2 330 1 183 1 
69 1 165 1 186 2 35 1 261 2 144 1 244 1 319 1 42 1 134 1 252 1 86 1 113 1 159 1 230 1 231 2 330 1 183 1 
69 1 165 1 35 1 261 2 124 1 42 1 175 2 134 2 86 2 47 1 230 1 231 2 183 1 274 1 186 4 144 2 244 1 106 1 252 1 113 1 159 2 330 1 
69 1 165 1 35 1 261 2 124 1 42 1 175 2 134 2 86 2 47 1 231 2 183 1 274 1 186 4 144 2 244 1 106 1 252 1 113 1 159 2 330 1 
35 1 261 1 123 1 126 1 130 1 174 1 42 1 175 1 131 1 85 1 308 1 231 2 182 1 183 1 95 1 186 2 100 1 239 1 244 1 24 1 194 1 59 1 30 1 323 1 113 1 329 1 330 1 163 1 
35 1 261 1 123 1 5 1 126 1 130 1 174 1 42 1 175 1 131 1 85 1 48 1 231 2 182 1 183 1 186 2 100 1 244 1 24 1 148 1 194 1 59 1 30 1 323 1 113 1 329 1 330 1 163 1 
69 1 165 1 35 1 261 2 124 1 42 1 175 2 134 2 86 2 47 1 231 2 183 1 274 1 186 4 237 1 144 2 244 1 106 1 252 1 113 1 159 2 330 1 
165 1 69 1 261 2 35 1 124 1 126 1 130 1 174 1 42 1 175 2 131 1 134 2 86 2 308 1 228 1 47 1 231 2 182 1 183 1 274 1 95 1 186 4 144 2 239 1 100 1 244 1 24 1 149 1 194 1 106 1 59 1 252 1 323 1 113 1 159 2 330 1 163 1 
165 1 69 1 261 1 35 1 124 1 75 1 128 1 296 1 219 1 42 1 131 1 175 2 134 1 86 1 47 1 231 2 183 1 274 1 186 3 237 1 144 1 244 1 242 1 194 1 106 1 110 1 113 1 159 1 330 1 
118 2 69 3 165 3 260 1 35 2 261 10 124 3 263 2 169 2 222 1 42 2 175 9 305 1 45 1 47 3 229 1 231 4 91 1 94 1 183 2 274 3 186 19 277 1 144 6 106 3 31 1 252 3 113 2 254 1 210 1 
165 2 118 4 69 2 260 1 261 12 35 3 36 1 124 3 263 1 169 2 80 1 222 2 42 3 175 14 45 1 47 3 229 2 231 6 91 1 183 3 274 2 275 1 186 26 19 2 144 4 27 1 106 3 31 1 60 1 252 2 112 1 113 3 254 2 210 2 
165 5 69 4 260 1 261 21 169 4 263 1 264 1 80 1 175 20 91 1 183 3 274 4 275 1 186 41 19 1 97 1 277 1 27 1 106 4 31 1 113 3 112 1 210 2 118 4 35 3 36 1 124 5 222 3 42 3 305 1 45 1 47 4 229 3 231 6 234 1 144 8 55 1 316 1 60 1 153 1 251 1 252 4 254 1 
118 4 69 3 165 4 260 1 35 4 261 18 36 1 124 5 263 1 169 4 264 1 80 1 222 3 42 4 175 20 305 1 45 1 47 4 229 3 231 8 91 1 183 4 275 1 274 3 234 1 186 38 19 2 97 1 277 1 316 1 55 1 144 7 27 1 106 4 153 1 60 1 31 1 251 1 252 4 112 1 113 4 254 1 210 2 
118 4 69 7 165 8 260 1 35 2 261 25 36 1 124 8 263 1 169 4 264 1 80 1 222 2 42 2 175 27 305 2 45 1 47 7 229 4 231 4 91 1 272 2 183 2 275 1 274 7 234 1 186 52 19 1 97 1 316 1 55 1 144 14 27 1 106 7 60 1 31 1 251 1 252 7 112 1 113 2 254 1 210 1 
173 1 321 1 154 1 119 1 21 1 287 1 295 1 104 1 172 1 281 1 
53 1 204 1 
119 1 21 1 111 1 295 1 104 1 280 1 172 1 281 1 328 1 
1 1 314 1 119 1 120 1 99 1 21 1 104 1 295 1 172 1 281 1 282 1 173 1 284 1 321 1 154 1 84 1 200 1 90 2 
1 1 314 1 119 1 120 1 99 1 21 1 104 1 295 1 172 1 281 1 282 1 173 1 284 1 321 1 154 1 84 1 200 1 90 2 
1 1 314 1 119 1 120 1 99 1 21 1 104 1 295 1 172 1 281 1 282 1 173 1 284 1 321 1 154 1 84 1 200 1 90 2 
253 1 255 1 209 1 
253 1 255 1 209 1 
101 1 184 1 
101 1 255 1 184 1 
249 1 157 1 
1 1 120 1 119 1 72 1 122 1 294 1 295 1 128 2 172 1 131 2 90 1 140 1 53 1 99 1 21 1 242 2 104 1 194 2 281 1 284 1 249 1 32 1 110 2 204 1 157 1 160 1 329 1 
253 1 209 1 
101 1 255 1 184 1 
213 1 35 1 261 1 123 1 8 1 130 2 9 1 42 1 176 1 131 2 175 1 85 1 231 2 182 1 311 1 183 1 186 2 143 2 237 1 100 1 244 1 24 1 279 1 194 2 59 2 110 2 323 2 62 1 113 1 330 1 163 1 
238 1 24 1 167 1 147 1 297 1 79 1 221 1 130 2 152 1 59 2 323 2 63 1 228 1 205 1 271 2 66 1 182 1 257 1 273 1 
238 1 167 1 24 1 246 1 147 1 297 1 79 1 221 1 130 1 152 1 59 1 323 1 63 1 271 2 66 1 182 1 273 1 
100 1 24 1 130 1 152 1 129 1 30 1 59 1 82 1 304 1 323 1 205 1 207 1 182 1 163 1 
238 1 167 1 24 1 147 1 297 1 79 1 221 1 130 1 152 1 59 1 323 1 63 1 205 1 271 2 66 1 182 1 257 1 273 1 
83 1 
268 1 96 1 313 1 155 1 200 1 37 1 125 1 
37 1 168 1 2 1 125 1 78 1 40 1 267 1 132 1 225 1 181 1 99 1 195 1 284 1 197 1 155 1 200 2 156 1 
317 1 100 1 24 1 78 1 195 1 40 1 130 1 302 1 30 1 59 1 174 1 250 1 323 1 227 1 181 1 182 1 163 1 
69 2 165 2 36 1 37 5 124 2 2 1 169 1 125 2 171 1 78 2 300 5 80 1 222 1 40 2 267 1 132 6 225 3 178 5 47 2 88 1 229 1 181 2 275 1 99 1 278 1 195 2 106 2 108 1 284 1 60 1 155 8 200 5 112 1 327 1 208 2 
165 1 37 2 124 2 75 1 171 1 264 1 7 1 78 1 128 1 40 1 41 1 131 1 13 1 181 1 98 1 97 1 55 1 99 1 242 1 26 1 194 1 195 1 284 1 322 1 155 2 110 1 202 1 208 2 
96 1 37 1 125 1 78 1 195 1 40 1 268 1 200 1 155 1 181 1 
69 2 165 2 37 5 124 2 171 1 217 1 300 5 106 2 132 10 225 5 200 5 155 5 178 5 47 2 208 2 
284 1 267 1 200 1 99 1 125 1 2 1 
37 2 74 2 2 4 216 1 78 2 265 1 40 1 130 4 10 1 267 2 304 1 135 1 88 2 181 2 182 1 100 1 99 3 24 1 278 2 195 2 59 4 30 2 284 3 61 1 323 4 155 2 207 1 163 1 259 1 
261 1 35 1 75 2 76 1 126 1 128 2 130 1 42 1 174 1 131 3 85 1 308 1 231 2 182 1 183 1 95 1 186 1 239 1 100 1 242 2 244 1 24 1 194 3 59 1 30 1 322 1 323 1 110 2 113 1 329 1 330 1 163 1 
316 1 37 2 278 1 125 2 78 1 300 2 195 1 40 1 132 4 225 2 155 1 200 4 178 2 88 1 181 1 
17 1 295 1 281 1 
173 1 157 1 295 1 151 1 281 1 
17 1 295 1 281 1 
17 1 295 1 281 1 
226 1 295 1 281 1 
226 1 295 1 281 1 
226 1 295 1 281 1 
295 1 281 1 
21 1 104 1 
165 1 274 1 261 4 186 8 35 2 234 1 19 1 97 1 316 1 144 3 55 1 124 1 264 1 42 2 175 4 251 1 252 2 113 2 231 4 183 2 
165 1 261 3 313 1 234 1 186 6 97 1 316 1 55 1 144 2 124 1 264 1 251 1 175 3 252 2 
165 1 69 1 274 1 261 2 35 1 186 4 144 2 124 1 106 1 42 1 175 2 252 1 113 1 47 1 231 2 256 1 183 1 
165 1 69 1 274 1 261 4 186 7 144 2 124 1 169 2 222 1 106 1 175 3 305 1 252 1 47 1 229 1 
69 2 165 3 261 12 35 2 124 3 169 2 264 2 224 1 42 2 305 1 175 11 47 2 229 2 231 4 272 1 183 2 274 4 234 1 186 23 19 2 235 1 97 1 316 1 55 2 144 9 106 2 251 1 252 5 113 2 
186 1 261 1 169 1 
186 1 175 1 229 1 
274 1 69 1 165 1 35 1 261 3 186 6 144 3 124 1 217 1 106 1 42 1 175 3 252 2 113 1 47 1 231 2 256 1 183 1 
69 2 165 2 261 6 35 1 36 1 124 2 169 1 80 1 222 1 42 1 175 6 45 1 47 2 229 1 231 2 183 1 274 1 275 1 186 12 144 2 106 2 60 1 252 1 113 1 112 1 
165 1 274 1 186 6 261 3 97 1 55 1 144 2 124 1 264 1 175 3 252 1 
274 1 261 2 186 3 35 1 234 1 235 1 19 1 144 2 55 1 264 1 42 1 175 1 251 1 252 1 113 1 231 2 183 1 
274 2 165 2 35 1 186 10 261 5 97 1 55 2 144 5 124 2 264 2 7 1 42 1 175 5 252 3 45 1 113 1 231 2 183 1 
274 1 35 1 186 2 144 1 124 1 106 1 42 1 175 2 45 1 113 1 231 2 183 1 
165 1 69 1 274 1 261 2 35 1 186 4 144 2 124 1 106 1 42 1 175 2 252 1 45 1 113 1 47 1 231 2 183 1 
274 1 261 2 186 3 35 3 19 1 235 1 277 1 55 1 144 2 264 1 42 3 175 1 252 1 45 1 113 3 231 6 183 3 
165 2 261 6 35 3 124 2 169 1 264 1 7 1 222 1 42 3 175 6 45 1 229 1 231 6 183 3 274 2 186 12 234 1 97 1 144 4 277 1 55 1 251 1 252 2 113 3 256 1 291 1 
165 1 261 4 35 1 124 1 169 1 264 1 80 1 222 1 42 1 175 4 45 1 229 1 231 2 183 1 186 8 234 1 97 1 316 1 55 1 144 2 251 1 252 2 113 1 
165 1 261 5 35 2 124 2 169 2 264 1 80 1 222 1 42 2 175 6 305 1 45 1 47 1 229 1 231 4 183 2 274 1 234 1 186 11 97 1 316 1 55 1 144 3 106 1 251 1 252 2 113 2 256 1 
69 2 165 3 261 10 35 3 36 1 124 3 169 1 264 1 80 1 222 1 42 3 175 9 45 1 47 2 229 1 231 6 183 3 274 1 275 1 234 1 186 19 19 1 97 1 316 1 55 1 144 4 106 2 60 1 251 1 252 3 112 1 113 3 256 1 
69 1 165 2 261 7 35 3 36 1 124 3 169 1 264 1 80 1 222 1 42 3 175 10 45 1 47 2 229 1 231 6 183 3 274 2 275 1 234 1 186 17 19 1 97 1 316 1 55 1 144 5 106 2 60 1 251 1 252 3 113 3 112 1 256 1 
165 1 261 4 35 1 124 1 169 1 264 1 80 1 222 1 42 1 175 4 45 1 229 1 231 2 183 1 186 8 234 1 97 1 316 1 55 1 144 2 251 1 252 2 113 1 
69 2 165 2 261 6 35 1 36 1 124 2 169 1 80 1 222 1 42 1 175 6 45 1 47 2 229 1 231 2 183 1 274 1 275 1 186 12 144 2 106 2 60 1 252 1 113 1 112 1 
69 1 165 2 261 8 35 4 36 1 124 3 169 1 264 1 80 1 222 1 42 4 175 10 45 1 47 2 229 1 231 8 183 4 274 2 275 1 234 1 186 18 19 2 97 1 316 1 55 1 144 5 106 2 60 1 251 1 252 3 112 1 113 4 256 1 
69 2 165 2 261 7 35 4 36 1 124 3 169 1 80 1 222 1 42 4 175 9 45 1 47 3 229 1 231 8 183 4 274 3 275 1 186 16 19 2 277 1 144 6 106 3 60 1 252 3 112 1 113 4 
165 1 274 3 261 4 186 7 234 1 97 1 55 3 144 6 124 1 264 3 251 2 175 3 252 3 
69 1 165 2 261 8 35 4 36 1 124 3 169 1 264 1 80 1 222 1 42 4 175 10 45 1 47 2 229 1 231 8 183 4 274 1 275 1 234 1 186 18 19 2 97 1 316 1 55 1 277 1 144 4 106 2 60 1 251 1 252 3 112 1 113 4 
109 1 131 1 110 1 3 1 170 1 194 1 329 1 
3 1 170 1 298 1 194 1 109 1 131 1 12 1 110 1 325 1 92 1 180 1 329 1 
59 1 30 1 304 1 313 1 323 1 100 1 24 1 207 1 182 1 163 1 130 1 
100 1 239 1 242 1 24 1 126 1 128 1 194 2 301 1 130 1 30 1 59 1 174 1 131 2 110 1 323 1 182 1 329 1 163 1 
100 2 239 1 242 2 74 1 189 1 166 1 24 1 126 1 38 1 128 1 194 2 301 1 130 1 59 1 174 2 131 2 110 2 323 1 13 1 309 1 182 1 329 1 163 3 
100 2 242 2 74 1 189 1 166 1 24 1 126 1 38 1 128 1 194 2 301 1 130 2 59 2 174 2 131 2 133 1 110 2 323 2 13 1 48 1 309 1 182 1 329 1 163 3 
233 1 100 1 99 2 317 1 74 1 125 1 189 1 166 1 2 1 24 1 130 3 30 1 303 1 284 2 59 3 174 1 133 1 200 1 323 3 115 1 15 1 182 1 163 4 
100 1 99 2 317 1 74 1 125 1 189 1 166 1 2 1 24 1 6 1 130 3 30 1 284 2 59 3 174 1 133 1 200 1 323 3 115 1 15 1 182 1 163 4 
59 1 214 1 323 1 24 1 182 1 130 1 
232 1 143 1 214 1 238 1 100 2 241 1 24 2 28 1 130 7 302 1 107 1 30 2 59 7 43 1 174 1 323 6 62 1 228 1 16 1 182 3 163 3 
165 1 261 3 264 1 9 1 174 1 175 3 86 1 89 1 182 1 183 2 95 1 186 6 97 1 100 1 24 1 194 2 110 1 113 2 35 2 124 1 126 1 128 1 301 1 130 1 42 2 131 2 134 1 308 1 228 1 231 4 234 1 237 1 239 1 55 1 144 2 316 1 242 1 244 2 149 1 59 1 251 1 323 1 252 2 159 1 330 2 329 2 163 1 
37 1 125 1 2 2 127 1 6 1 78 2 265 1 130 1 40 2 267 1 268 1 15 1 181 2 96 1 99 3 317 1 195 2 30 1 284 3 59 1 155 1 200 1 323 1 33 1 65 1 115 1 160 1 163 2 
214 1 100 1 243 1 24 1 130 1 302 1 59 1 174 1 250 1 323 1 15 1 182 1 163 1 
100 1 24 1 150 1 130 4 30 1 59 4 304 1 133 1 323 4 228 1 207 1 182 1 163 1 
232 1 20 1 100 1 74 1 24 1 28 1 130 2 59 2 174 1 323 2 46 1 326 1 182 2 163 1 
59 1 30 1 323 1 24 1 147 1 297 1 271 1 79 1 182 1 130 1 
59 2 238 1 323 2 100 1 62 1 24 1 228 1 8 1 182 1 163 1 130 2 
100 2 74 1 24 2 150 1 130 5 30 1 59 5 107 1 304 1 43 1 323 4 62 1 228 1 207 1 182 2 163 3 
100 2 74 1 24 2 102 1 150 1 130 5 30 1 59 5 107 1 304 1 323 4 62 1 228 1 207 1 182 2 163 3 
100 1 242 1 24 1 126 1 128 1 194 2 301 1 130 1 30 1 59 1 174 1 131 2 110 1 323 1 48 1 182 1 329 1 163 1 
232 1 100 1 74 1 241 1 24 1 28 1 130 1 302 1 59 1 174 1 323 1 182 2 163 1 
18 1 279 1 194 1 176 1 131 1 110 1 288 1 137 1 311 1 
245 1 288 1 310 1 
81 1 18 1 288 1 137 1 329 1 
18 2 212 1 315 1 99 2 125 1 245 1 38 1 284 2 81 2 200 1 13 1 288 1 115 1 160 1 137 2 309 1 329 1 310 1 211 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 55 (26,175,207) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 21 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 144 89 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 144 89 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 144 89 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 144 89 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 144 89 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
51 1 135 2 215 2 165 5 265 1 282 1 266 1 61 2 148 1 35 2 325 2 201 1 307 1 86 1 153 2 276 1 287 1 310 9 330 1 128 1 291 9 253 2 189 1 254 1 45 3 340 6 365 1 345 4 
51 1 135 2 215 2 165 5 265 1 282 1 266 1 61 2 148 1 35 2 325 2 201 1 307 1 86 1 153 2 276 1 287 1 310 9 330 1 128 1 291 9 253 2 189 1 254 1 45 3 340 6 365 1 345 4 
51 1 135 2 215 2 165 6 265 1 282 1 266 1 61 2 148 1 35 2 325 2 201 1 307 1 86 1 153 2 276 1 287 1 310 10 330 1 128 1 291 10 253 2 189 1 254 1 45 4 340 7 365 1 345 5 
51 1 135 2 215 2 165 4 265 1 282 1 266 1 61 1 148 1 35 2 325 2 201 1 307 1 86 1 153 2 287 1 310 7 330 1 128 1 291 7 253 2 189 1 254 1 45 2 340 4 365 1 345 3 
153 1 86 1 276 1 287 1 310 4 215 1 165 3 291 4 282 1 253 1 61 2 45 1 148 1 35 1 325 1 340 3 307 1 345 2 
153 1 178 1 310 2 135 1 165 1 215 1 291 2 282 1 266 1 189 1 253 1 83 1 148 1 325 1 20 1 307 1 
153 2 310 3 135 1 165 2 128 1 291 3 282 1 45 1 148 1 325 2 340 1 307 1 345 1 
135 1 165 5 215 1 282 1 61 2 148 1 35 1 325 2 201 1 307 1 153 2 86 1 287 1 276 1 310 9 154 1 36 1 128 1 291 9 253 1 254 1 45 3 340 7 345 4 
135 1 165 5 215 1 282 1 61 2 148 1 35 1 325 2 201 1 307 1 153 2 86 1 287 1 276 1 310 9 154 1 36 1 128 1 291 9 253 1 254 1 45 3 340 7 345 4 
213 1 100 1 170 1 
97 1 
285 1 177 2 248 2 202 2 335 2 111 1 339 2 47 2 
318 1 25 2 299 1 166 1 302 1 30 1 281 2 239 1 58 1 244 1 81 1 353 2 85 1 103 1 355 1 285 1 177 3 248 3 202 2 232 1 329 1 90 1 159 1 13 1 358 1 129 1 161 1 335 2 111 1 256 1 339 2 316 2 342 1 47 2 208 1 364 1 50 2 
177 1 248 1 77 1 231 1 202 1 182 1 335 1 111 1 339 1 47 1 
213 1 248 1 177 1 1 1 180 1 87 1 182 1 170 1 188 1 335 1 245 1 259 1 296 1 151 1 
213 1 248 1 177 1 1 1 180 1 87 1 202 1 182 1 170 1 188 1 335 1 339 1 47 1 296 2 259 2 
222 1 277 1 84 1 296 1 259 1 
213 1 222 1 223 1 277 1 170 1 296 2 259 2 139 1 
222 1 296 1 259 1 
77 1 248 1 177 1 231 1 202 1 182 1 277 1 335 1 111 1 339 1 295 1 47 1 259 1 296 1 
170 1 
213 1 222 1 277 1 34 1 170 1 296 2 259 2 139 1 
213 1 309 2 347 1 277 2 78 1 170 1 331 2 206 1 240 1 139 1 196 1 251 1 222 2 333 2 17 1 200 1 259 5 296 5 308 1 
285 1 100 1 
248 2 177 2 285 2 202 1 335 2 339 1 47 1 274 1 64 1 
8 1 321 1 194 1 
285 1 177 1 248 1 299 1 329 1 166 1 90 1 281 1 30 1 13 1 358 1 161 1 353 1 103 1 343 1 50 1 
248 2 177 2 202 1 166 1 329 1 299 1 90 1 301 1 30 1 281 1 13 1 358 1 161 1 335 1 339 1 353 1 103 1 149 1 194 1 50 1 
211 1 248 5 177 5 285 1 202 4 80 1 301 2 335 5 245 1 339 4 338 1 47 1 149 1 274 1 
177 2 248 2 231 1 202 2 182 1 335 2 339 2 367 1 
285 1 177 3 248 3 202 3 335 3 339 3 47 1 301 1 
177 1 248 1 231 1 202 1 182 1 335 1 339 1 
177 1 248 1 202 1 182 1 335 1 339 1 47 1 274 1 64 1 
1 1 318 1 25 2 166 1 299 1 56 1 301 1 30 1 281 1 81 1 121 1 353 1 85 1 103 1 355 1 149 1 274 1 285 1 177 4 248 4 180 1 87 1 202 3 232 1 182 1 329 1 90 1 159 1 13 1 358 1 129 1 161 1 188 1 335 3 111 1 256 1 339 3 316 1 47 2 208 1 259 1 296 1 364 1 50 1 
285 1 211 1 177 2 248 2 202 1 335 2 245 1 339 1 301 1 
248 3 177 3 1 1 87 1 180 1 202 3 182 1 301 2 170 1 242 1 188 1 335 3 121 1 339 3 47 1 296 1 259 1 149 1 274 1 
248 2 177 2 202 2 321 1 301 1 335 2 339 2 47 1 274 1 194 1 
285 1 177 1 248 1 299 1 329 1 166 1 90 1 281 1 30 1 13 1 358 1 161 1 353 1 103 1 50 1 
285 1 177 1 248 1 299 1 329 1 166 1 155 1 90 1 281 1 30 1 13 1 161 1 197 1 353 1 50 1 
212 1 25 2 134 1 262 1 3 1 321 2 239 2 199 1 81 1 8 2 85 1 247 1 232 1 156 1 159 1 129 2 16 1 190 1 255 1 316 4 341 1 208 1 364 1 194 2 
177 1 248 1 188 1 202 1 182 1 335 1 339 1 367 1 
163 1 207 1 
163 1 207 1 
55 1 26 1 
55 1 26 1 
55 1 26 1 163 1 207 1 
130 1 163 1 207 1 
55 1 26 1 163 1 207 1 
163 1 175 1 207 1 
130 1 163 1 207 1 
130 1 163 1 207 1 
9 1 163 1 207 1 
9 1 163 1 207 1 
9 1 163 1 207 1 
237 1 169 1 31 1 349 1 219 1 171 1 323 1 270 1 62 1 63 1 175 1 285 1 248 2 177 2 67 1 202 2 288 1 207 1 335 2 339 2 163 1 296 1 259 1 363 1 
104 1 183 1 170 1 207 2 171 2 243 1 293 1 142 2 323 2 270 3 62 1 74 1 272 1 163 2 259 2 296 2 363 2 63 2 230 1 
253 1 215 1 35 1 
178 1 253 1 215 1 
178 1 253 3 143 1 35 2 105 1 122 1 
178 1 253 2 35 1 105 1 122 1 5 1 
178 1 253 2 35 1 122 1 105 2 
213 1 77 1 347 1 117 1 78 2 4 2 31 1 170 1 139 1 222 1 140 1 60 1 33 1 322 1 247 1 177 1 248 1 309 1 231 1 202 1 182 1 277 4 156 1 185 1 331 1 108 1 292 1 333 1 335 1 17 1 111 1 339 1 295 1 47 1 296 5 259 5 97 1 
213 1 77 1 170 1 222 1 84 1 177 1 248 1 231 1 202 1 68 1 182 1 277 2 335 1 111 1 339 1 46 1 295 1 47 1 296 2 259 2 49 1 
77 1 213 1 134 1 117 1 4 1 78 2 170 2 31 1 140 1 60 1 322 1 33 2 200 1 177 1 248 1 247 1 309 1 231 1 202 1 182 1 277 2 156 1 331 1 108 1 16 1 109 1 333 1 292 2 335 1 111 1 17 3 339 1 295 1 47 1 296 3 259 3 97 3 
134 1 117 1 4 1 78 2 170 1 31 1 140 1 60 1 33 2 322 1 200 1 247 1 309 1 277 1 156 1 331 1 108 1 16 1 109 1 292 2 333 1 17 3 296 2 259 2 21 1 97 3 
100 1 361 1 13 1 
13 1 99 1 
95 1 
30 1 13 1 161 1 
267 1 13 1 
30 1 13 1 
289 1 361 2 30 1 13 3 71 1 161 1 
134 1 262 3 156 1 3 2 69 2 235 1 119 1 239 4 129 3 220 1 236 1 351 1 101 1 316 7 48 1 174 1 164 1 
134 1 262 3 156 1 3 2 69 2 235 1 119 1 239 4 129 3 220 1 236 1 351 1 101 1 316 7 48 1 174 1 164 1 
134 1 262 3 156 1 3 2 69 2 235 1 119 1 239 4 129 3 220 1 187 1 236 1 351 1 101 1 316 7 48 1 174 1 164 1 
25 2 134 4 28 1 262 10 3 5 119 2 239 16 220 1 60 3 351 1 101 2 147 4 85 1 174 2 229 1 247 3 179 1 232 1 311 1 156 4 69 3 235 1 159 1 129 15 15 1 16 3 110 1 294 3 236 5 18 1 316 31 48 2 364 1 164 1 
25 4 134 1 348 1 262 4 3 3 119 1 239 5 220 1 101 1 85 2 174 1 66 1 179 1 232 2 156 1 69 2 235 1 159 2 129 4 236 1 316 9 48 1 364 2 164 1 
135 1 165 1 215 1 263 1 281 1 282 1 269 1 143 1 353 1 148 1 35 1 325 1 283 1 307 1 150 1 153 1 178 1 310 2 329 1 234 1 90 1 127 1 291 2 253 2 131 1 258 1 340 1 96 1 193 1 50 1 
214 1 135 1 165 1 215 1 263 1 264 1 281 1 282 1 143 1 353 1 148 1 35 1 325 1 283 1 150 1 153 1 178 1 310 3 329 1 234 1 90 1 127 1 291 3 106 1 253 2 131 1 340 2 96 1 193 1 50 1 
214 1 135 1 165 1 215 1 281 1 282 1 143 1 353 1 148 1 35 1 283 1 150 1 178 1 310 2 329 1 234 1 90 1 127 1 291 2 106 1 253 2 131 1 340 2 193 1 50 1 
346 1 297 1 135 2 299 1 300 1 264 1 281 1 30 1 145 1 353 1 226 1 325 1 153 1 310 1 329 1 90 1 127 2 13 1 312 1 291 1 131 2 193 2 50 1 
153 1 178 1 310 1 214 1 135 1 215 1 329 1 263 1 234 1 90 1 281 1 127 1 291 1 269 1 253 2 143 1 131 1 353 1 35 1 325 1 283 1 96 1 307 1 150 1 50 1 193 1 
209 1 
2 2 1 1 52 4 195 1 281 2 139 3 140 1 145 1 245 1 151 1 284 1 248 1 328 1 329 1 290 1 331 1 14 1 13 1 332 1 109 2 333 1 334 2 335 1 17 2 259 5 296 5 22 2 213 1 114 1 347 1 299 2 29 2 300 1 78 2 170 2 30 1 221 1 222 6 353 2 177 1 309 1 180 1 87 1 182 1 181 1 37 2 90 1 313 2 188 1 317 1 192 2 97 2 366 1 132 1 50 2 
1 1 114 1 248 1 177 1 87 1 180 1 52 2 181 1 182 1 139 1 222 2 188 1 334 1 335 1 34 1 245 1 259 3 296 3 317 1 366 1 132 1 151 1 
213 1 1 1 114 1 248 1 177 1 87 1 180 1 52 3 181 1 182 1 170 1 139 1 222 1 188 1 335 1 34 1 245 1 259 3 296 3 317 1 192 1 366 1 132 1 151 1 
114 1 1 1 213 1 52 3 29 1 170 1 139 1 222 2 34 1 245 1 151 1 177 1 248 1 180 1 87 1 182 1 181 1 188 1 334 1 335 1 317 1 296 3 259 3 132 1 366 1 192 1 
2 2 213 5 114 1 1 1 52 6 347 1 216 1 29 4 78 1 170 5 221 1 139 3 222 7 141 1 225 1 245 1 34 1 151 1 248 1 177 1 309 1 180 1 87 1 328 1 12 1 182 1 181 1 37 2 331 1 313 2 188 1 109 2 333 1 334 4 336 1 335 1 17 1 317 1 296 5 259 5 22 2 192 4 132 1 366 1 
1 1 2 2 52 4 139 2 245 1 151 1 284 1 248 1 328 1 331 1 333 1 109 2 334 2 335 1 17 1 259 4 296 4 22 2 114 1 213 1 347 1 29 2 78 1 170 1 221 1 222 4 177 1 87 1 180 1 309 1 181 1 182 1 37 2 313 2 188 1 317 1 366 1 132 1 97 2 192 2 
213 1 2 2 114 1 1 1 52 4 347 1 29 2 78 1 170 1 221 1 139 2 222 4 141 1 245 1 151 1 177 1 248 1 309 1 180 1 87 1 328 1 12 1 182 1 181 1 37 2 331 1 313 2 188 1 109 2 333 1 334 2 336 1 335 1 17 1 317 1 296 4 259 4 192 2 22 2 132 1 366 1 
213 1 2 2 114 1 1 1 52 4 347 1 29 2 78 1 170 1 221 1 139 2 222 4 141 1 245 1 151 1 177 1 248 1 309 1 180 1 87 1 328 1 12 1 182 1 181 1 37 2 331 1 313 2 188 1 109 2 333 1 334 2 336 1 335 1 17 1 317 1 296 4 259 4 192 2 22 2 132 1 366 1 
213 1 114 1 1 1 52 4 347 1 118 2 29 2 320 1 78 1 170 1 120 2 139 2 222 4 245 1 7 1 151 1 177 1 248 1 309 1 180 1 87 1 328 1 182 1 181 1 331 1 41 1 313 2 188 1 333 1 334 2 336 1 335 1 17 1 317 1 296 4 259 4 192 2 97 2 22 2 132 1 366 1 
213 1 2 2 114 1 1 1 52 5 347 1 29 3 78 1 170 1 221 1 139 2 222 5 141 1 225 1 245 1 151 1 177 1 248 1 309 1 180 1 87 1 328 1 12 1 182 1 181 1 37 2 331 1 313 2 188 1 109 2 333 1 334 3 336 1 335 1 17 1 317 1 296 4 259 4 22 2 132 1 366 1 192 3 
213 1 2 2 114 1 1 1 52 5 347 1 29 3 78 1 170 1 221 1 139 2 222 5 141 1 225 1 245 1 151 1 177 1 248 1 309 1 180 1 87 1 328 1 12 1 182 1 181 1 37 2 331 1 313 2 188 1 109 2 333 1 334 3 336 1 335 1 17 1 317 1 296 4 259 4 22 2 132 1 366 1 192 3 
114 1 1 1 52 2 347 1 320 1 78 1 120 1 245 1 151 1 284 1 248 1 177 1 309 1 180 1 87 1 328 1 182 1 181 1 331 1 313 1 188 1 333 1 335 1 17 1 317 1 296 2 259 2 97 1 22 1 132 1 366 1 
25 2 134 1 262 2 3 2 321 1 119 1 239 3 220 1 100 1 81 1 101 1 8 1 85 1 285 2 232 1 156 1 69 1 235 1 159 1 129 3 255 1 316 6 208 1 364 1 194 1 164 1 
0 1 318 1 25 4 134 1 262 2 3 1 167 1 321 4 239 8 6 1 58 1 60 2 81 1 8 11 147 3 85 2 228 1 285 1 275 1 247 2 232 2 311 1 156 2 159 2 129 6 16 1 236 1 294 3 18 1 316 14 208 2 364 2 194 11 
0 1 318 1 25 2 166 1 299 1 321 1 301 1 30 1 281 1 239 1 58 1 81 1 353 1 103 1 85 1 273 1 149 1 285 1 177 2 248 2 202 1 232 1 329 1 90 1 13 1 159 1 358 1 186 1 129 1 161 1 73 1 335 1 339 1 316 2 343 1 208 1 364 1 50 1 
0 1 318 1 134 3 3 4 321 7 281 3 239 10 58 1 60 2 101 1 8 7 103 2 149 1 285 2 248 3 247 2 202 1 329 2 156 3 69 1 159 3 13 2 161 2 16 2 335 1 339 1 208 3 164 1 214 1 25 6 298 2 299 1 166 2 262 8 301 1 30 2 119 1 220 1 81 3 271 2 353 3 85 3 355 2 124 1 177 3 232 3 357 2 90 2 235 1 358 2 129 10 236 4 191 1 315 1 316 20 362 2 364 3 50 3 194 7 
318 1 214 1 25 4 299 2 280 1 27 1 300 1 217 1 301 1 281 7 30 2 239 1 305 1 58 1 81 2 352 1 145 1 353 8 85 2 177 1 248 1 202 1 232 2 329 2 90 2 160 1 13 3 159 2 129 1 42 1 335 1 255 1 339 1 258 1 316 2 342 2 208 2 364 2 50 8 
0 1 25 2 134 1 262 1 137 1 3 1 321 1 239 1 60 1 81 1 8 1 85 1 274 1 248 1 177 1 247 1 202 1 232 1 156 1 159 1 129 2 16 1 335 1 339 1 316 3 47 1 208 1 364 1 194 1 
247 1 25 2 232 1 262 1 156 1 321 1 159 1 239 2 236 1 81 1 255 1 8 1 316 2 85 1 341 1 208 1 364 1 194 1 
212 1 25 2 232 1 134 1 262 1 3 1 321 1 159 1 129 2 16 1 81 1 255 1 8 1 316 2 85 1 208 1 364 1 194 1 
25 2 134 1 262 2 3 1 321 2 239 2 60 1 81 1 8 2 85 1 247 1 232 1 156 1 159 1 129 2 16 1 236 1 255 1 316 4 208 1 364 1 194 2 
247 1 25 2 232 1 280 1 262 1 156 1 321 1 159 1 239 2 236 1 81 1 8 1 316 2 85 1 341 1 208 1 364 1 194 1 
212 1 25 2 232 1 134 1 280 1 262 1 3 1 321 1 159 1 129 2 16 1 81 1 8 1 316 2 85 1 208 1 364 1 194 1 
25 2 134 1 280 1 262 2 3 1 321 2 239 2 60 1 81 1 8 2 85 1 247 1 232 1 156 1 159 1 129 2 16 1 236 1 316 4 208 1 364 1 194 2 
25 2 134 1 262 2 3 1 321 2 239 2 60 1 81 1 8 2 85 1 247 1 232 1 156 1 159 1 129 2 16 1 236 1 316 4 208 1 364 1 194 2 
318 1 25 2 166 1 299 1 30 1 281 1 239 1 58 1 81 1 353 1 103 1 85 1 355 1 285 1 248 1 177 1 232 1 329 1 90 1 13 1 159 1 358 1 129 1 161 1 316 2 208 1 364 1 50 1 
318 1 25 2 166 1 299 1 30 1 281 1 239 1 197 1 58 1 81 1 353 1 85 1 285 1 248 1 177 1 232 1 329 1 155 1 90 1 157 1 13 1 159 1 129 1 161 1 316 2 208 1 364 1 50 1 
0 1 25 2 134 1 262 2 3 1 321 2 239 2 60 1 81 1 8 2 85 1 247 1 232 1 156 1 159 1 129 2 16 1 236 1 316 4 208 1 364 1 194 2 
25 2 134 1 298 1 166 1 262 2 3 1 321 2 281 1 30 1 239 2 60 1 81 1 8 2 353 1 103 1 85 1 355 1 247 1 248 1 177 1 232 1 329 1 156 1 90 1 13 1 159 1 358 1 129 2 161 1 16 1 236 1 316 4 258 1 208 1 364 1 194 2 50 1 
0 1 25 2 134 1 262 1 321 1 239 2 60 1 81 1 8 1 85 1 274 1 286 1 248 1 177 1 247 1 202 1 232 1 156 1 159 1 129 1 16 1 236 1 335 1 339 1 316 3 47 1 208 1 364 1 194 1 
66 1 25 2 232 1 72 1 144 1 89 1 85 1 159 1 364 1 
66 1 25 2 232 1 72 1 144 1 89 1 85 1 159 1 364 1 
66 1 25 2 232 1 72 1 144 1 89 1 85 1 159 1 364 1 
66 1 25 2 232 1 72 1 144 1 89 1 85 1 159 1 364 1 
66 1 25 2 232 1 72 1 144 1 89 1 85 1 159 1 364 1 
171 1 293 1 44 1 323 1 183 1 272 1 163 1 363 1 63 1 207 1 
67 1 175 1 
171 1 303 1 116 1 323 1 112 1 163 1 363 1 63 1 207 1 
130 1 233 1 
11 1 9 1 203 1 
104 1 183 1 170 1 207 1 171 1 243 1 293 1 142 1 323 1 270 2 62 1 74 1 272 1 163 1 259 1 296 1 363 1 63 1 
104 1 183 1 170 1 207 1 171 1 243 1 293 1 142 1 323 1 270 2 62 1 74 1 272 1 163 1 259 1 296 1 363 1 63 1 
104 1 183 1 170 1 207 1 171 1 243 1 293 1 142 1 323 1 270 2 62 1 74 1 272 1 163 1 259 1 296 1 363 1 63 1 
11 1 130 1 233 1 
11 1 130 1 233 1 
9 1 203 1 
11 1 9 1 203 1 
169 1 219 1 
237 1 169 1 31 1 349 1 219 1 171 1 142 1 323 1 270 1 63 1 175 1 285 1 177 2 248 2 67 1 125 1 202 2 277 1 288 1 207 1 335 2 339 2 74 1 163 1 296 1 259 1 363 1 
0 1 318 1 25 2 30 1 281 2 239 1 305 1 224 1 58 1 81 1 102 1 352 1 353 2 85 1 177 2 248 2 232 1 329 1 38 1 90 1 158 1 13 1 159 1 129 1 335 2 19 1 316 2 342 2 208 1 364 1 50 2 
178 1 214 1 215 1 329 1 263 1 40 1 90 1 281 2 127 1 359 1 253 2 143 1 146 1 353 2 35 1 258 1 283 1 150 1 50 2 
178 1 214 1 215 1 329 1 263 1 40 1 90 1 281 1 127 1 252 1 253 2 143 1 353 1 35 1 283 1 150 1 50 1 
329 1 299 1 300 1 90 1 30 1 281 1 13 1 127 1 312 1 359 1 107 1 145 1 353 1 50 1 
178 1 214 1 215 1 329 1 263 1 40 1 90 1 281 1 127 1 359 1 253 2 143 1 146 1 353 1 35 1 283 1 150 1 50 1 
306 1 
213 1 100 1 17 1 78 1 170 1 206 1 240 1 
2 1 213 1 347 1 78 1 170 1 221 1 139 1 222 1 309 1 37 1 331 1 109 1 333 1 17 1 259 1 296 1 97 1 
347 2 299 1 78 3 281 1 30 1 218 1 139 1 99 2 222 2 140 1 304 1 60 1 33 2 353 1 173 1 246 1 247 1 65 1 152 1 87 1 309 2 329 1 156 1 289 1 90 2 331 2 13 4 161 1 292 2 333 2 17 2 361 1 362 1 296 2 259 2 113 1 97 2 50 1 
98 1 134 2 347 1 78 4 138 1 60 2 33 5 147 1 227 1 247 2 309 1 311 1 156 2 331 1 70 1 292 5 333 1 16 2 294 1 17 6 75 1 97 3 
77 1 134 1 347 1 78 2 119 1 32 1 101 1 354 2 177 1 248 1 309 1 231 1 202 1 12 1 182 1 156 2 235 1 331 1 333 1 335 1 337 1 17 2 111 1 339 1 295 1 47 1 296 1 259 1 
213 1 309 1 333 1 347 1 17 1 78 1 170 1 331 1 206 1 240 1 
247 1 292 1 60 1 33 1 78 2 156 1 97 1 
213 1 222 1 170 1 296 1 259 1 139 1 
347 1 54 1 299 2 78 2 300 1 195 1 30 1 281 4 139 2 222 4 268 1 140 2 145 1 172 2 353 4 200 1 309 2 329 1 90 1 290 2 13 1 14 1 331 2 333 2 162 1 17 2 259 3 296 3 50 4 
318 1 25 2 299 1 166 1 281 1 30 1 81 1 353 1 85 1 103 1 355 1 285 1 177 3 248 3 202 2 232 1 329 1 90 1 159 1 13 1 358 1 129 1 161 1 335 2 111 1 256 1 339 2 316 1 47 2 208 1 364 1 50 1 
213 1 309 1 347 1 78 1 170 1 290 1 331 1 140 1 333 1 33 1 17 1 97 1 
171 1 10 1 323 1 
171 1 323 1 183 1 184 1 219 1 
171 1 10 1 323 1 
171 1 10 1 323 1 
171 1 314 1 323 1 
171 1 314 1 323 1 
171 1 314 1 323 1 
171 1 323 1 
163 1 207 1 
179 1 25 4 134 1 232 2 262 3 156 1 3 2 69 1 235 1 159 2 119 1 239 4 129 4 220 1 236 1 101 1 316 8 85 2 364 2 164 1 
134 1 262 2 3 2 156 1 69 1 235 1 119 1 239 3 129 3 220 1 100 1 101 1 316 6 164 1 
247 1 25 2 134 1 232 1 262 2 3 1 156 1 159 1 239 2 129 2 16 1 60 1 236 1 85 1 316 4 76 1 364 1 
247 1 134 1 311 1 262 2 3 1 156 1 239 3 129 4 16 1 60 1 294 1 236 1 18 1 147 2 316 7 
25 4 134 3 262 9 167 1 3 5 119 2 239 11 220 1 350 1 60 2 101 2 147 2 85 2 228 1 247 2 179 2 232 2 156 3 69 1 235 1 159 2 129 12 16 2 236 4 294 2 18 1 316 23 364 2 164 1 
147 1 316 1 129 1 
294 1 316 1 239 1 
247 1 25 2 232 1 134 1 262 3 156 1 3 2 159 1 239 3 129 3 16 1 60 1 236 1 85 1 316 6 76 1 362 1 364 1 
25 2 98 1 134 2 262 2 3 1 239 6 138 1 60 2 147 1 85 1 227 1 66 1 247 2 232 1 311 1 156 2 159 1 70 1 129 6 16 2 236 1 294 1 316 12 75 1 364 1 
134 1 262 2 156 1 3 1 235 1 119 1 239 3 129 3 236 1 101 1 316 6 
179 1 25 2 232 1 262 2 3 1 119 1 159 1 239 1 220 1 350 1 129 2 236 1 101 1 316 3 85 1 364 1 164 1 
66 1 25 2 232 1 134 2 262 5 3 3 156 2 235 1 159 1 119 2 239 5 129 5 32 1 236 2 101 2 85 1 316 10 364 1 
66 1 247 1 25 2 232 1 262 1 156 1 159 1 239 2 236 1 85 1 316 2 364 1 
66 1 247 1 25 2 134 1 232 1 262 2 3 1 156 1 159 1 239 2 129 2 16 1 60 1 236 1 85 1 316 4 364 1 
66 1 179 1 25 6 232 3 262 2 3 1 159 3 119 1 239 1 350 1 129 2 82 1 236 1 101 1 316 3 85 3 364 3 
25 10 134 5 28 1 262 12 3 7 119 3 239 16 220 1 350 1 60 3 82 1 101 3 147 4 85 5 66 1 247 3 179 2 232 5 311 1 156 5 69 1 235 2 159 5 15 1 129 18 16 3 110 1 294 3 236 5 18 1 316 34 76 1 364 5 164 1 
25 2 134 1 98 1 262 2 3 2 119 1 239 4 220 1 101 1 147 1 85 1 66 1 232 1 311 1 156 1 69 1 235 1 159 1 129 4 294 1 316 8 364 1 164 1 
25 4 134 1 98 1 262 3 3 2 119 1 239 6 220 1 60 1 101 1 147 2 85 2 66 1 247 1 232 2 311 1 156 2 69 1 235 1 159 2 129 5 294 1 236 1 18 1 316 11 76 1 364 2 164 1 
25 6 98 1 134 3 262 4 3 3 119 1 239 9 220 1 138 1 60 2 101 1 147 1 85 3 227 1 66 1 247 2 179 1 232 3 311 1 156 3 69 1 235 1 159 3 70 1 129 10 16 2 236 1 294 1 316 19 76 1 75 1 364 3 164 1 
25 6 98 1 134 2 262 5 3 3 119 1 239 10 220 1 138 1 60 2 101 1 147 1 85 3 227 1 66 1 247 2 179 1 232 3 311 1 156 3 69 1 235 1 159 3 70 1 129 7 16 1 236 2 294 1 316 17 76 1 75 1 364 3 164 1 
25 2 134 1 98 1 262 2 3 2 119 1 239 4 220 1 101 1 147 1 85 1 66 1 232 1 311 1 156 1 69 1 235 1 159 1 129 4 294 1 316 8 364 1 164 1 
25 2 98 1 134 2 262 2 3 1 239 6 138 1 60 2 147 1 85 1 227 1 66 1 247 2 232 1 311 1 156 2 159 1 70 1 129 6 16 2 236 1 294 1 316 12 75 1 364 1 
25 8 98 1 134 2 262 5 3 3 119 1 239 10 220 1 138 1 60 2 101 1 147 1 85 4 227 1 66 1 247 2 179 2 232 4 311 1 156 3 69 1 235 1 159 4 70 1 129 8 16 1 236 2 294 1 316 18 76 1 75 1 364 4 164 1 
25 8 98 1 134 2 262 6 3 3 239 9 138 1 60 3 82 1 147 1 85 4 227 1 66 1 247 3 179 2 232 4 311 1 156 3 159 4 70 1 129 7 16 2 236 3 294 1 316 16 75 1 364 4 
134 1 262 6 3 3 156 1 235 1 119 3 239 3 129 4 220 2 236 3 101 3 316 7 164 1 
25 8 98 1 134 2 262 4 3 3 119 1 239 10 220 1 138 1 60 2 82 1 101 1 147 1 85 4 227 1 66 1 247 2 179 2 232 4 311 1 156 3 69 1 235 1 159 4 70 1 129 8 16 1 236 1 294 1 316 18 75 1 364 4 164 1 
285 1 177 1 248 1 211 1 335 1 245 1 319 1 
285 1 211 1 248 1 177 1 115 1 39 1 319 1 205 1 335 1 245 1 257 1 210 1 
100 1 329 1 299 1 145 1 300 1 353 1 90 1 30 1 281 1 13 1 50 1 
285 1 248 2 177 2 202 1 166 1 299 1 329 1 90 1 301 1 30 1 281 1 13 1 358 1 161 1 335 1 339 1 353 1 50 1 
1 1 166 1 301 1 238 1 281 1 30 2 267 1 172 1 353 1 285 1 177 2 248 2 202 1 182 1 329 1 90 1 13 3 358 1 161 2 188 1 335 2 339 2 50 1 
1 1 166 1 301 1 238 1 281 2 30 2 241 1 267 1 172 1 353 2 285 1 177 2 248 2 202 1 182 1 329 1 155 1 90 1 13 3 161 2 188 1 335 2 339 2 50 2 
213 1 87 1 299 1 329 1 90 1 79 1 238 1 170 1 30 1 281 3 13 4 241 1 161 1 99 1 267 1 222 1 279 1 172 1 353 3 361 1 259 2 296 2 50 3 
213 1 77 1 281 1 170 1 99 1 222 1 172 1 353 1 246 1 177 1 248 1 87 1 231 1 202 1 182 1 13 2 335 1 111 1 339 1 361 1 295 1 47 1 296 2 259 2 50 1 
329 1 353 1 90 1 281 1 50 1 42 1 
214 1 88 1 299 2 329 2 27 1 289 1 217 1 90 3 168 1 281 6 30 2 160 1 13 3 42 1 161 1 305 1 353 7 258 1 342 1 260 1 50 7 
0 1 25 4 134 1 298 1 166 1 262 2 3 2 321 1 301 1 30 1 281 1 119 1 239 3 220 1 224 1 81 2 101 1 8 1 271 1 353 1 85 2 103 1 355 1 285 2 177 2 248 2 202 1 232 2 329 1 156 1 69 1 90 1 235 1 13 1 159 2 358 1 129 3 161 1 335 1 339 1 316 6 258 1 208 2 364 2 194 1 164 1 50 1 
213 1 347 2 299 1 78 1 170 1 281 1 218 1 240 1 99 1 139 1 222 2 353 1 246 1 65 1 152 1 309 2 87 1 277 1 331 2 13 2 206 1 333 2 17 1 162 1 361 1 296 3 259 3 50 1 
329 1 289 1 90 2 281 2 30 1 13 2 42 1 161 1 353 2 258 1 361 1 173 1 50 2 
53 1 299 1 329 1 300 1 90 1 281 4 30 1 13 1 241 1 145 1 353 4 258 1 50 4 
88 1 329 1 90 2 281 2 30 1 13 1 161 1 198 1 172 1 353 2 123 1 260 1 124 1 50 2 
178 1 253 1 215 1 329 1 299 1 353 1 90 1 283 1 281 1 50 1 
305 1 214 1 329 1 353 2 90 1 258 1 30 1 158 1 281 2 13 1 50 2 
53 1 299 1 329 2 300 1 90 2 217 1 281 4 30 2 160 1 13 3 305 1 145 1 172 1 353 5 258 1 50 5 
53 1 299 1 329 2 300 1 90 2 217 1 281 4 57 1 30 2 13 3 305 1 145 1 172 1 353 5 258 1 50 5 
285 1 248 2 177 2 202 1 166 1 299 1 329 1 155 1 90 1 301 1 30 1 281 1 13 1 161 1 335 1 339 1 353 1 50 1 
88 1 329 1 289 1 90 2 168 1 281 1 30 1 13 1 161 1 172 1 353 1 260 1 50 1 
285 1 23 1 59 1 360 1 133 1 
285 1 213 1 1 1 23 2 87 1 180 1 249 1 182 1 277 1 170 1 188 1 94 1 59 1 121 1 360 2 259 2 296 2 327 1 133 2 
23 1 248 1 177 1 38 1 59 1 335 1 360 1 102 1 19 1 
94 1 249 1 59 1 
165 1 100 1 148 1 282 1 
153 1 310 1 165 1 148 1 325 1 291 1 282 1 
135 1 131 1 291 1 
153 1 189 2 310 3 165 1 126 1 148 1 325 1 250 1 307 1 344 1 291 3 282 1 
153 1 310 2 165 1 61 1 148 1 340 1 325 1 291 2 282 1 
153 1 86 1 310 1 165 1 215 1 291 1 253 1 35 1 325 1 307 1 345 1 
153 1 310 1 165 1 325 1 307 1 291 1 282 1 
153 1 310 1 148 1 325 1 307 1 291 1 282 2 
153 2 261 1 310 2 165 1 291 2 282 1 325 2 326 1 307 1 176 1 
153 1 310 3 165 2 291 3 282 1 254 1 45 1 148 1 325 1 340 2 201 1 307 1 345 1 
153 1 178 1 310 2 165 1 215 1 91 1 291 2 282 1 253 2 143 1 148 1 35 1 325 1 340 1 307 1 
153 2 276 1 310 4 165 2 291 4 282 1 61 1 45 1 148 1 325 2 340 2 307 1 345 1 
153 1 310 1 165 1 148 1 325 1 307 1 291 1 282 1 
153 1 24 1 310 4 165 3 250 1 291 4 282 2 189 1 45 1 148 2 340 2 325 1 344 1 345 1 
153 1 310 2 165 1 36 1 204 1 291 2 282 1 324 1 148 1 325 1 340 1 307 1 
153 1 189 2 43 1 310 3 165 1 148 1 325 1 250 1 307 1 344 2 291 3 282 1 
93 2 165 2 92 1 278 1 
153 1 310 1 325 1 307 1 356 1 291 1 
153 1 310 2 165 1 254 1 148 1 340 1 325 1 307 1 291 2 282 1 
136 1 
153 1 310 1 165 1 148 1 325 1 307 1 291 1 282 1 
153 1 310 3 165 1 291 3 282 1 189 1 254 1 148 1 340 1 325 1 307 1 
24 1 165 1 45 1 345 1 
165 1 282 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 130 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
319 2 45 1 261 1 75 1 197 4 262 2 198 2 153 1 342 5 200 1 222 1 156 1 369 1 370 1 227 2 107 1 186 3 12 1 190 1 112 9 376 9 330 2 170 1 377 2 143 1 259 1 379 2 73 6 
319 2 45 1 261 1 75 1 197 4 262 2 198 2 153 1 342 5 200 1 222 1 156 1 369 1 370 1 227 2 107 1 186 3 12 1 190 1 112 9 376 9 330 2 170 1 377 2 143 1 259 1 379 2 73 6 
319 2 45 1 261 1 75 1 197 5 262 2 198 2 153 1 342 6 200 1 222 1 156 1 369 1 370 1 227 2 107 1 186 4 12 1 190 1 112 10 376 10 330 2 170 1 377 2 143 1 259 1 379 2 73 7 
319 2 45 1 261 1 75 1 197 3 262 2 198 2 153 1 342 4 200 1 222 1 369 1 370 1 227 2 107 1 186 2 12 1 190 1 112 7 376 7 330 1 170 1 377 2 143 1 259 1 379 2 73 4 
319 1 45 1 197 2 186 1 12 1 262 1 198 1 153 1 342 3 112 4 222 1 376 4 330 2 170 1 156 1 377 1 227 1 73 3 
319 1 45 1 198 1 342 1 190 1 153 1 112 2 222 1 168 1 376 2 203 1 377 1 143 1 379 1 133 1 227 1 
45 1 197 1 186 1 198 2 153 1 342 2 200 1 112 3 222 1 376 3 377 2 379 1 73 1 
219 1 319 1 45 1 261 1 197 4 262 1 198 2 153 1 342 5 200 1 222 1 156 1 227 1 186 3 12 1 112 9 376 9 330 2 170 1 142 1 377 2 259 1 379 1 73 7 
219 1 319 1 45 1 261 1 197 4 262 1 198 2 153 1 342 5 200 1 222 1 156 1 227 1 186 3 12 1 112 9 376 9 330 2 170 1 142 1 377 2 259 1 379 1 73 7 
339 1 
135 2 104 1 89 1 
44 1 145 2 82 2 24 2 269 2 212 2 61 1 49 2 
44 1 145 2 46 1 1 1 150 1 24 2 123 1 48 1 77 2 362 1 124 1 321 1 155 1 49 3 27 1 244 1 82 2 224 1 269 3 182 2 325 1 209 1 210 1 250 1 275 1 345 1 307 2 212 2 61 1 328 1 94 2 96 2 17 1 38 1 378 1 72 1 98 1 
272 1 145 1 82 1 24 1 269 1 212 1 61 1 49 1 50 1 
9 1 32 1 93 1 212 1 49 1 114 1 201 1 177 1 169 1 204 1 158 1 269 1 89 1 43 1 
145 1 9 1 32 1 24 1 93 2 212 1 49 1 114 1 201 1 177 1 169 1 82 1 158 2 269 1 89 1 
93 1 68 1 158 1 264 1 332 1 
32 1 157 1 93 2 158 2 291 1 264 1 332 1 89 1 
93 1 158 1 264 1 
272 1 145 1 24 1 93 1 61 1 212 1 50 1 49 1 82 1 158 1 268 1 269 1 332 1 
89 1 
32 1 122 1 157 1 93 2 158 2 264 1 332 1 89 1 
74 1 273 1 184 1 32 1 149 1 93 5 264 2 15 1 51 2 230 1 280 2 352 1 157 1 266 1 158 5 311 1 332 2 334 2 89 1 
339 1 
44 2 145 1 24 1 220 1 212 2 49 2 82 1 118 1 269 2 
364 1 191 1 372 1 
44 1 134 1 250 1 275 1 210 1 123 1 77 1 48 1 321 1 49 1 94 1 27 1 17 1 269 1 182 1 325 1 
44 1 145 4 24 1 220 1 212 5 49 5 127 2 204 1 283 1 82 4 269 5 193 1 55 1 39 1 
272 1 145 1 82 1 269 1 212 1 49 1 
145 1 210 1 275 1 250 1 123 1 48 1 77 1 321 1 364 1 212 1 49 2 127 1 94 1 27 1 283 1 17 1 82 1 269 2 182 1 325 1 
44 1 145 3 82 3 24 1 269 3 212 3 49 3 127 1 
272 1 145 1 82 1 269 1 212 1 49 1 
145 1 177 1 82 1 24 1 118 1 269 1 220 1 212 1 49 1 
44 1 145 3 46 1 1 1 150 1 24 2 123 1 48 1 362 1 77 1 124 1 321 1 220 1 155 1 49 4 127 1 201 1 27 1 177 1 244 1 82 3 224 1 158 1 269 4 182 1 325 1 209 1 9 1 210 1 275 1 250 1 345 1 93 1 307 1 212 3 61 1 278 1 94 1 114 1 96 2 169 1 283 1 17 1 18 1 
44 1 145 1 204 1 82 1 269 2 55 1 212 2 49 2 127 1 
145 3 9 1 24 1 93 1 220 1 212 3 49 3 127 2 114 1 201 1 177 1 169 1 215 1 283 1 82 3 18 1 158 1 269 3 89 1 
145 2 24 1 220 1 212 2 364 1 191 1 49 2 127 1 82 2 269 2 
44 1 250 1 275 1 210 1 123 1 77 1 48 1 321 1 49 1 94 1 27 1 17 1 269 1 182 1 325 1 
44 1 275 1 210 1 123 1 77 1 48 1 187 1 321 1 49 1 94 1 27 1 17 1 269 1 132 1 182 1 
146 1 46 1 150 1 124 1 364 2 125 1 78 1 155 1 296 1 244 1 267 1 224 2 84 1 372 2 345 1 163 1 307 4 191 2 95 1 96 2 63 1 356 1 314 1 72 2 
145 1 91 1 201 1 177 1 82 1 269 1 212 1 49 1 
92 1 295 1 
92 1 295 1 
302 1 306 1 
302 1 306 1 
302 1 306 1 
30 1 92 1 295 1 
30 1 92 1 295 1 
92 1 254 1 295 1 
302 1 92 2 306 1 87 1 225 1 295 2 
30 1 92 1 295 1 
147 1 92 1 295 1 
147 1 92 1 295 1 
147 1 92 1 295 1 
44 1 145 2 239 1 49 2 366 1 295 1 82 2 158 1 269 2 249 1 300 1 299 1 108 1 92 1 93 1 254 1 212 2 213 1 327 1 97 1 65 1 69 1 119 1 316 1 
108 3 251 1 13 1 92 2 93 2 346 1 213 2 327 2 192 1 295 2 247 1 158 2 117 2 225 1 260 1 316 2 300 2 299 1 89 1 
319 1 262 1 227 1 
319 1 168 1 227 1 
319 3 168 1 340 1 262 2 164 1 348 1 
319 2 168 1 238 1 340 1 262 1 164 1 
319 2 168 1 340 1 262 1 164 2 
74 3 335 1 239 1 3 1 264 1 125 1 293 2 241 1 51 1 296 1 104 1 207 1 157 1 266 1 158 5 57 1 89 2 135 3 373 2 32 1 93 5 277 1 280 1 95 1 140 1 97 1 65 1 284 2 311 2 314 1 332 4 334 1 
74 8 335 2 149 1 3 2 264 6 125 3 51 2 242 1 296 3 104 3 157 1 266 1 130 1 158 9 57 1 89 5 135 9 373 6 31 1 32 1 93 9 255 1 111 1 280 2 95 3 140 3 97 4 284 6 67 1 68 5 311 6 314 3 332 7 235 5 334 2 
145 1 74 3 335 1 149 1 24 1 3 1 49 1 50 1 125 1 293 1 241 1 51 1 296 1 104 2 82 1 158 3 269 1 268 1 89 3 272 1 373 2 135 4 32 1 93 3 212 1 61 1 277 1 280 1 140 1 95 1 97 1 284 2 311 2 314 1 332 2 334 1 
74 3 335 1 149 1 3 1 125 1 293 1 241 1 51 1 296 1 104 2 130 1 158 2 89 2 135 4 373 2 93 2 277 1 280 1 140 1 95 1 97 1 284 2 311 2 314 1 332 1 334 1 
339 1 
231 1 321 1 
171 1 
210 1 48 1 321 1 
321 1 347 1 
210 1 321 1 
210 1 48 1 188 1 321 2 263 2 331 1 171 1 
100 1 146 2 374 1 307 7 265 1 125 1 34 1 62 1 154 2 367 1 296 1 297 1 224 3 84 3 313 1 72 4 99 1 
100 1 146 2 374 1 307 7 265 1 125 1 34 1 62 1 154 2 367 1 296 1 297 1 224 3 84 3 313 1 72 4 99 1 
100 1 146 2 374 1 307 7 265 1 125 1 34 1 62 1 154 2 367 1 296 1 297 1 224 3 84 3 40 1 313 1 72 4 99 1 
100 1 146 5 150 1 124 1 265 2 199 1 155 1 154 3 125 4 367 1 296 4 297 2 244 1 245 1 224 15 84 10 5 3 226 1 270 1 303 1 374 2 307 31 62 2 34 5 165 1 229 1 140 3 95 3 96 2 313 1 314 3 72 16 317 4 99 1 
146 3 150 2 124 2 265 1 125 1 155 2 365 1 154 2 367 1 296 1 244 2 297 1 245 1 224 4 84 4 374 1 307 9 62 1 34 1 96 4 37 1 313 1 72 5 99 1 
319 2 45 1 77 1 262 1 198 1 342 1 153 1 222 1 129 1 83 1 182 1 227 1 11 1 275 1 136 1 14 1 308 1 112 2 166 1 348 1 94 1 281 1 168 1 115 1 376 2 17 1 377 1 379 1 42 1 73 1 
319 2 45 1 77 1 262 1 198 1 342 1 222 1 202 1 83 1 182 1 227 1 11 1 275 1 136 1 14 1 308 1 348 1 112 3 166 1 94 1 281 1 168 1 376 3 353 1 17 1 377 1 19 1 379 1 42 1 73 2 
319 2 45 1 77 1 262 1 342 1 222 1 83 1 182 1 227 1 275 1 136 1 308 1 112 2 166 1 348 1 94 1 281 1 168 1 376 2 353 1 17 1 19 1 379 1 42 1 73 2 
123 1 77 1 198 1 321 1 202 1 83 2 182 1 56 1 88 1 90 1 274 1 275 1 210 1 308 2 112 1 279 1 94 1 376 1 17 1 377 1 379 2 42 2 195 1 
319 2 77 1 262 1 198 1 153 1 129 1 83 1 182 1 227 1 11 1 275 1 136 1 14 1 308 1 112 1 166 1 348 1 94 1 281 1 168 1 376 1 17 1 377 1 19 1 379 1 42 1 
102 1 
101 1 335 1 47 2 49 1 51 1 201 1 104 2 204 1 157 3 158 5 159 1 9 1 210 1 212 1 110 1 114 1 169 1 116 2 17 1 312 2 21 1 311 2 315 1 217 1 23 1 358 2 74 2 173 2 360 2 123 2 77 2 321 1 264 6 368 1 177 1 29 4 266 1 269 1 181 1 182 2 88 1 89 2 135 2 32 1 275 1 93 5 279 1 94 2 36 1 280 1 141 1 232 1 334 1 236 2 43 1 
9 1 47 1 122 1 93 3 264 2 212 1 110 1 49 1 201 1 114 1 177 1 368 1 169 1 204 1 29 2 157 1 159 1 158 3 269 1 217 1 23 1 43 1 
122 1 264 1 49 1 201 1 368 1 177 1 204 1 29 3 157 1 158 3 159 1 269 1 89 1 9 1 32 1 93 3 212 1 110 1 114 1 169 1 217 1 23 1 43 1 236 1 
9 1 32 1 47 1 122 1 93 3 264 2 212 1 110 1 49 1 201 1 114 1 177 1 368 1 169 1 116 1 204 1 29 3 157 1 159 1 158 3 269 1 217 1 23 1 89 1 236 1 43 1 
145 1 47 4 50 1 49 2 51 1 201 1 204 1 104 2 157 3 246 1 159 1 158 5 9 1 61 1 212 2 110 1 114 1 169 1 310 1 116 4 354 1 71 1 311 1 21 1 312 2 217 1 23 1 358 2 74 1 173 2 360 2 122 1 24 1 264 7 177 1 368 1 82 1 29 4 266 1 268 1 269 2 89 1 272 1 32 1 93 5 280 1 232 1 282 1 334 1 43 1 236 2 
74 1 173 2 360 2 47 2 264 4 49 1 51 1 201 1 368 1 177 1 104 2 204 1 29 4 157 2 266 1 158 4 159 1 269 1 89 2 135 2 9 1 32 1 93 4 212 1 110 1 280 1 114 1 141 1 169 1 232 1 116 2 312 2 21 1 311 1 217 1 23 1 358 2 334 1 236 2 43 1 
145 1 47 2 50 1 49 2 51 1 201 1 204 1 104 2 246 1 157 2 159 1 158 4 9 1 61 1 212 2 110 1 114 1 169 1 310 1 116 2 71 1 311 1 21 1 312 2 217 1 23 1 358 2 74 1 173 2 360 2 24 1 264 4 177 1 368 1 82 1 29 4 266 1 268 1 269 2 89 1 272 1 32 1 93 4 280 1 232 1 334 1 43 1 236 2 
145 1 47 2 50 1 49 2 51 1 201 1 204 1 104 2 246 1 157 2 159 1 158 4 9 1 61 1 212 2 110 1 114 1 169 1 310 1 116 2 71 1 311 1 21 1 312 2 217 1 23 1 358 2 74 1 173 2 360 2 24 1 264 4 177 1 368 1 82 1 29 4 266 1 268 1 269 2 89 1 272 1 32 1 93 4 280 1 232 1 334 1 43 1 236 2 
145 1 47 2 341 1 50 1 49 2 51 1 201 1 204 1 157 2 159 1 158 4 9 1 10 2 59 1 61 1 212 2 110 1 114 1 169 1 310 1 116 2 311 1 21 1 217 1 23 1 357 1 74 1 173 2 360 2 24 1 264 4 177 1 368 1 323 2 82 1 29 4 266 1 268 1 269 2 89 1 272 1 135 2 32 1 93 4 280 1 334 1 43 1 236 2 
145 1 47 3 50 1 49 2 51 1 201 1 204 1 104 2 246 1 157 2 159 1 158 4 9 1 61 1 212 2 110 1 114 1 169 1 310 1 116 3 354 1 71 1 311 1 21 1 312 2 217 1 23 1 358 2 74 1 173 2 360 2 24 1 264 5 177 1 368 1 82 1 29 5 266 1 268 1 269 2 89 1 272 1 32 1 93 4 280 1 232 1 334 1 236 3 43 1 
145 1 47 3 50 1 49 2 51 1 201 1 204 1 104 2 246 1 157 2 159 1 158 4 9 1 61 1 212 2 110 1 114 1 169 1 310 1 116 3 354 1 71 1 311 1 21 1 312 2 217 1 23 1 358 2 74 1 173 2 360 2 24 1 264 5 177 1 368 1 82 1 29 5 266 1 268 1 269 2 89 1 272 1 32 1 93 4 280 1 232 1 334 1 236 3 43 1 
74 1 173 2 360 2 47 2 264 4 49 1 51 1 201 1 368 1 177 1 323 2 204 1 29 4 157 2 266 1 158 4 159 1 269 1 89 1 10 2 135 2 9 1 32 1 59 1 93 4 212 1 110 1 280 1 114 1 141 1 169 1 116 2 21 1 311 1 217 1 23 1 334 1 236 2 43 1 
96 2 46 1 244 1 345 1 163 1 339 1 150 1 124 1 155 1 
44 1 146 1 46 2 150 2 287 1 124 2 364 11 155 2 125 1 26 1 296 2 244 2 84 2 224 6 180 1 5 3 105 1 226 1 372 11 209 1 345 1 307 14 34 1 191 4 229 1 140 2 95 2 96 4 70 1 314 1 72 8 317 3 98 1 
44 1 145 1 46 1 286 1 150 1 123 1 48 1 77 1 124 1 321 1 49 2 155 1 4 1 127 1 27 1 244 1 82 1 224 1 269 2 105 1 182 1 325 1 134 1 209 1 185 1 210 1 275 1 250 1 345 1 307 2 212 1 191 1 94 1 96 2 283 1 17 1 72 1 98 1 
44 2 145 1 146 4 46 3 150 3 48 2 289 2 154 1 155 3 49 3 296 3 297 1 244 3 54 2 105 1 106 1 161 1 209 1 8 2 250 2 210 2 345 3 307 20 212 1 17 2 19 1 313 1 314 2 72 10 123 1 77 3 362 2 124 3 321 2 265 1 364 7 125 3 367 1 127 1 27 2 82 1 224 10 84 8 269 3 182 3 325 2 372 7 275 2 189 2 191 7 34 4 94 3 140 2 95 2 96 6 283 1 381 1 99 1 98 1 
145 1 46 2 0 1 150 2 48 1 152 1 155 2 49 1 244 2 243 1 52 1 53 1 209 1 58 1 210 3 345 2 163 1 307 2 212 1 349 1 64 1 17 3 19 1 218 1 72 1 123 2 77 7 124 2 321 4 127 1 179 1 223 1 82 1 224 1 269 1 182 7 88 1 275 4 279 1 328 2 94 6 96 4 98 1 
145 1 146 1 46 1 150 1 24 1 124 1 220 1 364 1 155 1 49 1 125 1 344 1 296 1 244 1 82 1 84 1 224 2 269 1 105 1 372 1 345 1 307 3 212 1 191 1 140 1 95 1 96 2 314 1 72 1 
46 1 163 1 345 1 150 1 124 1 307 2 364 1 34 1 191 1 155 1 95 1 96 2 63 1 296 1 244 1 84 1 72 2 372 1 
146 1 46 1 163 1 345 1 150 1 124 1 307 2 364 1 191 1 155 1 78 1 125 1 96 2 244 1 84 1 224 2 314 1 372 1 
146 1 46 1 150 1 124 1 364 2 155 1 125 1 296 1 244 1 84 2 224 2 372 2 345 1 163 1 307 4 191 2 34 1 95 1 140 1 96 2 314 1 72 2 
46 1 345 1 150 1 124 1 307 2 364 1 34 1 191 1 155 1 95 1 96 2 63 1 296 1 244 1 223 1 84 1 72 2 372 1 
146 1 46 1 345 1 150 1 124 1 307 2 364 1 191 1 155 1 78 1 125 1 96 2 244 1 223 1 84 1 224 2 314 1 372 1 
146 1 46 1 150 1 124 1 364 2 155 1 125 1 296 1 244 1 223 1 84 2 224 2 372 2 345 1 307 4 191 2 34 1 95 1 140 1 96 2 314 1 72 2 
146 1 46 1 150 1 124 1 364 2 155 1 125 1 296 1 244 1 84 2 224 2 372 2 345 1 307 4 191 2 34 1 95 1 140 1 96 2 314 1 72 2 
44 1 46 1 150 1 123 1 48 1 362 1 77 1 124 1 321 1 49 1 155 1 27 1 244 1 224 1 269 1 182 1 325 1 209 1 210 1 275 1 250 1 345 1 307 2 94 1 96 2 17 1 72 1 98 1 
44 1 46 1 150 1 123 1 48 1 77 1 124 1 290 1 321 1 49 1 155 1 27 1 244 1 224 1 132 1 269 1 182 1 209 1 210 1 275 1 345 1 187 1 307 2 94 1 96 2 17 1 72 1 98 1 
146 1 46 1 150 1 124 1 364 2 155 1 125 1 296 1 244 1 84 2 224 2 105 1 372 2 345 1 307 4 191 2 34 1 95 1 140 1 96 2 314 1 72 2 
146 1 46 1 150 1 48 1 362 1 77 1 124 1 321 1 364 2 125 1 49 1 155 1 27 1 296 1 244 1 224 2 84 2 269 1 182 1 372 2 325 1 8 1 275 1 250 1 210 1 345 1 307 4 34 1 191 2 94 1 95 1 140 1 115 1 96 2 17 1 314 1 72 2 
145 1 46 1 150 1 24 1 124 1 220 1 364 1 125 1 155 1 49 1 296 1 244 1 82 1 224 1 84 1 269 1 105 1 372 1 345 1 253 1 307 3 212 1 34 1 191 1 140 1 95 1 96 2 314 1 72 2 
146 3 285 2 338 1 150 2 361 1 124 2 175 1 155 2 365 1 125 3 296 3 244 2 224 10 84 6 5 1 248 1 226 1 228 2 307 19 138 1 34 3 229 1 140 3 95 3 96 4 355 1 144 1 314 3 72 9 317 2 
146 2 285 1 338 2 150 3 361 1 174 1 124 3 175 1 125 2 155 3 365 1 296 3 244 3 245 2 84 4 224 12 5 2 226 2 228 4 33 1 137 1 307 26 138 2 34 2 16 1 140 3 95 3 96 6 144 1 314 2 72 14 234 1 41 1 317 2 
146 4 285 1 338 2 150 3 361 1 174 1 124 3 175 1 265 1 322 1 154 1 155 3 365 1 125 5 367 1 296 5 297 1 244 3 245 1 224 21 84 8 5 3 226 3 228 4 33 1 137 1 307 41 138 1 34 4 229 1 16 1 140 4 95 4 96 6 355 1 313 1 144 1 314 4 72 20 234 1 41 1 317 4 99 1 
146 4 285 1 338 2 150 4 361 1 174 1 124 4 175 1 265 1 322 1 154 1 155 4 365 1 125 4 367 1 296 5 297 1 244 4 245 2 224 18 84 7 5 3 226 3 228 4 33 1 137 1 307 38 138 1 34 3 229 1 16 1 140 4 95 4 96 8 355 1 313 1 144 1 314 3 72 20 234 1 41 1 317 4 99 1 
146 7 285 1 338 1 150 2 361 1 174 1 124 2 175 1 265 1 154 1 155 2 365 1 125 8 367 1 296 8 297 1 244 2 245 1 224 25 84 14 5 4 226 2 228 4 33 1 137 1 307 52 138 1 34 7 229 2 16 1 140 7 95 7 96 4 70 2 313 1 144 1 314 7 72 27 234 1 41 1 317 4 99 1 
247 1 251 1 92 1 22 1 225 1 213 1 316 1 327 1 300 1 295 1 
69 1 254 1 
79 1 329 1 92 1 139 1 213 1 316 1 327 1 300 1 295 1 
30 1 176 1 
162 1 147 1 87 1 
108 2 251 1 13 1 93 1 92 1 346 1 213 1 327 1 295 1 247 1 158 1 117 1 225 1 260 1 316 1 299 1 300 1 89 1 
108 2 251 1 13 1 93 1 92 1 346 1 213 1 327 1 295 1 247 1 158 1 117 1 225 1 260 1 316 1 299 1 300 1 89 1 
108 2 251 1 13 1 93 1 92 1 346 1 213 1 327 1 295 1 247 1 158 1 117 1 225 1 260 1 316 1 299 1 300 1 89 1 
30 1 176 1 87 1 
30 1 176 1 87 1 
162 1 147 1 
162 1 147 1 87 1 
119 1 366 1 
44 1 145 2 239 1 49 2 240 1 366 1 295 1 82 2 158 1 269 2 249 1 300 1 108 1 346 1 93 1 92 1 254 1 212 2 213 1 327 1 97 1 65 1 117 1 69 1 332 1 119 1 316 1 
46 1 150 1 77 2 124 1 321 1 152 1 49 2 155 1 128 1 179 1 244 1 224 1 269 2 105 1 182 2 301 1 209 1 275 1 210 1 345 1 276 1 375 1 307 2 212 2 328 2 94 2 351 1 96 2 17 1 72 1 98 1 
319 2 275 1 11 1 77 2 262 1 348 1 166 1 94 2 167 1 281 1 168 1 115 1 17 1 83 1 19 1 182 2 172 1 227 1 380 1 
319 2 11 1 275 1 77 1 262 1 348 1 166 1 94 1 167 1 281 1 168 1 17 1 83 1 19 1 333 1 182 1 227 1 
275 1 210 1 123 1 77 1 321 1 279 1 94 1 343 1 17 1 83 1 182 1 380 1 88 1 90 1 
319 2 275 1 11 1 77 1 262 1 348 1 166 1 94 1 167 1 281 1 168 1 17 1 83 1 19 1 182 1 172 1 227 1 380 1 
126 1 
339 1 
74 1 264 1 51 1 104 1 157 1 266 1 158 1 89 2 135 1 32 1 93 1 280 1 232 1 311 1 312 1 358 1 334 1 
335 2 336 2 148 1 151 1 48 3 2 2 51 4 103 2 296 2 206 1 104 6 157 3 158 5 54 2 210 3 347 2 60 2 350 2 115 1 169 2 17 3 20 2 311 8 314 2 318 2 74 9 123 1 77 3 321 10 263 2 264 5 125 2 81 1 266 4 181 1 182 3 89 8 183 1 273 1 184 1 373 6 135 12 32 2 275 4 93 5 188 1 35 2 94 3 280 4 231 3 140 2 95 2 284 6 334 4 
318 1 74 8 335 1 174 1 264 1 125 2 51 2 296 2 104 3 157 1 266 2 158 1 5 1 181 1 226 1 89 5 271 1 135 6 373 5 32 2 33 1 326 1 93 1 60 2 16 1 280 2 140 2 95 2 284 5 311 5 314 2 234 1 41 1 317 1 334 2 
318 1 145 1 74 2 24 1 265 1 49 1 125 1 50 1 367 1 51 1 296 2 297 1 82 1 266 1 158 1 269 1 268 1 272 1 93 1 60 2 61 1 212 1 280 1 66 1 71 1 311 2 334 1 
74 1 184 1 273 1 32 1 51 1 280 1 266 1 311 1 334 1 89 1 
318 1 74 5 373 5 135 10 60 2 125 2 140 2 95 2 296 2 104 5 284 5 54 1 311 5 314 2 89 5 
32 1 157 1 93 1 158 1 264 1 89 1 
101 1 74 2 335 2 149 1 123 2 151 2 77 4 321 1 264 4 51 2 157 2 266 1 158 3 324 1 182 4 181 2 88 1 183 1 275 1 210 1 304 1 93 3 279 1 94 4 280 2 17 1 311 2 315 1 334 2 
44 1 145 2 46 1 1 1 150 1 123 1 24 2 77 1 362 1 48 1 124 1 321 1 155 1 49 3 27 1 244 1 82 2 224 1 269 3 182 1 325 1 209 1 250 1 275 1 210 1 345 1 307 1 212 2 61 1 94 1 96 2 17 1 
74 1 135 4 373 2 335 1 32 2 154 1 51 1 280 1 104 2 284 2 266 1 311 2 181 1 334 1 89 4 
213 1 327 1 294 1 
213 1 327 1 294 1 
247 1 86 1 119 1 213 1 327 1 
213 1 327 1 294 1 
359 1 213 1 327 1 
359 1 213 1 327 1 
359 1 213 1 327 1 
213 1 327 1 
92 1 295 1 
146 2 150 2 124 2 307 8 265 1 154 1 125 1 34 1 155 2 367 1 96 4 296 1 244 2 297 1 245 1 224 4 84 3 313 1 72 4 99 1 
339 1 
146 1 150 1 124 1 307 4 125 1 155 1 34 1 140 1 95 1 96 2 296 1 244 1 224 2 84 2 131 1 314 1 72 2 
146 1 307 7 125 1 34 1 229 1 140 1 95 1 296 1 224 4 84 2 5 1 314 1 72 3 226 1 317 2 
146 5 150 2 124 2 265 2 221 1 154 1 125 3 155 2 367 1 296 3 297 2 244 2 245 2 84 9 224 12 180 1 5 2 307 23 34 4 229 1 95 2 140 2 96 4 70 1 313 1 314 2 72 11 317 2 99 1 
224 1 307 1 317 1 
5 1 307 1 72 1 
146 2 150 1 124 1 307 6 155 1 34 1 125 1 140 1 95 1 96 2 296 1 244 1 224 3 84 3 131 1 54 1 314 1 72 3 
146 1 150 1 174 1 124 1 155 1 365 1 125 2 296 2 244 1 224 6 84 2 5 1 226 1 33 1 307 12 34 1 16 1 140 2 95 2 96 2 314 2 72 6 41 1 234 1 317 1 
146 1 307 6 265 1 125 1 34 1 367 1 296 1 297 1 224 3 84 2 72 3 
146 1 150 1 124 1 307 3 265 1 221 1 34 1 155 1 96 2 297 1 244 1 245 1 84 2 224 2 313 1 72 1 99 1 
146 2 307 8 265 1 125 2 34 1 367 1 296 2 297 1 66 1 84 3 224 4 72 4 
150 1 124 1 307 2 365 1 155 1 34 1 95 1 96 2 296 1 244 1 84 1 72 2 
146 1 150 1 124 1 307 4 125 1 365 1 155 1 34 1 140 1 95 1 96 2 296 1 244 1 224 2 84 2 314 1 72 2 
146 1 150 3 124 3 307 3 265 1 221 1 365 1 155 3 34 1 96 6 244 3 297 1 245 1 224 2 84 2 355 1 72 1 
146 7 150 5 124 5 265 3 221 1 154 1 155 5 365 1 125 5 367 2 296 5 297 3 244 5 245 2 224 18 84 12 131 1 5 3 226 1 270 1 303 1 307 34 165 1 34 5 229 1 140 3 95 3 96 10 355 1 313 1 314 3 72 16 317 4 99 1 
146 2 150 1 174 1 124 1 265 1 154 1 125 1 155 1 365 1 367 1 296 1 244 1 297 1 224 4 84 2 5 1 226 1 307 8 96 2 313 1 72 4 317 1 99 1 
146 2 150 2 174 1 124 2 265 1 154 1 125 1 365 1 155 2 367 1 296 2 297 1 244 2 224 5 84 3 131 1 5 1 226 1 307 11 34 1 229 1 140 1 95 1 96 4 313 1 72 6 317 2 99 1 
146 3 150 3 174 1 124 3 265 1 154 1 155 3 365 1 125 3 367 1 296 3 297 1 244 3 245 1 224 10 84 4 131 1 5 1 226 1 33 1 307 19 34 1 16 1 140 2 95 2 96 6 313 1 314 2 72 9 41 1 234 1 317 1 99 1 
146 3 150 3 174 1 124 3 265 1 154 1 155 3 365 1 125 2 367 1 296 3 297 1 244 3 245 1 224 7 84 5 131 1 5 1 226 1 33 1 307 17 34 2 16 1 140 2 95 2 96 6 313 1 314 1 72 10 41 1 234 1 317 1 99 1 
146 2 150 1 174 1 124 1 265 1 154 1 125 1 155 1 365 1 367 1 296 1 244 1 297 1 224 4 84 2 5 1 226 1 307 8 96 2 313 1 72 4 317 1 99 1 
146 1 150 1 174 1 124 1 155 1 365 1 125 2 296 2 244 1 224 6 84 2 5 1 226 1 33 1 307 12 34 1 16 1 140 2 95 2 96 2 314 2 72 6 41 1 234 1 317 1 
146 3 150 4 174 1 124 4 265 1 154 1 155 4 365 1 125 2 367 1 296 3 297 1 244 4 245 2 224 8 84 5 131 1 5 1 226 1 33 1 307 18 34 2 16 1 140 2 95 2 96 8 313 1 314 1 72 10 234 1 41 1 317 1 99 1 
146 3 150 4 174 1 124 4 365 1 155 4 125 2 296 3 244 4 245 2 224 7 84 6 5 1 226 1 33 1 307 16 34 3 16 1 140 3 95 3 96 8 355 1 314 2 72 9 234 1 41 1 317 1 
146 3 307 7 265 3 125 1 34 3 367 1 296 1 297 3 224 4 84 6 313 1 72 3 99 2 
146 3 150 4 174 1 124 4 265 1 154 1 365 1 155 4 125 2 367 1 296 3 297 1 244 4 245 2 224 8 84 4 5 1 226 1 33 1 307 18 34 1 16 1 140 2 95 2 96 8 355 1 313 1 314 1 72 10 234 1 41 1 317 1 99 1 
44 1 204 1 269 1 212 1 55 1 49 1 113 1 
44 1 320 1 109 1 212 1 49 1 113 1 256 1 257 1 178 1 204 1 269 1 55 1 
339 1 123 1 77 1 182 1 94 1 
44 1 145 1 210 1 275 1 250 1 123 1 48 1 77 1 321 1 212 1 49 2 127 1 94 1 27 1 82 1 17 1 269 2 182 1 
44 1 145 2 9 1 210 2 275 1 250 1 2 1 48 2 151 1 77 1 347 1 321 3 212 2 49 2 127 1 94 1 201 1 177 1 27 1 82 1 17 1 269 2 182 1 
44 1 145 2 9 1 210 2 275 1 252 1 2 1 48 2 151 1 77 2 347 1 321 3 212 2 49 2 127 1 94 2 201 1 177 1 27 1 82 1 17 1 269 2 132 1 182 2 
123 1 77 3 151 1 2 1 48 1 263 1 321 4 264 1 158 2 182 3 89 1 275 1 210 1 32 1 252 1 93 2 347 1 94 3 231 1 169 1 17 1 258 1 194 1 
32 1 210 1 275 1 252 1 123 1 48 1 2 1 93 2 151 1 77 3 347 1 321 4 263 1 264 1 94 3 350 1 231 1 169 1 17 1 158 2 182 3 89 1 
275 1 17 1 77 1 218 1 182 1 94 1 
0 1 123 2 48 1 77 6 321 3 243 1 179 1 298 1 52 1 182 6 58 1 275 3 210 2 188 1 328 1 349 1 94 5 17 2 19 1 218 1 
44 2 145 1 146 2 46 2 150 2 48 1 77 1 362 1 124 2 321 1 364 1 265 1 154 1 125 1 49 2 155 2 367 1 127 1 128 1 27 1 296 1 297 1 244 2 82 1 224 3 84 2 269 2 105 1 182 1 372 1 325 1 8 1 210 1 275 1 250 1 345 2 307 6 212 1 189 1 191 1 94 1 96 4 115 1 17 1 313 1 72 3 99 1 
74 1 336 1 123 1 77 1 321 2 263 1 264 2 51 2 103 1 157 1 266 2 158 3 182 1 89 1 183 1 273 1 184 1 32 1 93 3 94 1 280 2 350 1 231 1 169 1 311 1 20 1 332 1 334 2 
210 1 275 2 148 1 77 2 48 1 263 1 188 1 321 2 94 2 115 1 17 1 218 1 182 2 
275 1 210 1 252 1 123 1 288 1 77 4 321 1 279 1 94 4 115 1 17 1 182 4 88 1 
58 1 210 1 275 2 0 1 151 1 77 2 48 1 321 1 94 2 64 1 17 1 53 1 182 2 381 1 
319 1 168 1 275 1 17 1 123 1 77 1 182 1 227 1 166 1 94 1 
210 1 275 1 77 2 321 1 94 2 351 1 115 1 179 1 17 1 19 1 182 2 
210 2 275 2 123 1 288 1 151 1 77 5 321 3 279 1 94 4 115 1 243 1 179 1 17 2 52 1 182 5 88 1 
7 1 210 2 275 2 123 1 288 1 151 1 77 5 321 3 279 1 94 4 115 1 179 1 17 2 52 1 182 5 88 1 
44 1 145 1 210 1 275 1 123 1 48 1 77 1 321 1 212 1 49 2 127 1 94 1 27 1 82 1 17 1 269 2 132 1 182 1 
58 1 210 1 275 2 0 1 151 1 77 1 48 1 188 1 321 1 94 1 17 1 298 1 182 1 
44 1 309 1 76 1 216 1 363 1 
44 1 9 1 32 1 337 1 76 2 93 2 363 2 309 1 201 1 114 1 177 1 169 1 216 2 18 1 158 2 332 1 120 1 160 1 89 1 
276 1 363 1 375 1 212 1 49 1 309 1 216 1 269 1 301 1 
309 1 337 1 160 1 
339 1 
222 1 45 1 376 1 377 1 198 1 342 1 112 1 
376 1 379 1 42 1 
45 1 211 1 198 1 342 1 153 1 190 2 112 3 80 1 222 1 376 3 205 1 377 1 
222 1 45 1 376 2 330 1 377 1 198 1 342 1 112 2 73 1 
319 1 197 1 262 1 198 1 153 1 342 1 112 1 376 1 170 1 377 1 227 1 
45 1 376 1 377 1 198 1 342 1 153 1 112 1 
222 1 45 2 376 1 377 1 198 1 153 1 112 1 
45 1 198 2 342 1 153 1 112 2 214 1 376 2 28 1 377 2 371 1 
45 1 261 1 197 1 186 1 198 1 153 1 342 2 112 3 222 1 376 3 377 1 259 1 73 2 
319 2 45 1 196 1 262 1 198 1 342 1 153 1 112 2 348 1 222 1 168 1 376 2 377 1 227 1 73 1 
45 1 197 1 186 1 198 2 153 1 342 2 112 4 222 1 376 4 330 1 156 1 377 2 73 2 
222 1 45 1 376 1 377 1 198 1 342 1 153 1 112 1 
45 2 197 1 186 1 211 1 198 1 190 1 342 3 112 4 222 2 376 4 205 1 377 1 237 1 73 2 
45 1 121 1 198 1 342 1 153 1 292 1 112 2 222 1 376 2 377 1 142 1 73 1 
45 1 211 1 198 1 342 1 153 1 190 2 112 3 222 1 376 3 205 2 233 1 377 1 
305 1 25 2 6 1 342 2 
208 1 376 1 377 1 198 1 153 1 112 1 
222 1 45 1 261 1 376 2 377 1 198 1 342 1 153 1 112 2 73 1 
85 1 
222 1 45 1 376 1 377 1 198 1 342 1 153 1 112 1 
222 1 261 1 45 1 376 3 377 1 198 1 342 1 190 1 153 1 112 3 73 1 
197 1 186 1 342 1 237 1 
45 1 342 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (192,241) 234 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (192,241) 234 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (192,241) (231,356) (231,356) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (192,241) (231,356) (231,356) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (192,241) (231,356) (231,356) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (192,241) (231,356) (231,356) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (192,241) 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (130,182) 363 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (129,133) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (34,335,365) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (129,133) (129,133) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 351 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (130,182) 363 62 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (129,133) (129,133) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (129,133) (129,133) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (129,133) (129,133) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (129,133) (129,133) 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (129,133) (129,133) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (129,133) (129,133) 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 351 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 119 187 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 46 137 25 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 222 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (130,182) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 143 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (130,182) (130,182) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (130,182) 363 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 149 175 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException (129,133) (129,133) 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (129,133) (129,133) 161 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 46 137 354 (118,238) (118,238) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 149 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 747 | return null
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
234 1 268 2 241 1 109 1 276 1 320 2 144 1 284 1 74 1 
234 1 268 2 241 1 109 1 276 1 320 2 144 1 284 1 74 1 
356 1 128 1 252 1 159 1 268 2 241 1 89 1 231 1 271 1 286 1 109 1 167 1 144 1 320 2 192 1 74 1 
356 1 128 1 252 1 159 1 268 2 241 1 89 1 231 1 271 1 286 1 109 1 167 1 144 1 320 2 192 1 74 1 
356 1 128 1 252 1 159 1 268 2 241 1 89 1 231 1 271 1 286 1 109 1 167 1 144 1 320 2 192 1 74 1 
356 1 128 1 252 1 159 1 268 2 241 1 89 1 231 1 271 1 286 1 109 1 167 1 144 1 320 2 192 1 74 1 
76 3 173 1 159 1 268 4 89 1 369 2 65 1 205 1 139 1 82 2 195 1 109 1 167 1 144 1 320 4 276 3 236 1 74 1 
76 1 128 1 173 1 268 2 89 1 305 1 271 1 286 1 316 1 195 1 109 1 167 1 144 1 320 2 341 1 74 1 
268 1 241 1 109 1 320 1 144 1 74 1 
351 1 340 1 297 1 
345 1 
7 2 270 1 
182 1 278 1 308 2 7 1 270 1 24 2 324 2 257 1 142 1 363 1 86 1 
133 1 7 1 270 1 
34 1 3 1 365 1 346 1 297 1 217 1 233 1 335 1 248 1 307 1 340 1 60 1 277 1 289 1 
335 1 7 1 
170 1 34 1 42 1 317 1 277 1 
170 1 34 2 42 1 202 1 340 1 168 1 297 1 277 2 
170 1 34 1 277 1 
34 1 133 1 42 1 129 1 7 1 270 1 277 1 
297 1 
170 1 34 2 42 1 228 1 340 1 168 1 297 1 277 2 
51 1 34 5 170 2 52 1 213 1 297 1 204 1 42 2 186 2 350 2 208 1 112 1 340 1 168 1 196 2 198 1 277 5 342 1 237 1 
87 1 2 1 293 1 346 2 308 1 162 1 358 1 24 1 324 1 333 1 44 1 46 1 353 1 72 1 300 1 307 2 191 1 17 1 60 1 86 1 
351 1 
346 1 7 1 349 1 206 1 248 1 110 1 307 1 48 1 60 1 
293 2 346 2 7 1 333 1 206 1 353 2 248 1 110 1 307 2 60 2 
293 1 19 1 353 1 346 1 248 1 307 1 60 1 
7 1 48 1 349 1 
182 1 34 1 62 1 293 1 308 1 7 2 270 1 333 1 233 1 335 1 44 1 235 1 277 1 363 1 346 1 349 1 24 1 324 1 217 1 353 1 248 1 307 1 60 1 289 1 86 1 
206 1 3 1 293 1 353 1 346 2 307 2 298 1 60 2 333 1 
34 1 293 2 346 2 330 1 7 1 349 1 297 1 333 2 217 1 233 1 335 1 44 1 353 2 235 1 248 1 307 2 277 1 60 2 289 1 
7 1 349 1 
308 1 324 1 24 1 86 1 
308 1 324 1 24 1 86 1 
366 1 104 2 13 1 83 1 254 1 47 1 275 1 223 1 
233 1 293 1 353 1 346 1 248 1 307 1 39 1 60 1 
293 1 346 1 7 1 349 1 333 1 206 1 353 1 248 1 110 1 307 1 60 1 
293 2 19 1 353 2 346 2 248 1 307 2 39 1 60 2 
212 1 242 1 
212 1 242 1 
28 1 136 1 
28 1 136 1 
28 1 136 1 
171 1 212 1 242 1 
212 1 242 1 163 1 
28 1 212 2 247 1 242 2 136 1 37 1 
171 1 212 1 242 1 
171 1 212 1 242 1 
212 1 15 1 242 1 
212 1 15 1 242 1 
212 1 15 1 242 1 
1 1 34 2 113 2 253 1 212 2 56 1 227 1 242 2 297 1 311 2 12 2 103 3 45 1 247 1 178 2 250 1 259 2 277 2 50 1 
34 1 224 1 293 2 4 1 311 1 163 1 11 1 206 1 12 1 259 1 277 1 321 1 212 1 56 1 346 2 77 1 242 1 100 1 103 1 352 1 353 2 178 1 307 2 60 2 
159 1 89 1 167 1 
316 1 89 1 167 1 
266 1 245 1 159 2 316 1 89 3 101 1 
266 1 245 1 159 1 316 1 89 2 265 1 
266 1 245 2 159 1 316 1 89 2 
114 1 34 5 224 1 4 1 329 1 331 1 255 1 297 2 313 1 312 2 204 1 121 1 186 1 42 4 189 1 337 1 318 1 168 1 340 1 93 1 277 5 170 1 51 3 321 1 20 1 345 3 350 1 111 2 112 2 196 1 33 2 32 1 
114 3 34 9 357 1 295 1 329 2 134 1 331 3 255 3 297 5 313 3 312 6 204 1 138 5 42 7 186 2 189 1 337 3 317 5 318 3 340 1 168 1 277 9 170 6 51 8 321 4 345 9 213 1 304 1 148 1 244 1 350 2 111 6 112 6 196 2 32 2 
114 1 34 3 329 1 331 1 255 1 297 3 313 2 312 2 121 1 42 2 186 1 337 1 318 1 340 1 93 1 277 3 51 3 321 1 345 4 213 1 350 1 111 2 112 2 196 1 32 1 33 1 
114 2 34 4 329 1 134 1 331 2 255 2 297 4 313 3 312 4 121 1 186 1 42 3 337 2 318 2 340 1 93 1 277 4 51 5 321 2 345 7 213 1 304 1 244 1 350 1 111 4 112 4 196 1 32 1 33 2 
351 1 17 1 181 1 
17 1 185 1 
221 1 
87 1 17 1 
87 1 108 1 17 3 162 1 73 1 181 2 
87 1 17 1 162 1 
17 1 125 1 
114 1 238 1 115 3 36 1 364 4 96 1 183 2 99 1 118 1 322 1 323 1 164 3 68 1 122 1 337 1 155 7 354 2 
114 1 238 1 115 3 36 1 364 4 96 1 183 2 99 1 118 1 322 1 323 1 164 3 68 1 122 1 337 1 155 7 354 2 
114 1 238 1 115 3 36 1 364 4 96 1 183 2 99 1 118 1 322 1 323 1 164 3 68 1 122 1 337 1 360 1 155 7 354 2 
157 1 114 4 115 15 291 1 36 2 254 1 183 5 117 1 118 1 331 3 255 3 164 10 68 2 122 5 13 1 337 4 47 1 318 3 169 4 238 1 126 1 145 1 96 1 364 16 146 1 99 1 322 2 323 2 326 3 219 1 104 2 83 1 155 31 354 3 
114 1 115 4 36 1 63 1 254 2 183 3 118 1 164 4 68 1 122 1 13 2 337 1 190 1 47 2 238 1 364 5 146 1 99 1 322 1 323 1 104 4 83 2 155 9 354 2 
2 1 159 1 268 2 308 1 89 2 69 1 188 1 316 1 72 1 167 1 276 1 320 2 144 1 74 1 76 1 173 1 97 1 98 1 101 1 243 1 324 1 24 1 153 1 286 1 30 1 107 1 106 1 195 1 109 1 288 1 
2 1 159 1 268 3 308 1 269 1 89 2 334 1 69 1 188 1 316 1 72 1 167 1 320 3 276 2 74 1 76 1 173 1 97 1 98 1 101 1 243 1 324 1 24 1 58 1 153 1 286 1 30 1 106 1 195 1 109 1 
2 1 159 1 268 2 308 1 89 2 334 1 69 1 188 1 316 1 72 1 167 1 320 2 276 2 76 1 173 1 97 1 98 1 101 1 324 1 24 1 58 1 153 1 286 1 30 1 195 1 
87 1 2 1 268 1 308 1 269 1 283 1 24 1 324 1 285 1 69 2 153 2 286 2 287 1 71 1 30 2 16 1 109 1 72 1 17 1 84 1 320 1 74 1 86 1 
2 1 159 1 268 1 308 1 89 2 69 1 188 1 316 1 72 1 167 1 320 1 144 1 74 1 97 1 98 1 101 1 243 1 324 1 24 1 58 1 153 1 286 1 30 1 106 1 109 1 288 1 
301 1 
200 1 3 1 6 1 7 1 297 1 8 1 204 1 335 1 336 1 338 1 168 1 340 1 170 3 129 1 346 1 347 1 79 1 217 1 350 1 218 2 307 1 132 1 34 3 133 1 225 1 270 1 313 1 233 1 186 1 94 1 277 3 51 1 365 1 367 4 55 1 147 1 57 1 151 1 248 1 156 2 112 1 328 1 196 1 60 1 61 2 289 1 
200 1 3 1 6 1 7 1 297 1 8 1 204 1 335 1 336 1 338 1 168 1 340 1 170 3 129 1 347 1 346 1 79 1 217 1 350 1 218 2 307 1 132 1 34 3 133 1 225 1 270 1 313 1 233 1 186 1 94 1 277 3 51 1 365 1 367 4 55 1 147 1 57 1 151 1 248 1 156 2 112 1 328 1 196 1 60 1 61 2 289 1 
34 4 251 2 200 1 3 1 297 1 204 1 186 1 233 1 335 1 166 2 336 1 340 1 168 2 94 1 211 1 277 4 170 4 51 1 365 1 367 4 345 2 346 1 147 2 79 1 151 1 217 1 350 1 218 2 263 1 248 1 156 2 328 2 112 1 307 1 196 1 60 1 61 2 132 1 289 1 
2 1 200 1 3 1 5 1 329 1 297 2 8 2 204 1 335 1 336 1 338 2 16 1 72 1 17 1 340 1 168 3 210 1 170 6 343 1 345 2 346 1 79 1 24 2 217 1 350 1 218 2 263 1 307 1 86 2 132 1 87 1 34 5 308 2 313 2 186 1 233 1 94 1 277 5 51 2 365 1 279 1 367 4 147 2 57 1 151 1 324 2 287 1 248 1 156 2 328 2 112 2 196 1 60 1 61 2 289 1 
34 3 3 1 200 1 228 1 233 1 335 1 336 1 168 1 94 1 277 3 170 2 365 1 367 2 346 1 79 1 151 1 217 1 218 1 248 1 307 1 60 1 289 1 
34 3 3 1 200 1 228 1 297 1 233 1 335 1 336 1 340 1 168 1 94 1 277 3 170 1 365 1 367 3 346 1 79 1 151 1 217 1 248 1 307 1 156 1 60 1 289 1 
34 3 3 1 200 1 228 1 297 1 233 1 335 1 336 1 168 1 340 1 94 1 277 3 170 2 365 1 367 3 346 1 79 1 151 1 217 1 218 1 248 1 307 1 156 1 60 1 289 1 61 1 
200 1 3 1 6 1 7 1 297 1 8 1 204 1 335 1 336 1 338 1 340 1 168 2 170 5 129 1 346 1 347 1 79 1 217 1 350 1 218 3 307 1 132 1 34 4 133 1 225 1 228 1 270 1 313 1 233 1 186 1 94 1 277 4 51 1 365 1 367 3 55 1 147 1 368 1 57 1 151 1 248 1 112 1 328 1 156 1 196 1 60 1 61 3 289 1 
3 1 200 1 297 2 8 2 204 1 335 1 336 1 338 2 168 2 340 1 170 4 346 1 345 2 79 1 217 1 350 1 218 2 263 1 307 1 132 1 34 4 313 2 233 1 186 1 94 1 277 4 51 1 365 1 367 4 147 2 57 1 151 1 248 1 112 1 328 2 156 2 196 1 60 1 289 1 61 2 
200 1 3 1 6 1 7 1 297 1 8 1 204 1 335 1 336 1 338 1 168 1 340 1 170 2 129 1 347 1 346 1 79 1 217 1 350 1 218 1 307 1 132 1 34 3 133 1 270 1 313 1 186 1 233 1 94 1 277 3 51 1 365 1 367 3 55 1 147 1 57 1 151 1 248 1 112 1 328 1 156 1 196 1 60 1 289 1 61 1 
200 1 3 1 6 1 7 1 297 1 8 1 204 1 335 1 336 1 338 1 168 1 340 1 170 2 129 1 347 1 346 1 79 1 217 1 350 1 218 1 307 1 132 1 34 3 133 1 270 1 313 1 186 1 233 1 94 1 277 3 51 1 365 1 367 3 55 1 147 1 57 1 151 1 248 1 112 1 328 1 156 1 196 1 60 1 289 1 61 1 
251 1 200 1 3 1 7 1 297 1 204 1 335 1 166 1 336 1 168 1 340 1 211 1 170 2 129 1 346 1 345 1 79 1 217 1 350 1 218 1 307 1 132 1 34 3 133 1 270 1 186 1 233 1 94 1 277 3 51 1 365 1 367 3 55 1 147 1 151 1 154 1 248 1 112 1 328 1 156 1 372 1 196 1 60 1 289 1 61 1 
238 1 364 2 36 1 366 1 183 1 254 1 99 1 118 1 322 1 164 1 351 1 13 1 104 2 83 1 155 2 337 1 47 1 354 1 275 1 223 1 
115 1 364 1 366 1 254 1 64 1 119 1 326 1 13 1 104 2 187 1 83 1 155 2 47 1 169 1 223 1 
87 1 2 1 115 1 293 1 308 1 254 1 309 1 162 1 64 1 332 1 358 1 120 1 333 1 206 1 44 1 14 1 13 1 92 1 47 1 72 1 300 1 191 1 17 1 364 1 366 1 346 2 324 1 24 1 27 1 29 1 353 1 104 2 83 1 155 2 307 2 60 1 86 1 223 1 
87 1 182 1 2 1 115 2 293 1 116 1 254 2 308 1 309 1 162 1 64 1 137 1 310 1 358 1 333 1 232 1 44 1 46 1 13 2 47 2 72 1 300 1 191 1 17 1 366 2 346 2 130 1 24 1 324 1 25 1 353 1 104 4 83 2 155 2 307 2 60 1 223 2 86 1 
364 1 366 1 254 1 308 1 24 1 324 1 306 1 27 1 13 1 104 2 83 1 155 1 47 1 222 1 223 1 86 1 
114 1 115 1 254 1 7 1 64 1 331 1 255 1 13 1 47 1 337 1 318 1 364 1 366 1 349 1 150 1 104 2 83 1 155 2 223 1 
18 1 364 1 366 1 254 1 13 1 104 2 83 1 155 1 47 1 337 1 318 1 275 1 223 1 
114 1 115 1 366 1 280 1 254 1 331 1 13 1 104 2 83 1 155 1 47 1 275 1 223 1 
114 1 115 1 364 1 366 1 254 1 331 1 255 1 13 1 104 2 83 1 155 2 47 1 337 1 318 1 275 1 223 1 
18 1 364 1 366 1 254 1 306 1 13 1 104 2 83 1 155 1 47 1 337 1 318 1 223 1 
114 1 115 1 366 1 280 1 254 1 331 1 306 1 13 1 104 2 83 1 155 1 47 1 223 1 
114 1 115 1 364 1 366 1 254 1 331 1 255 1 306 1 13 1 104 2 83 1 155 2 47 1 337 1 318 1 223 1 
114 1 115 1 364 1 366 1 254 1 331 1 255 1 13 1 104 2 83 1 47 1 337 1 155 2 318 1 223 1 
182 1 308 1 324 1 24 1 86 1 
308 1 143 1 324 1 24 1 86 1 
114 1 115 1 364 1 366 1 254 1 331 1 64 1 255 1 13 1 104 2 83 1 155 2 47 1 337 1 318 1 223 1 
182 1 308 1 107 1 130 1 324 1 24 1 
114 1 115 1 364 1 366 1 254 1 331 1 64 1 7 1 229 1 255 1 349 1 13 1 104 2 83 1 155 2 337 1 47 1 318 1 223 1 
114 3 115 10 63 1 183 3 254 2 184 1 117 1 331 3 255 3 164 6 40 2 122 3 13 2 47 2 337 3 318 3 169 2 302 1 364 9 22 1 23 1 81 1 326 1 219 1 104 4 246 1 83 2 155 19 249 1 131 2 
114 1 115 8 63 1 254 1 184 1 331 1 255 1 40 4 13 1 47 1 337 1 318 1 302 2 169 2 364 8 22 1 23 2 26 1 326 2 219 2 104 2 83 1 155 16 264 1 249 1 131 1 
114 2 115 12 63 1 183 1 254 2 184 1 117 1 331 2 255 2 164 3 40 4 122 2 13 2 47 2 337 2 319 1 318 2 169 4 302 1 364 11 22 1 23 2 81 1 26 1 326 3 219 3 104 4 83 2 155 23 264 1 249 1 131 1 
114 2 115 12 63 1 183 2 254 2 184 1 117 1 331 2 255 2 164 4 40 4 122 2 13 2 47 2 337 2 319 1 318 2 169 4 302 1 364 11 22 1 23 2 81 1 26 1 326 3 219 3 104 4 83 2 155 23 264 1 249 1 131 1 
114 8 115 24 36 3 63 1 183 8 254 1 184 1 117 2 118 3 331 5 255 5 164 13 40 4 122 5 13 1 47 1 337 8 318 5 95 2 169 4 302 1 238 3 364 27 22 1 99 3 23 1 322 3 26 1 326 4 219 2 104 2 83 1 155 51 354 3 264 1 249 1 131 1 
1 1 12 1 253 1 212 1 247 1 178 1 242 1 311 1 259 1 75 1 
352 1 163 1 
207 1 12 1 325 1 212 1 178 1 242 1 90 1 311 1 259 1 
1 1 34 1 113 1 253 1 212 1 56 1 242 1 297 1 311 1 12 1 103 2 45 1 247 1 178 1 250 1 277 1 259 1 50 1 
1 1 34 1 113 1 253 1 212 1 56 1 242 1 297 1 311 1 12 1 103 2 45 1 247 1 178 1 250 1 277 1 259 1 50 1 
1 1 34 1 113 1 253 1 212 1 56 1 242 1 297 1 311 1 12 1 103 2 45 1 247 1 178 1 250 1 277 1 259 1 50 1 
171 1 37 1 80 1 
171 1 37 1 80 1 
158 1 15 1 
158 1 15 1 37 1 
77 1 100 1 
113 1 34 1 224 1 4 1 293 2 88 1 311 1 163 1 11 1 206 1 12 1 42 1 45 1 277 1 259 1 321 1 212 1 346 2 77 1 242 1 100 1 103 1 352 1 353 2 178 1 307 2 60 2 
171 1 80 1 
158 1 15 1 37 1 
87 1 2 1 115 1 308 2 254 1 309 1 64 1 123 1 124 1 13 1 47 1 72 1 17 1 142 2 193 1 239 1 364 1 366 1 346 2 21 1 324 2 24 2 27 1 104 2 83 1 155 2 307 2 222 1 180 1 60 2 223 1 
2 1 159 1 97 1 308 2 89 2 101 1 243 1 24 2 324 2 10 1 58 1 153 1 316 1 107 1 188 1 371 1 72 1 167 1 355 1 
2 1 159 1 97 1 308 1 89 2 101 1 243 1 24 1 324 1 58 1 153 1 316 1 188 1 371 1 361 1 72 1 167 1 
87 1 2 1 308 1 24 1 324 1 10 1 41 1 153 1 287 1 16 1 72 1 17 1 84 1 86 1 
2 1 159 1 97 1 308 1 89 2 101 1 243 1 24 1 324 1 10 1 58 1 153 1 316 1 188 1 371 1 72 1 167 1 355 1 
127 1 
182 1 308 1 7 1 270 1 363 1 324 1 24 1 86 1 
51 1 5 1 345 4 329 1 297 4 313 2 312 2 204 1 186 1 350 1 111 2 112 2 354 1 340 2 196 1 
51 1 52 1 351 1 112 1 340 1 297 1 198 1 
34 1 170 1 51 1 345 1 57 1 297 2 8 1 204 1 313 1 186 1 350 1 338 1 112 1 340 1 168 1 196 1 277 1 
2 1 308 1 149 1 175 1 24 1 324 1 204 1 186 1 350 1 72 1 196 1 86 1 
133 1 5 1 329 1 7 1 270 1 297 2 230 1 312 2 204 1 313 1 186 1 258 1 340 1 169 1 51 2 129 1 345 2 348 1 26 1 326 1 350 1 219 1 111 2 112 2 196 1 
51 2 114 1 34 1 133 1 36 1 129 1 6 1 7 1 99 1 161 1 270 1 322 1 204 1 186 1 350 1 337 1 112 1 258 2 196 1 277 1 
51 1 52 1 297 1 204 1 186 1 350 1 112 1 340 1 196 1 198 1 
114 2 51 5 345 10 331 2 348 1 255 2 297 5 25 1 312 5 313 5 337 2 111 5 258 2 318 2 112 5 
34 1 170 1 340 1 168 1 297 1 277 1 
87 1 34 3 2 1 294 1 5 2 329 2 308 4 204 1 186 2 16 1 72 1 17 1 168 2 277 3 343 1 51 2 170 4 172 2 54 1 279 1 213 1 174 1 324 4 24 4 350 2 287 1 112 2 196 2 86 2 
178 1 209 1 259 1 
253 1 327 1 178 1 100 1 259 1 
178 1 209 1 259 1 
178 1 209 1 259 1 
105 1 178 1 259 1 
105 1 178 1 259 1 
105 1 178 1 259 1 
178 1 259 1 
212 1 242 1 
114 1 238 1 115 4 364 4 146 1 36 1 183 2 254 2 99 1 118 1 322 1 164 3 122 1 13 2 104 4 83 2 337 1 155 8 47 2 354 1 
238 1 114 1 115 3 36 1 364 3 183 2 118 1 99 1 322 1 164 2 351 1 337 1 155 6 354 1 
114 1 115 2 364 2 183 1 254 1 78 1 331 1 255 1 164 2 122 1 13 1 104 2 83 1 47 1 337 1 155 4 318 1 
114 1 115 4 364 3 183 1 117 1 331 1 255 1 164 2 326 1 122 1 219 1 155 7 337 1 318 1 169 2 
114 3 115 12 36 2 183 5 254 2 117 1 118 1 331 2 255 2 119 1 164 9 122 4 13 2 337 3 47 2 318 2 169 2 95 1 238 1 364 11 146 2 99 1 322 2 326 2 102 1 104 4 83 2 155 23 354 1 
115 1 155 1 169 1 
326 1 364 1 155 1 
114 1 115 3 364 3 254 1 183 2 78 1 331 1 255 1 164 3 25 1 122 1 104 2 13 1 83 1 47 1 155 6 337 1 318 1 
115 1 364 1 63 1 254 1 26 1 326 1 219 1 13 1 104 2 83 1 47 1 155 2 169 1 
114 1 115 3 364 3 36 1 183 1 99 1 322 1 164 2 122 1 337 1 155 6 
238 1 115 2 364 1 36 1 146 1 183 1 254 1 118 1 322 1 164 2 102 1 122 1 13 1 104 2 83 1 155 3 47 1 
114 2 115 5 36 2 364 5 63 1 254 1 183 3 161 1 99 1 322 2 164 5 122 2 104 2 13 1 83 1 47 1 155 10 337 2 
364 2 63 1 254 1 164 1 122 1 13 1 104 2 83 1 47 1 337 1 155 2 318 1 
114 1 115 2 364 2 63 1 183 1 254 1 331 1 255 1 164 2 122 1 13 1 104 2 83 1 47 1 337 1 155 4 318 1 
115 2 146 1 36 1 364 1 63 1 254 3 183 1 322 1 164 2 81 1 102 1 122 1 13 3 104 6 83 3 155 3 47 3 
157 1 114 5 291 1 115 18 36 3 63 1 254 5 183 7 117 1 118 1 331 3 255 3 164 12 122 5 13 5 47 5 337 5 318 3 169 4 238 1 145 1 146 2 364 16 78 1 99 2 322 3 81 1 102 1 326 3 219 1 104 10 83 5 155 34 354 1 
114 4 115 10 36 2 63 1 254 2 183 5 161 1 118 1 331 1 255 2 164 9 122 4 314 1 13 2 359 1 47 2 337 5 318 2 169 1 49 1 238 1 146 1 364 14 99 2 322 2 194 1 26 1 326 1 219 1 104 4 83 2 155 24 354 1 
114 2 115 8 36 1 63 1 183 3 254 3 117 1 118 1 331 1 255 3 164 5 122 2 314 1 13 3 359 1 47 3 337 4 318 3 49 1 169 2 238 1 146 1 364 12 78 1 99 1 322 1 194 1 26 1 326 1 219 1 104 6 83 3 155 20 354 1 
114 3 115 7 36 2 63 1 254 2 183 3 161 1 118 1 164 4 122 1 13 2 337 3 47 2 169 1 238 1 364 8 78 1 99 2 322 2 26 1 326 1 219 1 104 4 83 2 155 15 354 1 
114 3 115 7 36 2 63 1 254 2 183 4 161 1 118 1 164 7 122 3 13 2 337 3 47 2 169 1 238 1 364 8 78 1 99 2 322 2 26 1 326 1 219 1 104 4 83 2 155 15 354 1 
114 4 115 10 36 2 63 1 254 2 183 5 161 1 118 1 331 1 255 2 164 9 122 4 314 1 13 2 359 1 47 2 337 5 318 2 169 1 49 1 238 1 146 1 364 14 99 2 322 2 194 1 26 1 326 1 219 1 104 4 83 2 155 24 354 1 
115 1 364 1 63 1 254 1 26 1 326 1 219 1 13 1 104 2 83 1 47 1 155 2 169 1 
115 1 364 1 63 1 254 2 78 1 26 1 326 1 219 1 13 2 104 4 83 2 47 2 155 2 169 1 
115 1 364 1 63 1 254 2 81 1 26 1 326 1 219 1 13 2 104 4 83 2 47 2 155 2 169 1 
114 1 238 2 115 4 36 3 364 3 183 3 118 1 99 1 322 3 164 6 122 3 155 7 337 1 
115 1 364 1 63 1 254 2 81 1 26 1 326 1 219 1 13 2 104 4 83 2 47 2 155 2 169 1 
206 1 290 1 3 1 346 1 307 1 60 1 298 1 
290 1 267 1 3 1 346 1 262 1 298 1 67 1 206 1 177 1 307 1 339 1 60 1 
87 1 2 1 351 1 287 1 308 1 16 1 72 1 17 1 324 1 24 1 86 1 
87 1 2 1 293 1 346 2 308 1 162 1 358 1 24 1 324 1 333 1 206 1 353 1 72 1 307 2 300 1 17 1 60 1 86 1 
87 2 2 1 293 2 308 1 162 2 358 1 333 1 206 1 233 1 300 1 72 1 17 3 125 1 172 1 346 2 214 1 324 1 24 1 217 1 353 1 248 1 307 2 60 2 
87 2 2 1 293 2 135 1 308 2 162 2 358 1 333 1 206 1 233 1 273 1 72 1 17 3 125 1 172 1 346 2 214 1 324 2 24 2 217 1 353 1 248 1 307 2 60 2 
87 1 34 2 170 1 2 1 292 1 172 1 308 3 162 1 214 1 297 1 24 3 324 3 282 1 185 1 273 1 72 1 17 4 340 1 125 1 277 2 181 1 86 1 289 1 
87 1 34 2 170 1 2 1 172 1 308 3 162 1 214 1 297 1 24 3 324 3 185 1 273 1 370 1 72 1 17 4 340 1 125 1 277 2 181 1 86 1 289 1 
2 1 308 1 72 1 362 1 324 1 24 1 
87 2 2 2 296 1 226 1 308 7 261 1 162 1 24 6 324 7 272 1 58 1 124 1 107 1 72 3 362 1 179 1 31 1 17 3 142 1 73 1 86 2 
114 1 87 1 182 1 115 3 2 1 36 1 293 1 183 2 254 2 308 1 118 1 162 1 64 1 137 1 358 1 164 2 333 1 206 2 232 1 46 1 13 2 337 1 47 2 72 1 191 1 300 1 17 1 238 1 364 3 366 2 346 2 130 1 99 1 322 1 24 1 324 1 353 1 104 4 83 2 107 1 155 6 307 2 354 1 180 1 60 1 223 2 
34 3 308 1 297 1 38 1 185 1 204 2 186 2 42 1 141 1 17 2 340 1 168 1 277 3 51 1 170 2 52 1 174 1 24 1 324 1 281 1 350 2 370 1 112 1 196 2 198 1 181 1 86 1 289 1 
2 1 308 1 72 1 149 1 362 1 324 1 24 1 
87 1 2 1 308 4 24 4 324 4 299 1 273 1 107 1 287 1 16 1 72 1 17 1 86 1 
87 1 2 1 172 1 344 1 308 2 261 1 162 1 24 2 324 2 272 1 152 1 256 1 72 2 17 1 
2 1 316 1 188 1 308 1 89 1 72 1 167 1 324 1 24 1 86 1 
87 1 2 1 193 1 308 2 24 2 324 2 58 1 124 1 107 1 72 1 17 1 
87 2 2 2 172 1 226 1 308 5 24 4 324 5 299 1 124 1 287 1 107 1 16 1 72 2 179 1 17 3 86 1 
87 2 2 2 172 1 240 1 226 1 308 5 24 4 324 5 299 1 124 1 287 1 107 1 16 1 72 2 17 3 86 1 
87 1 2 1 293 1 346 2 308 1 135 1 162 1 358 1 24 1 324 1 333 1 206 1 353 1 72 1 307 2 17 1 60 1 86 1 
87 1 2 1 172 1 296 1 308 1 261 1 162 1 24 1 324 1 272 1 72 2 17 1 73 1 
239 1 123 1 346 1 201 1 21 1 307 1 60 1 85 1 199 1 
70 1 43 1 85 1 
206 1 201 1 160 1 199 1 85 1 
34 2 201 2 160 2 297 1 206 1 217 1 233 1 42 1 43 1 70 1 165 1 335 1 235 1 248 1 340 1 277 2 85 1 199 2 289 1 
76 1 128 1 173 1 268 3 109 1 195 1 276 1 144 1 320 3 74 1 260 1 
76 1 82 1 65 1 9 1 
76 1 173 1 
76 1 351 1 173 1 195 1 
76 1 173 1 268 1 195 1 109 1 320 1 74 1 
69 1 286 1 268 1 
76 1 128 2 303 1 53 1 173 1 268 3 66 1 109 1 195 1 144 1 320 3 74 1 
76 1 173 1 268 2 195 1 109 1 369 1 276 1 320 2 74 1 
76 1 159 1 268 1 89 1 139 1 82 1 109 1 167 1 144 1 320 1 74 1 
76 1 173 1 268 1 109 1 320 1 144 1 74 1 
173 2 268 1 195 1 109 1 320 1 144 1 74 1 
76 1 173 1 268 2 215 1 109 2 220 1 197 1 144 1 320 2 74 2 
35 1 76 2 173 1 268 3 65 1 82 1 195 1 109 1 144 1 320 3 276 2 74 1 260 1 
76 1 173 1 159 1 268 2 89 2 91 1 101 1 316 1 195 1 109 1 167 1 144 1 320 2 276 1 74 1 
76 2 173 1 268 4 369 1 65 1 82 1 195 1 109 2 144 1 320 4 276 2 236 1 74 2 
76 1 173 1 268 1 195 1 109 1 320 1 144 1 74 1 
76 3 128 1 53 1 303 1 173 2 268 4 65 1 9 1 82 1 195 2 109 1 276 2 320 4 74 1 
76 1 59 1 173 1 268 2 195 1 109 1 276 1 216 1 320 2 144 1 284 1 74 1 
0 1 76 1 128 2 303 1 53 2 173 1 268 3 109 1 195 1 144 1 320 3 74 1 
76 2 315 1 274 2 203 1 
140 1 268 1 109 1 320 1 144 1 74 1 
76 1 173 1 268 2 195 1 109 1 276 1 320 2 144 1 260 1 74 1 
176 1 
76 1 173 1 268 1 195 1 109 1 320 1 144 1 74 1 

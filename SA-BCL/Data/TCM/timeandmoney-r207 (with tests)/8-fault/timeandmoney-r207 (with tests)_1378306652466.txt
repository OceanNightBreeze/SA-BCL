#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 317 (19,100) (19,100) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 317 (19,100) (19,100) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 317 (19,100) (19,100) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 317 (19,100) (19,100) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 317 76 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 317 76 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (135,151,271) (135,151,271) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (135,151,271) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (135,151,271) 268 62 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (135,151,271) 268 228 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 0 180 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 0 180 236 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (135,151,271) (135,151,271) 207 211 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (135,151,271) (135,151,271) 207 211 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (135,151,271) (135,151,271) 207 211 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (135,151,271) (135,151,271) 207 211 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (135,151,271) (135,151,271) 207 211 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (135,151,271) (135,151,271) 207 211 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (135,151,271) (135,151,271) 207 211 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (135,151,271) (135,151,271) 207 211 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (135,151,271) (135,151,271) 207 211 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (135,151,271) (135,151,271) 207 211 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (135,151,271) (135,151,271) 207 211 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (135,151,271) (135,151,271) 207 211 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 0 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 0 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 0 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 0 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 0 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 0 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 0 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (135,151,271) 268 157 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
254 1 65 1 298 1 84 1 100 1 260 4 168 1 106 1 52 2 332 2 333 1 170 1 11 1 192 1 314 1 317 1 174 1 337 1 15 4 252 1 61 2 19 1 
254 1 65 1 298 1 84 1 100 1 260 4 168 1 106 1 52 2 332 2 333 1 170 1 11 1 192 1 314 1 317 1 174 1 337 1 15 4 61 2 252 1 19 1 
254 1 65 1 298 1 84 1 100 1 260 4 168 1 106 1 52 2 332 2 333 1 170 1 11 1 192 1 314 1 317 1 174 1 337 1 15 4 61 2 252 1 19 1 
254 1 65 1 298 1 84 1 100 1 260 4 168 1 106 1 52 2 332 2 333 1 170 1 11 1 192 1 314 1 317 1 174 1 337 1 15 4 61 2 252 1 19 1 
234 1 65 3 298 1 84 1 24 2 260 4 27 1 168 2 52 1 106 3 170 1 317 1 337 1 15 4 61 1 252 1 38 1 39 1 
65 1 234 1 204 1 298 1 84 1 260 2 52 1 332 1 11 1 336 1 284 1 174 1 15 2 337 1 61 1 38 1 
254 1 234 1 65 2 298 1 260 3 168 1 52 2 332 1 106 1 170 1 15 3 61 2 38 1 
254 1 65 1 298 1 126 1 260 4 168 1 52 2 106 2 332 1 170 1 192 1 317 1 76 1 15 4 61 2 
254 1 65 1 298 1 126 1 260 4 168 1 52 2 106 2 332 1 170 1 192 1 317 1 76 1 15 4 61 2 
158 1 124 1 77 1 
159 2 124 1 114 1 
41 2 312 2 255 2 188 2 287 1 154 2 182 2 242 1 
41 3 82 1 255 2 256 1 259 1 7 1 130 1 85 1 309 1 310 2 132 1 216 2 312 2 13 1 182 3 266 1 95 2 185 2 140 1 188 2 326 1 101 1 69 1 237 1 71 1 105 1 242 1 109 1 75 1 282 1 287 1 250 1 154 2 251 1 253 2 79 1 118 1 
41 1 150 1 312 1 293 1 255 1 64 1 188 1 154 1 182 1 242 1 
41 1 133 1 135 1 271 1 154 1 182 1 
41 1 312 1 255 1 188 1 271 1 154 1 182 1 
151 1 43 1 285 1 87 1 291 1 
151 2 43 1 285 1 124 1 77 1 303 1 86 1 291 2 
151 1 43 1 291 1 
41 1 293 1 295 1 255 1 64 1 188 1 242 1 150 1 312 1 151 1 285 1 154 1 182 1 291 1 
124 1 
151 2 43 1 285 1 124 1 77 1 303 1 197 1 291 2 
141 1 164 1 43 2 99 1 206 1 124 1 303 1 68 1 74 1 191 2 151 5 316 1 285 2 219 2 116 1 77 1 117 1 183 2 291 5 
158 1 287 1 
41 2 255 1 188 1 312 1 287 2 179 1 154 2 60 1 182 2 
122 1 46 1 59 1 
41 1 231 1 69 1 7 1 71 1 105 1 109 1 132 1 282 1 287 1 182 1 253 1 79 1 266 1 95 1 185 1 
41 2 188 1 46 1 7 1 69 1 71 1 278 1 105 1 109 1 132 1 312 1 282 1 12 1 154 1 182 2 253 1 266 1 79 1 95 1 185 1 
41 3 312 3 255 1 188 3 287 1 278 1 154 3 182 3 
41 1 150 1 312 1 293 1 188 1 154 1 182 1 
41 1 312 1 293 1 255 1 188 1 179 1 154 1 60 1 182 1 
41 2 312 2 255 1 12 1 268 1 188 2 271 1 60 1 154 2 278 1 182 2 62 1 
41 2 312 1 133 1 188 1 287 1 146 1 154 2 278 1 182 2 
41 1 312 1 12 1 268 1 188 1 271 1 154 1 278 1 182 1 228 1 
41 2 255 1 188 2 46 1 278 1 312 2 59 1 60 1 154 2 182 2 
41 1 69 1 7 1 71 1 105 1 109 1 132 1 282 1 287 1 182 1 253 1 79 1 266 1 95 1 185 1 
41 1 293 1 205 1 7 1 276 1 71 1 105 1 132 1 282 1 288 1 287 1 182 1 253 1 79 1 266 1 95 1 185 1 
122 2 3 1 256 1 259 1 46 2 85 1 309 1 310 2 216 4 57 1 93 1 59 2 229 1 140 2 327 1 270 1 101 2 145 1 275 1 237 1 238 1 111 1 200 1 118 1 
41 1 312 1 293 1 188 1 26 1 28 1 154 1 182 1 
41 5 255 1 188 4 146 1 278 2 88 1 312 4 133 1 12 1 287 1 199 1 154 5 60 1 182 5 
41 2 150 1 312 2 293 1 188 2 26 1 154 2 182 2 
281 1 37 1 
281 1 37 1 
313 1 102 1 
313 1 102 1 
313 1 102 1 
281 1 129 1 37 1 
313 1 281 2 249 1 102 1 8 1 37 2 
1 1 281 1 37 1 
281 1 129 1 37 1 
281 1 129 1 37 1 
281 1 131 1 37 1 
281 1 131 1 37 1 
281 1 131 1 37 1 
0 1 281 1 187 1 331 1 180 1 37 1 
0 1 281 1 151 1 187 1 236 1 331 1 180 1 291 1 37 1 
84 1 337 1 252 1 
204 1 84 1 337 1 
217 1 204 1 54 1 5 1 337 3 252 2 
204 1 54 1 5 1 337 2 252 1 241 1 
204 1 54 1 5 2 337 2 252 1 
159 3 161 1 294 2 43 1 124 2 127 2 304 2 303 1 167 1 50 1 214 1 311 1 219 1 183 1 229 1 99 2 145 1 104 1 238 1 74 1 191 1 151 5 285 4 286 1 114 1 195 1 77 1 116 3 339 1 200 1 291 5 292 1 
81 1 159 6 255 1 164 1 87 4 182 1 183 2 188 1 99 4 191 2 285 6 193 4 286 2 195 4 114 2 116 6 200 2 291 8 121 1 202 1 292 2 41 1 295 1 293 1 43 5 301 1 124 4 127 4 303 1 304 4 214 1 53 1 311 2 312 1 219 2 229 2 64 1 145 2 238 2 242 1 73 1 74 1 150 1 151 8 77 1 154 1 
159 4 161 1 294 1 164 1 124 3 127 2 304 2 311 1 219 1 183 1 229 1 99 2 145 1 104 1 238 1 191 1 151 3 285 2 286 1 114 2 195 1 77 1 116 3 200 1 291 3 292 1 
159 4 81 1 161 1 255 1 164 1 182 1 183 1 188 1 99 2 104 1 191 1 285 2 286 1 195 2 114 2 116 3 200 1 291 3 292 1 41 1 293 1 294 1 295 1 301 1 124 3 127 2 304 2 311 1 53 1 312 1 219 1 229 1 64 1 145 1 238 1 242 1 150 1 151 3 77 1 154 1 
158 1 103 1 71 1 
245 1 71 1 
338 1 
71 1 266 1 
282 1 176 1 103 2 261 1 71 3 266 1 
282 1 71 1 266 1 
142 1 71 1 
140 3 296 1 66 1 189 1 270 3 101 4 145 1 107 1 32 1 216 7 335 1 283 2 152 1 93 2 319 1 265 1 200 1 
140 3 296 1 66 1 189 1 270 3 101 4 145 1 107 1 32 1 216 7 335 1 283 2 152 1 93 2 319 1 265 1 200 1 
140 3 296 1 66 1 189 1 270 3 101 4 145 1 107 1 32 1 216 7 335 1 283 2 152 1 115 1 93 2 319 1 265 1 200 1 
296 1 256 1 299 4 209 1 309 1 310 2 311 3 216 31 263 3 223 1 319 1 94 1 93 5 265 1 16 1 186 1 229 3 140 15 66 2 189 2 235 1 270 10 101 16 145 4 237 1 238 3 107 2 32 2 283 3 335 5 152 1 196 1 200 4 118 1 
296 1 256 2 309 2 310 4 216 9 178 1 93 3 319 1 265 1 140 4 189 1 66 1 235 1 270 4 101 5 145 1 237 2 107 1 32 1 283 2 335 1 153 1 200 1 118 2 
204 1 298 1 84 1 125 1 260 2 52 1 308 1 171 1 132 1 217 1 177 1 15 2 222 1 61 1 17 1 185 1 95 1 230 1 65 1 234 1 105 1 106 1 332 1 248 1 337 2 252 1 253 1 340 1 120 1 38 1 
40 1 204 1 84 1 125 1 260 3 52 1 132 1 217 1 56 1 177 1 15 3 222 1 61 1 17 1 185 1 95 1 230 1 65 1 234 1 329 1 105 1 332 1 106 2 248 1 337 2 252 1 253 1 340 1 120 1 38 1 
40 1 204 1 125 1 84 1 260 2 132 1 217 1 15 2 17 1 185 1 95 1 230 1 65 1 234 1 329 1 105 1 332 1 106 2 248 1 337 2 252 1 253 1 340 1 120 1 38 1 
230 2 45 1 302 1 260 1 71 1 105 1 9 1 332 2 52 1 132 1 56 1 15 1 92 1 321 1 61 1 253 1 266 1 79 1 340 2 95 1 185 1 18 1 120 2 
40 1 204 1 298 1 84 1 125 1 260 1 52 1 308 1 132 1 217 1 177 1 15 1 222 1 61 1 17 1 185 1 95 1 230 1 105 1 332 1 248 1 337 2 252 1 253 1 340 1 120 1 
31 1 
41 1 43 2 207 1 302 1 303 1 211 1 132 1 133 1 135 1 219 1 321 1 182 1 183 1 266 1 185 2 95 2 99 1 271 1 144 1 71 1 105 1 74 1 243 1 191 1 151 2 286 1 246 1 116 1 289 1 154 1 253 2 156 1 79 2 291 2 
41 1 151 1 133 1 135 1 207 1 271 1 289 1 154 1 182 1 211 1 156 1 291 1 
41 1 151 1 133 1 135 1 207 1 271 1 289 1 154 1 182 1 211 1 156 1 291 1 
41 1 151 1 133 1 135 1 207 1 271 1 289 1 154 1 182 1 211 1 156 1 291 1 
41 1 43 1 207 1 271 1 303 1 211 1 151 2 133 1 135 1 197 1 289 1 154 1 182 1 156 1 291 2 
41 1 207 1 271 1 211 1 74 1 191 1 151 1 133 1 135 1 219 1 289 1 154 1 182 1 183 1 156 1 291 1 
41 1 151 1 133 1 135 1 207 1 271 1 289 1 154 1 182 1 211 1 156 1 291 1 
41 1 151 1 133 1 135 1 207 1 271 1 289 1 154 1 182 1 211 1 156 1 291 1 
41 1 151 1 133 1 135 1 207 1 271 1 289 1 154 1 182 1 211 1 156 1 291 1 
41 1 151 1 133 1 135 1 207 1 271 1 289 1 154 1 182 1 211 1 156 1 291 1 
41 1 151 1 133 1 135 1 207 1 271 1 289 1 154 1 182 1 211 1 156 1 291 1 
41 1 207 1 271 1 211 1 74 1 191 1 151 1 133 1 135 1 219 1 289 1 154 1 182 1 183 1 156 1 291 1 
158 1 122 1 296 1 256 1 46 1 259 1 85 1 309 1 310 2 216 6 319 1 93 2 59 1 265 1 140 3 66 1 270 2 101 3 237 1 145 1 107 1 111 1 283 1 287 2 200 1 118 1 
122 11 299 3 256 2 300 1 259 2 46 11 130 1 85 1 309 2 310 4 311 2 216 14 263 3 175 1 90 1 223 1 93 1 94 1 59 4 229 2 140 6 326 1 23 1 270 2 101 8 237 2 145 1 238 1 335 1 194 1 287 1 200 2 118 2 
41 2 163 1 300 1 256 1 259 1 7 1 85 1 130 1 309 1 132 1 310 2 312 1 216 2 12 1 136 1 59 1 182 2 266 1 185 1 95 1 140 1 231 1 188 1 326 1 101 1 69 1 237 1 71 1 29 1 278 1 105 1 109 1 282 1 287 1 154 1 253 1 79 1 118 1 
82 2 256 3 259 3 7 2 85 3 12 1 93 4 265 1 182 3 266 2 185 3 95 3 188 1 98 2 270 8 101 10 278 1 105 2 107 1 109 2 34 1 282 2 283 1 287 2 36 2 200 3 118 3 40 1 41 3 122 7 296 1 300 1 46 7 130 1 306 2 309 3 310 6 132 2 311 2 312 1 216 20 319 1 58 1 59 7 229 2 140 10 233 2 66 1 326 1 69 2 145 3 237 3 71 2 238 2 239 1 335 4 154 1 253 3 79 1 
40 1 41 1 203 1 256 2 208 1 259 2 302 1 85 2 130 1 171 1 309 2 215 1 132 2 310 4 312 1 216 2 55 1 321 1 182 1 266 2 185 8 95 7 20 1 140 1 188 1 326 1 328 1 101 1 237 2 278 1 71 3 105 2 111 1 250 2 154 1 155 1 253 8 79 2 118 2 
41 1 255 1 122 1 256 1 300 1 46 1 259 1 85 1 309 1 310 2 311 1 312 1 216 3 93 1 59 1 60 1 182 1 229 1 140 2 188 1 270 1 101 1 237 1 145 1 238 1 154 1 200 1 290 1 118 1 
122 1 270 1 256 1 46 1 259 1 101 2 237 1 85 1 309 1 111 1 310 2 216 2 335 1 57 1 59 1 200 1 118 1 229 1 
140 2 122 1 270 1 256 1 46 1 259 1 237 1 275 1 145 1 85 1 238 1 309 1 111 1 310 2 216 2 93 1 59 1 118 1 
122 2 256 1 259 1 46 2 85 1 309 1 311 1 310 2 216 4 93 1 59 2 229 1 140 2 270 2 101 2 237 1 145 1 238 1 111 1 335 1 200 1 118 1 
122 1 270 1 256 1 46 1 259 1 101 2 237 1 85 1 309 1 310 2 216 2 335 1 57 1 59 1 155 1 200 1 118 1 229 1 
140 2 122 1 270 1 256 1 46 1 259 1 237 1 275 1 145 1 85 1 238 1 309 1 310 2 216 2 93 1 59 1 155 1 118 1 
122 2 256 1 259 1 46 2 85 1 309 1 311 1 310 2 216 4 93 1 59 2 229 1 140 2 270 2 101 2 237 1 145 1 238 1 335 1 155 1 200 1 118 1 
140 2 122 2 270 2 256 1 46 2 259 1 101 2 145 1 237 1 238 1 85 1 309 1 310 2 311 1 216 4 335 1 93 1 59 2 200 1 118 1 229 1 
82 1 41 1 256 1 259 1 7 1 130 1 85 1 309 1 132 1 310 2 216 2 182 1 266 1 185 1 95 1 140 1 326 1 101 1 69 1 237 1 71 1 105 1 109 1 282 1 287 1 253 1 79 1 118 1 
41 1 293 1 205 1 256 1 259 1 7 1 85 1 48 1 309 1 132 1 310 2 216 1 182 1 266 1 185 1 95 1 140 1 326 1 276 1 237 1 71 1 105 1 282 1 288 1 287 1 253 1 79 1 118 1 
122 2 256 1 300 1 259 1 46 2 85 1 309 1 311 1 310 2 216 4 93 1 59 2 229 1 140 2 270 2 101 2 237 1 145 1 238 1 335 1 200 1 118 1 
82 1 41 1 122 2 256 1 46 2 259 1 7 1 85 1 306 1 171 1 309 1 132 1 310 2 311 1 216 4 93 1 59 2 182 1 266 1 185 1 95 1 229 1 140 2 270 2 101 2 69 1 145 1 237 1 238 1 71 1 105 1 109 1 282 1 335 1 200 1 253 1 118 1 
41 1 255 1 122 1 256 1 300 1 259 1 46 1 85 1 309 1 310 2 311 1 312 1 216 3 59 1 60 1 182 1 229 1 140 1 188 1 270 1 101 2 145 1 237 1 238 1 190 1 335 1 154 1 200 1 118 1 
123 2 44 2 299 2 256 2 47 1 128 1 309 2 310 4 311 3 216 19 14 1 263 1 223 1 93 3 178 1 94 1 226 1 229 3 96 1 140 10 97 1 270 6 101 9 237 2 145 3 238 3 335 3 200 3 201 1 118 2 
123 1 44 4 256 3 299 2 128 1 169 1 309 3 310 6 311 3 216 26 14 2 263 2 223 2 93 2 178 1 227 1 63 1 229 3 140 12 96 1 97 2 235 2 270 4 101 14 145 2 237 3 238 2 149 1 33 1 335 2 198 1 200 3 201 1 118 3 
256 3 169 1 263 3 14 2 89 1 94 1 178 1 93 4 265 1 96 1 97 1 270 8 101 20 107 1 33 1 283 1 198 1 200 5 118 3 201 1 296 1 123 1 44 4 299 4 47 1 128 1 309 3 311 4 310 6 216 41 223 3 319 1 63 1 227 1 229 4 140 21 66 1 235 1 145 5 237 3 238 4 149 1 335 4 
123 1 296 1 44 4 299 4 256 4 47 1 128 1 169 1 309 4 310 8 311 4 216 38 89 1 14 2 263 3 223 3 319 1 93 4 178 1 94 1 265 1 227 1 63 1 229 4 96 1 140 18 97 1 66 1 235 2 270 7 101 20 237 4 145 4 238 3 107 1 149 1 33 1 283 1 335 3 198 1 200 5 201 1 118 4 
123 1 296 1 44 4 299 4 256 2 128 1 169 1 309 2 310 4 311 7 216 52 14 1 263 4 175 2 223 2 319 1 93 7 178 1 94 2 265 1 227 1 63 1 229 7 96 1 140 25 97 1 66 1 235 1 270 14 101 27 237 2 145 8 238 7 107 1 149 1 33 1 283 1 335 7 198 1 200 8 201 1 118 2 
41 2 203 1 300 1 257 1 256 1 208 1 259 1 85 1 130 1 309 1 132 1 310 2 216 2 182 2 266 1 185 2 95 2 140 1 326 1 272 1 101 1 237 1 71 1 105 1 147 1 280 1 250 2 154 2 253 2 80 1 118 1 
40 1 230 1 204 1 84 1 105 1 148 1 171 1 279 1 262 1 132 1 217 1 177 1 337 2 248 1 252 1 17 1 253 2 95 2 185 2 
40 1 230 1 204 1 84 1 105 1 51 1 262 1 132 1 217 1 177 1 337 2 248 1 252 1 17 1 253 1 95 1 185 1 
230 1 297 1 302 1 71 1 105 1 148 1 132 1 92 1 321 1 253 1 266 1 79 1 95 1 185 1 
40 1 230 1 204 1 84 1 105 1 148 1 279 1 262 1 132 1 217 1 177 1 337 2 248 1 252 1 17 1 253 1 95 1 185 1 
218 1 
158 1 141 1 99 1 124 1 116 1 77 1 68 1 
159 1 43 1 124 2 303 1 172 1 219 1 183 1 99 1 74 1 244 1 191 1 151 1 113 1 114 1 116 1 77 1 291 1 
159 12 4 2 261 1 171 1 266 3 183 4 95 3 185 3 21 2 269 2 99 8 273 1 274 1 103 2 105 4 30 2 191 4 282 3 286 2 35 1 114 6 116 9 200 2 291 5 119 2 43 5 124 8 127 6 303 3 304 6 49 2 132 3 311 2 318 2 219 4 221 1 224 2 229 2 138 2 141 1 233 2 142 2 68 1 144 1 145 2 72 1 71 10 238 2 74 4 245 3 151 5 77 2 253 3 79 1 
159 6 43 1 4 1 299 1 124 5 127 5 303 1 304 5 169 1 311 2 263 1 219 2 220 1 223 1 181 1 183 2 227 1 63 1 229 2 269 2 99 5 144 1 145 2 238 2 74 2 191 2 33 1 151 1 286 1 114 3 116 8 77 2 198 1 200 2 291 1 
41 1 293 1 2 1 295 1 255 1 296 1 4 1 312 1 219 1 182 1 322 1 183 1 64 1 66 1 188 1 269 2 99 2 145 1 107 1 242 1 74 1 150 1 191 1 151 1 116 2 154 1 200 2 291 1 
141 1 99 1 124 1 68 1 74 1 191 1 219 1 77 1 116 1 183 1 
159 10 233 1 269 2 99 5 4 1 124 5 127 5 304 5 145 2 238 2 311 2 114 5 116 5 200 2 229 2 
151 1 43 1 124 1 77 1 303 1 291 1 
164 1 43 4 302 1 303 2 210 1 132 1 219 2 321 1 266 1 183 2 185 4 95 4 99 2 274 2 144 2 71 1 105 1 74 1 243 1 191 2 151 3 334 1 286 2 246 1 35 1 116 2 253 4 79 2 291 3 
41 3 82 1 255 2 256 1 259 1 7 1 85 1 309 1 310 2 132 1 216 1 312 2 182 3 266 1 185 1 95 1 140 1 188 2 326 1 69 1 237 1 71 1 105 1 242 1 109 1 75 1 282 1 287 1 154 2 253 1 79 1 118 1 
159 4 99 2 124 4 127 2 304 2 144 1 74 1 191 1 283 1 286 1 114 2 219 1 116 1 77 2 183 1 
0 1 187 1 
0 1 187 1 
0 1 187 1 
0 1 187 1 
0 1 187 1 
0 1 187 1 
0 1 187 1 
0 1 187 1 
281 1 37 1 
140 4 296 1 66 1 235 1 270 3 256 2 101 4 145 1 237 2 107 1 309 2 310 4 216 8 283 1 335 1 93 2 319 1 265 1 200 1 118 2 
158 1 140 3 66 1 296 1 270 2 101 3 145 1 107 1 216 6 283 1 319 1 93 2 265 1 200 1 
140 2 270 2 256 1 258 1 101 2 145 1 237 1 238 1 309 1 310 2 311 1 216 4 335 1 93 1 200 1 118 1 229 1 
140 4 299 2 270 2 101 3 145 1 238 1 311 1 216 7 263 1 335 1 223 1 93 1 94 1 200 1 229 1 
296 1 299 2 256 2 307 1 309 2 311 2 310 4 216 23 263 2 175 1 319 1 94 1 93 5 265 1 229 2 140 12 66 2 23 1 235 2 270 9 101 11 145 3 237 2 238 2 107 2 283 1 335 4 200 3 118 2 
216 1 140 1 299 1 
216 1 263 1 101 1 
140 3 233 1 256 1 270 3 258 1 101 3 237 1 145 1 238 1 309 1 310 2 311 1 216 6 335 1 93 2 200 1 118 1 229 1 
299 1 256 1 169 1 309 1 310 2 311 2 216 12 263 1 223 1 178 1 93 1 63 1 227 1 229 2 140 6 270 2 101 6 237 1 145 2 238 2 33 1 335 1 198 1 200 2 118 1 
140 3 296 1 66 1 270 2 101 3 145 1 107 1 216 6 335 1 93 1 200 1 
140 2 66 1 235 1 270 2 256 1 101 1 237 1 107 1 307 1 309 1 310 2 216 3 335 1 93 1 319 1 265 1 118 1 
140 5 66 2 296 1 256 1 270 5 101 5 237 1 145 2 107 2 309 1 310 2 216 10 335 2 178 1 93 3 200 2 322 1 118 1 
256 1 270 1 101 2 237 1 309 1 310 2 216 2 335 1 178 1 200 1 118 1 229 1 
140 2 270 2 256 1 101 2 145 1 237 1 238 1 309 1 310 2 311 1 216 4 335 1 93 1 178 1 200 1 118 1 229 1 
140 2 66 1 235 1 256 3 270 2 101 1 47 1 237 3 307 1 107 1 309 3 310 6 216 3 335 1 178 1 93 1 118 3 
296 2 299 4 256 5 258 1 47 1 209 1 307 1 309 5 310 10 311 3 216 34 263 3 223 1 319 1 178 1 94 1 93 7 265 1 16 1 229 3 140 18 66 3 235 2 270 12 101 16 237 5 145 5 238 3 107 3 283 1 335 5 196 1 200 5 118 5 
296 1 299 1 256 1 169 1 309 1 310 2 216 8 263 1 223 1 178 1 319 1 93 2 265 1 140 4 66 1 270 2 101 4 145 1 237 1 107 1 283 1 200 1 118 1 
296 1 299 2 256 2 258 1 169 1 309 2 310 4 311 1 216 11 263 1 223 1 93 2 319 1 178 1 94 1 265 1 229 1 140 5 66 1 270 3 101 6 145 1 237 2 107 1 283 1 335 1 200 2 118 2 
296 1 299 1 256 3 258 1 169 1 309 3 310 6 311 2 216 19 263 1 223 1 319 1 178 1 93 3 265 1 63 1 227 1 229 2 140 10 66 1 235 1 270 4 101 9 237 3 145 3 238 2 107 1 33 1 283 1 335 1 198 1 200 3 118 3 
296 1 299 1 256 3 258 1 169 1 309 3 310 6 311 2 216 17 263 1 223 1 319 1 178 1 93 3 265 1 63 1 227 1 229 2 140 7 66 1 235 1 270 5 101 10 237 3 145 2 238 1 107 1 33 1 283 1 335 2 198 1 200 3 118 3 
296 1 299 1 256 1 169 1 309 1 310 2 216 8 263 1 223 1 178 1 319 1 93 2 265 1 140 4 66 1 270 2 101 4 145 1 237 1 107 1 283 1 200 1 118 1 
299 1 256 1 169 1 309 1 310 2 311 2 216 12 263 1 223 1 178 1 93 1 63 1 227 1 229 2 140 6 270 2 101 6 237 1 145 2 238 2 33 1 335 1 198 1 200 2 118 1 
296 1 299 1 256 4 258 1 169 1 309 4 310 8 311 2 216 18 263 1 223 1 319 1 178 1 93 3 265 1 227 1 63 1 229 2 140 8 66 1 235 2 270 5 101 10 237 4 145 2 238 1 107 1 33 1 283 1 335 2 198 1 200 3 118 4 
299 1 256 4 47 1 169 1 309 4 310 8 311 3 216 16 263 1 223 1 178 1 93 3 227 1 63 1 229 3 140 7 235 2 270 6 101 9 237 4 145 2 238 2 33 1 335 3 198 1 200 3 118 4 
140 4 66 3 296 1 270 6 101 3 145 1 107 3 216 7 335 3 319 2 93 3 265 1 200 1 
296 1 299 1 256 4 47 1 169 1 309 4 310 8 311 2 216 18 263 1 223 1 319 1 178 1 93 3 265 1 227 1 63 1 229 2 140 8 66 1 235 2 270 4 101 10 237 4 145 2 238 1 107 1 33 1 283 1 335 1 198 1 200 3 118 4 
41 1 133 1 134 1 287 1 154 1 146 1 182 1 
41 1 83 1 70 1 146 1 212 1 133 1 134 1 287 1 320 1 154 1 182 1 341 1 
132 1 158 1 302 1 71 1 321 1 105 1 253 1 266 1 79 1 185 1 95 1 
41 2 188 1 7 1 71 1 278 1 105 1 109 1 132 1 312 1 282 1 287 1 154 1 182 2 253 1 266 1 79 1 95 1 185 1 
41 2 293 1 188 2 142 1 67 1 7 1 274 1 28 1 71 3 278 1 105 1 109 1 132 1 312 1 282 2 287 1 154 2 182 2 253 1 266 2 119 1 95 1 185 1 
41 2 293 2 205 1 7 1 132 1 312 1 182 2 266 2 185 1 95 1 188 2 67 1 142 1 274 1 278 1 71 3 28 1 105 1 282 2 288 1 287 1 154 2 253 1 119 1 
43 1 124 1 166 1 173 1 132 1 264 1 224 1 266 1 185 3 95 3 142 1 103 1 274 1 71 4 105 1 245 1 151 2 282 1 77 1 253 3 79 1 291 2 119 1 
138 1 43 1 142 1 124 1 274 1 103 1 71 4 105 1 132 1 282 1 151 2 245 1 264 1 77 1 224 1 253 3 79 1 266 1 119 1 291 2 95 3 185 3 
132 1 55 1 105 1 253 1 185 1 95 1 
40 1 208 1 328 1 261 1 71 3 105 3 171 1 215 1 132 2 112 1 282 1 55 1 91 1 250 1 78 1 253 7 79 2 266 2 95 6 185 7 20 1 
82 1 256 2 259 2 7 1 85 2 171 1 93 2 265 1 182 2 266 1 185 1 95 1 188 1 270 2 101 3 278 1 105 1 107 1 109 1 282 1 283 1 287 2 36 1 200 1 118 2 41 2 122 1 296 1 300 1 46 1 306 1 309 2 310 4 132 1 312 1 216 6 319 1 59 1 140 3 66 1 69 1 237 2 145 1 71 1 147 1 154 1 253 1 
43 2 124 1 303 1 49 1 219 2 318 1 224 1 183 2 185 1 95 1 138 1 21 1 141 1 99 1 68 1 103 1 71 2 74 2 191 2 151 3 245 1 285 1 35 1 116 1 77 1 253 1 79 1 291 3 
273 1 103 1 261 1 71 2 105 2 171 1 132 1 282 1 55 1 253 2 266 1 95 2 185 2 
302 1 71 1 105 1 171 1 110 1 132 1 264 1 321 1 253 4 79 1 266 1 95 4 185 4 
139 1 143 1 274 1 71 1 239 1 105 2 132 1 112 1 282 1 91 1 253 2 266 1 95 2 185 2 
132 1 204 1 84 1 337 1 17 1 105 1 253 1 79 1 185 1 95 1 
132 1 40 1 280 1 208 1 71 1 105 1 253 2 266 1 185 2 95 2 171 1 
302 1 208 1 274 1 71 3 105 2 171 1 110 1 215 1 132 2 321 1 253 5 79 1 266 2 95 4 185 5 20 1 
160 1 302 1 208 1 274 1 71 3 105 2 171 1 110 1 132 2 321 1 253 5 79 1 266 2 95 4 185 5 20 1 
41 2 293 1 188 1 205 1 7 1 71 1 278 1 105 1 132 1 312 1 282 1 288 1 287 1 154 1 182 2 253 1 266 1 79 1 95 1 185 1 
274 1 261 1 71 1 105 2 132 1 112 1 282 1 91 1 78 1 253 1 266 1 95 1 185 1 
41 1 325 1 257 1 165 1 272 1 154 1 182 1 323 1 80 1 
325 1 137 1 157 1 
325 1 287 1 165 1 225 1 323 1 
151 1 268 1 285 1 325 1 271 1 165 1 277 1 225 1 137 1 323 1 291 1 157 1 
158 1 65 1 234 1 38 1 
65 1 234 1 15 1 260 1 61 1 52 1 38 1 
260 1 332 1 120 1 
65 1 234 1 298 1 260 3 6 1 52 1 174 2 15 3 247 1 61 1 267 1 38 1 
65 1 234 1 24 1 15 2 260 2 61 1 106 1 52 1 38 1 
65 1 298 1 84 1 260 1 168 1 52 1 15 1 337 1 61 1 252 1 39 1 
65 1 234 1 298 1 15 1 260 1 61 1 52 1 
234 2 298 1 15 1 260 1 61 1 52 1 38 1 
232 1 65 1 234 1 298 1 260 2 305 1 52 2 10 1 15 2 61 2 
192 1 234 1 298 1 15 1 260 1 61 1 240 1 52 1 38 1 
65 1 234 1 204 1 298 1 84 1 260 2 52 1 106 1 213 1 217 1 337 2 15 2 61 1 252 1 38 1 
234 1 65 2 298 1 24 1 260 4 27 1 168 1 52 2 106 2 170 1 15 4 61 2 38 1 
65 1 234 1 298 1 15 1 260 1 61 1 52 1 38 1 
234 2 65 3 6 1 260 4 240 1 168 1 106 2 52 1 170 1 174 1 247 1 15 4 61 1 38 2 
162 1 65 1 234 1 298 1 126 1 260 2 330 1 52 1 106 1 15 2 61 1 38 1 
65 1 234 1 298 1 25 1 6 1 260 3 52 1 174 2 15 3 247 2 61 1 38 1 
324 1 315 1 65 2 184 2 
298 1 15 1 260 1 61 1 108 1 52 1 
42 1 65 1 234 1 298 1 15 2 260 2 61 1 106 1 52 1 38 1 
22 1 
65 1 234 1 298 1 15 1 260 1 61 1 52 1 38 1 
42 1 234 1 65 1 298 1 260 3 106 1 52 1 174 1 15 3 61 1 38 1 
65 1 240 1 168 1 170 1 
65 1 234 1 

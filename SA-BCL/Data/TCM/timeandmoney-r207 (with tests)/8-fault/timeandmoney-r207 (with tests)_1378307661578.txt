#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (11,173) 273 (287,338) (287,338) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (11,173) 273 (287,338) (287,338) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (11,173) 273 (287,338) (287,338) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (11,173) 273 (287,338) (287,338) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 138 240 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 138 240 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 138 240 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 138 240 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 138 240 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 138 240 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 138 240 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 138 240 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 138 240 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 138 240 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 138 240 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 138 240 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
149 1 17 1 50 1 338 1 287 1 314 1 11 1 28 1 356 1 109 1 273 1 
149 1 17 1 50 1 338 1 287 1 314 1 11 1 28 1 356 1 109 1 273 1 
149 1 17 1 50 1 338 1 287 1 314 1 11 1 28 1 356 1 109 1 273 1 
149 1 17 1 50 1 338 1 287 1 314 1 11 1 28 1 356 1 109 1 273 1 
87 1 222 1 149 1 188 3 174 1 276 1 311 2 28 4 35 2 103 1 163 1 252 1 298 3 347 1 17 4 314 1 99 1 109 1 
222 1 149 1 187 1 188 1 50 1 174 1 28 2 92 1 356 1 103 1 17 2 228 1 214 1 314 1 99 1 109 1 
173 1 222 1 149 1 50 1 188 2 174 1 276 1 28 3 35 1 298 1 17 3 314 2 109 2 
87 1 25 1 50 1 188 5 276 3 113 1 28 9 163 1 252 1 298 7 347 1 99 1 351 1 173 1 222 1 149 1 174 1 311 2 35 4 103 1 358 1 17 9 314 2 109 2 
87 1 25 1 50 1 188 5 276 3 113 1 28 9 163 1 252 1 298 7 347 1 99 1 351 1 173 1 222 1 149 1 174 1 311 2 35 4 103 1 358 1 17 9 314 2 109 2 
231 1 259 1 36 1 
206 1 259 1 15 2 
95 2 56 1 271 2 247 2 164 2 317 1 243 2 127 2 
0 2 22 1 24 1 341 1 1 1 141 1 51 1 164 2 3 2 4 1 95 2 56 1 281 1 122 1 170 1 146 2 195 2 9 1 78 1 263 1 264 1 265 1 102 1 241 1 177 1 243 2 127 2 290 2 291 1 157 1 271 3 362 1 41 1 107 1 247 3 317 1 45 1 
95 1 271 1 168 1 247 1 164 1 317 1 243 1 127 1 183 1 20 1 
223 1 88 1 224 1 36 1 164 1 72 1 269 1 155 1 271 1 86 1 259 1 349 1 247 1 183 1 
223 2 88 1 224 1 36 1 164 1 127 1 243 1 269 1 155 1 95 1 86 2 271 1 259 1 247 1 183 1 
313 1 223 1 86 1 110 1 340 1 
313 1 5 1 223 2 137 1 86 2 259 1 36 1 340 1 
313 1 223 1 86 1 
223 1 164 1 127 1 243 1 95 1 86 1 168 1 271 1 260 1 317 1 247 1 183 1 20 1 340 1 
259 1 
313 1 283 1 5 1 223 2 86 2 259 1 36 1 340 1 
220 1 331 1 223 5 162 2 26 1 286 2 251 1 36 1 152 1 253 1 313 2 131 1 270 2 5 1 116 1 336 1 86 5 259 1 340 2 
231 1 56 1 
164 2 127 1 243 1 73 1 95 1 56 2 271 2 316 1 247 2 
40 1 232 1 312 1 
78 1 0 1 24 1 341 1 264 1 51 1 102 1 290 1 4 1 56 1 271 1 170 1 108 1 107 1 247 1 195 1 
78 1 0 1 24 1 232 1 341 1 264 1 51 1 2 1 102 1 267 1 164 1 243 1 290 1 4 1 95 1 271 2 170 1 107 1 247 2 195 1 
68 1 161 1 2 2 267 1 164 4 243 4 127 1 322 1 73 1 95 4 56 1 271 4 247 4 183 1 
54 1 95 2 271 2 247 2 164 2 243 2 183 1 20 1 
95 3 56 1 271 3 2 1 247 3 164 3 127 1 243 3 
95 1 271 1 247 1 164 1 243 1 183 1 20 1 
73 1 95 1 271 1 316 1 247 1 164 1 243 1 127 1 183 1 
0 1 22 1 24 1 250 1 88 1 341 1 1 1 141 1 51 1 2 1 164 3 3 2 73 1 299 1 4 1 95 3 56 1 281 1 122 1 170 1 146 1 195 1 9 1 78 1 263 1 223 1 264 1 224 1 265 1 102 1 267 1 177 1 127 2 243 3 290 1 269 1 155 1 271 4 86 1 41 1 107 1 247 4 317 1 183 1 
95 1 56 1 271 2 349 1 2 1 293 1 247 2 164 2 243 1 
219 1 223 1 250 1 88 1 224 1 2 2 267 1 164 3 127 1 243 3 269 1 155 1 73 1 95 3 86 1 271 3 259 1 247 3 183 1 
232 1 2 1 164 2 127 1 243 2 73 1 40 1 95 2 271 2 247 2 
78 1 0 1 24 1 264 1 341 1 51 1 102 1 290 1 4 1 56 1 271 1 170 1 107 1 247 1 195 1 
0 1 24 1 186 1 341 1 51 1 102 1 290 1 4 1 56 1 271 1 170 1 31 1 107 1 247 1 195 1 
249 1 22 2 89 1 232 2 141 1 144 1 3 2 7 1 281 1 303 1 146 4 216 1 9 1 263 1 265 1 177 1 312 2 14 1 38 1 333 1 40 2 64 1 45 2 364 1 
54 1 95 1 271 1 247 1 164 1 243 1 183 1 155 1 
47 1 179 1 
47 1 179 1 
209 1 194 1 
209 1 194 1 
209 1 194 1 
46 1 47 1 179 1 
46 1 47 1 179 1 
46 1 47 1 179 1 
47 1 70 1 179 1 
63 1 209 1 47 2 194 1 179 2 227 1 
47 1 179 1 182 1 
47 1 179 1 182 1 
47 1 179 1 182 1 
221 1 47 1 223 1 70 1 150 1 69 1 125 1 277 1 164 2 343 1 243 2 62 1 279 1 335 1 95 2 56 1 271 2 86 1 105 1 179 1 180 1 159 1 304 1 247 2 
21 2 47 2 223 2 59 1 343 3 227 1 62 2 279 1 145 1 300 1 104 1 105 2 86 2 179 2 259 1 180 2 315 1 327 1 159 2 
99 1 103 1 252 1 
99 1 92 1 103 1 
10 1 99 3 143 1 92 1 252 2 323 1 
10 1 99 2 92 1 252 1 77 1 323 1 
10 2 99 2 92 1 252 1 323 1 
206 1 162 1 26 3 144 1 253 1 5 1 324 2 280 1 235 1 7 1 258 1 259 2 303 1 196 1 221 1 223 5 284 1 150 1 286 1 81 2 36 1 15 3 289 2 313 1 131 2 270 1 335 1 86 5 19 1 64 1 340 4 65 1 
206 3 319 1 162 2 26 8 251 1 142 1 144 3 253 1 5 1 167 1 235 3 119 1 7 3 258 2 259 5 303 3 196 1 223 9 80 1 150 4 284 2 286 2 81 6 202 1 36 1 15 9 289 6 313 6 131 6 270 2 86 9 43 5 64 3 110 5 340 7 
206 2 162 1 26 3 251 1 144 1 324 1 235 1 7 1 258 1 259 3 303 1 223 3 284 1 150 1 286 1 81 2 36 1 289 2 15 4 270 1 131 2 86 3 19 1 64 1 340 2 65 1 
206 3 162 1 26 5 251 1 142 1 144 2 324 2 167 1 235 2 7 2 258 1 259 4 303 2 223 4 80 1 284 1 150 2 286 1 81 4 36 1 15 7 289 4 270 1 131 4 86 4 19 1 64 2 65 1 340 3 
67 1 231 1 341 1 
75 1 341 1 
330 1 
24 1 341 1 107 1 
85 1 341 1 
341 1 107 1 
67 2 24 1 341 3 121 1 107 1 205 1 
22 3 200 1 332 1 144 1 14 3 29 2 128 1 130 1 361 1 7 1 302 1 350 1 215 1 146 7 45 4 364 2 218 1 
22 3 200 1 332 1 144 1 14 3 29 2 128 1 130 1 361 1 7 1 302 1 350 1 215 1 146 7 45 4 364 2 218 1 
22 3 200 1 332 1 296 1 144 1 14 3 29 2 128 1 130 1 361 1 7 1 302 1 350 1 215 1 146 7 45 4 364 2 218 1 
22 15 185 1 139 1 141 1 27 1 189 4 342 3 144 4 3 2 29 3 76 1 235 3 302 1 7 4 350 2 303 3 215 2 146 31 218 2 101 1 263 1 200 1 332 2 265 1 226 1 177 1 14 10 128 5 130 1 361 1 229 1 64 3 45 16 364 5 
22 4 23 1 139 1 141 2 144 1 3 4 29 2 7 1 302 1 350 1 146 9 215 1 218 1 263 2 200 1 265 2 332 1 177 2 14 4 246 1 128 1 361 1 45 5 364 3 
135 1 0 1 210 1 211 1 188 1 50 1 51 1 28 2 92 1 143 1 114 1 252 1 298 1 346 1 55 1 118 1 99 2 195 1 217 1 222 1 149 1 174 1 82 1 102 1 103 1 290 1 337 1 17 2 314 1 109 1 
135 1 0 1 210 1 211 1 188 1 50 1 71 1 51 1 28 3 143 1 92 1 114 1 252 1 298 2 346 1 55 1 213 1 99 2 195 1 217 1 222 1 285 1 174 1 102 1 103 1 290 1 337 1 17 3 314 1 109 1 
135 1 0 1 210 1 211 1 188 1 50 1 51 1 28 2 92 1 143 1 252 1 298 2 346 1 55 1 213 1 99 2 195 1 222 1 285 1 174 1 102 1 103 1 290 1 337 1 17 2 
0 1 184 1 211 2 50 2 341 1 51 1 71 1 28 1 297 1 346 2 256 1 97 1 170 1 195 1 288 1 102 1 290 1 17 1 337 2 314 1 107 1 109 1 134 1 
135 1 0 1 210 1 211 1 50 1 51 1 28 1 92 1 143 1 114 1 252 1 346 1 55 1 118 1 99 2 195 1 217 1 149 1 285 1 102 1 103 1 290 1 337 1 17 1 314 1 109 1 
204 1 
0 2 138 1 88 1 49 1 162 1 341 1 26 1 51 1 91 1 164 1 72 1 253 1 5 1 256 1 349 1 97 1 170 2 195 2 352 1 305 1 240 1 223 3 284 1 224 1 286 1 102 1 13 1 290 2 155 1 269 1 313 2 270 1 131 1 360 1 271 1 86 3 107 1 247 1 183 1 
223 2 240 1 138 1 88 1 224 1 91 1 13 1 164 1 155 1 72 1 269 1 360 1 86 2 271 1 349 1 247 1 183 1 
223 2 240 1 138 1 88 1 224 1 91 1 13 1 164 1 155 1 72 1 269 1 360 1 86 2 271 1 349 1 247 1 183 1 
223 2 240 1 138 1 88 1 224 1 91 1 13 1 164 1 155 1 72 1 269 1 360 1 86 2 271 1 349 1 247 1 183 1 
283 1 223 3 240 1 138 1 88 1 224 1 91 1 13 1 164 1 155 1 269 1 72 1 313 1 5 1 360 1 271 1 86 3 349 1 247 1 183 1 
223 2 240 1 138 1 88 1 162 1 224 1 286 1 91 1 164 1 13 1 155 1 269 1 72 1 253 1 270 1 360 1 271 1 86 2 349 1 247 1 183 1 
223 2 240 1 138 1 88 1 224 1 91 1 13 1 164 1 155 1 72 1 269 1 360 1 86 2 271 1 349 1 247 1 183 1 
223 2 240 1 138 1 88 1 224 1 91 1 13 1 164 1 155 1 72 1 269 1 360 1 86 2 271 1 349 1 247 1 183 1 
223 2 240 1 138 1 88 1 224 1 91 1 13 1 164 1 155 1 72 1 269 1 360 1 86 2 271 1 349 1 247 1 183 1 
223 2 240 1 138 1 88 1 224 1 91 1 13 1 164 1 155 1 72 1 269 1 360 1 86 2 271 1 349 1 247 1 183 1 
223 2 240 1 138 1 88 1 224 1 91 1 13 1 164 1 155 1 72 1 269 1 360 1 86 2 271 1 349 1 247 1 183 1 
223 2 240 1 138 1 88 1 162 1 224 1 286 1 91 1 164 1 13 1 155 1 269 1 72 1 253 1 270 1 360 1 271 1 86 2 349 1 247 1 183 1 
231 1 22 3 232 1 141 1 144 1 3 2 29 1 56 2 302 1 7 1 281 1 350 1 215 1 146 6 216 1 9 1 263 1 200 1 265 1 177 1 14 2 312 1 40 1 361 1 45 3 364 2 
22 6 232 11 1 1 90 1 189 3 141 2 27 1 52 1 342 3 144 2 3 4 56 1 235 2 257 1 7 1 325 1 281 2 303 1 146 14 9 1 263 2 265 2 241 1 14 2 177 2 312 11 128 1 153 1 40 4 229 1 64 2 45 8 364 1 
0 1 22 1 24 1 341 1 51 1 141 1 1 1 2 1 164 1 3 2 166 1 4 1 95 1 56 1 237 1 281 1 170 1 146 2 195 1 9 1 78 1 263 1 264 1 265 1 102 1 225 1 267 1 241 1 177 1 243 1 290 1 153 1 40 1 271 2 107 1 108 1 247 2 45 1 
0 3 48 2 232 7 1 1 141 3 51 2 2 1 144 3 278 1 3 6 4 2 95 1 56 2 235 2 7 3 281 3 146 20 328 2 195 3 9 3 285 1 200 1 102 2 241 1 14 8 243 1 290 3 153 1 107 2 247 3 64 2 22 10 24 2 341 2 164 1 29 1 255 2 302 1 350 1 170 1 303 2 215 1 78 2 263 3 353 1 264 2 265 3 267 1 177 3 312 7 359 1 128 4 361 1 40 7 271 3 41 2 44 2 45 10 364 4 
0 8 22 1 341 3 51 2 141 2 1 1 2 1 164 1 3 4 165 1 344 1 95 1 256 1 281 2 97 1 170 2 171 1 146 2 216 1 195 8 9 2 263 2 285 1 265 2 82 1 203 1 102 2 241 1 177 2 243 1 290 7 334 1 158 1 271 1 362 2 107 2 247 1 133 1 45 1 
22 2 232 1 141 1 164 1 144 1 3 2 73 1 94 1 95 1 235 1 7 1 281 1 303 1 146 3 9 1 263 1 265 1 14 1 312 1 177 1 243 1 127 1 153 1 40 1 271 1 247 1 64 1 45 1 364 1 
263 1 232 1 141 1 265 1 14 1 312 1 177 1 144 1 3 2 128 1 333 1 40 1 281 1 146 2 216 1 64 1 9 1 45 2 
22 2 263 1 232 1 89 1 141 1 265 1 14 1 312 1 177 1 3 2 40 1 7 1 281 1 303 1 146 2 216 1 9 1 364 1 
22 2 232 2 141 1 144 1 3 2 235 1 7 1 281 1 303 1 146 4 216 1 9 1 263 1 265 1 177 1 312 2 14 2 128 1 40 2 64 1 45 2 364 1 
263 1 232 1 141 1 265 1 14 1 312 1 177 1 144 1 3 2 128 1 333 1 40 1 281 1 146 2 133 1 64 1 9 1 45 2 
22 2 263 1 232 1 89 1 141 1 265 1 14 1 312 1 177 1 3 2 40 1 7 1 281 1 303 1 146 2 133 1 9 1 364 1 
22 2 232 2 141 1 144 1 3 2 235 1 7 1 281 1 303 1 146 4 9 1 263 1 265 1 177 1 312 2 14 2 128 1 40 2 64 1 133 1 45 2 364 1 
22 2 232 2 141 1 144 1 3 2 235 1 7 1 281 1 303 1 146 4 9 1 263 1 265 1 177 1 312 2 14 2 128 1 40 2 64 1 45 2 364 1 
0 1 22 1 24 1 341 1 51 1 141 1 1 1 3 2 4 1 56 1 281 1 170 1 146 2 195 1 9 1 78 1 263 1 264 1 265 1 102 1 241 1 177 1 290 1 271 1 41 1 107 1 247 1 45 1 
274 1 0 1 22 1 24 1 186 1 341 1 51 1 141 1 1 1 3 2 4 1 56 1 281 1 170 1 146 2 31 1 195 1 9 1 263 1 265 1 102 1 241 1 177 1 290 1 271 1 107 1 247 1 45 1 
22 2 232 2 141 1 144 1 3 2 235 1 7 1 281 1 303 1 146 4 9 1 263 1 265 1 177 1 312 2 14 2 153 1 128 1 40 2 64 1 45 2 364 1 
0 1 22 2 24 1 232 2 341 1 51 1 141 1 144 1 3 2 255 1 4 1 235 1 7 1 281 1 303 1 146 4 195 1 9 1 78 1 263 1 264 1 265 1 82 1 102 1 14 2 312 2 177 1 290 1 128 1 40 2 271 1 41 1 107 1 247 1 64 1 45 2 364 1 
22 1 232 1 141 1 164 1 144 1 3 2 73 1 95 1 235 1 7 1 281 1 303 1 146 3 9 1 263 1 265 1 176 1 14 1 177 1 312 1 243 1 127 1 128 1 153 1 40 1 271 1 247 1 64 1 45 2 
207 1 22 10 140 1 189 2 141 2 27 1 192 1 342 1 144 3 3 4 53 1 235 3 7 3 98 1 303 3 146 19 124 2 238 1 263 2 199 2 265 2 177 2 14 6 178 1 246 1 128 3 229 1 64 3 45 9 364 3 
66 1 207 1 22 12 140 1 139 2 141 3 189 2 192 2 342 2 144 3 3 6 53 1 235 3 7 2 96 1 303 2 146 26 124 1 263 3 33 1 199 4 265 3 14 4 177 3 178 2 83 1 61 1 128 2 246 1 272 1 229 2 64 3 45 14 364 2 
66 1 207 1 22 21 140 1 139 1 189 4 141 3 27 1 192 2 342 3 144 5 29 1 3 6 53 1 235 4 302 1 96 1 7 5 350 1 303 4 215 1 146 41 124 1 238 1 263 3 33 1 199 4 200 1 265 3 175 1 177 3 14 8 83 1 178 1 61 1 246 1 128 4 361 1 272 1 229 3 64 4 45 20 364 4 
66 1 207 1 22 18 140 1 139 2 189 4 141 4 27 1 192 2 342 3 144 5 29 1 3 8 53 1 235 4 302 1 96 1 7 4 350 1 303 3 215 1 146 38 124 1 238 1 263 4 33 1 199 4 200 1 265 4 175 1 177 4 14 7 83 1 178 1 61 1 246 1 128 3 361 1 272 1 229 3 64 4 45 20 364 4 
66 1 207 1 22 25 140 1 139 1 189 4 141 2 27 2 192 1 342 4 144 8 29 1 3 4 53 1 235 7 302 1 96 1 7 8 325 2 350 1 303 7 215 1 146 52 124 1 263 2 33 1 199 4 200 1 265 2 177 2 14 14 83 1 178 1 61 1 246 1 128 7 361 1 272 1 229 2 64 7 45 27 364 7 
300 1 47 1 156 1 105 1 179 1 59 1 180 1 159 1 227 1 62 1 
70 1 125 1 
262 1 47 1 117 1 105 1 179 1 180 1 326 1 159 1 62 1 
46 1 245 1 
63 1 182 1 126 1 
21 1 47 1 223 1 59 1 343 2 227 1 62 1 279 1 145 1 300 1 104 1 86 1 105 1 179 1 259 1 180 1 327 1 159 1 
21 1 47 1 223 1 59 1 343 2 227 1 62 1 279 1 145 1 300 1 104 1 86 1 105 1 179 1 259 1 180 1 327 1 159 1 
21 1 47 1 223 1 59 1 343 2 227 1 62 1 279 1 145 1 300 1 104 1 86 1 105 1 179 1 259 1 180 1 327 1 159 1 
46 1 63 1 245 1 
46 1 63 1 245 1 
182 1 126 1 
63 1 182 1 126 1 
304 1 277 1 
21 1 47 1 69 1 70 1 343 1 277 1 164 2 95 2 56 1 304 1 221 1 223 1 150 1 125 1 243 2 62 1 104 1 335 1 271 2 86 1 105 1 179 1 42 1 180 1 159 1 247 2 340 1 
0 2 22 1 341 1 51 1 141 1 1 1 164 2 3 2 165 1 212 1 281 1 146 2 195 2 147 1 9 1 123 1 307 1 263 1 34 1 265 1 102 1 241 1 177 1 290 2 153 1 334 1 271 2 362 2 107 1 247 2 45 1 
0 2 210 1 285 1 51 1 308 1 82 1 143 1 92 1 102 1 103 1 114 1 252 1 290 2 244 1 55 1 337 1 99 2 195 2 8 1 
0 1 210 1 285 1 308 1 51 1 143 1 92 1 102 1 103 1 114 1 252 1 290 1 234 1 55 1 337 1 99 2 195 1 
0 1 294 1 341 1 51 1 102 1 290 1 244 1 297 1 337 1 256 1 97 1 170 1 107 1 195 1 
0 1 210 1 285 1 51 1 308 1 143 1 92 1 102 1 103 1 114 1 252 1 290 1 244 1 55 1 337 1 99 2 195 1 8 1 
309 1 
231 1 131 1 331 1 336 1 26 1 259 1 36 1 
206 1 162 1 26 1 190 1 253 1 30 1 5 1 259 2 223 1 286 1 36 1 15 1 313 1 131 1 270 1 86 1 318 1 
0 3 48 2 51 4 144 2 5 3 235 2 7 2 195 3 331 1 284 2 286 4 102 3 60 1 290 3 289 6 15 12 336 1 18 2 107 3 205 1 64 2 248 2 111 2 67 2 206 6 24 3 162 4 26 9 341 10 112 1 253 4 74 2 254 2 75 3 120 1 259 8 170 1 303 2 352 1 79 1 223 5 224 2 355 2 81 6 82 1 36 2 268 2 313 5 270 4 131 8 84 1 85 2 86 5 181 2 
66 1 206 3 162 2 26 8 189 1 342 1 144 2 253 2 5 1 235 2 96 1 7 2 259 5 303 2 352 1 100 1 223 1 284 1 286 2 355 1 310 1 81 5 36 2 83 1 15 6 289 5 61 1 313 1 270 2 131 5 86 1 272 1 229 1 64 2 248 2 
162 1 26 2 144 2 164 1 253 1 95 1 168 1 302 1 7 1 350 1 215 1 260 1 223 1 58 1 286 1 355 1 127 1 243 1 270 1 131 2 271 1 86 1 132 1 247 1 317 1 183 1 20 1 248 2 
331 1 162 1 286 1 26 1 36 1 253 1 270 1 131 1 336 1 259 1 
206 5 48 1 26 5 355 1 81 5 144 2 289 5 15 10 131 5 235 2 7 2 259 5 303 2 64 2 248 2 
313 1 223 1 5 1 86 1 259 1 36 1 
0 4 24 1 49 1 162 2 341 2 26 2 251 1 51 3 321 1 253 1 5 2 256 1 169 1 120 2 97 1 170 2 195 4 352 2 305 1 223 3 32 1 284 2 286 2 102 2 290 4 313 4 16 1 270 2 131 2 84 1 86 3 107 2 160 1 230 1 
0 1 22 1 24 1 341 1 1 1 141 1 51 1 164 2 3 2 4 1 95 2 56 1 281 1 170 1 122 1 146 1 195 1 9 1 78 1 263 1 264 1 265 1 102 1 177 1 243 2 127 2 290 1 271 3 41 1 107 1 247 3 317 1 
206 2 162 1 284 1 286 1 26 1 81 2 36 2 29 1 289 2 15 4 253 1 131 2 270 1 259 4 352 1 
348 1 180 1 62 1 
348 1 180 1 62 1 
348 1 180 1 62 1 
59 1 180 1 12 1 277 1 62 1 
295 1 180 1 62 1 
295 1 180 1 62 1 
295 1 180 1 62 1 
180 1 62 1 
47 1 179 1 
22 4 263 2 139 1 141 2 200 1 265 2 144 1 14 3 177 2 29 1 3 4 128 1 361 1 7 1 302 1 350 1 146 8 215 1 45 4 364 2 
231 1 22 3 200 1 14 2 144 1 29 1 361 1 302 1 7 1 350 1 215 1 146 6 45 3 364 2 
22 2 263 1 141 1 265 1 266 1 14 2 177 1 144 1 3 2 128 1 235 1 7 1 303 1 146 4 64 1 45 2 364 1 
22 4 189 2 27 1 342 1 144 1 14 2 128 1 235 1 7 1 303 1 229 1 146 7 64 1 45 3 364 1 
22 12 139 2 27 1 189 2 141 2 342 2 144 3 29 1 3 4 235 2 302 1 257 1 7 3 325 1 350 2 303 2 215 2 146 23 263 2 200 1 265 2 14 9 177 2 128 4 361 1 106 1 64 2 45 11 364 5 
22 1 189 1 146 1 
146 1 342 1 45 1 
22 3 263 1 48 1 141 1 265 1 266 1 177 1 144 1 14 3 3 2 128 1 235 1 7 1 303 1 146 6 64 1 45 3 364 2 
66 1 22 6 189 1 141 1 342 1 144 2 3 2 235 2 96 1 7 2 303 2 146 12 263 1 265 1 177 1 14 2 83 1 61 1 128 1 246 1 272 1 229 1 64 2 45 6 364 1 
22 3 144 1 14 2 128 1 302 1 7 1 350 1 146 6 215 1 45 3 364 1 
22 2 263 1 139 1 141 1 200 1 265 1 14 2 177 1 3 2 128 1 361 1 350 1 106 1 215 1 146 3 45 1 364 1 
22 5 263 1 141 1 265 1 177 1 14 5 144 2 3 2 246 1 128 2 302 1 7 2 132 1 350 2 215 2 146 10 45 5 364 3 
263 1 141 1 265 1 177 1 144 1 14 1 3 2 246 1 128 1 146 2 64 1 45 2 
22 2 263 1 141 1 265 1 14 2 177 1 144 1 3 2 246 1 128 1 235 1 7 1 303 1 146 4 64 1 45 2 364 1 
238 1 22 2 263 3 139 1 141 3 265 3 177 3 14 2 3 6 246 1 128 1 106 1 350 1 146 3 215 1 45 1 364 1 
22 15 139 1 189 4 141 4 27 1 342 3 144 4 29 1 3 8 76 1 235 3 302 1 7 4 350 2 303 3 215 2 146 29 101 1 238 1 263 4 200 1 265 4 266 1 226 1 177 4 14 10 246 1 128 5 361 1 229 1 64 3 45 14 364 5 
22 4 189 1 141 1 342 1 144 1 29 1 3 2 7 1 96 1 302 1 350 1 146 8 215 1 263 1 200 1 265 1 177 1 14 2 246 1 361 1 229 1 45 4 364 2 
22 5 189 2 141 2 27 1 342 1 144 2 29 1 3 4 235 1 7 1 302 1 96 1 350 1 215 1 146 11 263 2 200 1 265 2 266 1 177 2 14 3 246 1 128 1 361 1 229 1 64 1 45 6 364 2 
66 1 22 10 139 1 189 1 141 3 342 1 144 3 29 1 3 6 235 2 302 1 96 1 7 3 350 1 303 2 215 1 146 19 263 3 200 1 265 3 266 1 177 3 14 4 83 1 61 1 128 1 246 1 361 1 272 1 229 1 64 2 45 9 364 3 
66 1 22 7 139 1 189 1 141 3 342 1 144 3 29 1 3 6 235 2 302 1 96 1 7 2 350 1 303 1 215 1 146 17 263 3 200 1 265 3 266 1 177 3 14 5 83 1 61 1 128 2 246 1 361 1 272 1 229 1 64 2 45 10 364 3 
22 4 189 1 141 1 342 1 144 1 29 1 3 2 7 1 96 1 302 1 350 1 146 8 215 1 263 1 200 1 265 1 177 1 14 2 246 1 361 1 229 1 45 4 364 2 
66 1 22 6 189 1 141 1 342 1 144 2 3 2 235 2 96 1 7 2 303 2 146 12 263 1 265 1 177 1 14 2 83 1 61 1 128 1 246 1 272 1 229 1 64 2 45 6 364 1 
66 1 22 8 139 2 189 1 141 4 342 1 144 3 29 1 3 8 235 2 302 1 96 1 7 2 350 1 303 1 215 1 146 18 263 4 200 1 265 4 266 1 177 4 14 5 83 1 61 1 128 2 246 1 361 1 272 1 229 1 64 2 45 10 364 3 
66 1 22 7 139 2 189 1 141 4 342 1 144 3 3 8 235 3 96 1 7 2 303 2 146 16 238 1 263 4 265 4 177 4 14 6 83 1 61 1 128 3 246 1 272 1 229 1 64 3 45 9 364 3 
22 4 200 1 14 6 144 1 128 3 361 2 7 1 302 1 350 3 146 7 215 3 45 3 364 3 
66 1 22 8 139 2 189 1 141 4 342 1 144 3 29 1 3 8 235 2 302 1 96 1 7 2 350 1 303 1 215 1 146 18 238 1 263 4 200 1 265 4 177 4 14 4 83 1 61 1 128 1 246 1 361 1 272 1 229 1 64 2 45 10 364 3 
56 1 271 1 320 1 349 1 293 1 247 1 164 1 
148 1 136 1 320 1 164 1 56 1 271 1 292 1 349 1 293 1 329 1 247 1 172 1 
231 1 0 1 341 1 256 1 51 1 97 1 170 1 102 1 107 1 195 1 290 1 
0 1 24 1 341 1 264 1 51 1 2 1 102 1 164 1 243 1 290 1 4 1 95 1 56 1 271 2 170 1 107 1 247 2 195 1 
0 1 24 2 88 1 341 3 264 1 51 1 2 1 102 1 164 2 243 1 290 1 155 1 85 1 4 1 95 2 56 1 271 2 120 1 18 1 107 2 247 2 195 1 183 1 
0 2 24 2 88 1 341 3 51 1 2 1 102 1 164 2 243 1 290 2 155 1 85 1 4 1 95 2 56 1 271 2 120 1 18 1 107 2 31 1 247 2 195 2 363 1 183 1 
67 1 0 3 208 1 24 1 223 2 224 1 341 4 51 1 201 1 102 1 36 1 290 3 313 1 85 1 75 1 86 2 259 1 120 1 170 1 18 1 107 1 195 3 363 1 
67 1 0 3 24 1 223 2 224 1 341 4 51 1 102 1 36 1 290 3 74 1 313 1 85 1 75 1 86 2 259 1 120 1 170 1 18 1 107 1 195 3 363 1 
0 1 158 1 51 1 102 1 195 1 290 1 
0 7 24 1 32 1 285 1 341 3 51 3 82 1 203 1 102 2 321 1 290 6 165 1 154 1 344 1 158 1 362 1 170 2 171 1 205 1 107 2 195 7 
0 1 232 1 141 2 51 1 2 1 144 1 3 4 4 1 95 1 56 2 7 1 281 2 146 6 195 1 9 2 200 1 102 1 14 2 243 1 290 1 153 1 107 1 247 2 22 3 24 1 341 1 164 1 29 1 255 1 302 1 350 1 215 1 78 1 263 2 264 1 34 1 265 2 82 1 177 2 312 1 40 1 361 1 271 2 41 1 44 1 45 3 364 2 
111 1 67 1 0 1 162 2 26 1 341 2 253 2 74 1 254 1 75 1 5 1 259 1 170 1 195 1 331 1 223 3 286 2 224 1 36 1 290 1 268 1 313 2 131 1 270 2 84 1 336 1 86 3 340 1 
67 1 0 2 79 1 24 1 341 2 51 2 82 1 102 1 290 2 158 1 205 1 107 1 195 2 
0 4 341 1 51 1 82 1 102 1 357 1 290 4 256 1 97 1 170 1 107 1 195 4 363 1 
0 2 24 1 32 1 341 1 51 2 102 1 321 1 278 1 290 2 120 1 107 1 195 2 160 1 230 1 
0 1 55 1 51 1 99 1 170 1 92 1 102 1 103 1 195 1 290 1 
0 2 212 1 285 1 341 1 51 1 82 1 102 1 107 1 195 2 290 2 165 1 
0 5 341 3 51 2 82 1 102 2 357 1 290 4 165 1 344 1 256 1 120 1 97 1 170 1 171 1 107 2 195 5 
306 1 0 5 341 3 51 2 82 1 102 2 357 1 290 4 165 1 256 1 120 1 97 1 170 1 171 1 107 2 195 5 
0 1 24 1 341 1 51 1 2 1 102 1 164 1 243 1 290 1 4 1 95 1 56 1 271 2 170 1 107 1 31 1 247 2 195 1 
0 1 24 1 32 1 341 1 51 2 102 1 321 1 290 1 154 1 120 1 205 1 107 1 195 1 
39 1 57 1 197 1 56 1 275 1 
164 1 95 1 301 1 168 1 236 1 259 1 260 1 223 1 197 1 198 1 36 1 127 1 243 1 86 1 271 1 317 1 247 1 340 1 20 1 183 1 
307 1 39 1 197 1 57 1 271 1 247 1 164 1 147 1 123 1 
197 1 198 1 301 1 
231 1 222 1 188 1 174 1 
222 1 17 1 188 1 174 1 314 1 28 1 109 1 
346 1 50 1 28 1 
149 1 222 1 187 2 188 1 174 1 28 3 191 1 193 1 17 3 314 1 261 1 109 1 
298 1 222 1 17 2 188 1 174 1 314 1 311 1 28 2 109 1 
87 1 149 1 188 1 28 1 35 1 103 1 252 1 17 1 314 1 99 1 109 1 
222 1 149 1 17 1 188 1 314 1 28 1 109 1 
222 2 149 1 17 1 174 1 314 1 28 1 109 1 
239 1 222 1 149 1 188 1 28 2 151 1 17 2 314 2 339 1 109 2 
222 1 149 1 25 1 188 2 174 1 276 1 28 3 35 1 298 2 17 3 314 1 351 1 109 1 
222 1 149 1 188 1 174 1 28 2 92 1 143 1 103 1 252 1 93 1 298 1 17 2 314 1 99 2 109 1 
222 1 149 1 188 2 174 1 276 1 311 1 28 4 35 1 298 2 17 4 347 1 314 2 109 2 
222 1 149 1 17 1 188 1 174 1 314 1 28 1 109 1 
222 2 187 1 188 3 174 2 276 1 28 4 191 1 35 1 242 1 298 2 193 1 17 4 314 1 109 1 
222 1 149 1 188 1 174 1 28 2 113 1 37 1 233 1 298 1 17 2 314 1 109 1 
149 1 222 1 187 2 188 1 174 1 28 3 191 2 115 1 193 1 17 3 314 1 109 1 
282 1 345 2 129 1 188 2 
149 1 17 1 354 1 314 1 28 1 109 1 
298 1 222 1 149 1 25 1 17 2 188 1 174 1 314 1 28 2 109 1 
6 1 
222 1 149 1 17 1 188 1 174 1 314 1 28 1 109 1 
298 1 222 1 149 1 25 1 187 1 17 3 188 1 174 1 314 1 28 3 109 1 
188 1 276 1 35 1 242 1 
222 1 188 1 

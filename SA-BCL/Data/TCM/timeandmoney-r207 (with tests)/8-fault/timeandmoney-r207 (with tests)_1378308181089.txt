#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 246 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 176 113 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 246 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
147 3 361 2 362 1 304 1 58 9 104 6 174 2 175 2 28 1 126 2 5 2 324 1 234 1 130 1 352 1 190 4 375 5 193 2 15 1 16 1 165 1 291 9 203 1 20 1 22 1 296 1 337 1 123 2 
147 3 361 2 362 1 304 1 58 9 104 6 175 2 174 2 28 1 126 2 5 2 324 1 234 1 130 1 352 1 190 4 375 5 193 2 15 1 16 1 165 1 291 9 203 1 20 1 22 1 296 1 337 1 123 2 
147 4 361 2 362 1 304 1 58 10 104 7 175 2 174 2 28 1 126 2 5 2 324 1 234 1 130 1 352 1 190 5 375 6 193 2 15 1 16 1 165 1 291 10 203 1 20 1 22 1 296 1 337 1 123 2 
147 2 361 2 362 1 304 1 58 7 104 4 175 2 174 1 126 2 5 2 324 1 234 1 130 1 352 1 190 3 375 4 193 2 15 1 16 1 165 1 291 7 203 1 20 1 22 1 296 1 337 1 123 2 
147 1 361 1 352 1 304 1 58 4 104 3 190 2 375 3 174 2 175 1 28 1 126 1 193 1 16 1 291 4 20 1 130 1 123 1 
361 1 304 1 58 2 375 1 244 1 126 1 193 1 16 1 5 1 165 1 234 1 291 2 20 1 50 1 266 1 123 1 
147 1 361 2 304 1 58 3 190 1 104 1 375 2 126 2 15 1 16 1 5 1 291 3 20 1 
147 3 361 2 304 1 56 1 58 9 104 7 174 2 175 1 28 1 126 2 5 1 130 1 352 1 190 4 375 5 15 1 193 1 331 1 16 1 291 9 203 1 20 1 337 1 123 1 
147 3 361 2 304 1 56 1 58 9 104 7 174 2 175 1 28 1 126 2 5 1 130 1 352 1 190 4 375 5 15 1 193 1 331 1 16 1 291 9 203 1 20 1 337 1 123 1 
246 1 206 1 195 1 
370 1 206 1 284 2 
40 2 81 1 273 1 253 2 167 2 376 2 237 2 7 2 
75 2 53 1 77 1 226 1 320 1 363 1 81 1 82 1 207 1 273 1 253 3 343 1 105 1 61 1 345 1 184 1 237 2 7 2 280 1 40 2 371 1 116 2 42 1 353 1 11 1 163 2 376 3 262 1 333 2 100 1 199 1 316 1 292 1 249 1 167 2 295 2 336 1 
98 1 40 1 81 1 253 1 95 1 167 1 349 1 376 1 237 1 7 1 
206 1 188 1 253 1 96 1 376 1 263 1 177 1 127 1 195 1 154 1 222 1 21 1 349 1 7 1 
40 1 206 1 188 1 253 1 96 2 376 1 263 1 127 1 195 1 222 2 21 1 167 1 237 1 349 1 7 1 
366 1 222 1 96 1 373 1 275 1 
366 1 206 1 195 1 222 2 96 2 379 1 275 1 350 1 
366 1 222 1 96 1 
40 1 81 1 253 1 96 1 95 1 275 1 376 1 98 1 106 1 222 1 167 1 349 1 237 1 7 1 
206 1 
366 1 206 1 195 1 201 1 222 2 96 2 275 1 350 1 
240 1 206 1 339 1 79 2 10 1 96 5 275 2 13 2 128 1 366 2 195 1 221 1 89 1 325 1 222 5 157 2 350 1 101 1 256 1 
246 1 273 1 
40 1 253 2 273 2 376 2 111 1 35 1 167 1 237 1 7 2 
90 1 274 1 313 1 
53 1 116 1 42 1 207 1 363 1 354 1 273 1 253 1 11 1 163 1 376 1 262 1 333 1 100 1 199 1 336 1 
53 1 40 1 42 1 299 1 116 1 363 1 207 1 253 2 11 1 274 1 163 1 262 1 376 2 333 1 100 1 108 1 199 1 237 1 336 1 7 1 
40 3 108 1 273 1 253 3 167 1 376 3 237 3 7 3 
98 1 40 1 253 1 349 1 376 1 237 1 7 1 
40 1 253 1 111 1 35 1 167 1 349 1 376 1 237 1 7 1 
75 2 53 1 77 1 299 1 226 1 363 1 207 1 81 1 273 1 253 4 127 1 105 1 61 1 108 1 345 1 111 1 184 1 237 3 349 1 7 3 280 1 40 3 42 1 116 1 353 1 188 1 11 1 96 1 163 1 192 1 262 1 376 4 263 1 247 1 333 1 100 1 199 1 222 1 292 1 21 1 249 1 167 2 295 1 336 1 
177 1 40 1 108 1 273 1 253 2 376 2 237 1 318 1 7 2 
40 3 299 1 206 1 188 1 253 3 96 1 376 3 263 1 127 1 247 1 108 2 222 1 111 1 21 1 167 1 349 1 237 3 122 1 7 3 
40 2 253 2 274 1 376 2 108 1 90 1 111 1 167 1 237 2 7 2 
53 1 116 1 42 1 207 1 363 1 273 1 253 1 11 1 163 1 376 1 262 1 333 1 100 1 199 1 336 1 
53 1 116 1 42 1 363 1 312 1 273 1 253 1 11 1 163 1 376 1 262 1 333 1 199 1 278 1 336 1 
75 2 297 1 77 1 300 1 226 1 320 2 365 1 274 2 125 1 105 2 4 1 156 1 90 2 346 1 184 1 238 1 353 1 242 1 313 2 223 1 292 1 224 1 249 1 295 4 
40 1 19 1 253 1 349 1 376 1 237 1 7 1 263 1 
169 1 40 4 299 1 253 5 273 1 376 5 177 1 218 1 108 2 111 1 167 1 237 4 318 1 7 5 
98 1 40 2 19 1 253 2 349 1 376 2 237 2 7 2 
220 1 319 1 
220 1 319 1 
261 1 173 1 
261 1 173 1 
261 1 173 1 
220 1 319 1 9 1 
68 1 220 2 319 2 85 1 261 1 173 1 
220 1 319 1 23 1 
220 1 319 1 9 1 
220 1 319 1 9 1 
220 1 319 1 236 1 
220 1 319 1 236 1 
220 1 319 1 236 1 
76 1 159 2 160 1 67 2 206 1 319 2 302 2 311 3 96 2 254 2 85 1 356 1 341 1 220 2 164 2 6 1 222 2 380 1 270 1 
302 1 319 1 273 1 253 2 124 1 109 1 237 2 7 2 309 1 40 2 159 1 67 1 330 1 187 1 310 1 311 1 96 1 376 2 220 1 164 1 222 1 335 1 380 1 23 1 
193 1 175 1 123 1 
193 1 50 1 123 1 
193 3 283 1 248 1 50 1 175 2 87 1 
193 2 210 1 248 1 50 1 175 1 87 1 
193 2 248 2 50 1 175 1 87 1 
297 1 339 2 206 2 79 1 80 1 124 1 275 4 125 1 366 1 128 3 367 1 346 1 157 1 65 1 350 1 309 1 370 1 284 3 310 1 242 1 10 1 70 1 96 5 286 2 13 1 99 2 195 1 196 1 222 5 142 1 250 2 143 1 
297 3 54 5 298 1 78 1 339 6 206 5 79 2 80 2 275 7 125 3 3 1 366 6 128 8 346 3 157 2 65 3 215 1 350 1 370 3 284 9 310 4 242 3 10 1 70 2 96 9 373 5 13 2 120 1 99 6 195 1 222 9 142 1 250 6 101 1 144 1 
297 1 206 3 339 2 79 1 80 1 275 2 125 1 128 3 367 1 157 1 346 1 65 1 370 2 310 1 284 4 242 1 70 1 96 3 286 1 13 1 195 1 99 2 196 1 222 3 250 2 101 1 
297 2 206 4 339 4 79 1 80 1 275 3 125 2 3 1 128 5 367 1 157 1 346 2 65 2 215 1 370 3 284 7 310 2 242 2 70 1 96 4 286 2 13 1 195 1 99 4 120 1 196 1 222 4 250 4 101 1 
38 1 246 1 336 1 
176 1 336 1 
118 1 
199 1 336 1 
38 2 148 1 47 1 199 1 363 1 336 3 
199 1 363 1 336 1 
117 1 336 1 
52 1 320 8 303 1 365 4 84 2 342 1 125 3 105 6 110 2 34 2 238 5 242 3 73 1 18 1 198 2 121 1 295 14 269 1 
52 1 320 8 303 1 365 4 84 2 342 1 125 3 105 6 110 2 34 2 238 7 242 3 73 1 18 1 198 2 121 3 295 14 269 1 
52 1 171 1 320 8 303 1 365 4 84 2 342 1 125 3 105 6 110 2 34 2 238 5 242 3 73 1 18 1 198 2 121 1 295 14 269 1 
52 2 73 1 18 1 198 1 320 1 329 1 295 1 
75 4 52 1 77 2 303 1 320 9 365 5 84 2 125 3 342 1 105 7 110 2 34 2 184 2 238 7 353 2 242 3 72 1 332 1 18 1 198 2 121 2 317 1 292 2 295 16 269 1 
0 1 361 1 304 1 364 1 58 2 172 1 306 1 104 1 175 1 26 1 126 1 5 1 328 1 282 1 116 1 283 1 11 1 163 1 375 1 216 1 262 1 193 2 16 1 333 1 290 1 264 1 291 2 20 1 50 1 123 1 
0 1 361 1 304 1 364 1 58 3 172 1 306 1 104 2 175 1 27 1 126 1 5 1 91 1 328 1 282 1 283 1 116 1 11 1 163 1 375 1 216 1 262 1 288 1 193 2 333 1 264 1 291 3 20 1 50 1 123 1 
0 1 304 1 364 1 58 2 306 1 104 2 27 1 175 1 5 1 91 1 328 1 282 1 116 1 283 1 11 1 163 1 375 1 216 1 262 1 193 2 333 1 291 2 20 1 50 1 123 1 
53 1 0 2 282 2 361 1 116 1 228 1 230 1 55 1 11 1 58 1 163 1 262 1 216 2 288 1 126 1 357 1 5 2 333 1 199 1 291 1 131 1 336 1 267 1 
0 1 361 1 364 1 58 1 172 1 306 1 175 1 26 1 126 1 5 1 91 1 328 1 282 1 116 1 283 1 11 1 163 1 216 1 262 1 193 2 16 1 333 1 264 1 291 1 50 1 123 1 
315 1 
53 2 251 1 206 2 339 2 253 1 340 1 255 2 151 1 154 1 157 1 349 1 158 2 7 1 350 3 8 1 116 2 69 1 10 1 70 1 11 1 163 2 262 1 13 1 71 1 263 1 222 5 21 1 267 1 268 1 228 1 79 1 177 1 127 1 29 2 366 6 128 2 31 1 182 2 36 4 136 1 370 2 284 2 188 1 96 5 189 1 97 2 191 1 46 2 376 1 287 1 333 2 195 1 199 1 336 1 145 2 
251 1 188 1 253 1 96 3 191 1 376 1 287 1 263 1 71 1 127 1 177 1 366 2 201 1 222 3 154 1 21 1 36 2 349 1 158 1 7 1 350 1 268 1 
251 1 206 1 188 1 253 1 96 3 191 1 376 1 287 1 263 1 71 1 127 1 177 1 255 1 366 1 195 1 201 1 222 3 154 1 21 1 36 3 349 1 7 1 350 1 268 1 
251 1 206 1 253 1 177 1 127 1 255 1 366 2 154 1 349 1 36 3 7 1 158 1 350 1 188 1 96 3 191 1 376 1 46 1 287 1 71 1 263 1 195 1 201 1 222 3 21 1 268 1 
251 1 206 5 339 1 253 1 149 1 340 1 255 4 154 1 157 1 349 1 158 4 7 1 350 3 69 1 10 1 263 1 71 1 13 1 222 5 21 1 268 1 79 1 322 1 127 1 177 1 29 2 366 7 128 1 182 2 36 6 135 1 370 2 188 1 96 5 191 1 97 2 46 4 376 1 287 1 195 5 201 1 334 1 141 1 145 2 
251 1 339 1 206 2 253 1 340 1 255 2 151 1 154 1 157 1 349 1 7 1 158 2 350 2 69 1 10 1 263 1 13 1 71 1 222 4 21 1 268 1 79 1 127 1 177 1 29 2 128 1 366 4 182 2 36 4 370 2 188 1 284 2 96 4 191 1 97 2 376 1 46 2 287 1 195 1 145 2 
251 1 206 1 339 1 79 1 253 1 149 1 340 1 322 1 177 1 127 1 255 2 29 2 366 4 128 1 154 1 157 1 182 2 349 1 36 4 158 2 7 1 350 2 135 1 370 2 69 1 188 1 10 1 96 4 97 2 191 1 46 2 376 1 287 1 71 1 263 1 13 1 195 1 222 4 21 1 145 2 268 1 
251 1 206 1 339 1 79 1 253 1 149 1 340 1 322 1 177 1 127 1 255 2 29 2 366 4 128 1 154 1 157 1 182 2 349 1 36 4 158 2 7 1 350 2 135 1 370 2 69 1 188 1 10 1 96 4 97 2 191 1 46 2 376 1 287 1 71 1 263 1 13 1 195 1 222 4 21 1 145 2 268 1 
251 1 339 1 206 1 253 2 340 1 106 1 63 1 154 1 157 1 349 2 7 2 350 2 10 1 13 1 263 1 71 1 222 4 21 1 167 1 268 1 79 1 81 1 322 1 127 1 177 1 128 1 366 2 182 2 237 1 36 2 40 1 368 1 185 2 241 1 188 1 284 2 96 4 95 1 191 1 376 2 287 1 98 1 195 1 294 2 145 2 
251 1 206 1 339 1 79 1 149 1 253 1 340 1 322 1 177 1 127 1 29 2 255 3 128 1 366 5 154 1 157 1 182 2 349 1 36 5 7 1 158 3 350 2 135 1 370 2 69 1 188 1 10 1 96 4 97 2 191 1 376 1 46 3 287 1 13 1 71 1 263 1 195 1 222 4 334 1 21 1 145 2 268 1 
251 1 206 1 339 1 79 1 149 1 253 1 340 1 322 1 177 1 127 1 29 2 255 3 128 1 366 5 154 1 157 1 182 2 349 1 36 5 7 1 158 3 350 2 135 1 370 2 69 1 188 1 10 1 96 4 97 2 191 1 376 1 46 3 287 1 13 1 71 1 263 1 195 1 222 4 334 1 21 1 145 2 268 1 
251 1 339 1 79 1 253 1 340 1 177 1 127 1 151 1 366 1 128 1 154 1 157 1 182 1 349 1 36 2 7 1 350 1 185 1 241 1 284 1 188 1 10 1 96 3 191 1 376 1 287 1 71 1 13 1 263 1 222 3 21 1 294 1 145 1 268 1 
75 2 77 1 226 1 320 3 353 1 242 1 273 2 365 2 84 1 125 1 342 1 246 1 105 2 198 1 110 1 292 1 34 1 224 1 249 1 184 1 295 5 238 2 269 1 
75 4 297 1 77 2 226 2 229 1 320 8 273 1 365 1 274 11 208 1 125 2 105 6 61 1 346 2 90 4 65 2 184 2 214 3 133 1 238 2 371 1 137 1 353 2 242 1 313 11 139 1 219 1 358 3 121 1 166 1 292 2 249 1 295 14 
53 1 75 2 77 1 299 1 226 1 363 1 207 1 320 1 273 1 253 2 105 1 61 1 108 1 62 1 90 1 184 1 237 1 7 1 40 1 41 1 42 1 116 1 371 1 137 1 353 1 354 1 11 1 163 1 262 1 376 2 12 1 333 1 100 1 199 1 292 1 249 1 336 1 295 2 
53 1 297 2 299 1 301 1 303 1 207 2 253 3 342 1 2 2 105 13 61 1 108 1 345 2 346 2 112 1 110 2 65 2 349 1 7 1 116 1 353 3 11 2 163 1 262 2 313 6 121 1 269 1 75 6 77 3 226 3 363 2 320 14 273 3 231 2 365 6 84 2 274 6 125 5 323 2 90 6 34 2 184 3 237 1 238 7 40 1 371 1 42 2 137 1 242 5 372 2 377 1 376 3 333 1 198 1 100 2 199 2 292 3 249 3 295 27 336 2 
53 2 252 1 253 1 105 1 61 1 108 1 308 1 7 1 257 1 116 7 258 1 353 2 11 4 163 6 262 3 217 1 316 2 224 1 267 1 75 4 77 2 228 1 226 2 320 1 363 1 271 1 178 1 235 1 279 1 184 2 237 1 39 1 40 1 371 1 376 1 333 7 290 1 197 1 199 3 292 2 249 2 295 2 336 4 
75 2 297 1 77 1 226 1 320 1 253 1 365 1 274 1 125 1 105 2 153 1 90 1 346 1 111 1 65 1 184 1 237 1 7 1 238 1 40 1 137 1 353 1 242 1 376 1 313 1 292 1 167 1 249 1 295 3 
75 2 77 1 226 1 353 1 320 2 274 1 313 1 125 1 4 1 121 1 90 1 346 1 292 1 224 1 249 1 184 1 295 2 238 1 
75 2 297 1 77 1 226 1 353 1 242 1 365 1 274 1 313 1 105 2 156 1 90 1 292 1 224 1 249 1 184 1 295 2 238 1 
75 2 297 1 77 1 226 1 320 2 365 1 274 2 125 1 105 2 346 1 90 2 65 1 184 1 238 2 353 1 242 1 313 2 121 1 292 1 224 1 249 1 295 4 
75 2 77 1 226 1 353 1 320 2 271 1 274 1 313 1 125 1 4 1 121 1 90 1 346 1 292 1 249 1 184 1 295 2 238 1 
75 2 297 1 77 1 226 1 353 1 271 1 242 1 365 1 274 1 313 1 105 2 156 1 90 1 292 1 249 1 184 1 295 2 238 1 
75 2 297 1 77 1 226 1 320 2 271 1 365 1 274 2 125 1 105 2 346 1 90 2 65 1 184 1 238 2 353 1 242 1 313 2 121 1 292 1 249 1 295 4 
75 2 297 1 77 1 226 1 320 2 365 1 274 2 125 1 105 2 346 1 90 2 65 1 184 1 238 2 353 1 242 1 313 2 121 1 292 1 249 1 295 4 
53 1 75 2 77 1 226 1 320 1 363 1 207 1 273 1 253 1 105 1 61 1 345 1 184 1 371 1 42 1 116 1 353 1 11 1 163 1 262 1 376 1 333 1 100 1 199 1 292 1 249 1 295 2 336 1 
53 1 75 2 77 1 226 1 320 1 363 1 273 1 253 1 105 1 61 1 278 1 184 1 371 1 42 1 116 1 353 1 312 1 94 1 11 1 163 1 262 1 376 1 333 1 199 1 292 1 249 1 295 2 336 1 
75 2 297 1 77 1 226 1 320 2 365 1 274 2 125 1 105 2 346 1 90 2 65 1 184 1 238 2 137 1 353 1 242 1 313 2 121 1 292 1 249 1 295 4 
75 2 297 1 77 1 226 1 320 2 363 1 207 1 253 1 365 1 274 2 125 1 105 2 345 1 90 2 346 1 65 1 184 1 238 2 42 1 116 1 353 1 242 1 372 1 11 1 163 1 262 1 376 1 313 2 333 1 290 1 100 1 199 1 121 1 292 1 249 1 295 4 336 1 
75 2 297 1 77 1 226 1 320 2 253 1 274 1 125 1 105 1 107 1 346 1 90 1 111 1 65 1 184 1 237 1 7 1 238 1 40 1 137 1 353 1 242 1 376 1 313 1 121 1 292 1 167 1 249 1 295 3 
75 4 297 3 77 2 320 9 365 3 208 1 125 3 105 10 30 1 346 3 65 3 66 1 184 2 214 1 133 1 134 1 238 6 239 1 115 2 281 2 369 1 353 2 242 3 138 1 72 1 358 2 48 1 121 3 292 2 295 19 
75 6 297 2 77 3 170 1 320 14 365 2 305 1 208 2 125 3 105 12 30 2 307 1 346 3 327 1 65 3 184 3 214 2 134 1 238 4 239 2 115 1 281 4 369 1 353 3 242 2 138 1 72 1 289 1 358 2 121 2 317 2 292 3 295 26 359 1 
297 4 305 1 208 3 342 1 105 21 307 1 346 4 110 1 65 4 66 1 214 3 115 1 353 3 72 1 358 4 121 4 317 1 359 1 269 1 75 6 77 3 170 1 320 20 365 4 84 1 125 5 30 1 327 1 34 1 184 3 92 1 133 1 238 8 134 1 239 2 281 4 369 1 242 5 138 1 289 1 198 1 292 3 295 41 
75 8 297 3 170 1 77 4 320 20 365 4 84 1 305 1 208 3 342 1 125 5 105 18 30 1 307 1 346 4 110 1 327 1 34 1 65 4 92 1 66 1 184 4 214 3 133 1 134 1 238 7 239 2 115 1 281 4 369 1 353 4 242 4 138 1 72 1 289 1 198 1 358 4 317 2 121 3 292 4 295 38 269 1 359 1 
75 4 297 7 170 1 77 2 320 27 365 7 84 1 305 1 208 2 342 1 125 8 105 25 30 1 307 1 346 7 110 1 327 1 34 1 65 7 184 2 214 4 133 2 134 1 238 14 239 1 115 1 281 4 369 1 353 2 242 8 138 1 72 1 289 1 219 2 198 1 358 4 317 1 121 7 292 2 295 52 269 1 359 1 
76 1 159 1 67 1 220 1 164 1 302 1 319 1 6 1 57 1 85 1 
187 1 23 1 
17 1 159 1 186 1 67 1 220 1 164 1 302 1 319 1 37 1 
76 1 159 1 67 1 206 1 319 1 302 1 311 2 96 1 254 1 85 1 356 1 341 1 220 1 164 1 6 1 222 1 380 1 270 1 
76 1 159 1 67 1 206 1 319 1 302 1 311 2 96 1 254 1 85 1 356 1 341 1 220 1 164 1 6 1 222 1 380 1 270 1 
76 1 159 1 67 1 206 1 319 1 302 1 311 2 96 1 254 1 85 1 356 1 341 1 220 1 164 1 6 1 222 1 380 1 270 1 
68 1 9 1 277 1 
68 1 9 1 277 1 
374 1 236 1 
68 1 374 1 236 1 
109 1 335 1 
302 1 319 1 273 1 253 2 254 1 124 1 275 1 109 1 237 2 7 2 309 1 159 1 40 2 67 1 330 1 187 1 310 1 311 1 96 1 376 2 220 1 164 1 222 1 202 1 335 1 23 1 270 1 
9 1 277 1 
68 1 374 1 236 1 
75 2 77 1 226 1 320 1 253 2 59 1 105 1 61 1 212 1 184 1 7 2 39 1 116 2 371 1 137 1 258 1 353 1 162 1 11 1 163 2 262 1 376 2 378 1 333 2 199 1 316 2 265 1 292 1 249 1 336 1 295 2 
0 1 283 1 116 2 11 1 163 2 306 1 175 1 262 1 193 2 333 2 290 1 32 1 264 1 91 1 328 1 50 1 51 1 114 1 123 1 
0 1 283 1 116 1 103 1 11 1 163 1 306 1 175 1 262 1 193 2 333 1 264 1 91 1 328 1 50 1 51 1 123 1 
53 1 0 1 116 1 228 1 11 1 163 1 262 1 333 1 276 1 199 1 131 1 336 1 114 1 267 1 
0 1 283 1 116 1 11 1 163 1 306 1 175 1 262 1 193 2 333 1 32 1 264 1 91 1 328 1 50 1 51 1 114 1 123 1 
200 1 
246 1 128 1 240 1 206 1 195 1 339 1 325 1 
339 1 206 2 79 1 29 1 128 1 366 1 157 1 350 1 370 1 69 1 284 1 10 1 96 1 97 1 13 1 195 1 222 1 
53 1 116 1 79 1 363 1 10 1 11 2 163 1 262 1 13 1 176 1 333 1 152 1 47 1 199 1 157 1 113 1 336 1 
297 2 170 1 24 1 206 5 339 5 79 2 305 1 208 1 125 2 366 1 128 8 307 1 157 2 346 2 327 1 347 2 65 2 93 1 214 1 350 1 136 1 370 3 284 6 10 2 242 2 70 1 285 1 96 1 13 2 99 5 195 2 358 1 222 1 250 5 359 1 
339 2 79 1 303 1 81 1 253 1 149 1 84 1 125 2 128 2 106 1 157 1 347 2 110 1 34 1 93 1 349 1 237 1 7 1 40 1 10 1 242 1 96 1 95 1 376 1 13 1 98 1 222 1 167 1 
240 1 339 1 206 1 79 1 10 1 13 1 128 1 195 1 325 1 157 1 
297 2 370 5 339 5 206 5 284 10 242 2 125 2 2 1 128 5 99 5 346 2 347 2 65 2 250 5 93 1 
366 1 206 1 195 1 222 1 96 1 350 1 
53 2 146 2 339 2 79 2 227 1 228 1 128 2 366 4 344 1 211 1 157 2 350 2 8 1 136 2 116 4 10 1 70 2 11 1 96 3 189 1 163 4 262 1 13 2 333 4 199 1 222 3 336 1 267 1 101 1 
75 2 53 1 77 1 226 1 81 1 207 1 363 1 273 1 253 3 105 1 61 1 345 1 184 1 237 2 7 2 280 1 40 2 116 1 42 1 353 1 11 1 163 1 376 3 262 1 333 1 100 1 199 1 292 1 167 2 249 1 295 1 336 1 
136 1 370 2 339 2 206 4 79 1 284 4 10 1 70 1 13 1 128 1 99 2 195 2 198 1 157 1 250 2 
164 1 302 1 259 1 
164 1 302 1 6 1 293 1 335 1 
164 1 302 1 259 1 
164 1 302 1 259 1 
74 1 164 1 302 1 
74 1 164 1 302 1 
74 1 164 1 302 1 
164 1 302 1 
220 1 319 1 
75 4 77 2 303 1 320 9 365 4 84 2 342 1 125 3 105 8 110 2 34 2 184 2 238 7 353 2 242 3 198 1 317 1 121 3 292 2 295 17 269 1 
320 3 242 1 365 2 84 1 342 1 125 1 246 1 105 2 198 1 110 1 34 1 295 5 269 1 238 2 
75 2 297 1 77 1 353 1 320 2 242 1 365 1 125 1 105 2 346 1 121 1 292 1 65 1 184 1 132 1 295 4 238 2 
297 1 320 3 242 1 365 1 208 1 125 1 105 4 358 2 346 1 121 1 65 1 295 7 214 1 133 1 238 2 
75 2 297 2 77 1 303 1 320 13 365 5 84 2 342 1 125 5 105 12 346 2 110 2 34 2 65 2 184 1 133 1 214 2 238 7 353 1 242 5 219 1 198 1 358 2 166 1 121 2 317 1 292 1 295 25 269 1 
105 1 358 1 295 1 
320 1 295 1 214 1 
75 2 297 1 77 1 353 1 320 3 242 1 365 2 125 1 2 1 105 3 346 1 121 1 292 1 65 1 184 1 132 1 295 6 238 3 
75 2 297 2 170 1 77 1 320 6 365 1 305 1 208 1 125 2 105 6 307 1 346 2 327 1 65 2 184 1 214 1 238 2 353 1 242 2 72 1 358 1 121 1 292 1 295 12 359 1 
105 3 320 3 242 1 121 1 365 1 84 1 110 1 34 1 295 6 125 1 238 2 
75 2 338 1 77 1 320 1 353 1 365 1 84 1 342 1 105 2 121 1 317 1 292 1 34 1 184 1 295 3 238 2 269 1 
75 2 77 1 353 1 303 1 320 5 242 2 365 3 84 2 125 2 72 1 105 5 121 2 292 1 110 1 34 2 184 1 295 10 238 5 
75 2 77 1 353 1 320 2 125 1 72 1 346 1 121 1 292 1 184 1 295 2 238 1 
75 2 297 1 77 1 353 1 320 2 242 1 365 1 125 1 72 1 105 2 346 1 121 1 292 1 65 1 184 1 295 4 238 2 
75 6 338 1 77 3 353 3 320 1 365 1 84 1 72 1 105 2 317 1 121 1 292 3 34 1 66 1 184 3 295 3 238 2 
75 8 297 2 77 4 25 1 303 1 320 16 365 5 84 2 208 1 342 1 125 5 105 15 155 1 346 2 110 2 34 2 65 2 66 1 184 4 213 1 132 1 214 3 238 9 353 4 242 5 72 1 198 1 358 3 317 1 121 4 292 4 295 31 269 1 
75 2 170 1 77 1 303 1 320 8 365 4 84 2 208 1 125 3 342 1 105 7 110 2 34 2 184 1 214 1 238 5 353 1 242 3 72 1 198 1 358 1 121 1 292 1 295 15 269 1 
75 4 170 1 77 2 303 1 320 10 365 4 84 2 208 1 342 1 125 4 105 8 346 1 110 2 34 2 65 1 184 2 132 1 214 1 133 1 238 6 353 2 242 3 72 1 198 1 358 2 121 2 292 2 295 18 269 1 
75 6 297 2 170 1 77 3 303 1 320 13 365 5 84 2 305 1 208 1 342 1 125 5 105 13 307 1 346 2 110 2 327 1 34 2 65 2 184 3 132 1 214 1 238 7 353 3 242 5 72 1 198 1 358 1 121 2 317 1 292 3 295 26 269 1 359 1 
75 6 297 1 170 1 77 3 303 1 320 14 365 5 84 2 305 1 208 1 342 1 125 5 105 10 307 1 346 2 110 2 327 1 34 2 65 2 184 3 132 1 214 1 238 9 353 3 242 4 72 1 198 1 358 1 317 1 121 4 292 3 295 24 269 1 359 1 
75 2 170 1 77 1 303 1 320 8 365 4 84 2 208 1 125 3 342 1 105 7 110 2 34 2 184 1 214 1 238 5 353 1 242 3 72 1 198 1 358 1 121 1 292 1 295 15 269 1 
75 2 297 2 170 1 77 1 320 6 365 1 305 1 208 1 125 2 105 6 307 1 346 2 327 1 65 2 184 1 214 1 238 2 353 1 242 2 72 1 358 1 121 1 292 1 295 12 359 1 
75 8 297 1 170 1 77 4 303 1 320 14 365 5 84 2 305 1 208 1 342 1 125 5 105 11 307 1 346 2 110 2 327 1 34 2 65 2 184 4 132 1 214 1 238 7 353 4 242 4 72 1 198 1 358 1 121 2 317 2 292 4 295 25 269 1 359 1 
75 8 297 2 170 1 77 4 320 9 365 3 305 1 208 1 125 3 105 7 307 1 346 3 327 1 65 3 184 4 66 1 214 1 238 6 353 4 242 2 72 1 358 1 121 3 317 2 292 4 295 16 359 1 
320 3 242 1 365 3 84 3 342 2 125 1 105 4 121 3 110 1 34 3 295 7 269 1 238 6 
75 8 297 1 170 1 77 4 303 1 320 14 365 5 84 2 305 1 208 1 342 1 125 5 105 11 307 1 346 2 110 2 327 1 34 2 65 2 184 4 66 1 214 1 238 7 353 4 242 4 72 1 198 1 358 1 121 2 317 2 292 4 295 25 269 1 359 1 
177 1 102 1 273 1 253 1 376 1 7 1 318 1 
102 1 351 1 161 1 273 1 253 1 376 1 245 1 177 1 119 1 140 1 318 1 7 1 
246 1 53 1 333 1 116 1 228 1 199 1 11 1 163 1 262 1 336 1 267 1 
53 1 40 1 42 1 116 1 363 1 273 1 253 2 11 1 163 1 376 2 262 1 333 1 108 1 100 1 199 1 237 1 336 1 7 1 
146 1 363 2 273 1 253 2 108 1 64 1 237 1 349 1 7 2 40 2 116 1 42 1 117 1 188 1 11 1 163 1 262 1 376 2 263 1 333 1 100 1 199 2 336 3 
146 1 363 2 273 1 253 2 150 1 108 1 278 1 64 1 237 1 349 1 7 2 40 2 116 2 42 1 117 1 188 1 11 1 163 2 262 1 376 2 263 1 333 2 199 2 336 3 
53 1 146 1 206 1 81 1 363 1 272 1 253 1 176 1 127 1 106 1 366 1 64 1 349 1 237 1 7 1 38 1 40 1 116 2 117 1 95 1 96 2 11 1 163 2 376 1 262 1 98 1 14 1 333 2 195 1 199 1 222 2 167 1 336 4 
53 1 38 1 146 1 116 3 206 1 117 1 363 1 11 1 96 2 163 3 150 1 262 1 127 1 176 1 333 3 366 1 195 1 199 1 222 2 64 1 183 1 336 4 
178 1 333 1 116 1 11 1 163 1 262 1 
53 2 252 1 363 1 178 1 179 1 308 1 279 1 257 1 116 6 258 1 11 3 163 5 262 2 217 1 333 6 290 1 47 1 316 1 199 2 336 3 
303 1 207 1 253 2 342 1 105 6 108 1 345 1 112 1 110 2 349 1 7 1 116 1 353 2 11 1 163 1 262 1 121 1 265 1 269 1 75 4 77 2 226 2 363 1 320 7 273 3 365 4 84 2 125 3 323 1 34 2 184 2 237 1 238 5 40 1 42 1 137 1 242 3 372 1 376 2 333 1 290 1 100 1 198 1 199 1 292 2 249 2 336 1 295 13 
53 1 206 1 339 1 79 2 227 1 83 1 275 1 1 1 176 1 127 1 128 1 366 2 325 1 157 2 181 1 183 1 350 1 38 1 240 1 116 1 10 2 96 3 163 1 13 2 333 1 195 1 222 3 336 2 
38 1 116 1 363 1 11 2 163 1 118 1 262 1 178 1 333 1 152 1 47 1 199 1 336 1 
53 1 333 4 116 4 290 1 228 1 199 1 49 1 11 1 163 4 150 1 262 1 336 1 267 1 
146 1 116 2 43 1 363 1 11 2 163 2 262 1 217 1 333 2 197 1 199 1 308 1 235 1 336 1 
193 1 53 1 333 1 116 1 11 1 328 1 163 1 50 1 262 1 123 1 
333 2 116 2 290 1 258 1 199 1 11 1 91 1 163 2 212 1 262 1 336 1 
53 1 146 1 257 1 116 5 228 1 258 1 252 1 11 2 163 4 262 2 333 5 290 1 199 2 49 1 267 1 336 3 
53 1 146 1 116 5 228 1 258 1 252 1 11 2 163 4 45 1 262 2 333 5 290 1 199 2 49 1 267 1 336 3 
53 1 40 1 42 1 116 1 363 1 273 1 253 2 11 1 163 1 376 2 262 1 333 1 108 1 199 1 278 1 237 1 336 1 7 1 
146 1 116 1 363 1 11 2 163 1 262 1 217 1 179 1 333 1 47 1 199 1 308 1 336 1 
205 1 162 1 253 1 59 1 376 1 378 1 33 1 168 1 7 1 
205 1 44 1 209 1 
205 1 33 1 273 1 326 1 168 1 
205 1 206 1 188 1 273 1 44 1 96 2 275 1 263 1 209 1 127 1 247 1 195 1 222 2 33 2 204 1 326 2 21 1 349 1 168 2 
246 1 304 1 20 1 375 1 
361 1 304 1 291 1 20 1 58 1 375 1 126 1 
282 1 5 1 58 1 
360 1 361 1 304 1 58 3 375 1 126 1 16 1 314 1 165 2 291 3 20 1 225 1 
361 1 304 1 291 2 20 1 58 2 104 1 375 1 174 1 126 1 
361 1 352 1 58 1 190 1 375 1 175 1 126 1 193 1 16 1 291 1 123 1 
16 1 361 1 291 1 20 1 58 1 375 1 126 1 
16 1 361 1 304 1 291 1 20 2 58 1 126 1 
361 2 355 1 58 2 375 1 126 2 16 1 88 1 180 1 291 2 20 1 
147 1 361 1 304 1 58 3 104 2 190 1 375 2 126 1 16 1 291 3 203 1 20 1 337 1 
361 1 283 1 304 1 58 2 104 1 375 1 175 1 126 1 193 2 16 1 291 2 20 1 50 1 348 1 123 1 
147 1 361 2 304 1 58 4 104 2 190 1 375 2 174 1 28 1 126 2 16 1 291 4 20 1 
16 1 361 1 304 1 291 1 20 1 58 1 375 1 126 1 
147 1 361 1 304 2 58 4 104 2 190 1 375 3 126 1 232 1 314 1 165 1 291 4 20 2 225 1 
361 1 304 1 58 2 104 1 375 1 86 1 126 1 16 1 331 1 233 1 291 2 20 1 
16 1 361 1 314 1 165 2 304 1 260 1 291 3 20 1 58 3 375 1 225 2 126 1 
60 1 321 2 243 1 375 2 
16 1 361 1 291 1 58 1 129 1 126 1 
16 1 361 1 304 1 203 1 291 2 20 1 58 2 104 1 375 1 126 1 
194 1 
16 1 361 1 304 1 291 1 20 1 58 1 375 1 126 1 
16 1 361 1 165 1 304 1 203 1 291 3 20 1 58 3 104 1 375 1 126 1 
232 1 147 1 190 1 375 1 
20 1 375 1 

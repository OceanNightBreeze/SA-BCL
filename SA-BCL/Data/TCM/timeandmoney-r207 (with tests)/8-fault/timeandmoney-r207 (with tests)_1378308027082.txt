#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 92 317 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 92 317 36 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 15 82 144 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (100,150) 306 78 302 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 15 96 116 338 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 15 96 116 338 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 15 96 116 338 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 15 96 116 338 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 15 230 116 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 328 14 23 162 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 92 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 92 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 92 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 92 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 92 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 92 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 92 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 15 230 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 15 230 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 15 230 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 15 230 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 15 230 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 15 230 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 15 230 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 15 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 78 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 15 230 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 15 82 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 1 171 2 9 3 8 1 64 1 313 2 139 9 104 1 248 7 145 1 73 1 110 2 188 9 74 1 290 1 79 1 294 1 32 1 295 4 35 5 301 1 205 1 210 1 265 1 
2 1 171 2 9 3 8 1 64 1 313 2 139 9 104 1 248 7 145 1 73 1 110 2 188 9 74 1 290 1 79 1 294 1 32 1 295 4 35 5 301 1 205 1 210 1 265 1 
2 2 171 2 9 3 8 1 64 1 313 2 238 1 139 9 104 1 248 6 110 2 188 9 74 2 290 2 79 1 294 1 32 1 295 4 158 1 35 5 301 1 87 1 205 2 124 1 210 1 46 1 213 1 265 1 
2 2 171 2 9 3 8 1 64 1 313 2 238 1 139 9 104 1 248 6 110 2 188 9 74 2 290 2 79 1 294 1 32 1 295 4 158 1 35 5 301 1 87 1 205 2 124 1 210 1 46 1 213 1 265 1 
2 2 171 2 9 4 8 1 64 1 313 2 238 1 139 10 104 1 248 7 110 2 188 10 74 2 290 2 79 1 294 1 32 1 295 5 158 1 35 6 301 1 87 1 205 2 124 1 210 1 46 1 213 1 265 1 
2 2 171 2 9 2 8 1 313 1 238 1 139 7 104 1 248 4 110 2 188 7 74 2 290 2 79 1 294 1 32 1 295 3 158 1 35 4 301 1 87 1 205 2 124 1 210 1 46 1 213 1 265 1 
171 1 294 1 9 1 32 1 295 2 35 3 301 1 64 1 313 2 205 1 139 4 210 1 248 3 265 1 110 1 74 1 188 4 290 1 
2 1 270 1 171 1 35 1 301 1 87 1 139 2 210 1 213 1 265 1 110 1 51 1 188 2 74 1 77 1 290 1 
2 1 171 2 9 1 295 1 35 2 301 1 139 3 210 1 104 1 248 1 265 1 110 2 188 3 
312 1 
183 2 31 1 149 1 
129 2 173 2 225 2 282 1 107 2 255 2 332 2 164 1 
129 2 166 1 173 2 225 3 174 1 231 1 14 2 138 1 314 1 23 1 315 1 282 1 142 1 70 1 283 1 107 3 289 1 190 1 322 1 80 2 326 1 198 1 155 1 296 1 328 2 255 2 332 2 118 1 119 1 333 1 258 1 259 2 334 1 42 2 161 1 337 1 164 1 
129 1 57 1 173 1 196 1 225 1 107 1 255 1 332 1 164 1 25 1 
57 1 253 1 173 1 195 1 31 1 153 1 225 1 297 1 34 1 185 1 239 1 208 1 209 1 107 1 
129 1 57 1 253 1 173 1 195 1 31 1 225 1 332 1 255 1 297 1 34 1 239 2 208 2 209 1 107 1 
239 1 208 1 134 1 99 1 111 1 
129 1 57 1 273 1 173 1 196 1 225 1 31 1 99 1 255 1 332 1 34 1 239 2 123 1 208 2 107 1 164 1 165 1 25 1 111 1 
239 1 208 1 99 1 
129 1 57 1 196 1 173 1 225 1 332 1 255 1 239 1 208 1 107 1 164 1 165 1 25 1 111 1 
31 1 
129 1 57 1 173 1 196 1 225 1 31 1 99 1 255 1 332 1 34 1 206 1 239 2 123 1 208 2 107 1 164 1 165 1 25 1 111 1 
129 1 128 2 1 1 57 1 173 1 225 1 226 1 228 2 176 2 99 2 62 4 177 1 232 1 65 1 184 1 19 5 239 5 243 1 69 1 107 1 25 1 111 2 324 1 196 1 30 2 31 2 330 2 255 1 332 1 34 2 335 1 207 2 123 1 208 5 340 1 164 1 165 1 54 1 
312 1 
129 1 29 1 173 2 225 2 332 1 255 1 282 2 107 2 212 1 
4 1 150 1 306 1 
190 1 252 1 326 1 225 1 174 1 328 1 231 1 14 1 334 1 42 1 23 1 315 1 337 1 282 1 107 1 289 1 
129 1 150 1 190 1 326 1 173 1 225 2 174 1 328 1 255 1 231 1 14 1 17 1 334 1 42 1 315 1 23 1 337 1 49 1 107 2 289 1 
129 3 173 3 225 3 282 1 49 1 332 1 107 3 255 3 
129 1 57 1 173 1 225 1 107 1 255 1 25 1 
129 1 57 1 29 1 173 1 225 1 107 1 255 1 332 1 212 1 
129 3 166 1 57 1 173 3 225 4 174 1 231 1 14 1 17 1 138 1 314 1 239 1 315 1 23 1 186 1 282 1 142 1 283 1 107 4 289 1 109 1 190 1 322 1 253 1 80 2 326 1 195 1 155 1 296 1 328 1 332 2 255 3 297 1 119 1 333 1 259 1 334 1 42 1 208 1 337 1 209 1 49 1 212 1 164 1 
129 1 173 2 153 1 225 2 282 1 275 1 49 1 107 2 255 1 
129 3 112 1 57 1 253 1 173 3 195 1 31 1 225 3 332 1 255 3 297 1 17 1 239 1 208 1 186 1 209 1 49 2 212 1 107 3 
129 2 4 1 150 1 173 2 225 2 332 1 255 2 49 1 212 1 107 2 
190 1 326 1 225 1 174 1 328 1 231 1 14 1 334 1 42 1 23 1 315 1 337 1 282 1 107 1 289 1 
56 1 190 1 326 1 225 1 97 1 328 1 231 1 14 1 334 1 42 1 23 1 337 1 282 1 107 1 289 1 
4 2 131 1 306 2 276 1 100 1 178 1 233 1 102 1 314 1 138 2 142 1 283 1 150 2 80 2 296 1 330 1 254 1 119 1 333 1 259 4 161 2 207 1 126 1 303 1 
129 1 57 1 173 1 209 1 225 1 107 1 255 1 13 1 
129 4 170 1 173 5 153 1 225 5 275 1 255 4 332 1 180 1 17 1 282 1 49 2 107 5 212 1 
129 2 57 1 173 2 225 2 13 1 107 2 255 2 25 1 
137 1 201 1 
137 1 201 1 
331 1 52 1 
331 1 52 1 
331 1 52 1 
137 1 7 1 201 1 
137 1 7 1 201 1 
137 1 274 1 201 1 
249 1 137 2 187 1 331 1 52 1 201 2 
137 1 7 1 201 1 
137 1 175 1 201 1 
137 1 175 1 201 1 
137 1 175 1 201 1 
113 1 92 1 137 1 317 1 157 1 201 1 
113 1 92 1 137 1 239 1 208 1 317 1 157 1 36 1 201 1 
205 1 74 1 290 1 
74 1 290 1 77 1 
205 2 10 1 199 1 300 1 74 3 77 1 
205 1 10 1 304 1 300 1 74 2 77 1 
205 1 10 2 300 1 74 2 77 1 
128 1 267 1 272 1 305 1 226 1 228 1 61 2 99 1 12 1 62 3 16 1 183 3 19 2 102 1 239 5 141 1 149 1 111 4 81 1 30 1 31 2 330 1 34 1 39 1 40 2 207 1 123 1 208 5 126 1 341 1 343 2 344 1 
129 1 57 1 173 1 225 1 134 1 99 1 239 2 107 1 25 1 111 2 250 1 196 1 31 1 332 1 255 1 34 1 208 2 89 1 339 1 164 1 165 1 
128 1 228 1 61 2 12 1 62 3 16 1 183 4 19 2 102 1 239 3 141 1 149 2 111 2 324 1 30 1 81 1 31 3 330 1 34 1 40 1 207 1 208 3 126 1 341 1 343 2 344 1 
128 1 228 1 61 4 12 1 62 5 16 1 183 7 19 4 102 2 239 4 141 2 149 3 111 3 324 1 30 1 81 2 31 4 330 2 299 1 34 1 120 1 40 2 260 1 207 2 208 4 126 2 341 1 343 4 344 1 
312 1 
94 1 337 1 
224 1 
337 1 231 1 
167 1 334 1 337 3 231 1 50 2 179 1 
334 1 337 1 231 1 
337 1 329 1 
219 1 60 1 330 1 233 2 309 1 159 2 65 1 184 1 259 7 138 3 207 1 161 4 24 1 247 1 71 1 303 3 54 1 
219 1 60 1 330 1 233 2 309 1 159 2 65 1 184 1 259 7 138 3 207 1 161 4 24 1 247 1 71 1 303 3 54 1 
219 1 156 1 60 1 330 1 233 2 309 1 159 2 65 1 184 1 259 7 138 3 207 1 161 4 24 1 247 1 71 1 303 3 54 1 
259 3 138 1 161 2 24 1 82 1 144 1 247 2 33 1 229 1 15 1 159 1 
219 1 60 1 308 1 233 3 309 1 184 1 65 1 314 2 138 4 24 1 142 2 247 1 108 1 288 1 80 4 296 2 330 1 159 2 333 2 259 9 207 1 161 5 303 4 54 1 
2 1 269 1 58 1 171 1 14 1 66 1 139 2 248 1 289 1 110 1 188 2 74 2 290 1 77 1 152 1 197 1 326 1 328 1 199 1 35 1 301 1 122 1 160 1 205 1 42 1 210 1 265 1 216 1 53 1 91 1 
268 1 2 1 269 1 58 1 171 1 14 1 66 1 139 3 248 2 72 1 289 1 110 1 188 3 74 2 290 1 77 1 27 1 197 1 326 1 328 1 199 1 35 1 301 1 122 1 160 1 205 1 42 1 265 1 216 1 91 1 
2 1 269 1 14 1 66 1 139 2 248 2 72 1 289 1 188 2 74 2 77 1 290 1 27 1 197 1 326 1 328 1 199 1 35 1 301 1 122 1 160 1 42 1 205 1 265 1 91 1 
320 1 2 2 268 1 115 1 171 1 326 1 328 1 231 1 14 1 122 2 20 1 160 2 66 2 42 1 316 1 139 1 23 1 337 1 289 1 148 1 110 1 342 1 188 1 
2 1 269 1 58 1 171 1 14 1 66 1 139 1 289 1 110 1 188 1 74 2 290 1 77 1 27 1 152 1 197 1 326 1 328 1 199 1 122 1 160 1 205 1 42 1 210 1 216 1 91 1 
90 1 
173 2 172 1 99 5 11 2 19 1 103 1 185 1 280 1 107 2 25 1 193 3 196 1 195 1 30 1 31 1 297 1 34 1 41 1 123 2 208 4 209 1 45 1 47 1 215 1 129 1 128 1 57 2 225 2 226 1 227 1 228 1 307 3 62 1 310 1 311 1 67 2 239 4 242 1 149 2 76 3 253 1 153 1 327 2 255 1 332 1 86 5 88 2 164 1 165 1 
173 2 172 1 99 5 11 2 19 1 103 1 185 1 280 1 107 2 25 1 193 3 196 1 195 1 30 1 31 1 297 1 34 1 41 1 123 2 208 4 209 1 45 1 47 1 215 1 129 1 128 1 57 2 225 2 226 1 227 1 228 1 307 3 62 1 310 1 311 1 67 2 239 4 242 1 149 2 76 3 253 1 153 1 327 2 255 1 332 1 86 5 88 2 164 1 165 1 
173 1 172 1 99 2 181 2 183 2 19 1 103 1 185 1 284 1 107 1 193 1 195 1 30 1 31 1 297 1 34 1 123 1 208 3 44 1 209 1 45 1 128 1 57 1 225 1 226 1 228 1 227 1 307 1 62 1 236 1 310 1 67 2 239 3 242 1 76 1 253 1 153 1 86 3 88 2 
128 1 95 1 169 1 226 1 228 1 99 2 62 1 231 2 14 2 19 1 20 1 239 2 23 2 289 2 115 1 326 3 30 1 328 2 117 1 202 1 334 1 336 1 42 2 123 1 162 1 208 2 337 2 262 1 341 1 
57 1 173 1 225 1 227 1 99 2 310 1 185 1 103 1 239 3 242 1 107 1 193 1 253 1 195 1 153 1 297 1 86 2 206 1 123 1 208 3 45 1 209 1 
57 1 253 1 173 1 195 1 31 1 153 1 225 1 227 1 307 1 99 1 297 1 34 1 310 1 86 3 206 1 103 1 185 1 123 1 239 3 208 3 242 1 209 1 45 1 107 1 
57 1 173 1 225 1 227 1 307 1 99 2 310 1 185 1 103 1 239 3 242 1 107 1 76 1 193 1 253 1 195 1 153 1 297 1 86 3 206 1 123 1 208 3 45 1 209 1 
173 2 172 1 99 7 11 2 19 1 103 1 185 1 280 1 107 2 25 1 193 4 196 1 195 1 30 1 31 1 297 1 34 1 206 1 41 1 123 3 208 5 209 1 45 1 47 1 215 1 218 1 129 1 128 1 57 2 225 2 226 1 227 1 228 1 307 2 62 1 310 1 311 1 67 2 239 5 242 1 149 2 76 4 253 1 153 1 327 2 255 1 332 1 86 4 88 2 164 1 165 1 
173 2 172 1 11 2 99 4 183 2 19 1 103 1 185 1 280 1 107 2 25 1 193 2 196 1 195 1 30 1 31 1 297 1 34 1 123 2 208 4 209 1 45 1 129 1 128 1 57 2 225 2 226 1 228 1 227 1 307 2 62 1 236 1 310 1 67 2 239 4 242 1 149 2 76 2 253 1 153 1 327 2 255 1 332 1 86 4 88 2 164 1 165 1 
128 1 57 1 172 1 173 1 225 1 226 1 227 1 228 1 307 2 99 4 11 2 62 1 310 1 67 2 19 1 185 1 103 1 239 4 242 1 280 1 107 1 149 2 76 2 193 2 253 1 30 1 195 1 31 1 327 2 153 1 297 1 34 1 86 4 41 1 123 2 88 2 208 4 45 1 209 1 47 1 215 1 
173 2 172 1 11 2 99 4 19 1 103 1 185 1 280 1 107 2 25 1 193 2 196 1 195 1 30 1 31 1 297 1 34 1 41 1 123 2 208 4 209 1 45 1 47 1 215 1 129 1 128 1 57 2 226 1 225 2 228 1 227 1 307 2 62 1 310 1 67 2 239 4 242 1 149 2 76 2 253 1 153 1 327 2 255 1 332 1 86 4 88 2 164 1 165 1 
173 2 172 1 99 4 181 2 183 2 19 1 103 1 185 1 284 2 107 2 25 1 291 1 193 2 196 1 195 1 30 1 31 1 297 1 34 1 41 1 123 2 208 4 44 1 209 1 45 1 129 1 128 1 57 2 226 1 225 2 228 1 227 1 307 2 62 1 310 1 67 2 239 4 242 1 143 1 76 2 253 1 153 1 255 1 332 1 86 4 88 2 164 1 165 1 
312 1 314 1 131 1 80 2 142 1 296 1 283 1 119 1 333 1 
150 3 78 1 80 2 306 3 296 1 33 1 229 1 119 1 333 1 259 2 161 1 314 1 138 1 302 1 142 1 48 1 283 1 
129 1 4 1 173 1 225 2 174 1 231 1 14 1 17 1 18 1 314 1 138 1 315 1 23 1 282 1 142 1 283 1 107 2 289 1 190 1 252 1 326 1 80 2 198 1 155 1 328 1 296 1 255 1 37 1 119 1 333 1 121 1 334 1 259 2 42 1 161 1 337 1 48 1 49 1 
4 7 173 1 174 2 14 3 184 1 17 1 102 2 23 1 282 2 283 3 107 3 289 2 114 2 191 1 292 2 190 2 27 1 198 1 296 3 119 3 42 3 207 3 48 1 49 1 126 2 303 8 54 1 129 1 219 4 225 3 306 7 60 1 231 2 309 1 233 4 65 1 237 2 138 10 314 3 241 1 240 1 315 2 142 3 150 7 322 2 80 6 326 2 81 2 155 1 328 3 330 3 255 1 159 1 333 3 259 20 334 2 161 10 337 2 261 2 
129 1 93 1 131 1 173 1 225 1 231 2 14 7 20 1 314 2 138 1 23 2 281 1 142 2 283 2 107 1 289 2 147 1 27 1 26 1 28 1 115 1 326 2 80 4 198 1 155 1 328 8 296 2 255 1 200 1 118 2 119 2 333 2 259 2 42 8 161 1 337 3 49 1 263 1 53 1 
129 1 4 1 173 1 225 1 306 1 233 1 102 1 314 1 138 2 142 1 283 1 107 1 150 1 321 1 80 2 81 1 296 1 330 1 255 1 332 1 119 1 333 1 259 3 161 1 207 1 48 1 212 1 126 1 303 1 
219 1 4 1 150 1 131 1 80 2 306 1 296 1 254 1 330 1 119 1 333 1 259 2 314 1 161 2 142 1 283 1 126 1 303 1 
4 1 150 1 131 1 80 2 306 1 296 1 233 1 178 1 119 1 333 1 259 2 102 1 314 1 207 1 138 2 142 1 283 1 303 1 
219 1 4 2 131 1 306 2 233 1 102 1 314 1 138 2 142 1 283 1 150 2 81 1 80 2 296 1 330 1 119 1 333 1 259 4 161 2 207 1 126 1 303 2 
219 1 4 1 150 1 80 2 306 1 296 1 254 1 330 1 119 1 333 1 259 2 314 1 161 2 142 1 283 1 126 1 303 1 147 1 
4 1 150 1 80 2 306 1 296 1 233 1 178 1 119 1 333 1 259 2 102 1 314 1 207 1 138 2 142 1 283 1 303 1 147 1 
219 1 4 2 306 2 233 1 102 1 314 1 138 2 142 1 283 1 147 1 150 2 81 1 80 2 296 1 330 1 119 1 333 1 259 4 161 2 207 1 126 1 303 2 
219 1 4 2 150 2 80 2 81 1 306 2 296 1 330 1 233 1 119 1 333 1 259 4 102 1 138 2 207 1 314 1 161 2 142 1 283 1 126 1 303 2 
225 1 174 1 231 1 14 1 314 1 138 1 315 1 23 1 282 1 142 1 283 1 107 1 289 1 190 1 322 1 326 1 80 2 198 1 155 1 328 1 296 1 119 1 333 1 259 2 334 1 42 1 161 1 337 1 
56 1 97 1 225 1 231 1 234 1 14 1 314 1 138 1 23 1 282 1 142 1 283 1 107 1 289 1 190 1 326 1 80 2 198 1 155 1 328 1 296 1 119 1 333 1 259 2 334 1 42 1 161 1 337 1 
219 1 4 2 306 2 233 1 102 1 314 1 138 2 142 1 283 1 150 2 81 1 80 2 296 1 330 1 119 1 333 1 259 4 161 2 207 1 48 1 126 1 303 2 
219 1 4 2 225 1 306 2 174 1 231 1 233 1 14 1 237 1 102 1 138 2 314 1 315 1 142 1 283 1 107 1 289 1 150 2 190 1 322 1 326 1 80 2 81 1 328 1 296 1 330 1 119 1 333 1 259 4 334 1 42 1 207 1 161 2 337 1 126 1 303 2 53 1 
219 1 129 1 4 1 173 1 225 1 306 1 102 1 138 1 314 1 244 1 142 1 283 1 107 1 150 1 80 2 81 1 296 1 330 1 255 1 332 1 119 1 333 1 259 3 207 1 161 2 48 1 212 1 126 1 303 1 
96 1 80 2 116 1 296 1 33 1 229 1 15 1 333 1 259 4 161 2 138 2 314 1 338 1 245 1 163 1 142 1 108 1 
96 1 80 2 116 1 296 1 33 1 229 1 15 1 333 1 259 4 161 2 138 2 314 1 338 1 245 1 163 1 142 1 108 1 
96 1 80 2 116 1 296 1 33 1 229 1 15 1 333 1 259 4 161 2 138 2 314 1 338 1 245 1 163 1 142 1 108 1 
96 1 80 2 116 1 296 1 33 1 229 1 15 1 333 1 259 4 161 2 138 2 314 1 338 1 245 1 163 1 142 1 108 1 
96 2 80 2 116 2 296 1 33 2 229 2 230 1 15 2 333 1 259 8 161 4 314 1 138 4 338 1 163 1 245 2 142 1 108 1 
93 1 59 1 173 2 225 2 133 1 231 1 14 2 314 1 138 1 142 1 283 1 146 1 107 2 289 1 26 1 326 1 80 2 198 1 154 1 155 1 328 2 296 1 298 1 118 2 119 1 333 1 259 2 42 2 161 1 337 1 48 1 
27 1 58 1 326 1 197 1 328 2 199 1 14 2 122 1 205 1 42 2 287 1 289 1 214 1 74 2 53 1 290 1 77 1 319 1 91 1 
27 1 58 1 197 1 326 1 328 1 199 1 14 1 122 1 205 1 42 1 287 1 289 1 74 2 266 1 290 1 77 1 91 1 
115 1 326 1 328 1 231 1 14 1 122 1 20 1 42 1 23 1 316 1 337 1 285 1 289 1 214 1 
27 1 58 1 326 1 197 1 328 1 199 1 14 1 122 1 205 1 42 1 287 1 289 1 214 1 74 2 290 1 77 1 319 1 91 1 
168 1 
129 2 166 1 173 2 225 3 174 1 231 1 14 1 138 1 314 1 23 1 315 1 282 1 142 1 283 1 107 3 289 1 190 1 322 1 80 2 326 1 155 1 296 1 328 1 255 2 332 2 119 1 333 1 259 1 334 1 42 1 337 1 164 1 
128 1 169 1 30 1 226 1 31 4 228 1 61 2 62 1 34 2 159 1 183 4 19 2 341 1 149 2 343 2 
312 1 
129 1 128 1 57 1 173 1 225 1 226 1 228 1 11 1 99 1 62 1 183 1 19 1 239 1 280 1 107 1 149 1 25 1 196 1 30 1 327 1 31 1 255 1 332 1 34 1 123 1 208 1 164 1 165 1 
128 2 220 1 130 1 94 2 226 2 228 2 176 1 61 3 99 2 62 4 231 1 63 1 14 1 179 1 183 6 182 1 19 3 102 1 239 2 21 1 140 1 23 1 289 1 149 3 253 1 81 1 30 2 326 2 31 3 328 1 330 1 85 1 334 1 42 1 207 1 123 1 208 2 261 1 337 4 126 1 341 1 50 1 343 3 
1 1 5 1 169 1 173 1 98 1 176 2 99 1 15 1 183 6 19 5 102 2 107 1 106 1 25 1 192 1 30 2 196 1 31 5 33 1 34 2 203 1 207 2 123 1 208 1 126 2 129 1 128 2 57 1 225 1 226 2 228 2 229 1 61 5 230 1 62 8 239 1 149 3 81 2 325 1 330 2 332 1 255 1 341 1 164 1 165 1 343 5 
128 1 129 1 1 1 57 1 173 1 225 1 226 1 228 1 176 2 62 2 184 1 65 1 19 2 239 1 107 1 25 1 30 1 196 1 330 2 332 1 255 1 207 1 208 1 340 1 164 1 215 1 165 1 54 1 
128 1 30 1 226 1 31 1 228 1 177 1 62 1 34 1 19 1 243 1 
1 1 81 2 31 5 176 2 330 2 61 5 62 5 183 10 19 5 102 2 207 2 261 1 126 2 149 5 343 5 
129 1 57 1 173 1 196 1 225 1 31 1 99 1 255 1 332 1 34 1 123 1 239 1 208 1 107 1 164 1 165 1 25 1 
128 1 169 1 251 1 30 1 226 1 228 1 328 2 99 2 62 1 14 2 202 1 19 1 42 2 239 1 123 1 208 1 23 2 162 1 341 1 
113 1 92 1 
113 1 92 1 
113 1 92 1 
113 1 92 1 
113 1 92 1 
113 1 92 1 
113 1 92 1 
113 1 92 1 
137 1 201 1 
80 2 296 1 229 1 33 1 230 1 15 1 333 1 259 2 161 1 314 1 138 1 142 1 108 1 
80 4 296 2 33 1 229 1 230 1 15 1 333 2 259 2 161 1 314 2 138 1 142 2 108 1 264 1 
219 1 98 1 60 1 229 1 230 1 309 1 15 1 233 3 65 1 184 1 102 2 138 10 314 3 142 3 106 1 108 1 288 1 192 1 80 6 81 2 296 3 33 1 330 3 159 1 203 1 333 3 259 19 161 9 207 3 126 2 303 4 264 1 54 1 
80 2 296 1 229 1 33 1 230 1 15 1 333 1 259 2 161 1 314 1 138 1 142 1 108 1 
80 2 296 1 229 1 33 1 230 1 15 1 333 1 259 2 161 1 314 1 138 1 142 1 108 1 
219 1 98 1 229 1 230 1 15 1 233 1 102 2 138 6 314 1 142 1 106 1 108 1 192 1 80 2 81 2 296 1 33 1 330 2 333 1 203 1 259 12 161 6 207 2 126 2 303 2 
80 4 296 2 33 1 229 1 230 1 15 1 333 2 259 2 161 1 314 2 138 1 142 2 108 1 264 1 
3 1 80 4 296 2 33 1 229 1 230 1 15 1 333 2 259 2 161 1 314 2 138 1 142 2 108 1 
219 3 60 1 330 1 309 2 233 3 184 3 65 1 259 7 138 4 207 1 161 3 303 6 54 3 
3 1 80 4 296 2 33 1 229 1 230 1 15 1 333 2 259 2 161 1 314 2 138 1 142 2 108 1 
219 1 80 4 296 2 60 1 330 1 233 2 309 1 159 1 333 2 65 1 184 1 259 8 207 1 138 4 161 4 314 2 142 2 303 3 288 1 54 1 
312 1 
219 1 80 2 81 1 296 1 330 1 233 1 333 1 259 4 102 1 138 2 207 1 314 1 161 2 142 1 126 1 303 2 264 1 
259 2 161 1 138 1 33 1 229 1 15 1 
259 2 78 1 161 1 138 1 33 1 229 1 
259 1 138 1 229 1 
259 1 161 1 33 1 
219 1 80 2 81 1 296 1 330 1 233 2 333 1 259 6 102 1 314 1 138 3 161 3 207 1 261 1 142 1 126 1 303 3 264 1 
80 2 296 1 229 1 33 1 230 1 15 1 333 1 259 2 161 1 314 1 138 1 142 1 108 1 
219 1 330 1 233 1 65 1 184 1 259 6 161 3 207 1 138 3 303 2 54 1 
219 1 80 2 6 1 296 1 60 1 233 1 309 1 333 1 184 1 259 3 161 1 138 2 314 1 142 1 303 2 288 1 54 1 
219 2 80 2 296 1 330 2 233 3 333 1 184 2 65 1 259 10 314 1 161 5 138 5 207 2 142 1 340 1 108 1 303 5 54 2 
219 1 80 2 296 1 330 1 333 1 259 2 314 1 161 2 142 1 126 1 108 1 303 1 
219 1 80 2 81 1 296 1 330 1 233 1 333 1 259 4 102 1 138 2 207 1 314 1 161 2 142 1 126 1 303 2 108 1 
219 1 3 1 80 6 6 1 296 3 233 1 333 3 184 1 259 3 138 2 314 3 161 1 142 3 288 1 108 1 303 2 54 1 
3 1 80 6 82 1 296 3 33 1 229 1 15 1 333 3 259 2 161 1 314 3 138 1 142 3 108 1 264 1 
136 1 173 1 225 1 153 1 282 1 275 1 107 1 
222 1 293 1 173 1 153 1 225 1 275 1 235 1 136 1 282 1 105 1 107 1 189 1 
312 1 42 1 23 1 328 1 14 1 
129 1 190 1 326 1 173 1 225 2 328 1 255 1 231 1 14 1 334 1 42 1 23 1 315 1 337 1 282 1 49 1 107 2 289 1 
129 2 190 1 57 1 132 1 326 1 173 2 225 2 328 1 329 1 297 1 255 1 231 2 14 1 334 2 42 1 315 1 337 3 209 1 282 1 49 1 107 2 286 1 289 1 
129 2 57 1 132 1 173 2 97 1 225 2 231 2 14 2 282 1 286 1 107 2 289 1 190 1 326 1 328 2 329 1 255 1 297 1 334 2 42 2 337 3 209 1 49 1 127 1 
94 1 132 1 99 1 277 1 231 1 14 3 101 1 239 2 23 1 286 1 289 1 253 1 326 1 31 1 328 3 329 1 34 1 334 1 42 3 208 2 337 4 127 1 50 1 
94 1 253 1 132 1 326 1 31 1 328 3 329 1 99 1 231 1 34 1 14 3 334 1 42 3 239 2 23 1 208 2 140 1 337 4 127 1 286 1 289 1 50 1 
42 1 326 1 328 1 263 1 289 1 14 1 
27 1 26 1 95 1 28 1 326 3 328 7 200 1 231 2 117 1 118 1 14 6 179 1 204 1 334 1 42 7 23 2 337 3 281 1 263 1 289 2 53 1 
129 1 4 1 173 1 225 2 306 1 174 1 60 1 231 1 233 2 309 1 14 1 65 1 184 1 237 1 138 3 314 2 315 1 282 2 142 2 283 2 107 2 289 1 150 1 190 1 292 1 322 1 326 1 80 4 296 2 328 1 330 1 255 1 298 1 159 1 119 2 333 2 259 6 334 1 42 1 207 1 161 3 337 1 48 1 49 1 303 2 53 1 54 1 
1 1 94 1 173 1 176 2 99 2 177 1 14 1 182 1 184 1 19 5 23 1 107 1 25 1 111 1 30 2 196 1 31 2 34 2 42 1 123 1 207 2 208 3 50 1 54 1 128 2 129 1 57 1 225 1 226 2 228 2 62 4 63 1 65 1 239 3 140 1 243 1 251 1 253 1 328 1 330 2 332 1 255 1 85 1 337 2 340 1 164 1 165 1 
326 2 328 2 231 1 14 2 179 1 334 1 42 2 21 1 337 2 263 1 289 1 50 1 53 1 
115 1 326 1 328 4 231 1 14 4 20 1 42 4 23 1 337 1 68 1 127 1 289 1 53 1 
95 1 326 2 328 2 231 1 117 1 14 2 334 1 42 2 336 1 241 1 337 1 262 1 286 1 289 1 
42 1 23 1 326 1 328 1 289 1 14 1 74 1 290 1 77 1 91 1 
26 1 27 1 42 2 337 1 326 1 154 1 328 2 289 1 231 1 14 2 53 1 
26 1 115 1 326 2 328 5 231 2 200 1 14 4 20 1 42 5 23 1 337 3 68 1 281 1 286 1 289 2 53 1 
26 1 115 1 326 2 328 5 231 2 200 1 14 4 38 1 20 1 42 5 23 1 337 3 68 1 286 1 289 2 53 1 
129 1 190 1 326 1 173 1 225 2 97 1 328 1 255 1 231 1 14 1 334 1 42 1 23 1 337 1 282 1 49 1 107 2 289 1 
95 1 326 2 328 1 231 1 117 1 14 1 179 1 204 1 334 1 42 1 337 1 286 1 289 1 
55 1 323 1 43 1 282 1 256 1 
55 1 57 1 323 2 253 1 194 1 195 1 31 1 297 1 256 2 34 1 239 2 208 2 43 2 186 1 209 1 282 1 125 1 217 1 111 1 
55 1 323 1 43 1 173 1 59 1 225 1 133 1 107 1 146 1 
55 1 194 1 125 1 
87 1 139 3 171 1 210 1 8 1 248 1 35 1 265 1 110 1 301 1 188 3 
0 1 9 1 295 1 35 1 
35 1 301 1 
312 1 
139 1 171 1 35 1 265 1 110 1 301 1 188 1 
2 1 66 1 188 1 
171 1 83 1 84 1 35 1 257 1 301 1 87 2 139 3 210 1 110 1 265 1 188 3 
313 1 139 2 171 1 248 1 35 1 265 1 110 1 301 1 188 2 
171 1 32 1 295 1 35 1 205 1 139 1 210 1 110 1 188 1 74 1 290 1 
139 1 171 1 210 1 35 1 110 1 301 1 188 1 
139 1 171 1 210 1 265 1 110 1 301 2 188 1 
221 1 171 2 35 1 301 1 139 2 210 1 211 1 318 1 110 2 188 2 
171 1 79 1 8 1 9 1 295 1 35 2 301 1 139 3 210 1 248 2 265 1 110 1 188 3 
223 1 171 1 199 1 35 1 301 1 205 1 139 2 210 1 248 1 265 1 110 1 74 2 188 2 77 1 290 1 
171 2 9 1 295 1 35 2 301 1 64 1 313 1 139 4 210 1 248 2 265 1 110 2 188 4 
139 1 171 1 210 1 35 1 265 1 110 1 301 1 188 1 
0 1 171 1 83 1 9 1 295 1 35 3 257 1 301 2 87 1 139 4 248 2 265 2 110 1 188 4 
171 1 35 1 301 1 278 1 139 2 22 1 210 1 145 1 248 1 110 1 265 1 188 2 
151 1 171 1 83 1 35 1 257 2 301 1 87 2 139 3 210 1 110 1 265 1 188 3 
271 1 279 1 246 2 35 2 
139 1 171 1 210 1 110 1 75 1 188 1 
139 2 171 1 210 1 8 1 248 1 35 1 265 1 110 1 301 1 188 2 
135 1 
139 1 171 1 210 1 35 1 265 1 110 1 301 1 188 1 

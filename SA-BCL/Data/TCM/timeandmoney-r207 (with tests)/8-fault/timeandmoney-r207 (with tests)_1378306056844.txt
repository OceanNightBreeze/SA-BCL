#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 2 (251,368) (251,368) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 2 (251,368) (251,368) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 2 (251,368) (251,368) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 2 (251,368) (251,368) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 376 (40,43) (40,43) 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 2 (185,266) (185,266) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (3,88,150,289) (3,88,150,289) (3,88,150,289) 62 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (3,88,150,289) (3,88,150,289) (3,88,150,289) 62 344 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (3,88,150,289) (3,88,150,289) (3,88,150,289) 62 344 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (3,88,150,289) (3,88,150,289) (216,311,357) (216,311,357) (216,311,357) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (3,88,150,289) (3,88,150,289) (216,311,357) (216,311,357) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (3,88,150,289) (3,88,150,289) (216,311,357) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 258 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 177 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 177 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 376 (40,43) (40,43) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 3006 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
226 1 2 1 368 1 251 1 3 1 322 1 371 1 88 1 150 1 
226 1 2 1 368 1 251 1 3 1 322 1 371 1 88 1 150 1 
226 1 2 1 368 1 251 1 3 1 322 1 371 1 88 1 150 1 
226 1 2 1 368 1 251 1 3 1 322 1 371 1 88 1 150 1 
40 1 142 1 289 1 72 1 3 2 221 1 209 1 43 1 264 1 88 1 150 1 322 1 371 2 22 1 195 1 376 2 
142 1 226 1 2 1 3 1 322 1 185 1 371 1 139 1 88 1 266 1 150 1 
226 1 62 1 3 2 322 1 371 1 88 2 150 2 
289 1 226 1 62 1 3 3 322 1 346 1 371 2 88 2 344 1 150 2 
289 1 226 1 62 1 3 3 322 1 346 1 371 2 88 2 344 1 150 2 
89 1 177 1 238 1 
206 2 238 1 109 1 
350 2 283 1 360 2 145 2 236 2 125 2 193 1 108 2 
350 3 262 1 196 1 145 2 170 1 125 3 108 2 198 1 267 1 283 1 225 1 37 1 129 1 199 1 38 1 179 1 39 1 9 1 131 1 271 2 132 2 317 1 360 2 205 1 236 2 276 1 136 2 97 1 164 1 49 1 100 1 165 1 19 1 301 2 193 1 261 1 104 2 
350 1 160 1 360 1 145 1 236 1 125 1 193 1 108 1 140 1 172 1 
350 1 295 1 236 1 125 1 275 1 320 1 151 1 89 1 238 1 315 1 56 1 373 1 287 1 140 1 
350 1 360 1 145 1 236 1 275 2 125 1 108 1 320 2 89 1 238 1 315 1 56 1 373 1 287 1 140 1 
0 1 219 1 6 1 275 1 320 1 
0 1 219 1 89 1 238 1 275 2 375 1 320 2 68 1 
219 1 275 1 320 1 
0 1 160 1 350 1 360 1 145 1 236 1 275 1 125 1 108 1 320 1 172 1 64 1 193 1 140 1 
238 1 
0 1 219 1 89 1 238 1 273 1 275 2 320 2 68 1 
69 1 0 2 280 1 219 2 117 1 94 1 208 1 124 1 275 5 44 2 320 5 223 1 334 2 321 2 35 1 89 1 238 1 8 1 68 1 
283 1 177 1 
350 2 233 1 360 1 145 1 236 2 125 2 108 1 283 2 286 1 
293 1 12 1 119 1 
350 1 262 1 271 1 132 1 205 1 125 1 267 1 283 1 38 1 165 1 301 1 179 1 259 1 9 1 39 1 261 1 
350 2 291 1 262 1 271 1 132 1 360 1 12 1 205 1 145 1 236 1 125 2 163 1 267 1 38 1 165 1 179 1 301 1 39 1 9 1 261 1 
163 1 350 3 283 1 360 3 145 3 236 3 125 3 108 1 
350 1 360 1 145 1 236 1 125 1 140 1 172 1 
350 1 233 1 360 1 145 1 236 1 286 1 125 1 108 1 140 1 
350 4 262 1 196 1 145 3 170 1 125 4 108 2 267 1 283 1 225 1 37 1 199 1 38 1 176 1 179 1 286 1 315 1 39 1 9 1 131 1 287 1 288 1 291 1 271 1 132 1 317 1 360 3 205 1 236 3 276 1 275 1 320 1 163 1 136 1 164 1 49 1 165 1 301 1 56 1 373 1 193 1 261 1 104 2 140 1 
350 2 163 1 283 1 352 1 360 1 295 1 145 1 236 2 125 2 
350 3 291 1 57 1 360 3 145 3 236 3 275 1 125 3 108 1 320 1 163 2 286 1 238 1 315 1 56 1 373 1 287 1 140 1 288 1 
350 2 293 1 360 2 12 1 145 2 236 2 125 2 108 1 163 1 286 1 
350 1 262 1 271 1 132 1 205 1 125 1 267 1 283 1 38 1 165 1 301 1 179 1 9 1 39 1 261 1 
350 1 262 1 271 1 132 1 263 1 125 1 308 1 267 1 283 1 38 1 165 1 301 1 179 1 9 1 39 1 
304 1 196 1 59 1 328 1 198 2 225 2 199 1 335 1 284 1 180 1 232 1 293 2 317 1 12 2 133 1 119 2 276 1 367 1 136 4 164 1 49 1 17 1 347 1 104 2 
350 1 360 1 294 1 145 1 236 1 373 1 125 1 140 1 
350 5 163 2 291 1 283 1 352 1 360 4 295 1 145 4 286 1 236 5 125 5 159 1 108 1 14 1 
350 2 294 1 360 2 145 2 236 2 125 2 140 1 172 1 
130 1 138 1 
130 1 138 1 
292 1 45 1 
292 1 45 1 
292 1 130 1 138 1 45 1 
130 1 138 1 201 1 
130 1 138 1 201 1 
130 1 343 1 138 1 
292 1 130 2 138 2 90 1 45 1 250 1 
130 1 138 1 201 1 
130 1 60 1 138 1 
130 1 60 1 138 1 
130 1 60 1 138 1 
122 1 84 1 161 1 115 2 197 2 275 2 319 1 75 2 96 2 320 2 77 1 189 2 130 2 137 3 178 1 238 1 138 2 250 1 202 1 
350 2 123 1 145 2 125 2 306 1 283 1 130 1 153 1 65 1 71 1 161 1 360 2 115 1 236 2 343 1 275 1 96 1 75 1 320 1 189 1 137 1 215 1 138 1 103 1 
142 1 72 1 264 1 
142 1 72 1 139 1 
142 3 264 2 157 1 337 1 139 1 237 1 
316 1 142 2 264 1 337 1 139 1 237 1 
142 2 264 1 337 1 139 1 237 2 
325 1 0 4 219 1 1 1 304 1 244 2 306 1 109 1 334 1 89 1 336 1 65 1 358 1 180 1 181 2 68 1 232 1 71 1 359 1 117 2 206 3 94 1 208 3 44 1 275 5 254 2 320 5 367 1 321 1 238 2 300 1 20 1 
325 3 0 7 280 1 219 6 304 3 244 6 109 3 309 1 355 1 334 2 152 1 89 1 336 2 6 5 7 1 180 3 10 5 68 1 232 3 71 4 252 1 117 6 206 9 94 1 208 8 275 9 44 2 254 6 320 9 367 3 321 2 16 1 238 5 300 2 20 1 
0 2 325 1 280 1 304 1 244 2 109 2 334 1 89 1 336 1 358 1 180 1 181 1 232 1 71 1 359 1 117 2 206 4 208 3 44 1 275 3 320 3 254 2 367 1 321 1 238 3 300 1 
0 3 325 2 280 1 304 2 244 4 109 3 355 1 334 1 89 1 336 1 358 1 7 1 180 2 181 2 232 2 71 2 359 1 252 1 117 4 206 7 208 5 44 1 275 4 254 4 320 4 367 2 321 1 238 4 300 1 
323 1 165 1 177 1 
243 1 165 1 
338 1 
165 1 39 1 
262 1 143 1 323 2 165 3 302 1 39 1 
262 1 165 1 39 1 
269 1 165 1 
220 1 59 3 74 1 148 1 198 4 34 1 76 1 367 1 48 1 225 3 136 7 80 1 284 2 247 1 285 1 180 1 374 2 
220 1 59 3 74 1 148 1 198 4 34 1 76 1 367 1 48 1 225 3 136 7 80 1 284 2 247 1 285 1 180 1 374 2 
168 1 220 1 59 3 74 1 148 1 198 4 34 1 76 1 367 1 48 1 225 3 136 7 80 1 284 2 247 1 285 1 180 1 374 2 
349 4 325 3 304 3 220 5 196 1 59 10 148 1 198 16 34 2 225 15 356 1 247 2 284 5 285 1 180 4 232 3 276 1 74 1 76 2 48 1 367 4 188 1 297 1 136 31 164 1 49 1 98 3 80 2 278 1 53 1 374 3 82 1 104 2 217 1 
220 1 196 2 59 4 148 1 198 5 34 1 225 4 284 3 247 1 249 1 180 1 276 2 74 1 76 1 367 1 48 1 136 9 164 2 49 2 324 1 80 1 374 2 82 1 104 4 
142 2 3 2 31 1 264 1 88 1 150 1 311 1 226 1 128 1 357 1 248 1 179 1 157 1 9 1 289 1 72 1 132 1 271 1 47 1 256 1 322 1 371 1 301 1 81 1 139 1 216 1 24 1 
242 1 142 2 3 3 31 1 264 1 88 1 224 1 150 1 311 1 226 1 128 1 248 1 179 1 157 1 9 1 289 2 72 1 132 1 271 1 47 1 256 1 79 1 371 2 301 1 139 1 216 1 24 1 
142 2 289 2 72 1 271 1 132 1 3 2 31 1 264 1 224 1 47 1 226 1 256 1 79 1 371 1 248 1 179 1 301 1 157 1 139 1 9 1 24 1 216 1 
242 1 262 1 326 1 3 1 31 2 88 1 330 1 33 1 150 1 267 1 36 1 226 2 179 2 228 1 9 1 39 2 70 1 270 1 132 1 271 1 253 1 47 2 99 1 256 2 165 2 371 1 301 1 239 1 240 1 25 1 
142 2 3 1 31 1 264 1 88 1 224 1 150 1 311 1 226 1 128 1 357 1 248 1 179 1 157 1 9 1 72 1 132 1 271 1 47 1 256 1 322 1 371 1 301 1 139 1 216 1 24 1 
54 1 
219 2 262 1 351 1 33 1 267 2 334 1 179 2 228 1 9 1 39 2 68 1 270 1 132 2 271 2 117 1 94 1 253 1 95 1 208 1 44 1 275 2 320 2 321 1 99 1 18 1 165 2 301 2 300 1 239 1 
350 1 219 2 58 1 125 1 265 1 151 1 227 1 315 1 287 1 68 1 340 1 295 1 236 1 273 1 275 3 320 3 277 1 213 1 214 2 56 1 373 1 140 1 
105 1 350 1 219 1 340 1 295 1 273 1 236 1 275 3 125 1 265 1 320 3 277 1 151 1 89 1 227 1 213 1 214 3 238 1 373 1 56 1 315 1 287 1 68 1 140 1 
350 1 105 1 219 2 58 1 125 1 265 1 151 1 127 1 89 1 227 1 315 1 287 1 68 1 340 1 295 1 273 1 236 1 275 3 320 3 277 1 213 1 214 3 238 1 56 1 373 1 140 1 
105 4 58 4 109 2 151 1 334 1 63 2 112 1 287 1 68 3 340 1 117 1 295 1 208 1 213 1 214 6 350 1 303 1 219 7 86 2 222 1 354 1 125 1 265 1 127 4 89 5 227 1 315 1 92 1 272 1 94 1 235 2 273 1 236 1 275 5 44 1 318 1 320 5 277 1 321 1 238 5 373 1 56 1 55 2 140 1 
105 2 58 2 107 1 109 2 334 1 151 1 63 2 112 1 287 1 68 2 340 1 117 1 206 2 295 1 208 1 213 1 214 4 350 1 219 4 86 2 125 1 265 1 127 2 89 1 227 1 315 1 92 1 94 1 235 2 236 1 275 4 44 1 320 4 277 1 321 1 238 2 373 1 56 1 55 2 140 1 
105 2 350 1 303 1 219 4 86 2 58 2 354 1 125 1 265 1 109 2 151 1 334 1 89 1 127 2 63 2 227 1 112 1 315 1 287 1 68 2 92 1 340 1 117 1 272 1 94 1 295 1 235 2 208 1 236 1 44 1 275 4 320 4 277 1 321 1 213 1 214 4 238 1 55 2 56 1 373 1 140 1 
105 2 350 1 303 1 219 4 86 2 58 2 354 1 125 1 265 1 109 2 151 1 334 1 89 1 127 2 63 2 227 1 112 1 315 1 287 1 68 2 92 1 340 1 117 1 272 1 94 1 295 1 235 2 208 1 236 1 44 1 275 4 320 4 277 1 321 1 213 1 214 4 238 1 55 2 56 1 373 1 140 1 
105 2 350 1 219 4 86 2 58 2 354 1 125 1 265 1 310 1 151 1 334 1 89 1 127 2 63 2 227 1 112 1 315 1 287 1 68 2 340 1 117 1 342 1 206 2 94 1 207 2 295 1 361 1 208 1 236 1 44 1 275 4 320 4 277 1 321 1 213 1 214 4 238 1 192 2 56 1 373 1 140 1 
350 1 105 3 303 1 219 5 86 2 222 1 58 3 354 1 125 1 265 1 109 2 334 1 151 1 89 1 127 3 63 2 227 1 112 1 315 1 287 1 68 2 92 1 340 1 117 1 94 1 272 1 295 1 235 2 208 1 236 1 44 1 275 4 320 4 277 1 321 1 213 1 214 5 238 1 55 2 56 1 373 1 140 1 
350 1 105 3 303 1 219 5 86 2 222 1 58 3 354 1 125 1 265 1 109 2 334 1 151 1 89 1 127 3 63 2 227 1 112 1 315 1 287 1 68 2 92 1 340 1 117 1 94 1 272 1 295 1 235 2 208 1 236 1 44 1 275 4 320 4 277 1 321 1 213 1 214 5 238 1 55 2 56 1 373 1 140 1 
105 2 58 2 107 1 334 1 151 1 63 2 112 1 287 1 68 2 340 1 342 1 117 1 206 2 295 1 207 2 208 1 213 1 214 4 350 1 219 4 86 2 125 1 265 1 127 2 89 1 227 1 315 1 94 1 236 1 275 4 44 1 320 4 277 1 321 1 192 2 238 1 373 1 56 1 140 1 
293 1 317 1 196 1 59 2 12 1 119 1 328 1 276 1 74 1 148 1 198 3 367 1 48 1 283 2 225 3 136 6 49 1 164 1 199 1 177 1 80 1 284 2 247 1 374 1 180 1 104 2 
29 1 349 3 325 2 304 1 220 1 106 1 327 1 196 2 59 2 198 8 356 1 283 1 61 1 225 6 129 1 199 2 284 1 131 1 180 2 232 2 293 4 317 1 12 11 119 11 276 2 367 1 136 14 297 1 164 2 49 2 98 3 257 1 104 4 
350 2 262 1 196 1 145 1 125 2 198 1 267 1 283 1 225 1 38 1 199 1 129 1 179 1 39 1 9 1 131 1 291 1 132 1 271 1 293 1 317 1 360 1 205 1 236 1 276 1 362 1 163 1 136 2 49 1 164 1 370 1 165 1 257 1 301 1 101 1 259 1 261 1 104 2 
325 2 196 3 59 8 145 1 282 2 148 1 198 10 149 1 283 2 199 3 247 1 284 4 67 1 9 2 290 1 291 1 293 7 205 2 12 7 119 7 74 1 210 2 163 1 164 3 80 1 165 2 257 1 301 3 348 2 261 2 350 3 262 2 304 2 220 4 125 3 224 1 267 1 225 10 268 2 37 2 129 1 38 2 179 2 39 2 131 1 180 3 232 2 132 3 271 3 360 1 317 3 236 1 276 3 48 1 367 3 136 20 49 3 374 1 104 6 
262 1 196 1 33 1 198 1 267 1 225 1 199 1 129 1 111 1 66 1 179 2 228 1 9 1 39 2 131 1 270 1 132 2 271 2 317 1 253 1 276 1 136 2 164 1 49 1 99 1 165 2 301 2 19 1 239 1 104 2 
350 1 325 1 304 1 196 1 59 1 145 1 125 1 108 1 198 1 225 2 199 1 284 1 286 1 180 1 232 1 293 1 317 1 182 1 360 1 12 1 119 1 236 1 276 1 367 1 136 3 164 1 49 1 257 1 104 2 
232 1 220 1 293 1 317 1 196 1 59 1 12 1 119 1 328 1 276 1 198 2 136 2 49 1 164 1 199 1 335 1 180 1 104 2 
304 1 293 1 317 1 196 1 59 1 12 1 119 1 328 1 276 1 367 1 136 2 225 2 49 1 164 1 199 1 347 1 284 1 104 2 
325 1 304 1 220 1 196 1 59 2 328 1 198 2 225 2 199 1 284 1 180 1 232 1 293 2 317 1 12 2 119 2 276 1 367 1 136 4 164 1 49 1 104 2 
232 1 220 1 293 1 317 1 196 1 59 1 12 1 119 1 276 1 198 2 136 2 49 1 164 1 199 1 335 1 111 1 180 1 104 2 
304 1 293 1 317 1 196 1 59 1 12 1 119 1 276 1 367 1 136 2 225 2 49 1 164 1 199 1 347 1 284 1 111 1 104 2 
325 1 304 1 220 1 196 1 59 2 198 2 225 2 199 1 111 1 284 1 180 1 232 1 293 2 317 1 12 2 119 2 276 1 367 1 136 4 164 1 49 1 104 2 
325 1 232 1 304 1 220 1 293 2 317 1 196 1 59 2 12 2 119 2 276 1 198 2 367 1 225 2 136 4 49 1 164 1 199 1 284 1 180 1 104 2 
350 1 262 1 196 1 125 1 198 1 267 1 283 1 225 1 37 1 129 1 38 1 199 1 179 1 39 1 9 1 131 1 132 1 271 1 317 1 205 1 276 1 136 2 49 1 164 1 165 1 301 1 261 1 104 2 
350 1 262 1 196 1 263 1 125 1 198 1 308 1 267 1 283 1 225 1 129 1 38 1 199 1 179 1 39 1 9 1 131 1 132 1 271 1 317 1 276 1 364 1 136 2 49 1 164 1 165 1 301 1 104 2 
325 1 304 1 220 1 196 1 59 2 198 2 225 2 199 1 284 1 180 1 232 1 293 2 317 1 12 2 119 2 276 1 367 1 136 4 164 1 49 1 257 1 104 2 
350 1 325 1 304 1 262 1 220 1 196 1 59 2 125 1 198 2 225 2 268 1 37 1 38 1 199 1 284 1 179 1 9 1 39 1 180 1 232 1 132 1 271 1 293 2 317 1 12 2 205 1 119 2 276 1 367 1 136 4 49 1 164 1 165 1 301 1 81 1 261 1 104 2 
350 1 325 1 304 1 220 1 196 1 59 1 145 1 125 1 108 1 198 2 110 1 225 1 199 1 286 1 180 1 232 1 293 1 317 1 360 1 12 1 119 1 236 1 276 1 367 1 136 3 164 1 49 1 257 1 104 2 
325 4 196 3 59 8 148 1 198 20 5 1 284 4 247 1 249 1 114 1 339 1 204 1 74 1 297 1 298 1 164 3 345 1 212 1 80 1 27 1 26 1 82 1 349 4 304 4 85 2 220 4 225 21 356 3 180 5 231 4 232 4 91 1 93 1 276 3 367 5 48 1 136 41 98 3 49 3 191 1 194 1 374 1 104 6 
349 4 325 4 85 2 304 3 220 3 196 4 59 7 148 1 198 20 5 1 356 3 225 18 247 1 284 4 249 1 180 5 231 4 114 1 91 1 232 4 204 1 339 1 93 1 276 4 74 1 48 1 367 4 298 1 136 38 297 1 164 4 49 4 98 3 345 1 212 1 80 1 191 1 26 1 374 1 194 1 27 1 82 2 104 8 
349 4 325 7 85 1 304 7 220 7 196 2 59 14 148 1 198 27 5 1 61 2 356 2 225 25 247 1 284 7 249 1 180 8 231 4 114 1 91 1 232 7 339 1 93 1 276 2 74 1 48 1 367 8 298 1 136 52 297 2 164 2 49 2 98 4 345 1 212 1 80 1 191 1 374 1 194 1 27 1 82 1 104 4 
349 2 325 3 85 1 304 3 220 3 196 2 59 6 198 9 126 1 356 1 225 10 284 3 249 1 180 3 231 2 114 1 91 1 232 3 339 2 276 2 367 3 298 1 136 19 297 1 164 2 49 2 98 1 212 1 26 1 104 4 
349 2 325 3 85 2 304 2 220 2 196 3 59 4 198 14 5 1 225 12 356 2 284 2 249 1 180 3 231 4 114 2 91 1 232 3 339 1 93 1 276 3 367 2 298 1 136 26 164 3 49 3 98 2 345 1 212 1 191 1 194 1 27 1 82 2 104 6 
84 1 189 1 115 1 130 1 138 1 250 1 202 1 96 1 75 1 365 1 
215 1 343 1 
141 1 189 1 115 1 130 1 146 1 138 1 363 1 96 1 75 1 
84 1 161 1 115 1 197 1 275 1 319 1 320 1 75 1 96 1 77 1 189 1 130 1 137 2 178 1 238 1 138 1 250 1 202 1 
84 1 161 1 115 1 197 1 275 1 319 1 320 1 75 1 96 1 77 1 189 1 130 1 137 2 178 1 238 1 138 1 250 1 202 1 
84 1 161 1 115 1 197 1 275 1 319 1 320 1 75 1 96 1 77 1 189 1 130 1 137 2 178 1 238 1 138 1 250 1 202 1 
118 1 90 1 201 1 
118 1 90 1 201 1 
116 1 60 1 
116 1 60 1 90 1 
153 1 103 1 
350 2 0 1 197 1 123 1 145 2 125 2 306 1 283 1 130 1 153 1 65 1 178 1 71 1 115 1 360 2 73 1 343 1 236 2 275 1 320 1 96 1 75 1 189 1 137 1 215 1 138 1 103 1 
118 1 201 1 
116 1 60 1 90 1 
350 2 196 1 305 1 125 2 198 1 225 1 199 1 129 1 66 1 179 1 158 1 9 1 39 1 131 1 230 1 132 2 271 2 234 1 317 1 236 2 276 1 136 2 49 1 164 1 50 1 165 1 299 1 257 1 19 2 301 2 104 2 
142 2 72 1 271 2 132 2 274 1 264 1 224 1 256 1 128 1 248 1 179 1 301 2 157 1 139 1 9 1 81 1 102 1 24 1 167 1 
142 2 72 1 271 1 132 1 274 1 264 1 224 1 256 1 128 1 248 1 301 1 179 1 157 1 21 1 139 1 9 1 24 1 
262 1 326 1 33 1 267 1 179 2 39 2 9 1 228 1 70 1 270 1 132 1 271 1 253 1 256 1 99 1 52 1 165 2 301 1 239 1 167 1 
142 2 72 1 271 1 132 1 274 1 264 1 224 1 256 1 128 1 248 1 179 1 301 1 157 1 139 1 9 1 102 1 24 1 167 1 
183 1 
69 1 35 1 89 1 117 1 177 1 208 1 238 1 
219 1 109 1 334 1 89 1 68 1 92 1 117 1 94 1 206 1 235 1 208 1 44 1 275 1 320 1 321 1 238 2 55 1 
325 2 143 1 243 3 244 6 329 2 331 1 109 6 333 2 334 4 9 3 287 2 68 3 69 1 341 2 117 8 206 12 208 9 210 2 254 6 165 10 300 2 301 3 81 1 28 1 219 5 351 1 262 3 304 2 87 2 307 1 312 2 267 1 35 1 89 2 179 4 39 3 180 2 232 2 269 2 271 3 132 3 41 1 184 2 94 4 44 4 275 5 320 5 187 2 46 2 367 2 321 4 323 2 190 1 238 8 
349 1 325 2 219 1 351 1 304 2 353 1 244 5 281 1 109 3 5 1 356 1 334 2 89 2 180 2 68 1 232 2 341 1 117 5 93 1 206 6 94 2 208 8 275 1 44 2 320 1 254 5 46 2 367 2 321 2 98 1 345 1 191 1 300 1 238 5 27 1 
350 1 241 1 145 1 125 1 108 1 172 1 334 1 64 1 247 1 180 2 160 1 341 1 360 1 117 2 94 1 272 1 208 2 236 1 44 1 275 1 320 1 46 2 48 1 367 1 321 1 80 1 193 1 140 1 
69 1 117 1 94 1 208 1 44 1 334 1 321 1 35 1 89 1 238 1 
325 2 232 2 304 2 341 1 117 5 206 10 244 5 208 5 210 1 254 5 109 5 46 2 367 2 238 5 180 2 
219 1 89 1 238 1 275 1 320 1 68 1 
219 2 262 1 351 1 33 1 307 1 267 2 334 1 179 2 228 1 9 1 39 2 68 1 270 1 132 2 271 2 117 1 94 1 253 1 95 1 208 1 44 1 275 1 320 1 321 1 99 1 18 1 165 2 301 2 300 1 239 1 
350 3 262 1 196 1 145 2 170 1 125 3 108 2 267 1 283 1 225 1 37 1 38 1 199 1 179 1 9 1 39 1 131 1 132 1 271 1 360 2 317 1 205 1 236 2 276 1 136 1 164 1 49 1 165 1 301 1 193 1 261 1 104 2 
351 1 117 2 206 4 94 1 244 2 208 1 44 1 254 2 109 2 334 1 321 1 89 2 300 1 238 4 374 1 
173 1 189 1 115 1 
173 1 189 1 115 1 
84 1 189 1 115 1 30 1 103 1 
173 1 189 1 115 1 
78 1 189 1 115 1 
78 1 189 1 115 1 
78 1 189 1 115 1 
189 1 115 1 
130 1 138 1 
349 1 196 1 59 2 148 1 198 4 225 4 356 1 247 1 284 2 249 1 180 1 276 1 74 1 367 1 48 1 136 8 98 1 164 1 49 1 80 1 191 1 374 1 104 2 
349 2 279 1 325 1 220 1 196 2 59 3 148 1 198 6 225 5 356 1 284 2 247 1 249 1 180 2 232 1 276 2 74 1 367 1 48 1 136 11 297 1 164 2 49 2 98 1 80 1 191 1 374 1 104 4 
279 1 349 1 325 2 304 2 220 1 196 3 59 4 148 1 198 9 5 1 225 10 356 1 247 1 284 3 249 1 180 3 232 2 93 1 276 3 74 1 48 1 367 3 136 19 98 1 164 3 49 3 345 1 80 1 191 1 374 1 27 1 82 1 104 6 
279 1 349 1 325 2 304 1 220 2 196 3 59 5 148 1 198 10 5 1 225 7 356 1 247 1 284 3 249 1 180 3 232 2 93 1 276 3 74 1 48 1 367 2 136 17 98 1 164 3 49 3 345 1 80 1 191 1 374 1 27 1 82 1 104 6 
349 1 196 1 59 2 148 1 198 4 225 4 356 1 247 1 284 2 249 1 180 1 276 1 74 1 367 1 48 1 136 8 98 1 164 1 49 1 80 1 191 1 374 1 104 2 
349 1 325 2 304 2 220 1 196 1 59 2 198 6 5 1 225 6 356 1 284 1 249 1 180 2 232 2 93 1 276 1 367 2 136 12 98 1 164 1 49 1 345 1 191 1 27 1 104 2 
349 1 279 1 325 2 304 1 220 2 196 4 59 5 148 1 198 10 5 1 225 8 356 1 247 1 284 3 249 1 180 3 232 2 93 1 276 4 74 1 48 1 367 2 136 18 164 4 49 4 98 1 345 1 80 1 191 1 374 1 27 1 82 2 104 8 
349 1 325 3 304 2 220 3 196 4 59 6 198 9 5 1 225 7 356 1 284 3 249 1 180 3 232 3 93 1 276 4 367 2 136 16 164 4 49 4 98 1 345 1 191 1 26 1 27 1 82 2 104 8 
220 3 59 6 74 2 148 1 198 3 367 1 48 1 225 4 136 7 80 3 247 3 284 3 180 1 
349 1 325 2 304 1 220 1 196 4 59 4 148 1 198 10 5 1 225 8 356 1 247 1 284 3 249 1 180 3 232 2 93 1 276 4 74 1 48 1 367 2 136 18 164 4 49 4 98 1 345 1 80 1 191 1 374 1 26 1 27 1 82 2 104 8 
220 1 196 2 59 3 276 2 74 1 148 1 198 4 367 1 48 1 225 4 136 8 49 2 164 2 80 1 284 2 247 1 374 1 180 1 82 1 104 4 
59 2 74 1 148 1 198 3 48 1 367 1 225 3 136 6 177 1 80 1 247 1 284 2 374 1 180 1 
279 1 325 1 232 1 304 1 220 1 196 1 59 2 276 1 198 2 367 1 225 2 136 4 49 1 164 1 284 1 180 1 104 2 
349 2 325 1 232 1 304 1 220 1 59 2 198 3 367 1 356 1 225 4 136 7 297 1 98 1 284 1 180 1 
325 2 349 2 304 2 220 4 106 1 196 2 59 9 148 1 198 11 225 12 61 1 247 2 284 5 180 3 232 2 203 1 276 2 74 1 48 1 367 3 297 1 136 23 98 2 49 2 164 2 80 2 374 1 82 2 104 4 
349 1 136 1 225 1 
136 1 98 1 198 1 
279 1 325 1 232 1 304 1 220 1 196 1 59 3 276 1 210 1 198 3 367 1 225 3 136 6 164 1 49 1 284 2 180 1 104 2 
349 1 325 2 304 2 220 1 196 1 59 2 198 6 5 1 225 6 356 1 284 1 249 1 180 2 232 2 93 1 276 1 367 2 136 12 98 1 164 1 49 1 345 1 191 1 27 1 104 2 
367 1 48 1 225 3 136 6 220 1 59 2 80 1 284 1 247 1 180 1 198 3 
203 1 220 1 196 1 59 2 276 1 74 1 148 1 198 1 225 2 136 3 49 1 164 1 80 1 284 1 247 1 82 1 104 2 
241 1 220 2 196 1 59 5 276 1 198 5 48 1 367 2 136 10 225 5 164 1 49 1 80 2 247 2 284 3 249 1 180 2 104 2 
232 1 220 1 196 1 59 1 276 1 198 2 136 2 49 1 164 1 249 1 180 1 104 2 
325 1 232 1 304 1 220 1 196 1 59 2 276 1 198 2 367 1 225 2 136 4 49 1 164 1 284 1 249 1 180 1 104 2 
203 1 220 1 196 3 59 2 276 3 198 1 225 2 136 3 49 3 164 3 80 1 247 1 284 1 249 1 26 1 82 1 104 6 
349 4 279 1 325 3 304 3 220 5 196 5 59 12 148 1 198 16 225 18 356 1 247 3 284 7 249 1 180 5 232 3 203 1 276 5 74 1 48 2 188 1 367 5 136 34 297 1 164 5 49 5 98 3 80 3 278 1 53 1 374 1 26 1 82 2 104 10 
350 1 283 1 352 1 121 1 295 1 236 1 125 1 
174 1 211 1 258 1 260 1 229 1 
267 1 132 1 271 1 165 1 177 1 253 1 301 1 239 1 39 1 
350 2 262 1 271 1 132 1 360 1 205 1 145 1 236 1 125 2 163 1 267 1 283 1 38 1 165 1 179 1 301 1 39 1 9 1 
350 2 269 1 262 2 271 1 132 1 360 2 205 1 145 1 236 2 125 2 187 1 163 1 283 1 38 1 190 1 165 3 179 1 301 1 373 1 56 1 39 2 9 1 140 1 
350 2 269 1 262 2 271 2 132 2 360 2 145 1 263 1 236 2 125 2 187 1 163 1 283 1 38 1 190 1 165 3 155 1 179 1 301 2 373 1 56 1 39 2 9 1 140 1 
269 1 219 1 262 1 271 3 132 3 243 1 42 1 275 2 4 1 187 1 320 2 267 1 89 1 323 1 190 1 165 4 155 1 238 1 179 1 301 3 39 1 9 1 287 1 
269 1 219 1 262 1 271 3 132 3 243 1 275 2 187 1 320 2 267 1 333 1 89 1 323 1 190 1 165 4 155 1 238 1 179 1 301 3 39 1 9 1 287 1 
132 1 271 1 369 1 179 1 301 1 9 1 
262 1 271 7 132 7 143 1 147 1 224 1 33 1 245 1 267 2 15 1 369 1 50 1 314 1 165 3 19 1 301 6 179 3 81 1 228 1 39 2 9 2 
196 2 59 2 145 1 282 1 148 1 198 3 283 2 199 2 247 1 284 2 9 1 293 1 205 1 12 1 119 1 74 1 163 1 164 2 165 1 80 1 257 1 301 1 81 1 261 1 350 2 262 1 125 2 268 1 225 3 37 1 38 1 179 1 39 1 180 1 132 1 271 1 234 1 360 1 317 2 236 1 276 2 48 1 367 1 136 6 49 2 374 1 104 4 
0 1 219 2 87 1 243 1 307 1 267 1 312 1 333 1 334 2 35 1 89 1 287 1 68 1 69 1 271 1 132 1 117 1 184 1 94 2 208 1 44 2 275 3 320 3 321 2 323 1 165 2 238 1 301 1 
262 1 271 2 132 2 143 1 331 1 369 1 323 1 165 2 301 2 179 2 81 1 39 1 9 1 
262 1 270 1 271 2 132 2 253 1 33 1 267 1 99 1 165 2 179 2 301 2 239 1 228 1 9 1 81 1 39 2 
270 1 262 1 271 2 132 2 33 1 149 1 99 1 190 1 165 1 301 2 179 2 228 1 39 1 9 1 
267 1 142 1 72 1 132 1 271 1 248 1 179 1 301 1 139 1 9 1 
50 1 132 2 271 2 165 1 179 1 301 2 9 1 39 1 81 1 224 1 230 1 
262 1 147 1 33 1 245 1 267 1 179 3 9 2 39 3 228 1 270 1 132 3 271 3 253 1 50 1 99 1 165 4 301 2 239 1 81 1 
262 1 147 1 171 1 33 1 267 1 179 3 9 2 39 3 228 1 270 1 132 3 271 3 253 1 50 1 99 1 165 4 301 2 239 1 81 1 
350 2 262 1 271 1 132 1 360 1 145 1 263 1 236 1 125 2 163 1 267 1 283 1 38 1 165 1 179 1 301 1 39 1 9 1 
262 1 271 1 132 1 143 1 33 1 15 1 190 1 165 1 301 1 179 2 228 1 39 1 9 1 
283 1 51 1 246 1 162 1 23 1 
0 1 11 1 162 2 275 2 296 1 320 2 283 1 89 1 175 1 51 2 246 2 238 1 373 1 56 1 315 1 23 1 287 1 140 1 288 1 
350 1 299 1 246 1 305 1 162 1 236 1 125 1 158 1 23 1 
11 1 296 1 23 1 
40 1 177 1 43 1 
40 1 3 1 43 1 88 1 186 1 150 1 371 1 
226 1 371 1 47 1 
40 1 3 2 43 1 186 1 88 1 150 1 255 1 322 1 371 2 154 1 113 1 
289 1 40 1 3 2 43 1 186 1 88 1 150 1 371 2 22 1 
142 1 72 1 3 1 221 1 209 1 264 1 88 1 150 1 322 1 371 1 376 1 
40 1 3 1 322 1 371 1 88 1 150 1 
40 1 3 1 322 1 371 1 43 1 88 1 376 1 150 1 
40 1 3 2 322 1 313 1 144 1 371 2 88 2 13 1 150 2 
40 1 289 2 169 1 3 3 209 1 43 1 186 1 88 1 134 1 150 1 322 1 371 3 83 1 376 1 
40 1 142 2 289 1 72 1 3 2 43 1 264 1 186 1 88 1 150 1 135 1 322 1 371 2 157 1 139 1 
40 1 289 2 3 3 209 1 43 1 186 1 88 1 32 1 134 1 150 1 322 1 371 3 22 1 376 1 
40 1 3 1 43 1 88 1 186 1 150 1 322 1 371 1 
40 1 289 2 3 3 209 1 43 1 186 2 88 1 134 1 150 1 371 3 376 1 
40 1 289 1 3 2 43 1 186 1 88 1 150 1 322 1 346 1 371 2 156 1 166 1 
218 1 40 1 3 2 43 1 186 1 88 1 150 1 255 1 322 1 371 2 113 1 
200 2 372 1 332 1 376 2 
3 1 322 1 371 1 88 1 366 1 150 1 
289 1 40 1 169 1 3 2 43 1 186 1 88 1 150 1 322 1 371 2 
120 1 
40 1 3 1 43 1 88 1 186 1 150 1 322 1 371 1 
40 1 3 2 43 1 186 1 88 1 150 1 322 1 371 2 113 1 
209 1 186 1 134 1 376 1 
40 1 

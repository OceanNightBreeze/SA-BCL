#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (22,96,104,211,321) (86,253) (86,253) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (22,96,104,211,321) (86,253) (86,253) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (22,96,104,211,321) (86,253) (86,253) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (22,96,104,211,321) (86,253) (86,253) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 372 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (22,96,104,211,321) (63,172) (63,172) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 372 8 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 372 8 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 202 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 202 247 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (40,139,160,298) (40,139,160,298) (7,305,342) (7,305,342) (7,305,342) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (40,139,160,298) (40,139,160,298) (7,305,342) (7,305,342) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (40,139,160,298) (40,139,160,298) (7,305,342) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (40,139,160,298) (40,139,160,298) (7,305,342) (7,305,342) (7,305,342) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 163 337 48 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 163 337 48 99 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (40,139,160,298) (40,139,160,298) 347 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4914 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
40 1 104 1 135 1 78 1 160 1 6 1 253 1 131 1 139 1 86 1 268 1 359 1 76 1 322 1 143 1 
40 1 104 1 135 1 78 1 160 1 6 1 253 1 131 1 139 1 86 1 268 1 359 1 76 1 322 1 143 1 
40 1 104 1 135 1 78 1 160 1 6 1 253 1 131 1 139 1 86 1 268 1 359 1 76 1 322 1 143 1 
40 1 104 1 135 1 78 1 160 1 6 1 253 1 131 1 139 1 86 1 268 1 359 1 76 1 322 1 143 1 
298 1 168 1 40 1 217 1 135 1 78 1 160 2 6 1 345 1 107 1 131 2 372 1 139 1 268 1 
40 1 276 1 104 1 135 1 172 1 160 1 78 1 131 1 139 1 63 1 268 1 359 1 76 1 
298 1 40 2 260 1 135 1 304 1 160 3 345 2 254 1 9 1 107 1 131 3 139 2 76 1 
298 5 168 1 40 2 217 1 41 1 260 1 135 1 304 2 78 1 19 1 160 7 6 1 345 3 8 1 107 3 196 1 372 1 131 7 139 2 268 1 76 1 
298 5 168 1 40 2 217 1 41 1 260 1 135 1 304 2 78 1 19 1 160 7 6 1 345 3 8 1 107 3 196 1 372 1 131 7 139 2 268 1 76 1 
187 1 266 1 288 1 
216 1 226 2 288 1 
300 1 123 2 283 1 74 2 44 2 246 2 316 2 68 2 
300 1 24 1 123 2 26 1 277 2 278 1 58 2 280 1 82 2 185 1 235 1 307 1 11 1 308 1 283 1 358 1 33 1 68 2 335 2 37 1 38 1 190 1 191 2 92 1 314 1 17 1 130 1 44 3 316 2 173 1 197 1 198 1 378 1 52 1 74 3 75 1 246 2 
300 1 123 1 151 1 367 1 192 1 74 1 44 1 246 1 316 1 68 1 
218 1 367 1 182 1 147 1 221 1 288 1 44 1 187 1 163 1 186 1 74 1 64 1 68 1 57 1 
123 1 367 1 182 1 221 2 147 1 288 1 316 1 44 1 187 1 186 1 74 1 64 2 246 1 68 1 57 1 
202 1 64 1 354 1 221 1 
187 1 1 1 3 1 165 1 64 2 354 1 221 2 288 1 
1 1 64 1 221 1 
300 1 123 1 367 1 192 1 328 1 354 1 221 1 316 1 44 1 151 1 64 1 74 1 246 1 68 1 
288 1 
187 1 1 1 287 1 3 1 64 2 354 1 221 2 288 1 
299 2 112 1 1 2 353 1 341 1 366 1 3 1 27 1 354 2 221 5 288 1 80 1 194 2 187 1 138 1 377 2 64 5 54 1 214 1 
283 1 266 1 
123 1 274 1 44 2 316 1 195 1 283 2 74 2 246 1 68 2 
71 1 376 1 32 1 
38 1 191 1 92 1 278 1 314 1 44 1 173 1 82 1 235 1 11 1 283 1 198 1 74 1 75 1 175 1 335 1 
38 1 191 1 92 1 278 1 314 1 173 1 316 1 44 2 82 1 235 1 11 1 198 1 32 1 74 2 200 1 267 1 75 1 246 1 68 1 335 1 
123 1 283 1 74 3 267 1 44 3 246 3 316 3 68 3 
367 1 192 1 74 1 44 1 246 1 316 1 68 1 
195 1 123 1 274 1 367 1 74 1 44 1 246 1 316 1 68 1 
300 1 24 1 123 2 26 1 277 1 278 1 58 2 182 1 59 1 82 1 185 1 235 1 186 1 11 1 308 1 283 1 358 1 33 1 64 1 68 3 335 1 37 1 38 1 191 1 92 1 314 1 367 1 147 1 221 1 173 1 44 4 316 3 223 1 195 1 197 1 198 1 378 1 52 1 74 4 267 1 200 1 75 1 246 3 57 1 
337 1 163 1 283 1 74 2 267 1 44 2 246 1 316 1 68 2 
123 1 367 1 182 1 221 1 147 1 288 1 316 3 44 3 223 1 195 1 186 1 64 1 74 3 200 1 267 2 246 3 68 3 36 1 57 1 
123 1 316 2 44 2 195 1 376 1 32 1 74 2 267 1 246 2 68 2 
38 1 191 1 278 1 314 1 92 1 44 1 173 1 82 1 235 1 11 1 283 1 198 1 74 1 75 1 335 1 
38 1 191 1 278 1 92 1 44 1 173 1 82 1 235 1 11 1 283 1 198 1 373 1 74 1 309 1 335 1 
324 1 157 1 24 1 26 1 277 4 58 2 124 1 282 1 185 2 108 1 32 2 33 1 65 1 37 1 130 2 18 1 344 1 71 2 149 1 376 2 73 1 378 1 52 1 381 1 
186 1 69 1 367 1 74 1 44 1 246 1 316 1 68 1 
337 1 123 1 129 1 316 4 44 5 195 1 163 1 283 1 244 1 74 5 267 2 200 1 246 4 68 5 
69 1 367 1 192 1 74 2 44 2 246 2 316 2 68 2 
332 1 320 1 
332 1 320 1 
110 1 46 1 
110 1 46 1 
110 1 46 1 
332 1 128 1 320 1 
332 1 370 1 320 1 
189 1 312 1 332 2 110 1 46 1 320 2 
332 1 128 1 320 1 
332 1 128 1 320 1 
224 1 332 1 320 1 
224 1 332 1 320 1 
224 1 332 1 320 1 
312 1 228 3 179 1 327 1 261 1 4 2 28 1 221 2 288 1 125 1 306 1 371 2 126 2 332 2 50 2 64 2 320 2 215 1 133 2 
351 1 0 1 176 1 228 1 103 1 4 1 28 1 183 1 126 1 283 1 332 1 64 1 334 1 68 2 221 1 20 1 316 2 44 2 370 1 371 1 74 2 246 2 320 1 133 1 
268 1 78 1 6 1 
276 1 268 1 78 1 
233 1 276 1 227 1 268 3 6 2 259 1 
233 1 276 1 279 1 268 2 6 1 259 1 
233 2 276 1 268 2 6 1 259 1 
0 1 299 1 1 1 157 1 178 1 353 3 103 1 2 1 3 1 354 4 183 1 331 1 187 1 138 1 64 5 360 2 34 1 65 1 142 2 216 1 366 2 221 5 288 2 47 1 194 1 290 1 226 3 73 1 377 1 23 2 269 1 381 1 
144 1 202 1 64 2 354 2 295 1 221 2 247 1 
299 1 157 1 178 1 353 3 2 1 354 2 183 1 331 1 187 1 64 3 360 2 65 1 142 1 216 2 366 2 221 3 288 3 290 1 194 1 226 4 377 1 73 1 23 2 269 1 54 1 381 1 
299 1 157 2 178 1 353 5 2 1 354 3 183 2 331 2 281 1 187 1 164 1 64 4 360 4 65 2 142 2 216 3 366 4 221 4 288 4 194 1 290 1 226 7 294 1 377 1 73 2 23 4 269 1 54 1 381 2 
250 1 92 1 266 1 
92 1 21 1 
162 1 
11 1 92 1 
38 1 145 1 250 2 11 1 92 3 251 1 
38 1 11 1 92 1 
92 1 127 1 
239 1 157 1 219 2 277 7 170 1 18 2 130 4 282 3 346 1 185 3 84 1 348 1 257 1 132 1 310 1 297 1 381 1 
239 1 157 1 219 2 277 7 170 1 18 2 130 4 282 3 346 1 185 3 84 1 348 1 257 1 132 1 310 1 297 1 381 1 
239 1 157 1 219 2 277 7 170 1 180 1 18 2 130 4 282 3 346 1 185 3 84 1 348 1 257 1 132 1 310 1 297 1 381 1 
272 4 157 4 24 1 26 1 275 1 277 31 58 2 231 1 331 3 282 10 185 15 84 2 205 1 257 1 33 1 210 1 310 2 65 3 15 1 239 5 219 3 170 1 130 16 18 5 193 3 346 2 291 1 348 1 73 3 378 1 132 2 55 1 297 1 381 4 
157 1 24 2 26 2 277 9 58 4 231 1 282 4 185 4 84 1 33 2 257 1 310 1 239 1 364 1 219 2 170 1 130 5 18 3 346 1 378 2 132 1 56 1 297 1 381 1 
298 1 276 1 135 1 355 1 78 1 160 2 6 1 7 1 82 1 106 1 305 1 139 1 335 1 40 1 191 1 342 1 114 1 173 1 131 1 198 1 119 1 227 1 380 1 349 1 268 2 76 1 270 1 
298 2 249 1 276 1 355 1 78 1 160 3 105 1 6 1 184 1 7 1 82 1 106 1 305 1 139 1 335 1 40 1 191 1 114 1 173 1 131 2 198 1 119 1 227 1 380 1 349 1 268 2 76 1 
298 2 249 1 276 1 191 1 355 1 78 1 160 2 6 1 173 1 184 1 82 1 305 1 106 1 131 1 198 1 119 1 227 1 380 1 268 2 349 1 76 1 335 1 
40 1 91 1 191 1 92 1 278 1 329 1 105 1 160 1 173 1 82 1 106 2 11 1 256 1 131 1 198 1 117 1 139 1 119 2 380 2 76 2 335 1 111 1 311 1 
298 1 276 1 135 1 355 1 78 1 160 2 6 1 184 1 7 1 82 1 106 1 305 1 139 1 335 1 40 1 191 1 342 1 114 1 173 1 131 1 198 1 119 1 227 1 380 1 349 1 268 2 76 1 
45 1 
177 2 273 2 1 6 2 1 3 3 278 2 329 1 182 1 234 2 187 1 186 1 11 1 138 1 64 5 335 2 68 1 241 1 340 1 191 2 70 1 343 1 147 1 288 2 194 1 243 1 198 1 74 1 201 2 299 1 352 1 353 2 158 1 29 2 82 2 163 1 256 1 85 1 90 1 313 1 216 2 218 1 366 2 92 1 367 1 221 5 93 1 173 1 44 1 318 2 226 2 49 4 377 1 265 2 53 1 57 1 
1 2 352 1 3 1 182 1 234 1 163 1 186 1 85 1 64 3 68 1 90 1 287 1 218 1 367 1 221 3 147 1 93 1 44 1 243 1 49 2 74 1 57 1 
1 1 352 1 3 1 182 1 163 1 186 1 187 1 85 1 64 3 68 1 90 1 287 1 218 1 367 1 221 3 147 1 93 1 288 1 44 1 243 1 49 3 74 1 57 1 201 1 
1 2 352 1 3 1 182 1 29 1 234 1 163 1 186 1 187 1 85 1 64 3 68 1 90 1 287 1 218 1 367 1 221 3 147 1 93 1 288 1 44 1 243 1 49 3 74 1 57 1 201 1 
1 7 273 2 177 2 3 3 182 1 234 4 186 1 187 5 138 1 333 1 64 5 68 1 287 1 147 1 343 1 288 5 194 1 243 1 120 1 74 1 201 4 299 1 352 1 353 1 29 4 163 1 85 1 90 1 216 2 218 1 220 1 366 1 367 1 221 5 93 1 44 1 317 1 318 2 49 6 377 1 53 1 265 2 271 1 57 1 
273 2 177 2 1 4 3 2 182 1 234 2 186 1 187 1 138 1 64 4 68 1 70 1 147 1 343 1 288 2 194 1 243 1 74 1 201 2 299 1 352 1 353 1 29 2 163 1 85 1 90 1 216 2 218 1 366 1 367 1 221 4 93 1 44 1 318 2 49 4 226 2 377 1 53 1 265 2 57 1 
299 1 1 4 177 2 273 2 352 1 353 1 3 2 182 1 29 2 234 2 187 1 163 1 186 1 138 1 333 1 85 1 64 4 68 1 90 1 216 2 220 1 218 1 366 1 367 1 343 1 221 4 147 1 288 1 93 1 44 1 317 1 194 1 318 2 243 1 49 4 377 1 265 2 53 1 74 1 201 2 57 1 
299 1 1 4 177 2 273 2 352 1 353 1 3 2 182 1 29 2 234 2 187 1 163 1 186 1 138 1 333 1 85 1 64 4 68 1 90 1 216 2 220 1 218 1 366 1 367 1 343 1 221 4 147 1 288 1 93 1 44 1 317 1 194 1 318 2 243 1 49 4 377 1 265 2 53 1 74 1 201 2 57 1 
299 1 1 4 177 2 273 2 352 1 353 1 3 2 182 1 29 2 330 1 234 2 10 2 187 1 163 1 186 1 138 1 85 1 140 1 64 4 89 2 361 1 68 1 90 1 220 1 218 1 366 1 367 1 343 1 221 4 147 1 288 1 93 1 44 1 194 1 243 1 226 2 49 4 377 1 74 1 201 2 57 1 
299 1 177 2 273 2 1 5 352 1 353 1 3 2 182 1 29 3 234 3 187 1 163 1 186 1 138 1 333 1 85 1 64 4 68 1 90 1 216 2 220 1 218 1 366 1 367 1 343 1 221 4 147 1 288 1 93 1 44 1 317 1 194 1 318 2 243 1 49 5 377 1 120 1 265 2 53 1 74 1 57 1 201 3 
299 1 177 2 273 2 1 5 352 1 353 1 3 2 182 1 29 3 234 3 187 1 163 1 186 1 138 1 333 1 85 1 64 4 68 1 90 1 216 2 220 1 218 1 366 1 367 1 343 1 221 4 147 1 288 1 93 1 44 1 317 1 194 1 318 2 243 1 49 5 377 1 120 1 265 2 53 1 74 1 57 1 201 3 
273 2 177 2 1 4 3 2 182 1 10 2 234 2 186 1 187 1 138 1 64 4 68 1 70 1 147 1 343 1 288 1 194 1 243 1 74 1 201 2 299 1 352 1 353 1 29 2 163 1 85 1 89 2 361 1 90 1 218 1 366 1 367 1 221 4 93 1 44 1 49 4 226 2 377 1 57 1 
24 1 157 1 26 1 277 6 58 2 282 2 185 3 108 1 283 2 32 1 33 1 257 1 310 1 37 1 219 1 170 1 18 2 130 3 71 1 376 1 378 1 266 1 52 1 132 1 297 1 381 1 
272 3 156 1 229 1 24 2 157 2 275 1 26 2 277 14 58 4 331 2 282 2 83 1 185 6 283 1 32 11 33 2 210 1 166 1 65 1 239 1 37 2 190 1 18 1 130 8 193 3 71 11 72 1 197 1 73 2 376 4 378 2 52 1 381 1 
325 1 229 1 24 1 26 1 278 1 277 2 58 2 82 1 235 1 185 1 11 1 283 1 33 1 335 1 68 1 37 1 38 1 191 1 190 1 92 1 314 1 130 1 173 1 44 2 316 1 197 1 262 1 198 1 376 1 378 1 52 1 74 2 267 1 200 1 350 1 75 1 175 1 246 1 
229 1 278 1 277 20 58 6 184 1 331 2 282 8 185 10 235 2 11 2 283 2 65 2 335 3 68 1 239 4 190 1 191 3 18 4 242 1 71 7 197 1 198 2 73 2 74 3 200 1 75 2 246 1 297 1 248 2 301 2 24 3 157 3 26 3 356 1 82 3 358 2 32 7 257 1 33 3 310 1 35 2 362 1 37 3 38 2 219 1 314 2 92 2 170 1 130 10 368 2 316 1 44 3 173 2 376 7 378 3 52 3 132 1 267 1 381 3 
24 2 26 2 278 2 277 2 181 1 58 4 329 1 136 1 184 1 82 8 185 1 108 1 256 1 11 2 33 2 284 1 68 1 335 8 336 1 37 2 191 7 190 1 92 3 17 2 130 1 44 1 316 1 173 2 116 1 197 1 198 2 293 1 378 2 121 1 52 2 74 1 267 1 246 1 270 1 
229 1 123 1 24 1 157 1 26 1 277 3 58 2 331 1 282 1 185 2 32 1 33 1 65 1 68 1 37 1 169 1 18 1 130 1 316 1 44 1 71 1 195 1 376 1 73 1 378 1 52 1 74 1 246 1 381 1 
239 1 37 1 24 1 157 1 26 1 277 2 58 2 130 2 282 1 71 1 108 1 149 1 376 1 73 1 378 1 32 1 52 1 33 1 
37 1 24 1 26 1 277 2 58 2 18 1 344 1 282 1 71 1 185 2 108 1 376 1 378 1 32 1 52 1 33 1 65 1 381 1 
239 1 37 1 24 1 157 1 26 1 277 4 58 2 18 1 130 2 331 1 282 2 71 2 185 2 108 1 376 2 73 1 378 1 32 2 52 1 33 1 65 1 381 1 
239 1 37 1 24 1 157 1 26 1 277 2 58 2 136 1 130 2 282 1 71 1 149 1 376 1 73 1 378 1 32 1 52 1 33 1 
37 1 24 1 26 1 277 2 58 2 136 1 18 1 344 1 282 1 71 1 185 2 376 1 378 1 32 1 52 1 33 1 65 1 381 1 
239 1 37 1 24 1 157 1 26 1 277 4 58 2 136 1 18 1 130 2 331 1 282 2 71 2 185 2 376 2 73 1 378 1 32 2 52 1 33 1 65 1 381 1 
239 1 37 1 24 1 157 1 26 1 277 4 58 2 18 1 130 2 331 1 282 2 71 2 185 2 376 2 73 1 378 1 32 2 52 1 33 1 65 1 381 1 
24 1 26 1 277 2 278 1 58 2 82 1 235 1 185 1 11 1 283 1 358 1 33 1 335 1 37 1 38 1 190 1 191 1 314 1 92 1 130 1 173 1 44 1 197 1 198 1 378 1 52 1 74 1 75 1 
24 1 26 1 277 2 278 1 58 2 82 1 235 1 185 1 11 1 283 1 33 1 309 1 335 1 37 1 38 1 190 1 191 1 92 1 130 1 173 1 44 1 225 1 197 1 198 1 373 1 378 1 52 1 74 1 
239 1 37 1 229 1 24 1 157 1 26 1 277 4 58 2 18 1 130 2 331 1 282 2 71 2 185 2 376 2 73 1 378 1 32 2 52 1 33 1 65 1 381 1 
301 1 157 1 24 1 26 1 277 4 58 2 331 1 82 1 282 2 185 2 235 1 11 1 358 1 32 2 33 1 65 1 335 1 239 1 37 1 38 1 191 1 314 1 92 1 18 1 130 2 173 1 44 1 71 2 198 1 376 2 73 1 378 1 52 1 74 1 75 1 270 1 381 1 
229 1 123 1 24 1 157 1 26 1 277 3 58 2 331 1 282 1 185 1 61 1 32 1 33 1 65 1 68 1 239 1 37 1 130 2 316 1 44 1 71 1 195 1 73 1 376 1 378 1 52 1 74 1 246 1 381 1 
323 2 272 2 24 2 157 3 275 1 26 2 134 1 277 19 58 4 204 1 331 3 232 1 282 6 185 10 255 1 62 1 31 1 33 2 210 1 65 3 239 3 43 1 18 3 130 9 193 1 319 2 73 3 378 2 56 1 381 3 
323 4 272 2 102 1 24 3 157 3 302 1 26 3 275 2 134 2 277 26 58 6 204 1 231 2 331 3 282 4 185 12 255 1 62 1 31 2 33 3 285 1 65 2 239 2 365 1 315 1 18 2 130 14 95 1 193 2 319 1 73 3 378 3 56 1 381 2 
272 4 323 4 102 1 275 3 134 2 277 41 58 6 231 1 331 4 232 1 282 8 185 21 62 1 285 1 65 4 239 4 338 1 18 4 193 3 73 4 297 1 157 5 24 3 302 1 26 3 204 1 255 1 31 1 210 1 33 3 257 1 310 1 219 1 365 1 170 1 315 1 130 20 95 1 319 1 378 3 132 1 56 1 381 5 
323 4 272 4 102 1 24 4 157 5 302 1 275 3 26 4 134 2 277 38 58 8 204 1 231 2 331 4 232 1 282 7 185 18 255 1 62 1 31 1 257 1 33 4 210 1 310 1 285 1 65 3 239 3 338 1 219 1 365 1 170 1 315 1 18 4 130 20 95 1 193 3 319 1 73 4 378 4 132 1 56 1 297 1 381 4 
323 4 272 4 102 1 24 2 157 8 302 1 275 2 26 2 134 1 277 52 58 4 204 1 231 1 331 7 282 14 185 25 255 1 62 1 31 1 257 1 33 2 210 2 310 1 285 1 166 2 65 7 239 7 219 1 365 1 170 1 315 1 18 7 130 27 95 1 193 4 319 1 73 7 378 2 132 1 56 1 297 1 381 8 
312 1 371 1 126 1 332 1 327 1 4 1 141 1 320 1 125 1 133 1 
334 1 370 1 
371 1 126 1 332 1 4 1 153 1 212 1 148 1 320 1 133 1 
312 1 228 2 179 1 327 1 4 1 28 1 221 1 288 1 125 1 306 1 371 1 126 1 332 1 50 1 64 1 320 1 215 1 133 1 
312 1 228 2 179 1 327 1 4 1 28 1 221 1 288 1 125 1 306 1 371 1 126 1 332 1 50 1 64 1 320 1 215 1 133 1 
312 1 228 2 179 1 327 1 4 1 28 1 221 1 288 1 125 1 306 1 371 1 126 1 332 1 50 1 64 1 320 1 215 1 133 1 
189 1 122 1 128 1 
189 1 122 1 128 1 
224 1 363 1 
189 1 224 1 363 1 
176 1 20 1 
351 1 0 1 176 1 228 1 179 1 103 1 4 1 354 1 183 1 126 1 283 1 332 1 207 1 64 1 334 1 68 2 221 1 20 1 44 2 370 1 316 2 371 1 50 1 74 2 246 2 320 1 133 1 
122 1 128 1 
189 1 224 1 363 1 
229 1 230 1 24 1 26 1 277 2 181 1 58 2 203 1 82 2 185 1 11 1 33 1 67 1 335 2 68 2 336 1 37 1 190 1 191 2 92 1 17 2 130 1 173 1 44 2 197 1 198 1 263 1 378 1 52 1 74 2 98 1 
276 1 191 2 114 1 355 1 78 1 6 1 173 1 184 1 82 2 106 1 206 1 198 1 118 1 208 1 227 1 268 2 349 1 335 2 270 1 
276 1 191 1 114 1 355 1 78 1 6 1 184 1 173 1 82 1 106 1 198 1 209 1 208 1 227 1 268 2 349 1 335 1 
240 1 191 1 92 1 278 1 329 1 173 1 82 1 106 1 11 1 256 1 206 1 198 1 335 1 111 1 
276 1 191 1 114 1 355 1 78 1 6 1 173 1 184 1 82 1 106 1 206 1 198 1 118 1 208 1 227 1 268 2 349 1 335 1 
12 1 
187 1 353 1 341 1 366 1 266 1 288 1 80 1 
299 1 1 1 216 1 353 1 3 1 366 1 221 1 288 2 194 1 318 1 187 1 138 1 226 1 377 1 265 1 53 1 64 1 
1 5 101 2 2 2 278 1 3 3 331 2 187 2 11 2 137 2 138 4 64 5 13 2 65 2 335 3 16 1 145 1 341 1 191 3 147 2 288 8 289 2 21 3 194 4 292 2 198 2 150 2 73 2 152 2 296 1 23 6 299 4 250 2 157 2 353 9 80 1 81 1 82 3 87 1 360 6 35 2 167 1 38 2 39 1 313 1 216 6 92 7 366 8 221 5 173 3 226 12 377 4 270 1 381 2 
272 1 299 2 1 1 102 1 157 2 302 1 353 8 275 1 2 1 3 1 331 2 187 2 138 2 14 1 64 1 13 2 360 5 285 1 65 2 313 1 216 3 366 5 315 1 221 1 289 1 288 5 95 1 193 1 194 2 226 6 377 2 73 2 23 5 245 1 381 2 
299 1 300 1 157 2 123 1 353 2 328 1 138 1 13 2 64 1 257 1 310 1 68 1 286 1 366 2 367 1 192 1 221 1 289 1 44 1 316 1 317 1 194 1 377 1 151 1 74 1 132 1 246 1 381 1 
299 1 353 1 341 1 366 1 80 1 288 1 194 1 187 1 138 1 377 1 
157 2 216 5 353 5 366 5 289 1 288 5 331 2 226 10 73 2 13 2 360 5 23 5 35 1 65 2 381 2 
187 1 1 1 3 1 64 1 221 1 288 1 
299 2 1 4 353 2 2 2 278 2 3 2 329 1 81 1 82 4 11 1 256 1 30 1 138 1 64 3 335 4 39 2 241 1 313 2 340 1 191 4 92 1 366 2 221 3 173 1 194 2 198 1 375 1 377 2 54 1 
300 1 123 2 24 1 26 1 277 1 278 1 58 2 82 1 185 1 235 1 308 1 11 1 283 1 358 1 33 1 335 1 68 2 37 1 38 1 191 1 314 1 92 1 44 3 316 2 173 1 197 1 198 1 378 1 52 1 74 3 75 1 246 2 
299 1 313 1 216 2 353 1 219 1 2 1 366 2 288 4 194 1 187 2 138 1 226 4 377 1 360 2 23 2 
371 1 4 1 79 1 
371 1 4 1 159 1 20 1 125 1 
371 1 4 1 79 1 
371 1 4 1 79 1 
60 1 371 1 4 1 
60 1 371 1 4 1 
60 1 371 1 4 1 
371 1 4 1 
332 1 320 1 
239 1 157 1 24 2 26 2 219 1 277 8 58 4 170 1 130 4 18 2 231 1 282 3 185 4 378 2 257 1 33 2 132 1 310 1 297 1 381 1 
282 2 185 3 157 1 219 1 277 6 170 1 266 1 257 1 132 1 130 3 18 2 310 1 297 1 381 1 
239 1 339 1 24 1 157 1 26 1 277 4 58 2 18 1 130 2 331 1 282 2 185 2 73 1 378 1 33 1 65 1 381 1 
272 2 239 1 157 1 275 1 277 7 18 1 130 3 193 1 331 1 282 2 185 4 73 1 210 1 65 1 381 1 
272 2 157 3 24 2 26 2 277 23 58 4 231 2 331 2 282 9 83 1 185 12 257 1 210 1 33 2 310 2 166 1 65 2 239 4 219 1 170 1 130 11 18 5 369 1 193 2 73 2 378 2 132 2 297 1 381 3 
272 1 185 1 277 1 
277 1 130 1 193 1 
239 1 339 1 24 1 157 1 26 1 277 6 58 2 130 3 18 2 331 1 282 3 185 3 73 1 378 1 33 1 35 1 65 1 381 1 
272 1 102 1 24 1 157 2 302 1 275 1 26 1 277 12 58 2 331 2 282 2 185 6 33 1 285 1 65 2 239 1 315 1 130 6 18 1 95 1 193 1 73 2 378 1 56 1 381 2 
239 1 282 2 185 3 157 1 277 6 132 1 257 1 18 1 310 1 130 3 381 1 
239 1 24 1 26 1 277 3 170 1 58 2 130 1 18 1 369 1 231 1 282 2 185 2 378 1 132 1 33 1 310 1 297 1 
239 1 286 1 157 2 277 8 18 2 130 4 282 3 185 4 132 1 257 1 310 1 381 2 
239 1 24 1 157 1 26 1 277 2 58 2 130 2 282 1 73 1 378 1 33 1 56 1 
239 1 24 1 157 1 26 1 277 4 58 2 18 1 130 2 331 1 282 2 185 2 73 1 378 1 33 1 65 1 56 1 381 1 
239 1 24 3 26 3 277 3 58 6 18 1 130 1 231 1 369 1 232 1 282 2 185 2 378 3 33 3 132 1 310 1 56 1 
272 4 24 5 157 5 275 1 26 5 277 34 58 10 231 2 331 3 232 1 282 12 185 18 205 1 257 2 33 5 210 1 310 3 65 3 239 5 339 1 219 1 170 1 130 16 18 7 369 1 193 3 291 1 73 3 378 5 132 3 55 1 56 1 297 1 381 5 
272 1 157 1 24 1 302 1 275 1 26 1 277 8 58 2 282 2 185 4 33 1 257 1 310 1 219 1 170 1 130 4 18 2 193 1 378 1 132 1 56 1 297 1 381 1 
272 2 24 2 157 2 302 1 275 1 26 2 277 11 58 4 331 1 282 3 185 5 257 1 33 2 210 1 310 1 239 1 339 1 219 1 170 1 18 2 130 6 193 1 73 1 378 2 132 1 56 1 297 1 381 1 
272 1 102 1 24 3 157 3 302 1 275 1 26 3 277 19 58 6 231 1 331 2 282 4 185 10 257 1 33 3 310 1 285 1 65 2 239 1 339 1 219 1 170 1 315 1 130 9 18 3 95 1 193 1 73 2 378 3 132 1 56 1 297 1 381 3 
272 1 102 1 24 3 157 3 302 1 275 1 26 3 277 17 58 6 231 1 331 2 282 5 185 7 257 1 33 3 310 1 285 1 65 1 239 2 339 1 219 1 170 1 315 1 130 10 18 3 95 1 193 1 73 2 378 3 132 1 56 1 297 1 381 2 
272 1 157 1 24 1 302 1 275 1 26 1 277 8 58 2 282 2 185 4 33 1 257 1 310 1 219 1 170 1 130 4 18 2 193 1 378 1 132 1 56 1 297 1 381 1 
272 1 102 1 24 1 157 2 302 1 275 1 26 1 277 12 58 2 331 2 282 2 185 6 33 1 285 1 65 2 239 1 315 1 130 6 18 1 95 1 193 1 73 2 378 1 56 1 381 2 
272 1 102 1 24 4 157 3 302 1 275 1 26 4 277 18 58 8 231 2 331 2 282 5 185 8 257 1 33 4 310 1 285 1 65 1 239 2 339 1 219 1 170 1 315 1 130 10 18 3 95 1 193 1 73 2 378 4 132 1 56 1 297 1 381 2 
272 1 102 1 24 4 157 3 302 1 275 1 26 4 277 16 58 8 231 2 331 3 232 1 282 6 185 7 33 4 285 1 65 2 239 3 315 1 130 9 18 3 95 1 193 1 73 3 378 4 56 1 381 2 
239 3 157 1 277 7 170 2 18 3 130 3 282 6 185 4 132 3 257 1 310 3 297 1 381 1 
272 1 102 1 24 4 157 3 302 1 275 1 26 4 277 18 58 8 231 2 331 2 232 1 282 4 185 8 257 1 33 4 310 1 285 1 65 1 239 1 219 1 170 1 315 1 130 10 18 3 95 1 193 1 73 2 378 4 132 1 56 1 297 1 381 2 
337 1 163 1 48 1 
99 1 337 1 163 1 97 1 48 1 303 1 154 1 213 1 
11 1 256 1 198 1 191 1 92 1 278 1 266 1 329 1 173 1 335 1 82 1 
38 1 191 1 92 1 278 1 173 1 316 1 44 2 82 1 235 1 11 1 283 1 198 1 74 2 267 1 75 1 246 1 68 1 335 1 
182 1 5 1 82 1 235 1 186 1 11 2 283 1 335 1 68 2 16 1 38 2 39 1 191 1 92 2 367 2 44 2 316 1 173 1 198 1 74 2 267 1 75 1 246 2 
182 1 5 1 82 1 235 1 186 1 11 2 283 1 335 1 68 2 16 1 38 2 39 1 191 1 92 2 367 2 44 2 316 1 173 1 198 1 373 1 74 2 267 1 246 2 
300 1 1 1 123 1 250 1 328 1 82 1 161 1 187 1 11 1 64 2 68 1 335 1 16 1 38 1 39 1 191 1 92 3 367 1 192 1 221 2 147 1 94 1 288 1 44 1 316 1 21 1 173 1 198 1 151 1 74 1 246 1 
300 1 1 1 123 1 250 1 328 1 82 1 187 1 137 1 11 1 64 2 68 1 335 1 16 1 38 1 39 1 191 1 92 3 367 1 192 1 221 2 147 1 288 1 44 1 316 1 21 1 173 1 198 1 151 1 74 1 246 1 
198 1 191 1 121 1 173 1 335 1 82 1 
145 1 38 1 100 1 191 6 278 2 92 3 181 1 17 1 184 1 173 3 82 7 116 1 11 2 198 2 293 1 264 1 121 1 284 1 258 1 270 1 335 7 
229 1 277 6 58 4 282 2 235 1 185 3 11 1 283 2 335 1 68 1 191 1 18 2 71 1 198 1 74 2 75 1 246 1 297 1 301 1 24 2 157 1 26 2 82 1 358 1 32 1 33 2 257 1 310 1 37 2 38 1 219 1 314 1 92 1 170 1 130 3 368 1 316 1 44 2 173 1 376 1 263 1 378 2 52 2 132 1 267 1 270 1 381 1 
299 2 1 2 250 1 353 1 278 1 3 1 354 1 80 1 81 1 82 1 187 1 137 1 138 2 64 3 335 1 341 1 191 1 366 1 92 2 221 3 147 1 288 1 21 1 194 2 292 1 377 2 150 1 152 1 
145 1 38 1 250 1 191 2 92 2 173 2 82 2 11 1 198 1 121 1 87 1 270 1 335 2 
326 1 191 4 278 1 92 1 329 1 115 1 173 1 82 4 256 1 11 1 198 1 335 4 270 1 
38 1 39 1 100 1 191 2 42 1 92 1 356 1 173 2 82 2 11 1 198 1 264 1 77 1 335 2 
276 1 191 1 278 1 78 1 173 1 82 1 198 1 349 1 268 1 335 1 
230 1 191 2 92 1 181 1 184 1 173 1 82 2 11 1 198 1 270 1 335 2 
39 1 326 1 191 4 278 1 92 3 181 1 329 1 173 2 82 5 256 1 11 2 116 1 198 2 293 1 335 5 270 1 
39 1 326 1 191 4 146 1 278 1 92 3 181 1 329 1 173 2 82 5 256 1 11 2 116 1 198 2 335 5 270 1 
38 1 191 1 92 1 278 1 173 1 316 1 44 2 82 1 235 1 11 1 283 1 198 1 373 1 74 2 267 1 246 1 68 1 335 1 
145 1 38 1 100 1 39 1 191 1 92 1 173 2 82 1 11 1 198 1 264 1 258 1 335 1 
155 1 237 1 379 1 74 1 203 1 44 1 67 1 68 1 98 1 
379 1 171 1 66 1 
155 1 237 1 283 1 379 1 174 1 
155 2 367 1 182 1 354 1 171 1 147 1 221 2 357 1 288 1 223 1 187 1 186 1 237 2 283 1 379 1 64 2 174 2 66 1 57 1 
9 1 266 1 345 1 254 1 
9 1 131 1 40 1 139 1 160 1 345 1 254 1 
131 1 380 1 76 1 
40 1 104 2 135 1 160 3 345 1 254 1 96 1 9 1 131 3 139 1 211 1 321 1 
298 1 9 1 168 1 131 2 40 1 139 1 160 2 345 1 254 1 
40 1 217 1 135 1 160 1 78 1 6 1 345 1 107 1 131 1 139 1 268 1 
9 1 131 1 40 1 139 1 135 1 160 1 345 1 
9 2 131 1 40 1 139 1 135 1 160 1 254 1 
113 1 40 2 135 1 160 2 345 1 9 1 131 2 139 2 51 1 238 1 
298 2 40 1 41 1 135 1 304 1 160 3 19 1 345 2 254 1 9 1 107 1 131 3 139 1 
298 1 347 1 131 1 40 1 276 1 139 1 227 1 135 1 268 2 78 1 160 2 6 1 
298 2 168 1 40 2 135 1 304 1 160 4 345 2 254 1 9 1 236 1 107 1 131 4 139 2 
9 1 131 1 40 1 139 1 135 1 160 1 345 1 254 1 
298 2 40 1 104 1 304 1 160 4 345 3 254 2 96 1 9 2 107 1 131 4 188 1 139 1 321 1 
298 1 9 1 196 1 25 1 131 2 40 1 109 1 139 1 135 1 160 2 345 1 254 1 
40 1 104 2 135 1 160 3 345 1 254 1 96 2 9 1 131 3 139 1 22 1 321 1 
252 1 199 1 345 2 222 2 
131 1 40 1 374 1 139 1 135 1 160 1 
298 1 9 1 131 2 40 1 139 1 135 1 19 1 160 2 345 1 254 1 
88 1 
9 1 131 1 40 1 139 1 135 1 160 1 345 1 254 1 
298 1 9 1 131 3 40 1 104 1 139 1 135 1 19 1 160 3 345 1 254 1 
107 1 188 1 304 1 345 1 
9 1 345 1 

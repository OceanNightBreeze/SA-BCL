#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 157 132 172 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 157 132 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 212 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException (80,305) 285 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 230 243 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 157 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 157 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 157 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 157 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 157 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 157 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 157 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (80,305) (80,305) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (80,305) 285 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (80,305) (80,305) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 6874 | = null
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
204 1 318 2 47 9 322 1 342 2 324 1 258 1 235 1 114 1 159 1 238 2 115 9 30 3 307 2 281 1 166 1 348 4 193 2 216 1 217 6 247 1 88 1 89 1 249 5 19 2 93 1 176 2 177 1 
204 1 318 2 47 9 322 1 342 2 324 1 258 1 235 1 114 1 159 1 238 2 115 9 30 3 307 2 281 1 166 1 348 4 193 2 216 1 217 6 247 1 88 1 89 1 249 5 19 2 93 1 176 2 177 1 
204 1 318 2 47 10 322 1 342 2 324 1 258 1 235 1 114 1 159 1 238 2 115 10 30 4 307 2 281 1 166 1 348 5 193 2 216 1 217 7 247 1 88 1 89 1 249 6 19 2 93 1 176 2 177 1 
204 1 318 2 47 7 322 1 342 2 324 1 258 1 235 1 114 1 159 1 238 2 115 7 30 2 307 2 281 1 166 1 348 3 193 2 216 1 217 4 88 1 89 1 249 4 19 2 93 1 176 1 177 1 
318 1 193 1 47 4 217 3 247 1 342 1 324 1 89 1 258 1 235 1 249 3 238 1 19 1 93 1 115 4 30 1 176 2 348 2 
153 1 318 1 47 2 322 1 342 1 324 1 89 1 258 1 249 1 78 1 238 1 19 1 115 2 307 1 33 1 177 1 
47 3 216 1 217 1 324 1 89 1 258 1 249 2 238 2 19 2 115 3 30 1 307 1 348 1 
71 1 318 1 47 9 342 1 324 1 258 1 114 1 235 1 238 2 115 9 30 3 307 1 166 1 348 4 193 1 216 1 217 7 247 1 89 1 249 5 19 2 93 1 94 1 176 2 
71 1 318 1 47 9 342 1 324 1 258 1 114 1 235 1 238 2 115 9 30 3 307 1 166 1 348 4 193 1 216 1 217 7 247 1 89 1 249 5 19 2 93 1 94 1 176 2 
228 1 103 1 277 1 
103 1 351 1 59 2 
41 2 196 1 22 2 154 2 146 2 290 2 259 2 191 1 
0 1 319 1 72 1 23 2 22 3 154 2 321 2 185 1 110 1 341 1 275 1 259 2 327 2 81 1 53 1 191 1 262 1 87 1 310 1 245 2 146 3 331 1 266 1 37 1 248 1 60 1 17 1 290 2 314 1 219 1 41 2 147 1 196 1 127 2 45 1 200 1 225 1 
41 1 22 1 154 1 229 1 146 1 171 1 290 1 137 1 259 1 191 1 
22 1 228 1 73 1 229 1 146 1 41 1 279 1 65 1 103 1 345 1 163 1 52 1 338 1 85 1 
22 2 154 2 228 1 73 2 229 2 137 1 259 2 279 1 345 1 163 1 52 1 190 1 85 2 191 1 146 2 171 1 290 2 41 2 103 1 
182 1 73 1 189 1 292 1 85 1 
228 1 182 1 103 1 73 2 346 1 292 1 4 1 85 2 
73 1 292 1 85 1 
154 1 22 1 182 1 73 1 229 1 146 1 171 1 290 1 137 1 259 1 41 1 190 1 85 1 191 1 
103 1 
228 1 182 1 103 1 73 2 289 1 292 1 4 1 85 2 
228 1 182 2 11 1 73 5 312 1 274 1 292 2 4 1 280 1 28 1 50 2 103 1 82 1 357 1 214 2 96 2 84 1 244 1 85 5 
0 1 10 1 109 1 310 1 22 2 245 1 110 1 146 2 266 1 37 1 60 1 16 1 290 1 259 1 327 1 41 1 127 1 81 1 200 1 225 1 
196 1 277 1 
22 2 154 1 265 1 146 2 290 1 259 1 41 2 196 2 67 1 
10 1 358 1 138 1 
0 1 192 1 22 1 245 1 310 1 110 1 146 1 266 1 37 1 60 1 327 1 196 1 127 1 81 1 200 1 225 1 
86 1 109 2 22 5 154 1 330 1 146 5 16 1 290 4 259 4 41 5 174 1 65 1 196 1 67 1 
41 2 22 2 51 1 229 1 146 2 290 2 137 1 259 2 
41 3 109 1 154 1 196 1 22 3 146 3 290 3 259 3 
41 1 22 1 229 1 146 1 290 1 137 1 259 1 
41 1 22 1 154 1 229 1 67 1 265 1 146 1 290 1 259 1 
0 1 109 1 72 1 23 1 154 2 22 4 321 2 73 1 185 1 110 1 229 1 341 1 275 1 259 3 327 1 279 1 345 1 163 1 81 1 52 1 53 1 242 1 85 1 191 1 87 1 310 1 245 1 288 1 146 4 331 1 266 1 37 1 60 1 16 1 17 1 290 3 314 1 219 1 41 3 196 1 127 1 67 1 200 1 225 1 
86 1 41 2 109 1 196 1 65 1 22 2 146 2 290 1 259 1 
109 2 154 1 22 3 1 1 73 1 229 1 146 3 288 1 16 1 290 3 259 3 41 3 279 1 103 1 345 1 67 1 163 1 52 1 85 1 
109 1 10 1 154 1 22 2 146 2 290 2 138 1 259 2 41 2 67 1 
0 1 22 1 245 1 310 1 110 1 146 1 37 1 266 1 60 1 327 1 196 1 127 1 81 1 200 1 225 1 
0 1 22 1 245 1 310 1 110 1 146 1 37 1 266 1 60 1 327 1 211 1 196 1 127 1 296 1 225 1 
226 1 72 1 181 1 23 4 321 2 185 1 341 1 275 1 209 1 138 2 3 1 188 1 260 1 240 1 101 1 87 1 10 2 248 2 17 1 18 1 314 2 43 1 358 2 337 1 
279 1 41 1 22 1 51 1 229 1 146 1 290 1 259 1 
57 1 270 1 
57 1 270 1 
246 1 164 1 
246 1 164 1 
246 1 164 1 
57 1 31 1 270 1 
57 1 270 1 333 1 
187 1 246 1 57 2 164 1 270 2 118 1 
57 1 31 1 270 1 
57 1 31 1 270 1 
57 1 270 1 122 1 
57 1 270 1 122 1 
57 1 270 1 122 1 
79 1 132 1 73 1 57 1 44 1 172 1 270 1 157 1 85 1 
79 1 132 1 57 1 44 1 270 1 157 1 
318 1 193 1 342 1 
318 1 78 1 342 1 
78 1 299 1 193 2 107 1 342 3 173 1 
78 1 299 1 12 1 342 1 173 1 124 1 
78 1 299 1 193 1 342 2 173 2 
182 4 228 1 73 5 253 1 274 3 276 1 4 1 188 1 237 2 50 1 162 1 82 1 165 1 240 1 260 1 214 1 8 1 244 2 85 5 351 1 59 3 170 1 61 1 292 1 91 1 103 2 66 2 335 2 150 1 151 1 337 1 96 1 
182 7 228 1 25 5 73 9 133 1 134 1 231 1 274 8 276 3 210 1 4 1 280 1 188 3 50 2 189 5 82 1 165 2 240 3 260 3 214 2 8 1 244 6 85 9 351 3 59 9 292 6 91 4 103 5 66 6 95 1 335 6 69 1 151 2 337 3 96 2 
228 1 182 2 73 3 253 1 274 3 276 1 280 1 188 1 237 1 50 1 165 1 240 1 260 1 214 1 85 3 244 2 351 2 59 4 170 1 91 1 103 3 66 2 335 2 151 1 96 1 337 1 
228 1 182 3 73 4 253 1 134 1 274 5 276 2 280 1 188 2 237 2 50 1 165 1 240 2 260 2 214 1 85 4 244 4 351 3 59 7 170 1 91 2 103 4 66 4 95 1 335 4 69 1 151 1 96 1 337 2 
329 1 266 1 277 1 
106 1 266 1 
131 1 
310 1 110 1 266 1 
250 1 266 1 
110 1 266 1 
212 1 
226 2 23 7 233 2 248 4 18 3 27 1 314 3 76 1 77 1 188 1 104 1 260 1 317 1 359 1 298 1 108 1 261 1 
226 2 23 7 233 2 248 4 18 3 27 1 314 3 76 1 77 1 188 1 104 1 260 1 317 1 359 1 298 1 108 1 261 1 
226 2 23 7 56 1 233 2 248 4 18 3 27 1 314 3 76 1 77 1 188 1 104 1 260 1 317 1 359 1 261 1 298 1 108 1 
226 6 23 34 321 2 185 1 341 1 113 1 343 1 233 1 276 3 27 3 76 7 77 2 188 5 260 5 240 3 261 1 9 1 87 1 145 1 248 17 18 13 313 1 17 1 314 17 221 1 198 1 104 3 223 3 268 4 317 1 359 1 70 1 337 3 108 1 298 2 
226 3 87 2 263 1 23 9 321 4 185 2 341 2 233 2 248 5 27 1 313 1 18 4 17 2 76 1 314 4 77 1 188 1 104 1 260 1 359 1 261 1 108 1 298 1 286 1 
318 1 272 1 47 2 323 1 254 1 342 2 324 1 258 1 155 1 327 1 78 1 238 1 115 2 307 1 55 1 193 1 245 1 144 1 217 1 37 1 38 1 332 1 89 1 90 1 249 1 127 1 19 1 107 1 201 1 225 1 
318 1 272 1 47 3 48 1 323 1 254 1 342 2 324 1 258 1 155 1 327 1 78 1 238 1 115 3 307 1 193 1 245 1 144 1 217 2 37 1 38 1 332 1 40 1 249 1 127 1 19 1 107 1 201 1 297 1 225 1 
318 1 272 1 47 2 323 1 254 1 342 2 324 1 258 1 327 1 78 1 115 2 307 1 193 1 245 1 144 1 217 2 37 1 332 1 40 1 249 1 127 1 107 1 201 1 297 1 225 1 
0 1 21 1 47 1 48 1 110 1 323 2 255 1 136 1 49 1 327 1 238 1 115 1 307 2 35 1 245 1 144 2 37 1 266 1 332 2 127 1 19 1 356 1 225 1 
318 1 272 1 55 1 193 1 245 1 47 1 144 1 254 1 323 1 37 1 342 2 38 1 89 1 332 1 155 1 327 1 78 1 238 1 19 1 127 1 115 1 107 1 307 1 201 1 297 1 225 1 
112 1 
180 2 0 2 228 1 229 1 135 2 274 2 49 1 4 3 327 2 279 1 236 4 328 1 50 1 52 1 7 1 244 2 245 2 59 2 146 1 15 2 102 1 292 6 294 2 65 1 103 2 197 1 151 1 338 1 22 1 73 5 110 1 255 1 75 2 302 2 345 1 163 1 82 1 116 1 214 1 85 5 168 1 353 2 351 2 266 1 37 1 39 1 123 1 41 1 92 1 125 1 127 2 222 1 175 1 96 1 225 1 
22 1 73 3 229 1 4 1 279 1 236 2 345 1 163 1 52 1 116 1 85 3 146 1 289 1 15 1 102 1 292 2 41 1 92 1 65 1 175 1 222 1 338 1 
22 1 228 1 73 3 229 1 75 1 4 1 279 1 236 3 345 1 163 1 52 1 116 1 85 3 146 1 289 1 102 1 292 1 41 1 92 1 65 1 103 1 175 1 222 1 338 1 
22 1 228 1 73 3 229 1 135 1 75 1 4 1 279 1 236 3 345 1 163 1 52 1 116 1 85 3 146 1 289 1 15 1 102 1 292 2 41 1 92 1 65 1 103 1 175 1 222 1 338 1 
180 2 228 5 229 1 135 4 274 1 4 3 279 1 236 6 50 1 52 1 244 1 58 1 146 1 289 1 15 4 102 1 292 7 294 2 65 1 103 5 338 1 22 1 73 5 75 4 302 2 156 1 345 1 163 1 82 1 116 1 306 1 32 1 214 1 85 5 168 1 351 2 353 2 39 1 41 1 92 1 222 1 175 1 269 1 96 1 
180 2 228 1 229 1 274 1 135 2 4 2 279 1 236 4 328 1 50 1 52 1 244 1 146 1 59 2 15 2 102 1 292 4 294 2 65 1 103 2 338 1 22 1 73 4 302 2 75 2 345 1 163 1 82 1 116 1 214 1 85 4 168 1 351 2 353 2 39 1 41 1 92 1 222 1 175 1 96 1 
180 2 22 1 228 1 73 4 229 1 135 2 274 1 75 2 302 2 4 2 279 1 236 4 50 1 345 1 163 1 82 1 52 1 116 1 32 1 214 1 244 1 85 4 168 1 58 1 353 2 351 2 146 1 15 2 39 1 102 1 292 4 41 1 294 2 92 1 65 1 103 1 175 1 222 1 269 1 96 1 338 1 
180 2 22 1 228 1 73 4 229 1 135 2 274 1 75 2 302 2 4 2 279 1 236 4 50 1 345 1 163 1 82 1 52 1 116 1 32 1 214 1 244 1 85 4 168 1 58 1 353 2 351 2 146 1 15 2 39 1 102 1 292 4 41 1 294 2 92 1 65 1 103 1 175 1 222 1 269 1 96 1 338 1 
180 2 22 1 228 1 73 4 229 1 135 2 274 1 75 2 257 2 4 2 279 1 236 4 50 1 345 1 163 1 82 1 52 1 116 1 214 1 244 1 85 4 264 1 58 1 59 2 146 1 15 2 39 1 102 1 292 4 41 1 294 2 42 1 92 1 65 1 148 2 103 1 175 1 222 1 128 1 96 1 338 1 
180 2 22 1 228 1 73 4 229 1 274 1 135 3 302 2 75 3 4 2 279 1 236 5 50 1 345 1 163 1 82 1 52 1 116 1 32 1 306 1 214 1 244 1 85 4 168 1 58 1 353 2 351 2 146 1 15 3 39 1 102 1 292 5 41 1 294 2 92 1 65 1 103 1 175 1 222 1 269 1 96 1 338 1 
180 2 22 1 228 1 73 4 229 1 274 1 135 3 302 2 75 3 4 2 279 1 236 5 50 1 345 1 163 1 82 1 52 1 116 1 32 1 306 1 214 1 244 1 85 4 168 1 58 1 353 2 351 2 146 1 15 3 39 1 102 1 292 5 41 1 294 2 92 1 65 1 103 1 175 1 222 1 269 1 96 1 338 1 
180 2 228 1 229 1 274 1 135 2 4 2 279 1 236 4 328 1 50 1 52 1 244 1 146 1 59 2 15 2 102 1 292 4 294 2 65 1 148 2 103 1 338 1 22 1 73 4 75 2 257 2 345 1 163 1 82 1 116 1 214 1 85 4 39 1 41 1 42 1 92 1 222 1 175 1 96 1 
226 2 72 1 23 6 321 2 185 1 341 1 275 1 233 1 277 1 27 1 138 1 188 1 260 1 261 1 101 1 10 1 87 1 248 3 17 1 18 2 314 3 196 2 104 1 358 1 359 1 108 1 
226 1 271 1 320 1 72 1 23 14 321 4 185 2 341 2 275 2 276 2 138 4 76 1 158 1 188 1 260 2 240 1 9 1 87 2 10 11 145 1 352 1 13 1 248 8 18 2 17 2 314 6 219 1 147 1 196 1 223 3 358 11 268 3 337 2 
0 1 320 1 109 1 72 1 22 2 23 2 321 2 110 1 186 1 185 1 273 1 341 1 275 1 138 1 327 1 259 1 81 1 87 1 192 1 309 1 310 1 245 1 146 2 266 1 37 1 60 1 16 1 248 1 17 1 290 1 314 1 219 1 41 1 147 1 196 1 127 1 200 1 225 1 
226 4 0 1 320 1 321 6 185 3 233 1 275 3 276 2 138 7 327 3 99 1 188 3 53 2 240 2 10 7 245 3 146 3 16 1 60 2 248 10 290 1 17 3 18 8 334 1 147 1 196 2 104 1 200 2 297 1 337 2 108 1 109 1 72 3 22 3 23 20 111 1 110 2 207 2 341 3 27 1 76 4 259 1 81 2 260 3 261 1 87 3 310 2 37 2 266 2 354 2 314 10 219 1 41 1 267 2 127 3 220 2 358 7 359 1 225 2 
0 2 109 1 72 2 22 1 23 2 321 4 185 2 184 1 110 3 255 1 341 2 275 2 49 1 259 1 327 7 140 1 80 1 284 1 101 1 285 1 87 2 310 1 245 6 146 1 37 4 266 4 248 1 290 1 17 2 90 1 62 1 314 1 219 1 41 1 147 1 127 7 149 1 45 2 295 1 297 1 203 1 179 1 225 3 
226 1 320 1 72 1 154 1 22 1 23 3 321 2 185 1 341 1 275 1 276 1 138 1 259 1 188 1 260 1 240 1 10 1 87 1 311 1 146 1 248 1 18 1 290 1 17 1 314 2 41 1 67 1 358 1 337 1 
10 1 87 1 72 1 181 1 23 2 321 2 185 1 341 1 275 1 248 2 18 1 17 1 138 1 76 1 358 1 260 1 337 1 101 1 
226 1 10 1 87 1 72 1 23 2 321 2 185 1 341 1 275 1 209 1 18 1 17 1 138 1 314 2 188 1 358 1 240 1 101 1 
226 1 72 1 23 4 321 2 185 1 341 1 276 1 275 1 138 2 76 1 188 1 260 1 240 1 101 1 87 1 10 2 248 2 17 1 18 2 314 2 358 2 337 1 
10 1 87 1 72 1 181 1 23 2 321 2 184 1 185 1 341 1 275 1 248 2 18 1 17 1 138 1 76 1 358 1 260 1 337 1 
226 1 10 1 87 1 72 1 23 2 321 2 184 1 185 1 341 1 275 1 209 1 18 1 17 1 138 1 314 2 188 1 358 1 240 1 
226 1 72 1 23 4 321 2 185 1 184 1 341 1 276 1 275 1 138 2 76 1 188 1 260 1 240 1 87 1 10 2 248 2 17 1 18 2 314 2 358 2 337 1 
226 1 72 1 23 4 321 2 185 1 341 1 276 1 275 1 138 2 76 1 188 1 260 1 240 1 87 1 10 2 248 2 17 1 18 2 314 2 358 2 337 1 
0 1 72 1 23 2 22 1 321 2 110 1 185 1 341 1 275 1 327 1 81 1 53 1 87 1 310 1 245 1 146 1 37 1 266 1 248 1 60 1 17 1 314 1 219 1 147 1 196 1 127 1 200 1 225 1 
0 1 72 1 23 2 22 1 321 2 110 1 185 1 341 1 275 1 211 1 327 1 142 1 87 1 310 1 245 1 146 1 37 1 266 1 248 1 60 1 17 1 314 1 219 1 147 1 196 1 127 1 296 1 225 1 
226 1 320 1 72 1 23 4 321 2 185 1 341 1 276 1 275 1 138 2 76 1 188 1 260 1 240 1 87 1 10 2 248 2 17 1 18 2 314 2 358 2 337 1 
226 1 72 1 23 4 22 1 321 2 110 1 185 1 341 1 275 1 276 1 138 2 76 1 327 1 188 1 81 1 240 1 260 1 53 1 10 2 87 1 310 1 245 1 146 1 37 1 266 1 248 2 60 1 18 2 17 1 90 1 314 2 267 1 127 1 358 2 200 1 337 1 225 1 
320 1 72 1 154 1 22 1 23 3 321 2 185 1 341 1 275 1 276 1 138 1 76 1 259 1 188 1 240 1 260 1 87 1 10 1 146 1 248 2 18 1 290 1 17 1 314 1 41 1 67 1 199 1 358 1 337 1 
226 2 205 1 227 1 23 32 321 6 230 1 185 3 341 3 208 1 276 4 76 3 98 1 188 4 239 3 260 4 240 4 9 3 243 1 308 1 87 3 263 1 145 1 248 15 121 1 313 1 17 3 18 5 314 17 64 2 315 1 223 3 268 4 337 4 224 1 178 1 129 1 252 1 
226 3 205 1 227 1 23 33 321 8 230 1 185 4 341 4 208 1 276 4 76 3 98 1 188 3 239 4 260 4 240 3 9 3 243 1 308 1 87 4 263 1 145 1 248 17 121 1 313 2 17 4 18 6 314 16 64 2 315 1 223 3 268 4 337 4 224 1 178 1 129 1 252 1 
226 6 205 1 227 1 23 46 321 4 230 1 185 2 341 2 233 1 208 1 276 6 27 1 76 6 188 7 239 3 260 7 240 6 261 1 9 2 243 1 308 1 87 2 263 1 145 2 13 2 248 24 121 1 313 1 17 2 18 12 314 22 64 1 315 1 104 1 223 4 268 4 359 1 337 6 108 1 178 1 129 1 252 1 
226 3 23 19 321 4 230 2 185 2 341 2 276 3 76 3 98 1 188 3 239 2 260 3 240 3 9 1 243 1 87 2 263 1 145 1 248 9 121 1 17 2 18 6 314 10 64 1 126 1 315 1 223 1 268 2 337 3 252 1 
226 1 205 1 227 1 23 24 321 6 230 1 185 3 341 3 208 1 276 3 76 1 188 2 239 3 260 3 240 2 9 2 243 1 308 1 87 3 263 1 248 13 121 2 313 2 18 2 17 3 314 11 64 2 315 1 223 2 268 2 337 3 178 1 252 1 129 1 
320 1 72 1 22 2 23 2 321 2 110 1 185 1 341 1 275 1 234 1 139 1 327 2 140 1 100 1 29 1 284 1 87 1 245 2 146 2 37 1 266 1 248 1 17 1 355 1 314 1 219 1 41 2 147 1 127 2 45 2 225 1 
318 1 272 1 193 1 245 2 323 1 37 1 342 2 38 1 26 1 90 1 327 2 78 1 304 1 127 2 107 1 282 1 201 1 297 1 225 1 
318 1 272 1 193 1 245 1 323 1 37 1 342 2 38 1 325 1 327 1 78 1 304 1 127 1 107 1 201 1 297 1 225 1 
0 1 245 1 110 1 323 1 255 1 37 1 266 1 49 1 327 1 127 1 356 1 282 1 241 1 225 1 
318 1 272 1 193 1 245 1 323 1 37 1 342 2 38 1 26 1 327 1 78 1 304 1 127 1 107 1 282 1 201 1 297 1 225 1 
340 1 
228 1 103 1 11 1 312 1 274 1 277 1 244 1 
228 1 73 1 274 1 302 1 4 1 50 1 82 1 214 1 244 1 85 1 168 1 351 1 59 1 353 1 292 1 103 2 96 1 
0 1 228 2 274 9 276 2 326 2 278 2 327 3 4 3 188 2 50 4 240 2 244 8 329 2 143 1 245 3 11 1 287 2 59 12 14 2 292 5 250 2 103 8 66 6 106 3 335 6 151 2 337 2 73 5 110 3 256 2 344 1 303 2 160 1 345 2 82 4 83 1 260 2 117 2 214 4 85 5 167 1 310 3 36 2 312 1 351 6 37 4 266 10 354 2 90 1 125 1 127 3 316 1 96 4 225 3 
205 1 228 1 73 1 274 7 208 1 276 2 4 1 188 2 50 2 82 2 260 2 240 2 214 2 9 1 85 1 244 4 308 1 36 1 59 6 351 3 218 1 292 1 103 4 66 5 335 5 223 1 268 1 96 2 337 2 178 1 129 1 
22 1 154 1 73 1 229 1 274 2 27 1 137 1 259 1 188 1 50 1 82 1 32 1 260 2 214 1 190 1 85 1 244 2 191 1 36 2 146 1 14 1 171 1 290 1 41 1 221 1 104 1 359 1 96 1 
228 1 11 1 312 1 274 1 50 1 103 1 82 1 214 1 96 1 244 1 
36 2 59 10 351 5 14 1 274 5 354 1 276 2 188 2 103 5 66 5 335 5 260 2 240 2 337 2 244 5 
228 1 103 1 73 1 292 1 85 1 4 1 
0 2 73 3 110 1 255 1 274 2 49 1 327 4 4 2 280 1 160 1 50 2 82 1 7 1 214 2 244 2 85 3 143 2 245 4 37 1 266 1 292 4 125 2 127 4 197 1 20 1 105 1 151 2 96 2 225 1 
0 1 72 1 23 1 22 3 154 2 321 2 185 1 110 1 341 1 275 1 327 1 259 2 81 1 53 1 191 1 87 1 245 1 310 1 146 3 331 1 37 1 266 1 60 1 290 2 17 1 314 1 219 1 41 2 196 1 127 1 200 1 225 1 
228 2 351 2 59 4 274 1 233 1 125 1 50 1 103 4 66 2 82 1 335 2 151 1 214 1 96 1 244 2 
44 1 157 1 
44 1 157 1 
44 1 157 1 
44 1 157 1 
44 1 157 1 
44 1 157 1 
44 1 157 1 
44 1 157 1 
57 1 270 1 
226 2 23 8 321 2 185 1 341 1 233 1 27 1 188 1 260 1 9 1 261 1 87 1 263 1 248 4 17 1 18 2 314 4 223 1 104 1 268 1 359 1 108 1 129 1 
226 2 23 11 321 4 185 2 341 2 233 1 276 1 27 1 76 1 188 1 260 2 261 1 9 1 87 2 263 1 145 1 248 6 17 2 18 3 314 5 293 1 104 1 223 1 268 2 359 1 337 1 108 1 129 1 
226 1 205 1 23 13 321 6 185 3 341 3 208 1 276 2 76 1 188 2 260 2 240 2 9 1 87 3 308 1 263 1 248 6 17 3 18 2 313 1 314 7 293 1 223 1 268 1 337 2 178 1 129 1 
226 1 205 1 23 11 321 6 185 3 341 3 208 1 276 2 76 1 188 1 260 2 240 1 9 1 87 3 308 1 263 1 248 7 313 1 17 3 18 2 314 4 293 1 223 1 268 1 337 2 129 1 178 1 
226 2 23 8 321 2 185 1 341 1 233 1 27 1 188 1 260 1 9 1 261 1 87 1 263 1 248 4 17 1 18 2 314 4 223 1 104 1 268 1 359 1 108 1 129 1 
226 1 205 1 23 12 321 2 185 1 341 1 208 1 276 2 76 1 188 2 260 2 240 2 9 1 87 1 308 1 263 1 248 6 17 1 18 2 314 6 223 1 268 1 337 2 129 1 178 1 
226 1 205 1 23 12 321 8 185 4 341 4 208 1 276 2 76 1 188 1 260 2 240 1 9 1 308 1 87 4 263 1 248 7 17 4 18 2 313 2 314 5 293 1 223 1 268 1 337 2 178 1 129 1 
226 2 205 1 23 12 321 8 185 4 341 4 208 1 276 2 76 2 98 1 188 1 260 2 240 1 9 1 308 1 87 4 263 1 248 7 17 4 18 4 313 2 314 5 223 1 268 1 337 2 178 1 129 1 
226 3 23 7 248 3 27 3 18 6 314 4 76 3 188 1 104 3 260 1 359 1 108 1 261 2 
226 1 205 1 23 12 321 8 185 4 341 4 208 1 276 2 76 1 98 1 188 1 260 2 240 1 9 1 308 1 87 4 263 1 248 7 17 4 18 2 313 2 314 5 223 1 268 1 337 2 178 1 129 1 
226 2 87 2 23 8 321 4 185 2 341 2 233 1 248 4 18 3 17 2 313 1 27 1 314 4 76 1 188 1 104 1 260 1 359 1 108 1 261 1 
226 2 23 6 233 1 248 3 277 1 27 1 18 2 314 3 188 1 104 1 260 1 359 1 108 1 261 1 
226 1 87 1 23 4 321 2 185 1 341 1 276 1 248 2 18 2 17 1 314 2 76 1 293 1 188 1 240 1 260 1 337 1 
226 1 23 7 145 1 248 3 276 1 18 2 314 4 76 1 188 1 223 1 240 1 260 1 268 2 337 1 9 1 
226 5 23 23 321 4 185 2 341 2 233 1 276 2 27 2 76 4 188 3 5 1 260 3 240 2 261 1 87 2 145 1 352 1 13 1 248 11 18 9 313 2 17 2 314 12 104 2 223 2 268 2 359 1 337 2 108 1 
23 1 268 1 314 1 
23 1 223 1 248 1 
226 2 87 1 23 6 321 2 185 1 341 1 354 1 276 1 248 3 17 1 18 3 314 3 76 1 293 1 188 1 260 1 240 1 337 1 
226 1 205 1 23 12 321 2 185 1 341 1 208 1 276 2 76 1 188 2 260 2 240 2 9 1 87 1 308 1 263 1 248 6 17 1 18 2 314 6 223 1 268 1 337 2 129 1 178 1 
226 1 23 6 248 3 27 1 18 2 314 3 76 1 188 1 104 1 260 1 359 1 
226 1 87 1 23 3 321 2 185 1 341 1 248 1 18 2 27 1 313 1 17 1 76 1 314 2 5 1 104 1 261 1 108 1 
226 3 87 1 263 1 23 10 321 2 185 1 341 1 248 5 17 1 27 2 18 5 76 2 314 5 188 2 221 1 104 2 260 2 359 1 
87 1 263 1 23 2 321 2 185 1 341 1 248 2 17 1 18 1 76 1 260 1 337 1 
226 1 87 1 263 1 23 4 321 2 185 1 341 1 276 1 248 2 18 2 17 1 314 2 76 1 188 1 240 1 260 1 337 1 
226 1 87 3 263 1 23 3 321 6 185 3 341 3 248 1 313 1 17 3 27 1 18 2 314 2 76 1 98 1 5 1 104 1 
226 7 23 34 321 10 185 5 113 1 341 5 233 1 343 1 276 3 27 3 76 5 98 1 188 5 5 1 260 5 240 3 261 1 9 1 87 5 263 1 145 1 248 16 313 2 17 5 18 12 314 18 293 1 198 1 104 3 223 3 268 4 359 2 337 3 108 1 
41 1 86 1 196 1 22 1 65 1 213 1 146 1 
86 1 300 1 22 1 146 1 2 1 41 1 196 1 65 1 213 1 6 1 34 1 215 1 
0 1 245 1 127 1 110 1 255 1 37 1 266 1 277 1 49 1 225 1 327 1 
0 1 109 1 310 1 22 2 245 1 110 1 146 2 266 1 37 1 60 1 290 1 259 1 327 1 41 1 196 1 127 1 200 1 225 1 
109 1 310 2 22 2 143 1 245 1 229 1 110 2 146 2 266 3 37 1 60 1 303 1 290 1 259 2 327 1 279 1 41 2 196 1 250 1 127 1 52 1 200 1 225 1 
109 1 310 2 22 2 143 1 245 2 229 1 110 2 146 2 266 3 37 1 60 1 303 1 290 1 259 2 327 2 211 1 279 1 41 2 196 1 250 1 127 2 161 1 52 1 225 1 
0 1 228 1 73 2 110 1 303 1 327 3 161 1 345 1 119 1 85 2 329 1 245 3 143 1 310 1 266 4 37 1 292 1 127 3 250 1 103 1 106 1 202 1 225 1 
0 1 329 1 310 1 143 1 245 3 228 1 73 2 110 1 37 1 266 4 303 1 326 1 292 1 327 3 250 1 127 3 161 1 103 1 345 1 106 1 85 2 225 1 
245 1 127 1 206 1 37 1 225 1 327 1 
0 1 245 1 310 1 110 1 266 1 37 2 344 1 327 1 80 1 127 1 305 1 295 1 225 1 
226 2 320 1 109 1 72 2 23 6 22 2 321 4 110 1 185 2 207 1 341 2 233 1 275 2 27 1 138 1 259 1 327 1 188 1 81 1 260 1 53 1 261 1 10 1 87 2 310 1 245 1 146 2 266 1 37 1 248 3 60 1 18 2 17 2 290 1 90 1 314 3 355 1 41 1 196 2 267 1 127 1 104 1 358 1 200 1 359 1 108 1 225 1 
0 1 228 1 182 1 73 3 274 1 256 1 326 1 327 1 4 1 160 1 50 2 345 1 82 2 117 1 214 2 244 1 85 3 329 1 245 1 11 1 312 1 287 1 266 2 292 2 127 1 103 1 106 1 96 2 
329 1 167 1 245 2 310 1 206 1 110 1 266 2 37 2 344 1 90 1 327 2 127 2 225 1 
0 1 245 4 110 1 255 1 37 1 266 1 90 1 49 1 327 4 127 4 161 1 54 1 225 1 
245 1 310 1 110 1 266 1 37 2 62 1 327 1 334 1 80 1 127 1 295 1 285 1 225 1 
318 1 78 1 0 1 245 1 127 1 37 1 342 1 201 1 225 1 327 1 
245 2 110 1 266 1 37 1 90 1 327 2 100 1 127 2 297 1 284 1 225 1 
0 1 143 1 245 4 110 2 255 1 266 3 37 2 49 1 90 1 327 5 127 5 149 1 54 1 284 1 179 1 225 2 
0 1 143 1 245 4 110 2 255 1 74 1 266 3 37 2 49 1 90 1 327 5 127 5 149 1 54 1 284 1 225 2 
0 1 109 1 310 1 22 2 245 1 110 1 146 2 266 1 37 1 60 1 290 1 259 1 327 1 211 1 41 1 196 1 127 1 225 1 
143 1 245 1 310 1 110 1 266 1 37 2 344 1 327 1 80 1 127 1 305 1 295 1 225 1 
349 1 196 1 251 1 152 1 347 1 
22 1 154 1 182 1 228 1 73 2 183 1 229 2 137 1 259 1 279 1 345 1 163 1 52 1 283 1 190 1 347 2 191 1 85 2 349 2 146 1 288 1 171 1 290 1 41 1 196 1 103 1 251 1 152 2 339 1 
349 1 22 1 146 1 234 1 139 1 41 1 251 1 29 1 152 1 
183 1 251 1 339 1 
249 1 277 1 324 1 258 1 
249 1 238 1 47 1 19 1 115 1 324 1 258 1 
144 1 115 1 307 1 
350 1 47 3 322 2 89 1 194 1 324 1 63 1 258 1 249 1 238 1 19 1 115 3 
249 1 238 1 47 2 19 1 115 2 217 1 176 1 324 1 258 1 
318 1 193 1 47 1 342 1 89 1 235 1 249 1 238 1 19 1 115 1 348 1 
249 1 238 1 47 1 19 1 115 1 89 1 258 1 
238 1 47 1 19 1 115 1 324 1 89 1 258 2 
249 1 238 2 47 2 19 2 24 1 130 1 115 2 232 1 89 1 258 1 
47 3 217 2 324 1 89 1 258 1 114 1 249 2 238 1 19 1 115 3 30 1 166 1 348 1 
318 1 193 1 47 2 217 1 342 2 324 1 89 1 258 1 249 1 78 1 238 1 19 1 115 2 46 1 107 1 
47 4 217 2 247 1 324 1 89 1 258 1 249 2 238 2 19 2 115 4 176 1 30 1 348 1 
249 1 238 1 47 1 19 1 115 1 324 1 89 1 258 1 
350 1 47 4 322 1 217 2 194 1 324 2 97 1 258 2 249 3 238 1 19 1 115 4 30 1 348 1 
71 1 47 2 217 1 89 1 324 1 195 1 291 1 258 1 249 1 238 1 19 1 115 2 
350 2 47 3 322 2 301 1 194 1 89 1 324 1 258 1 249 1 238 1 19 1 115 3 
249 2 68 1 169 1 336 2 
238 1 47 1 19 1 115 1 89 1 141 1 
249 1 238 1 47 2 19 1 115 2 217 1 166 1 324 1 89 1 258 1 
120 1 
249 1 238 1 47 1 19 1 115 1 324 1 89 1 258 1 
249 1 238 1 47 3 19 1 322 1 115 3 217 1 166 1 324 1 89 1 258 1 
249 1 30 1 97 1 348 1 
249 1 258 1 

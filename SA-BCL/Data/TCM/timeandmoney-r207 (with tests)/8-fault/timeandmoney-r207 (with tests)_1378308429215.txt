#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (30,42,155) (30,42,155) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (30,42,155) (30,42,155) 84 41 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (30,42,155) (30,42,155) 84 41 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (30,42,155) (30,42,155) 84 41 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (30,42,155) (30,42,155) 84 41 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (30,42,155) (30,42,155) 84 41 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (30,42,155) (30,42,155) 84 41 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (30,42,155) (30,42,155) 84 41 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (30,42,155) (30,42,155) 84 41 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (30,42,155) (30,42,155) 84 41 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (30,42,155) (30,42,155) 84 41 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (30,42,155) (30,42,155) 84 41 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (30,42,155) (30,42,155) 84 41 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 305 43 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5972 | <= -> !=
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
186 1 297 2 47 1 102 1 328 1 54 1 330 1 123 2 146 1 56 1 20 3 333 3 315 2 
297 2 47 1 320 1 130 1 24 1 97 1 249 2 231 1 327 1 328 3 54 1 330 2 56 4 333 9 186 1 34 1 102 1 351 2 353 1 339 1 70 1 123 5 146 6 295 2 20 9 229 1 270 2 315 2 
297 2 47 1 320 1 130 1 24 1 97 1 249 2 231 1 327 1 328 3 54 1 330 2 56 4 333 9 186 1 34 1 102 1 351 2 353 1 339 1 70 1 123 5 146 6 295 2 20 9 229 1 270 2 315 2 
297 2 47 1 320 1 130 1 24 1 97 1 249 2 231 1 327 1 328 4 54 1 330 2 56 5 333 10 186 1 34 1 102 1 351 2 353 1 339 1 70 1 123 6 146 7 295 2 20 10 229 1 270 2 315 2 
297 2 47 1 320 1 130 1 24 1 97 1 249 2 231 1 327 1 328 2 54 1 330 2 56 3 333 7 186 1 34 1 102 1 351 2 339 1 70 1 123 4 146 4 295 2 20 7 229 1 270 1 315 2 
186 1 297 1 47 1 34 1 249 1 351 1 353 1 327 1 328 1 54 1 146 3 123 3 295 1 56 2 20 4 333 4 270 2 315 1 
186 1 297 1 47 1 277 1 338 1 320 1 24 1 249 1 105 1 123 1 54 1 330 1 295 1 20 2 333 2 315 1 
297 2 47 1 249 1 327 1 328 3 54 1 330 1 56 4 333 9 186 1 118 1 34 1 102 1 351 1 339 1 353 1 146 7 123 5 295 1 20 9 229 1 270 2 315 2 73 1 
297 2 47 1 249 1 327 1 328 3 54 1 330 1 56 4 333 9 186 1 118 1 34 1 102 1 351 1 339 1 353 1 146 7 123 5 295 1 20 9 229 1 270 2 315 2 73 1 
155 1 223 1 322 1 132 1 324 1 13 1 49 1 26 1 309 1 122 1 217 1 44 1 148 1 63 1 
128 1 
335 1 155 2 230 1 11 1 223 1 128 1 232 1 63 2 
317 1 319 2 155 5 209 1 230 1 95 5 322 1 132 1 0 1 324 1 302 1 232 2 49 1 26 1 217 1 78 1 61 1 183 2 7 2 63 5 260 2 32 1 335 2 167 1 291 1 307 2 189 2 223 2 68 1 13 1 16 4 309 1 122 1 18 1 44 1 148 1 269 1 128 2 
335 1 53 1 128 1 
359 1 250 2 128 1 
26 2 176 1 122 2 148 2 322 2 324 1 13 2 49 2 
276 1 176 1 111 1 321 2 322 2 157 1 25 1 324 1 49 3 159 1 26 2 233 1 234 1 236 1 137 1 28 2 257 1 287 1 238 1 169 1 190 2 38 1 293 2 13 2 69 2 308 1 354 1 88 1 240 1 145 1 17 1 311 1 122 3 106 1 148 2 341 1 151 1 
26 1 122 1 217 1 44 1 148 1 322 1 132 1 324 1 13 1 49 1 
42 1 30 1 
335 1 265 1 155 2 322 1 13 1 49 1 26 1 294 1 122 1 42 1 356 1 44 1 148 1 128 1 63 2 
264 1 155 1 223 1 232 1 63 1 
335 1 172 1 155 2 230 1 223 1 128 1 232 1 63 2 
155 1 232 1 63 1 
263 1 176 2 33 1 322 2 13 1 49 2 26 1 122 2 148 1 
271 1 15 1 143 1 
153 1 276 1 176 1 169 1 111 1 321 1 38 1 69 1 49 1 308 1 233 1 17 1 122 1 236 1 28 1 341 1 
53 1 176 1 
276 1 169 1 111 1 321 1 350 1 322 1 38 1 69 1 49 2 308 1 26 1 15 1 233 1 17 1 90 1 122 2 236 1 148 1 28 1 341 1 
26 3 176 1 90 1 122 3 148 3 322 3 13 1 49 3 
26 1 122 1 44 1 148 1 322 1 132 1 49 1 
26 1 263 1 122 1 33 1 44 1 148 1 322 1 13 1 49 1 
276 1 176 1 155 1 111 1 321 1 322 3 157 1 25 1 324 1 49 4 26 3 233 1 234 1 236 1 137 1 28 1 257 1 287 1 63 1 238 1 265 1 169 1 33 1 190 1 350 1 38 1 293 2 13 2 69 1 308 1 354 1 88 1 294 1 145 1 17 1 310 1 42 1 122 4 90 1 355 1 356 1 44 1 148 3 341 1 
26 1 176 1 122 2 90 1 147 1 148 1 313 1 322 2 49 2 
265 1 33 1 155 1 350 1 322 3 13 1 49 3 26 3 294 1 90 2 122 3 42 1 216 1 355 1 356 1 44 1 148 3 128 1 63 1 
33 1 143 1 322 2 13 1 49 2 26 2 15 1 90 1 122 2 148 2 
276 1 176 1 169 1 111 1 321 1 38 1 69 1 49 1 308 1 233 1 17 1 122 1 236 1 28 1 341 1 
276 1 176 1 169 1 111 1 321 1 38 1 69 1 49 1 233 1 254 1 17 1 122 1 28 1 29 1 341 1 
271 2 109 1 48 1 96 1 157 1 25 1 235 1 181 1 137 2 257 1 7 1 183 1 238 1 289 1 266 1 190 4 143 2 293 2 340 1 354 1 88 1 15 2 311 2 127 1 
26 1 316 1 265 1 122 1 44 1 148 1 322 1 49 1 
176 1 188 1 33 1 350 1 322 5 13 1 49 5 26 4 90 2 122 5 147 1 148 4 313 1 62 1 
26 2 316 1 122 2 44 1 148 2 322 2 132 1 49 2 
152 1 285 1 119 1 
152 2 285 2 207 1 258 1 306 1 81 1 
152 1 285 1 
152 1 285 1 
207 1 81 1 
207 1 81 1 
207 1 81 1 
152 1 285 1 156 1 
152 1 285 1 156 1 
152 1 285 1 156 1 
342 1 152 1 285 1 
342 1 152 1 285 1 
342 1 152 1 285 1 
66 1 8 2 184 1 152 2 337 2 155 2 349 3 50 1 160 1 113 2 285 2 58 2 243 1 268 1 258 1 314 1 128 1 219 2 63 2 
152 1 345 1 176 1 155 1 23 1 322 2 49 2 26 2 113 1 285 1 219 1 63 1 8 1 184 1 288 1 337 1 349 1 119 1 195 1 122 2 124 1 148 2 92 1 174 1 
277 1 295 2 35 1 162 2 351 1 
295 1 249 1 351 1 
277 1 295 1 249 1 
277 1 295 3 162 1 35 1 351 2 245 1 
277 1 295 2 162 1 35 1 279 1 351 1 
46 1 319 1 155 5 23 1 75 1 95 2 230 1 250 3 252 1 232 1 235 1 77 2 5 1 114 1 183 1 7 1 63 5 335 1 307 1 266 1 189 1 223 4 103 1 195 1 16 3 124 1 19 2 269 1 21 2 359 1 203 1 128 2 
344 1 205 5 46 2 319 2 248 1 155 9 95 6 230 1 211 1 250 9 232 6 235 3 77 6 5 3 114 2 183 3 7 3 63 9 32 1 335 1 264 5 307 2 266 3 267 1 189 2 223 7 16 8 124 4 19 6 312 1 269 1 359 3 244 1 203 1 128 5 
46 1 319 1 155 3 95 2 250 4 252 1 235 1 77 2 114 1 5 1 183 1 63 3 7 1 32 1 335 1 307 1 266 1 189 1 223 2 103 1 16 3 124 1 19 2 21 1 359 2 128 3 
46 1 319 1 248 1 155 4 95 4 211 1 250 7 252 1 235 2 77 4 114 1 5 2 183 2 63 4 7 2 32 1 335 1 307 1 266 2 267 1 189 1 223 3 103 1 16 5 124 2 19 4 21 2 359 3 128 4 
214 1 
17 1 53 1 192 1 
17 1 177 1 
17 1 169 1 
17 3 169 1 37 1 192 2 341 1 82 1 
17 1 169 1 341 1 
17 1 334 1 
289 2 168 1 209 1 190 7 96 3 352 1 302 1 98 1 326 1 215 1 329 1 89 1 311 4 78 1 137 3 183 1 7 1 259 2 
204 1 154 1 209 2 96 10 302 1 25 1 98 1 326 1 215 2 329 1 235 3 304 1 78 2 218 3 137 15 5 3 257 1 259 3 7 4 183 4 238 1 289 5 290 4 168 5 142 1 266 3 222 1 190 31 191 1 224 1 293 2 354 1 311 16 89 2 
209 1 96 4 25 2 302 1 98 1 326 1 215 1 78 1 137 4 257 2 183 1 7 1 259 2 238 2 289 3 67 1 168 1 190 9 224 1 293 4 354 2 311 5 89 1 296 1 
289 2 168 1 209 1 190 7 96 3 302 1 98 1 326 1 215 1 329 1 89 1 311 4 78 1 137 3 183 1 7 1 259 2 
289 2 168 1 209 1 190 7 96 3 302 1 98 1 326 1 215 1 329 1 89 1 311 4 78 1 137 3 183 1 7 1 259 2 
297 1 298 1 276 1 169 1 278 2 111 1 321 1 210 1 323 2 213 2 69 1 144 1 281 1 233 1 17 1 198 1 330 2 227 1 20 1 28 1 80 1 333 1 315 1 
297 1 277 1 278 1 111 1 321 1 323 1 249 1 213 1 76 1 233 1 330 1 161 1 286 1 27 1 28 1 333 1 186 1 351 1 69 1 295 2 20 1 358 1 108 1 245 1 315 1 22 1 
297 1 47 1 277 1 278 1 111 1 321 1 323 1 249 1 213 1 233 1 54 1 330 1 161 1 286 1 27 1 28 1 333 2 140 1 186 1 351 1 69 1 123 1 146 1 295 2 20 2 358 1 108 1 245 1 315 1 22 1 
297 1 175 1 47 1 277 1 278 1 111 1 321 1 210 1 323 1 249 1 213 1 76 1 233 1 54 1 330 1 286 1 27 1 28 1 333 3 351 1 69 1 123 1 146 2 295 2 20 3 358 1 108 1 245 1 315 1 22 1 
175 1 47 1 277 1 278 1 111 1 321 1 323 1 213 1 76 1 249 1 233 1 54 1 330 1 27 1 28 1 333 2 351 1 69 1 123 1 146 2 295 2 20 2 358 1 108 1 245 1 
199 1 
276 2 298 1 319 1 155 2 111 1 321 2 95 1 230 1 232 2 233 1 180 1 79 1 28 2 114 1 80 1 30 1 63 2 84 1 307 1 169 1 189 1 69 2 16 1 41 1 17 1 42 1 226 1 228 1 269 1 93 1 
84 1 41 1 42 1 226 1 155 1 180 1 30 1 63 1 
84 1 41 1 42 1 226 1 155 1 180 1 30 1 63 1 
84 1 41 1 42 1 226 1 155 1 180 1 30 1 63 1 
84 1 41 1 42 1 226 1 155 2 180 1 230 1 11 1 30 1 232 1 63 2 
84 1 319 1 155 1 307 1 189 1 41 1 42 1 226 1 180 1 269 1 30 1 63 1 
84 1 41 1 42 1 226 1 155 1 180 1 30 1 63 1 
84 1 41 1 42 1 226 1 155 1 180 1 30 1 63 1 
84 1 41 1 42 1 226 1 155 1 180 1 30 1 63 1 
84 1 41 1 42 1 226 1 155 1 180 1 30 1 63 1 
84 1 41 1 42 1 226 1 155 1 180 1 30 1 63 1 
84 1 319 1 155 1 307 1 189 1 41 1 42 1 226 1 180 1 269 1 30 1 63 1 
276 2 298 1 111 2 321 7 178 1 322 1 76 1 157 2 25 2 49 1 26 1 159 2 233 2 163 1 28 8 137 1 257 2 80 1 6 1 64 1 140 1 262 1 238 2 169 2 190 2 69 8 293 4 14 1 340 1 354 2 88 2 71 1 240 1 145 1 17 3 122 1 90 1 311 1 148 1 
271 1 129 1 96 1 322 1 157 1 25 1 49 1 26 1 235 1 332 1 137 2 257 1 5 1 7 1 183 1 238 1 289 1 33 1 266 1 190 3 143 1 13 1 293 2 15 1 354 1 88 1 122 1 311 1 148 1 
271 1 176 2 209 1 96 2 157 1 25 1 302 1 98 1 326 1 53 1 78 1 137 3 257 1 7 1 183 1 259 1 238 1 289 2 190 6 143 1 293 2 340 1 15 1 354 1 88 1 311 3 
271 11 204 1 176 1 96 2 131 1 157 2 25 2 235 1 218 3 137 6 332 1 257 2 5 2 31 1 7 2 183 1 238 2 289 1 290 3 168 1 266 2 190 14 143 4 191 1 293 4 194 1 354 2 88 1 15 11 240 1 145 1 311 8 201 1 
153 1 276 1 176 1 111 1 321 1 322 1 157 1 25 1 49 2 26 1 233 1 55 1 236 1 28 1 332 1 137 1 257 1 238 1 169 1 190 2 292 1 350 1 143 1 38 1 69 1 293 2 308 1 88 1 354 1 240 1 145 1 17 1 122 2 90 1 311 1 148 1 107 1 341 1 
271 7 276 1 176 2 321 3 96 8 322 1 98 1 49 3 326 1 233 2 234 2 235 2 236 2 137 10 332 1 5 2 99 1 183 3 7 3 238 3 289 4 190 20 143 7 69 3 293 6 15 7 240 1 145 1 17 2 197 1 148 1 202 1 341 2 206 2 111 2 346 2 209 1 76 1 157 3 302 1 25 3 26 1 78 1 28 3 257 3 259 1 261 2 168 4 169 2 266 2 350 1 38 2 308 2 354 3 88 3 90 1 122 3 311 10 45 2 
271 1 238 1 168 1 48 1 266 1 190 2 96 1 143 1 157 1 25 1 293 2 340 1 15 1 88 1 354 1 311 2 257 1 7 1 
271 1 238 1 109 1 289 1 190 2 96 1 143 1 157 1 25 1 293 2 340 1 15 1 88 1 354 1 235 1 137 2 257 1 183 1 
271 2 96 2 157 1 25 1 235 1 137 2 5 1 257 1 7 1 183 1 238 1 289 1 168 1 266 1 190 4 143 2 293 2 340 1 354 1 88 1 15 2 311 2 
271 1 262 1 238 1 168 1 48 1 266 1 190 2 96 1 143 1 157 1 25 1 293 2 15 1 88 1 354 1 311 2 257 1 7 1 
271 1 262 1 238 1 109 1 289 1 190 2 96 1 143 1 157 1 25 1 293 2 15 1 88 1 354 1 235 1 137 2 257 1 183 1 
271 2 96 2 157 1 25 1 235 1 137 2 5 1 257 1 7 1 183 1 262 1 238 1 289 1 168 1 266 1 190 4 143 2 293 2 354 1 88 1 15 2 311 2 
271 2 238 1 289 1 168 1 266 1 190 4 96 2 143 2 157 1 25 1 293 2 15 2 88 1 354 1 235 1 311 2 137 2 257 1 5 1 183 1 7 1 
276 1 176 1 111 1 321 1 157 1 25 1 49 1 233 1 234 1 236 1 28 1 137 1 257 1 238 1 169 1 190 2 38 1 69 1 293 2 308 1 88 1 354 1 240 1 145 1 17 1 311 1 122 1 341 1 
276 1 176 1 111 1 321 1 157 1 25 1 49 1 233 1 254 1 28 1 137 1 29 1 257 1 238 1 169 1 190 2 38 1 69 1 293 2 88 1 354 1 240 1 145 1 17 1 311 1 122 1 341 1 246 1 
271 2 96 2 157 1 25 1 235 1 332 1 137 2 5 1 257 1 7 1 183 1 238 1 289 1 168 1 266 1 190 4 143 2 293 2 354 1 88 1 15 2 311 2 
271 2 111 1 321 1 96 2 157 1 25 1 49 1 233 1 235 1 234 1 236 1 137 2 28 1 257 1 5 1 183 1 7 1 140 1 238 1 289 1 168 1 169 1 266 1 190 4 143 2 38 1 69 1 293 2 308 1 15 2 88 1 354 1 17 1 311 2 122 1 45 1 341 1 
271 1 96 1 322 1 157 1 25 1 49 1 26 1 235 1 137 1 332 1 257 1 5 1 183 1 7 1 238 1 168 1 33 1 266 1 190 3 143 1 13 1 293 2 354 1 88 1 15 1 122 1 311 2 148 1 200 1 
272 1 343 1 204 1 96 2 251 1 25 2 158 1 235 2 218 1 137 7 60 1 257 2 5 2 7 2 183 2 238 2 289 1 290 2 168 1 266 2 190 13 121 1 191 1 293 4 354 2 241 1 173 1 311 6 296 1 
343 2 204 2 280 1 96 1 212 1 251 3 25 2 158 1 325 1 235 1 218 2 137 8 257 2 5 2 183 1 7 2 165 1 238 2 9 1 290 2 168 1 266 2 120 1 190 19 121 1 224 1 293 4 354 2 173 2 311 11 150 1 296 1 
343 1 204 1 280 1 96 2 251 1 25 2 158 1 235 1 218 1 137 5 60 1 257 2 5 1 7 1 183 1 238 2 289 1 290 2 168 1 266 1 190 9 121 1 191 1 293 4 354 2 173 1 311 4 296 1 
343 1 204 1 280 1 96 2 251 1 25 2 158 1 235 1 218 1 137 5 60 1 257 2 5 1 7 1 183 1 238 2 289 1 290 2 168 1 266 1 190 9 121 1 191 1 293 4 354 2 173 1 311 4 296 1 
343 1 204 2 209 1 280 1 96 13 212 1 302 1 251 3 25 3 158 1 98 1 325 1 326 1 235 6 78 1 218 4 137 23 257 3 5 6 259 1 7 7 183 7 165 1 238 3 289 7 9 1 290 4 168 6 266 6 120 1 190 47 121 1 224 2 191 2 293 6 194 2 354 3 173 1 311 24 150 1 296 1 
8 1 160 1 152 1 318 1 337 1 113 1 285 1 243 1 258 1 219 1 
119 1 92 1 
8 1 152 1 273 1 136 1 337 1 113 1 285 1 87 1 219 1 
184 1 8 1 152 1 337 1 155 1 349 2 50 1 160 1 113 1 285 1 58 1 243 1 268 1 258 1 314 1 128 1 63 1 219 1 
184 1 8 1 152 1 337 1 155 1 349 2 50 1 160 1 113 1 285 1 58 1 243 1 268 1 258 1 314 1 128 1 63 1 219 1 
184 1 8 1 152 1 337 1 155 1 349 2 50 1 160 1 113 1 285 1 58 1 243 1 268 1 258 1 314 1 128 1 63 1 219 1 
300 1 156 1 306 1 
300 1 156 1 306 1 
342 1 283 1 
342 1 283 1 306 1 
345 1 174 1 
152 1 345 1 176 1 299 1 155 1 23 1 322 2 49 2 26 2 113 1 285 1 58 1 63 1 219 1 8 1 288 1 337 1 349 1 119 1 223 1 195 1 122 2 124 1 268 1 92 1 148 2 174 1 
300 1 156 1 
342 1 283 1 306 1 
111 1 178 1 321 2 322 2 157 1 25 1 49 2 159 2 51 1 233 1 284 1 28 2 332 1 137 1 257 1 64 1 238 1 117 1 141 1 169 1 190 2 69 2 293 2 88 1 354 1 240 1 145 1 17 1 122 2 311 1 149 1 
276 1 298 1 169 1 278 1 111 1 321 1 69 1 1 1 144 1 233 1 17 1 28 1 125 1 80 1 
277 1 278 1 111 1 321 1 249 1 351 1 76 1 239 1 12 1 69 1 233 1 295 2 27 1 28 1 125 1 108 1 245 1 22 1 
140 1 277 1 278 1 111 1 321 2 249 1 351 1 76 1 239 1 12 1 69 2 233 1 295 2 27 1 28 2 125 1 108 1 245 1 22 1 
277 1 278 1 111 1 321 1 112 1 249 1 351 1 76 1 239 1 69 1 233 1 295 2 27 1 28 1 108 1 245 1 22 1 
331 1 
335 1 319 1 307 1 189 1 95 1 68 1 16 1 18 1 269 1 128 1 
346 1 266 2 95 5 250 10 16 5 235 2 19 5 77 5 5 2 359 5 128 5 7 2 183 2 
335 1 155 1 230 1 128 1 63 1 232 1 
276 2 298 1 319 2 155 3 111 1 321 3 95 2 230 2 232 4 135 1 233 1 305 1 79 2 28 3 114 1 80 1 63 3 32 1 169 1 307 2 189 2 69 3 225 1 16 1 17 1 43 1 228 1 269 1 93 1 
335 1 16 1 53 1 18 1 95 1 68 1 128 1 
335 1 319 1 155 1 307 1 230 1 189 1 95 1 86 1 250 1 133 1 232 1 39 1 16 1 269 1 359 1 128 2 63 1 
276 1 319 3 177 3 321 1 230 3 95 7 232 5 233 1 235 2 59 2 5 2 63 5 7 2 183 2 335 1 185 2 189 3 69 1 192 2 294 2 16 8 17 6 19 6 341 1 74 1 155 5 111 2 346 2 301 2 250 12 303 2 253 1 77 6 79 1 28 1 114 2 116 1 169 1 307 3 266 2 37 1 40 2 269 3 359 6 128 7 
204 1 319 1 95 4 250 6 212 1 325 1 235 2 77 5 218 1 5 2 7 2 183 2 165 1 290 1 307 1 266 2 120 1 189 1 16 6 19 5 269 1 359 3 150 1 128 3 
317 1 319 1 155 1 209 1 95 2 322 1 132 1 0 1 302 1 324 1 49 1 26 1 217 1 78 1 139 1 63 1 7 2 183 1 260 2 307 1 189 1 13 1 16 2 309 1 122 1 44 1 148 1 269 1 
276 1 176 1 111 1 321 1 322 2 157 1 25 1 324 1 49 3 26 2 233 1 234 1 236 1 137 1 28 1 257 1 287 1 238 1 169 1 190 1 38 1 293 2 69 1 13 2 308 1 354 1 88 1 145 1 17 1 122 3 148 2 341 1 
335 1 319 1 307 1 95 1 189 1 250 2 16 1 77 1 79 1 269 1 114 1 359 1 128 2 
8 1 160 1 345 1 357 1 219 1 
8 1 4 1 219 1 
8 1 4 1 219 1 
8 1 4 1 219 1 
8 1 10 1 219 1 
8 1 10 1 219 1 
8 1 10 1 219 1 
8 1 219 1 
152 1 285 1 
238 1 289 3 168 2 209 2 190 10 96 5 0 1 25 1 302 1 293 2 354 1 311 5 78 2 137 5 257 1 296 1 7 2 183 2 
238 1 168 1 266 1 190 2 96 1 25 1 293 2 354 1 311 2 257 1 296 1 7 1 
238 1 289 1 168 1 266 1 190 4 96 2 25 1 293 2 354 1 235 1 311 2 137 2 257 1 5 1 296 1 183 1 7 1 
238 3 289 1 168 1 190 3 209 1 96 2 224 1 25 3 293 6 354 3 311 1 91 1 78 1 137 2 60 1 257 3 296 1 
204 1 209 3 96 12 302 2 25 5 98 1 326 1 304 1 235 3 78 3 218 3 137 18 60 1 257 5 5 3 259 1 7 5 183 5 100 1 238 5 289 7 290 4 168 5 222 1 142 1 266 3 190 34 224 2 191 1 293 10 354 5 311 16 91 1 296 1 
204 1 209 1 96 2 212 1 25 1 302 1 98 1 326 1 218 1 78 1 137 4 257 1 259 1 183 1 7 1 238 1 289 2 290 1 190 8 293 2 354 1 311 4 296 1 
204 1 209 1 96 3 212 1 302 1 25 2 98 1 326 1 78 1 218 1 137 5 257 2 5 1 259 1 183 1 7 2 100 1 238 2 289 2 290 2 168 1 266 1 190 11 191 1 293 4 354 2 311 6 296 1 
204 1 96 1 212 1 25 2 325 1 235 2 218 1 137 6 257 2 5 2 7 2 183 2 165 1 100 1 238 2 290 1 168 1 266 2 120 1 190 12 293 4 354 2 311 6 150 1 296 1 
204 1 96 3 212 1 25 4 325 1 235 1 218 1 137 5 257 4 5 2 7 2 183 1 165 1 100 1 238 4 289 2 290 1 168 1 266 2 120 1 190 12 224 2 293 8 354 4 311 7 150 1 296 1 
204 1 209 1 96 2 212 1 25 1 302 1 98 1 326 1 218 1 78 1 137 4 257 1 259 1 183 1 7 1 238 1 289 2 290 1 190 8 293 2 354 1 311 4 296 1 
204 1 96 3 212 1 25 2 325 1 235 2 218 1 137 7 257 2 5 2 7 2 183 2 165 1 238 2 289 2 290 1 168 1 266 2 120 1 190 13 224 1 293 4 354 2 311 6 150 1 296 1 
204 1 96 1 212 1 25 3 325 1 235 1 218 1 137 4 257 3 5 2 7 2 183 1 165 1 100 1 238 3 290 1 168 1 266 2 120 1 190 11 224 1 293 6 354 3 311 7 150 1 296 1 
204 1 96 3 212 1 25 3 325 1 235 1 218 1 137 4 257 3 60 1 5 2 7 2 183 1 165 1 238 3 289 1 290 1 168 2 266 2 120 1 190 11 224 1 293 6 354 3 311 7 150 1 296 1 
289 3 168 3 190 7 209 3 96 6 302 1 98 2 326 1 311 3 78 3 137 4 183 1 7 1 
204 1 96 1 212 1 25 3 325 1 235 1 218 1 137 4 257 3 60 1 5 2 7 2 183 1 165 1 238 3 290 1 168 1 266 2 120 1 190 11 224 1 293 6 354 3 311 7 150 1 296 1 
238 2 289 2 168 1 190 8 209 1 96 3 302 1 25 2 224 1 293 4 98 1 326 1 354 2 311 4 78 1 137 4 257 2 259 1 183 1 7 1 
289 2 209 1 190 6 96 2 302 1 98 1 326 1 53 1 311 3 78 1 137 3 259 1 7 1 183 1 
100 1 238 1 289 1 168 1 266 1 190 4 96 2 25 1 293 2 354 1 235 1 311 2 137 2 257 1 5 1 183 1 7 1 
289 1 204 1 290 2 168 1 266 1 190 7 96 2 191 1 235 1 311 3 218 1 137 4 5 1 183 1 7 1 
209 2 96 9 131 1 302 1 25 2 98 1 326 1 235 2 78 2 218 2 137 12 5 2 257 2 259 1 7 3 183 3 238 2 289 5 290 2 168 4 266 2 190 23 191 1 224 2 293 4 194 1 354 2 311 11 91 1 
290 1 190 1 137 1 
311 1 218 1 190 1 
100 1 238 1 289 2 168 1 346 1 266 1 190 6 96 3 25 1 293 2 354 1 311 3 235 1 137 3 257 1 5 1 7 1 183 1 
204 1 96 3 212 1 25 2 325 1 235 2 218 1 137 7 257 2 5 2 7 2 183 2 165 1 238 2 289 2 290 1 168 1 266 2 120 1 190 13 224 1 293 4 354 2 311 6 150 1 296 1 
289 1 168 1 190 6 209 1 96 2 302 1 311 3 78 1 137 3 7 1 183 1 
238 1 289 1 168 1 209 1 190 3 96 2 224 1 25 1 293 2 98 1 326 1 354 1 311 1 78 1 91 1 137 2 257 1 
176 1 122 1 147 1 313 1 322 1 126 1 49 1 
110 1 176 1 94 1 322 1 49 1 52 1 122 1 147 1 313 1 126 1 182 1 164 1 
140 1 276 1 298 1 169 1 111 1 321 4 69 4 233 1 196 1 17 1 255 1 28 4 80 1 
275 1 187 1 221 1 169 1 111 2 321 2 69 2 104 1 135 1 233 1 17 1 28 2 202 1 341 1 
233 1 276 1 277 1 295 1 111 1 321 1 28 1 108 1 249 1 69 1 
140 1 233 1 17 1 284 1 169 1 111 1 321 2 28 2 76 1 64 1 69 2 
140 1 298 1 276 1 169 2 111 2 321 4 69 5 14 1 135 1 233 2 71 1 17 3 255 1 28 5 80 1 64 1 
140 1 83 1 298 1 276 1 169 2 111 2 321 4 69 5 135 1 233 2 71 1 17 3 255 1 28 5 80 1 64 1 
233 1 17 1 298 1 53 1 276 1 169 1 111 1 321 1 28 1 80 1 69 1 
276 1 176 1 169 1 111 1 321 1 322 1 38 1 69 1 49 2 26 1 308 1 233 1 17 1 90 1 122 2 148 1 28 1 341 1 
265 1 176 1 169 2 111 1 321 1 322 2 38 1 69 1 49 2 26 2 308 1 3 1 135 1 233 1 17 3 90 1 122 2 356 1 44 1 148 1 28 1 334 1 341 2 
176 1 111 1 321 2 322 2 49 2 26 2 233 1 135 1 3 1 28 2 29 1 334 1 265 1 169 2 38 1 69 2 196 1 17 3 122 2 90 1 356 1 44 1 148 1 341 2 
276 1 177 1 155 2 111 1 321 3 232 1 2 1 233 1 135 1 3 1 57 1 28 3 334 1 63 2 335 1 169 1 192 1 69 3 294 1 196 1 17 4 128 1 341 1 
335 1 185 1 276 1 169 1 155 2 177 1 111 1 321 3 69 3 232 1 192 1 294 1 3 1 135 1 233 1 196 1 17 4 28 3 334 1 128 1 341 1 63 2 
233 1 111 1 321 1 28 1 69 1 6 1 
140 1 336 1 275 1 276 2 169 2 111 3 321 6 37 1 76 1 69 7 104 1 14 1 159 1 71 1 233 2 17 3 163 1 28 7 6 1 64 1 341 1 
271 1 176 2 111 1 321 1 209 1 96 2 322 1 157 2 302 1 25 2 98 1 49 2 326 1 26 1 233 1 234 1 78 1 236 1 137 3 332 1 28 1 257 2 259 1 183 1 7 1 261 1 140 1 238 2 289 2 141 1 169 1 190 6 143 1 38 1 293 4 69 1 308 1 15 1 88 2 354 2 17 1 311 3 122 2 90 1 148 1 45 1 341 1 
276 1 319 2 155 3 177 1 321 1 95 1 230 1 232 2 303 1 59 1 28 1 63 3 335 1 185 1 307 2 189 2 223 1 68 1 69 1 192 1 294 1 16 1 225 1 40 1 17 2 18 1 269 2 128 1 
140 1 169 1 111 2 321 2 37 1 192 1 69 2 233 1 253 1 17 2 28 2 6 1 341 1 
276 1 176 1 169 1 111 1 321 1 322 1 38 1 69 1 49 2 26 1 233 1 17 1 90 1 122 2 148 1 28 1 29 1 341 1 
336 1 275 1 169 1 111 2 321 1 37 1 69 1 104 1 135 1 233 1 17 1 28 1 341 1 
176 1 115 1 170 1 171 1 220 1 
335 1 166 1 274 1 265 1 176 1 155 2 36 1 223 1 170 1 171 2 294 1 42 1 356 1 355 1 44 1 115 2 128 1 63 2 220 2 
51 1 117 1 122 1 149 1 115 1 322 1 170 1 171 1 49 1 
274 1 36 1 170 1 
297 1 186 1 123 1 47 1 54 1 20 1 333 1 315 1 
85 1 297 1 47 2 320 1 208 1 193 1 328 1 54 2 146 2 123 3 56 1 20 4 333 4 315 1 
186 1 297 1 47 1 134 1 123 1 146 1 54 1 20 2 256 1 333 2 315 1 73 1 
186 1 297 1 85 2 47 1 208 1 320 2 282 1 123 1 54 1 20 3 333 3 315 1 
65 1 123 2 242 2 101 1 
297 1 186 1 72 1 20 1 333 1 315 1 
297 1 186 1 123 1 47 1 54 1 146 1 20 2 229 1 333 2 315 1 
348 1 
297 1 186 1 123 1 47 1 54 1 20 1 333 1 315 1 
53 1 123 1 47 1 54 1 
297 1 123 1 47 1 54 1 20 1 333 1 315 1 
330 1 20 1 323 1 
186 1 297 1 85 1 47 1 208 1 320 2 123 1 54 1 237 1 20 3 333 3 315 1 
297 1 123 1 47 1 54 1 146 1 20 2 333 2 270 1 315 1 
327 1 297 1 186 1 123 1 295 1 56 1 20 1 333 1 249 1 351 1 315 1 
297 1 186 1 123 1 47 1 20 1 333 1 315 1 
297 1 186 1 47 2 54 1 20 1 333 1 315 1 
247 1 186 1 297 2 47 1 179 1 123 1 20 2 138 1 333 2 315 2 
186 1 297 1 47 1 339 1 328 1 54 1 146 2 123 2 56 1 20 3 333 3 229 1 315 1 
186 1 297 1 47 1 277 1 351 1 249 1 123 1 54 1 146 1 295 2 20 2 333 2 347 1 245 1 315 1 
186 1 297 2 47 1 353 1 328 1 54 1 146 2 123 2 56 1 20 4 333 4 270 1 315 2 
186 1 297 1 47 1 320 1 146 1 54 1 123 1 20 3 333 3 229 1 315 1 
328 1 123 1 56 1 193 1 
123 1 47 1 

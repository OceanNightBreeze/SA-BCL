#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 237 84 102 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 237 84 102 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 237 84 102 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 237 84 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 157 109 8 19 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 269 1 136 1 112 2 87 1 141 3 239 1 172 5 88 2 142 1 221 2 222 4 244 9 300 2 318 1 64 9 95 1 303 2 345 2 322 1 305 1 121 6 122 1 12 1 259 1 127 2 234 1 310 1 
1 1 269 1 136 1 112 2 87 1 141 3 239 1 172 5 88 2 142 1 221 2 222 4 244 9 300 2 318 1 64 9 95 1 303 2 345 2 322 1 305 1 121 6 122 1 12 1 259 1 127 2 234 1 310 1 
1 1 269 1 136 1 112 2 87 1 141 4 239 1 172 6 88 2 142 1 221 2 222 5 244 10 300 2 318 1 64 10 95 1 303 2 345 2 322 1 305 1 121 7 122 1 12 1 259 1 127 2 234 1 310 1 
1 1 136 1 112 2 87 1 141 2 239 1 172 4 88 2 142 1 221 2 222 3 244 7 300 2 318 1 64 7 95 1 303 2 345 2 322 1 305 1 121 4 122 1 12 1 259 1 127 1 234 1 310 1 
1 1 64 4 345 1 303 1 269 1 121 3 112 1 141 1 12 1 172 3 88 1 221 1 222 2 127 2 244 4 318 1 234 1 310 1 
133 1 64 2 28 1 303 1 345 1 136 1 172 1 12 1 239 1 88 1 221 1 244 2 318 1 300 1 310 1 163 1 
64 3 121 1 87 1 141 1 12 1 172 2 88 2 221 2 222 1 244 3 318 1 300 1 310 1 
1 1 269 1 355 1 112 1 87 1 141 3 172 5 88 2 222 4 221 2 244 9 300 1 318 1 64 9 303 1 345 1 305 1 121 7 122 1 12 1 127 2 131 1 234 1 310 1 
1 1 269 1 355 1 112 1 87 1 141 3 172 5 88 2 222 4 221 2 244 9 300 1 318 1 64 9 303 1 345 1 305 1 121 7 122 1 12 1 127 2 131 1 234 1 310 1 
39 1 193 1 147 1 
125 2 193 1 339 1 
228 2 11 1 173 2 69 2 210 2 211 2 309 1 368 2 
238 1 331 1 85 1 109 2 86 1 187 1 189 1 173 2 38 1 241 1 295 2 8 1 26 1 337 1 249 1 254 2 65 1 46 2 362 1 256 1 49 1 228 2 11 1 157 2 205 1 206 1 69 2 261 1 210 3 264 1 327 1 82 1 17 1 211 3 309 1 368 2 212 1 
228 1 11 1 173 1 69 1 129 1 210 1 203 1 101 1 211 1 368 1 
132 1 56 1 4 1 277 1 364 1 173 1 89 1 210 1 232 1 176 1 193 1 211 1 101 1 147 1 
56 1 4 2 277 1 364 2 228 1 69 1 173 1 210 1 232 1 176 1 193 1 211 1 101 1 147 1 368 1 
73 1 4 1 188 1 364 1 279 1 
4 2 216 1 188 1 173 1 193 1 147 1 203 1 364 2 279 1 11 1 228 1 69 1 32 1 210 1 129 1 160 1 211 1 101 1 368 1 
4 1 364 1 279 1 
4 1 216 1 188 1 203 1 364 1 11 1 228 1 69 1 173 1 129 1 210 1 101 1 211 1 368 1 
193 1 
4 2 216 1 188 1 173 1 193 1 147 1 202 1 203 1 364 2 279 1 11 1 228 1 69 1 32 1 210 1 129 1 211 1 101 1 368 1 
36 1 215 2 4 5 216 1 167 1 188 2 171 4 173 1 143 1 144 1 25 1 94 1 193 2 148 2 147 2 274 1 200 5 153 2 203 1 364 5 279 2 228 1 11 1 182 1 69 1 99 2 72 1 183 2 325 1 32 1 129 1 210 1 52 1 233 2 101 1 211 1 368 1 330 1 
39 1 309 1 
228 1 69 1 173 2 120 1 210 2 211 2 309 2 368 1 68 1 
62 1 9 1 308 1 
238 1 331 1 46 1 85 1 119 1 109 1 362 1 157 1 189 1 8 1 210 1 211 1 26 1 309 1 337 1 249 1 
238 1 331 1 46 1 85 1 109 1 362 1 189 1 228 1 157 1 173 1 7 1 74 1 308 1 8 1 210 2 26 1 211 2 337 1 368 1 249 1 
198 1 120 1 228 4 173 5 69 1 89 1 7 1 74 2 190 1 92 1 210 5 211 5 368 4 309 1 
280 1 228 2 173 2 129 1 210 2 101 1 211 2 368 2 
228 3 69 1 173 3 74 1 210 3 211 3 309 1 368 3 
228 1 173 1 129 1 210 1 101 1 211 1 368 1 
228 1 173 1 69 1 210 1 120 1 101 1 211 1 68 1 368 1 
238 1 331 1 56 1 85 1 4 1 109 1 86 1 187 1 189 1 173 3 38 1 241 1 7 1 295 1 8 1 176 1 26 1 337 1 249 1 254 2 65 1 46 1 120 1 362 1 258 1 49 1 226 1 277 1 364 1 205 1 228 3 11 1 157 1 206 1 69 2 74 1 210 4 232 1 264 1 211 4 101 1 309 1 368 3 212 1 
228 1 173 2 89 1 74 1 92 1 210 2 211 2 309 1 368 1 
56 1 120 1 4 1 226 1 364 1 277 1 228 3 69 1 173 3 7 1 74 2 210 3 232 1 176 1 193 1 101 1 211 3 185 1 368 3 
62 1 120 1 228 2 69 1 173 2 74 1 308 1 210 2 211 2 368 2 
238 1 331 1 46 1 85 1 109 1 362 1 157 1 189 1 8 1 210 1 211 1 26 1 309 1 337 1 249 1 
331 1 46 1 85 1 109 1 362 1 354 1 157 1 8 1 210 1 16 1 211 1 26 1 309 1 337 1 249 1 
35 1 215 1 187 1 293 1 241 1 38 2 295 4 313 1 315 1 245 1 62 2 9 2 254 2 65 1 49 1 31 1 206 1 99 1 126 1 281 1 261 2 308 2 264 1 329 1 
228 1 280 1 173 1 232 1 210 1 101 1 211 1 368 1 
174 1 53 1 
174 1 53 1 
58 1 312 1 
58 1 312 1 
58 1 312 1 
174 1 299 1 53 1 
174 1 299 1 53 1 
174 2 58 1 312 1 21 1 5 1 53 2 
174 1 350 1 53 1 
174 1 299 1 53 1 
174 1 257 1 53 1 
174 1 257 1 53 1 
174 1 257 1 53 1 
105 1 4 1 139 1 168 1 170 1 173 2 174 1 302 1 45 1 97 1 364 1 124 1 228 2 71 1 282 1 350 1 159 1 78 1 210 2 211 2 309 1 368 2 53 1 83 1 
311 1 103 1 105 2 45 1 4 2 21 1 364 2 170 2 174 2 158 1 282 2 262 1 159 3 128 1 360 1 193 1 83 2 53 2 250 2 
345 1 303 1 112 1 
133 1 345 1 303 1 
352 1 133 1 253 1 303 3 201 1 112 2 
133 1 286 1 253 1 303 2 201 1 112 1 
133 1 253 2 303 2 201 1 112 1 
35 1 215 1 4 5 188 4 168 1 139 1 171 3 219 2 144 1 193 2 148 1 147 1 196 1 339 1 341 1 200 2 152 1 255 2 67 1 364 5 279 1 123 1 125 3 31 1 99 1 71 1 183 1 260 2 307 1 32 1 233 1 235 1 
35 3 215 3 4 9 188 7 139 4 240 5 171 8 219 6 359 1 93 1 144 1 193 5 195 1 147 1 148 2 274 1 339 3 341 2 200 6 152 2 255 6 67 1 225 1 364 9 279 6 125 9 31 3 99 3 283 1 73 5 183 2 32 1 233 2 235 3 266 1 
35 1 215 1 4 3 188 2 139 1 171 3 219 2 193 3 147 1 148 1 339 2 274 1 341 1 200 2 152 1 255 2 364 3 123 1 31 1 125 4 99 1 183 1 260 1 307 1 233 1 235 1 
35 2 215 2 4 4 188 3 139 2 171 5 219 4 359 1 193 4 147 1 195 1 148 1 339 3 274 1 341 1 200 4 152 1 255 4 364 4 123 1 125 7 31 2 99 2 283 1 183 1 260 2 307 1 233 1 235 2 
37 1 39 1 337 1 
207 1 337 1 
291 1 
362 1 26 1 337 1 
162 1 337 1 
26 1 337 1 
37 2 107 1 362 1 26 1 50 1 337 3 
149 1 177 1 179 1 215 1 57 1 38 3 99 1 126 3 72 1 295 7 313 2 296 1 261 4 231 1 25 1 42 2 330 1 
149 1 177 1 179 1 215 1 57 1 38 3 99 1 126 3 72 1 295 7 313 2 296 1 261 4 231 1 25 1 42 2 330 1 
149 1 177 1 179 1 215 1 57 1 271 1 38 3 99 1 126 3 72 1 295 7 313 2 296 1 261 4 231 1 25 1 42 2 330 1 
268 1 35 3 215 4 57 1 114 1 241 1 38 15 295 31 24 1 243 1 296 2 313 5 25 2 42 3 149 2 177 1 179 5 254 2 65 1 346 1 31 3 206 1 126 10 99 4 72 1 349 3 229 1 77 4 261 16 231 1 264 1 161 1 330 2 235 3 
215 1 241 2 38 4 295 9 336 1 296 1 313 3 25 1 42 2 149 1 177 1 179 1 254 4 65 2 363 1 206 2 99 1 126 4 72 1 229 1 261 5 231 1 264 2 330 1 
267 1 133 1 352 1 85 1 186 1 109 1 289 1 112 1 172 1 88 1 221 1 297 1 244 2 273 1 318 1 300 1 249 1 361 1 64 2 345 1 46 1 303 2 347 1 180 1 121 1 12 1 157 1 76 1 208 1 310 1 
352 1 164 1 133 1 85 1 186 1 109 1 112 1 172 1 88 1 221 1 297 1 244 3 273 1 300 1 249 1 361 1 44 1 64 3 345 1 46 1 303 2 347 1 180 1 121 2 12 1 157 1 76 1 208 1 80 1 310 1 
164 1 133 1 352 1 85 1 109 1 112 1 172 1 297 1 244 2 273 1 300 1 249 1 361 1 64 2 46 1 303 2 345 1 347 1 180 1 121 2 12 1 157 1 208 1 80 1 310 1 
2 1 55 1 85 1 109 1 88 1 221 1 8 1 244 1 300 2 26 1 247 1 337 1 249 1 361 2 44 1 27 1 342 1 64 1 46 1 347 2 180 2 10 1 157 1 
164 1 133 1 352 1 85 1 186 1 109 1 289 1 112 1 88 1 221 1 297 1 244 1 273 1 318 1 300 1 249 1 361 1 64 1 345 1 46 1 303 2 347 1 180 1 157 1 76 1 208 1 
166 1 
213 1 19 1 85 2 109 2 4 2 171 1 91 1 117 1 8 2 144 1 26 2 337 2 148 1 249 3 199 1 341 1 342 1 200 1 46 2 362 1 10 1 364 2 279 2 98 1 157 2 183 1 32 1 51 1 233 1 
132 1 0 1 54 1 56 1 4 3 173 1 89 1 176 1 145 2 316 1 155 1 202 1 364 3 277 1 204 1 279 2 70 1 32 1 210 1 232 1 211 1 101 1 
132 1 0 1 54 1 56 1 4 3 155 1 202 1 364 3 277 1 279 1 348 1 173 1 70 1 89 1 32 1 232 1 210 1 316 1 145 3 176 1 193 1 101 1 211 1 147 1 
132 1 0 1 54 1 56 1 4 3 173 1 89 1 176 1 145 3 316 1 251 1 155 1 202 1 277 1 364 3 204 1 279 2 348 1 70 1 32 1 210 1 232 1 211 1 101 1 
132 1 285 2 0 1 4 5 290 1 140 1 332 1 89 1 144 1 145 4 191 2 192 1 193 1 147 1 148 1 339 2 197 1 200 1 251 4 155 1 202 1 203 1 204 4 11 1 348 2 210 2 101 2 211 2 54 1 56 1 106 2 20 1 216 1 169 2 171 1 173 2 316 1 176 1 61 1 277 1 364 5 279 7 228 1 69 1 70 1 183 1 32 3 129 1 232 1 233 1 368 1 
132 1 285 2 0 1 4 4 140 1 89 1 144 1 145 4 191 2 192 1 193 1 148 1 147 1 339 2 200 1 251 2 155 1 203 1 204 2 11 1 348 2 210 2 101 2 211 2 54 1 56 1 106 2 216 1 169 2 171 1 173 2 316 1 176 1 277 1 364 4 279 4 228 1 125 2 69 1 70 1 183 1 32 2 129 1 232 1 233 1 328 1 368 1 
132 1 285 2 0 1 4 4 140 1 332 1 89 1 144 1 145 4 191 2 192 1 193 1 148 1 147 1 339 2 197 1 200 1 251 2 155 1 203 1 204 2 11 1 348 2 210 2 101 2 211 2 54 1 56 1 106 2 20 1 216 1 169 2 171 1 173 2 316 1 176 1 364 4 277 1 279 4 228 1 69 1 70 1 183 1 32 2 129 1 232 1 233 1 368 1 
132 1 285 2 0 1 4 4 140 1 332 1 89 1 144 1 145 4 191 2 192 1 193 1 148 1 147 1 339 2 197 1 200 1 251 2 155 1 203 1 204 2 11 1 348 2 210 2 101 2 211 2 54 1 56 1 106 2 20 1 216 1 169 2 171 1 173 2 316 1 176 1 364 4 277 1 279 4 228 1 69 1 70 1 183 1 32 2 129 1 232 1 233 1 368 1 
132 1 285 2 0 1 4 4 332 1 89 1 40 2 144 1 145 4 191 2 192 1 193 1 148 1 147 1 200 1 251 2 151 1 96 1 155 1 203 1 204 2 11 1 348 2 263 1 210 2 101 2 211 2 54 1 56 1 216 1 171 1 173 2 316 1 176 1 66 2 364 4 277 1 279 4 228 1 125 2 69 1 70 1 183 1 32 2 129 1 232 1 233 1 368 1 
132 1 285 2 0 1 4 4 290 1 140 1 332 1 89 1 144 1 145 5 191 2 192 1 193 1 148 1 147 1 339 2 197 1 200 1 251 3 155 1 203 1 204 3 11 1 348 3 210 2 101 2 211 2 54 1 56 1 106 2 20 1 216 1 169 2 171 1 173 2 316 1 176 1 364 4 277 1 279 5 228 1 69 1 70 1 183 1 32 2 129 1 232 1 233 1 368 1 
132 1 285 2 0 1 4 4 290 1 140 1 332 1 89 1 144 1 145 5 191 2 192 1 193 1 148 1 147 1 339 2 197 1 200 1 251 3 155 1 203 1 204 3 11 1 348 3 210 2 101 2 211 2 54 1 56 1 106 2 20 1 216 1 169 2 171 1 173 2 316 1 176 1 364 4 277 1 279 5 228 1 69 1 70 1 183 1 32 2 129 1 232 1 233 1 368 1 
132 1 285 2 0 1 4 3 89 1 40 2 144 1 145 3 191 2 192 1 193 1 148 1 147 1 200 1 251 1 155 1 203 1 204 1 11 1 348 1 263 1 210 2 101 2 211 2 54 1 56 1 216 1 171 1 173 2 316 1 176 1 66 1 277 1 364 3 279 2 228 1 125 2 69 1 70 1 183 1 32 1 129 1 232 1 233 1 328 1 368 1 
62 1 177 1 9 1 65 1 254 2 215 1 187 1 49 1 206 1 38 3 99 1 126 2 241 1 39 1 72 1 295 6 313 2 261 3 308 1 231 1 264 1 25 1 42 1 309 2 329 1 330 1 
35 1 215 2 86 1 270 1 187 1 111 1 38 6 241 2 295 14 24 1 313 1 115 1 194 1 62 4 179 1 9 11 254 4 65 2 49 2 31 2 206 2 126 2 99 1 349 3 284 1 77 3 261 8 308 11 264 2 161 1 82 1 309 1 235 2 
238 1 331 1 85 1 109 1 86 1 187 1 111 1 189 1 173 1 7 1 241 1 38 1 272 1 295 2 8 1 26 1 43 1 337 1 249 1 62 1 340 1 46 1 65 1 254 2 119 1 362 1 49 1 157 1 228 1 206 1 74 1 261 1 210 2 264 1 82 1 211 2 309 1 368 1 
238 2 35 2 331 2 85 2 137 1 86 1 187 3 189 2 38 10 241 3 7 1 335 2 295 20 8 1 42 1 337 2 249 2 9 7 46 3 254 6 156 1 49 3 157 3 205 2 13 2 206 3 99 3 261 10 308 7 210 3 264 3 211 3 309 2 164 1 215 3 109 3 111 1 173 1 59 2 313 4 25 1 26 2 62 7 63 1 177 1 179 4 65 3 362 2 278 2 228 1 31 2 126 8 72 1 74 1 231 1 82 1 330 1 368 1 235 2 
267 1 164 1 3 1 85 2 109 7 86 1 187 2 6 1 173 1 241 2 38 1 295 2 314 1 8 2 301 1 26 2 118 1 337 3 249 2 321 1 342 1 46 8 254 4 65 2 10 1 276 1 49 2 228 1 157 8 206 2 74 1 261 1 210 1 264 2 82 1 211 1 17 2 329 1 368 1 
35 1 215 1 187 1 111 1 173 1 241 1 38 2 295 3 313 1 248 1 62 1 9 1 254 2 65 1 120 1 49 1 228 1 31 1 69 1 206 1 126 1 99 1 261 1 308 1 210 1 264 1 211 1 368 1 235 1 
62 1 179 1 9 1 65 1 254 2 215 1 187 1 49 1 31 1 206 1 126 1 241 1 295 2 261 2 308 1 264 1 245 1 329 1 
62 1 35 1 9 1 65 1 254 2 187 1 49 1 206 1 126 1 241 1 99 1 38 2 281 1 295 2 313 1 308 1 264 1 329 1 
62 2 35 1 179 1 9 2 65 1 254 2 215 1 187 1 49 1 31 1 206 1 38 2 99 1 126 2 241 1 295 4 313 1 261 2 308 2 264 1 329 1 235 1 
62 1 179 1 9 1 65 1 254 2 215 1 187 1 49 1 6 1 31 1 206 1 126 1 241 1 295 2 261 2 308 1 264 1 245 1 
62 1 35 1 9 1 65 1 254 2 187 1 49 1 6 1 206 1 126 1 241 1 99 1 38 2 281 1 295 2 313 1 308 1 264 1 
62 2 35 1 179 1 9 2 65 1 254 2 215 1 187 1 49 1 6 1 31 1 206 1 38 2 99 1 126 2 241 1 295 4 313 1 261 2 308 2 264 1 235 1 
62 2 35 1 179 1 9 2 65 1 254 2 215 1 187 1 49 1 31 1 206 1 38 2 99 1 126 2 241 1 295 4 313 1 261 2 308 2 264 1 235 1 
238 1 331 1 85 1 109 1 86 1 187 1 189 1 241 1 38 1 295 2 8 1 26 1 337 1 249 1 46 1 65 1 254 2 362 1 49 1 205 1 157 1 206 1 261 1 210 1 264 1 82 1 211 1 309 1 
331 1 85 1 109 1 86 1 354 1 187 1 241 1 38 1 295 2 8 1 26 1 337 1 249 1 252 1 46 1 65 1 254 2 362 1 49 1 157 1 206 1 261 1 210 1 264 1 16 1 82 1 211 1 309 1 
62 2 35 1 179 1 9 2 65 1 254 2 215 1 111 1 187 1 49 1 31 1 206 1 38 2 99 1 126 2 241 1 295 4 313 1 261 2 308 2 264 1 235 1 
267 1 35 1 238 1 331 1 85 1 215 1 109 1 187 1 189 1 38 2 241 1 295 4 313 1 26 1 337 1 249 1 62 2 179 1 9 2 46 1 65 1 254 2 362 1 49 1 278 1 31 1 205 1 157 1 206 1 99 1 126 2 261 2 308 2 210 1 264 1 211 1 235 1 
34 1 35 1 215 1 187 1 111 1 173 1 38 1 241 1 295 3 62 1 179 1 9 1 254 2 65 1 120 1 49 1 228 1 31 1 69 1 206 1 99 1 126 1 261 2 308 1 210 1 264 1 211 1 368 1 235 1 
84 1 18 1 237 1 102 1 35 3 287 1 353 1 215 3 241 3 38 15 242 2 295 27 24 3 313 2 336 1 223 1 179 2 254 6 65 3 154 1 31 3 206 3 126 4 99 3 229 1 349 3 75 1 77 4 261 12 15 1 264 3 366 3 161 1 235 3 
84 1 18 1 237 1 102 1 35 3 287 1 353 1 215 3 241 3 38 15 242 2 295 27 24 3 313 3 336 1 223 1 179 2 254 6 65 3 154 1 31 3 206 3 126 5 99 3 229 1 349 3 75 1 77 4 261 12 15 1 264 3 366 3 161 1 235 3 
84 1 237 1 102 1 35 5 353 1 215 7 241 2 38 19 218 1 358 1 242 1 295 42 24 2 313 6 336 1 223 1 25 1 42 1 194 2 177 1 179 5 254 4 65 2 154 1 31 6 206 2 126 11 99 6 72 1 229 1 349 4 77 4 261 23 231 1 264 2 366 2 161 2 330 1 235 6 
84 1 18 1 102 1 35 3 287 1 215 3 241 2 38 10 242 1 295 19 24 1 313 3 336 1 179 3 254 4 65 2 154 1 323 1 31 3 206 2 126 6 99 3 349 1 77 2 261 9 15 2 264 2 366 2 161 1 235 3 
84 2 102 1 237 1 35 1 353 1 215 1 38 8 241 2 242 2 295 14 24 2 313 1 336 1 223 1 254 4 65 2 154 1 31 1 206 2 126 1 99 1 229 1 349 2 261 6 77 2 264 2 366 2 235 1 
3 1 85 1 108 1 288 1 109 2 86 1 187 1 111 1 217 1 173 2 241 1 38 1 295 2 26 1 337 1 118 1 249 1 320 1 46 2 65 1 254 2 49 1 157 2 206 1 261 1 210 2 264 1 184 1 82 1 211 2 17 2 
267 1 352 1 133 1 164 1 150 1 345 1 303 2 46 2 85 1 186 1 109 2 180 1 112 1 157 2 90 1 297 1 317 1 273 1 249 1 
352 1 133 1 164 1 345 1 303 2 46 1 85 1 186 1 109 1 180 1 112 1 157 1 23 1 297 1 317 1 273 1 249 1 
342 1 150 1 2 1 46 1 85 1 109 1 180 1 10 1 157 1 357 1 8 1 26 1 337 1 249 1 
352 1 133 1 164 1 150 1 345 1 303 2 46 1 85 1 186 1 109 1 180 1 112 1 157 1 90 1 297 1 317 1 273 1 249 1 
81 1 
171 1 39 1 200 1 167 1 193 1 94 1 147 1 
106 1 4 1 216 1 140 1 169 1 171 1 173 1 144 1 193 1 148 1 147 1 339 1 200 1 203 1 364 1 279 1 228 1 11 1 125 1 69 1 183 1 32 1 129 1 210 1 233 1 101 1 211 1 368 1 
35 1 56 1 85 1 215 1 4 2 109 1 292 1 171 4 37 1 335 1 219 3 8 1 144 2 246 1 298 1 193 3 26 1 148 2 337 4 339 3 249 2 341 1 200 3 344 1 153 1 46 1 255 3 362 1 364 2 50 1 279 2 31 1 125 6 157 1 99 1 183 2 207 2 230 1 32 1 233 2 367 1 130 1 235 1 
237 1 35 1 353 1 215 1 4 1 171 5 219 4 24 1 144 2 223 1 193 4 148 2 147 1 339 3 200 2 153 1 255 4 364 1 279 1 125 6 31 1 99 1 349 1 183 2 77 1 32 1 209 1 233 2 235 1 
20 1 215 2 4 1 216 1 171 2 173 1 144 1 25 1 148 1 200 2 153 2 203 1 364 1 11 1 228 1 182 1 69 1 99 1 72 1 183 1 129 1 210 1 52 1 233 1 101 1 211 1 330 1 368 1 
200 1 167 1 171 1 183 1 144 1 233 1 94 1 193 1 148 1 147 1 
200 5 35 2 153 2 215 2 255 5 31 2 125 10 171 5 182 1 335 1 99 2 219 5 193 5 235 2 339 5 
4 1 216 1 203 1 364 1 279 1 228 1 11 1 173 1 69 1 32 1 129 1 210 1 101 1 211 1 193 1 368 1 147 1 
341 1 104 1 200 1 46 2 19 1 4 1 109 2 364 1 98 1 279 2 171 1 157 2 91 1 183 1 32 1 8 2 144 1 233 1 148 1 
238 1 331 1 85 1 109 1 86 1 187 1 189 1 173 2 38 1 241 1 295 1 8 1 26 1 337 1 249 1 254 2 46 1 65 1 362 1 49 1 157 1 228 2 11 1 205 1 206 1 69 2 210 3 264 1 211 3 309 1 368 2 212 1 
341 1 200 2 255 2 98 1 125 4 171 1 219 2 183 1 144 1 233 1 42 1 193 4 148 1 147 2 339 2 
282 1 351 1 170 1 
282 1 351 1 170 1 
158 1 302 1 282 1 135 1 170 1 
282 1 351 1 170 1 
282 1 304 1 170 1 
282 1 304 1 170 1 
282 1 304 1 170 1 
282 1 170 1 
174 1 53 1 
237 1 65 1 254 2 206 1 241 1 38 1 295 2 349 1 24 1 336 1 261 1 77 1 264 1 
237 1 179 1 65 2 254 4 215 1 31 1 206 2 126 1 241 2 38 2 349 1 295 5 175 1 24 1 336 1 261 3 77 2 264 2 161 1 235 1 
237 1 35 1 353 1 65 2 254 4 215 1 31 1 206 2 126 1 99 1 241 2 38 5 229 1 295 8 349 1 24 1 313 1 336 1 261 3 77 1 223 1 264 2 235 1 
237 1 35 1 353 1 215 2 38 4 241 2 218 1 295 11 358 1 24 1 336 1 313 1 223 1 179 1 254 4 65 2 31 2 206 2 99 1 126 2 229 1 349 1 77 1 261 7 264 2 235 2 
237 1 65 1 254 2 206 1 241 1 38 1 295 2 349 1 24 1 336 1 261 1 77 1 264 1 
237 1 35 2 353 1 215 2 38 6 241 1 218 1 295 12 358 1 24 1 336 1 313 1 223 1 179 1 254 2 65 1 31 2 206 1 99 2 126 2 349 1 77 1 261 6 264 1 235 2 
237 1 35 1 353 1 65 3 254 6 215 1 31 1 206 3 126 1 99 1 241 3 38 5 229 1 349 1 295 8 175 1 24 1 313 1 336 1 261 3 77 1 223 1 264 3 235 1 
237 1 35 1 287 1 353 1 65 3 254 6 215 1 31 1 206 3 126 2 99 1 241 3 38 5 229 1 349 1 295 8 24 1 313 2 336 1 261 3 77 1 223 1 264 3 235 1 
177 2 179 3 215 1 38 4 99 1 126 6 72 1 295 7 313 3 261 3 231 1 25 3 330 3 
237 1 35 1 287 1 353 1 65 3 254 6 215 1 31 1 206 3 126 1 99 1 241 3 38 5 229 1 349 1 295 8 24 1 313 1 336 1 261 3 77 1 223 1 264 3 235 1 
177 1 179 1 65 2 254 4 215 1 206 2 99 1 38 4 126 3 241 2 72 1 295 8 229 1 313 2 261 4 231 1 264 2 25 1 42 1 330 1 
177 1 215 1 38 3 39 1 126 2 99 1 72 1 295 6 313 2 261 3 231 1 25 1 42 1 330 1 
35 1 179 1 65 1 254 2 215 1 31 1 206 1 38 2 99 1 126 2 241 1 295 4 175 1 313 1 261 2 264 1 235 1 
35 1 179 1 215 1 31 1 99 1 38 4 126 2 295 7 349 1 24 1 313 1 77 2 261 3 161 1 235 1 
35 2 215 3 38 12 241 2 295 23 115 1 313 5 25 2 42 1 194 1 177 1 179 4 65 2 254 4 306 1 31 2 206 2 126 9 99 3 72 1 349 2 229 2 261 11 77 2 231 1 264 2 161 1 330 2 235 2 
38 1 295 1 77 1 
295 1 349 1 261 1 
35 1 179 1 254 2 65 1 215 1 31 1 206 1 241 1 335 1 38 3 126 3 99 1 295 6 175 1 313 2 261 3 264 1 235 1 
237 1 35 2 353 1 215 2 38 6 241 1 218 1 295 12 358 1 24 1 336 1 313 1 223 1 179 1 254 2 65 1 31 2 206 1 99 2 126 2 349 1 77 1 261 6 264 1 235 2 
179 1 215 1 99 1 38 3 126 2 72 1 295 6 313 1 261 3 25 1 330 1 
177 1 179 1 65 1 254 2 306 1 206 1 126 2 38 2 241 1 295 3 229 1 313 1 261 1 231 1 264 1 25 1 330 1 
179 2 254 2 65 1 215 2 206 1 241 1 126 5 38 5 99 2 72 1 295 10 336 1 313 3 261 5 264 1 52 1 25 2 330 2 
179 1 65 1 254 2 215 1 31 1 206 1 241 1 126 1 295 2 336 1 261 2 264 1 
35 1 179 1 65 1 254 2 215 1 31 1 206 1 38 2 99 1 126 2 241 1 295 4 313 1 336 1 261 2 264 1 235 1 
287 1 179 1 65 3 254 6 306 1 206 3 38 2 241 3 126 2 229 1 295 3 336 1 313 1 261 1 264 3 25 1 330 1 
35 3 287 1 215 5 114 1 38 18 241 5 295 34 243 1 24 1 175 1 336 1 313 7 25 3 42 1 177 1 179 5 254 10 65 5 346 1 306 1 31 3 206 5 126 12 99 5 72 2 229 2 349 3 77 4 261 16 231 1 264 5 161 1 330 3 235 3 
173 1 89 1 92 1 210 1 211 1 309 1 265 1 
110 1 30 1 173 1 356 1 89 1 92 1 326 1 210 1 211 1 309 1 319 1 265 1 
157 1 342 1 39 1 46 1 85 1 8 1 109 1 10 1 26 1 337 1 249 1 
331 1 46 1 85 1 109 1 362 1 228 1 157 1 189 1 173 1 74 1 8 1 210 2 26 1 211 2 309 1 337 1 368 1 249 1 
331 1 85 1 109 1 189 1 173 2 220 1 176 1 26 2 337 3 249 1 343 1 46 1 362 2 157 1 228 2 74 1 210 2 232 1 211 2 101 1 162 1 309 1 368 1 
331 1 85 1 109 2 354 1 173 2 220 1 176 1 26 2 337 3 249 1 343 1 46 2 47 1 362 2 157 2 228 2 74 1 210 2 232 1 211 2 101 1 162 1 309 1 368 1 
56 1 85 1 109 3 4 2 37 1 220 1 8 1 26 1 193 1 337 4 147 1 249 1 343 1 46 3 47 1 48 1 362 1 364 2 279 1 157 3 365 1 207 1 162 1 
343 1 56 1 46 3 85 1 47 1 4 2 109 3 362 1 364 2 279 1 157 3 37 1 220 1 207 1 8 1 246 1 193 1 162 1 26 1 147 1 337 4 249 1 
157 1 46 1 85 1 109 1 276 1 249 1 
213 1 199 1 46 1 85 1 109 1 362 1 50 1 157 1 8 1 26 1 338 1 337 1 249 2 
267 1 238 1 331 1 85 1 215 1 109 1 187 2 111 1 189 1 173 1 38 3 241 2 59 1 295 6 313 2 25 1 42 1 26 1 337 1 249 1 62 1 177 1 9 1 65 2 254 4 46 1 362 1 49 2 278 1 228 1 157 1 205 1 206 2 99 1 126 2 72 1 74 1 261 3 308 1 231 1 210 2 264 2 184 1 211 2 309 2 330 1 368 1 
4 3 188 1 37 1 8 1 144 2 246 1 94 1 193 2 337 2 148 2 147 2 200 5 344 1 46 1 153 2 203 1 157 1 11 1 99 2 207 1 210 1 52 1 101 1 211 1 104 1 56 1 215 2 109 1 167 1 216 1 171 4 173 1 25 1 364 3 279 2 228 1 182 1 69 1 72 1 183 2 230 1 32 1 129 1 233 2 130 1 330 1 368 1 
267 1 46 2 85 1 109 2 362 1 276 1 292 1 50 1 157 2 37 1 26 1 337 2 249 2 
267 1 342 1 46 4 85 1 47 1 109 4 10 1 157 4 8 1 33 1 26 1 337 1 249 1 
213 1 199 1 63 1 46 1 85 1 109 1 362 1 157 1 117 1 51 1 26 1 337 1 249 2 
157 1 133 1 345 1 303 1 46 1 85 1 8 1 109 1 273 1 249 1 
320 1 157 2 267 1 164 1 46 2 85 1 109 2 26 1 337 1 118 1 249 1 
267 1 321 1 342 1 46 5 85 2 109 4 10 1 157 5 220 1 8 1 33 1 26 2 301 1 118 1 337 3 249 2 
267 1 342 1 134 1 46 5 85 2 109 4 10 1 157 5 220 1 8 1 33 1 26 2 301 1 118 1 337 3 249 2 
331 1 46 1 85 1 109 1 362 1 354 1 228 1 157 1 173 1 74 1 8 1 210 2 26 1 211 2 309 1 337 1 368 1 249 1 
213 1 199 1 46 1 85 1 109 1 362 1 50 1 157 1 220 1 26 1 338 1 337 1 249 2 
14 1 294 1 214 1 113 1 309 1 
56 1 214 2 4 2 188 1 29 1 113 1 226 1 364 2 277 1 181 1 14 2 294 2 232 1 176 1 100 1 193 1 101 1 309 1 147 1 
173 1 294 1 214 1 108 1 288 1 210 1 217 1 113 1 211 1 
100 1 29 1 113 1 
172 1 12 1 39 1 310 1 
172 1 12 1 88 1 64 1 221 1 244 1 310 1 
361 1 64 1 300 1 
236 1 64 3 165 1 172 1 239 2 12 1 88 1 221 1 41 1 244 3 318 1 310 1 
172 1 12 1 88 1 64 2 221 1 127 1 244 2 121 1 310 1 
172 1 88 1 64 1 345 1 303 1 222 1 221 1 244 1 112 1 234 1 318 1 
172 1 88 1 64 1 221 1 244 1 318 1 310 1 
12 1 88 1 64 1 221 1 244 1 318 1 310 2 
172 1 88 2 178 1 64 2 324 1 221 2 244 2 318 1 22 1 310 1 
64 3 305 1 121 2 122 1 141 1 12 1 172 2 88 1 221 1 222 1 244 3 318 1 310 1 
133 1 352 1 64 2 303 2 345 1 138 1 112 1 121 1 172 1 12 1 88 1 221 1 244 2 318 1 310 1 
64 4 269 1 121 2 141 1 12 1 172 2 88 2 221 2 222 1 127 1 244 4 318 1 310 1 
172 1 12 1 88 1 64 1 221 1 244 1 318 1 310 1 
224 1 165 1 64 4 121 2 141 1 239 1 12 2 172 3 88 1 221 1 222 1 41 1 244 4 310 2 
275 1 64 2 355 1 121 1 172 1 12 1 88 1 221 1 116 1 244 2 318 1 310 1 
64 3 165 2 172 1 239 2 12 1 88 1 221 1 79 1 41 1 244 3 318 1 310 1 
172 2 334 1 146 1 227 2 
333 1 88 1 64 1 221 1 244 1 318 1 
172 1 12 1 88 1 64 2 221 1 244 2 305 1 121 1 318 1 310 1 
60 1 
172 1 12 1 88 1 64 1 221 1 244 1 318 1 310 1 
172 1 12 1 239 1 88 1 64 3 221 1 244 3 305 1 121 1 318 1 310 1 
172 1 224 1 222 1 141 1 
172 1 310 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 35 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 101 32 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 101 32 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 101 32 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 101 32 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 101 32 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 144 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 101 (214,299) (214,299) 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 95 91 329 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 95 91 329 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 95 91 329 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 95 91 329 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 95 91 329 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 186 320 305 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 101 (214,299) (214,299) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 101 (214,299) (214,299) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 101 (214,299) (214,299) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 101 (214,299) (214,299) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 101 (214,299) (214,299) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 101 (214,299) (214,299) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 101 (214,299) (214,299) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 101 (214,299) (214,299) 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 101 (214,299) (214,299) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 144 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 101 (214,299) (214,299) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 101 (214,299) (214,299) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
341 1 360 1 254 1 194 3 163 1 199 2 121 1 4 2 93 3 236 1 168 1 157 2 188 1 
341 4 254 6 1 2 194 9 236 2 4 2 77 1 155 2 157 5 351 1 111 1 360 1 359 1 199 2 163 1 116 1 267 1 268 1 121 3 58 1 93 9 168 1 202 2 124 2 61 1 127 1 326 1 188 1 
341 4 254 6 1 2 194 9 236 2 4 2 77 1 155 2 157 5 351 1 111 1 360 1 359 1 199 2 163 1 116 1 267 1 268 1 121 3 58 1 93 9 168 1 202 2 124 2 61 1 127 1 326 1 188 1 
341 5 254 7 1 2 194 10 236 2 4 2 77 1 155 2 157 6 351 1 111 1 360 1 359 1 199 2 163 1 116 1 267 1 268 1 121 4 58 1 93 10 168 1 202 2 124 2 61 1 127 1 326 1 188 1 
341 3 254 4 1 2 194 7 236 2 4 2 77 1 155 2 157 4 351 1 111 1 360 1 359 1 199 2 163 1 116 1 267 1 268 1 121 2 58 1 93 7 168 1 202 1 124 2 61 1 326 1 188 1 
341 2 360 1 254 3 1 1 194 4 163 1 199 1 267 1 121 1 4 1 93 4 168 1 155 1 202 2 77 1 124 1 157 3 127 1 
262 1 360 1 1 1 194 2 275 1 163 1 199 1 268 1 4 1 93 2 236 1 168 1 155 1 157 1 108 1 111 1 
341 4 254 7 1 1 194 9 236 1 4 2 77 1 155 1 157 5 360 1 359 1 199 2 163 1 118 1 267 1 121 3 93 9 168 1 363 1 202 2 124 1 127 1 326 1 188 1 
341 4 254 7 1 1 194 9 236 1 4 2 77 1 155 1 157 5 360 1 359 1 199 2 163 1 118 1 267 1 121 3 93 9 168 1 363 1 202 2 124 1 127 1 326 1 188 1 
208 1 117 1 16 1 135 1 55 1 345 1 235 1 270 1 225 1 301 1 42 1 100 1 353 1 366 1 
12 1 
208 2 183 1 225 2 12 1 247 1 216 1 15 1 16 1 
313 2 264 1 208 5 183 1 12 1 234 2 119 1 16 2 15 2 225 5 97 1 322 1 247 1 324 2 30 1 217 1 367 1 189 1 230 1 
144 1 183 1 12 1 
12 1 293 2 62 1 
42 2 100 2 50 1 353 2 55 2 366 2 345 1 235 2 
65 1 327 1 233 1 342 1 151 1 276 1 345 1 235 2 154 1 347 1 47 1 48 2 331 2 349 1 49 1 50 1 81 1 353 2 51 1 86 1 291 2 335 1 317 1 36 1 55 3 298 1 339 2 18 1 246 1 96 1 145 1 39 1 42 2 100 2 249 2 365 1 366 3 
301 1 42 1 117 1 100 1 353 1 55 1 366 1 345 1 235 1 270 1 
244 1 218 1 208 1 183 1 12 1 23 1 55 1 337 1 225 1 98 1 301 1 353 1 354 1 366 1 
244 1 218 1 208 2 183 1 12 1 55 1 235 1 225 2 98 1 42 1 301 1 100 1 353 1 354 1 366 1 
208 1 225 1 137 1 15 1 16 1 
208 2 183 1 225 2 12 1 247 1 15 1 16 1 3 1 
208 1 225 1 15 1 
55 2 26 1 235 1 146 1 42 1 100 1 50 2 353 2 366 2 
338 1 34 1 261 1 
327 1 291 1 335 1 342 1 151 1 317 1 55 1 339 1 298 1 246 1 47 1 49 1 50 1 249 1 366 1 355 1 
327 1 335 1 291 1 342 1 317 1 151 1 55 2 298 1 339 1 47 1 246 1 283 1 42 1 49 1 100 1 206 1 353 1 249 1 261 1 366 2 
144 1 50 1 
283 1 42 3 100 3 50 1 353 3 55 3 366 3 235 1 
301 1 42 1 117 1 100 1 353 1 55 1 366 1 
146 1 301 1 42 1 100 1 353 1 55 1 366 1 235 1 26 1 
65 1 327 1 208 1 342 1 151 1 276 1 345 1 235 2 26 1 154 1 347 1 47 1 48 2 283 1 331 1 349 1 49 1 50 1 353 3 354 1 112 1 244 1 218 1 86 1 335 1 291 1 317 1 36 1 55 4 143 1 298 1 339 1 18 1 246 1 145 1 225 1 98 1 42 3 301 1 100 3 206 1 249 1 365 1 366 4 
330 1 283 1 42 1 100 1 50 1 353 2 55 2 366 2 337 1 
244 1 218 1 208 1 12 1 55 3 235 1 26 1 225 1 283 2 98 1 301 1 42 3 259 1 100 3 206 1 353 3 354 1 366 3 112 1 
34 1 55 2 26 1 235 1 283 1 42 2 100 2 353 2 261 1 366 2 
327 1 291 1 335 1 342 1 151 1 317 1 55 1 339 1 298 1 246 1 47 1 49 1 50 1 249 1 366 1 
327 1 291 1 335 1 342 1 151 1 317 1 55 1 339 1 298 1 47 1 78 1 50 1 249 1 366 1 242 1 
65 1 276 1 133 1 136 1 73 1 154 1 347 1 105 1 48 2 348 1 331 4 81 2 261 2 84 1 34 2 361 1 222 1 338 2 18 2 145 1 224 1 125 1 365 1 229 1 
218 1 301 1 42 1 100 1 353 1 55 1 333 1 366 1 
55 5 337 1 26 1 235 1 178 1 196 1 330 1 283 2 42 4 100 4 50 1 206 1 353 5 366 5 
301 1 42 2 117 1 100 2 353 2 333 1 55 2 366 2 
177 1 66 1 193 1 
66 2 161 1 56 1 177 2 258 1 19 1 22 1 
177 1 66 1 
177 1 66 1 
258 1 22 1 
258 1 22 1 
258 1 22 1 
177 1 66 1 89 1 
177 1 66 1 89 1 
177 1 66 1 89 1 
177 1 66 1 113 1 
177 1 66 1 113 1 
177 1 66 1 113 1 
66 2 208 2 68 1 161 1 13 1 12 1 209 1 164 2 219 3 25 2 295 2 94 1 177 2 279 2 364 1 225 2 308 2 197 1 286 1 
66 1 207 1 208 1 193 1 25 1 279 1 177 1 308 1 197 1 50 1 353 2 10 1 288 1 85 1 164 1 219 1 55 2 38 1 123 1 225 1 40 1 42 2 100 2 366 2 
155 2 156 2 124 1 275 1 309 1 
155 1 1 1 124 1 
155 1 1 1 275 1 
358 1 155 3 156 1 124 2 275 1 309 1 
75 1 155 2 156 1 124 1 275 1 309 1 
234 1 235 1 280 1 105 1 239 2 109 1 114 1 290 1 12 1 117 1 293 4 16 4 15 1 55 1 247 1 301 1 125 1 62 2 64 1 207 1 208 5 135 1 345 1 136 1 179 1 30 1 353 1 217 2 313 1 264 3 183 1 318 1 361 1 92 2 270 1 321 1 225 5 324 1 147 2 42 1 100 1 366 1 
234 1 235 1 105 1 239 2 109 1 290 1 12 1 115 2 117 1 293 4 55 1 16 4 15 3 247 1 301 1 125 1 62 2 64 1 207 1 208 5 343 1 135 1 345 1 136 1 179 1 137 2 30 1 353 1 217 2 313 1 264 3 183 1 318 1 361 1 92 2 270 1 321 1 225 5 324 1 42 1 100 1 148 1 366 1 
207 1 208 3 234 1 135 1 345 1 235 1 280 1 105 1 179 1 239 1 353 1 217 2 313 1 114 1 264 1 183 1 290 1 12 1 318 1 117 1 293 1 55 1 16 2 92 1 270 1 225 3 324 1 301 1 42 1 147 1 100 1 125 1 366 1 230 1 
207 1 208 2 234 1 280 1 105 1 239 1 179 1 217 2 313 1 114 1 264 1 290 1 35 1 318 1 293 1 16 1 92 1 225 2 324 1 147 1 125 1 230 1 
316 1 
144 1 342 1 104 1 
203 1 342 1 
327 1 342 1 
327 1 298 1 342 3 69 1 104 2 120 1 
327 1 298 1 342 1 
342 1 14 1 
32 1 226 1 331 1 101 1 260 1 81 1 
32 1 226 1 331 1 101 1 81 1 
32 1 226 1 331 1 101 1 81 1 
32 1 226 1 331 1 101 1 81 1 
32 1 226 1 331 1 101 1 81 1 
327 1 274 2 194 1 342 1 151 1 4 1 236 2 238 1 215 1 47 1 356 2 182 1 11 1 335 1 291 1 142 2 199 1 88 1 185 1 93 1 339 1 249 1 63 1 
356 1 67 1 274 1 358 1 335 1 291 1 1 1 275 1 245 1 194 1 142 1 163 1 199 1 294 1 236 1 4 1 93 1 339 1 47 1 155 2 200 1 124 1 205 1 7 1 249 1 83 1 
67 1 274 1 254 1 1 1 194 2 275 1 4 1 236 1 307 1 47 1 155 2 157 1 83 1 356 1 358 1 360 1 291 1 335 1 142 1 245 1 199 1 163 1 294 1 93 2 168 1 339 1 200 1 124 1 205 1 249 1 
67 1 274 1 254 2 1 1 194 3 275 1 4 1 236 1 47 1 155 2 157 1 7 1 356 1 358 1 360 1 291 1 335 1 142 1 245 1 199 1 294 1 185 1 93 3 168 1 339 1 200 1 124 1 41 1 205 1 249 1 
67 1 274 1 254 2 1 1 194 2 275 1 236 1 47 1 155 2 157 1 7 1 356 1 358 1 360 1 291 1 335 1 142 1 93 2 168 1 339 1 200 1 124 1 41 1 205 1 249 1 
311 1 
327 1 234 1 151 2 153 1 47 1 158 1 284 1 240 1 243 1 244 1 160 2 11 1 291 2 335 1 12 2 162 2 293 2 165 1 15 6 55 1 337 1 57 1 339 2 170 4 201 2 247 3 301 1 249 2 62 2 303 2 208 5 342 1 210 1 212 2 23 1 76 1 215 1 30 1 353 1 217 2 354 1 218 1 87 1 313 1 264 2 183 1 318 1 362 1 225 5 323 2 187 2 98 1 324 1 272 1 366 1 
244 1 218 1 208 3 210 1 212 1 165 1 23 1 15 2 55 1 337 1 76 1 170 2 225 3 247 1 98 1 301 1 216 1 240 1 353 1 354 1 366 1 243 1 
208 3 210 1 23 1 76 1 216 1 240 1 353 1 354 1 243 1 244 1 218 1 183 1 12 1 165 1 15 1 55 1 337 1 170 3 201 1 225 3 98 1 247 1 301 1 366 1 
208 3 210 1 212 1 23 1 76 1 216 1 240 1 353 1 354 1 243 1 244 1 218 1 183 1 12 1 162 1 165 1 55 1 15 2 337 1 170 3 201 1 225 3 247 1 98 1 301 1 366 1 
234 1 158 1 240 1 8 1 243 1 244 1 160 2 12 5 162 4 165 1 55 1 15 7 337 1 57 1 170 6 201 4 247 3 204 1 301 1 62 2 303 2 208 5 210 1 70 1 212 4 23 1 24 1 76 1 216 1 30 1 353 1 354 1 217 1 218 1 313 1 264 1 183 5 225 5 323 2 98 1 187 2 99 1 324 1 366 1 
303 2 208 4 234 1 210 1 212 2 23 1 76 1 158 1 30 1 240 1 353 1 217 1 354 1 243 1 244 1 218 1 313 1 160 2 264 1 183 1 12 2 162 2 293 2 165 1 15 4 55 1 337 1 57 1 362 1 170 4 201 2 225 4 323 2 247 2 187 2 98 1 324 1 301 1 62 2 366 1 
303 2 208 4 234 1 70 1 210 1 212 2 23 1 24 1 76 1 158 1 240 1 30 1 353 1 217 1 354 1 243 1 244 1 218 1 313 1 160 2 264 1 183 1 12 1 162 2 165 1 15 4 55 1 57 1 337 1 170 4 201 2 225 4 323 2 247 2 187 2 98 1 99 1 324 1 301 1 62 2 366 1 
303 2 208 4 234 1 70 1 210 1 212 2 23 1 24 1 76 1 158 1 240 1 30 1 353 1 217 1 354 1 243 1 244 1 218 1 313 1 160 2 264 1 183 1 12 1 162 2 165 1 15 4 55 1 57 1 337 1 170 4 201 2 225 4 323 2 247 2 187 2 98 1 99 1 324 1 301 1 62 2 366 1 
303 2 191 2 208 4 234 1 70 1 210 1 212 2 23 1 76 1 158 1 240 1 30 1 353 1 217 1 354 1 243 1 244 1 218 1 313 1 160 2 264 1 183 1 12 1 162 2 293 2 165 1 15 4 55 1 296 2 337 1 170 4 201 2 59 1 225 4 247 2 98 1 324 1 301 1 43 1 302 1 366 1 
303 2 208 4 234 1 70 1 210 1 212 3 23 1 24 1 76 1 158 1 30 1 240 1 353 1 217 1 354 1 8 1 243 1 244 1 218 1 313 1 160 2 264 1 183 1 12 1 162 3 165 1 55 1 15 5 57 1 337 1 170 5 201 3 225 4 323 2 247 2 187 2 98 1 324 1 99 1 301 1 62 2 366 1 
303 2 208 4 234 1 70 1 210 1 212 3 23 1 24 1 76 1 158 1 30 1 240 1 353 1 217 1 354 1 8 1 243 1 244 1 218 1 313 1 160 2 264 1 183 1 12 1 162 3 165 1 55 1 15 5 57 1 337 1 170 5 201 3 225 4 323 2 247 2 187 2 98 1 324 1 99 1 301 1 62 2 366 1 
303 2 191 2 208 4 234 1 210 1 212 2 23 1 76 1 158 1 30 1 240 1 353 1 217 1 354 1 243 1 244 1 218 1 313 1 160 2 264 1 183 1 12 1 162 2 293 2 165 1 15 4 55 1 296 2 337 1 362 1 170 4 201 2 59 1 225 4 247 2 98 1 324 1 301 1 366 1 
65 2 327 2 342 3 151 2 276 2 154 2 347 2 307 1 47 2 215 1 48 4 348 1 283 1 331 2 349 1 6 1 7 1 353 1 81 1 312 1 51 2 357 1 52 1 263 1 11 1 335 2 291 7 319 1 55 1 90 1 339 8 18 1 145 2 96 1 42 1 100 1 249 8 365 2 366 1 
65 1 276 1 73 1 235 1 26 1 136 1 154 1 347 1 105 1 48 2 179 1 331 3 139 1 353 1 81 1 261 1 140 1 34 1 55 1 361 1 338 1 18 2 145 1 224 1 42 1 100 1 125 1 365 1 366 1 
65 1 266 1 276 1 152 1 136 1 73 1 74 1 154 1 347 1 144 1 18 2 214 1 145 1 299 1 224 1 48 2 348 1 331 5 125 1 101 1 50 1 81 3 365 1 
65 2 149 1 231 1 253 3 276 1 173 1 73 1 136 1 154 2 176 3 28 1 347 2 105 2 48 4 179 2 107 1 349 1 331 14 50 1 139 1 81 8 287 1 261 11 34 4 361 1 17 1 338 11 18 6 96 1 145 2 224 2 125 2 365 2 
65 1 276 1 71 1 154 1 347 1 257 1 48 2 283 1 349 1 331 2 50 1 139 1 353 1 81 1 34 1 55 1 271 1 169 1 18 1 145 1 96 1 301 1 42 1 100 1 206 1 365 1 366 1 
327 2 151 1 276 3 152 1 154 3 47 2 105 2 48 6 283 1 331 19 49 2 50 1 291 1 335 2 55 3 167 1 338 6 339 1 298 2 18 9 246 2 299 1 125 3 206 1 249 1 128 2 340 1 251 2 65 3 342 2 74 1 136 3 73 3 347 3 214 1 179 2 349 1 138 2 139 1 353 1 81 10 261 6 34 6 266 1 317 2 36 2 361 2 223 2 96 1 145 3 224 3 42 1 100 1 101 1 365 3 366 3 
65 1 34 1 276 1 173 1 154 1 338 1 347 1 145 1 105 1 224 1 48 2 348 1 331 2 125 1 81 2 261 1 365 1 229 1 
65 1 34 1 276 1 361 1 73 1 136 1 154 1 222 1 338 1 347 1 18 2 145 1 224 1 48 2 348 1 331 2 261 1 365 1 
65 1 276 1 173 1 136 1 73 1 154 1 347 1 105 1 179 1 48 2 348 1 331 4 81 2 261 2 34 2 361 1 338 2 18 2 145 1 224 2 125 1 365 1 
65 1 34 1 276 1 173 1 154 1 338 1 347 1 145 1 105 1 224 1 48 2 331 2 125 1 81 2 261 1 365 1 312 1 229 1 
65 1 34 1 276 1 361 1 73 1 136 1 154 1 222 1 338 1 347 1 18 2 145 1 224 1 48 2 331 2 261 1 365 1 312 1 
65 1 276 1 173 1 136 1 73 1 154 1 347 1 105 1 179 1 48 2 331 4 81 2 261 2 312 1 34 2 361 1 338 2 18 2 145 1 224 2 125 1 365 1 
65 1 276 1 173 1 136 1 73 1 154 1 347 1 105 1 179 1 48 2 331 4 81 2 261 2 34 2 361 1 338 2 18 2 145 1 224 2 125 1 365 1 
327 1 65 1 342 1 151 1 276 1 154 1 347 1 47 1 48 2 331 2 349 1 49 1 50 1 81 1 335 1 291 1 317 1 36 1 55 1 298 1 339 1 246 1 18 1 96 1 145 1 249 1 365 1 366 1 
327 1 65 1 342 1 151 1 276 1 154 1 347 1 47 1 48 2 331 2 78 1 349 1 50 1 81 1 242 1 335 1 291 1 317 1 221 1 55 1 298 1 339 1 18 1 96 1 145 1 249 1 365 1 366 1 
65 1 276 1 173 1 136 1 73 1 154 1 347 1 105 1 179 1 48 2 331 4 139 1 81 2 261 2 34 2 361 1 338 2 18 2 145 1 224 2 125 1 365 1 
327 1 65 1 342 1 276 1 73 1 136 1 173 1 154 1 347 1 47 1 307 1 105 1 48 2 179 1 331 4 49 1 138 1 81 2 261 2 34 2 335 1 291 1 317 1 36 1 55 1 361 1 338 2 298 1 339 1 18 2 246 1 145 1 224 2 125 1 249 1 365 1 366 1 
65 1 276 1 136 1 173 1 235 1 26 1 154 1 347 1 105 1 48 2 179 1 331 3 139 1 353 1 81 2 261 1 34 1 55 1 361 1 338 1 18 1 145 1 224 1 42 1 100 1 125 1 365 1 172 1 366 1 
329 1 65 1 346 1 95 1 347 1 145 1 48 2 350 1 365 1 91 1 
329 1 65 1 346 1 95 1 347 1 145 1 48 2 350 1 365 1 91 1 
329 1 65 1 346 1 95 1 347 1 145 1 48 2 350 1 365 1 91 1 
329 1 65 1 346 1 95 1 347 1 145 1 48 2 350 1 365 1 91 1 
329 1 65 1 346 1 95 1 347 1 145 1 48 2 350 1 365 1 91 1 
279 1 177 1 66 1 161 1 306 1 308 1 164 1 286 1 25 1 94 1 
123 1 193 1 
279 1 177 1 66 1 232 1 308 1 46 1 164 1 25 1 297 1 
66 1 208 1 68 1 161 1 12 1 209 1 164 1 219 2 25 1 295 1 94 1 177 1 279 1 364 1 225 1 197 1 308 1 286 1 
66 1 208 1 68 1 161 1 12 1 209 1 164 1 219 2 25 1 295 1 94 1 177 1 279 1 364 1 225 1 197 1 308 1 286 1 
66 1 208 1 68 1 161 1 12 1 209 1 164 1 219 2 25 1 295 1 94 1 177 1 279 1 364 1 225 1 197 1 308 1 286 1 
33 1 19 1 89 1 
33 1 19 1 89 1 
314 1 113 1 
314 1 19 1 113 1 
10 1 38 1 
66 1 207 1 208 1 193 1 277 1 25 1 279 1 177 1 308 1 50 1 353 2 10 1 288 1 85 1 164 1 219 1 55 2 16 1 295 1 38 1 364 1 123 1 225 1 40 1 42 2 100 2 366 2 
33 1 89 1 
314 1 19 1 113 1 
327 1 130 1 65 1 342 1 276 1 2 1 154 1 347 1 47 1 48 2 331 2 349 1 139 1 353 2 81 1 51 2 52 1 263 1 335 1 291 2 265 1 166 1 220 1 55 2 339 2 18 1 145 1 96 1 249 2 365 1 366 2 
327 1 182 1 274 1 11 1 335 1 291 1 342 1 151 1 134 1 339 1 47 1 215 1 249 1 248 1 
67 1 274 1 358 1 335 1 291 1 1 1 275 1 294 1 213 1 122 1 339 1 47 1 155 2 124 1 7 1 205 1 249 1 248 1 
67 1 274 1 358 1 335 1 291 2 1 1 275 1 294 1 213 1 122 1 339 2 47 1 307 1 155 2 124 1 7 1 205 1 249 2 248 1 
67 1 274 1 358 1 291 1 335 1 1 1 275 1 294 1 122 1 339 1 47 1 155 2 124 1 7 1 205 1 249 1 129 1 
315 1 
313 1 264 1 183 1 12 1 234 1 324 1 30 1 217 1 189 1 367 1 
105 1 239 1 179 1 293 1 125 1 217 2 92 1 
208 1 183 1 225 1 12 1 247 1 15 1 
327 1 208 3 342 1 234 2 151 2 72 1 153 1 47 1 215 1 285 2 284 1 181 1 30 1 217 2 313 2 87 2 264 2 11 1 335 1 291 4 318 2 15 4 339 4 225 3 247 2 324 2 126 1 249 4 230 1 
144 1 264 1 183 1 12 1 217 1 367 1 189 1 
208 1 234 1 30 1 217 1 313 1 264 1 183 1 12 2 293 1 15 1 57 1 225 1 323 1 187 1 247 1 324 1 62 1 
327 1 208 2 192 1 342 4 234 2 151 1 211 1 104 1 47 1 105 1 179 1 239 2 30 2 332 1 217 3 244 1 313 2 264 2 291 1 335 2 53 1 292 1 318 1 293 2 120 1 15 2 92 2 339 1 298 1 225 2 203 2 247 1 324 2 125 1 171 1 249 1 21 1 64 1 251 1 
45 1 313 1 253 1 305 1 264 4 234 1 54 1 293 3 320 1 361 1 136 1 92 4 186 1 176 1 105 1 179 1 239 4 107 1 324 1 125 1 30 1 217 3 
131 1 208 1 234 1 135 1 152 1 345 1 74 1 136 1 235 1 30 1 353 1 217 2 313 1 264 2 266 1 117 1 55 1 270 1 321 1 225 1 324 1 99 1 301 1 42 1 125 2 100 1 366 1 64 2 
65 1 327 1 342 1 151 1 276 1 345 1 235 2 154 1 347 1 47 1 48 2 331 1 349 1 49 1 50 1 353 2 86 1 291 1 335 1 317 1 36 1 55 3 339 1 298 1 18 1 246 1 145 1 42 2 100 2 249 1 365 1 366 3 
313 1 87 1 264 1 183 1 12 1 234 1 318 1 293 1 239 1 324 1 30 1 217 1 
10 1 279 1 304 1 286 1 25 1 
279 1 25 1 9 1 
279 1 25 1 9 1 
279 1 25 1 9 1 
279 1 227 1 25 1 
279 1 227 1 25 1 
279 1 227 1 25 1 
279 1 25 1 
177 1 66 1 
65 1 131 1 266 1 152 2 74 2 73 3 173 2 136 2 346 1 347 1 18 5 145 1 48 2 224 5 331 10 125 2 81 5 365 1 
65 1 173 1 346 1 347 1 145 1 105 1 48 2 224 1 331 2 125 1 81 2 365 1 
65 1 361 1 73 1 136 1 173 1 346 1 347 1 18 2 145 1 105 1 224 2 48 2 179 1 331 4 125 1 81 2 365 1 
0 1 65 3 344 1 152 1 74 1 73 1 173 1 346 1 347 3 18 2 145 3 48 6 224 2 331 3 81 1 365 3 102 1 
190 1 0 1 65 4 253 3 195 1 328 1 152 1 74 1 73 2 173 2 136 3 346 1 176 3 347 4 214 1 105 2 48 8 179 2 107 1 331 21 81 11 289 1 266 1 361 2 18 10 299 1 145 4 224 4 125 3 101 1 365 4 102 1 
65 1 253 1 305 1 152 1 136 1 74 1 73 1 176 1 346 1 347 1 214 1 48 2 107 1 331 7 81 4 266 1 18 3 145 1 299 1 224 1 125 1 101 1 365 1 
65 2 190 1 149 1 253 2 305 1 152 1 136 1 73 1 74 1 173 1 346 1 176 1 347 2 214 1 105 1 48 4 179 1 107 1 331 10 81 6 266 1 18 4 299 1 145 2 224 2 125 2 101 1 365 2 
190 1 65 3 45 1 253 1 305 1 152 1 74 1 173 1 136 3 73 2 176 1 346 1 347 3 214 1 105 2 48 6 179 2 107 1 331 18 81 9 266 1 54 1 320 1 361 2 186 1 18 9 299 1 145 3 224 3 125 3 101 1 365 3 102 1 
190 1 65 3 45 1 253 1 305 1 152 1 74 1 173 2 136 2 73 2 176 1 346 1 347 3 214 1 105 2 48 6 179 2 107 1 331 16 81 10 266 1 54 1 320 1 361 1 186 1 18 6 299 1 145 3 224 4 125 3 101 1 365 3 102 1 
65 1 253 1 305 1 152 1 136 1 74 1 73 1 176 1 346 1 347 1 214 1 48 2 107 1 331 7 81 4 266 1 18 3 145 1 299 1 224 1 125 1 101 1 365 1 
65 1 45 1 253 1 305 1 173 1 136 2 73 1 176 1 346 1 347 1 105 2 48 2 179 2 107 1 331 12 81 6 54 1 320 1 361 2 186 1 18 6 145 1 224 2 125 2 365 1 
190 1 65 4 45 1 253 1 305 1 152 1 74 1 173 1 136 2 73 2 346 1 176 1 347 4 214 1 105 2 48 8 179 2 107 1 331 17 81 10 266 1 54 1 320 1 361 1 186 1 18 7 299 1 145 4 224 3 125 3 101 1 365 4 102 2 
65 4 0 1 45 1 253 1 305 1 173 3 136 2 73 3 346 1 176 1 347 4 105 3 48 8 179 3 107 1 331 16 81 9 54 1 320 1 361 2 186 1 18 7 145 4 224 6 125 3 365 4 102 2 
266 1 152 3 136 1 74 3 73 3 173 3 18 4 214 1 299 2 224 6 331 7 125 1 81 3 
65 4 0 1 45 1 253 1 305 1 152 1 74 1 173 1 136 2 73 2 346 1 176 1 347 4 214 1 105 2 48 8 179 2 107 1 331 17 81 10 266 1 54 1 320 1 361 1 186 1 18 7 299 1 145 4 224 3 125 3 101 1 365 4 102 2 
65 2 266 1 152 1 136 1 173 1 73 1 74 1 347 2 18 3 214 1 145 2 299 1 224 2 48 4 331 7 125 1 101 1 81 4 365 2 102 1 
266 1 152 1 74 1 73 1 136 1 144 1 18 2 214 1 299 1 224 1 331 5 125 1 101 1 81 3 
190 1 65 1 361 1 73 1 136 1 173 1 347 1 18 2 145 1 105 1 224 2 48 2 179 1 331 4 125 1 81 2 365 1 
149 1 253 2 361 1 73 1 136 1 173 1 176 1 18 4 105 1 179 1 224 2 107 1 331 7 125 1 81 3 
149 1 65 1 253 2 152 1 74 1 136 3 73 2 173 1 176 2 347 1 214 1 105 2 179 2 48 2 331 17 81 9 287 1 266 1 361 2 17 1 18 8 299 1 145 1 224 3 125 3 101 1 365 1 102 1 
18 1 253 1 331 1 
176 1 331 1 81 1 
65 1 190 1 361 1 173 1 136 1 73 1 347 1 18 3 145 1 105 1 48 2 179 1 224 2 331 6 125 1 81 3 365 1 251 1 
65 1 45 1 253 1 305 1 173 1 136 2 73 1 176 1 346 1 347 1 105 2 48 2 179 2 107 1 331 12 81 6 54 1 320 1 361 2 186 1 18 6 145 1 224 2 125 2 365 1 
18 3 224 2 331 6 266 1 125 1 81 3 152 1 173 1 73 1 74 1 136 1 
65 1 344 1 152 1 173 1 73 1 74 1 347 1 18 2 214 1 299 1 145 1 224 2 48 2 331 3 81 1 365 1 102 1 
330 1 50 1 353 1 352 1 55 1 366 1 337 1 
55 1 337 1 300 1 281 1 106 1 330 1 50 1 82 1 352 1 353 1 366 1 44 1 
327 1 11 1 335 1 291 4 342 1 255 1 151 1 339 4 307 1 215 1 47 1 80 1 249 4 
327 1 291 2 335 2 342 1 184 1 339 2 298 1 47 1 282 1 60 1 325 1 285 1 249 2 110 1 
339 1 47 1 155 1 335 1 291 1 1 1 275 1 151 1 205 1 249 1 
327 1 52 1 291 2 335 1 342 1 220 1 339 2 307 1 47 1 7 1 249 2 
327 2 52 1 11 1 291 4 335 2 342 3 151 1 319 1 339 5 215 1 307 1 47 2 285 1 6 1 80 1 249 5 
327 2 52 1 11 1 291 4 335 2 342 3 151 1 339 5 215 1 307 1 47 2 285 1 180 1 6 1 80 1 249 5 
327 1 144 1 339 1 47 1 215 1 11 1 335 1 291 1 342 1 151 1 249 1 
327 1 335 1 291 1 342 1 317 1 151 1 55 2 298 1 339 1 47 1 283 1 42 1 100 1 49 1 50 1 353 1 249 1 366 2 
327 2 342 3 47 1 283 1 49 1 285 1 50 1 353 2 354 1 218 1 291 1 335 1 317 1 14 1 55 2 339 1 298 2 42 1 301 1 100 2 228 1 249 1 366 2 
327 2 342 3 255 1 47 1 283 1 78 1 285 1 50 1 353 2 354 1 218 1 291 2 335 1 317 1 14 1 55 2 339 2 298 2 42 1 301 1 100 2 228 1 249 2 366 2 
244 1 327 1 208 2 183 1 335 1 291 3 12 1 342 4 255 1 151 1 104 1 14 1 15 1 175 1 298 1 339 3 47 1 225 2 203 1 285 1 228 1 249 3 334 1 
244 1 327 1 208 2 183 1 335 1 291 3 12 1 342 4 255 1 151 1 104 1 14 1 15 1 298 1 339 3 47 1 225 2 203 1 285 1 228 1 249 3 171 1 
357 1 339 1 47 1 335 1 291 1 249 1 
357 1 327 2 52 1 291 6 335 3 342 3 151 2 319 1 120 1 278 1 90 1 339 7 298 1 307 1 47 2 282 1 60 1 6 1 7 1 249 7 51 1 
327 1 65 2 342 1 276 2 2 1 152 1 136 1 73 1 74 1 154 2 347 2 214 1 47 1 307 1 48 4 283 1 331 5 138 1 49 1 50 1 139 1 81 3 353 1 335 1 291 1 266 1 317 1 36 1 55 2 298 1 339 1 18 2 246 1 299 1 145 2 224 1 42 1 125 1 100 1 101 1 249 1 365 2 128 1 366 2 
208 3 342 2 234 2 151 1 211 1 104 1 30 2 217 1 244 1 313 2 264 1 183 1 291 1 12 1 292 1 16 1 15 2 339 1 225 3 203 1 247 1 324 2 126 1 249 1 171 1 367 1 189 1 21 1 
357 1 327 1 291 2 335 2 342 2 104 1 120 1 339 2 298 1 307 1 47 1 249 2 332 1 
327 1 335 1 291 1 342 1 317 1 151 1 55 2 298 1 339 1 47 1 283 1 78 1 42 1 100 1 50 1 353 1 249 1 366 2 
327 1 291 1 335 2 342 1 120 1 278 1 339 1 298 1 47 1 282 1 60 1 285 1 249 1 
132 1 336 1 50 1 256 1 31 1 
244 1 218 1 208 2 183 1 12 1 132 2 198 1 336 1 16 1 256 2 269 1 225 2 98 1 301 1 50 1 354 1 273 1 31 2 112 1 
130 1 132 1 265 1 336 1 166 1 256 1 55 1 353 1 366 1 
198 1 336 1 269 1 
168 1 360 1 194 1 157 1 199 1 163 1 93 1 4 1 
252 1 341 1 360 2 254 2 194 4 199 1 268 1 121 1 174 1 93 4 4 1 168 2 157 3 310 1 
168 1 363 1 150 1 360 1 254 1 194 2 157 1 199 1 163 1 20 1 93 2 4 1 
168 1 237 1 360 1 194 3 157 1 199 1 163 1 310 1 268 2 174 2 93 3 4 1 
5 1 29 2 157 2 159 1 
194 1 103 1 199 1 163 1 93 1 4 1 
168 1 360 1 254 1 194 2 157 1 199 1 163 1 326 1 93 2 4 1 
37 1 
168 1 360 1 194 1 157 1 199 1 163 1 93 1 4 1 
168 1 144 1 360 1 157 1 
168 1 360 1 194 1 157 1 199 1 93 1 4 1 
356 1 236 1 93 1 
360 1 194 3 163 1 199 1 268 2 27 1 4 1 93 3 174 1 168 1 157 1 310 1 
168 1 202 1 360 1 254 1 194 2 157 1 199 1 93 2 4 1 
341 1 155 1 77 1 1 1 124 1 194 1 157 1 199 1 163 1 93 1 4 1 
168 1 194 1 157 1 199 1 163 1 93 1 4 1 
168 2 360 1 194 1 199 1 163 1 93 1 4 1 
141 1 194 2 163 1 199 2 4 2 93 2 168 1 157 1 79 1 250 1 
341 1 360 1 359 1 254 2 194 3 163 1 199 1 121 1 4 1 93 3 168 1 157 2 326 1 
358 1 360 1 254 1 1 1 275 1 194 2 163 1 199 1 4 1 93 2 168 1 155 2 124 1 157 1 241 1 
341 1 360 1 254 2 194 4 163 1 199 2 121 1 4 2 93 4 168 1 202 1 157 2 127 1 
254 1 360 1 194 3 163 1 199 1 268 1 4 1 93 3 168 1 157 1 326 1 
252 1 341 1 157 1 121 1 
168 1 157 1 

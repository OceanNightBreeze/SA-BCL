#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (78,176,331) (78,176,331) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (78,176,331) (78,176,331) 249 277 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (78,176,331) (78,176,331) 249 277 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (78,176,331) (78,176,331) 249 277 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (78,176,331) (78,176,331) 249 277 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (78,176,331) (78,176,331) 249 277 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (78,176,331) (78,176,331) 249 277 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (78,176,331) (78,176,331) 249 277 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (78,176,331) (78,176,331) 249 277 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (78,176,331) (78,176,331) 249 277 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (78,176,331) (78,176,331) 249 277 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (78,176,331) (78,176,331) 249 277 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (78,176,331) (78,176,331) 249 277 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 275 127 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 99 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 99 45 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
20 1 5 1 259 9 143 3 169 5 263 1 173 4 342 1 10 1 93 1 92 7 346 9 33 1 35 2 298 1 217 2 100 1 350 1 177 1 159 1 108 1 223 1 202 2 135 1 
20 1 5 1 259 9 143 3 169 5 263 1 173 4 342 1 10 1 93 1 92 7 346 9 33 1 35 2 298 1 217 2 100 1 350 1 177 1 159 1 108 1 223 1 202 2 135 1 
20 2 259 9 143 3 169 5 263 1 342 2 173 4 10 1 93 2 92 6 346 9 33 2 272 1 35 2 298 1 100 1 217 2 350 1 177 1 17 1 196 1 353 1 240 1 18 1 108 1 223 1 202 2 135 1 
20 2 259 9 143 3 169 5 263 1 342 2 173 4 10 1 93 2 92 6 346 9 33 2 272 1 35 2 298 1 100 1 217 2 350 1 177 1 17 1 196 1 353 1 240 1 18 1 108 1 223 1 202 2 135 1 
20 2 259 10 143 4 169 6 263 1 342 2 173 5 10 1 93 2 92 7 346 10 33 2 272 1 35 2 298 1 100 1 217 2 350 1 177 1 17 1 196 1 353 1 240 1 18 1 108 1 223 1 202 2 135 1 
20 2 259 7 143 2 169 4 263 1 342 2 173 3 10 1 93 2 92 4 346 7 33 2 272 1 35 1 298 1 217 2 350 1 177 1 17 1 196 1 353 1 240 1 18 1 108 1 223 1 202 2 135 1 
20 1 346 4 33 1 259 4 143 1 35 2 298 1 100 1 217 1 169 3 350 1 177 1 263 1 173 2 342 1 135 1 202 1 92 3 
20 1 346 2 33 1 259 2 298 1 217 1 169 1 17 1 263 1 353 1 227 1 210 1 135 1 202 1 93 1 344 1 
346 3 259 3 143 1 298 1 217 2 169 2 263 1 173 1 223 1 135 1 202 2 93 1 92 1 
172 1 347 1 137 1 
225 1 150 2 137 1 
12 2 4 2 76 2 83 2 235 1 49 2 59 1 122 2 
256 1 138 1 4 2 40 1 83 3 307 2 338 2 59 1 87 1 86 1 170 1 171 2 88 2 89 1 117 1 118 1 189 1 148 1 30 1 12 3 215 1 323 1 295 1 235 1 49 2 325 1 175 2 122 2 125 1 274 1 197 1 76 2 333 1 304 1 109 1 201 1 111 1 
250 1 12 1 4 1 76 1 83 1 235 1 72 1 49 1 101 1 122 1 
78 1 176 1 
4 1 12 1 83 1 49 1 144 1 122 1 250 1 172 1 331 2 76 1 199 1 78 1 242 1 343 2 137 1 
331 1 291 1 268 1 343 1 164 1 
172 1 331 2 324 1 96 1 268 1 343 2 164 1 137 1 
331 1 268 1 343 1 
4 1 12 1 83 1 13 1 72 1 235 1 49 1 101 1 122 1 250 1 331 1 76 1 343 1 164 1 
137 1 
172 1 331 2 96 1 44 1 268 1 343 2 164 1 137 1 
257 1 84 1 96 1 283 2 142 1 26 1 284 1 51 1 62 1 330 1 126 1 172 1 331 5 356 2 131 2 268 2 343 5 164 2 137 1 
256 1 4 1 12 2 40 1 83 2 295 1 236 1 49 1 325 1 338 1 175 1 170 1 122 1 171 1 274 1 333 1 189 1 56 1 162 1 30 1 
347 1 59 1 
4 2 12 2 83 2 337 1 49 1 59 2 122 1 76 1 253 1 
162 1 161 1 328 1 
178 1 256 1 12 1 83 1 40 1 295 1 338 1 325 1 175 1 59 1 170 1 171 1 274 1 333 1 189 1 30 1 
157 1 238 1 76 1 12 5 4 5 83 5 337 1 230 1 49 4 236 2 56 1 59 1 122 4 270 1 
250 1 12 2 4 2 83 2 49 2 213 1 101 1 122 2 
76 1 12 3 4 3 83 3 236 1 49 3 59 1 122 3 
250 1 12 1 4 1 83 1 49 1 101 1 122 1 
250 1 12 1 4 1 76 1 83 1 337 1 49 1 253 1 122 1 
256 1 138 1 4 3 40 1 83 4 337 1 307 1 338 1 59 1 144 1 87 1 170 1 86 1 171 1 88 2 89 1 117 1 118 1 189 1 30 1 343 1 345 1 215 1 12 4 323 1 295 1 235 1 49 3 236 1 325 1 175 1 122 3 125 1 250 1 274 1 102 1 331 1 197 1 76 2 333 1 199 1 78 1 242 1 56 1 
238 1 12 2 4 2 83 2 49 1 236 1 59 1 122 1 270 1 
4 3 12 3 83 3 41 1 337 1 236 2 49 3 144 1 122 3 250 1 331 1 102 1 76 1 199 1 78 1 242 1 56 1 343 1 137 1 
4 2 12 2 83 2 337 1 236 1 49 2 328 1 122 2 76 1 162 1 
256 1 12 1 83 1 40 1 295 1 338 1 325 1 175 1 59 1 170 1 171 1 274 1 333 1 189 1 30 1 
256 1 12 1 83 1 40 1 295 1 338 1 325 1 308 1 309 1 175 1 59 1 170 1 171 1 274 1 30 1 
138 1 167 1 307 4 112 1 261 1 87 1 88 2 89 1 117 1 118 1 271 1 348 1 328 2 123 1 75 1 125 2 197 1 239 1 77 1 252 1 303 1 109 2 161 2 162 2 
250 1 12 1 4 1 83 1 49 1 144 1 213 1 122 1 
322 1 260 1 
322 1 260 1 
191 1 113 1 
191 1 113 1 
191 1 113 1 
322 1 85 1 260 1 
322 1 260 1 349 1 
0 1 322 2 191 1 260 2 174 1 113 1 
322 1 85 1 260 1 
322 1 85 1 260 1 
322 1 166 1 260 1 
322 1 166 1 260 1 
322 1 166 1 260 1 
4 2 58 1 83 2 260 1 59 1 64 1 264 1 28 1 188 1 343 1 68 1 322 1 321 1 12 2 296 1 49 2 300 1 349 1 122 2 158 1 331 1 332 1 110 1 136 1 
0 1 321 2 322 2 258 1 296 2 193 1 207 1 181 1 260 2 53 2 300 3 158 2 331 2 332 1 314 1 105 1 28 2 343 2 137 1 
20 1 33 1 342 1 
20 1 33 1 344 1 
147 1 33 3 342 2 187 1 116 1 344 1 
147 1 33 2 342 1 116 1 160 1 344 1 
147 2 33 2 342 1 116 1 344 1 
58 1 3 2 205 2 84 2 283 1 225 1 306 1 142 1 43 1 112 1 172 1 91 2 268 1 343 5 68 1 96 1 150 3 97 1 218 1 36 1 331 5 126 3 77 1 252 1 356 1 106 1 131 1 303 1 163 1 164 4 137 2 136 1 
205 6 84 6 283 2 225 3 142 1 43 1 112 3 209 1 172 1 245 1 90 1 316 1 91 6 291 5 268 6 343 9 293 1 96 1 150 9 16 5 151 1 218 3 36 2 330 1 331 9 126 8 77 3 252 3 356 2 106 2 131 2 303 3 164 7 136 4 137 5 
3 1 205 2 283 1 84 2 225 2 306 1 112 1 172 1 91 2 343 3 97 1 150 4 36 1 218 1 330 1 331 3 126 3 77 1 356 1 252 1 106 1 131 1 303 1 164 2 137 3 136 1 
3 2 205 4 283 1 84 4 225 3 306 1 112 2 209 1 172 1 245 1 91 4 343 4 293 1 150 7 97 1 36 1 218 2 330 1 331 4 126 5 77 2 356 1 252 2 106 1 131 1 303 2 164 3 137 4 136 2 
347 1 134 1 30 1 
255 1 30 1 
280 1 
40 1 295 1 30 1 
46 1 30 1 
40 1 30 1 
40 1 287 1 186 1 295 1 134 2 30 3 
271 3 57 2 149 1 307 7 50 1 261 2 125 3 301 1 221 1 252 1 185 1 303 1 290 1 200 1 243 1 109 4 319 1 
271 3 57 2 149 1 307 7 50 1 261 2 125 3 301 1 221 1 252 1 185 1 303 1 290 1 200 1 243 1 109 4 319 1 
271 3 57 2 149 1 307 7 50 1 216 1 261 2 125 3 301 1 221 1 252 1 185 1 303 1 290 1 243 1 200 1 109 4 319 1 
57 3 305 3 138 1 307 31 112 3 310 1 261 5 87 1 88 2 184 1 89 1 185 1 231 4 290 2 319 1 271 10 149 2 50 2 194 1 218 3 125 15 301 5 251 1 197 1 221 1 77 3 129 1 252 4 107 1 303 4 243 1 38 1 200 2 109 16 
57 2 138 1 139 1 307 14 244 1 261 3 87 1 88 2 89 1 290 2 319 2 190 1 271 4 149 2 50 1 301 1 125 6 197 1 221 1 252 3 303 3 200 1 243 1 109 8 
20 1 179 1 336 1 338 1 259 2 168 1 169 1 262 1 171 1 263 1 115 1 342 1 187 1 92 1 93 1 344 1 346 2 247 1 33 2 325 1 298 1 175 1 217 1 351 1 274 1 355 1 334 1 132 1 202 1 135 1 
20 1 336 1 338 1 259 3 168 1 169 1 171 1 263 1 115 1 342 1 187 1 246 1 93 1 92 2 344 1 346 3 247 1 70 1 33 2 237 1 325 1 298 1 175 1 217 1 351 1 274 1 355 1 334 1 132 1 202 1 
20 1 336 1 338 1 259 2 169 1 171 1 263 1 246 1 187 1 342 1 93 1 92 2 344 1 346 2 247 1 33 2 237 1 325 1 298 1 175 1 351 1 274 1 355 1 334 1 132 1 
256 1 69 1 346 1 40 1 70 1 247 2 336 2 325 1 259 1 338 1 339 1 217 1 175 1 74 1 171 1 286 1 274 1 47 1 241 1 132 2 30 1 93 2 202 1 
20 1 179 1 336 1 338 1 259 1 168 1 171 1 115 1 342 1 246 1 187 1 93 1 344 1 346 1 247 1 33 2 325 1 175 1 217 1 351 1 274 1 355 1 334 1 132 1 202 1 135 1 
140 1 
331 1 277 1 22 1 78 1 249 1 343 1 176 1 95 1 
331 1 277 1 22 1 78 1 249 1 343 1 176 1 95 1 
283 1 22 1 142 1 249 1 176 1 331 1 277 1 356 1 78 1 131 1 343 1 95 1 
256 2 40 1 206 1 22 1 283 1 84 1 142 1 338 2 339 1 171 2 30 1 268 2 343 2 95 1 96 1 325 1 297 1 175 2 36 1 249 1 176 1 274 1 331 2 126 1 277 1 356 1 241 1 78 1 131 1 19 1 
331 1 277 1 22 1 78 1 249 1 343 1 176 1 95 1 
331 1 277 1 22 1 78 1 249 1 343 1 176 1 95 1 
331 1 277 1 22 1 78 1 249 1 343 1 176 1 95 1 
331 2 277 1 22 1 96 1 78 1 44 1 268 1 249 1 343 2 176 1 95 1 
283 1 22 1 142 1 249 1 176 1 331 1 277 1 356 1 78 1 131 1 343 1 95 1 
331 1 277 1 22 1 78 1 249 1 343 1 176 1 95 1 
331 1 277 1 22 1 78 1 249 1 343 1 176 1 95 1 
331 1 277 1 22 1 78 1 249 1 343 1 176 1 95 1 
57 1 138 1 167 1 307 6 261 2 59 2 87 1 88 2 89 1 117 1 118 1 290 1 319 1 271 2 149 1 347 1 328 1 125 3 197 1 221 1 252 1 303 1 243 1 109 3 162 1 161 1 
138 1 224 1 305 2 307 10 226 1 112 2 261 1 87 1 114 1 88 2 89 1 231 2 117 1 118 1 271 2 218 2 328 3 301 1 125 4 104 1 197 1 302 1 77 1 252 2 107 1 303 1 109 6 161 8 162 8 
256 1 178 1 138 1 224 1 4 1 40 1 83 2 338 1 307 2 59 1 170 1 87 1 8 1 171 1 88 2 89 1 117 1 189 1 118 1 30 1 233 1 12 2 323 1 295 1 49 1 236 1 325 1 175 1 328 1 122 1 125 1 274 1 197 1 333 1 304 1 56 1 109 1 80 1 
256 1 4 1 224 1 138 3 83 3 40 2 307 20 261 4 87 3 88 6 89 3 315 1 189 2 318 1 319 1 271 8 149 1 12 3 323 1 236 1 49 1 325 2 326 2 328 7 274 2 197 3 333 2 243 1 56 1 109 10 161 7 162 7 57 1 204 2 23 1 338 3 112 2 59 2 61 2 170 2 171 3 340 2 246 1 117 3 290 1 118 3 30 2 215 2 295 2 175 3 218 2 122 1 125 10 301 4 221 1 77 2 252 3 303 3 304 1 
256 2 4 1 138 2 83 1 40 2 24 1 167 1 338 8 307 2 339 1 262 1 87 2 171 7 88 4 89 2 246 1 288 1 117 2 118 2 30 3 67 1 214 1 12 1 323 1 98 1 49 1 236 1 325 2 175 8 122 1 125 1 274 2 275 1 197 2 241 1 304 1 109 1 201 2 203 1 
138 1 224 1 4 1 83 1 337 1 307 3 112 1 261 1 87 1 88 2 89 1 117 1 118 1 94 1 271 1 12 1 49 1 218 1 328 1 122 1 125 2 76 1 197 1 77 1 252 1 303 1 109 1 162 1 161 1 
271 1 138 1 307 2 167 1 112 1 328 1 87 1 301 1 88 2 197 1 239 1 89 1 252 1 117 1 118 1 109 2 162 1 161 1 
271 1 138 1 307 2 167 1 261 1 328 1 87 1 75 1 88 2 125 2 197 1 89 1 77 1 117 1 303 1 118 1 162 1 161 1 
138 1 167 1 307 4 112 1 261 1 87 1 88 2 89 1 117 1 118 1 271 2 218 1 328 2 301 1 125 2 197 1 77 1 252 1 303 1 109 2 161 2 162 2 
271 1 138 1 307 2 112 1 328 1 87 1 301 1 88 2 197 1 239 1 89 1 288 1 252 1 117 1 118 1 109 2 162 1 161 1 
271 1 138 1 307 2 261 1 328 1 87 1 75 1 88 2 125 2 197 1 89 1 77 1 288 1 117 1 303 1 118 1 162 1 161 1 
138 1 307 4 112 1 261 1 87 1 88 2 89 1 288 1 117 1 118 1 271 2 218 1 328 2 301 1 125 2 197 1 77 1 252 1 303 1 109 2 161 2 162 2 
138 1 307 4 112 1 261 1 87 1 88 2 89 1 117 1 118 1 271 2 218 1 328 2 301 1 125 2 197 1 77 1 252 1 303 1 109 2 161 2 162 2 
256 1 138 1 40 1 83 1 307 2 338 1 59 1 170 1 87 1 171 1 88 2 89 1 117 1 189 1 118 1 30 1 215 1 12 1 323 1 295 1 325 1 175 1 125 1 274 1 197 1 333 1 304 1 109 1 
256 1 138 1 40 1 83 1 307 2 338 1 309 1 308 1 59 1 170 1 87 1 171 1 88 2 89 1 117 1 118 1 30 1 12 1 323 1 295 1 325 1 175 1 121 1 125 1 274 1 197 1 304 1 109 1 
138 1 224 1 307 4 112 1 261 1 87 1 88 2 89 1 117 1 118 1 271 2 218 1 328 2 301 1 125 2 197 1 77 1 252 1 303 1 109 2 161 2 162 2 
138 1 40 1 83 1 307 4 338 1 112 1 261 1 262 1 170 1 87 1 171 1 88 2 340 1 89 1 117 1 189 1 118 1 30 1 271 2 215 1 12 1 295 1 325 1 175 1 218 1 328 2 125 2 301 1 274 1 197 1 77 1 333 1 252 1 303 1 109 2 162 2 161 2 
138 1 224 1 4 1 83 1 337 1 307 3 25 1 112 1 87 1 88 2 89 1 117 1 118 1 271 1 12 1 49 1 218 1 328 1 122 1 125 1 301 1 76 1 197 1 77 1 252 1 303 1 109 2 161 1 162 1 
57 1 1 1 138 3 305 3 42 4 307 41 112 4 261 4 244 1 87 3 312 1 88 6 266 1 211 1 89 3 66 1 231 4 267 1 290 1 319 1 271 8 149 1 34 1 194 3 52 2 218 4 153 1 125 21 301 4 251 1 197 3 198 1 221 1 77 4 130 1 55 1 252 5 107 1 303 5 243 1 133 1 109 20 358 1 
57 1 1 1 138 4 305 3 42 4 307 38 112 4 261 4 244 1 87 4 312 1 88 8 266 1 211 1 89 4 66 1 231 4 267 1 290 1 319 1 271 7 149 1 34 1 194 3 52 2 218 4 153 1 125 18 301 3 251 2 197 4 198 1 221 1 77 3 130 1 55 1 252 5 107 1 303 4 243 1 133 1 109 20 358 1 
57 1 1 1 138 2 305 4 42 4 307 52 112 7 261 7 244 1 87 2 88 4 266 1 211 1 89 2 66 1 231 4 267 1 290 1 319 1 271 14 149 1 34 1 194 2 52 1 218 7 153 1 125 25 301 7 251 1 197 2 198 1 221 1 302 2 77 7 130 1 55 1 252 8 107 2 303 8 243 1 133 1 109 27 
1 1 138 2 305 1 42 2 307 19 112 3 261 3 244 1 87 2 88 4 266 1 89 2 231 2 267 2 271 6 34 1 194 1 52 1 218 3 125 10 301 3 197 2 198 1 77 3 252 3 107 1 303 3 109 9 335 1 358 1 
1 1 138 3 305 2 42 4 307 26 112 3 261 2 244 1 87 3 88 6 266 1 211 1 89 3 66 1 231 2 267 1 271 4 34 2 194 2 52 2 218 3 153 1 301 2 125 12 251 2 197 3 198 1 77 2 130 1 55 1 252 3 303 2 133 1 109 14 
0 1 322 1 321 1 158 1 341 1 258 1 296 1 28 1 207 1 260 1 
110 1 349 1 
322 1 321 1 158 1 292 1 281 1 296 1 28 1 260 1 154 1 
228 1 85 1 
166 1 15 1 174 1 
0 1 321 1 322 1 258 1 296 1 193 1 207 1 181 1 260 1 53 1 300 2 331 1 158 1 332 1 314 1 28 1 343 1 137 1 
0 1 321 1 322 1 258 1 296 1 193 1 207 1 181 1 260 1 53 1 300 2 331 1 158 1 332 1 314 1 28 1 343 1 137 1 
0 1 321 1 322 1 258 1 296 1 193 1 207 1 181 1 260 1 53 1 300 2 331 1 158 1 332 1 314 1 28 1 343 1 137 1 
228 1 85 1 174 1 
228 1 85 1 174 1 
166 1 15 1 
166 1 15 1 174 1 
188 1 64 1 
58 1 4 2 83 2 260 1 59 1 64 1 264 1 313 1 28 1 188 1 343 1 68 1 322 1 321 1 12 2 193 1 296 1 49 2 53 1 300 1 349 1 122 2 331 1 158 1 110 1 164 1 136 1 
138 1 224 1 4 2 40 1 83 2 338 2 307 2 311 1 87 1 171 2 88 2 89 1 117 1 9 1 118 1 30 1 214 1 12 2 323 1 192 1 294 1 325 1 152 1 175 2 125 1 274 1 275 1 197 1 304 1 109 1 201 2 
20 1 33 2 336 1 325 1 338 2 7 1 175 2 195 1 60 1 262 1 171 2 351 1 274 1 355 1 115 1 342 1 187 1 246 1 344 1 
20 1 31 1 33 2 336 1 338 1 325 1 7 1 175 1 171 1 351 1 274 1 355 1 115 1 342 1 187 1 246 1 344 1 
256 1 40 1 336 1 71 1 325 1 338 1 339 1 175 1 195 1 171 1 286 1 274 1 241 1 30 1 
20 1 33 2 336 1 338 1 325 1 7 1 175 1 195 1 60 1 171 1 351 1 274 1 355 1 115 1 342 1 187 1 246 1 344 1 
39 1 
256 1 4 2 138 1 83 3 40 1 307 1 338 1 59 1 87 1 86 1 170 1 171 1 88 2 89 1 117 1 189 1 118 1 30 1 12 3 215 1 323 1 235 1 295 1 49 2 325 1 175 1 122 2 125 1 274 1 197 1 76 2 333 1 
57 1 205 2 84 2 283 1 225 2 150 4 142 1 36 1 126 1 172 2 356 1 131 1 91 2 19 1 137 4 
126 1 172 1 347 1 84 1 284 1 51 1 137 1 
84 1 283 1 225 1 142 1 183 1 172 1 265 1 268 1 343 1 96 1 150 1 126 1 331 1 356 1 131 1 279 1 137 2 
2 1 255 3 256 1 40 1 84 8 225 6 142 4 262 1 182 1 146 2 186 1 48 1 91 6 268 5 96 3 150 12 325 1 51 1 274 2 331 5 103 2 276 2 199 2 19 1 204 2 205 6 283 4 338 2 284 1 112 2 171 2 172 2 29 1 30 6 343 5 120 1 248 2 295 1 36 2 175 2 218 2 124 2 126 9 354 2 77 2 356 4 252 2 131 4 303 2 79 2 134 2 137 8 
305 1 205 5 283 2 84 5 225 3 142 2 112 2 172 2 146 2 211 1 66 1 231 1 91 5 268 1 343 1 320 1 96 1 150 6 194 1 36 1 218 2 153 1 124 1 331 1 126 8 77 2 130 1 356 2 55 1 252 2 131 2 303 2 19 1 254 1 137 5 
4 1 83 1 139 1 283 1 84 2 142 1 146 2 290 1 343 1 319 1 12 1 149 1 13 1 72 1 235 1 49 1 101 1 122 1 124 1 250 1 331 1 126 2 76 1 356 1 252 2 131 1 303 1 81 1 
283 1 84 1 142 1 284 1 51 1 172 1 126 1 356 1 131 1 137 1 
204 1 205 5 84 5 150 10 225 5 112 2 218 2 124 1 126 5 146 2 77 2 252 2 303 2 91 5 137 5 
172 1 331 1 96 1 268 1 343 1 137 1 
2 2 256 2 40 1 206 1 283 2 84 2 142 1 338 2 339 1 182 1 171 2 30 1 268 4 343 3 96 2 325 1 297 1 73 1 175 2 36 2 330 1 274 1 126 2 331 3 356 2 357 1 241 1 131 2 19 2 
273 1 158 1 296 1 
158 1 296 1 207 1 63 1 64 1 
273 1 158 1 296 1 
273 1 158 1 296 1 
158 1 180 1 296 1 
158 1 180 1 296 1 
158 1 180 1 296 1 
158 1 296 1 
322 1 260 1 
57 1 305 1 138 1 307 8 244 1 261 2 87 1 88 2 89 1 66 1 231 1 290 1 319 1 271 2 149 1 194 1 125 4 197 1 221 1 252 1 303 1 243 1 109 4 
57 1 138 2 305 1 307 11 112 1 261 2 244 1 87 2 88 4 89 2 66 1 231 2 290 1 269 1 319 1 271 3 149 1 194 1 218 1 125 5 301 1 197 2 221 1 252 2 107 1 303 1 243 1 109 6 
57 1 305 1 138 3 307 19 112 2 244 1 261 3 87 3 88 6 89 3 211 1 66 1 231 1 290 1 269 1 319 1 271 4 149 1 194 1 218 2 153 1 301 1 125 10 251 1 197 3 221 1 77 2 130 1 55 1 252 3 303 3 243 1 109 9 
57 1 305 1 138 3 307 17 112 2 244 1 261 3 87 3 88 6 89 3 211 1 66 1 231 1 290 1 269 1 319 1 271 5 149 1 194 1 218 2 153 1 301 2 125 7 251 1 197 3 221 1 77 1 55 1 252 3 130 1 303 2 243 1 109 10 
57 1 305 1 138 1 307 8 244 1 261 2 87 1 88 2 89 1 66 1 231 1 290 1 319 1 271 2 149 1 194 1 125 4 197 1 221 1 252 1 303 1 243 1 109 4 
305 1 138 1 307 12 112 2 244 1 261 1 87 1 88 2 89 1 211 1 66 1 231 1 271 2 194 1 218 2 153 1 301 1 125 6 197 1 77 2 55 1 252 2 130 1 303 2 109 6 
57 1 138 4 305 1 307 18 112 2 244 1 261 3 87 4 88 8 211 1 89 4 66 1 231 1 290 1 269 1 319 1 271 5 149 1 194 1 218 2 153 1 301 2 125 8 251 2 197 4 221 1 77 1 130 1 55 1 252 3 303 2 243 1 109 10 
138 4 305 1 307 16 112 3 244 1 261 3 87 4 88 8 211 1 89 4 66 1 231 1 271 6 194 1 218 3 153 1 301 3 125 7 251 2 197 4 77 2 130 1 55 1 252 3 303 2 109 9 358 1 
271 6 149 3 307 7 261 3 125 4 301 3 221 1 252 1 303 1 243 2 290 3 109 3 319 1 
57 1 138 4 305 1 307 18 112 2 244 1 261 3 87 4 88 8 211 1 89 4 66 1 231 1 290 1 319 1 271 4 149 1 194 1 218 2 153 1 301 1 125 8 251 2 197 4 221 1 77 1 130 1 55 1 252 3 303 2 243 1 109 10 358 1 
57 1 271 3 138 2 149 1 307 8 261 2 87 2 125 4 301 1 88 4 251 1 197 2 221 1 89 2 252 1 303 1 243 1 290 1 109 4 319 1 
57 1 271 2 149 1 347 1 307 6 261 2 125 3 221 1 252 1 303 1 243 1 290 1 109 3 319 1 
271 2 138 1 307 4 112 1 261 1 218 1 87 1 125 2 88 2 301 1 197 1 77 1 89 1 252 1 303 1 109 2 269 1 
271 2 305 1 307 7 194 1 112 1 261 1 218 1 125 4 301 1 77 1 252 1 107 1 231 2 303 1 109 3 
57 1 305 2 138 2 307 23 112 2 261 5 87 2 88 4 89 2 231 2 290 2 317 1 319 1 271 9 149 2 218 2 301 4 125 12 251 2 104 1 197 2 221 1 77 2 302 1 252 3 107 1 303 3 243 1 109 11 
125 1 231 1 307 1 
305 1 307 1 109 1 
271 3 138 1 204 1 307 6 112 1 218 1 261 2 87 1 88 2 125 3 301 1 197 1 89 1 77 1 252 1 303 1 109 3 269 1 
305 1 138 1 307 12 112 2 244 1 261 1 87 1 88 2 89 1 211 1 66 1 231 1 271 2 194 1 218 2 153 1 301 1 125 6 197 1 77 2 55 1 252 2 130 1 303 2 109 6 
271 2 149 1 307 6 261 1 125 3 301 1 252 1 303 1 290 1 109 3 319 1 
271 2 149 1 138 1 307 3 261 1 87 1 301 1 125 2 88 2 251 1 197 1 221 1 89 1 290 1 243 1 109 1 317 1 
271 5 138 1 149 2 139 1 307 10 244 1 261 3 87 1 88 2 301 2 125 5 197 1 89 1 252 2 303 2 290 2 109 5 319 1 
271 1 138 1 307 2 112 1 244 1 87 1 88 2 301 1 197 1 89 1 252 1 109 2 
271 2 138 1 307 4 112 1 261 1 244 1 218 1 87 1 125 2 88 2 301 1 197 1 77 1 89 1 252 1 303 1 109 2 
271 2 138 3 149 1 307 3 244 1 261 1 87 3 125 2 88 6 301 1 251 1 197 3 89 3 290 1 109 1 317 1 358 1 
57 1 138 5 305 3 307 34 112 3 310 1 244 1 261 7 87 5 184 1 88 10 89 5 231 4 290 3 317 1 269 1 319 2 271 12 149 3 194 1 218 3 125 18 301 5 251 2 197 5 221 1 129 1 77 3 252 5 107 1 303 5 243 1 109 16 358 1 
238 1 12 1 4 1 83 1 212 1 59 1 270 1 
4 1 12 1 83 1 299 1 59 1 285 1 156 1 238 1 65 1 212 1 119 1 270 1 
274 1 256 1 40 1 347 1 241 1 325 1 338 1 339 1 175 1 30 1 171 1 
256 1 4 1 12 2 40 1 83 2 295 1 236 1 49 1 338 1 325 1 175 1 59 1 170 1 122 1 171 1 274 1 189 1 30 1 
2 1 12 1 4 1 83 1 49 1 236 1 122 1 
2 1 12 1 4 1 83 1 49 1 236 1 122 1 
2 1 331 1 343 1 
2 1 331 1 343 1 
274 1 98 1 325 1 338 1 175 1 171 1 
256 2 40 2 295 1 98 1 24 1 14 1 338 7 325 2 175 7 262 1 27 1 171 6 274 3 275 1 246 1 186 1 289 1 201 1 30 3 67 1 203 1 
57 1 138 2 224 1 4 1 40 1 83 2 307 6 338 1 261 2 59 2 262 1 170 1 87 2 61 1 171 1 88 4 340 1 89 2 117 2 290 1 118 2 189 1 30 1 319 1 271 2 149 1 12 2 215 1 294 1 295 1 49 1 236 1 325 1 175 1 328 1 122 1 125 3 274 1 197 2 221 1 333 1 252 1 303 1 243 1 109 3 162 1 161 1 
256 1 255 1 84 1 283 2 142 2 338 1 284 1 182 1 171 1 172 1 30 2 268 2 343 3 96 1 248 1 51 1 175 1 126 1 331 3 354 1 276 1 199 1 356 2 131 2 79 1 134 1 164 1 137 1 
40 1 295 1 98 1 338 2 325 1 175 2 262 1 171 2 274 2 186 1 48 1 134 1 30 2 
256 1 40 1 338 4 325 1 339 1 175 4 145 1 262 1 171 4 220 1 274 1 241 1 30 1 
2 1 40 1 295 1 14 1 338 1 325 1 175 1 171 1 274 2 289 1 222 1 232 1 30 1 318 1 
20 1 274 1 256 1 355 1 33 1 325 1 338 1 175 1 344 1 171 1 
274 1 275 1 40 1 192 1 246 1 325 1 338 2 175 2 30 1 262 1 171 2 
2 1 256 1 40 2 24 1 338 4 325 2 339 1 175 4 145 1 262 1 171 3 274 2 275 1 241 1 30 3 67 1 
2 1 256 1 40 2 24 1 338 4 325 2 339 1 175 4 145 1 262 1 171 3 127 1 274 2 275 1 241 1 30 3 
256 1 4 1 12 2 40 1 83 2 295 1 236 1 49 1 338 1 325 1 309 1 175 1 59 1 170 1 122 1 171 1 274 1 30 1 
2 1 
282 2 278 1 99 1 152 1 
21 1 331 1 282 2 278 1 99 1 152 1 45 1 343 1 37 1 164 1 
282 1 278 1 99 1 152 1 
282 1 45 1 37 1 
346 3 259 3 217 1 298 1 169 1 353 1 263 1 108 1 92 1 135 1 202 1 
173 1 143 1 169 1 219 1 
263 1 169 1 
263 1 347 1 298 1 169 1 
263 1 346 1 259 1 298 1 217 1 169 1 202 1 
346 1 132 1 93 1 
346 3 259 3 217 1 298 1 169 1 155 1 353 2 263 1 128 1 135 1 202 1 234 1 
263 1 346 2 259 2 35 1 298 1 217 1 169 1 92 1 202 1 
20 1 346 1 33 1 259 1 217 1 169 1 177 1 173 1 342 1 135 1 202 1 
263 1 346 1 259 1 217 1 169 1 202 1 135 1 
263 2 346 1 259 1 298 1 217 1 202 1 135 1 
346 2 141 1 6 1 259 2 217 2 169 1 327 1 263 1 135 1 202 2 
346 3 259 3 143 1 298 1 217 1 169 2 263 1 173 1 108 1 10 1 135 1 202 1 92 2 
20 1 82 1 346 2 33 2 259 2 298 1 217 1 169 1 263 1 187 1 342 1 135 1 202 1 92 1 344 1 
346 4 259 4 143 1 35 1 298 1 217 2 100 1 169 2 263 1 173 1 135 1 202 2 92 2 
263 1 346 1 259 1 298 1 217 1 169 1 202 1 135 1 
346 4 259 4 143 1 298 2 217 1 169 3 155 1 219 1 353 1 263 2 173 1 92 2 202 1 234 1 
346 2 32 1 259 2 217 1 298 1 169 1 263 1 329 1 159 1 135 1 202 1 92 1 
346 3 259 3 217 1 298 1 169 1 155 2 353 2 263 1 54 1 135 1 202 1 234 1 
165 2 229 1 11 1 169 2 
346 1 259 1 208 1 217 1 202 1 135 1 
263 1 346 2 108 1 259 2 298 1 217 1 169 1 92 1 202 1 135 1 
352 1 
263 1 346 1 259 1 298 1 217 1 169 1 202 1 135 1 

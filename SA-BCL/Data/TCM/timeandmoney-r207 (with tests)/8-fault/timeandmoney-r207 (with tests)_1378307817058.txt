#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 49 137 223 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 49 137 223 107 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 49 137 223 (320,327) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 49 137 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 49 137 223 (320,327) (320,327) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 49 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 296 159 78 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 296 159 78 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 296 159 78 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 296 159 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 49 290 254 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 49 137 223 (320,327) (320,327) 288 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 49 137 223 107 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 70 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 26 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 26 225 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 70 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 49 90 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 49 90 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 49 90 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 49 90 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 49 90 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
204 1 73 1 207 2 249 2 166 2 167 1 303 1 305 9 261 2 95 2 313 6 142 1 20 1 99 1 229 1 270 1 148 1 193 2 271 1 110 5 273 2 150 1 65 9 31 1 114 3 153 1 68 1 281 4 
204 1 73 1 207 2 249 2 166 2 167 1 303 1 305 9 261 2 95 2 313 6 142 1 20 1 99 1 229 1 270 1 148 1 193 2 271 1 110 5 273 2 150 1 65 9 31 1 114 3 153 1 68 1 281 4 
204 1 73 1 207 2 249 2 166 2 167 1 303 1 305 10 261 2 95 2 313 7 142 1 20 1 99 1 229 1 270 1 148 1 193 2 271 1 110 6 273 2 150 1 65 10 31 1 114 4 153 1 68 1 281 5 
204 1 73 1 207 2 249 2 166 2 167 1 303 1 305 7 261 1 95 2 313 4 142 1 20 1 99 1 229 1 148 1 193 2 271 1 110 4 273 2 150 1 65 7 31 1 114 2 153 1 68 1 281 3 
204 1 95 1 313 3 142 1 20 1 207 1 249 1 270 1 148 1 166 1 110 3 273 1 65 4 114 1 303 1 305 4 281 2 261 2 
204 1 95 1 142 1 75 1 207 1 229 1 249 1 148 1 166 1 193 1 110 1 271 1 65 2 305 2 217 1 119 1 
204 1 95 2 313 1 142 1 249 2 148 1 193 1 110 2 65 3 31 1 114 1 305 3 281 1 
38 1 204 1 73 1 207 1 249 2 166 1 303 1 305 9 261 2 313 7 95 2 142 1 20 1 270 1 148 1 193 1 195 1 110 5 150 1 273 1 65 9 31 1 114 3 281 4 
38 1 204 1 73 1 207 1 249 2 166 1 303 1 305 9 261 2 313 7 95 2 142 1 20 1 270 1 148 1 193 1 195 1 110 5 150 1 273 1 65 9 31 1 114 3 281 4 
70 1 252 1 84 1 
84 1 64 2 258 1 
137 1 223 1 49 1 
137 1 223 1 107 1 49 1 
137 1 223 1 327 1 49 1 
227 1 76 1 2 1 105 1 297 1 27 1 169 1 30 1 252 1 84 1 216 1 57 1 284 1 58 1 
137 1 49 1 
129 1 227 1 22 1 115 1 297 1 
227 2 252 1 8 1 22 1 115 1 84 1 297 2 285 1 
227 1 22 1 297 1 
137 1 223 1 227 1 115 1 297 1 327 1 320 1 49 1 
84 1 
0 1 227 2 252 1 22 1 115 1 84 1 297 2 285 1 
311 1 227 5 246 2 22 2 297 5 248 2 81 1 252 1 115 2 214 2 67 1 256 1 84 1 118 1 154 1 87 1 285 1 12 1 241 1 
147 1 157 1 
147 1 157 1 
293 1 173 1 
293 1 173 1 
293 1 173 1 
240 1 147 1 157 1 
226 1 147 1 157 1 
293 1 173 1 5 1 147 2 259 1 157 2 
240 1 147 1 157 1 
240 1 147 1 157 1 
121 1 147 1 157 1 
121 1 147 1 157 1 
121 1 147 1 157 1 
183 1 302 1 227 1 186 1 132 1 124 1 34 1 297 1 147 1 49 1 157 1 
183 2 227 2 186 1 124 2 188 1 4 1 297 2 147 2 149 1 302 2 112 1 132 2 238 1 134 2 84 1 34 3 88 1 259 1 157 2 
207 1 166 1 273 1 
207 1 119 1 166 1 
274 1 187 1 117 1 119 1 166 3 273 2 
274 1 74 1 187 1 119 1 166 2 273 1 
274 2 187 1 119 1 166 2 273 1 
40 1 246 1 43 1 297 5 248 1 209 1 251 1 171 1 252 1 214 1 10 1 175 1 84 2 258 1 12 2 93 1 311 1 263 1 227 5 141 1 22 1 268 2 231 1 64 3 272 2 29 1 276 1 115 4 32 1 67 3 326 2 285 1 
40 3 246 2 43 2 297 9 45 5 248 2 209 1 251 3 129 5 252 1 214 2 256 1 84 5 258 3 135 1 12 6 221 1 92 1 93 2 311 1 263 3 227 9 141 3 22 6 268 6 230 1 64 9 276 4 198 1 115 7 32 3 67 8 201 1 326 6 285 1 
40 1 246 1 43 1 297 3 248 1 251 1 252 1 171 1 214 1 256 1 84 3 258 2 12 2 93 1 263 1 227 3 141 1 268 2 64 4 272 1 29 1 276 1 115 2 67 3 32 1 326 2 
40 2 246 1 43 1 297 4 248 1 251 2 252 1 171 1 214 1 256 1 84 4 258 3 12 4 92 1 93 1 263 2 227 4 141 2 268 4 230 1 64 7 272 2 29 1 276 2 115 3 67 5 32 2 201 1 326 4 
70 1 7 1 289 1 113 1 109 1 
289 1 35 1 
3 1 
289 1 197 1 19 1 
289 1 116 1 
289 1 197 1 
289 3 197 1 19 1 109 2 79 1 211 1 
251 3 300 1 128 7 82 8 304 1 255 1 89 1 136 1 14 1 138 2 185 4 315 2 317 2 106 5 269 15 32 3 242 2 288 1 
251 3 300 1 128 7 82 8 304 1 255 1 89 3 136 1 14 1 138 2 185 4 315 2 317 2 106 7 269 15 32 3 242 2 288 1 
251 3 300 1 128 7 82 8 304 1 255 1 176 1 89 1 14 1 136 1 138 2 185 4 315 2 317 2 106 5 269 15 32 3 242 2 288 1 
40 3 245 1 294 2 210 1 251 6 128 20 300 2 131 1 82 21 304 1 255 1 89 7 306 3 136 1 14 2 15 1 138 3 263 3 59 1 17 1 185 7 141 3 21 1 315 3 317 2 101 1 318 1 267 1 106 14 269 41 233 4 28 1 32 6 288 1 242 3 
294 4 210 1 251 3 300 1 128 8 82 9 304 1 89 2 309 1 15 2 14 1 136 1 138 2 59 2 185 5 21 2 315 2 317 2 318 2 106 7 269 17 32 3 155 1 288 1 242 2 
204 1 291 2 207 1 163 1 249 1 166 2 46 1 301 1 54 1 253 1 11 1 305 2 180 1 313 1 16 1 95 1 18 1 140 2 142 1 228 1 25 1 190 1 232 2 148 1 193 1 110 1 273 1 65 2 275 1 117 1 119 1 
39 1 291 1 207 1 163 1 249 1 166 2 301 1 54 1 253 1 11 1 305 3 308 1 180 1 95 1 313 2 18 1 140 1 184 1 142 1 228 1 25 1 232 1 148 1 193 1 110 1 273 1 65 3 275 1 117 1 119 1 
39 1 291 1 207 1 163 1 166 2 301 1 253 1 305 2 180 1 313 2 18 1 140 1 184 1 142 1 228 1 25 1 232 1 148 1 193 1 110 1 273 1 65 2 275 1 117 1 119 1 
72 1 289 1 41 1 206 1 291 1 160 1 295 1 163 2 249 1 126 1 301 2 52 1 172 1 253 2 305 1 308 1 180 1 95 1 19 1 18 2 140 1 61 1 232 1 193 2 324 1 65 1 197 1 120 1 36 1 
39 1 204 1 291 1 207 1 163 1 249 1 46 1 166 2 301 1 54 1 253 1 11 1 305 1 180 1 95 1 18 1 140 1 228 1 25 1 232 1 193 1 273 1 65 1 275 1 117 1 119 1 
199 1 
72 1 289 1 206 1 291 2 246 1 160 1 163 2 297 2 248 1 80 1 51 1 52 1 214 1 12 1 180 1 93 1 311 1 19 1 140 2 227 2 22 2 232 2 324 2 197 1 67 1 120 1 285 1 69 1 
203 1 0 1 2 1 76 1 297 3 169 1 216 1 57 1 58 1 220 1 307 1 94 1 227 3 22 2 105 1 27 1 194 1 322 2 30 1 285 1 284 1 244 1 
203 1 0 1 71 1 2 1 76 1 297 3 169 1 252 1 84 1 216 1 57 1 58 1 220 1 94 1 227 3 22 1 105 1 27 1 194 1 322 3 30 1 284 1 285 1 244 1 
0 1 203 1 71 1 2 1 76 1 297 3 169 1 252 1 84 1 216 1 57 1 58 1 220 1 307 1 94 1 227 3 22 2 105 1 27 1 194 1 322 3 30 1 285 1 284 1 286 1 244 1 
0 1 71 4 246 1 2 1 76 1 77 2 248 1 165 1 169 1 252 5 84 5 258 2 12 1 177 1 179 1 94 1 22 7 105 1 27 1 194 1 30 1 284 1 285 3 286 4 37 1 203 1 297 5 48 1 212 2 214 1 216 1 218 1 57 1 58 1 307 4 220 1 311 1 227 5 144 1 322 6 323 2 67 1 239 2 244 1 
71 2 246 1 2 1 76 1 77 2 248 1 169 1 252 1 84 2 86 1 258 2 12 1 177 1 94 1 22 4 105 1 27 1 194 1 30 1 284 1 285 2 286 2 203 1 297 4 212 2 214 1 216 1 218 1 57 1 58 1 220 1 307 2 311 1 227 4 64 2 322 4 323 2 67 1 239 2 244 1 
203 1 71 2 246 1 2 1 76 1 77 2 297 4 248 1 212 2 169 1 252 1 214 1 84 1 216 1 218 1 258 2 57 1 177 1 12 1 58 1 307 2 220 1 179 1 94 1 311 1 227 4 22 4 105 1 144 1 27 1 194 1 322 4 323 2 30 1 239 2 67 1 285 2 284 1 286 2 37 1 244 1 
203 1 71 2 246 1 2 1 76 1 77 2 297 4 248 1 212 2 169 1 252 1 214 1 84 1 216 1 218 1 258 2 57 1 177 1 12 1 58 1 307 2 220 1 179 1 94 1 311 1 227 4 22 4 105 1 144 1 27 1 194 1 322 4 323 2 30 1 239 2 67 1 285 2 284 1 286 2 37 1 244 1 
203 1 71 2 246 1 2 1 76 1 247 2 297 4 248 1 212 2 169 1 53 1 252 1 214 1 84 1 216 1 57 1 177 1 12 1 58 1 307 2 220 1 94 1 182 1 311 1 227 4 22 4 105 1 64 2 27 1 194 1 322 4 323 2 30 1 235 1 67 1 282 2 285 2 284 1 286 2 37 1 244 1 
203 1 71 3 246 1 2 1 76 1 77 2 297 4 248 1 165 1 212 2 169 1 252 1 214 1 84 1 216 1 218 1 258 2 57 1 177 1 12 1 58 1 179 1 220 1 307 3 94 1 311 1 227 4 22 5 105 1 144 1 27 1 194 1 322 5 323 2 30 1 239 2 67 1 285 2 284 1 37 1 286 3 244 1 
203 1 71 3 246 1 2 1 76 1 77 2 297 4 248 1 165 1 212 2 169 1 252 1 214 1 84 1 216 1 218 1 258 2 57 1 177 1 12 1 58 1 179 1 220 1 307 3 94 1 311 1 227 4 22 5 105 1 144 1 27 1 194 1 322 5 323 2 30 1 239 2 67 1 285 2 284 1 37 1 286 3 244 1 
71 2 246 1 2 1 76 1 247 2 248 1 169 1 252 1 84 1 86 1 12 1 177 1 94 1 22 4 105 1 27 1 194 1 30 1 282 2 284 1 285 2 286 2 203 1 297 4 212 2 53 1 214 1 216 1 57 1 58 1 220 1 307 2 311 1 227 4 64 2 322 4 323 2 67 1 244 1 
40 2 159 1 245 2 294 4 78 1 296 1 251 2 128 10 82 9 131 1 55 1 56 1 89 2 309 1 306 2 15 2 181 2 263 2 59 2 185 1 141 2 21 2 265 1 318 2 106 3 269 19 192 1 233 3 32 2 325 3 243 1 
40 2 159 1 245 2 294 4 78 1 296 1 251 2 128 10 82 9 131 1 55 1 56 1 89 2 309 1 306 2 15 2 181 2 263 2 59 2 185 2 141 2 21 2 265 1 318 2 106 4 269 19 192 1 233 3 32 2 325 3 243 1 
40 2 159 1 245 1 294 2 78 1 296 1 251 3 128 10 82 11 131 1 304 1 9 1 89 2 309 1 306 2 136 1 15 1 138 1 181 1 263 2 59 1 185 3 141 2 21 1 315 1 317 1 265 1 318 1 106 5 269 21 233 2 32 3 325 2 242 1 
40 3 159 1 245 1 294 4 78 1 251 3 128 10 82 9 131 1 56 1 257 1 89 3 309 1 306 1 15 2 181 1 263 3 59 2 185 3 141 3 21 2 265 1 318 2 106 6 269 19 192 2 233 2 32 3 325 2 243 1 
181 2 59 1 159 2 245 1 21 1 294 2 265 1 318 1 78 1 296 1 269 6 233 1 128 3 82 3 325 2 306 1 309 1 15 1 
183 1 302 1 132 1 124 1 133 1 188 1 88 1 147 1 259 1 157 1 
158 1 226 1 
183 1 302 1 132 1 124 1 33 1 316 1 147 1 287 1 157 1 
240 1 62 1 
103 1 5 1 121 1 
183 1 227 1 186 1 124 1 188 1 4 1 297 1 147 1 149 1 302 1 112 1 132 1 134 1 84 1 34 2 88 1 259 1 157 1 
183 1 227 1 186 1 124 1 188 1 4 1 297 1 147 1 149 1 302 1 112 1 132 1 134 1 84 1 34 2 88 1 259 1 157 1 
183 1 227 1 186 1 124 1 188 1 4 1 297 1 147 1 149 1 302 1 112 1 132 1 134 1 84 1 34 2 88 1 259 1 157 1 
5 1 240 1 62 1 
5 1 240 1 62 1 
103 1 121 1 
103 1 5 1 121 1 
104 1 91 1 
158 1 290 1 183 1 226 1 227 1 124 1 104 1 297 1 147 1 149 1 49 1 276 1 302 1 132 1 115 1 10 1 175 1 254 1 134 1 34 1 91 1 157 1 
289 1 205 1 291 2 2 2 76 2 294 2 42 1 163 1 162 1 298 1 50 1 128 1 213 1 82 1 178 1 180 1 15 1 16 2 59 1 140 2 21 1 23 1 266 1 318 1 269 2 232 2 27 2 321 1 196 1 197 1 279 1 
39 1 140 2 291 2 292 1 228 1 207 1 163 1 190 1 232 2 166 2 273 1 275 1 54 1 236 1 253 1 117 1 119 1 328 1 180 1 
39 1 140 1 291 1 228 1 207 1 163 1 232 1 166 2 273 1 275 1 54 1 253 1 117 1 119 1 328 1 222 1 180 1 
72 1 289 1 19 1 140 1 206 1 291 1 160 1 163 2 61 1 232 1 324 1 277 1 52 1 197 1 236 1 172 1 253 1 120 1 180 1 
39 1 140 1 291 1 292 1 228 1 207 1 163 1 232 1 166 2 273 1 275 1 54 1 236 1 253 1 117 1 119 1 328 1 180 1 
283 1 
70 1 252 1 67 1 84 1 154 1 87 1 12 1 
246 1 77 1 297 1 248 1 252 1 214 1 84 2 218 1 258 1 12 1 311 1 227 1 22 1 64 1 239 1 67 1 285 1 
246 4 163 4 248 4 80 1 6 2 251 2 252 2 83 2 174 2 84 8 87 1 258 6 12 8 93 2 180 3 263 2 19 3 22 5 108 2 268 6 189 1 190 1 109 2 191 2 197 3 116 2 32 2 35 3 285 3 40 2 289 10 123 2 291 3 44 1 297 5 47 2 211 1 214 4 58 2 219 2 311 4 140 3 227 5 143 1 141 2 60 2 63 1 64 12 232 3 324 1 234 1 67 9 154 1 326 6 
40 2 123 1 245 1 246 2 297 1 248 2 80 1 251 2 170 1 252 2 214 2 83 2 84 5 258 3 12 5 306 1 93 1 311 2 263 2 227 1 141 2 22 1 24 1 264 1 102 1 319 1 268 5 64 6 233 1 278 1 200 1 67 8 32 2 326 5 285 1 
137 1 311 1 138 1 223 1 227 1 246 1 317 1 297 1 248 1 320 1 49 1 251 1 214 1 67 2 32 1 83 2 327 1 12 1 179 1 288 1 242 1 
311 1 246 1 248 1 252 1 214 1 67 1 84 1 87 1 154 1 12 1 
40 2 263 2 123 1 141 2 268 5 64 10 251 2 32 2 67 5 174 1 83 2 84 5 326 5 258 5 12 5 
227 1 252 1 22 1 84 1 297 1 285 1 
72 1 289 1 206 1 246 1 291 2 160 1 163 2 297 1 248 1 80 1 51 1 52 1 214 1 12 1 180 1 93 1 311 1 19 1 140 2 227 1 22 2 232 2 324 2 234 1 197 1 67 1 120 1 285 1 69 1 
137 1 223 1 107 1 49 1 
311 1 246 1 315 1 268 2 64 4 248 1 80 1 252 2 214 1 67 1 84 4 326 2 258 2 12 2 93 1 
312 1 132 1 124 1 
132 1 124 1 188 1 91 1 111 1 
312 1 132 1 124 1 
312 1 132 1 124 1 
151 1 132 1 124 1 
151 1 132 1 124 1 
151 1 132 1 124 1 
132 1 124 1 
147 1 157 1 
294 4 210 1 251 3 128 9 82 9 304 1 89 3 136 1 15 2 138 2 59 2 185 4 21 2 315 1 317 2 318 2 106 7 269 18 32 3 288 1 242 2 
70 1 138 1 185 2 315 1 317 1 106 2 269 6 251 1 128 3 82 3 304 1 32 1 136 1 242 1 
139 1 40 1 263 1 59 1 185 1 141 1 21 1 294 2 318 1 106 2 269 4 251 1 128 2 82 2 32 1 89 1 15 1 
40 1 263 1 185 1 141 1 245 1 106 2 269 7 233 2 251 1 128 4 82 3 131 1 32 1 89 1 306 1 
40 2 294 2 125 1 210 1 251 5 128 13 131 1 82 13 304 1 9 1 89 2 306 2 136 1 15 1 138 2 263 2 59 1 185 5 141 2 21 1 315 1 317 2 318 1 106 7 269 26 233 2 32 5 288 1 242 2 
128 1 269 1 233 1 
82 1 269 1 306 1 
139 1 40 1 263 1 59 1 185 2 141 1 294 2 21 1 318 1 106 3 269 6 251 1 128 3 82 3 32 1 174 1 89 1 15 1 
40 2 245 1 294 2 251 2 128 6 82 6 170 1 89 1 306 1 309 1 15 1 263 2 59 1 185 1 141 2 21 1 264 1 102 1 24 1 318 1 106 2 269 12 233 1 278 1 32 2 
138 1 185 1 317 1 106 2 269 6 251 1 128 3 82 3 32 1 89 1 242 1 
138 1 59 1 185 1 21 1 294 2 318 1 106 2 269 3 210 1 128 2 66 1 82 1 304 1 89 1 242 1 136 1 15 1 
245 1 294 2 251 3 128 8 82 8 304 1 89 1 306 1 309 1 15 1 136 1 138 2 59 1 185 4 21 1 315 1 264 1 317 2 318 1 106 5 269 16 233 1 32 3 288 1 242 2 
40 1 245 1 294 4 251 3 128 9 82 10 131 1 304 1 89 2 309 1 306 1 136 1 15 2 138 2 139 1 263 1 59 2 185 4 21 2 315 1 317 2 264 1 318 2 106 6 269 19 233 2 32 4 288 1 242 2 
40 2 245 1 294 6 210 1 251 5 128 14 82 13 170 1 304 1 89 2 306 1 309 1 136 1 15 3 138 2 139 1 263 2 59 3 185 5 141 2 21 3 315 1 317 2 24 1 264 1 102 1 318 3 106 7 269 27 233 1 278 1 32 5 288 1 242 2 
40 2 245 1 294 6 210 1 251 4 128 11 82 14 170 1 304 1 89 4 306 1 309 1 136 1 15 3 138 2 139 1 263 2 59 3 185 5 141 1 21 3 315 1 317 2 264 1 102 1 24 1 318 3 106 9 269 25 233 1 278 1 32 5 288 1 242 2 
245 1 294 2 251 3 128 8 82 8 304 1 89 1 306 1 309 1 15 1 136 1 138 2 59 1 185 4 21 1 315 1 264 1 317 2 318 1 106 5 269 16 233 1 32 3 288 1 242 2 
40 2 245 1 294 2 251 2 128 6 82 6 170 1 89 1 306 1 309 1 15 1 263 2 59 1 185 1 141 2 21 1 264 1 102 1 24 1 318 1 106 2 269 12 233 1 278 1 32 2 
40 2 245 1 294 8 210 2 251 4 128 12 170 1 82 14 304 1 89 2 309 1 306 1 136 1 15 4 138 2 139 1 263 2 59 4 185 5 141 1 21 4 315 1 317 2 24 1 264 1 102 1 318 4 106 7 269 26 233 1 278 1 32 5 288 1 242 2 
40 3 245 1 294 8 210 2 251 2 128 7 170 1 82 9 56 1 89 3 309 1 306 1 15 4 263 3 59 4 185 3 141 2 21 4 24 1 264 1 102 1 318 4 106 6 269 16 233 1 278 1 32 3 
138 3 185 3 317 1 106 6 269 7 251 1 128 4 82 3 304 1 32 1 89 3 136 2 242 3 
40 2 245 1 294 8 210 2 251 4 128 12 170 1 82 14 304 1 56 1 89 2 309 1 306 1 136 1 15 4 138 2 263 2 59 4 185 5 141 1 21 4 315 1 317 2 24 1 264 1 102 1 318 4 106 7 269 26 233 1 278 1 32 5 288 1 242 2 
138 2 59 1 185 3 294 2 21 1 317 1 318 1 106 5 269 10 251 2 128 5 82 5 32 2 89 2 309 1 15 1 288 1 242 2 
263 1 59 1 21 1 294 2 318 1 106 1 269 2 82 2 32 1 89 1 309 1 15 1 
40 1 263 1 59 1 185 1 141 1 21 1 294 2 318 1 106 2 269 4 251 1 128 2 82 2 32 1 89 1 309 1 15 1 
138 1 59 3 185 1 21 3 294 6 318 3 106 2 269 3 210 1 128 2 66 1 82 1 56 1 89 1 309 1 15 3 242 1 
40 2 245 1 294 8 210 1 251 5 128 16 82 16 304 1 56 1 89 4 309 1 306 3 136 1 15 4 138 2 139 1 263 2 59 4 17 1 185 5 141 2 21 4 315 1 317 2 101 1 318 4 106 9 269 32 233 3 28 1 32 5 288 1 242 2 
26 1 
225 1 215 1 26 1 202 1 13 1 156 1 
70 1 140 1 160 1 291 1 232 1 324 1 
90 1 49 1 
90 1 49 1 
90 1 49 1 
96 1 19 1 289 4 227 2 140 3 291 3 22 1 146 1 163 1 297 2 189 1 109 1 232 3 250 1 324 1 197 1 252 1 116 1 84 1 35 1 58 1 219 1 180 1 
96 1 19 1 289 4 227 2 140 3 291 3 60 1 22 1 163 1 297 2 189 1 109 1 232 3 324 1 197 1 252 1 116 1 84 1 35 1 58 1 219 1 180 1 
140 1 291 1 163 1 232 1 127 1 180 1 
19 1 289 1 140 1 291 1 163 2 208 1 232 1 211 1 324 1 197 1 52 1 120 1 180 1 
90 1 49 1 
289 2 246 2 291 1 297 3 248 2 47 1 6 1 252 1 214 2 84 1 87 1 12 1 58 1 311 2 140 1 227 3 60 1 22 2 108 1 109 1 232 1 324 1 234 1 115 1 67 1 35 1 154 1 285 1 
19 1 289 2 140 2 291 2 143 1 163 2 190 1 109 1 232 2 127 1 211 1 197 1 180 1 
72 1 289 1 19 1 140 2 291 2 160 1 206 1 163 2 190 1 232 2 324 1 52 1 197 1 120 1 180 1 
72 1 19 1 289 1 97 1 140 1 291 1 206 1 163 2 232 1 197 1 52 1 120 1 180 1 
140 1 291 1 228 1 207 1 119 1 163 1 232 1 166 1 180 1 324 1 
39 1 289 1 197 1 140 2 291 2 266 1 163 1 190 1 232 2 180 1 196 1 
72 1 19 1 289 3 1 1 140 2 206 1 160 1 291 3 161 1 266 1 163 3 190 1 232 3 324 1 52 1 197 2 120 1 180 2 
72 1 19 1 289 3 1 1 140 2 206 1 160 1 291 3 98 1 266 1 163 3 190 1 232 3 324 1 52 1 197 2 120 1 180 2 
90 1 49 1 
19 1 289 1 140 1 291 1 163 2 189 1 208 1 232 1 211 1 197 1 52 1 120 1 180 1 
70 1 142 1 148 1 110 1 
65 1 95 1 142 1 305 1 249 1 148 1 110 1 
301 1 65 1 193 1 
204 1 95 1 142 1 145 1 249 1 299 1 148 1 110 1 271 2 65 3 237 1 305 3 
313 1 65 2 95 1 142 1 305 2 249 1 148 1 110 1 261 1 
204 1 95 1 207 1 249 1 166 1 110 1 273 1 65 1 303 1 305 1 281 1 
65 1 95 1 204 1 305 1 249 1 148 1 110 1 
65 1 95 1 204 1 142 1 305 1 249 1 148 2 
204 1 95 2 249 2 148 1 168 1 110 1 65 2 130 1 280 1 305 2 
204 1 95 1 313 2 73 1 142 1 249 1 148 1 110 2 150 1 65 3 114 1 305 3 281 1 
204 1 95 1 313 1 142 1 100 1 207 1 249 1 148 1 166 2 110 1 273 1 65 2 305 2 117 1 119 1 
204 1 95 2 313 2 142 1 249 2 270 1 148 1 110 2 65 4 114 1 305 4 281 1 261 1 
65 1 95 1 204 1 142 1 305 1 249 1 148 1 110 1 
313 2 95 1 142 2 145 1 249 1 148 2 271 1 110 3 152 1 65 4 114 1 237 1 305 4 281 1 
38 1 313 1 65 2 95 1 204 1 314 1 142 1 305 2 249 1 148 1 260 1 110 1 
204 1 95 1 142 1 145 1 249 1 164 1 148 1 110 1 271 2 65 3 237 2 305 3 
262 2 85 1 110 2 310 1 
122 1 65 1 95 1 204 1 305 1 249 1 
313 1 65 2 95 1 204 1 73 1 142 1 305 2 249 1 148 1 110 1 
224 1 
65 1 95 1 204 1 142 1 305 1 249 1 148 1 110 1 
313 1 204 1 95 1 73 1 142 1 249 1 148 1 271 1 110 1 65 3 305 3 
152 1 114 1 281 1 110 1 
148 1 110 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (34,316) 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 370 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 358 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (157,266) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (34,316) 343 162 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 358 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
27 1 135 2 137 1 112 6 300 2 57 2 32 1 362 1 213 3 158 1 270 1 85 1 218 2 247 9 38 2 86 2 173 5 67 1 350 2 199 1 319 1 352 9 280 1 205 1 238 1 239 1 131 1 52 4 
27 1 135 2 137 1 112 6 300 2 57 2 32 1 362 1 213 3 158 1 270 1 85 1 218 2 247 9 38 2 86 2 173 5 67 1 350 2 199 1 319 1 352 9 280 1 205 1 238 1 239 1 131 1 52 4 
27 1 135 2 137 1 112 7 300 2 57 2 32 1 362 1 213 4 158 1 270 1 85 1 218 2 247 10 38 2 86 2 173 6 67 1 350 2 199 1 319 1 352 10 280 1 205 1 238 1 239 1 131 1 52 5 
135 2 137 1 112 4 300 2 57 2 32 1 362 1 213 2 158 1 270 1 85 1 218 2 247 7 38 2 86 1 173 4 67 1 350 2 199 1 319 1 352 7 280 1 205 1 238 1 239 1 131 1 52 3 
27 1 135 1 112 3 137 1 300 1 57 1 173 3 213 1 350 1 32 1 199 1 352 4 280 1 205 1 218 1 247 4 86 2 52 2 
300 1 244 1 173 1 57 1 362 1 32 1 148 1 350 1 199 1 352 2 205 1 85 1 218 1 247 2 38 1 47 1 
112 1 300 2 57 2 173 2 32 1 213 1 199 1 352 3 205 1 247 3 38 1 131 1 52 1 
27 1 135 1 112 7 137 1 300 2 57 2 213 3 32 1 270 1 218 1 247 9 38 1 86 2 13 1 173 5 350 1 199 1 319 1 352 9 280 1 205 1 131 1 282 1 52 4 
27 1 135 1 112 7 137 1 300 2 57 2 213 3 32 1 270 1 218 1 247 9 38 1 86 2 13 1 173 5 350 1 199 1 319 1 352 9 280 1 205 1 131 1 282 1 52 4 
358 1 320 1 109 1 
189 2 320 1 241 1 
353 2 76 1 107 2 184 1 248 2 321 2 305 2 4 2 
98 2 56 1 187 1 330 1 3 1 333 1 116 1 305 2 4 2 309 1 37 1 367 1 166 2 144 2 289 2 120 1 248 2 249 1 11 1 107 2 72 1 321 2 73 1 353 2 232 1 253 1 76 1 281 1 184 1 355 1 283 1 259 1 95 2 
353 1 10 1 107 1 184 1 275 1 248 1 321 1 305 1 259 1 4 1 
327 1 80 1 361 1 115 1 331 1 320 1 109 1 305 1 321 1 294 1 161 1 248 1 240 1 259 1 
327 1 80 2 107 1 115 1 331 1 320 1 109 1 305 1 321 1 4 1 294 2 161 1 353 1 248 1 259 1 
269 1 80 1 119 1 177 1 294 1 
269 1 129 1 80 2 138 1 177 1 320 1 109 1 294 2 
269 1 80 1 294 1 
10 1 80 1 107 1 177 1 305 1 321 1 294 1 4 1 353 1 82 1 184 1 275 1 248 1 259 1 
320 1 
269 1 129 1 80 2 177 1 318 1 320 1 109 1 294 2 
97 2 80 5 212 1 177 2 15 1 320 1 109 1 294 5 231 1 375 1 295 1 269 2 150 1 19 1 129 1 154 1 169 2 62 2 103 1 
358 1 76 1 
64 1 107 1 305 2 321 2 4 1 353 1 76 2 217 1 248 2 
343 1 157 1 316 1 
98 1 333 1 116 1 296 1 309 1 76 1 281 1 289 1 259 1 95 1 
172 1 98 1 175 1 107 1 316 1 116 1 333 1 305 1 321 1 4 1 309 1 289 1 248 1 95 1 
353 1 76 1 175 1 107 3 248 3 321 3 305 3 4 3 
107 1 275 1 248 1 321 1 305 1 259 1 4 1 
353 1 64 1 217 1 107 1 248 1 321 1 305 1 259 1 4 1 
327 1 98 1 80 1 56 1 330 1 115 1 331 1 116 1 333 1 305 3 4 3 161 1 309 1 37 1 367 1 166 1 144 2 289 1 120 1 290 1 248 3 249 1 198 1 64 1 172 1 11 1 175 1 107 3 321 3 294 1 73 1 353 2 232 1 76 1 184 1 283 1 259 1 95 1 
76 1 175 1 107 1 248 2 240 1 304 1 321 2 305 2 4 1 
64 1 198 1 327 1 172 1 80 1 175 2 107 3 115 1 331 1 320 1 305 3 321 3 294 1 4 3 161 1 353 1 273 1 248 3 259 1 
64 1 175 1 157 1 107 2 316 1 305 2 321 2 4 2 353 1 248 2 
98 1 333 1 116 1 309 1 76 1 281 1 289 1 259 1 95 1 
98 1 69 1 279 1 321 1 305 1 203 1 76 1 309 1 281 1 310 1 289 1 50 1 78 1 368 1 259 1 95 1 41 1 
187 2 157 2 266 1 34 1 5 1 81 1 365 1 37 1 367 1 166 4 144 2 223 1 120 2 39 1 196 1 11 1 343 2 123 1 316 2 91 1 73 1 233 1 232 1 283 1 
254 1 107 1 115 1 248 1 321 1 305 1 259 1 4 1 
64 1 172 1 175 2 107 4 304 1 305 5 321 5 4 4 353 1 377 1 76 1 192 1 248 5 240 1 
254 1 107 2 275 1 248 2 321 2 305 2 259 1 4 2 
364 1 193 1 
364 1 193 1 
84 1 124 1 
84 1 124 1 
84 1 124 1 
364 1 193 1 100 1 
364 1 193 1 286 1 
226 1 364 2 84 1 90 1 193 2 124 1 
364 1 193 1 100 1 
364 1 193 1 100 1 
364 1 193 1 110 1 
364 1 193 1 110 1 
364 1 193 1 110 1 
171 2 209 2 63 3 122 1 90 1 291 1 80 2 348 1 285 2 277 1 127 2 320 1 294 2 364 2 204 1 163 1 102 1 193 2 255 2 
209 1 80 1 285 1 305 2 286 1 4 2 364 1 35 1 272 1 193 1 165 1 248 2 63 1 171 1 312 1 107 2 277 1 127 1 321 2 294 1 76 1 153 1 258 1 133 1 
135 1 218 1 350 1 
218 1 350 1 148 1 
135 2 42 1 350 3 148 1 298 1 71 1 
135 1 350 2 148 1 284 1 298 1 71 1 
135 1 350 2 148 1 298 1 71 2 
97 1 211 1 99 1 80 5 189 3 33 2 268 1 335 1 269 1 307 2 81 1 365 1 165 1 169 1 168 1 62 1 196 1 103 3 312 1 177 4 15 2 320 2 109 1 294 5 374 1 231 1 233 1 129 1 20 1 152 2 258 1 241 1 
97 2 99 2 55 1 80 9 214 1 332 1 189 9 33 6 101 1 335 3 269 6 81 3 365 3 119 5 169 2 168 2 40 1 62 2 196 3 103 8 177 7 15 6 320 5 109 1 294 9 374 1 375 1 231 1 233 3 129 1 152 6 23 5 51 1 258 4 241 3 
97 1 99 1 80 3 189 4 33 2 268 1 335 1 307 1 81 1 365 1 169 1 168 1 62 1 103 3 196 1 177 2 15 2 320 3 109 1 294 3 375 1 233 1 20 1 152 2 258 1 241 2 
97 1 99 1 55 1 80 4 214 1 332 1 189 7 33 4 268 1 335 2 307 2 81 2 365 2 169 1 168 1 62 1 103 5 196 2 177 3 15 4 320 4 109 1 294 4 375 1 233 2 20 1 152 4 258 2 241 3 
358 1 267 1 368 1 
190 1 368 1 
234 1 
78 1 368 1 
271 1 78 1 334 1 267 2 368 3 41 1 
78 1 368 1 41 1 
345 1 368 1 
276 1 329 1 187 7 91 3 351 2 118 1 365 3 75 1 235 1 166 13 22 1 338 1 183 2 120 6 39 4 224 1 196 3 88 2 
276 3 329 1 187 7 91 3 351 2 118 1 365 3 75 1 235 1 166 13 22 1 338 1 183 2 120 6 39 6 224 1 196 3 88 2 
360 1 187 7 329 1 118 1 365 3 166 13 338 1 39 4 120 6 224 1 196 3 88 2 276 1 91 3 351 2 75 1 235 1 22 1 183 2 
325 1 187 20 329 2 117 3 59 1 139 4 335 3 308 1 216 1 118 1 81 3 365 6 37 1 166 39 144 2 338 2 120 19 39 13 224 1 196 6 88 3 11 1 104 1 276 7 292 1 91 6 351 3 73 1 233 3 75 1 235 2 22 1 183 2 283 1 186 1 
187 7 329 1 118 1 365 3 37 1 166 13 144 2 338 1 39 4 120 6 196 3 88 2 11 1 276 1 91 3 351 2 73 1 21 1 75 1 235 1 22 1 183 2 283 1 111 1 
135 1 112 1 98 1 300 1 54 1 243 1 57 1 32 1 83 1 218 1 247 2 38 1 337 1 289 1 313 1 42 1 173 1 346 1 148 1 350 2 199 1 125 1 69 1 202 1 352 2 205 1 237 1 50 1 95 1 260 1 
135 1 98 1 112 2 300 1 54 1 243 1 57 1 218 1 247 3 38 1 337 1 289 1 170 1 344 1 42 1 313 1 173 1 346 1 148 1 350 2 199 1 69 1 202 1 352 3 376 1 205 1 237 1 50 1 95 1 260 1 
135 1 98 1 112 2 54 1 243 1 218 1 247 2 38 1 289 1 170 1 42 1 173 1 346 1 148 1 350 2 199 1 69 1 202 1 352 2 376 1 205 1 237 1 50 1 95 1 260 1 
98 1 300 1 243 2 264 1 57 1 309 1 247 1 38 2 289 1 368 1 341 1 344 1 346 2 317 1 69 1 352 1 202 2 252 1 236 1 297 1 50 1 78 1 95 1 
135 1 98 1 54 1 300 1 42 1 313 1 243 1 57 1 346 1 350 2 148 1 32 1 69 1 125 1 352 1 202 1 376 1 218 1 237 1 247 1 337 1 38 1 289 1 50 1 260 1 95 1 
156 1 
97 1 327 1 98 2 328 1 2 1 189 2 331 1 142 1 289 2 62 1 248 1 146 1 103 2 12 2 69 1 70 1 201 2 15 2 109 1 16 1 294 5 18 1 77 2 297 1 78 1 155 1 259 1 302 4 80 5 303 2 361 1 115 1 305 1 269 6 161 1 309 2 168 1 169 1 368 1 229 2 317 1 126 1 320 2 372 1 373 1 321 1 231 1 129 3 45 2 182 2 323 1 50 1 240 1 241 2 95 2 
327 1 328 1 302 2 80 3 361 1 115 1 318 1 331 1 70 1 372 1 305 1 321 1 294 3 269 2 161 1 18 1 129 1 182 1 323 1 248 1 240 1 259 1 
327 1 328 1 302 3 80 3 361 1 115 1 331 1 305 1 269 1 161 1 248 1 12 1 70 1 318 1 372 1 320 1 321 1 109 1 294 3 18 1 129 1 323 1 240 1 259 1 
327 1 328 1 302 3 80 3 361 1 115 1 331 1 305 1 161 1 269 2 248 1 12 1 318 1 70 1 201 1 372 1 320 1 321 1 109 1 294 3 18 1 129 1 182 1 323 1 240 1 259 1 
327 1 97 1 328 1 331 1 248 1 62 1 103 1 12 4 70 1 201 4 15 1 109 5 149 1 16 1 294 5 18 1 77 2 155 1 259 1 302 6 80 5 361 1 303 2 115 1 305 1 161 1 269 7 169 1 87 1 121 1 371 1 229 2 318 1 372 1 320 5 321 1 231 1 129 3 45 2 182 4 323 1 49 1 240 1 241 2 
327 1 97 1 328 1 331 1 189 2 248 1 62 1 103 1 146 1 12 2 70 1 15 1 201 2 16 1 109 1 294 4 18 1 77 2 155 1 259 1 302 4 80 4 361 1 303 2 115 1 305 1 161 1 269 4 169 1 229 2 372 1 320 2 321 1 231 1 129 2 45 2 182 2 323 1 240 1 241 2 
327 1 97 1 328 1 302 4 80 4 303 2 361 1 115 1 331 1 305 1 269 4 161 1 169 1 248 1 62 1 103 1 87 1 12 2 371 1 229 2 70 1 201 2 15 1 320 1 372 1 109 1 16 1 321 1 149 1 294 4 231 1 18 1 129 2 45 2 77 2 182 2 323 1 155 1 240 1 241 2 259 1 
327 1 97 1 328 1 302 4 80 4 303 2 361 1 115 1 331 1 305 1 269 4 161 1 169 1 248 1 62 1 103 1 87 1 12 2 371 1 229 2 70 1 201 2 15 1 320 1 372 1 109 1 16 1 321 1 149 1 294 4 231 1 18 1 129 2 45 2 77 2 182 2 323 1 155 1 240 1 241 2 259 1 
370 1 327 1 328 1 302 2 80 2 361 1 115 1 331 1 70 1 372 1 305 1 321 1 294 2 161 1 18 1 323 1 248 1 240 1 259 1 
97 1 327 1 328 1 302 5 80 4 303 2 361 1 115 1 331 1 305 1 161 1 269 5 169 1 62 1 248 1 103 1 87 1 121 1 12 3 371 1 229 2 70 1 15 1 201 3 320 1 372 1 109 1 16 1 149 1 321 1 294 4 231 1 18 1 129 2 45 2 77 2 182 3 323 1 155 1 240 1 241 2 259 1 
97 1 327 1 328 1 302 5 80 4 303 2 361 1 115 1 331 1 305 1 161 1 269 5 169 1 62 1 248 1 103 1 87 1 121 1 12 3 371 1 229 2 70 1 15 1 201 3 320 1 372 1 109 1 16 1 149 1 321 1 294 4 231 1 18 1 129 2 45 2 77 2 182 3 323 1 155 1 240 1 241 2 259 1 
97 1 327 1 328 1 302 4 80 4 303 2 361 1 115 1 189 2 331 1 305 1 287 2 269 4 161 1 169 1 62 1 248 1 146 1 103 1 12 2 347 1 70 1 201 2 15 1 320 1 372 1 109 1 16 1 321 1 294 4 231 1 18 1 129 2 77 2 182 2 206 2 323 1 240 1 259 1 
358 1 11 1 187 2 123 1 91 1 351 1 73 1 232 1 76 1 365 1 75 1 367 1 37 1 166 4 22 1 144 2 183 1 120 2 39 1 196 1 283 1 88 1 
187 8 157 4 117 3 139 3 335 2 308 1 216 1 81 2 365 1 37 2 367 2 166 14 144 4 39 2 120 6 249 1 339 1 196 2 11 2 343 11 43 1 276 1 106 1 91 1 316 11 73 2 232 1 233 1 93 1 253 1 76 1 283 2 25 1 
98 1 157 1 187 1 116 1 333 1 160 1 305 1 4 1 309 1 37 1 367 1 166 2 144 2 289 1 120 1 248 1 249 1 369 1 172 1 11 1 175 1 107 1 321 1 73 1 232 1 296 1 76 1 253 1 283 1 299 1 95 1 25 1 
98 1 187 3 157 3 330 1 116 1 333 1 363 1 305 1 4 1 335 1 81 1 162 1 365 1 309 1 164 1 37 2 367 2 166 7 144 4 145 1 289 1 39 1 120 4 248 1 196 1 249 1 172 1 343 3 11 2 175 1 107 1 91 1 316 3 321 1 230 1 73 2 233 1 232 2 283 2 25 1 95 1 
98 7 29 1 187 1 188 1 305 1 4 1 83 1 309 2 37 2 367 2 194 1 166 2 144 4 167 1 289 8 120 1 248 1 368 3 249 1 147 1 11 2 66 1 175 1 123 1 107 1 228 1 317 1 69 2 321 1 376 1 73 2 232 2 253 1 297 1 50 2 78 2 355 2 283 2 95 8 
157 1 187 1 305 1 4 1 335 1 81 1 365 1 37 1 367 1 166 3 144 2 39 1 120 2 248 1 196 1 64 1 343 1 11 1 227 1 107 1 91 1 316 1 321 1 73 1 353 1 232 1 233 1 283 1 25 1 
343 1 11 1 276 1 157 1 187 2 123 1 316 1 73 1 5 1 232 1 81 1 367 1 37 1 166 2 144 2 39 1 283 1 196 1 
343 1 11 1 157 1 123 1 91 1 316 1 73 1 232 1 233 1 365 1 367 1 37 1 166 2 144 2 223 1 39 1 120 2 283 1 
187 2 157 2 335 1 81 1 365 1 37 1 367 1 166 4 144 2 39 2 120 2 196 1 11 1 343 2 276 1 123 1 316 2 91 1 73 1 232 1 233 1 283 1 
29 1 343 1 11 1 276 1 157 1 187 2 316 1 73 1 5 1 232 1 81 1 367 1 37 1 166 2 144 2 39 1 283 1 196 1 
29 1 343 1 11 1 157 1 91 1 316 1 73 1 232 1 233 1 365 1 367 1 37 1 166 2 144 2 223 1 39 1 120 2 283 1 
29 1 343 2 11 1 276 1 157 2 187 2 91 1 316 2 73 1 335 1 233 1 232 1 81 1 365 1 367 1 37 1 166 4 144 2 120 2 39 2 283 1 196 1 
343 2 11 1 276 1 157 2 187 2 91 1 316 2 73 1 335 1 233 1 232 1 81 1 365 1 367 1 37 1 166 4 144 2 120 2 39 2 283 1 196 1 
98 1 187 1 330 1 116 1 333 1 309 1 37 1 367 1 166 2 144 2 289 1 120 1 249 1 11 1 73 1 232 1 253 1 76 1 281 1 283 1 95 1 259 1 
98 1 305 1 309 1 310 1 367 1 37 1 166 1 144 2 289 1 120 1 197 1 368 1 249 1 41 1 11 1 69 1 279 1 321 1 203 1 73 1 232 1 76 1 281 1 78 1 50 1 283 1 259 1 95 1 
187 2 157 2 335 1 81 1 365 1 37 1 367 1 166 4 144 2 39 2 120 2 196 1 11 1 343 2 276 1 316 2 91 1 73 1 232 1 233 1 283 1 25 1 
98 1 157 1 187 1 330 1 116 1 333 1 335 1 81 1 83 1 365 1 37 1 367 1 166 3 144 2 145 1 289 1 39 1 120 2 196 1 11 1 343 1 91 1 316 1 73 1 232 1 233 1 283 1 95 1 
187 2 157 1 305 1 4 1 335 1 81 1 365 1 37 1 367 1 166 3 144 2 120 1 39 1 248 1 196 1 64 1 11 1 343 1 276 1 107 1 316 1 321 1 73 1 353 1 233 1 232 1 130 1 283 1 25 1 
113 1 31 1 187 9 117 1 139 2 335 3 308 1 216 1 81 3 365 3 37 2 195 1 166 19 144 4 120 10 39 6 8 1 196 3 11 2 276 3 14 1 91 3 250 1 68 2 73 2 151 1 233 3 283 2 111 1 357 2 
53 1 136 1 113 2 187 8 117 2 139 2 335 1 308 2 81 1 365 1 37 1 166 16 144 2 120 8 8 1 196 1 11 1 14 1 250 2 68 1 73 1 151 1 233 1 283 1 111 1 357 4 
53 1 136 1 113 2 31 1 187 11 117 3 139 4 335 2 308 3 216 1 81 2 365 2 37 2 166 23 144 4 120 12 39 3 8 1 196 2 11 2 276 2 315 1 14 1 91 1 250 1 68 1 73 2 151 1 233 2 283 2 111 1 357 4 
53 1 136 1 113 2 31 1 187 11 117 3 139 4 335 2 308 3 216 1 81 2 365 2 37 2 166 23 144 4 120 12 39 4 8 1 196 2 11 2 276 2 315 1 14 1 91 2 250 1 68 1 73 2 151 1 233 2 283 2 111 1 357 4 
53 1 136 1 113 1 187 24 117 4 139 4 335 5 308 2 216 2 81 5 365 8 37 1 166 48 144 2 120 24 39 13 8 1 196 8 88 3 11 1 276 5 14 1 91 8 250 1 68 1 351 3 73 1 151 1 233 5 93 2 75 3 22 3 183 3 283 1 111 1 357 4 
209 1 171 1 364 1 163 1 90 1 102 1 193 1 245 1 285 1 127 1 
153 1 286 1 
209 1 171 1 364 1 60 1 242 1 193 1 285 1 127 1 251 1 
171 1 209 1 63 2 122 1 90 1 291 1 80 1 285 1 277 1 127 1 320 1 294 1 364 1 204 1 163 1 102 1 193 1 255 1 
171 1 209 1 63 2 122 1 90 1 291 1 80 1 285 1 277 1 127 1 320 1 294 1 364 1 204 1 163 1 102 1 193 1 255 1 
171 1 209 1 63 2 122 1 90 1 291 1 80 1 285 1 277 1 127 1 320 1 294 1 364 1 204 1 163 1 102 1 193 1 255 1 
226 1 180 1 100 1 
226 1 180 1 100 1 
110 1 222 1 
226 1 110 1 222 1 
35 1 133 1 
209 1 80 1 285 1 305 2 286 1 4 2 364 1 35 1 272 1 193 1 165 1 248 2 171 1 63 1 312 1 291 1 107 2 177 1 127 1 321 2 294 1 76 1 94 1 153 1 255 1 258 1 133 1 
180 1 100 1 
226 1 110 1 222 1 
98 2 187 1 305 2 367 1 219 1 37 1 220 1 166 2 144 2 289 2 120 1 248 2 368 1 249 1 147 1 9 1 89 1 11 1 228 1 69 1 321 2 73 1 232 1 253 1 50 1 78 1 256 1 355 2 283 1 95 2 25 1 
135 1 98 2 342 1 54 1 42 1 313 1 314 1 350 2 148 1 69 1 202 1 376 1 83 1 288 1 218 1 237 1 289 2 50 1 95 2 
135 1 98 1 54 1 42 1 313 1 350 2 148 1 69 1 202 1 376 1 288 1 218 1 237 1 221 1 289 1 50 1 95 1 
98 1 342 1 317 1 69 1 202 1 252 1 309 1 297 1 289 1 50 1 78 1 368 1 257 1 95 1 
135 1 98 1 342 1 54 1 42 1 313 1 314 1 350 2 148 1 69 1 202 1 376 1 288 1 218 1 237 1 289 1 50 1 95 1 
263 1 
150 1 358 1 19 1 15 1 320 1 103 1 109 1 
97 1 80 1 189 1 269 1 169 1 62 1 103 1 229 1 15 1 320 2 109 1 294 1 231 1 129 1 45 1 155 1 241 1 
97 4 98 3 58 1 331 2 189 12 334 1 190 3 335 2 143 2 289 3 62 4 103 9 196 2 345 2 349 1 69 3 200 2 15 8 109 2 17 1 294 5 150 1 19 1 354 1 152 6 79 2 78 3 261 2 262 2 80 5 33 6 267 2 269 5 162 2 81 2 83 1 309 1 365 2 168 2 169 4 368 10 41 3 174 1 176 2 126 1 320 8 231 4 129 3 233 2 50 4 379 2 95 3 134 2 241 6 
53 1 97 1 189 2 33 2 305 1 4 1 117 1 139 1 308 1 82 1 143 1 168 1 169 1 275 1 248 1 62 1 103 2 225 1 10 1 107 1 126 1 15 2 320 2 321 1 109 1 231 1 353 1 152 2 184 1 379 1 259 1 241 1 
97 1 80 1 305 1 4 1 118 1 365 1 82 1 143 1 169 1 275 1 62 1 248 1 196 2 103 2 88 1 10 1 107 1 351 1 15 2 321 1 149 1 294 1 231 1 353 1 183 1 184 1 379 2 259 1 
97 1 15 1 320 1 109 1 231 1 150 1 19 1 169 1 62 1 103 1 
189 10 15 5 33 5 320 5 335 2 233 2 162 1 81 2 365 2 152 5 143 1 379 2 196 2 103 5 241 5 
269 1 129 1 80 1 320 1 109 1 294 1 
97 2 98 4 301 1 80 3 2 1 58 1 269 4 309 2 289 4 169 2 168 2 62 2 368 1 103 2 317 1 69 1 126 2 15 2 373 1 17 2 294 3 375 1 231 1 129 2 297 1 378 1 50 1 78 1 95 4 
98 1 56 1 330 1 333 1 116 1 305 2 4 2 309 1 367 1 37 1 166 1 144 2 289 1 120 1 248 2 249 1 11 1 107 2 321 2 73 1 353 2 232 1 76 1 184 1 283 1 95 1 
97 1 329 1 189 4 126 1 33 2 15 2 320 4 109 2 231 1 152 2 169 1 168 1 62 1 103 1 241 2 
0 1 209 1 127 1 
209 1 102 1 46 1 127 1 133 1 
0 1 209 1 127 1 
0 1 209 1 127 1 
209 1 159 1 127 1 
209 1 159 1 127 1 
209 1 159 1 127 1 
209 1 127 1 
364 1 193 1 
11 2 276 3 187 8 91 3 351 2 73 2 118 1 365 3 75 1 37 2 166 16 22 1 144 4 183 2 120 8 39 6 196 3 283 2 186 1 88 2 
358 1 187 2 91 1 351 1 75 1 365 1 166 4 22 1 183 1 120 2 39 1 196 1 88 1 
11 1 276 1 187 2 91 1 73 1 335 1 233 1 81 1 365 1 274 1 37 1 166 4 144 2 120 2 39 2 283 1 196 1 
276 1 187 3 91 1 117 1 139 2 335 1 308 1 233 1 216 1 81 1 365 1 166 7 120 4 39 2 196 1 
187 12 117 2 335 2 139 2 216 1 118 1 81 2 365 5 37 1 166 24 144 2 120 12 39 6 196 5 88 2 11 1 276 2 106 1 91 4 351 2 73 1 233 2 93 1 75 1 22 1 183 2 283 1 186 1 
139 1 166 1 120 1 
166 1 187 1 117 1 
11 1 276 1 187 3 91 2 73 1 335 1 233 1 162 1 81 1 365 1 37 1 274 1 166 6 144 2 120 3 39 3 283 1 196 1 
53 1 11 1 187 1 117 1 73 1 139 1 308 1 37 1 166 2 144 2 120 1 111 1 283 1 
276 1 187 3 91 1 351 1 365 1 166 6 183 1 120 3 39 2 196 1 88 1 
11 1 276 1 187 1 91 1 351 1 73 1 75 1 37 1 166 3 22 1 144 2 39 2 120 2 24 1 283 1 88 1 186 1 
276 3 187 6 91 3 351 2 118 1 365 2 166 12 183 1 39 6 120 6 196 2 88 2 
11 1 276 1 187 2 73 1 81 1 37 1 166 2 144 2 39 1 111 1 283 1 196 1 
11 1 276 1 187 2 91 1 73 1 335 1 233 1 81 1 365 1 37 1 166 4 144 2 120 2 39 2 111 1 283 1 196 1 
11 3 31 1 276 1 187 1 91 1 351 1 73 3 37 3 166 3 144 6 120 2 39 2 24 1 111 1 283 3 186 1 88 1 
325 1 31 1 187 15 117 3 139 3 335 2 308 1 118 1 81 2 365 5 274 1 37 4 166 30 144 8 120 15 39 8 196 5 88 2 11 4 104 1 276 4 292 1 91 4 351 2 73 4 233 2 75 1 22 1 183 2 283 4 111 1 186 1 
53 1 187 7 117 1 139 1 335 2 308 1 81 2 365 1 37 3 166 12 144 6 61 1 120 5 39 3 196 2 11 3 276 1 91 2 44 1 73 3 74 1 233 1 324 1 283 3 111 1 186 2 
53 1 187 9 117 1 139 2 335 3 308 1 216 1 81 3 365 1 37 4 274 1 166 15 144 8 61 1 120 6 39 4 196 3 11 4 276 2 91 2 44 1 73 4 74 1 233 1 324 1 111 1 283 4 186 2 
53 1 187 7 117 1 139 1 308 1 118 1 365 3 37 2 274 1 166 14 144 4 120 7 39 4 196 3 88 2 11 2 276 1 91 3 351 2 73 2 75 1 22 1 183 2 283 2 111 1 
53 1 187 7 117 1 139 1 308 1 118 1 365 3 37 2 274 1 166 14 144 4 120 7 39 6 196 3 88 2 11 2 276 3 91 3 351 2 73 2 75 1 22 1 183 2 283 2 111 1 
53 1 187 7 117 1 139 1 335 2 308 1 81 2 365 1 37 3 166 12 144 6 61 1 120 5 39 3 196 2 11 3 276 1 91 2 44 1 73 3 74 1 233 1 324 1 283 3 111 1 186 2 
53 1 11 1 187 1 117 1 73 1 139 1 308 1 37 1 166 2 144 2 120 1 111 1 283 1 
53 1 11 2 187 1 117 1 73 2 139 1 308 1 37 2 274 1 166 2 144 4 120 1 111 1 283 2 
53 1 11 2 31 1 187 1 117 1 73 2 139 1 308 1 37 2 166 2 144 4 120 1 283 2 111 1 
276 3 187 3 91 3 351 3 365 1 75 2 166 7 22 1 183 1 120 4 39 6 196 1 88 3 
53 1 11 2 31 1 187 1 117 1 73 2 139 1 308 1 37 2 166 2 144 4 120 1 283 2 111 1 
140 1 76 1 248 1 321 1 305 1 240 1 304 1 
326 1 210 1 30 1 304 1 305 1 321 1 92 1 140 1 76 1 248 1 208 1 240 1 
358 1 98 1 309 1 297 1 317 1 69 1 289 1 50 1 78 1 368 1 95 1 
98 1 175 1 107 1 116 1 305 1 321 1 4 1 76 1 309 1 281 1 289 1 248 1 259 1 95 1 
98 1 175 1 107 1 116 1 305 1 321 1 4 1 17 1 76 1 281 1 289 1 248 1 259 1 95 1 
98 1 262 1 115 1 305 2 4 2 161 1 310 1 289 1 248 2 368 3 41 2 345 1 175 1 107 1 69 1 321 2 17 1 203 1 76 1 281 1 50 1 78 2 95 1 259 2 
262 1 98 3 345 1 359 1 80 2 331 1 69 1 320 1 267 1 109 1 294 2 17 1 190 1 269 1 191 1 309 1 322 1 289 3 78 1 50 1 368 4 41 1 95 3 
262 1 98 3 345 1 80 2 331 1 200 1 69 1 320 1 267 1 109 1 294 2 17 1 190 1 269 1 309 1 322 1 289 3 78 1 50 1 368 4 41 1 95 3 
98 1 194 1 69 1 289 1 50 1 95 1 
340 1 98 6 66 1 188 1 278 1 69 2 334 1 376 1 83 1 309 2 194 1 207 1 167 1 289 7 78 2 50 3 355 1 368 3 147 1 95 7 41 1 
98 1 187 6 330 1 333 1 116 1 305 1 4 1 118 1 365 3 83 1 37 2 367 2 164 1 166 12 220 1 144 4 145 1 289 1 120 6 39 4 248 1 196 3 88 2 11 2 276 1 175 1 107 1 91 3 351 2 321 1 73 2 232 2 76 2 75 1 281 1 22 1 183 2 283 2 259 1 25 1 95 1 
97 2 261 1 98 1 80 3 58 1 331 1 267 1 190 1 269 2 309 1 289 1 169 2 62 2 103 1 368 2 177 1 200 1 15 1 320 1 109 1 294 3 231 2 150 1 19 1 129 1 79 1 95 1 134 1 
98 2 69 1 334 1 267 1 354 1 83 1 194 1 289 2 78 1 50 2 368 2 95 2 41 1 
98 4 317 1 69 1 309 1 83 1 322 1 297 1 289 4 50 1 78 1 368 1 26 1 95 4 
340 1 98 2 69 1 17 1 179 1 207 1 6 1 289 2 78 1 50 2 368 1 95 2 356 1 41 1 
98 1 54 1 309 1 218 1 350 1 148 1 69 1 289 1 50 1 95 1 
98 2 69 1 376 1 83 1 289 2 256 1 78 1 50 1 368 1 95 2 147 1 
98 4 188 1 317 1 69 2 17 1 309 1 83 1 297 1 289 5 167 1 78 2 50 2 368 3 26 1 95 5 147 1 
98 4 188 1 317 1 69 2 246 1 17 1 309 1 83 1 297 1 289 5 78 2 50 2 368 3 26 1 95 5 147 1 
98 1 305 2 4 1 309 1 310 1 289 1 248 1 368 1 41 1 175 1 107 1 69 1 321 2 203 1 76 1 281 1 50 1 78 1 95 1 259 1 
340 1 98 1 278 1 69 1 334 1 17 1 207 1 289 1 78 1 50 2 368 1 95 1 41 1 
89 1 105 1 305 1 321 1 141 1 311 1 219 1 248 1 9 1 
36 1 105 1 48 1 
76 1 141 1 311 1 105 1 132 1 
198 1 327 1 80 2 105 1 177 1 115 1 331 1 320 1 293 1 109 1 294 2 161 1 36 1 76 1 141 2 311 2 48 1 132 2 259 1 
358 1 173 1 205 1 199 1 
300 1 173 1 205 1 57 1 247 1 199 1 352 1 
346 1 247 1 38 1 
300 1 65 1 173 1 57 1 32 1 362 2 108 1 199 1 352 3 205 1 247 3 7 1 
112 1 300 1 173 1 205 1 57 1 247 2 86 1 199 1 352 2 
135 1 137 1 300 1 57 1 173 1 32 1 350 1 352 1 218 1 247 1 52 1 
300 1 173 1 57 1 247 1 32 1 199 1 352 1 
300 1 205 1 57 1 247 1 32 1 199 2 352 1 
300 2 173 1 57 2 32 1 199 1 352 2 128 1 178 1 247 2 181 1 
112 2 300 1 57 1 173 2 32 1 213 1 199 1 319 1 352 3 270 1 205 1 247 3 52 1 
135 1 112 1 300 1 42 1 173 1 57 1 148 1 350 2 32 1 199 1 352 2 366 1 205 1 218 1 247 2 
27 1 112 2 300 2 57 2 173 2 32 1 213 1 199 1 352 4 205 1 247 4 86 1 52 1 
300 1 173 1 205 1 57 1 247 1 32 1 199 1 352 1 
96 1 112 2 300 1 57 1 173 3 362 1 213 1 108 1 199 2 352 4 205 2 247 4 52 1 7 1 
112 1 300 1 13 1 173 1 57 1 32 1 199 1 114 1 352 2 336 1 205 1 247 2 
300 1 173 1 57 1 32 1 362 2 108 1 199 1 352 3 215 1 205 1 247 3 7 2 
28 2 1 1 173 2 265 1 
300 1 57 1 247 1 32 1 352 1 306 1 
112 1 300 1 270 1 173 1 205 1 57 1 247 2 32 1 199 1 352 2 
185 1 
300 1 173 1 205 1 57 1 247 1 32 1 199 1 352 1 
112 1 300 1 270 1 173 1 205 1 57 1 247 3 362 1 32 1 199 1 352 3 
96 1 173 1 213 1 52 1 
173 1 199 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (40,218) 318 (319,322) (319,322) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (40,218) 318 (319,322) (319,322) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (40,218) 318 (319,322) (319,322) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (40,218) 318 (319,322) (319,322) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (145,266) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (145,266) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (145,266) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (145,266) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (145,266) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (145,266) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (145,266) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (145,266) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (145,266) 220 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (145,266) 220 45 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> 1
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
218 1 318 1 319 1 2 1 13 1 322 1 92 1 209 1 210 1 168 1 194 1 
218 1 318 1 319 1 2 1 13 1 322 1 92 1 209 1 210 1 168 1 194 1 
218 1 318 1 319 1 2 1 13 1 322 1 92 1 209 1 210 1 168 1 194 1 
218 1 318 1 319 1 2 1 13 1 322 1 92 1 209 1 210 1 168 1 194 1 
265 1 189 1 39 1 2 1 330 1 71 2 92 1 194 4 325 1 36 1 13 1 97 1 129 3 53 1 123 2 103 3 168 4 316 1 
189 1 39 1 2 1 330 1 92 1 246 1 121 1 194 2 152 1 129 1 13 1 36 1 209 1 210 1 168 2 132 1 
189 1 2 2 330 1 40 1 92 1 194 3 325 1 13 2 129 2 209 1 123 1 103 1 168 3 
189 1 39 1 107 1 2 2 330 1 40 1 18 1 23 1 194 9 129 5 316 1 265 1 71 2 92 1 325 3 13 2 97 1 36 1 53 1 209 1 123 4 103 7 164 1 168 9 
189 1 39 1 107 1 2 2 330 1 40 1 18 1 23 1 194 9 129 5 316 1 265 1 71 2 92 1 325 3 13 2 97 1 36 1 53 1 209 1 123 4 103 7 164 1 168 9 
336 1 191 1 228 1 
150 1 228 1 110 2 
55 1 88 2 169 2 58 1 136 2 162 2 165 2 280 2 
55 1 301 2 169 2 253 2 329 1 240 1 284 1 19 1 255 1 58 1 148 1 60 2 61 2 5 1 46 1 286 1 313 1 115 1 261 1 66 1 314 1 315 1 8 1 88 2 225 1 29 1 30 1 157 1 347 1 136 3 323 2 137 1 326 1 162 3 16 1 165 2 280 2 
88 1 169 1 153 1 238 1 58 1 136 1 67 1 162 1 165 1 280 1 
238 1 228 1 136 1 295 1 272 1 149 1 231 1 336 1 352 1 26 1 177 1 162 1 15 1 165 1 
169 2 238 2 58 1 336 1 63 1 153 1 177 1 67 1 88 2 136 2 228 1 295 2 272 1 231 2 352 1 15 1 162 2 165 2 280 2 
204 1 289 1 187 1 295 1 231 1 
336 1 289 1 345 1 187 1 228 1 295 2 111 1 231 2 
187 1 295 1 231 1 
289 1 88 1 169 1 238 1 58 1 136 1 295 1 231 1 63 1 153 1 67 1 162 1 280 1 165 1 
228 1 
336 1 69 1 289 1 345 1 187 1 228 1 295 2 231 2 
288 1 289 2 345 1 283 1 239 2 228 1 295 5 333 1 33 1 334 1 231 5 336 1 35 1 44 1 114 2 196 1 187 2 327 1 116 2 
55 1 191 1 
88 1 55 2 169 1 136 2 338 1 162 2 200 1 165 2 280 1 
337 1 178 1 270 1 
8 1 55 1 253 1 329 1 30 1 284 1 136 1 323 1 148 1 60 1 286 1 115 1 162 1 54 1 315 1 314 1 
8 1 178 1 169 1 253 1 329 1 213 1 30 1 284 1 136 2 148 1 323 1 60 1 140 1 286 1 115 1 162 2 280 1 165 1 314 1 315 1 
88 1 55 1 140 1 169 3 136 3 162 3 165 3 280 3 
169 1 238 1 136 1 67 1 162 1 165 1 280 1 
88 1 169 1 338 1 238 1 136 1 162 1 200 1 165 1 280 1 
55 1 301 2 169 3 253 1 329 1 213 1 238 1 240 1 284 1 58 1 148 1 20 1 60 1 61 1 338 1 46 1 286 1 313 1 115 1 261 1 177 1 314 1 315 1 8 1 88 2 225 1 29 1 30 1 157 1 136 4 295 1 323 1 272 1 50 1 137 1 231 1 140 1 326 1 352 1 162 4 15 1 16 1 165 3 280 3 
55 1 310 1 169 1 140 1 136 2 162 2 149 1 165 2 280 1 
88 1 169 3 213 1 238 1 254 1 228 1 136 3 295 1 50 1 272 1 231 1 338 1 140 2 352 1 177 1 162 3 15 1 280 3 165 3 
88 1 169 2 178 1 136 2 270 1 140 1 338 1 162 2 280 2 165 2 
8 1 55 1 253 1 329 1 30 1 284 1 136 1 323 1 148 1 60 1 286 1 115 1 162 1 315 1 314 1 
8 1 55 1 253 1 30 1 284 1 136 1 294 1 323 1 148 1 60 1 286 1 251 1 162 1 315 1 314 1 
301 2 240 1 3 1 19 2 332 1 256 1 61 4 4 1 337 2 128 1 313 1 261 1 224 1 225 1 178 2 47 1 157 2 202 1 270 2 273 1 326 1 235 1 252 1 16 1 
169 1 238 1 136 1 154 1 15 1 162 1 165 1 280 1 
88 1 55 1 169 4 213 1 136 5 149 1 310 1 140 2 338 1 99 1 162 5 280 4 165 5 264 1 
169 2 238 1 136 2 154 1 67 1 162 2 165 2 280 2 
145 1 98 1 
145 1 98 1 
266 1 172 1 
266 1 172 1 
266 1 172 1 
145 1 98 1 
145 1 98 1 
145 1 98 1 
145 1 98 1 
145 1 98 1 
145 1 98 1 
145 1 98 1 
145 1 98 1 
145 1 98 1 351 1 220 1 
145 1 45 1 98 1 351 1 220 1 295 1 231 1 
39 1 36 1 53 1 
39 1 36 1 246 1 
39 3 179 1 53 2 171 1 221 1 246 1 
39 2 53 1 171 1 221 1 246 1 324 1 
39 2 53 1 171 1 221 2 246 1 
169 1 125 1 238 1 239 1 283 1 58 1 110 1 304 1 332 1 256 1 336 1 63 1 114 1 82 1 153 1 116 1 67 1 317 2 88 1 289 4 345 1 136 1 230 1 228 1 295 5 33 2 184 1 231 5 160 1 35 1 207 1 187 1 162 1 144 1 165 1 280 1 355 1 
169 1 125 1 239 1 283 1 238 1 58 1 110 1 304 1 332 1 256 1 112 1 336 1 63 1 114 1 82 1 153 1 116 1 67 1 289 4 88 1 290 1 345 1 136 1 228 1 295 5 33 2 231 5 160 1 204 2 35 1 207 1 206 2 187 3 162 1 144 1 280 1 165 1 355 1 
169 1 125 1 238 1 239 1 58 1 304 1 110 3 256 1 332 1 334 1 336 1 63 1 150 1 114 1 153 1 116 1 67 1 317 1 88 1 289 2 224 1 136 1 230 1 228 2 295 3 202 1 184 1 33 2 231 3 160 1 35 3 207 1 162 1 165 1 280 1 144 2 355 2 
125 2 239 1 304 2 110 6 256 2 332 2 334 1 336 1 150 2 114 1 116 1 317 2 289 3 224 2 230 1 228 3 295 4 202 2 184 1 33 4 247 1 231 4 160 1 35 5 207 1 14 1 144 4 166 1 355 4 
8 1 203 1 191 1 
8 1 57 1 
105 1 
8 1 314 1 
203 2 8 3 127 1 320 1 286 1 314 1 
8 1 286 1 314 1 
8 1 267 1 
224 1 212 1 47 2 157 3 19 4 332 1 193 1 242 1 61 7 4 3 138 1 142 1 175 1 343 1 263 2 300 1 344 1 
224 1 212 1 47 2 157 3 19 4 332 1 193 1 242 1 61 7 4 3 138 1 142 1 175 1 343 1 263 2 300 1 344 1 
224 1 212 1 47 2 157 3 19 4 332 1 193 1 242 1 61 7 4 3 138 1 142 1 175 1 343 1 86 1 263 2 300 1 344 1 
301 2 212 1 146 4 215 1 240 1 19 16 304 3 285 3 256 3 332 4 193 4 242 2 61 29 4 8 113 1 24 1 175 1 261 1 343 2 263 3 344 2 201 1 224 3 47 4 157 13 229 1 202 2 138 1 326 1 142 2 249 1 353 1 16 1 300 1 
301 4 240 2 19 5 332 1 193 1 241 1 242 1 61 9 4 4 175 1 261 2 343 1 263 2 344 1 224 1 47 3 157 4 229 1 120 1 138 1 326 2 142 1 16 2 300 1 
189 1 253 1 39 2 2 1 330 1 331 1 148 1 60 1 194 2 129 1 197 1 260 1 222 1 131 1 315 1 179 1 321 1 92 1 323 1 246 1 296 1 94 1 11 1 96 1 36 1 13 1 53 1 209 1 103 1 168 2 
189 1 253 1 39 2 2 1 330 1 109 1 148 1 60 1 194 3 307 1 129 1 197 1 260 1 222 1 131 1 315 1 179 1 321 1 323 1 246 1 51 1 296 1 94 1 96 1 36 1 13 1 53 1 209 1 103 2 168 3 
189 1 253 1 39 2 330 1 109 1 148 1 60 1 194 2 129 1 197 1 260 1 131 1 315 1 179 1 321 1 323 1 246 1 51 1 94 1 96 1 36 1 53 1 209 1 103 2 168 2 
253 1 2 1 148 1 60 1 194 1 307 1 81 1 197 2 339 1 287 1 315 1 131 2 314 1 8 1 30 1 321 2 323 1 297 1 275 1 13 1 52 1 209 2 168 1 
253 1 39 2 2 1 331 1 109 1 148 1 60 1 194 1 197 1 260 1 222 1 131 1 315 1 179 1 321 1 92 1 323 1 246 1 296 1 94 1 96 1 36 1 13 1 53 1 209 1 168 1 
278 1 
253 2 170 1 77 1 81 1 83 2 177 1 314 1 315 1 8 1 181 1 268 1 228 2 136 1 323 2 272 1 231 5 232 2 233 2 52 1 187 6 188 1 15 1 279 1 236 2 283 1 239 1 238 1 110 2 148 1 21 1 60 2 149 1 336 1 150 2 114 1 116 1 199 2 26 1 345 3 291 1 30 2 346 4 295 5 33 2 159 2 35 2 248 2 207 1 352 1 122 1 299 1 37 1 162 1 165 1 167 1 
238 1 77 1 149 1 26 1 177 1 69 1 345 1 181 1 346 2 136 1 295 3 272 1 231 3 352 1 187 2 122 1 299 1 162 1 37 1 15 1 165 1 236 1 
238 1 77 1 149 1 336 1 26 1 199 1 177 1 69 1 345 1 181 1 346 3 136 1 228 1 295 3 272 1 231 3 187 1 352 1 122 1 299 1 162 1 37 1 15 1 165 1 
238 1 77 1 149 1 336 1 26 1 199 1 177 1 69 1 345 1 181 1 346 3 136 1 228 1 295 3 272 1 231 3 232 1 352 1 187 2 122 1 299 1 162 1 37 1 15 1 165 1 236 1 
239 1 283 1 190 1 238 1 170 1 77 1 149 1 336 5 150 2 114 1 116 1 83 2 199 4 26 1 177 1 69 1 345 3 268 1 292 1 181 1 346 6 228 5 136 1 295 5 72 1 272 1 33 1 34 1 159 2 231 5 232 4 35 1 350 1 248 2 233 2 187 7 352 1 122 1 299 1 37 1 162 1 15 1 165 1 236 4 
170 1 77 1 83 2 177 1 268 1 181 1 136 1 228 2 272 1 231 4 232 2 233 2 187 4 15 1 236 2 238 1 283 1 239 1 110 2 21 1 149 1 336 1 150 2 114 1 116 1 26 1 199 2 345 2 346 4 295 4 33 1 159 2 35 1 248 2 352 1 122 1 299 1 162 1 37 1 165 1 
238 1 190 1 283 1 239 1 170 1 77 1 149 1 336 1 150 2 114 1 116 1 199 2 83 2 26 1 177 1 345 2 268 1 181 1 346 4 228 1 136 1 295 4 272 1 33 1 34 1 159 2 231 4 232 2 35 1 350 1 248 2 233 2 187 4 352 1 122 1 299 1 162 1 37 1 15 1 165 1 236 2 
238 1 190 1 283 1 239 1 170 1 77 1 149 1 336 1 150 2 114 1 116 1 199 2 83 2 26 1 177 1 345 2 268 1 181 1 346 4 228 1 136 1 295 4 272 1 33 1 34 1 159 2 231 4 232 2 35 1 350 1 248 2 233 2 187 4 352 1 122 1 299 1 162 1 37 1 15 1 165 1 236 2 
238 1 283 1 239 1 170 1 108 2 110 2 77 1 149 1 336 1 114 1 116 1 199 2 26 1 177 1 345 2 90 1 135 2 181 1 346 4 228 1 136 1 295 4 272 1 33 1 34 1 159 2 231 4 232 2 95 1 35 1 248 2 187 4 352 1 122 1 299 1 74 1 162 1 37 1 15 1 165 1 236 2 
239 1 283 1 190 1 238 1 170 1 77 1 149 1 336 1 150 2 114 1 116 1 83 2 26 1 199 3 177 1 345 2 268 1 181 1 292 1 346 5 228 1 136 1 295 4 272 1 33 1 34 1 159 2 231 4 232 3 35 1 350 1 248 2 233 2 352 1 187 5 122 1 299 1 162 1 37 1 15 1 165 1 236 3 
239 1 283 1 190 1 238 1 170 1 77 1 149 1 336 1 150 2 114 1 116 1 83 2 26 1 199 3 177 1 345 2 268 1 181 1 292 1 346 5 228 1 136 1 295 4 272 1 33 1 34 1 159 2 231 4 232 3 35 1 350 1 248 2 233 2 352 1 187 5 122 1 299 1 162 1 37 1 15 1 165 1 236 3 
170 1 77 1 177 1 181 1 135 2 136 1 228 1 272 1 231 4 95 1 232 2 187 4 15 1 236 2 238 1 283 1 239 1 108 2 110 2 21 1 149 1 336 1 114 1 116 1 26 1 199 2 345 2 346 4 295 4 33 1 159 2 35 1 248 2 352 1 122 1 299 1 162 1 37 1 165 1 
301 2 55 2 191 1 240 1 3 1 19 3 332 1 61 6 4 2 337 1 175 1 313 1 261 1 263 1 344 1 178 1 225 1 224 1 47 2 157 3 270 1 138 1 326 1 142 1 16 1 300 1 
55 1 301 4 146 4 38 1 282 1 240 2 19 10 304 3 285 3 193 1 256 3 332 3 61 17 5 1 4 2 113 2 337 13 46 1 195 1 313 2 198 1 261 2 201 1 225 1 178 13 224 1 47 1 157 7 270 4 202 1 326 2 16 2 211 1 
55 1 301 2 169 1 253 1 329 1 213 1 284 1 240 1 19 1 148 1 60 1 61 2 5 1 46 1 286 1 115 1 313 1 198 1 261 1 85 1 314 1 315 1 8 1 225 1 30 1 49 1 157 1 136 2 323 1 270 1 140 1 326 1 54 1 162 2 165 1 280 1 16 1 237 1 
301 6 169 1 253 1 213 1 304 1 256 1 306 1 5 1 4 3 46 1 175 1 313 3 176 2 261 3 263 1 315 2 314 2 8 2 225 3 178 4 224 2 47 3 136 3 323 1 270 4 137 2 138 1 140 1 326 3 276 1 142 1 102 1 16 3 280 1 55 2 329 2 240 3 284 2 19 7 148 2 332 2 60 1 61 14 337 4 286 2 115 2 198 1 344 1 156 1 30 1 157 7 202 1 298 2 162 3 165 1 300 1 
301 4 169 1 253 8 214 1 3 1 240 2 19 1 255 2 109 1 148 2 60 8 61 2 126 1 5 1 81 1 151 1 46 1 313 2 117 1 261 2 315 2 314 2 8 3 133 1 225 2 226 1 30 2 157 1 136 1 323 7 11 1 140 1 326 2 52 1 162 1 163 1 165 1 280 1 16 2 
301 2 169 1 240 1 19 1 304 1 256 1 332 1 61 3 4 1 337 1 338 1 258 1 313 1 198 1 261 1 88 1 178 1 225 1 224 1 47 1 157 2 136 1 270 1 202 1 326 1 162 1 280 1 16 1 165 1 
301 2 178 1 225 1 3 1 240 1 19 2 193 1 270 1 256 1 332 1 61 2 4 1 337 1 326 1 313 1 261 1 235 1 16 1 
301 2 178 1 225 1 224 1 47 1 3 1 240 1 157 2 270 1 202 1 61 2 4 1 337 1 326 1 313 1 261 1 16 1 252 1 
301 2 240 1 3 1 19 2 304 1 332 1 256 1 193 1 61 4 4 2 337 2 313 1 261 1 225 1 178 2 224 1 47 1 157 2 270 2 202 1 326 1 16 1 
301 2 178 1 225 1 226 1 240 1 19 2 193 1 270 1 256 1 332 1 61 2 4 1 337 1 326 1 313 1 261 1 235 1 16 1 
301 2 178 1 225 1 224 1 47 1 226 1 240 1 157 2 270 1 202 1 61 2 4 1 337 1 326 1 313 1 261 1 16 1 252 1 
301 2 240 1 19 2 304 1 332 1 256 1 193 1 61 4 4 2 337 2 313 1 261 1 225 1 178 2 224 1 226 1 47 1 157 2 270 2 202 1 326 1 16 1 
301 2 240 1 19 2 304 1 332 1 256 1 193 1 61 4 4 2 337 2 313 1 261 1 225 1 178 2 224 1 47 1 157 2 270 2 202 1 326 1 16 1 
55 1 301 2 253 1 329 1 284 1 240 1 19 1 148 1 60 1 61 2 5 1 46 1 286 1 115 1 313 1 261 1 314 1 315 1 8 1 225 1 30 1 157 1 136 1 323 1 137 1 326 1 162 1 16 1 
55 1 301 2 253 1 284 1 240 1 19 1 148 1 60 1 61 2 5 1 46 1 286 1 313 1 25 1 261 1 314 1 315 1 8 1 225 1 30 1 157 1 294 1 136 1 323 1 326 1 251 1 162 1 16 1 
301 2 240 1 19 2 304 1 332 1 256 1 193 1 61 4 4 2 337 2 313 1 198 1 261 1 225 1 178 2 224 1 47 1 157 2 270 2 202 1 326 1 16 1 
301 2 253 1 329 1 284 1 240 1 19 2 304 1 148 1 193 1 332 1 256 1 60 1 61 4 4 2 337 2 286 1 115 1 313 1 261 1 315 1 314 1 8 1 224 1 178 2 225 1 47 1 157 2 136 1 323 1 202 1 270 2 137 1 11 1 298 1 326 1 162 1 16 1 
301 2 169 1 240 1 19 2 304 1 193 1 256 1 332 1 61 3 4 1 337 1 338 1 313 1 198 1 261 1 88 1 224 1 225 1 178 1 245 1 157 1 136 1 202 1 270 1 326 1 162 1 280 1 16 1 165 1 
301 4 146 2 17 1 240 2 19 9 304 3 285 1 193 2 256 3 332 3 61 17 4 4 309 1 113 1 65 2 340 1 261 2 155 1 68 2 224 2 201 1 47 2 48 1 157 8 120 1 202 2 73 1 326 2 186 1 16 2 
301 4 146 2 17 1 56 1 303 1 240 2 19 14 304 3 285 2 193 1 43 1 256 3 332 3 217 1 61 26 4 2 65 4 261 2 155 1 68 1 134 1 224 2 201 2 47 1 48 1 157 12 229 1 120 1 202 2 73 2 326 2 186 2 16 2 104 1 
301 6 303 1 304 5 256 5 43 1 217 1 4 6 175 1 261 3 263 1 224 4 134 1 47 3 48 1 229 1 138 1 326 3 186 1 142 1 104 1 16 3 281 1 146 5 56 1 17 1 240 3 19 22 285 3 332 6 193 3 61 42 113 2 65 4 340 1 155 1 344 1 68 1 201 3 157 20 120 1 202 3 73 2 300 1 
301 6 303 1 304 5 256 5 43 1 217 1 4 6 175 1 261 3 263 1 224 5 134 1 47 5 48 1 229 1 138 1 326 3 186 1 142 1 16 3 104 1 281 1 146 5 56 1 17 1 240 3 19 22 285 3 332 6 193 1 61 43 113 2 65 4 340 1 155 1 344 1 68 1 201 3 157 21 120 1 202 4 73 2 300 1 
301 2 146 3 17 1 56 1 303 1 240 1 19 17 304 4 285 2 193 2 43 1 256 4 332 5 217 1 61 32 4 5 113 1 175 1 65 3 261 1 263 1 155 1 68 1 344 1 134 1 224 4 201 2 47 3 48 1 157 15 120 1 202 3 73 1 138 1 326 1 186 1 142 1 16 1 104 1 300 1 
106 1 301 2 253 2 214 1 240 1 19 1 255 2 148 1 22 1 60 2 80 1 61 2 5 1 259 1 46 1 313 1 198 1 261 1 315 1 314 1 8 1 133 1 225 1 157 1 136 2 323 2 326 1 162 2 354 1 165 2 16 1 
39 2 253 2 179 1 10 1 109 1 246 1 148 1 323 2 60 2 296 1 94 1 11 1 12 1 36 1 53 1 197 1 328 1 260 1 315 1 
39 2 253 1 179 1 109 1 246 1 323 1 148 1 60 1 296 1 94 1 12 1 36 1 53 1 197 1 260 1 75 1 315 1 
8 1 253 1 30 1 10 1 148 1 323 1 60 1 81 1 197 1 287 1 52 1 101 1 315 1 314 1 
39 2 253 1 179 1 10 1 109 1 246 1 323 1 148 1 60 1 296 1 94 1 12 1 36 1 53 1 197 1 328 1 260 1 315 1 
302 1 
336 1 35 1 196 1 191 1 327 1 228 1 33 1 
239 1 283 1 110 1 336 1 150 1 114 1 116 1 83 1 345 1 268 1 228 2 295 1 33 1 231 1 35 1 233 1 187 1 
0 1 253 3 304 2 256 2 79 2 78 2 173 2 84 1 177 2 223 2 315 4 314 3 8 10 267 2 224 2 89 2 180 1 320 1 228 8 323 3 231 5 11 1 141 2 276 2 187 5 327 1 144 6 283 4 239 4 57 3 110 12 148 3 332 2 60 3 336 2 62 2 150 6 114 4 64 1 196 1 286 3 116 4 118 2 345 3 30 1 158 1 295 5 202 2 33 8 203 2 35 9 207 2 167 1 355 6 
146 1 56 1 303 1 239 2 283 2 110 6 304 2 285 1 192 1 43 1 256 2 332 2 336 2 150 3 114 2 116 2 118 2 134 1 201 1 224 2 345 1 228 5 295 1 202 2 33 5 231 1 35 8 141 1 207 1 187 1 208 1 144 5 104 1 167 1 355 5 
169 1 238 1 239 1 283 1 190 1 58 1 332 2 63 1 114 1 153 1 116 1 67 1 118 2 344 1 88 1 224 1 136 1 295 1 271 1 33 2 231 1 138 1 35 2 141 1 142 1 162 1 280 1 165 1 
283 1 239 1 228 1 33 1 336 1 35 1 114 1 196 1 327 1 116 1 
224 2 304 2 110 10 228 5 256 2 332 2 202 2 33 5 150 5 35 5 141 1 276 1 118 2 144 5 355 5 
336 1 345 1 187 1 228 1 295 1 231 1 
253 4 239 2 283 1 148 1 60 4 334 1 81 1 114 2 6 1 174 1 64 2 116 2 315 1 314 1 8 1 291 1 345 2 30 2 158 1 323 4 295 3 33 2 231 3 35 2 207 2 187 4 52 1 188 1 167 2 
55 1 301 2 169 2 253 1 329 1 284 1 240 1 58 1 148 1 60 1 61 1 46 1 286 1 115 1 313 1 261 1 315 1 314 1 8 1 88 2 225 1 30 1 29 1 157 1 136 3 323 1 137 1 326 1 162 3 16 1 165 2 280 2 
283 1 239 1 110 4 228 4 33 2 336 2 150 2 35 1 114 1 207 1 116 1 144 2 263 1 167 1 355 2 
257 1 161 1 342 1 
311 1 161 1 234 1 342 1 28 1 
257 1 161 1 342 1 
257 1 161 1 342 1 
87 1 161 1 342 1 
87 1 161 1 342 1 
87 1 161 1 342 1 
161 1 342 1 
145 1 98 1 
301 4 224 1 47 2 240 2 157 4 19 4 229 1 332 1 193 1 61 8 4 3 138 1 326 2 142 1 175 1 261 2 16 2 263 1 300 1 344 1 
224 1 47 2 191 1 157 3 19 3 332 1 61 6 4 2 138 1 142 1 175 1 263 1 300 1 344 1 
301 2 224 1 47 1 240 1 157 2 19 2 304 1 202 1 256 1 332 1 193 1 61 4 4 2 326 1 243 1 261 1 16 1 
201 1 146 2 224 1 47 1 157 4 19 3 304 1 285 1 256 1 332 1 202 1 61 7 4 1 113 1 
301 4 146 2 38 1 240 2 19 11 304 2 285 2 76 1 193 4 332 3 256 2 61 23 4 9 113 1 195 1 175 1 261 2 263 1 344 2 224 3 47 5 157 12 229 2 202 2 138 1 326 2 142 2 16 2 300 1 
146 1 157 1 61 1 
19 1 285 1 61 1 
301 2 224 1 47 2 240 1 157 3 19 3 304 1 256 1 332 1 193 1 202 1 61 6 4 3 326 1 243 1 276 1 261 1 16 1 
301 2 146 1 56 1 303 1 240 1 19 6 304 2 285 1 193 1 256 2 332 2 43 1 61 12 4 2 261 1 201 1 224 2 134 1 47 1 157 6 120 1 202 2 326 1 16 1 104 1 
224 1 47 1 19 3 157 3 332 1 193 1 61 6 4 2 138 1 142 1 344 1 
301 2 47 1 240 1 19 1 157 2 229 1 76 1 193 1 61 3 4 2 326 1 142 1 175 1 261 1 16 1 300 1 344 1 
301 2 224 2 47 3 240 1 19 5 157 5 120 1 271 1 193 2 332 2 61 10 4 5 138 1 326 1 142 2 261 1 16 1 344 2 
301 2 240 1 19 2 120 1 256 1 332 1 193 1 61 2 4 1 326 1 261 1 16 1 
301 2 224 1 47 1 240 1 157 2 19 2 304 1 120 1 202 1 256 1 332 1 193 1 61 4 4 2 326 1 261 1 16 1 
301 6 47 1 240 3 157 2 19 1 229 1 76 1 120 1 193 1 61 3 4 2 326 3 142 1 340 1 261 3 16 3 344 1 
301 10 146 4 215 1 240 5 19 16 304 3 76 1 285 3 256 3 332 5 193 4 61 32 4 10 113 1 243 1 175 1 340 1 261 5 263 1 344 3 201 1 224 4 47 6 157 16 229 2 120 1 202 2 138 2 326 5 142 3 249 1 353 1 16 5 300 1 
301 2 146 2 303 1 240 1 19 6 304 1 285 1 256 1 332 2 61 11 4 2 113 1 175 1 261 1 263 1 344 1 224 1 201 1 47 2 157 5 120 1 138 1 326 1 142 1 16 1 300 1 
301 4 146 1 303 1 240 2 19 4 285 1 332 1 61 8 4 2 243 1 175 1 261 2 263 1 344 1 224 1 201 1 47 2 157 4 120 1 138 1 326 2 142 1 16 2 300 1 
301 6 146 1 56 1 303 1 240 3 19 9 304 2 285 1 193 1 43 1 256 2 332 3 61 19 4 4 243 1 175 1 261 3 263 1 344 1 201 1 224 3 134 1 47 3 157 10 229 1 120 1 202 2 138 1 326 3 142 1 16 3 104 1 300 1 
301 4 146 1 56 1 303 1 240 2 19 7 304 2 285 1 256 2 332 2 43 1 61 11 4 1 243 1 261 2 201 1 224 1 134 1 47 1 157 4 120 1 202 1 326 2 16 2 104 1 
301 2 146 2 303 1 240 1 19 6 304 1 285 1 256 1 332 2 61 11 4 2 113 1 175 1 261 1 263 1 344 1 224 1 201 1 47 2 157 5 120 1 138 1 326 1 142 1 16 1 300 1 
301 2 146 1 56 1 303 1 240 1 19 6 304 2 285 1 193 1 256 2 332 2 43 1 61 12 4 2 261 1 201 1 224 2 134 1 47 1 157 6 120 1 202 2 326 1 16 1 104 1 
301 6 146 1 56 1 303 1 240 3 19 7 304 2 285 1 43 1 256 2 332 2 61 12 4 1 243 1 261 3 134 1 201 1 224 1 47 1 157 5 229 1 120 1 202 1 326 3 16 3 104 1 
301 6 146 1 56 1 303 1 240 3 19 7 304 2 285 1 193 2 43 1 256 2 332 2 61 12 4 4 340 1 261 3 134 1 201 1 224 1 47 2 157 5 229 1 120 1 202 1 326 3 16 3 104 1 
224 1 47 3 157 4 19 3 193 3 332 1 61 7 4 6 138 1 142 3 175 2 300 1 344 3 
301 6 146 1 56 1 303 1 240 3 19 7 304 2 285 1 43 1 256 2 332 2 61 12 4 1 340 1 261 3 134 1 201 1 224 1 47 1 157 5 229 1 120 1 202 1 326 3 16 3 104 1 
55 1 310 1 136 1 348 1 162 1 165 1 149 1 
55 1 293 1 348 1 136 1 149 1 308 1 310 1 7 1 341 1 277 1 162 1 165 1 
8 1 253 1 30 1 52 1 191 1 148 1 323 1 60 1 315 1 314 1 81 1 
8 1 55 1 169 1 253 1 329 1 30 1 284 1 136 2 323 1 148 1 60 1 140 1 286 1 162 2 280 1 165 1 314 1 315 1 
267 1 8 3 55 1 169 2 253 1 329 1 238 1 284 1 136 2 323 1 148 1 173 1 60 1 140 1 286 2 64 1 352 1 15 1 162 2 280 1 165 2 314 2 315 1 
267 1 8 3 55 1 169 2 253 2 238 1 284 1 136 2 323 2 148 1 173 1 60 2 139 1 140 1 286 2 64 1 352 1 251 1 15 1 162 2 280 1 165 2 314 2 315 1 
253 3 57 1 148 1 60 3 173 1 336 1 64 1 286 1 177 1 315 1 314 1 8 4 267 1 70 1 30 1 228 1 323 3 295 2 183 1 231 2 139 1 203 1 187 1 
267 1 8 4 253 3 30 1 57 1 228 1 295 2 323 3 148 1 173 1 60 3 231 2 139 1 336 1 203 1 286 1 64 1 187 1 177 1 223 1 314 1 315 1 
253 1 148 1 323 1 60 1 163 1 315 1 
8 3 133 1 253 7 30 2 320 1 255 1 109 1 91 1 323 6 42 1 148 2 32 1 60 7 126 1 11 1 151 1 286 1 117 1 163 1 314 2 315 3 
55 2 301 4 169 1 253 1 329 1 284 1 240 2 19 3 148 1 332 1 22 1 60 1 61 6 4 2 337 1 286 1 175 1 313 2 115 1 198 1 176 1 261 2 263 1 344 1 314 1 315 1 8 1 178 1 224 1 225 2 47 2 157 3 136 2 323 1 270 1 137 1 138 1 11 1 140 1 326 2 298 1 142 1 162 2 165 1 280 1 16 2 300 1 
253 1 239 2 283 2 57 1 78 1 79 1 60 1 336 1 114 2 196 1 116 2 177 1 223 1 8 2 289 1 89 1 345 1 30 1 228 1 158 1 323 1 295 3 33 1 231 3 203 1 35 1 187 2 327 1 
8 2 253 2 180 1 320 1 323 2 148 1 60 2 203 1 11 1 286 1 163 1 314 1 315 2 
8 1 253 4 30 1 323 4 148 1 60 4 81 1 139 1 11 1 100 1 52 1 315 1 314 1 
8 1 1 1 253 2 124 1 91 1 323 2 148 1 32 1 60 2 64 1 286 1 27 1 314 1 315 2 
39 1 253 1 36 1 30 1 246 1 148 1 260 1 323 1 60 1 315 1 
8 1 133 1 253 2 109 1 323 2 148 1 60 2 11 1 354 1 314 1 315 1 
8 3 133 1 253 5 30 1 323 4 148 2 60 5 81 1 126 1 11 1 64 1 100 1 52 1 117 1 314 2 315 2 
8 3 133 1 253 5 30 1 182 1 323 4 148 2 60 5 81 1 126 1 11 1 64 1 100 1 52 1 314 2 315 2 
8 1 55 1 169 1 253 1 30 1 284 1 136 2 323 1 148 1 60 1 140 1 286 1 251 1 162 2 280 1 165 1 314 1 315 1 
8 1 253 1 320 1 91 1 323 1 42 1 148 1 32 1 60 1 64 1 286 1 314 1 315 2 
55 1 147 1 41 1 59 1 130 1 
55 1 169 1 147 2 238 2 41 2 58 1 59 1 336 1 63 1 153 1 244 1 177 1 67 1 130 2 88 1 289 1 9 1 136 1 269 1 228 1 295 2 272 1 50 1 231 2 352 1 162 1 15 1 165 1 280 1 
106 1 147 1 41 1 59 1 136 1 80 1 259 1 162 1 165 1 
244 1 59 1 269 1 
189 1 129 1 330 1 191 1 
189 1 2 1 129 1 330 1 13 1 168 1 194 1 
209 1 131 1 194 1 
189 1 2 1 330 1 227 1 92 1 305 1 194 3 185 1 152 2 129 1 13 1 168 3 
189 1 2 1 129 1 330 1 13 1 71 1 103 1 168 2 194 2 
265 1 39 1 2 1 92 1 194 1 13 1 129 1 36 1 53 1 123 1 168 1 
189 1 2 1 129 1 13 1 92 1 168 1 194 1 
189 2 2 1 330 1 13 1 92 1 168 1 194 1 
189 1 2 2 92 1 274 1 194 2 129 1 13 2 312 1 143 1 168 2 
189 1 2 1 330 1 18 1 92 1 23 1 194 3 325 1 13 1 129 2 123 1 103 2 168 3 
189 1 39 2 2 1 330 1 179 1 92 1 246 1 93 1 194 2 129 1 13 1 36 1 53 1 103 1 168 2 
189 1 2 2 330 1 71 1 92 1 194 4 325 1 13 2 129 2 123 1 103 2 168 4 316 1 
189 1 2 1 129 1 330 1 13 1 92 1 168 1 194 1 
189 2 2 1 330 2 227 1 185 1 335 1 194 4 325 1 152 1 13 1 129 3 123 1 103 2 168 4 
189 1 2 1 107 1 330 1 92 1 194 2 129 1 13 1 250 1 103 1 168 2 262 1 
189 1 2 1 330 1 227 1 92 1 194 3 185 2 152 2 129 1 13 1 219 1 168 3 
119 2 205 1 129 2 349 1 
2 1 13 1 216 1 92 1 168 1 194 1 
189 1 2 1 129 1 330 1 13 1 92 1 23 1 103 1 168 2 194 2 
31 1 
189 1 2 1 129 1 330 1 13 1 92 1 168 1 194 1 
189 1 152 1 2 1 129 1 330 1 13 1 92 1 23 1 103 1 168 3 194 3 
325 1 129 1 123 1 335 1 
189 1 129 1 

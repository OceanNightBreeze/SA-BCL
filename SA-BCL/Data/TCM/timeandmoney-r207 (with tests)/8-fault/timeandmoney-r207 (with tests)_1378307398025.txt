#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 24 (8,199,203) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> -1
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
138 9 159 1 287 2 294 2 262 5 30 1 221 1 298 2 299 2 264 1 320 9 119 1 370 6 168 3 169 1 349 2 55 1 205 1 311 1 148 2 206 4 312 1 354 1 231 2 58 1 103 1 256 1 136 1 
138 9 159 1 287 2 294 2 262 5 30 1 221 1 298 2 299 2 264 1 320 9 119 1 370 6 168 3 169 1 349 2 55 1 205 1 311 1 148 2 206 4 312 1 354 1 231 2 58 1 103 1 256 1 136 1 
138 10 159 1 287 2 294 2 262 6 30 1 221 1 298 2 299 2 264 1 320 10 119 1 370 7 168 4 169 1 349 2 55 1 205 1 311 1 148 2 206 5 312 1 354 1 231 2 58 1 103 1 256 1 136 1 
138 7 159 1 287 1 294 2 262 4 30 1 221 1 298 2 299 2 264 1 320 7 119 1 370 4 168 2 169 1 349 2 55 1 205 1 311 1 148 2 206 3 312 1 354 1 231 2 58 1 256 1 136 1 
168 1 349 1 138 4 159 1 287 2 262 3 311 1 206 2 148 1 312 1 231 1 58 1 103 1 298 1 299 1 320 4 256 1 370 3 
349 1 138 2 159 1 306 1 205 1 262 1 294 1 312 1 231 1 298 1 299 1 119 1 320 2 222 1 256 1 346 1 
168 1 349 2 138 3 159 1 294 1 262 2 206 1 312 1 299 2 264 1 320 3 256 1 370 1 
137 1 138 9 159 1 287 2 294 1 262 5 30 1 298 1 264 1 299 2 320 9 370 7 168 3 349 2 374 1 55 1 206 4 311 1 148 1 312 1 231 1 58 1 103 1 256 1 
137 1 138 9 159 1 287 2 294 1 262 5 30 1 298 1 264 1 299 2 320 9 370 7 168 3 349 2 374 1 55 1 206 4 311 1 148 1 312 1 231 1 58 1 103 1 256 1 
318 1 165 1 343 1 
12 1 
376 1 365 2 97 2 180 2 64 2 71 2 93 2 90 1 
284 1 3 1 85 2 64 2 5 1 90 1 240 1 190 1 365 3 244 1 319 1 344 1 31 1 71 2 93 2 267 2 367 1 271 2 144 1 323 1 34 1 170 1 35 2 37 1 97 3 53 1 13 1 327 1 204 1 175 1 376 1 253 1 180 2 356 1 135 2 279 1 155 1 
341 1 224 1 365 1 97 1 180 1 64 1 71 1 93 1 368 1 90 1 
258 1 97 1 292 1 341 1 353 1 251 1 318 1 6 1 365 1 180 1 378 1 343 1 182 1 195 1 
258 1 97 1 64 1 292 1 353 2 341 1 251 1 318 1 6 1 365 1 180 1 378 2 343 1 71 1 93 1 
158 1 33 1 353 1 84 1 378 1 
158 1 353 2 84 1 318 1 378 2 330 1 343 1 32 1 
158 1 353 1 378 1 
224 1 84 1 97 1 64 1 90 1 341 1 353 1 365 1 329 1 378 1 180 1 71 1 93 1 368 1 
343 1 
158 1 224 1 84 1 97 1 64 1 162 1 90 1 341 1 353 2 318 1 365 1 329 1 180 1 378 2 330 1 343 1 71 1 93 1 368 1 
158 2 336 1 84 2 72 1 4 2 25 1 101 1 249 1 353 5 230 1 67 2 318 1 252 2 116 1 378 5 330 1 343 1 263 1 211 1 
376 1 165 1 
97 2 64 1 16 1 376 2 365 2 180 2 59 1 71 1 93 1 
28 1 68 1 351 1 
284 1 34 1 35 1 36 1 37 1 97 1 85 1 327 1 204 1 240 1 175 1 376 1 365 1 31 1 155 1 267 1 
122 2 45 1 97 5 64 4 293 1 16 1 250 1 376 1 365 5 180 5 182 1 71 4 357 1 93 1 
341 1 365 2 145 1 97 2 180 2 64 2 71 2 368 1 
122 1 284 1 34 1 35 1 37 1 97 2 85 1 351 1 64 1 327 1 204 1 240 1 175 1 250 1 365 2 180 1 31 1 71 1 155 1 267 1 
122 1 376 1 365 3 97 3 180 3 64 3 71 3 93 1 
341 1 365 1 97 1 180 1 64 1 71 1 368 1 
341 1 365 1 97 1 180 1 59 1 64 1 71 1 93 1 16 1 
62 1 284 1 258 1 3 1 85 1 64 3 292 1 5 1 240 1 90 1 341 1 190 1 193 1 6 1 365 4 244 1 31 1 71 3 93 2 267 1 122 1 271 1 323 1 34 1 170 1 35 1 37 1 97 4 53 1 13 1 327 1 204 1 16 1 175 1 250 1 353 1 376 1 251 1 253 1 180 3 378 1 356 1 135 2 155 1 
122 1 376 1 365 2 97 2 180 2 182 1 64 1 71 1 293 1 
122 2 258 1 73 1 97 3 64 3 292 1 16 1 353 1 341 1 250 1 251 1 193 1 6 1 365 3 378 1 180 3 343 1 71 3 93 1 
122 1 97 2 351 1 64 2 16 1 28 1 365 2 180 2 71 2 93 1 
284 1 34 1 35 1 37 1 97 1 85 1 327 1 204 1 240 1 175 1 376 1 365 1 31 1 155 1 267 1 
196 1 284 1 34 1 35 1 97 1 85 1 327 1 240 1 175 1 376 1 365 1 235 1 31 1 155 1 267 1 
43 1 87 1 5 1 66 1 68 2 28 2 244 1 367 2 223 1 271 4 372 1 323 2 170 1 373 1 172 1 351 2 53 1 13 1 229 1 130 1 253 1 135 2 183 1 154 1 
341 1 251 1 365 1 97 1 180 1 145 1 64 1 71 1 
199 1 381 1 
199 1 381 1 
24 1 8 1 
24 1 8 1 
24 1 8 1 
342 1 199 1 381 1 
199 1 24 1 8 1 381 1 
199 1 203 1 381 1 
342 1 199 1 381 1 
342 1 199 1 381 1 
10 1 199 1 381 1 
10 1 199 1 381 1 
10 1 199 1 381 1 
333 1 83 1 121 1 335 1 199 1 124 1 97 2 363 1 64 2 203 1 375 1 353 1 376 1 365 2 180 2 378 1 92 1 212 1 366 1 71 2 79 1 9 1 268 1 381 1 
95 1 333 3 120 1 121 2 335 2 83 1 199 2 173 1 47 2 147 1 26 1 353 2 176 1 179 1 378 2 343 1 366 2 268 2 381 2 
148 1 231 1 298 1 
231 1 298 1 346 1 
148 2 191 1 303 1 298 3 301 1 346 1 
148 1 191 1 303 1 298 2 75 1 346 1 
148 1 191 1 303 2 298 2 346 1 
158 1 361 2 43 1 84 4 63 1 112 1 4 1 363 1 239 1 67 1 318 1 343 2 9 1 142 2 223 1 96 1 373 1 12 3 56 1 101 3 375 1 353 5 130 1 230 1 252 1 132 1 232 1 378 5 330 1 42 2 211 2 315 1 
360 1 158 6 43 3 84 7 63 1 112 2 4 2 363 4 239 2 218 1 67 2 318 1 116 1 343 5 50 1 142 6 223 3 33 5 350 1 373 3 12 9 38 1 101 8 353 9 130 3 230 1 252 2 132 3 233 5 378 9 330 1 105 1 42 6 211 6 315 3 
361 1 43 1 84 2 112 1 4 1 363 1 64 1 239 1 90 1 341 1 67 1 318 1 365 1 116 1 343 3 71 1 93 1 368 1 142 2 223 1 224 1 373 1 97 1 12 4 56 1 101 3 353 3 130 1 252 1 132 2 329 1 180 1 232 1 378 3 211 2 42 2 315 1 
361 1 43 1 84 1 112 1 4 1 363 1 239 1 67 1 116 1 343 2 142 2 223 1 373 1 12 4 38 1 56 1 101 3 353 2 130 1 252 1 132 2 378 2 232 1 42 2 211 2 315 1 
165 1 31 1 217 1 
106 1 31 1 
194 1 
175 1 34 1 31 1 
31 1 314 1 
34 1 31 1 
175 1 34 1 31 3 153 1 146 1 217 2 
80 1 223 1 304 1 372 2 316 2 271 7 323 3 373 1 125 1 65 1 89 1 241 1 66 3 163 1 133 1 255 1 367 4 
80 1 223 1 304 1 372 2 316 2 271 7 323 3 373 1 125 1 65 1 89 1 241 1 66 3 163 1 133 1 255 1 367 4 
80 1 223 1 304 1 372 2 316 2 271 7 323 3 373 1 125 1 65 1 89 1 241 1 66 3 163 1 133 1 141 1 255 1 367 4 
80 2 43 3 316 3 65 1 5 1 339 1 89 1 241 1 66 10 192 1 163 5 244 1 70 1 367 16 223 4 304 2 348 1 271 31 372 5 323 15 373 4 201 4 308 1 53 1 125 2 13 1 129 1 130 3 133 2 255 1 135 2 107 3 315 3 156 1 
80 1 316 2 86 1 5 2 339 1 89 1 241 1 66 4 163 1 244 2 367 5 223 1 304 1 271 9 372 3 323 4 373 1 53 2 125 1 13 2 100 1 133 1 135 4 255 1 
111 1 138 2 159 1 289 1 85 1 262 1 294 1 240 1 296 1 298 2 299 1 320 2 301 1 267 1 370 1 346 1 269 1 11 1 349 1 200 1 35 1 327 1 148 1 312 1 231 1 109 1 278 1 256 1 60 1 280 1 
111 1 138 3 159 1 85 1 262 1 294 1 240 1 69 1 243 1 298 2 299 1 301 1 320 3 267 1 370 2 346 1 269 1 11 1 349 1 200 1 35 1 327 1 352 1 148 1 312 1 231 1 109 1 278 1 60 1 280 1 
138 2 159 1 85 1 262 1 294 1 240 1 69 1 298 2 320 2 301 1 267 1 370 2 346 1 269 1 11 1 200 1 35 1 327 1 352 1 148 1 312 1 231 1 109 1 278 1 280 1 
283 1 349 1 138 1 34 1 35 1 200 2 85 1 54 1 272 1 327 1 240 1 99 1 294 2 149 1 243 1 134 1 299 1 31 1 320 1 109 2 155 1 267 1 280 2 
269 1 111 1 11 1 349 1 138 1 35 1 200 1 289 1 85 1 327 1 240 1 294 1 352 1 148 1 231 1 298 2 299 1 301 1 278 1 320 1 109 1 60 1 256 1 267 1 346 1 280 1 
325 1 
288 2 4 1 85 2 292 1 239 1 240 1 341 1 6 1 343 2 300 2 195 1 245 1 246 1 347 4 198 1 97 1 12 2 99 1 101 2 248 1 353 5 251 1 208 2 252 1 254 1 210 1 104 1 211 2 155 2 158 6 258 1 22 2 161 1 67 1 318 1 365 1 31 1 267 2 34 1 35 2 324 2 327 1 326 1 274 2 275 1 230 1 132 2 377 1 134 1 378 5 180 1 330 3 236 2 182 1 184 1 
158 2 258 1 288 1 292 1 162 1 341 1 6 1 365 1 195 1 245 1 347 2 97 1 326 1 353 3 251 1 377 1 180 1 378 3 330 1 210 1 104 1 182 1 
158 1 258 1 292 1 162 1 341 1 6 1 318 1 365 1 343 1 300 1 195 1 245 1 347 3 97 1 326 1 353 3 251 1 377 1 180 1 378 3 210 1 330 1 104 1 182 1 
158 2 258 1 288 1 292 1 162 1 341 1 6 1 365 1 300 1 195 1 245 1 347 3 97 1 326 1 353 3 251 1 377 1 180 1 378 3 330 1 210 1 104 1 182 1 236 1 
186 1 288 4 4 1 292 1 90 1 341 2 6 1 343 1 300 2 93 1 195 1 245 1 143 1 347 4 97 2 248 1 101 1 353 5 251 1 208 2 252 1 210 1 104 1 211 1 61 1 158 7 258 1 215 1 22 2 64 1 161 1 162 1 67 1 318 1 365 2 71 1 368 1 224 1 324 2 326 1 274 2 230 1 131 1 377 1 132 2 329 1 378 5 180 2 330 3 236 4 182 1 
288 2 4 1 292 1 341 1 6 1 343 2 300 2 195 1 245 1 347 4 198 1 97 1 12 2 248 1 101 1 353 4 251 1 208 2 252 1 210 1 104 1 211 1 158 4 258 1 22 2 161 1 67 1 318 1 365 1 324 2 326 1 274 2 230 1 377 1 132 2 180 1 378 4 330 2 182 1 236 2 
158 4 258 1 288 2 215 1 4 1 22 2 161 1 292 1 341 1 67 1 318 1 6 1 365 1 343 1 300 2 195 1 245 1 347 4 97 1 324 2 326 1 274 2 101 1 248 1 353 4 251 1 208 2 230 1 131 1 252 1 132 2 377 1 180 1 378 4 330 2 210 1 104 1 236 2 211 1 182 1 61 1 
158 4 258 1 288 2 215 1 4 1 22 2 161 1 292 1 341 1 67 1 318 1 6 1 365 1 343 1 300 2 195 1 245 1 347 4 97 1 324 2 326 1 274 2 101 1 248 1 353 4 251 1 208 2 230 1 131 1 252 1 132 2 377 1 180 1 378 4 330 2 210 1 104 1 236 2 211 1 182 1 61 1 
285 1 4 1 238 1 292 1 90 1 341 2 6 1 343 1 93 1 195 1 245 1 347 2 97 2 12 2 101 1 353 4 251 1 252 1 313 2 210 1 104 1 211 1 158 2 258 1 213 2 64 1 161 1 67 1 318 1 365 2 71 1 368 1 224 1 324 2 326 1 274 2 230 1 277 1 131 1 377 1 329 1 378 4 180 2 330 2 182 1 
158 5 258 1 186 1 215 1 288 3 4 1 22 2 161 1 292 1 341 1 67 1 318 1 6 1 365 1 343 1 300 3 195 1 245 1 347 5 97 1 324 2 326 1 274 2 101 1 248 1 353 4 251 1 208 2 230 1 131 1 252 1 132 2 377 1 180 1 378 4 330 2 210 1 104 1 211 1 182 1 236 3 61 1 
158 5 258 1 186 1 215 1 288 3 4 1 22 2 161 1 292 1 341 1 67 1 318 1 6 1 365 1 343 1 300 3 195 1 245 1 347 5 97 1 324 2 326 1 274 2 101 1 248 1 353 4 251 1 208 2 230 1 131 1 252 1 132 2 377 1 180 1 378 4 330 2 210 1 104 1 211 1 182 1 236 3 61 1 
158 1 213 1 258 1 4 1 238 1 161 1 292 1 341 1 67 1 6 1 365 1 195 1 245 1 347 2 198 1 97 1 12 1 324 1 326 1 274 1 101 1 353 3 251 1 230 1 313 1 252 1 377 1 378 3 180 1 330 1 210 1 104 1 211 1 182 1 
316 1 5 1 89 1 241 1 66 2 28 1 68 1 244 1 165 1 367 3 223 1 304 1 372 2 271 6 323 3 170 1 373 1 351 1 53 1 125 1 13 1 376 2 253 1 255 1 135 2 183 1 
43 1 140 1 5 2 66 2 192 1 68 11 28 4 163 1 244 2 164 1 367 8 223 2 321 1 372 1 271 14 144 1 323 6 170 2 373 1 201 3 351 11 308 1 52 1 53 2 13 2 376 1 39 1 130 2 253 1 356 1 135 4 107 3 315 2 
284 1 85 1 64 1 140 1 5 1 240 1 317 1 91 1 28 1 365 2 244 1 220 1 31 1 71 1 267 1 367 1 122 1 271 2 34 1 323 1 144 1 35 1 170 1 37 1 36 1 97 2 53 1 327 1 13 1 204 1 175 1 250 1 376 1 253 1 180 1 356 1 135 2 155 1 
1 2 284 2 43 2 3 2 85 3 140 1 5 3 89 1 240 2 241 1 244 3 94 2 304 1 144 1 97 3 351 7 53 3 309 2 13 3 204 2 352 1 250 1 102 1 253 3 356 1 255 1 155 1 315 2 157 1 21 1 316 1 64 1 66 8 68 7 28 7 163 4 365 3 71 1 31 2 267 3 367 10 122 1 223 3 372 4 271 20 323 10 34 2 35 3 170 3 373 3 37 2 74 2 125 1 327 2 175 2 376 2 130 2 180 1 135 6 
81 1 185 1 85 8 291 1 64 1 5 2 240 2 296 1 365 1 244 2 49 1 71 1 31 3 267 7 367 1 122 1 305 1 271 2 144 1 323 1 34 2 35 8 170 2 97 1 53 2 327 2 13 2 352 1 99 1 207 1 253 2 180 1 134 1 379 1 356 1 135 4 183 1 279 2 155 2 
43 1 64 1 140 1 5 1 66 1 28 1 68 1 365 1 244 1 71 1 93 1 367 1 371 1 223 1 372 1 271 3 323 2 170 1 373 1 97 1 351 1 53 1 13 1 16 1 130 1 253 1 180 1 135 2 315 1 
223 1 271 2 170 1 351 1 53 1 13 1 5 1 66 1 28 1 68 1 130 1 163 1 253 1 244 1 135 2 183 1 154 1 367 2 
43 1 372 1 271 2 323 2 170 1 373 1 351 1 172 1 53 1 13 1 5 1 66 1 28 1 68 1 253 1 244 1 135 2 183 1 
223 1 43 1 372 1 271 4 323 2 170 1 373 1 351 2 53 1 13 1 5 1 66 2 28 2 68 2 130 1 163 1 253 1 244 1 135 2 183 1 315 1 367 2 
185 1 223 1 271 2 170 1 351 1 53 1 13 1 5 1 66 1 28 1 68 1 130 1 163 1 253 1 244 1 135 2 154 1 367 2 
185 1 43 1 372 1 271 2 323 2 170 1 373 1 351 1 172 1 53 1 13 1 5 1 66 1 28 1 68 1 253 1 244 1 135 2 
185 1 223 1 43 1 372 1 271 4 323 2 170 1 373 1 351 2 53 1 13 1 5 1 66 2 28 2 68 2 130 1 163 1 253 1 244 1 135 2 315 1 367 2 
223 1 43 1 372 1 271 4 323 2 170 1 373 1 351 2 53 1 13 1 5 1 66 2 28 2 68 2 130 1 163 1 253 1 244 1 135 2 315 1 367 2 
284 1 3 1 85 1 5 1 240 1 365 1 244 1 31 1 267 1 367 1 271 2 144 1 34 1 323 1 35 1 170 1 37 1 97 1 53 1 327 1 13 1 204 1 175 1 376 1 253 1 356 1 135 2 155 1 
284 1 286 1 85 1 5 1 240 1 365 1 244 1 31 1 267 1 367 1 196 1 271 2 144 1 34 1 323 1 35 1 170 1 97 1 53 1 327 1 13 1 175 1 376 1 253 1 356 1 235 1 135 2 155 1 
223 1 43 1 372 1 271 4 323 2 170 1 373 1 351 2 53 1 13 1 140 1 5 1 66 2 28 2 68 2 130 1 163 1 253 1 244 1 135 2 315 1 367 2 
1 1 43 1 284 1 3 1 85 1 5 1 240 1 66 2 296 1 28 2 68 2 163 1 365 1 244 1 31 1 267 1 367 2 223 1 372 1 271 4 323 2 34 1 35 1 170 1 373 1 37 1 97 1 351 2 53 1 327 1 13 1 204 1 175 1 130 1 253 1 135 2 315 1 
43 1 64 1 140 1 5 1 66 1 68 1 28 1 163 1 365 1 244 1 71 1 93 1 367 2 223 1 271 3 323 1 170 1 373 1 97 1 351 1 53 1 273 1 13 1 16 1 130 1 253 1 180 1 135 2 315 1 
334 1 43 3 214 1 337 1 338 1 5 2 48 2 66 6 192 1 163 3 117 1 244 2 367 9 223 3 372 3 271 19 323 10 373 3 201 2 308 1 53 2 13 2 14 2 100 1 130 3 152 1 135 4 107 1 358 1 315 3 
0 1 334 2 82 1 257 1 43 2 214 1 362 1 337 1 339 2 5 3 48 4 66 4 192 2 163 2 117 2 244 3 166 1 367 14 223 3 51 1 372 2 271 26 323 12 373 2 201 2 53 3 13 3 14 1 100 1 130 3 152 1 135 6 107 2 315 3 
0 1 82 1 334 1 257 1 43 4 214 1 316 1 362 1 337 1 338 1 339 1 5 3 89 1 48 4 340 1 241 1 66 8 192 3 163 4 117 2 244 3 166 1 367 20 223 5 51 1 304 1 372 4 271 41 323 21 373 5 201 4 308 1 53 3 125 1 13 3 14 1 100 1 130 4 255 1 152 1 135 6 107 3 315 4 
0 1 82 1 334 1 257 1 43 3 214 1 316 1 362 1 337 1 338 1 339 2 5 4 89 1 48 4 340 1 241 1 66 7 192 3 163 3 117 2 244 4 166 1 367 20 223 5 51 1 304 1 372 4 271 38 323 18 373 4 201 4 308 1 53 4 125 1 13 4 14 1 100 1 130 4 255 1 152 1 135 8 107 3 315 4 
0 1 82 1 334 1 257 1 43 7 214 1 316 1 362 1 337 1 339 1 5 2 89 1 48 4 241 1 66 14 192 2 163 7 117 1 244 2 166 1 367 27 223 8 51 1 304 1 372 7 271 52 323 25 373 8 201 4 308 2 52 2 53 2 125 1 13 2 14 1 100 1 130 7 255 1 152 1 135 4 107 4 315 7 
95 1 120 1 335 1 121 1 199 1 209 1 366 1 268 1 26 1 381 1 
124 1 203 1 
335 1 121 1 199 1 225 1 178 1 366 1 359 1 268 1 381 1 
342 1 177 1 
10 1 40 1 369 1 
95 1 333 2 120 1 83 1 121 1 335 1 199 1 173 1 47 1 147 1 26 1 353 1 179 1 378 1 343 1 366 1 268 1 381 1 
95 1 333 2 120 1 83 1 121 1 335 1 199 1 173 1 47 1 147 1 26 1 353 1 179 1 378 1 343 1 366 1 268 1 381 1 
95 1 333 2 120 1 83 1 121 1 335 1 199 1 173 1 47 1 147 1 26 1 353 1 179 1 378 1 343 1 366 1 268 1 381 1 
342 1 177 1 369 1 
342 1 177 1 369 1 
10 1 40 1 
10 1 40 1 369 1 
212 1 79 1 
333 1 335 1 84 1 363 1 64 2 47 1 365 2 92 1 366 1 71 2 265 1 9 1 268 1 121 1 199 1 97 2 124 1 173 1 203 1 353 1 375 1 376 1 378 1 180 2 212 1 79 1 381 1 
85 2 290 1 140 1 5 1 240 1 364 1 365 2 244 1 31 1 267 2 367 1 270 1 271 2 34 1 144 1 323 1 35 2 170 1 97 2 53 1 327 1 126 1 13 1 207 1 253 1 180 2 355 1 379 1 356 1 135 2 279 2 
11 1 35 2 85 2 327 1 240 1 352 1 148 1 296 1 115 1 231 1 298 2 108 1 301 1 78 1 278 1 267 2 60 1 346 1 280 1 
11 1 35 1 85 1 327 1 352 1 240 1 148 1 231 1 298 2 345 1 301 1 78 1 278 1 267 1 60 1 346 1 280 1 
34 1 35 1 85 1 272 1 327 1 240 1 99 1 57 1 115 1 134 1 31 1 155 1 267 1 280 1 
11 1 35 1 85 1 327 1 352 1 240 1 148 1 115 1 231 1 298 2 108 1 301 1 78 1 278 1 267 1 60 1 346 1 280 1 
27 1 
101 1 249 1 318 1 165 1 343 1 211 1 25 1 
158 1 4 1 22 1 67 1 318 1 343 2 12 1 101 1 248 1 353 1 230 1 208 1 252 1 132 1 378 1 330 1 211 1 
43 2 188 1 4 4 2 2 85 3 139 2 292 2 239 2 240 2 296 1 242 1 343 8 142 6 247 1 197 1 12 12 309 2 15 2 101 9 249 1 353 5 252 4 254 1 106 3 153 1 211 8 155 1 314 1 315 2 158 5 259 2 261 2 217 2 25 1 67 4 318 2 31 8 267 3 223 2 34 2 35 3 373 2 226 1 327 3 228 2 175 2 41 2 230 4 130 2 132 6 378 5 330 3 42 6 332 1 
158 1 82 1 257 1 43 2 362 1 4 2 261 2 239 1 192 1 67 2 318 2 297 1 166 1 343 5 142 5 223 2 51 1 171 1 373 2 201 1 12 6 228 1 101 8 353 1 230 2 130 2 252 2 132 3 254 1 378 1 330 1 42 5 107 1 211 5 315 2 
215 1 4 1 261 2 64 1 89 1 90 1 341 1 67 1 29 1 365 1 71 1 93 1 368 1 223 2 224 1 304 1 373 1 97 1 125 1 228 1 101 2 353 1 230 1 252 1 329 1 378 1 180 1 211 2 
4 1 25 1 101 1 249 1 230 1 67 1 252 1 318 1 343 1 211 1 
142 5 223 2 43 2 373 2 12 10 309 1 261 2 228 1 101 5 130 2 132 5 343 5 211 5 42 5 315 2 
353 1 158 1 318 1 378 1 330 1 343 1 
282 1 281 1 158 4 187 1 4 2 85 4 239 2 240 2 67 2 116 1 118 1 31 2 267 4 247 2 34 2 197 1 123 1 35 4 327 3 99 1 175 1 275 1 101 2 128 1 353 3 230 1 252 2 254 2 378 3 134 1 330 2 211 2 184 1 155 2 
284 1 3 1 85 1 64 2 5 1 90 1 240 1 190 1 365 3 244 1 71 2 31 1 267 1 93 2 271 1 323 1 34 1 35 1 170 1 37 1 97 3 53 1 13 1 327 1 204 1 175 1 376 1 253 1 180 2 356 1 135 2 155 1 
142 2 316 1 4 1 12 4 239 1 101 1 230 1 67 1 252 1 318 2 132 2 254 1 343 4 42 2 211 2 
335 1 121 1 113 1 
95 1 335 1 121 1 18 1 212 1 
335 1 121 1 113 1 
335 1 121 1 113 1 
335 1 121 1 234 1 
335 1 121 1 234 1 
335 1 121 1 234 1 
335 1 121 1 
199 1 381 1 
223 1 304 1 316 1 271 8 372 2 323 4 373 1 53 2 125 1 13 2 5 2 339 1 89 1 241 1 66 3 163 1 244 2 135 4 255 1 367 4 
223 1 304 1 316 1 372 2 271 6 323 3 373 1 125 1 89 1 241 1 66 2 165 1 255 1 367 3 
223 1 43 1 372 1 271 4 323 2 373 1 53 1 13 1 5 1 66 2 130 1 163 1 244 1 135 2 302 1 315 1 367 2 
223 1 43 1 372 1 271 7 323 4 373 1 201 2 308 1 66 2 192 1 130 1 163 1 107 1 367 3 315 1 
43 2 316 1 339 2 5 2 89 1 241 1 66 9 163 4 244 2 266 1 367 11 223 3 304 2 271 23 372 5 323 12 373 3 201 2 308 1 52 1 53 2 125 2 13 2 39 1 130 2 255 1 135 4 107 2 315 2 
271 1 323 1 201 1 
271 1 107 1 367 1 
223 1 43 1 271 6 372 2 323 3 373 1 53 1 309 1 13 1 5 1 66 3 130 1 163 1 244 1 135 2 302 1 315 1 367 3 
82 1 257 1 43 2 362 1 5 1 66 2 192 1 163 1 244 1 166 1 367 6 223 2 51 1 271 12 372 1 323 6 373 2 201 1 53 1 13 1 100 1 130 2 135 2 107 1 315 2 
223 1 304 1 271 6 372 1 323 3 373 1 125 1 89 1 66 2 163 1 367 3 
304 1 372 1 271 3 323 2 53 1 125 1 13 1 339 1 5 1 241 1 66 2 163 1 244 1 135 2 255 1 266 1 367 1 
223 2 304 2 372 3 271 10 323 5 373 2 53 1 125 2 13 1 5 1 89 1 100 1 66 5 29 1 163 2 244 1 135 2 367 5 
223 1 271 2 53 1 13 1 5 1 100 1 66 1 130 1 163 1 244 1 135 2 367 2 
223 1 43 1 372 1 271 4 323 2 373 1 53 1 13 1 5 1 100 1 66 2 130 1 163 1 244 1 135 2 315 1 367 2 
304 1 271 3 372 1 323 2 338 1 53 3 125 1 13 3 339 1 5 3 100 1 66 2 163 1 244 3 135 6 266 1 367 1 
43 3 316 1 338 1 339 2 5 5 89 2 241 1 66 12 192 1 163 5 244 5 70 1 266 1 302 1 367 16 223 5 304 3 271 34 372 7 323 18 373 5 201 4 308 1 53 5 125 3 13 5 100 1 129 1 130 3 255 1 135 10 107 3 156 1 315 3 
316 1 362 1 5 1 89 1 241 1 66 2 192 1 244 1 367 4 223 1 304 1 271 8 372 2 323 4 373 1 201 1 53 1 125 1 13 1 100 1 135 2 255 1 107 1 
316 1 362 1 5 2 89 1 241 1 66 3 192 1 163 1 244 2 302 1 367 6 223 2 304 1 372 2 271 11 323 5 373 1 201 2 308 1 53 2 125 1 13 2 100 1 130 1 255 1 135 4 107 1 315 1 
82 1 257 1 43 2 316 1 362 1 5 3 339 1 89 1 241 1 66 4 192 1 163 1 244 3 166 1 302 1 367 9 223 3 51 1 304 1 271 19 372 3 323 10 373 3 201 1 53 3 125 1 13 3 100 1 130 2 255 1 135 6 107 1 315 2 
82 1 257 1 43 1 316 1 362 1 339 1 5 3 89 1 241 1 66 5 192 1 163 2 244 3 166 1 302 1 367 10 223 3 51 1 304 1 271 17 372 3 323 7 373 2 201 1 53 3 125 1 13 3 100 1 130 2 255 1 135 6 107 1 315 2 
316 1 362 1 5 1 89 1 241 1 66 2 192 1 244 1 367 4 223 1 304 1 271 8 372 2 323 4 373 1 201 1 53 1 125 1 13 1 100 1 135 2 255 1 107 1 
82 1 257 1 43 2 362 1 5 1 66 2 192 1 163 1 244 1 166 1 367 6 223 2 51 1 271 12 372 1 323 6 373 2 201 1 53 1 13 1 100 1 130 2 135 2 107 1 315 2 
82 1 257 1 43 1 316 1 362 1 5 4 339 2 89 1 241 1 66 5 192 1 163 2 244 4 166 1 302 1 367 10 223 3 51 1 304 1 271 18 372 3 323 8 373 2 201 1 53 4 125 1 13 4 100 1 130 2 255 1 135 8 107 1 315 2 
82 1 257 1 43 2 362 1 338 1 5 4 339 2 66 6 192 1 163 3 244 4 166 1 367 9 223 3 51 1 271 16 372 3 323 7 373 2 201 1 53 4 13 4 100 1 130 3 135 8 107 1 315 3 
223 1 304 3 271 7 372 3 323 4 373 1 125 3 89 1 241 2 66 6 163 3 255 1 367 3 
82 1 257 1 43 1 316 1 362 1 338 1 5 4 339 2 89 1 241 1 66 4 192 1 163 1 244 4 166 1 367 10 223 3 51 1 304 1 271 18 372 3 323 8 373 2 201 1 53 4 125 1 13 4 100 1 130 2 255 1 135 8 107 1 315 2 
376 1 365 1 97 1 180 1 98 1 182 1 293 1 
295 1 376 1 365 1 97 1 180 1 98 1 151 1 182 1 19 1 216 1 293 1 88 1 
34 1 35 1 134 1 85 1 165 1 31 1 327 1 267 1 155 1 240 1 99 1 
122 1 284 1 34 1 35 1 37 1 97 2 85 1 64 1 327 1 240 1 175 1 376 1 365 2 180 1 31 1 71 1 155 1 267 1 
284 1 258 1 188 1 85 1 64 2 240 1 341 1 365 2 71 1 31 3 267 1 122 1 247 1 34 2 35 1 37 1 97 2 327 1 175 2 376 1 251 1 180 2 314 1 
284 1 258 1 188 1 85 2 64 2 240 1 341 1 365 2 71 1 31 3 267 2 122 1 247 1 34 2 35 2 97 2 227 1 327 1 175 2 376 1 251 1 180 2 235 1 314 1 
158 1 247 1 34 1 188 1 35 3 85 3 227 1 292 1 327 1 114 1 217 1 240 1 175 1 353 2 318 1 378 2 343 1 106 1 31 4 155 1 20 1 267 3 314 1 
158 1 247 1 34 1 188 1 35 3 85 3 227 1 292 1 327 1 15 1 217 1 240 1 175 1 353 2 318 1 378 2 343 1 106 1 31 4 155 1 267 3 314 1 
305 1 35 1 85 1 327 1 267 1 240 1 
81 1 282 1 281 1 305 1 34 2 35 7 85 7 291 1 327 3 352 1 240 2 175 1 296 1 207 1 49 1 380 1 153 1 31 3 279 1 155 2 267 6 
1 1 284 1 3 1 85 1 140 1 5 2 240 1 89 1 241 1 296 1 244 2 94 1 304 1 97 2 351 1 53 2 13 2 204 1 253 2 255 1 316 1 64 1 66 2 28 1 68 1 365 2 71 1 31 1 267 1 367 3 270 1 122 1 223 1 372 2 271 6 34 1 323 3 35 1 170 2 37 1 373 1 125 1 327 1 175 1 376 2 180 1 135 4 
158 2 84 1 259 1 4 2 85 1 139 1 292 1 217 1 25 1 67 2 318 1 343 1 31 2 267 1 197 1 35 1 15 1 101 1 249 1 353 3 41 1 230 2 252 2 378 3 330 1 106 1 211 1 155 1 
305 1 34 1 35 2 85 2 226 1 327 2 217 1 240 1 175 1 296 1 153 1 31 2 267 2 
34 1 35 4 85 4 227 1 327 1 99 1 240 1 276 1 296 1 134 1 31 1 155 1 267 4 
282 1 281 1 157 1 247 1 34 1 35 2 85 2 327 2 240 1 175 1 128 1 118 1 31 1 267 2 
11 1 231 1 35 1 298 1 85 1 327 1 267 1 155 1 346 1 240 1 
34 1 35 2 85 2 290 1 327 1 352 1 240 1 296 1 207 1 31 1 267 2 
247 1 34 2 35 5 85 5 291 1 327 2 99 1 240 2 276 1 296 1 207 1 134 1 49 1 31 3 155 1 267 4 
247 1 34 2 35 5 85 5 160 1 291 1 327 2 99 1 240 2 276 1 296 1 207 1 134 1 31 3 155 1 267 4 
122 1 284 1 34 1 35 1 97 2 85 1 64 1 327 1 240 1 175 1 376 1 365 2 180 1 235 1 31 1 71 1 155 1 267 1 
282 1 281 1 247 1 34 1 35 1 85 1 327 2 240 1 175 1 380 1 153 1 31 1 267 1 
44 1 97 1 260 1 126 1 76 1 364 1 365 1 180 1 355 1 
44 1 328 1 189 1 
376 1 44 1 260 1 167 1 76 1 
44 1 84 1 258 1 260 2 189 1 292 1 76 2 341 1 353 2 376 1 251 1 193 1 318 1 328 1 6 1 219 1 378 2 343 1 167 2 
312 1 159 1 165 1 262 1 
312 1 138 1 349 1 159 1 299 1 320 1 262 1 
200 1 320 1 294 1 
322 1 349 1 138 3 159 1 202 1 262 1 312 1 17 1 299 1 320 3 119 2 256 1 
312 1 138 2 349 1 159 1 287 1 299 1 320 2 262 1 370 1 
349 1 138 1 262 1 311 1 206 1 148 1 231 1 298 1 299 1 320 1 256 1 
138 1 349 1 159 1 299 1 320 1 256 1 262 1 
312 1 138 1 349 1 159 2 299 1 320 1 256 1 
349 2 138 2 159 1 46 1 262 1 150 1 299 2 320 2 256 1 331 1 
168 1 349 1 138 3 159 1 55 1 262 2 206 1 312 1 30 1 299 1 320 3 256 1 370 2 
349 1 138 2 159 1 23 1 262 1 148 1 312 1 231 1 298 2 299 1 320 2 301 1 256 1 346 1 370 1 
168 1 349 2 138 4 159 1 287 1 262 2 206 1 312 1 103 1 299 2 320 4 256 1 370 2 
312 1 138 1 349 1 159 1 299 1 320 1 256 1 262 1 
168 1 138 4 349 1 159 2 202 1 174 1 262 3 206 1 312 2 17 1 299 1 119 1 320 4 370 2 
110 1 349 1 138 2 159 1 374 1 262 1 312 1 299 1 7 1 320 2 256 1 370 1 
349 1 138 3 159 1 202 2 262 1 77 1 312 1 17 1 299 1 320 3 119 2 256 1 
181 2 127 1 310 1 262 2 
138 1 349 1 307 1 299 1 320 1 256 1 
312 1 138 2 349 1 159 1 30 1 299 1 320 2 256 1 262 1 370 1 
237 1 
312 1 138 1 349 1 159 1 299 1 320 1 256 1 262 1 
349 1 138 3 159 1 262 1 312 1 30 1 299 1 320 3 119 1 256 1 370 1 
206 1 168 1 174 1 262 1 
159 1 262 1 

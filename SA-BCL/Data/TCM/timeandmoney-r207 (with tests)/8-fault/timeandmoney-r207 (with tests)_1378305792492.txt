#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (96,190) 25 (39,296) (39,296) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (96,190) 25 (39,296) (39,296) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (96,190) 25 (39,296) (39,296) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (96,190) 25 (39,296) (39,296) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 137 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 140 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 93 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 56 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (110,135) (110,135) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 242 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 112 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 229 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 229 199 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (63,108,235) (92,197,214) (92,197,214) (92,197,214) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 301 243 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 40 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 40 4 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 143 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 143 185 251 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 143 185 251 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 143 185 272 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 40 4 145 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 40 4 145 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 143 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 16 186 231 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 283 (178,241) (178,241) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (110,135) (110,135) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (110,135) (110,135) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (110,135) (110,135) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 56 297 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (63,108,235) (63,108,235) (63,108,235) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 137 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 326 (26,125) 312 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 38 83 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (20,265) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (1,106) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (12,91) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 16 186 231 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 16 305 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
96 1 296 1 319 1 321 1 250 1 157 1 25 1 39 1 306 1 325 1 212 1 
96 1 296 1 319 1 321 1 250 1 157 1 25 1 39 1 306 1 325 1 212 1 
96 1 296 1 319 1 321 1 250 1 157 1 25 1 39 1 306 1 325 1 212 1 
96 1 296 1 319 1 321 1 250 1 157 1 25 1 39 1 306 1 325 1 212 1 
29 1 321 4 155 1 157 1 250 4 131 1 252 1 302 1 161 2 306 1 212 1 307 1 98 1 287 1 73 3 289 2 109 3 150 1 
29 1 319 1 321 2 157 1 250 2 131 1 255 1 46 1 306 1 212 1 142 1 325 1 98 1 287 1 174 1 109 1 
319 1 321 3 157 2 250 3 306 2 212 1 98 1 190 1 287 1 73 1 289 1 109 2 150 1 
29 1 273 1 319 1 155 1 321 9 157 2 250 9 131 1 252 1 206 1 302 1 161 2 306 2 212 1 307 1 98 1 190 1 287 1 148 1 73 7 289 4 109 5 295 1 150 3 
29 1 273 1 319 1 155 1 321 9 157 2 250 9 131 1 252 1 206 1 302 1 161 2 306 2 212 1 307 1 98 1 190 1 287 1 148 1 73 7 289 4 109 5 295 1 150 3 
137 1 
0 1 223 1 180 1 134 1 111 1 209 1 32 1 281 1 168 1 146 1 333 1 335 1 
0 1 223 1 180 2 134 2 111 1 32 1 48 1 281 1 120 1 146 1 267 1 333 1 335 1 
180 1 134 1 114 1 
180 1 134 1 114 1 
180 1 134 1 
180 1 134 1 114 1 
180 1 134 1 114 1 
180 2 169 1 322 1 170 1 134 2 114 1 232 1 
12 1 48 1 144 1 22 1 146 2 264 1 105 1 54 2 200 2 111 1 159 1 33 1 238 1 164 1 283 1 35 1 120 1 290 1 291 1 217 1 74 1 333 2 79 2 
14 1 137 1 
48 1 6 1 120 1 146 2 64 1 14 2 111 2 267 1 333 2 
284 1 291 1 136 1 
200 1 12 1 14 1 159 1 164 1 144 1 22 1 283 1 146 1 215 1 290 1 217 1 333 1 74 1 54 1 79 1 
6 1 182 1 111 5 14 1 209 1 279 1 48 4 120 4 146 5 264 2 105 1 333 5 267 1 81 1 
223 1 48 2 21 1 71 1 146 2 120 2 111 2 333 2 
48 3 146 3 120 3 264 1 14 1 111 3 267 1 333 3 
223 1 48 1 21 1 146 1 120 1 111 1 333 1 
223 1 48 1 6 1 146 1 120 1 64 1 111 1 333 1 267 1 
223 1 0 1 58 1 180 1 6 1 134 1 111 2 32 1 140 1 48 2 281 1 120 2 146 2 264 1 105 1 333 2 267 1 335 1 
48 1 146 2 120 1 264 1 14 1 111 2 333 2 209 1 81 1 
223 1 58 1 0 1 180 1 134 1 111 1 32 1 93 1 48 1 281 1 120 1 146 1 264 1 105 1 333 1 335 1 
6 1 111 2 136 1 48 2 120 2 146 2 264 1 291 1 267 1 333 2 
200 1 12 1 14 1 159 1 164 1 144 1 22 1 283 1 146 1 290 1 217 1 333 1 54 1 74 1 79 1 
200 1 14 1 159 1 164 1 144 1 22 1 146 1 290 1 106 1 217 1 333 1 54 1 74 1 79 1 318 1 
179 1 299 1 128 1 84 1 300 4 132 2 136 2 304 1 188 1 95 1 230 1 192 1 193 1 311 2 203 1 277 2 323 1 69 1 329 1 68 1 284 2 121 1 332 1 291 2 
223 1 0 1 48 1 71 1 146 1 120 1 111 1 333 1 
49 1 123 1 
49 1 123 1 
152 1 45 1 
152 1 45 1 
152 1 45 1 
49 1 3 1 123 1 
49 1 248 1 123 1 
152 1 49 2 44 1 123 2 45 1 124 1 
49 1 3 1 123 1 
49 1 3 1 123 1 
49 1 204 1 123 1 
49 1 204 1 123 1 
49 1 204 1 123 1 
153 1 274 1 180 1 134 1 111 1 49 1 48 1 50 1 101 1 146 1 120 1 123 1 218 1 333 1 56 1 269 1 
153 2 110 1 180 2 274 1 135 1 134 2 47 1 49 2 50 2 101 2 123 2 218 2 107 1 269 2 
29 1 131 1 252 1 
29 1 131 1 46 1 
29 3 86 1 249 1 252 2 46 1 293 1 
29 2 86 1 252 1 244 1 46 1 293 1 
29 2 86 1 252 1 46 1 293 2 
180 1 134 1 242 1 114 1 
180 2 134 2 219 1 112 1 268 1 114 2 
180 2 61 1 322 1 134 2 210 1 229 1 114 1 165 1 169 1 170 1 270 1 232 1 
199 1 180 1 61 1 322 1 134 1 210 1 229 1 165 1 169 1 170 1 270 1 232 1 
147 1 74 1 137 1 
74 1 233 1 
298 1 
164 1 159 1 74 1 
74 1 245 1 
164 1 74 1 
164 1 167 1 147 2 159 1 74 3 67 1 
59 1 299 1 10 1 234 1 84 1 300 7 13 1 132 4 237 2 68 3 193 2 311 3 77 1 313 1 314 1 271 1 57 1 
59 1 299 1 10 1 234 1 84 1 300 7 13 1 132 4 237 2 68 3 193 2 311 3 77 1 313 1 314 1 271 1 57 1 
59 1 299 1 10 1 234 1 84 1 300 7 13 1 132 4 237 2 68 3 193 2 311 3 77 1 76 1 313 1 314 1 271 1 57 1 
82 1 227 1 10 1 129 1 300 6 88 1 132 3 13 1 304 1 193 1 311 3 57 1 59 2 203 1 234 1 277 2 113 1 237 1 329 1 68 2 119 1 38 1 332 1 77 1 
299 1 10 1 84 1 300 9 184 1 132 5 13 1 304 2 97 1 193 3 311 4 313 1 271 1 314 1 57 1 59 1 203 2 277 4 237 2 329 2 68 4 119 1 332 2 77 1 
319 1 321 1 157 1 250 1 158 1 235 1 92 1 306 1 212 1 214 1 102 1 42 1 222 1 197 1 315 1 
249 1 250 3 131 1 252 1 46 1 306 1 98 1 144 1 54 1 53 1 109 1 315 1 197 1 29 2 200 1 319 1 30 1 321 3 157 1 156 1 158 1 235 1 214 1 287 1 73 2 37 1 217 1 222 1 42 1 79 1 
250 2 249 1 131 1 252 1 46 1 98 1 144 1 54 1 109 1 315 1 197 1 29 2 200 1 319 1 30 1 321 2 156 1 235 1 287 1 73 2 37 1 217 1 222 1 42 1 79 1 
250 1 85 1 306 1 144 1 309 1 54 1 53 1 315 2 200 1 319 2 321 1 157 1 164 1 34 1 282 1 290 1 217 1 74 1 78 1 177 1 42 2 79 1 222 2 
250 1 249 1 131 1 252 1 46 1 92 1 306 1 144 1 54 1 315 1 197 1 29 2 200 1 319 1 321 1 157 1 156 1 158 1 235 1 212 1 214 1 37 1 217 1 222 1 42 1 79 1 
122 1 
200 1 180 1 322 1 301 1 134 1 210 1 139 1 169 1 290 1 243 1 54 1 270 1 79 1 232 1 
223 1 0 1 180 2 130 1 134 2 205 1 111 1 32 1 209 1 281 1 168 1 146 1 52 1 333 1 40 1 175 1 294 1 335 1 
223 1 0 1 126 1 180 2 130 1 134 2 205 1 111 1 32 1 209 1 281 1 168 1 146 1 52 1 333 1 175 1 294 1 335 1 
223 1 0 1 4 1 180 2 130 1 134 2 205 1 111 1 32 1 209 1 281 1 168 1 146 1 52 1 333 1 40 1 175 1 294 1 335 1 
180 1 134 1 
0 1 223 1 180 2 87 1 130 1 134 2 256 1 139 1 94 1 143 1 146 1 52 1 270 1 232 1 322 1 205 1 111 1 209 1 32 1 280 1 281 1 168 1 169 1 333 1 175 1 294 1 335 1 336 1 
0 1 223 1 180 2 87 1 130 1 251 1 134 2 185 1 256 1 139 1 94 1 143 1 146 1 52 1 270 1 232 1 322 1 205 1 111 1 209 1 32 1 280 1 281 1 168 1 169 1 333 1 175 1 334 1 294 1 335 1 336 1 
0 1 223 1 180 2 87 1 130 1 251 1 134 2 185 1 256 1 139 1 94 1 143 1 146 1 52 1 270 1 232 1 322 1 205 1 111 1 209 1 32 1 280 1 281 1 168 1 169 1 333 1 175 1 334 1 294 1 335 1 336 1 
0 1 223 1 180 2 87 1 130 1 134 2 185 1 256 1 139 1 94 1 143 1 146 1 263 1 52 1 270 1 272 1 232 1 322 1 205 1 111 1 209 1 32 1 327 1 281 1 168 1 169 1 333 1 176 1 175 1 294 1 335 1 
223 1 0 1 4 1 180 2 130 1 134 2 205 1 111 1 32 1 209 1 281 1 145 1 168 1 146 1 52 1 333 1 40 1 175 1 294 1 335 1 
223 1 0 1 4 1 180 2 130 1 134 2 205 1 111 1 32 1 209 1 281 1 145 1 168 1 146 1 52 1 333 1 40 1 175 1 294 1 335 1 
0 1 223 1 180 2 130 1 87 1 134 2 256 1 139 1 94 1 143 1 146 1 52 1 270 1 232 1 322 1 205 1 111 1 209 1 32 1 327 1 281 1 168 1 169 1 333 1 176 1 175 1 294 1 335 1 
128 1 10 1 299 1 84 1 300 6 132 3 14 2 136 1 137 1 304 1 230 1 192 1 193 2 311 3 313 1 271 1 314 1 203 1 277 2 237 1 329 1 68 2 284 1 291 1 332 1 77 1 
223 1 2 1 179 2 227 2 128 1 299 2 129 2 84 1 300 12 133 1 132 7 14 1 136 2 304 2 230 2 99 1 193 1 311 5 203 2 202 1 276 1 277 4 162 2 163 1 68 1 329 2 69 1 70 1 284 8 331 1 172 1 332 2 291 8 
128 1 12 1 300 2 132 1 14 1 136 1 304 1 230 1 144 1 48 1 22 1 99 1 146 2 103 1 264 1 105 1 311 1 195 1 54 1 200 1 203 1 276 1 277 2 207 1 159 1 111 1 164 1 283 1 329 1 215 1 120 1 290 1 217 1 332 1 172 1 74 1 333 2 79 1 
179 2 10 1 84 3 12 2 13 4 14 2 258 2 99 1 22 2 193 4 24 1 264 1 105 1 26 2 271 1 27 2 200 3 203 3 276 1 277 6 111 1 283 2 285 1 284 7 120 1 290 1 37 1 217 2 291 7 128 3 299 3 300 20 132 10 136 7 304 3 230 3 48 1 144 2 146 3 311 10 54 3 313 1 314 1 317 1 159 2 162 2 237 1 164 2 329 3 68 8 69 2 241 2 172 1 332 3 333 3 74 2 77 1 79 3 178 2 
128 2 300 2 85 1 132 1 186 1 16 1 304 2 230 2 48 1 144 1 99 1 192 1 309 1 231 1 146 1 102 1 264 1 311 1 54 3 200 3 203 2 275 1 277 4 111 1 324 1 33 1 164 1 329 2 120 1 290 2 217 1 332 2 172 1 333 1 74 1 79 3 
179 1 6 1 247 1 128 1 299 1 84 1 300 3 132 1 136 1 304 1 230 1 48 1 193 1 146 1 311 2 267 1 203 1 276 1 277 2 111 1 162 1 68 1 329 1 69 1 284 1 120 1 291 1 332 1 333 1 
179 1 203 1 128 1 299 1 300 2 13 1 277 2 132 2 136 1 304 1 230 1 68 1 192 1 329 1 284 1 121 1 291 1 332 1 
203 1 128 1 84 1 300 2 277 2 323 1 136 1 304 1 230 1 68 1 193 1 192 1 329 1 69 1 284 1 311 2 291 1 332 1 
179 1 299 1 128 1 84 1 300 4 132 2 13 1 136 2 304 1 230 1 192 1 193 1 311 2 203 1 277 2 162 1 329 1 68 2 69 1 284 2 332 1 291 2 
179 1 203 1 128 1 299 1 300 2 13 1 277 2 132 2 136 1 304 1 324 1 230 1 68 1 329 1 284 1 121 1 291 1 332 1 
203 1 128 1 84 1 300 2 277 2 323 1 136 1 304 1 324 1 230 1 68 1 193 1 329 1 69 1 284 1 311 2 291 1 332 1 
179 1 299 1 128 1 84 1 300 4 132 2 13 1 136 2 304 1 230 1 193 1 311 2 203 1 277 2 162 1 324 1 329 1 68 2 69 1 284 2 332 1 291 2 
179 1 203 1 128 1 299 1 84 1 300 4 13 1 277 2 132 2 136 2 304 1 162 1 230 1 193 1 69 1 68 2 329 1 284 2 311 2 291 2 332 1 
128 1 300 2 12 1 132 1 14 1 304 1 230 1 144 1 99 1 22 1 146 1 311 1 54 1 200 1 203 1 277 2 159 1 164 1 283 1 329 1 290 1 217 1 332 1 172 1 74 1 333 1 178 1 79 1 
128 1 228 1 300 2 132 1 14 1 304 1 230 1 144 1 99 1 22 1 146 1 106 1 311 1 54 1 318 1 200 1 203 1 277 2 159 1 164 1 329 1 290 1 217 1 332 1 172 1 74 1 333 1 79 1 
179 1 299 1 128 1 84 1 300 4 132 2 13 1 136 2 304 1 230 1 193 1 311 2 203 1 276 1 277 2 162 1 329 1 68 2 69 1 284 2 332 1 291 2 
283 1 241 1 102 1 178 1 
179 1 6 1 128 1 299 1 84 1 300 3 13 1 132 2 136 1 304 1 230 1 48 1 146 1 311 1 267 1 149 1 203 1 276 1 277 2 111 1 162 1 69 1 68 1 329 1 284 1 120 1 332 1 291 1 333 1 
83 1 179 3 10 1 7 1 227 3 9 4 299 4 84 4 129 3 300 37 13 4 132 19 15 2 304 4 187 1 257 1 19 1 97 1 191 1 193 4 308 1 311 18 313 1 314 1 271 1 316 1 198 1 203 4 277 8 162 3 278 1 237 1 68 8 329 4 69 3 330 1 119 2 171 1 38 3 332 4 173 1 77 1 
83 1 179 3 10 1 7 1 227 2 9 4 299 4 84 4 129 2 300 35 13 3 132 18 15 1 304 4 257 1 19 1 97 1 191 1 193 2 308 1 311 17 313 1 314 1 271 1 316 1 198 1 203 4 277 8 162 3 278 1 237 1 68 5 329 4 69 3 330 1 119 2 171 1 38 2 332 4 173 1 77 1 
83 1 179 3 7 1 227 2 9 4 299 3 84 3 129 2 300 28 13 3 132 14 15 1 304 3 257 1 19 1 97 1 191 1 193 3 308 1 311 14 316 1 198 1 203 3 277 6 162 3 278 1 68 6 329 3 69 3 330 1 119 2 38 2 332 3 173 1 
83 1 179 3 10 1 7 1 227 2 9 3 299 4 84 4 129 2 183 1 300 33 13 3 132 17 15 1 304 4 257 1 19 1 97 1 191 1 193 3 308 1 311 16 313 1 314 1 271 1 198 1 203 4 277 8 162 3 278 1 237 1 68 6 329 4 69 3 330 1 119 2 171 1 38 2 332 4 173 1 77 1 
83 1 179 3 7 1 9 4 227 2 299 3 84 2 129 2 300 26 13 2 132 14 15 2 304 3 257 1 19 1 97 1 191 1 193 2 308 1 311 12 316 1 198 1 203 3 277 6 162 3 278 2 68 4 329 3 69 2 330 1 119 2 332 3 38 2 173 1 
49 1 153 1 50 1 8 1 101 1 23 1 123 1 220 1 269 1 124 1 
328 1 248 1 
49 1 153 1 50 1 60 1 101 1 123 1 211 1 269 1 141 1 
3 1 154 1 
204 1 286 1 44 1 
153 1 110 1 274 1 180 1 135 1 134 1 47 1 49 1 50 1 101 1 123 1 218 2 107 1 269 1 
153 1 110 1 274 1 180 1 135 1 134 1 47 1 49 1 50 1 101 1 123 1 218 2 107 1 269 1 
153 1 110 1 274 1 180 1 135 1 134 1 47 1 49 1 50 1 101 1 123 1 218 2 107 1 269 1 
3 1 154 1 44 1 
3 1 154 1 44 1 
204 1 286 1 
204 1 286 1 44 1 
239 1 320 1 
153 1 297 1 180 1 134 1 114 1 47 1 49 1 50 1 101 1 123 1 218 1 107 1 56 1 269 1 
246 1 128 1 300 2 43 1 132 1 16 1 304 1 230 1 144 1 99 1 100 1 146 2 311 1 54 2 200 2 203 1 275 1 276 1 277 2 111 2 164 1 33 2 329 1 217 1 332 1 172 1 74 1 333 2 41 1 79 2 80 1 
200 1 51 1 158 1 102 1 63 1 235 1 37 1 108 1 54 1 222 1 79 1 
29 2 200 1 249 1 156 1 131 1 158 1 252 1 235 1 46 1 144 1 259 1 37 1 217 1 54 1 108 1 79 1 222 1 
200 1 151 1 85 1 164 1 144 1 34 1 309 1 51 1 290 1 217 1 74 1 54 1 79 1 222 1 
29 2 200 1 249 1 156 1 131 1 158 1 252 1 63 1 235 1 46 1 144 1 51 1 37 1 217 1 54 1 108 1 79 1 222 1 
89 1 
20 1 87 1 265 1 137 1 
169 1 322 1 87 1 270 1 139 1 336 1 280 1 232 1 
200 1 226 1 322 1 159 1 67 1 210 1 139 1 326 1 164 1 144 2 169 1 290 1 217 1 74 2 54 1 312 1 270 1 79 1 125 1 233 1 232 1 
83 1 227 1 129 1 169 1 322 1 87 1 38 1 270 1 139 1 232 1 
180 1 299 2 10 1 84 1 322 1 87 2 134 1 254 1 139 1 189 1 169 1 334 1 77 1 270 1 314 1 221 1 232 1 
20 1 169 1 322 1 87 1 139 1 232 1 
179 1 69 1 299 1 84 1 87 1 162 1 270 1 
200 1 290 1 54 1 79 1 
169 1 62 1 322 1 87 1 210 1 270 1 139 1 232 1 
28 1 50 1 101 1 
239 1 50 1 8 1 101 1 90 1 
28 1 50 1 101 1 
28 1 50 1 101 1 
50 1 101 1 262 1 
50 1 101 1 262 1 
50 1 101 1 262 1 
50 1 101 1 
49 1 123 1 
83 1 179 2 10 2 227 1 299 5 7 1 129 1 84 4 300 24 13 4 132 14 304 2 97 1 191 1 193 4 311 10 313 1 314 2 271 1 203 2 277 4 162 2 237 1 329 2 69 1 68 8 330 1 119 1 38 1 332 2 173 1 77 2 221 1 
83 1 179 2 10 1 227 1 299 3 7 1 129 1 84 2 300 17 13 1 132 10 304 3 97 1 191 1 193 3 311 7 313 1 314 1 271 1 203 3 277 6 162 2 237 1 213 1 329 3 69 1 68 4 330 1 119 1 38 1 332 3 173 1 77 1 
83 1 179 2 10 1 227 1 299 3 7 1 129 1 84 3 300 19 13 1 132 9 304 3 97 1 191 1 193 3 311 10 313 1 314 1 271 1 203 3 277 6 162 2 237 1 213 1 329 3 69 2 68 4 330 1 119 1 38 1 332 3 173 1 77 1 
83 1 179 2 10 1 227 1 299 3 7 1 129 1 84 2 300 17 13 2 132 10 304 3 97 1 191 1 193 3 311 7 313 1 314 1 271 1 203 3 277 6 162 2 237 1 213 1 329 3 69 1 68 5 330 1 119 1 38 1 332 3 173 1 77 1 
83 1 179 2 10 2 227 1 299 5 7 1 129 1 84 4 300 24 13 4 132 14 304 2 97 1 191 1 193 4 311 10 313 1 314 2 271 1 203 2 277 4 162 2 237 1 329 2 69 1 68 8 330 1 119 1 38 1 332 2 173 1 77 2 221 1 
83 1 179 2 227 1 299 2 7 1 129 1 84 2 300 12 13 1 132 6 304 1 97 1 191 1 193 1 311 6 203 1 277 2 162 2 329 1 69 2 68 2 330 1 38 1 332 1 173 1 
83 1 179 2 10 1 7 1 227 1 299 3 129 1 84 2 300 18 13 2 132 10 304 4 97 1 191 1 193 3 311 8 313 1 314 1 271 1 203 4 277 8 162 2 237 1 213 1 329 4 69 1 68 5 330 1 119 2 38 1 332 4 173 1 77 1 
83 1 179 3 7 1 227 1 299 3 129 1 84 2 300 16 13 3 132 9 304 4 97 1 191 1 193 3 311 7 203 4 277 8 162 3 329 4 69 2 68 6 330 1 119 2 171 1 38 1 332 4 173 1 
10 3 299 1 84 1 300 7 13 3 132 3 193 3 68 6 311 4 77 3 313 1 271 2 314 1 
83 1 179 2 10 1 7 1 227 1 299 3 129 1 84 2 300 18 13 1 132 10 304 4 97 1 191 1 193 3 311 8 313 1 314 1 271 1 203 4 277 8 162 2 237 1 329 4 69 1 68 4 330 1 119 2 171 1 38 1 332 4 173 1 77 1 
203 2 299 1 10 1 84 1 300 8 132 4 13 1 277 4 304 2 237 1 68 3 193 2 329 2 119 1 311 4 332 2 77 1 313 1 314 1 271 1 
68 2 193 2 299 1 10 1 84 1 300 6 132 3 311 3 77 1 137 1 313 1 314 1 271 1 237 1 
179 1 203 1 299 1 84 1 300 4 277 2 132 2 13 1 304 1 162 1 213 1 193 1 69 1 68 2 329 1 311 2 332 1 
227 1 129 1 300 2 132 1 311 1 38 1 
179 2 10 2 299 5 227 2 84 5 129 2 300 26 132 13 133 1 13 2 304 1 193 4 311 13 313 1 314 2 271 1 202 1 203 1 277 2 162 2 237 1 163 1 69 2 68 6 329 1 119 1 332 1 77 2 221 1 
227 1 300 1 311 1 
129 1 300 1 132 1 
179 1 203 1 299 1 84 1 300 6 277 2 132 3 13 1 304 1 162 1 258 1 213 1 329 1 68 3 69 1 193 2 311 3 332 1 
83 1 179 2 227 1 299 2 7 1 129 1 84 2 300 12 13 1 132 6 304 1 97 1 191 1 193 1 311 6 203 1 277 2 162 2 329 1 69 2 68 2 330 1 38 1 332 1 173 1 
299 1 10 1 84 1 300 6 132 3 13 1 193 1 68 2 311 3 77 1 314 1 
203 1 10 1 300 3 132 1 13 1 277 2 304 1 113 1 68 2 193 1 329 1 119 1 311 2 332 1 77 1 313 1 271 1 
10 1 299 2 84 2 300 8 132 4 13 1 193 1 68 2 311 4 77 1 221 1 314 1 
179 1 203 1 299 1 300 2 277 2 132 2 13 1 304 1 97 1 329 1 68 1 332 1 
179 1 203 1 299 1 84 1 300 4 277 2 132 2 13 1 304 1 162 1 97 1 193 1 69 1 68 2 329 1 311 2 332 1 
203 3 10 1 300 3 277 6 13 1 132 1 304 3 113 1 97 1 329 3 193 1 68 2 119 1 171 1 311 2 332 3 77 1 
82 1 299 2 227 1 10 2 84 2 129 1 300 15 13 3 132 7 304 4 97 1 193 2 311 8 313 1 314 1 271 1 203 4 277 8 113 1 213 1 68 5 329 4 119 1 171 1 38 1 332 4 77 2 221 1 
146 1 14 1 111 1 333 1 209 1 81 1 115 1 
225 1 14 1 111 1 209 1 18 1 115 1 146 1 36 1 194 1 292 1 333 1 81 1 
164 1 144 1 200 1 309 1 85 1 290 1 217 1 74 1 54 1 137 1 79 1 
200 1 12 1 14 1 159 1 111 1 164 1 144 1 48 1 22 1 120 1 146 2 264 1 290 1 217 1 74 1 333 2 54 1 79 1 
0 1 223 1 12 1 14 1 303 1 48 2 144 1 22 1 146 2 264 1 54 1 200 1 111 2 159 2 164 2 281 1 116 1 120 1 217 1 333 2 74 3 79 1 245 1 
0 1 223 1 14 1 303 1 48 2 144 1 22 1 146 2 264 1 266 1 106 1 54 2 200 2 111 2 159 2 164 2 281 1 116 1 120 1 217 1 333 2 74 3 79 2 245 1 
1 1 200 1 180 1 134 1 74 1 54 1 303 1 79 1 233 1 
200 1 180 1 134 1 74 1 54 1 303 1 91 1 79 1 233 1 
144 1 200 1 217 1 54 1 253 1 79 1 
200 2 159 1 186 1 67 1 16 1 17 1 138 1 164 1 144 2 231 1 117 1 102 1 290 2 217 1 54 2 74 1 79 2 
203 1 128 1 276 1 277 2 111 1 304 1 230 1 48 1 329 1 120 1 146 1 102 1 264 1 332 1 333 1 41 1 
180 1 134 1 114 1 
200 1 226 1 159 1 67 1 253 1 164 1 144 2 147 1 102 1 217 1 54 1 74 2 79 1 
200 1 127 1 11 1 85 1 159 1 17 1 138 1 164 1 144 2 102 1 290 1 217 1 74 1 54 1 79 1 
200 2 127 1 11 1 159 1 303 1 17 1 138 1 164 1 144 2 217 1 54 2 74 1 79 2 317 1 
29 1 144 1 200 1 156 1 131 1 290 1 217 1 54 1 46 1 79 1 
200 1 102 1 37 1 54 1 79 1 
200 1 102 1 290 1 54 1 79 1 
200 1 102 1 290 1 54 1 16 1 305 1 79 1 
200 1 14 1 159 1 111 1 164 1 144 1 48 1 22 1 120 1 146 2 264 1 290 1 106 1 217 1 74 1 333 2 54 1 79 1 
200 1 159 1 303 1 67 1 17 1 138 1 164 1 144 2 117 1 217 1 54 1 74 1 79 1 
260 1 240 1 261 1 288 1 14 1 
223 1 0 1 58 1 180 2 134 2 14 1 32 1 236 1 114 1 281 1 72 1 260 2 261 1 240 2 288 2 104 1 335 1 
246 1 43 1 111 1 100 1 240 1 261 1 288 1 146 1 333 1 
72 1 261 1 104 1 
98 1 287 1 137 1 109 1 
98 1 287 1 321 1 250 1 157 1 109 1 306 1 
319 1 250 1 315 1 
31 1 321 3 157 1 250 3 306 1 212 1 98 1 118 1 287 1 75 1 174 2 109 1 
98 1 287 1 321 2 73 1 250 2 157 1 161 1 109 1 306 1 
29 1 321 1 155 1 157 1 250 1 131 1 252 1 306 1 212 1 289 1 109 1 
98 1 321 1 250 1 157 1 109 1 306 1 212 1 
98 2 287 1 321 1 250 1 157 1 306 1 212 1 
98 1 181 1 321 2 250 2 157 2 208 1 109 1 196 1 306 2 212 1 
273 1 321 3 157 1 250 3 306 1 212 1 98 1 287 1 148 1 73 2 289 1 109 2 150 1 
29 2 321 2 157 1 250 2 249 1 131 1 252 1 160 1 46 1 306 1 212 1 98 1 287 1 73 1 109 1 
321 4 157 2 250 4 302 1 161 1 306 2 212 1 98 1 287 1 73 2 289 1 109 2 150 1 
98 1 287 1 321 1 250 1 157 1 109 1 306 1 212 1 
31 1 321 4 250 4 157 1 306 1 98 2 287 2 73 2 289 1 174 1 75 1 55 1 109 3 150 1 
5 1 321 2 157 1 250 2 66 1 306 1 212 1 98 1 287 1 73 1 109 1 295 1 
98 1 310 1 31 1 287 1 321 3 250 3 157 1 174 2 75 2 109 1 306 1 212 1 
224 1 166 1 65 2 109 2 
321 1 250 1 157 1 216 1 306 1 212 1 
98 1 287 1 321 2 73 1 148 1 250 2 157 1 109 1 306 1 212 1 
201 1 
98 1 287 1 321 1 250 1 157 1 109 1 306 1 212 1 
321 3 157 1 250 3 306 1 212 1 98 1 287 1 73 1 148 1 174 1 109 1 
289 1 55 1 109 1 150 1 
98 1 109 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (119,183) (82,360) (82,360) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (119,183) (82,360) (82,360) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (119,183) (82,360) (82,360) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (119,183) (82,360) (82,360) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (119,183) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (119,183) 85 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (119,183) 85 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (303,308) (303,308) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 34 147 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 182 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (303,308) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 293 247 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
364 1 164 1 177 1 4 1 82 1 129 2 330 1 104 1 152 1 181 1 61 1 183 1 37 1 258 2 360 1 119 1 
364 1 164 1 177 1 4 1 82 1 129 2 330 1 104 1 152 1 181 1 61 1 183 1 37 1 258 2 360 1 119 1 
364 1 164 1 177 1 4 1 82 1 129 2 330 1 104 1 152 1 181 1 61 1 183 1 37 1 258 2 360 1 119 1 
364 1 164 1 177 1 4 1 82 1 129 2 330 1 104 1 152 1 181 1 61 1 183 1 37 1 258 2 360 1 119 1 
164 1 283 1 177 1 212 2 129 4 330 1 146 1 104 1 21 2 324 1 181 1 135 3 243 1 10 1 371 3 37 1 258 4 363 1 
364 1 164 1 349 1 283 1 177 1 129 2 330 1 104 1 152 1 181 1 255 1 61 1 243 1 96 1 371 1 258 2 
164 1 183 1 177 1 129 1 330 1 258 1 
164 1 135 1 174 1 183 1 85 1 177 1 129 2 330 1 258 2 
164 1 135 1 174 1 183 1 85 1 177 1 129 2 330 1 258 2 
182 1 244 1 29 1 
17 2 244 1 38 1 
275 1 143 2 69 1 340 2 9 2 42 2 7 2 78 2 
201 1 353 1 354 1 7 2 297 2 230 1 298 1 134 1 275 1 231 1 356 1 340 3 9 2 359 1 106 1 341 1 15 2 141 1 143 2 42 2 90 1 66 2 44 1 331 1 193 2 267 1 239 1 268 1 68 1 69 1 219 1 270 2 289 1 122 1 78 3 197 1 374 1 
143 1 69 1 340 1 9 1 313 1 42 1 228 1 7 1 78 1 16 1 
259 1 190 1 41 1 178 1 29 1 43 1 244 1 9 1 340 1 173 1 319 1 78 1 342 1 16 1 
259 1 143 1 190 2 41 1 178 1 42 1 29 1 7 1 244 1 9 1 340 1 319 2 78 1 342 1 16 1 
109 1 18 1 190 1 14 1 319 1 
109 1 18 1 242 1 244 1 190 2 29 1 319 2 254 1 
109 1 190 1 319 1 
18 1 143 1 313 1 190 1 228 1 42 1 7 1 69 1 9 1 340 1 319 1 78 1 16 1 26 1 
244 1 
299 1 109 1 18 1 242 1 244 1 190 2 29 1 319 2 
62 1 126 2 336 1 18 2 199 1 109 2 190 5 29 1 264 1 180 2 31 1 303 1 242 1 244 1 97 1 74 2 308 1 319 5 311 1 
182 1 275 1 
143 1 42 1 30 1 7 1 300 1 275 2 9 2 340 2 78 2 
322 1 191 1 307 1 
52 1 90 1 353 1 297 1 193 1 331 1 239 1 275 1 268 1 231 1 68 1 340 1 270 1 359 1 106 1 78 1 
191 1 42 1 90 1 353 1 352 1 7 1 297 1 331 1 193 1 239 1 301 1 231 1 268 1 68 1 9 1 340 2 270 1 359 1 106 1 78 2 
301 1 143 1 275 1 340 3 9 3 42 3 7 3 78 3 
340 1 9 1 313 1 42 1 7 1 78 1 16 1 
300 1 143 1 340 1 9 1 42 1 30 1 7 1 78 1 16 1 
178 1 353 1 30 1 352 1 7 3 297 1 230 1 298 1 134 1 301 1 275 1 231 1 340 4 9 3 359 1 106 1 341 1 15 1 342 1 16 1 210 1 259 1 141 1 143 2 190 1 41 1 42 3 90 1 66 2 44 1 331 1 193 1 239 1 268 1 68 1 69 1 219 1 270 1 289 1 75 1 122 1 319 1 197 1 78 4 
301 1 275 1 205 1 340 2 9 2 42 1 173 1 7 1 78 2 
259 1 143 1 190 1 41 1 178 1 42 3 30 1 352 1 7 3 301 2 244 1 9 3 340 3 75 1 319 1 107 1 78 3 16 1 342 1 
143 1 322 1 42 2 191 1 30 1 7 2 301 1 9 2 340 2 78 2 
90 1 353 1 297 1 193 1 331 1 239 1 275 1 268 1 231 1 68 1 340 1 270 1 106 1 359 1 78 1 
225 1 90 1 297 1 193 1 331 1 239 1 275 1 231 1 68 1 340 1 270 1 13 1 106 1 359 1 78 1 
141 2 165 1 248 1 343 1 284 1 322 2 191 2 213 1 66 2 44 1 32 1 169 1 298 1 230 1 267 2 134 1 317 1 289 1 160 1 307 2 122 1 15 4 
340 1 9 1 220 1 42 1 7 1 78 1 16 1 342 1 
143 1 42 4 368 1 352 1 30 1 7 4 301 2 275 1 9 4 340 4 194 1 78 4 16 1 375 1 
340 2 9 2 313 1 220 1 42 2 7 2 78 2 16 1 
187 1 132 1 
187 1 132 1 
198 1 48 1 
198 1 48 1 
198 1 48 1 
187 1 132 1 217 1 
70 1 187 1 132 1 
198 1 67 1 118 1 48 1 187 2 132 2 
187 1 132 1 217 1 
187 1 132 1 217 1 
195 1 187 1 132 1 
195 1 187 1 132 1 
195 1 187 1 132 1 
337 1 190 2 55 1 262 2 237 2 57 2 132 2 244 1 157 2 118 1 105 3 278 1 73 2 47 1 279 1 319 2 372 1 187 2 49 1 
27 1 190 1 55 1 262 1 42 2 130 1 57 1 7 2 132 1 111 1 94 1 275 1 304 1 157 1 70 1 340 2 9 2 105 1 73 1 272 1 319 1 187 1 209 1 78 2 
37 1 104 1 181 1 
255 1 104 1 181 1 
255 1 333 1 137 1 37 2 104 3 280 1 
40 1 255 1 137 1 37 1 104 2 280 1 
255 1 137 2 37 1 104 2 280 1 
126 1 27 1 351 2 29 1 130 1 180 1 34 1 304 1 36 1 327 1 160 1 38 1 161 1 311 2 17 3 62 1 234 1 343 1 87 2 109 1 18 4 190 5 365 1 92 1 169 1 22 2 242 1 244 2 97 3 317 1 74 1 319 5 
126 2 199 1 28 1 351 2 29 1 180 2 136 1 304 2 34 1 36 1 327 1 160 1 38 1 14 3 311 2 17 3 62 1 234 1 343 1 87 2 109 4 18 5 190 7 46 1 169 1 242 1 244 3 97 3 317 1 74 2 319 7 348 3 
234 1 126 1 199 1 18 1 190 2 365 1 92 1 180 1 34 1 97 1 74 1 319 2 
234 1 126 1 199 1 190 1 365 1 92 1 180 1 147 1 34 1 97 1 74 1 319 1 
224 1 182 1 359 1 
145 1 359 1 
357 1 
359 1 106 1 
224 2 240 1 350 1 359 3 106 1 331 1 
359 1 106 1 331 1 
329 1 359 1 
141 3 343 1 150 1 227 2 89 1 252 1 345 1 56 1 83 3 332 1 267 4 287 1 269 2 346 1 317 1 15 7 290 1 
141 3 343 1 150 1 227 2 89 1 252 1 345 1 56 1 83 3 332 1 267 4 287 1 269 2 346 1 317 1 15 7 290 1 
141 3 343 1 54 1 150 1 227 2 89 1 252 1 345 1 56 1 83 3 332 1 267 4 287 1 269 2 346 1 317 1 290 1 15 7 
150 1 227 3 56 2 252 5 203 1 83 8 230 1 134 1 184 1 138 1 36 3 160 3 306 1 15 31 141 15 211 3 343 4 144 1 236 1 89 1 367 1 345 2 66 2 44 1 169 3 332 1 267 16 287 2 116 4 269 3 346 2 317 4 289 1 290 1 
163 1 141 4 343 1 175 1 150 1 227 3 252 1 345 1 56 1 66 4 44 2 83 4 230 2 332 1 267 5 134 2 287 1 269 2 346 1 317 1 289 2 306 1 290 1 15 9 
149 1 177 1 129 2 104 2 181 1 297 1 61 1 255 1 135 1 276 1 277 1 37 1 159 1 258 2 164 1 19 1 283 1 88 1 330 1 193 1 171 1 239 1 243 1 68 1 333 1 371 1 270 1 24 1 98 1 120 1 
149 1 177 1 129 3 104 2 181 1 297 1 154 1 61 1 255 1 135 2 276 1 277 1 37 1 159 1 258 3 233 1 19 1 283 1 88 1 330 1 167 1 193 1 239 1 243 1 333 1 68 1 371 1 270 1 24 1 120 1 
149 1 129 2 104 2 297 1 181 1 154 1 61 1 255 1 135 2 277 1 37 1 159 1 258 2 233 1 19 1 283 1 88 1 193 1 239 1 243 1 68 1 333 1 371 1 270 1 120 1 
142 1 149 2 328 1 20 1 177 1 88 2 129 1 90 1 330 1 167 1 297 1 193 1 239 1 61 2 68 1 270 1 159 2 359 1 106 1 196 1 347 1 140 1 258 1 
149 1 177 1 129 1 104 2 181 1 297 1 61 1 255 1 276 1 277 1 37 1 159 1 258 1 233 1 164 1 19 1 88 1 330 1 193 1 171 1 239 1 68 1 333 1 270 1 24 1 120 1 
131 1 
291 1 151 1 293 1 103 2 297 2 153 4 9 1 340 1 206 2 257 2 106 1 311 2 342 1 16 1 17 2 62 1 259 1 108 1 109 6 63 1 65 2 263 1 314 1 216 1 115 2 68 1 270 2 173 1 74 1 318 2 319 5 76 1 78 1 126 1 178 1 180 1 84 1 38 2 359 1 234 1 281 2 328 1 190 5 41 1 90 2 43 1 193 2 239 1 242 3 244 1 370 1 97 2 196 1 247 1 
259 1 109 2 281 1 63 1 190 3 151 1 178 1 41 1 263 1 43 1 84 1 153 2 299 1 242 1 9 1 340 1 173 1 319 3 76 1 78 1 16 1 342 1 
151 1 178 1 29 1 84 1 153 3 299 1 340 1 9 1 342 1 16 1 259 1 109 1 63 1 190 3 41 1 43 1 263 1 115 1 242 1 244 1 173 1 319 3 76 1 78 1 
259 1 109 1 281 1 63 1 190 2 151 1 178 1 41 1 263 1 43 1 84 1 153 2 9 1 340 1 173 1 318 1 319 2 76 1 78 1 16 1 342 1 
0 1 291 1 151 1 103 2 7 1 153 4 299 1 340 2 9 2 206 2 257 2 310 1 16 2 342 1 311 1 259 1 62 1 109 7 63 1 313 1 65 2 263 1 216 1 172 1 115 2 69 1 173 1 74 1 318 4 319 5 76 1 222 1 78 2 26 1 126 1 178 1 228 1 29 1 84 1 180 1 33 1 38 2 143 1 281 4 190 5 41 1 42 1 43 1 242 3 244 1 97 1 
291 1 151 1 103 2 7 1 153 3 340 2 9 2 206 2 257 1 16 2 342 1 311 1 259 1 62 1 17 2 109 2 63 1 313 1 65 2 263 1 216 1 115 1 69 1 173 1 74 1 318 1 319 3 76 1 78 2 26 1 126 1 178 1 228 1 29 1 180 1 84 1 38 2 143 1 281 1 190 3 41 1 42 1 43 1 242 1 244 3 370 1 97 1 
0 1 291 1 151 1 103 2 7 1 153 4 9 2 340 2 206 2 257 2 310 1 16 2 342 1 311 1 62 1 259 1 109 4 63 1 313 1 65 2 263 1 216 1 115 2 69 1 173 1 74 1 318 2 319 4 76 1 78 2 26 1 126 1 178 1 228 1 29 1 84 1 180 1 33 1 38 2 143 1 281 2 190 4 41 1 42 1 43 1 242 2 244 1 97 1 
0 1 291 1 151 1 103 2 7 1 153 4 9 2 340 2 206 2 257 2 310 1 16 2 342 1 311 1 62 1 259 1 109 4 63 1 313 1 65 2 263 1 216 1 115 2 69 1 173 1 74 1 318 2 319 4 76 1 78 2 26 1 126 1 178 1 228 1 29 1 84 1 180 1 33 1 38 2 143 1 281 2 190 4 41 1 42 1 43 1 242 2 244 1 97 1 
151 1 103 2 7 1 153 4 9 2 340 2 206 2 310 1 16 2 342 1 311 1 62 1 259 1 17 2 109 4 63 1 313 1 263 1 216 1 115 2 69 1 173 1 74 1 318 2 319 4 76 1 78 2 26 1 126 1 81 2 178 1 228 1 29 1 84 1 180 1 358 1 143 1 281 2 190 4 41 1 42 1 43 1 238 1 242 2 244 1 97 1 334 2 246 1 
0 1 291 1 151 1 103 2 7 1 153 4 9 2 340 2 206 2 257 2 310 1 16 2 342 1 311 1 259 1 62 1 109 5 63 1 313 1 65 2 263 1 216 1 172 1 115 2 69 1 173 1 74 1 318 3 319 4 76 1 78 2 26 1 126 1 178 1 228 1 29 1 84 1 180 1 33 1 38 2 143 1 281 3 190 4 41 1 42 1 43 1 242 2 244 1 97 1 
0 1 291 1 151 1 103 2 7 1 153 4 9 2 340 2 206 2 257 2 310 1 16 2 342 1 311 1 259 1 62 1 109 5 63 1 313 1 65 2 263 1 216 1 172 1 115 2 69 1 173 1 74 1 318 3 319 4 76 1 78 2 26 1 126 1 178 1 228 1 29 1 84 1 180 1 33 1 38 2 143 1 281 3 190 4 41 1 42 1 43 1 242 2 244 1 97 1 
151 1 103 2 7 1 153 3 340 2 9 2 206 2 16 2 342 1 311 1 259 1 62 1 17 2 109 4 63 1 313 1 263 1 216 1 115 1 69 1 173 1 74 1 318 2 319 4 76 1 78 2 26 1 126 1 81 2 178 1 228 1 29 1 180 1 84 1 143 1 281 2 190 4 41 1 42 1 43 1 242 2 244 1 370 1 97 1 334 2 246 1 
227 2 150 1 322 1 32 1 83 2 230 1 298 1 182 1 134 1 275 2 307 1 15 6 141 3 343 1 191 1 66 2 44 1 332 1 267 3 287 1 269 1 346 1 317 1 289 1 122 1 290 1 
273 1 322 4 252 1 203 1 83 1 230 2 298 1 134 2 275 1 35 1 208 1 36 2 307 11 160 2 341 1 15 14 141 6 211 3 343 1 191 11 367 1 66 4 44 2 169 1 267 8 113 1 116 3 316 1 317 2 289 2 122 2 374 1 
52 1 322 1 353 1 352 1 297 1 7 1 230 1 298 1 134 1 301 1 275 1 231 1 340 2 9 1 359 1 106 1 341 1 15 2 141 1 110 1 42 1 90 1 66 2 44 1 331 1 193 1 267 1 239 1 170 1 268 1 113 1 68 1 245 1 270 1 289 1 122 1 78 2 374 1 
253 1 297 1 7 1 298 2 60 1 301 1 9 1 340 2 307 3 160 1 106 1 341 1 15 7 343 1 66 4 168 1 169 1 267 3 113 1 268 1 68 1 270 1 317 1 122 2 121 1 78 2 227 1 322 3 352 1 353 1 83 1 230 2 134 2 231 1 36 1 359 1 188 1 141 4 42 1 191 3 90 1 44 2 193 1 331 1 239 1 289 2 197 1 
274 1 179 1 251 1 32 1 7 1 297 8 230 2 298 2 301 1 134 2 356 2 305 1 340 1 9 1 359 3 106 2 309 1 341 1 361 1 15 2 233 1 141 1 328 1 42 1 90 2 66 4 44 2 193 7 267 1 239 2 68 2 270 8 289 2 98 1 196 1 122 2 78 1 50 1 374 1 
143 1 340 1 9 1 42 1 30 1 7 1 78 1 123 1 
322 1 191 1 252 1 213 1 66 2 44 1 83 1 32 1 298 1 230 1 267 2 134 1 317 1 289 1 307 1 160 1 122 1 15 2 
141 2 248 1 343 1 322 1 191 1 66 2 44 1 32 1 169 1 298 1 230 1 134 1 289 1 307 1 122 1 15 2 
141 2 343 1 322 2 191 2 66 2 44 1 169 1 32 1 298 1 230 1 267 2 134 1 317 1 289 1 36 1 307 2 160 1 122 1 15 4 
322 1 191 1 252 1 213 1 66 2 44 1 83 1 298 1 230 1 267 2 134 1 317 1 289 1 307 1 160 1 122 1 15 2 361 1 
141 2 248 1 343 1 322 1 191 1 66 2 44 1 169 1 298 1 230 1 134 1 289 1 307 1 122 1 15 2 361 1 
141 2 343 1 322 2 191 2 252 1 66 2 44 1 169 1 83 1 298 1 230 1 267 2 134 1 317 1 289 1 36 1 307 2 160 1 122 1 15 4 361 1 
141 2 343 1 322 2 191 2 66 2 44 1 169 1 298 1 230 1 267 2 134 1 317 1 289 1 36 1 307 2 160 1 122 1 15 4 
353 1 297 1 298 1 230 1 134 1 275 1 231 1 340 1 106 1 359 1 341 1 15 2 141 1 90 1 66 2 44 1 331 1 193 1 267 1 239 1 268 1 68 1 270 1 289 1 122 1 197 1 78 1 374 1 
225 1 297 1 298 1 230 1 134 1 275 1 231 1 340 1 13 1 106 1 359 1 341 1 15 2 141 1 90 1 66 2 45 1 44 1 331 1 193 1 267 1 239 1 68 1 270 1 289 1 122 1 78 1 374 1 
141 2 343 1 322 2 191 2 66 2 44 1 169 1 298 1 230 1 267 2 134 1 113 1 317 1 289 1 36 1 307 2 160 1 122 1 15 4 
322 2 353 1 297 1 298 1 230 1 60 1 134 1 231 1 340 1 36 1 307 2 160 1 106 1 359 1 15 4 141 2 343 1 191 2 66 2 44 1 169 1 331 1 193 1 267 2 239 1 268 1 68 1 317 1 270 1 289 1 98 1 122 1 197 1 78 1 
322 1 252 1 30 1 83 1 7 1 230 1 298 1 134 1 9 1 340 1 36 1 160 1 307 1 15 3 141 1 343 1 143 1 42 1 191 1 66 2 44 1 169 1 267 2 113 1 317 1 289 1 122 1 78 1 373 1 
252 1 203 1 355 1 83 1 326 1 230 2 134 2 256 1 36 2 160 2 15 13 163 1 141 7 211 1 343 2 344 1 235 1 367 1 66 4 44 2 169 2 112 1 148 1 267 6 116 2 117 1 317 2 289 2 
127 1 227 1 252 2 229 1 83 3 230 3 134 3 256 4 139 1 36 3 306 2 160 3 15 26 39 1 163 1 86 1 141 12 343 2 211 2 344 1 235 1 91 1 367 2 66 6 44 3 169 2 112 2 148 2 267 14 116 2 117 1 317 3 289 3 77 1 
150 1 252 4 203 1 204 1 256 4 160 4 306 1 15 41 163 1 343 5 211 3 344 1 66 6 169 4 112 1 267 20 116 4 117 1 269 1 346 1 317 5 77 1 127 1 227 2 229 1 83 6 355 1 230 3 134 3 139 1 36 4 39 1 141 21 86 1 235 1 367 3 91 1 44 3 332 1 148 2 287 1 289 3 290 1 
150 1 252 3 203 1 204 1 256 4 160 4 306 2 15 38 163 1 343 4 211 3 344 1 66 8 169 3 112 1 267 20 116 4 117 1 269 1 346 1 317 5 77 1 127 1 227 2 229 1 83 5 355 1 230 4 134 4 139 1 36 4 39 1 141 18 86 1 235 1 367 3 91 1 44 4 332 1 148 2 287 1 289 4 290 1 
127 1 150 1 227 2 252 2 229 1 203 1 83 4 230 2 134 2 256 4 139 1 36 4 306 1 160 4 15 37 39 1 163 1 86 1 141 19 211 2 343 5 344 1 235 1 91 1 367 2 66 4 44 2 169 4 332 1 112 1 148 1 267 18 287 1 116 3 269 1 117 1 346 1 317 5 289 2 290 1 77 1 
133 1 157 1 118 1 337 1 262 1 278 1 73 1 57 1 187 1 132 1 
70 1 209 1 
59 1 157 1 207 1 262 1 73 1 57 1 296 1 187 1 132 1 
337 1 190 1 55 1 262 1 237 1 57 1 132 1 244 1 157 1 118 1 105 2 278 1 73 1 279 1 319 1 372 1 187 1 49 1 
337 1 190 1 55 1 262 1 237 1 57 1 132 1 244 1 157 1 118 1 105 2 278 1 73 1 279 1 319 1 372 1 187 1 49 1 
337 1 190 1 55 1 262 1 237 1 57 1 132 1 244 1 157 1 118 1 105 2 278 1 73 1 279 1 319 1 372 1 187 1 49 1 
67 1 265 1 217 1 
67 1 265 1 217 1 
286 1 195 1 
286 1 67 1 195 1 
94 1 111 1 
27 1 57 1 130 1 7 2 132 1 275 1 157 1 304 1 340 2 9 2 105 1 279 1 187 1 209 1 18 1 190 1 366 1 237 1 262 1 42 2 111 1 94 1 70 1 73 1 272 1 319 1 78 2 
265 1 217 1 
286 1 67 1 195 1 
292 1 274 1 297 2 298 1 230 1 134 1 356 2 340 2 9 2 359 1 106 1 309 1 341 1 15 2 141 1 189 1 66 2 44 1 193 2 267 1 239 1 113 1 68 1 114 1 270 2 288 1 289 1 335 1 122 1 78 2 374 1 
104 2 285 1 181 1 297 2 193 2 369 1 255 1 239 1 276 1 333 1 68 1 270 2 277 1 37 1 159 1 98 1 120 1 233 1 124 1 
104 2 181 1 297 1 193 1 369 1 255 1 239 1 276 1 333 1 68 1 23 1 270 1 277 1 37 1 159 1 120 1 233 1 
328 1 90 1 285 1 297 1 193 1 215 1 239 1 68 1 270 1 159 1 359 1 106 1 347 1 196 1 
104 2 285 1 181 1 297 1 193 1 369 1 255 1 239 1 276 1 333 1 68 1 270 1 277 1 37 1 159 1 120 1 233 1 124 1 
260 1 
182 1 303 1 244 1 97 1 29 1 308 1 311 1 
17 1 62 1 126 1 291 1 109 1 190 1 65 1 29 1 180 1 242 1 244 2 97 1 257 1 74 1 38 1 319 1 311 1 
51 1 3 1 294 1 253 1 297 1 155 1 160 1 106 1 311 3 62 2 259 1 17 6 109 2 343 1 169 1 68 2 270 1 317 1 74 2 319 2 126 2 224 1 350 1 79 1 80 1 351 3 323 1 180 2 36 1 359 4 38 3 362 1 234 1 87 3 145 2 190 2 90 1 331 1 193 1 239 1 242 1 244 3 97 4 
126 2 127 1 351 5 229 1 29 2 180 2 139 1 12 1 36 2 160 2 38 3 39 1 362 2 311 5 234 1 17 6 62 2 108 1 109 1 87 5 211 1 343 2 190 1 367 1 169 2 93 1 242 1 116 1 244 5 97 8 317 2 74 2 319 1 221 1 77 1 
126 1 0 1 226 1 150 1 228 1 180 1 7 1 340 1 9 1 362 2 16 1 311 2 62 1 343 1 143 1 313 1 190 1 42 1 93 1 287 1 69 1 346 1 97 2 317 2 74 1 319 1 78 1 26 1 
126 1 62 1 303 1 244 1 97 1 29 1 74 1 180 1 311 1 
17 2 87 1 343 1 351 1 169 1 244 1 97 1 317 1 36 1 160 1 38 1 311 2 
109 1 242 1 244 1 190 1 29 1 319 1 
126 2 199 1 293 1 180 2 297 2 359 1 106 1 185 1 311 1 62 1 234 1 108 1 109 2 328 1 190 2 90 2 193 2 239 1 68 1 242 1 97 1 270 2 74 2 196 1 319 2 247 1 
353 1 297 1 7 2 230 1 298 1 134 1 275 1 231 1 340 3 9 2 106 1 359 1 341 1 15 1 141 1 143 2 42 2 90 1 66 2 44 1 193 1 331 1 239 1 268 1 68 1 69 1 219 1 270 1 289 1 122 1 78 3 197 1 
17 4 62 1 126 1 234 1 108 1 87 2 351 2 29 2 180 1 269 1 244 4 97 1 74 1 38 2 311 2 
157 1 249 1 57 1 
157 1 337 1 57 1 312 1 111 1 
157 1 249 1 57 1 
157 1 249 1 57 1 
200 1 157 1 57 1 
200 1 157 1 57 1 
200 1 157 1 57 1 
157 1 57 1 
187 1 132 1 
141 4 343 1 150 1 227 2 252 1 66 4 44 2 83 3 230 2 332 1 267 4 134 2 287 1 269 1 346 1 317 1 289 2 306 1 15 8 290 1 
141 3 343 1 227 2 150 1 83 2 332 1 267 3 182 1 287 1 269 1 346 1 317 1 290 1 15 6 
141 2 343 1 261 1 252 1 66 2 44 1 169 1 83 1 230 1 267 2 134 1 317 1 289 1 36 1 160 1 15 4 
141 4 343 1 211 1 367 1 252 1 203 1 169 1 83 1 267 3 116 2 317 1 36 1 160 1 15 7 
226 1 150 2 227 4 252 4 203 1 83 8 230 1 134 1 36 2 208 1 160 2 306 1 15 25 141 12 343 5 211 2 66 2 44 1 169 2 332 1 267 13 287 2 116 2 269 1 316 1 346 2 317 5 289 1 290 1 
141 1 116 1 15 1 
267 1 211 1 15 1 
141 3 343 1 227 1 252 1 253 1 83 2 169 1 267 3 317 1 36 1 160 1 15 6 
127 1 227 1 252 1 229 1 83 2 230 2 134 2 139 1 36 2 160 2 306 1 15 13 39 1 163 1 141 7 211 1 343 2 367 1 66 4 44 2 169 2 267 6 116 1 317 2 289 2 77 1 
141 3 343 1 150 1 227 1 252 1 83 2 267 3 287 1 346 1 317 1 15 6 
141 2 320 1 227 1 252 1 66 2 44 1 83 2 230 1 332 1 267 1 134 1 287 1 346 1 289 1 306 1 290 1 15 3 
163 1 141 5 226 1 343 2 227 3 150 1 252 2 66 2 44 1 83 5 230 1 267 5 134 1 287 2 346 2 317 2 289 1 15 10 
163 1 252 1 66 2 44 1 83 1 230 1 267 2 134 1 317 1 289 1 160 1 15 2 
163 1 141 2 343 1 66 2 44 1 169 1 230 1 267 2 134 1 317 1 289 1 36 1 160 1 15 4 
163 1 141 2 320 1 227 1 252 1 66 6 44 3 355 1 83 2 230 3 267 1 134 3 287 1 346 1 289 3 306 1 15 3 
320 1 150 2 227 4 252 5 203 1 355 1 83 9 230 5 134 5 184 1 36 3 306 2 160 3 15 34 163 1 141 18 211 3 343 5 144 1 261 1 236 1 367 1 66 10 44 5 169 3 332 1 267 16 287 3 116 4 269 1 346 3 317 5 289 5 290 1 
127 1 227 2 150 1 83 2 230 1 134 1 15 8 163 1 141 4 343 1 211 1 367 1 66 2 44 1 332 1 267 4 287 1 116 1 269 1 346 1 317 1 289 1 290 1 
127 1 150 1 227 2 252 1 203 1 83 3 230 2 134 2 36 1 160 1 15 11 163 1 141 5 343 1 211 1 261 1 367 1 66 4 44 2 332 1 267 6 287 1 116 2 269 1 346 1 317 2 289 2 290 1 
127 1 150 1 227 3 252 1 229 1 83 4 230 3 134 3 139 1 36 2 160 2 306 1 15 19 39 1 163 1 141 10 211 1 343 3 261 1 367 1 66 6 44 3 169 2 332 1 267 9 287 1 116 1 269 1 346 1 317 3 289 3 290 1 77 1 
127 1 227 1 252 1 229 1 83 2 230 4 134 4 139 1 36 2 160 2 306 2 15 12 39 1 163 1 141 5 211 1 343 1 261 1 367 1 66 8 44 4 169 1 267 7 116 1 317 2 289 4 77 1 
127 1 227 2 150 1 83 2 230 1 134 1 15 8 163 1 141 4 343 1 211 1 367 1 66 2 44 1 332 1 267 4 287 1 116 1 269 1 346 1 317 1 289 1 290 1 
127 1 227 1 252 1 229 1 83 2 230 2 134 2 139 1 36 2 160 2 306 1 15 13 39 1 163 1 141 7 211 1 343 2 367 1 66 4 44 2 169 2 267 6 116 1 317 2 289 2 77 1 
127 1 150 1 227 3 252 2 229 1 83 5 230 4 134 4 139 1 36 2 160 2 306 2 15 18 39 1 163 1 141 8 211 1 343 2 261 1 367 1 66 8 44 4 169 1 332 1 267 10 287 1 116 1 269 1 346 1 317 3 289 4 290 1 77 1 
127 1 227 1 252 3 229 1 355 1 83 4 230 4 134 4 139 1 36 3 160 3 306 2 15 16 39 1 163 1 141 7 211 1 343 2 367 1 66 8 44 4 169 2 267 9 116 1 317 3 289 4 77 1 
141 4 343 1 227 3 150 1 252 3 83 6 332 1 267 3 287 3 346 3 317 1 15 7 290 2 
127 1 150 1 227 3 252 1 229 1 355 1 83 4 230 4 134 4 139 1 36 2 160 2 306 2 15 18 39 1 163 1 141 8 211 1 343 2 367 1 66 8 44 4 169 1 332 1 267 10 287 1 116 1 269 1 346 1 317 3 289 4 290 1 77 1 
275 1 282 1 340 1 9 1 205 1 173 1 78 1 
282 1 6 1 5 1 192 1 275 1 205 1 9 1 340 1 173 1 99 1 25 1 78 1 
239 1 182 1 68 1 328 1 270 1 90 1 359 1 106 1 196 1 297 1 193 1 
42 1 90 1 353 1 7 1 297 1 331 1 193 1 301 1 239 1 275 1 231 1 68 1 9 1 340 2 270 1 359 1 106 1 78 2 
178 1 353 1 102 1 295 1 297 1 7 2 301 1 275 1 231 1 340 2 9 2 106 2 359 3 342 1 16 1 42 1 329 1 193 1 331 2 239 1 68 1 270 1 78 2 
128 1 178 1 102 1 295 1 297 2 7 2 301 1 275 1 231 1 340 2 9 2 13 1 106 2 359 3 342 1 16 1 42 1 329 1 193 2 331 2 239 1 68 1 270 2 78 2 
224 1 228 1 29 1 295 1 297 1 7 1 340 1 9 1 359 2 16 1 259 1 109 1 143 1 313 1 145 1 190 2 42 1 193 1 244 1 69 1 270 1 271 1 319 2 78 1 26 1 
259 1 224 1 109 1 190 2 145 1 128 1 90 1 329 1 29 1 102 1 295 1 297 3 331 1 193 3 239 1 155 1 68 1 244 1 270 3 106 1 359 4 319 2 
239 1 68 1 270 1 179 1 297 1 193 1 
350 1 274 1 250 1 179 1 251 1 90 2 297 7 193 6 331 1 239 2 356 1 68 3 305 1 71 1 270 7 158 1 98 1 106 2 359 3 233 1 50 1 
150 1 227 2 322 1 353 1 83 2 7 1 297 1 230 2 298 2 60 1 134 2 301 1 275 2 231 1 340 2 9 1 307 1 359 1 106 1 15 6 188 1 141 3 343 1 191 1 42 1 66 4 44 2 331 1 193 1 332 1 267 3 239 1 287 1 113 1 268 1 68 1 114 1 269 1 346 1 317 1 270 1 289 2 98 1 122 2 290 1 78 2 197 1 
126 2 224 1 3 1 80 1 29 1 294 1 180 2 297 1 155 1 303 1 308 1 185 1 359 2 311 1 62 2 259 1 18 1 109 2 190 3 145 1 90 1 193 1 242 1 244 1 97 1 270 1 74 2 319 3 
224 1 350 1 179 1 323 1 297 2 193 2 331 1 239 1 68 2 270 2 98 1 106 1 359 2 
266 1 239 1 68 1 328 1 128 1 270 4 90 1 98 1 359 1 106 1 196 1 297 4 193 4 
250 1 58 1 295 1 297 2 193 2 331 1 239 1 68 2 270 2 72 1 158 1 106 1 359 1 186 1 
255 1 239 1 68 1 277 1 270 1 90 1 104 1 181 1 297 1 193 1 
292 1 274 1 297 2 193 2 239 1 68 1 270 2 98 1 106 1 359 1 233 1 
328 1 274 1 251 1 90 1 295 1 297 5 193 4 266 1 239 2 68 2 305 1 270 5 98 1 196 1 106 2 359 3 
166 1 328 1 274 1 90 1 295 1 297 5 193 4 266 1 239 2 68 2 305 1 270 5 98 1 196 1 106 2 359 3 
42 1 90 1 7 1 297 1 331 1 193 1 301 1 239 1 275 1 231 1 68 1 9 1 340 2 270 1 13 1 359 1 106 1 78 2 
350 1 250 1 295 1 297 1 193 1 331 1 239 1 68 2 71 1 270 1 158 1 106 1 359 1 
1 1 189 1 156 1 218 1 9 1 340 1 288 1 335 1 78 1 
1 1 101 1 162 1 
275 1 156 1 1 1 64 1 218 1 
259 1 18 1 1 1 101 1 64 2 190 2 178 1 41 1 29 1 325 1 275 1 156 2 244 1 218 2 75 1 319 2 16 1 342 1 162 1 
182 1 243 1 283 1 371 1 
243 1 283 1 177 1 371 1 129 1 330 1 258 1 
61 1 88 1 129 1 
364 2 164 1 53 1 177 1 283 1 129 3 330 1 241 1 302 1 243 1 371 1 258 3 
135 1 243 1 283 1 177 1 371 1 129 2 330 1 21 1 258 2 
164 1 177 1 371 1 212 1 37 1 129 1 330 1 104 1 258 1 181 1 363 1 
164 1 283 1 177 1 371 1 129 1 330 1 258 1 
164 1 243 1 283 2 177 1 129 1 330 1 258 1 
223 1 164 1 283 1 177 2 321 1 129 2 330 2 371 1 258 2 232 1 
164 1 283 1 177 1 212 1 129 3 330 1 324 1 8 1 339 1 135 2 243 1 371 2 258 3 
164 1 2 1 283 1 177 1 129 2 330 1 104 2 181 1 255 1 135 1 243 1 333 1 371 1 37 1 258 2 
164 1 283 1 177 2 212 1 129 4 330 2 146 1 21 1 324 1 135 2 243 1 371 2 258 4 
164 1 243 1 283 1 177 1 371 1 129 1 330 1 258 1 
364 1 283 2 177 1 212 1 129 4 330 1 324 1 338 1 241 1 302 1 135 2 243 2 371 3 258 4 
164 1 174 1 176 1 283 1 177 1 129 2 330 1 315 1 135 1 243 1 371 1 258 2 
364 2 164 1 177 1 283 1 202 1 129 3 330 1 241 1 302 2 243 1 371 1 258 3 
100 1 95 1 371 2 125 2 
164 1 177 1 129 1 330 1 214 1 258 1 
339 1 164 1 135 1 243 1 283 1 177 1 371 1 129 2 330 1 258 2 
11 1 
164 1 243 1 283 1 177 1 371 1 129 1 330 1 258 1 
339 1 364 1 164 1 135 1 243 1 283 1 177 1 371 1 129 3 330 1 258 3 
371 1 212 1 324 1 338 1 
283 1 371 1 

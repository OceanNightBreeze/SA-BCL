#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 237 195 (184,275) (184,275) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 237 195 (184,275) (184,275) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 237 195 (184,275) (184,275) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 237 195 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 237 195 44 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 237 195 44 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (92,147) (92,147) 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 349 86 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 240 353 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 268 352 40 171 187 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 268 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 268 352 40 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 268 352 40 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 268 352 40 171 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 268 352 40 171 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 2 252 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 288 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 11 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 53 122 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (92,147) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 240 353 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
358 2 119 1 150 2 74 2 77 1 107 2 292 3 179 1 80 2 211 1 318 4 181 2 184 1 275 1 237 2 215 1 346 7 23 1 116 1 280 3 264 1 328 1 195 1 24 1 265 7 
358 2 119 1 150 2 74 2 77 1 107 2 292 3 179 1 80 2 211 1 318 4 181 2 184 1 275 1 237 2 215 1 346 7 23 1 116 1 280 3 264 1 328 1 195 1 24 1 265 7 
358 2 119 1 150 2 74 2 77 1 107 2 292 3 179 1 80 2 211 1 318 4 181 2 184 1 275 1 237 2 215 1 346 7 23 1 116 1 280 3 264 1 328 1 195 1 24 1 265 7 
358 2 119 1 121 1 150 2 124 1 74 2 77 1 107 2 292 3 179 1 80 2 211 1 318 4 181 2 184 1 275 1 237 2 215 1 346 7 23 1 116 1 280 4 264 1 328 1 195 1 24 1 265 7 
358 1 237 1 346 2 77 1 107 1 23 1 292 1 80 1 179 1 280 1 195 1 318 1 181 1 265 2 
358 1 226 1 121 1 42 1 237 1 346 2 124 1 74 1 23 1 280 1 80 1 264 1 211 1 181 1 265 2 311 1 
358 2 121 1 215 1 346 3 150 1 124 1 74 1 23 1 292 1 280 2 318 1 181 2 265 3 
119 1 358 2 237 1 215 1 346 7 150 2 44 1 74 1 77 1 107 1 23 1 22 1 292 3 80 1 179 1 280 3 195 1 328 1 318 5 181 2 265 7 
119 1 358 2 237 1 215 1 346 7 150 2 44 1 74 1 77 1 107 1 23 1 22 1 292 3 80 1 179 1 280 3 195 1 328 1 318 5 181 2 265 7 
120 1 288 1 238 1 
194 1 238 1 168 2 
267 1 82 2 126 1 329 2 316 2 110 2 250 2 65 2 
267 1 101 1 126 1 316 2 250 3 336 1 209 1 37 1 361 1 178 1 293 2 61 1 82 3 234 2 253 1 254 1 134 1 319 1 110 2 135 1 65 2 183 1 322 1 297 1 188 1 277 2 278 1 241 1 140 2 364 1 94 1 144 1 329 2 169 1 223 1 118 1 330 2 
267 1 246 1 82 1 329 1 316 1 83 1 34 1 110 1 250 1 65 1 
267 1 120 1 316 1 34 1 250 2 82 2 83 1 12 1 110 2 65 1 238 1 46 1 221 1 304 1 246 2 97 1 245 1 329 1 170 1 356 1 367 1 
267 1 120 1 238 1 316 2 46 1 34 1 250 2 221 2 82 2 97 1 246 2 83 1 329 2 170 2 356 1 12 1 367 1 110 2 65 2 
221 1 95 1 196 1 33 1 170 1 
221 2 120 1 238 1 95 1 52 1 33 1 170 2 262 1 
221 1 95 1 170 1 
267 1 33 1 316 1 46 1 34 1 250 1 221 1 246 1 82 1 83 1 329 1 170 1 110 1 65 1 
238 1 
221 2 120 1 238 1 95 1 52 1 33 1 170 2 339 1 
120 1 238 1 347 1 228 2 360 1 33 2 47 1 92 1 20 2 221 5 81 1 281 2 93 1 52 1 95 2 180 1 170 5 213 1 147 1 
183 1 0 1 296 1 297 1 243 1 140 1 250 2 361 1 178 1 293 1 94 1 82 2 329 1 253 1 223 1 134 1 319 1 330 1 110 1 65 1 
288 1 126 1 
189 1 82 2 126 2 329 1 316 1 159 1 110 2 65 1 250 2 
289 1 160 1 243 1 
183 1 297 1 126 1 140 1 250 1 361 1 293 1 178 1 94 1 82 1 283 1 253 1 134 1 223 1 319 1 330 1 
0 1 82 3 316 1 126 1 329 3 110 3 250 3 65 3 
246 1 82 1 329 1 34 1 110 1 250 1 65 1 
246 1 82 1 189 1 329 1 316 1 159 1 110 1 250 1 65 1 
0 1 101 1 250 4 336 1 293 1 61 1 253 1 12 1 110 3 65 3 214 1 296 1 297 1 221 1 170 1 356 1 223 1 267 1 29 1 316 2 126 1 273 1 178 1 361 1 37 1 82 4 234 1 134 1 319 1 135 1 183 1 322 1 188 1 189 1 277 2 278 1 241 1 140 1 364 1 94 1 246 2 97 1 329 3 367 1 330 1 
0 1 304 1 300 1 82 2 126 1 329 1 110 2 250 2 65 1 
0 2 296 1 344 1 29 1 238 1 189 1 316 1 250 3 221 1 246 1 82 3 97 1 329 3 170 1 356 1 367 1 12 1 110 3 65 3 
0 1 189 1 316 1 160 1 243 1 250 2 82 2 329 2 110 2 65 2 
183 1 297 1 126 1 140 1 250 1 293 1 178 1 361 1 94 1 82 1 253 1 134 1 223 1 319 1 330 1 
183 1 297 1 102 1 126 1 140 1 250 1 161 1 293 1 178 1 361 1 94 1 82 1 134 1 223 1 330 1 
248 1 322 2 188 1 289 2 277 2 334 1 58 1 88 1 241 1 4 1 160 2 243 2 336 1 364 1 6 1 37 1 62 1 61 1 167 1 234 4 118 2 99 1 64 1 136 1 
1 1 246 1 97 1 82 1 329 1 110 1 250 1 65 1 
0 2 296 1 173 1 300 1 189 1 316 1 126 1 250 5 304 1 82 5 329 4 197 1 110 5 65 4 
1 1 246 1 82 2 329 2 34 1 110 2 250 2 65 2 
68 1 355 1 
68 1 355 1 
186 1 202 1 
186 1 202 1 
186 1 202 1 
345 1 68 1 355 1 
68 1 355 1 3 1 
363 1 286 1 186 1 68 2 202 1 355 2 
345 1 68 1 355 1 
345 1 68 1 355 1 
69 1 68 1 355 1 
69 1 68 1 355 1 
69 1 68 1 355 1 
341 2 238 1 68 2 204 1 175 1 219 2 233 1 363 1 221 2 210 1 291 1 317 1 338 2 355 2 165 3 170 2 310 2 109 2 85 1 
331 1 313 1 126 1 204 1 57 1 3 1 75 1 250 2 82 2 109 1 110 2 65 2 341 1 259 1 67 1 68 1 219 1 221 1 165 1 355 1 329 2 170 1 310 1 247 1 
107 1 237 1 80 1 
237 1 42 1 80 1 
107 2 42 1 80 3 271 1 303 1 78 1 
107 1 325 1 42 1 80 2 271 1 78 1 
107 1 42 1 80 2 271 1 78 2 
342 1 120 1 238 1 228 1 33 3 349 1 87 1 191 1 206 1 20 1 221 4 142 1 281 1 52 1 95 1 180 1 170 4 213 1 
200 1 120 1 238 1 228 1 33 3 349 1 231 1 87 1 191 1 217 1 20 1 221 4 281 1 52 1 95 2 196 1 180 1 170 4 213 1 
342 1 347 1 228 1 33 1 349 1 87 1 206 1 20 1 221 2 281 1 180 1 170 2 
342 1 347 1 228 1 349 1 86 1 87 1 206 1 20 1 221 1 281 1 180 1 170 1 
287 1 288 1 361 1 
351 1 361 1 
362 1 
361 1 297 1 
287 2 361 3 297 1 178 1 96 1 218 1 
361 1 297 1 178 1 
361 1 274 1 
155 1 322 3 359 1 239 1 55 1 216 1 104 1 128 1 88 1 6 1 62 2 133 1 167 1 234 6 13 1 118 3 357 1 
155 1 322 3 359 1 239 1 55 1 216 1 104 1 128 1 88 1 6 1 62 2 133 1 167 1 234 6 13 1 118 3 357 1 
154 1 155 1 322 3 359 1 239 1 55 1 216 1 104 1 128 1 88 1 6 1 62 2 133 1 167 1 234 6 13 1 118 3 357 1 
359 5 55 1 104 2 128 2 334 3 58 3 6 4 61 1 62 9 133 1 63 1 234 30 84 1 13 2 185 1 155 1 322 15 188 1 239 2 277 2 216 1 16 3 241 1 48 4 88 4 91 1 19 3 364 1 222 1 53 1 145 1 167 4 118 15 357 2 
149 1 155 1 322 4 359 1 239 1 188 2 277 4 216 1 104 1 128 1 88 2 241 2 364 2 6 1 222 1 62 3 61 2 133 1 167 1 234 8 13 1 118 4 357 1 172 1 
358 1 121 1 124 1 74 1 205 1 76 1 107 1 293 1 80 2 318 1 134 1 181 1 235 1 111 1 236 1 321 1 237 1 42 1 346 2 303 1 140 1 279 1 23 1 280 1 305 1 366 1 223 1 199 1 265 2 330 1 
358 1 121 1 124 1 74 1 205 1 76 1 208 1 107 1 293 1 80 2 318 2 134 1 181 1 235 1 111 1 236 1 321 1 237 1 42 1 346 3 276 1 303 1 140 1 279 1 280 1 305 1 71 1 223 1 265 3 330 1 
121 1 124 1 74 1 205 1 76 1 208 1 107 1 293 1 80 2 318 2 134 1 235 1 111 1 236 1 321 1 42 1 237 1 346 2 303 1 140 1 280 1 71 1 223 1 265 2 330 1 
358 1 74 2 151 1 335 1 251 1 293 1 361 1 7 1 134 1 181 1 235 2 111 2 236 2 346 1 297 1 276 1 140 1 50 1 94 1 306 1 223 1 265 1 330 1 
358 1 74 1 205 1 76 1 208 1 107 1 293 1 80 2 134 1 181 1 235 1 111 1 236 1 321 1 237 1 42 1 346 1 303 1 140 1 279 1 23 1 305 1 366 1 223 1 265 1 330 1 
164 1 
228 1 240 1 87 1 140 1 20 1 221 1 293 1 353 1 281 1 94 1 180 1 170 1 213 1 330 1 
120 2 227 1 72 1 129 1 250 1 82 1 339 1 12 1 110 1 14 1 238 2 190 1 221 3 304 1 51 2 52 1 95 2 245 1 166 1 97 1 246 1 170 3 356 1 367 1 
14 1 120 2 238 2 72 1 190 1 129 1 250 1 131 1 221 2 51 3 304 1 246 1 97 1 166 1 245 1 82 1 356 1 170 2 367 1 12 1 110 1 
120 3 227 1 72 1 129 1 250 1 131 1 82 1 339 1 12 1 110 1 14 1 238 3 190 1 221 3 304 1 51 3 263 1 52 1 95 2 245 1 166 1 97 1 246 1 170 3 356 1 367 1 
268 1 120 2 227 2 228 1 72 1 129 1 250 1 337 1 81 1 82 1 180 1 213 1 339 1 12 1 182 1 110 1 40 1 14 1 238 2 187 1 190 1 20 1 221 3 304 1 51 2 352 1 117 1 281 1 263 2 95 3 52 1 245 1 166 1 97 1 246 1 170 3 356 1 367 1 309 1 224 1 171 1 
268 1 120 2 72 1 228 1 129 1 250 1 337 1 81 1 82 1 180 1 213 1 12 1 182 1 110 1 14 1 238 2 190 1 20 1 221 2 304 1 51 2 117 1 281 1 245 1 166 1 97 1 246 1 170 2 356 1 367 1 224 1 
268 1 120 2 228 1 72 1 129 1 250 1 337 1 81 1 82 1 180 1 12 1 213 1 182 1 110 1 40 1 14 1 238 2 190 1 20 1 221 2 304 1 51 2 352 1 117 1 281 1 245 1 166 1 97 1 246 1 170 2 356 1 367 1 309 1 224 1 
268 1 120 2 228 1 72 1 129 1 250 1 337 1 81 1 82 1 180 1 12 1 213 1 182 1 110 1 40 1 14 1 238 2 190 1 20 1 221 2 304 1 51 2 352 1 117 1 281 1 245 1 166 1 97 1 246 1 170 2 356 1 367 1 309 1 224 1 
268 1 120 3 227 2 228 1 72 1 129 1 152 1 250 1 131 2 81 1 82 1 180 1 12 1 213 1 182 2 110 1 14 1 258 2 156 2 238 3 190 1 138 1 20 1 221 4 304 1 51 4 352 1 263 2 281 1 95 4 52 2 282 1 245 1 166 1 97 1 246 1 168 2 170 4 356 1 367 1 224 2 
268 1 120 2 227 1 228 1 72 1 129 1 250 1 337 1 131 1 81 1 82 1 180 1 213 1 12 1 182 1 110 1 40 1 14 1 238 2 190 1 20 1 221 2 304 1 51 3 352 1 117 1 281 1 263 1 95 1 245 1 166 1 97 1 246 1 170 2 356 1 367 1 309 1 224 1 171 1 
268 1 120 2 227 1 228 1 72 1 129 1 250 1 337 1 131 1 81 1 82 1 180 1 213 1 12 1 182 1 110 1 40 1 14 1 238 2 190 1 20 1 221 2 304 1 51 3 352 1 117 1 281 1 263 1 95 1 245 1 166 1 97 1 246 1 170 2 356 1 367 1 309 1 224 1 171 1 
152 1 250 1 12 1 213 1 110 1 14 1 258 2 156 2 20 1 221 4 304 1 263 2 166 1 168 2 356 1 170 4 224 2 268 1 120 3 227 2 228 1 72 1 315 1 129 1 131 2 81 1 82 1 180 1 182 2 238 3 190 1 51 4 281 1 52 2 95 4 246 1 97 1 245 1 367 1 
288 1 155 1 322 3 188 1 126 2 277 2 216 1 104 1 88 1 241 1 336 1 364 1 6 1 37 1 62 1 61 1 133 1 167 1 234 5 118 2 357 1 136 1 
101 1 359 1 56 1 289 11 126 1 203 1 334 1 58 2 336 1 6 2 37 2 62 2 61 2 212 1 234 14 63 1 254 1 322 6 188 2 277 4 16 3 88 1 48 3 241 2 160 4 242 1 243 11 19 2 364 2 162 1 53 1 167 1 118 8 
0 1 312 1 101 1 56 1 126 1 250 2 336 1 361 1 178 1 293 1 37 1 61 1 82 2 253 1 234 2 134 1 294 1 254 1 319 1 110 1 65 1 183 1 296 1 322 1 297 1 188 1 277 2 241 1 160 1 140 1 364 1 94 1 329 1 283 1 223 1 118 1 330 1 266 1 
285 1 0 1 101 1 56 1 289 6 104 1 334 2 58 2 250 3 208 1 336 3 6 3 293 3 61 3 62 7 253 2 254 1 11 2 110 1 65 1 155 1 296 1 257 2 297 2 216 1 160 6 19 2 167 3 223 2 118 9 357 1 359 4 31 2 73 1 123 2 126 2 37 3 178 2 361 2 133 1 82 3 234 19 134 2 319 2 135 2 183 2 322 10 188 3 277 6 139 1 88 3 241 3 140 3 243 6 364 3 94 1 329 1 330 3 
0 1 101 1 229 1 103 1 335 1 250 1 208 1 336 2 361 3 293 7 37 2 61 2 7 1 82 1 234 2 134 2 254 1 110 1 136 1 65 1 256 1 322 1 260 1 297 2 188 2 277 4 241 2 140 8 112 1 364 2 21 1 94 2 327 1 144 2 329 1 223 2 199 1 118 1 330 8 
333 1 289 1 56 1 316 1 334 1 58 1 250 1 336 1 6 1 37 1 62 1 61 1 82 1 234 3 110 1 65 1 322 2 188 1 189 1 277 2 88 1 241 1 160 1 243 1 19 1 364 1 329 1 167 1 118 1 
359 1 188 1 289 1 277 2 241 1 58 1 160 1 243 1 336 1 364 1 6 1 37 1 62 1 61 1 234 2 118 2 99 1 136 1 
248 1 322 2 188 1 289 1 277 2 334 1 88 1 241 1 160 1 243 1 336 1 364 1 37 1 62 1 61 1 167 1 234 2 136 1 
322 2 359 1 188 1 289 2 277 2 334 1 88 1 241 1 58 1 160 2 243 2 19 1 336 1 364 1 6 1 37 1 62 2 61 1 167 1 234 4 118 2 136 1 
359 1 188 1 289 1 229 1 277 2 241 1 58 1 160 1 243 1 336 1 364 1 6 1 37 1 62 1 61 1 234 2 118 2 99 1 
248 1 322 2 188 1 289 1 229 1 277 2 334 1 88 1 241 1 160 1 243 1 336 1 364 1 37 1 62 1 61 1 167 1 234 2 
322 2 359 1 188 1 289 2 229 1 277 2 334 1 88 1 241 1 58 1 160 2 243 2 19 1 336 1 364 1 6 1 37 1 62 2 61 1 167 1 234 4 118 2 
322 2 359 1 188 1 289 2 277 2 334 1 88 1 241 1 58 1 160 2 243 2 19 1 336 1 364 1 6 1 37 1 62 2 61 1 167 1 234 4 118 2 
101 1 126 1 250 1 336 1 178 1 293 1 361 1 37 1 61 1 82 1 234 2 253 1 254 1 134 1 319 1 135 1 183 1 322 1 297 1 188 1 277 2 241 1 140 1 364 1 94 1 223 1 118 1 330 1 
332 1 101 1 102 1 126 1 250 1 336 1 178 1 293 1 361 1 37 1 61 1 82 1 234 2 254 1 134 1 183 1 322 1 297 1 188 1 277 2 241 1 140 1 161 1 364 1 94 1 223 1 118 1 330 1 
322 2 359 1 188 1 289 2 56 1 277 2 334 1 88 1 241 1 58 1 160 2 243 2 19 1 336 1 364 1 6 1 37 1 62 2 61 1 167 1 234 4 118 2 
359 1 31 1 289 2 334 1 58 1 250 1 336 1 6 1 178 1 293 1 361 1 37 1 62 2 61 1 82 1 234 4 253 1 134 1 319 1 135 1 183 1 322 2 297 1 188 1 277 2 88 1 241 1 160 2 243 2 140 1 19 1 364 1 167 1 223 1 118 2 199 1 330 1 
359 1 56 1 289 1 316 1 334 1 58 1 250 1 336 1 6 1 36 1 37 1 62 1 61 1 82 1 234 3 110 1 65 1 322 1 188 1 189 1 277 2 241 1 160 1 243 1 19 1 364 1 167 1 329 1 118 2 
314 1 359 1 2 1 125 1 176 1 334 2 58 2 6 2 61 2 62 3 234 13 63 1 323 1 322 7 298 1 188 2 299 1 277 4 16 1 88 2 48 2 241 2 19 2 141 1 364 2 53 1 167 2 118 6 172 1 
30 1 359 1 2 1 122 1 230 1 125 2 334 2 58 3 6 3 252 1 62 2 61 3 38 1 234 24 322 11 323 1 298 2 188 3 299 1 277 6 16 2 88 1 241 3 48 2 19 3 141 3 364 3 222 2 143 1 167 2 53 2 146 1 118 13 172 1 
314 1 359 1 2 1 125 1 334 2 58 2 6 2 252 1 61 2 62 2 234 13 63 1 323 1 322 7 298 1 188 2 299 1 277 4 16 1 88 1 48 2 241 2 19 2 141 1 364 2 53 1 167 2 118 6 172 1 
314 1 359 1 2 1 125 1 334 2 58 2 6 2 252 1 61 2 62 2 234 13 63 1 323 1 322 7 298 1 188 2 299 1 277 4 16 1 88 1 48 2 241 2 19 2 141 1 364 2 53 1 167 2 118 6 172 1 
30 1 359 6 2 1 122 1 230 1 125 1 104 1 334 6 58 6 6 7 252 1 61 2 62 12 133 1 38 1 234 46 63 2 155 1 323 1 322 23 298 1 188 2 299 1 277 4 216 1 16 4 88 6 48 4 241 2 242 2 19 6 141 3 364 2 222 1 143 1 53 2 167 7 146 1 118 23 357 1 172 1 
363 1 341 1 291 1 68 1 355 1 310 1 350 1 109 1 85 1 219 1 
3 1 247 1 
341 1 201 1 68 1 355 1 290 1 106 1 310 1 109 1 219 1 
341 1 238 1 68 1 204 1 175 1 219 1 363 1 221 1 210 1 291 1 317 1 338 1 355 1 165 2 170 1 310 1 109 1 85 1 
341 1 238 1 68 1 204 1 175 1 219 1 363 1 221 1 210 1 291 1 317 1 338 1 355 1 165 2 170 1 310 1 109 1 85 1 
341 1 238 1 68 1 204 1 175 1 219 1 363 1 221 1 210 1 291 1 317 1 338 1 355 1 165 2 170 1 310 1 109 1 85 1 
286 1 345 1 198 1 
286 1 345 1 198 1 
69 1 100 1 
69 1 100 1 286 1 
67 1 259 1 
331 1 313 1 126 1 33 1 57 1 175 1 3 1 75 1 250 2 338 1 82 2 109 1 110 2 65 2 341 1 259 1 67 1 68 1 17 1 219 1 221 1 355 1 165 1 329 2 170 1 310 1 247 1 
345 1 198 1 
69 1 100 1 286 1 
269 1 101 1 56 1 272 1 207 1 250 2 336 1 361 1 37 1 293 2 61 1 8 1 82 2 234 2 134 1 254 1 110 2 256 1 322 1 297 1 188 1 277 2 302 1 241 1 140 2 112 1 364 1 144 2 223 1 118 1 330 2 
321 1 237 1 42 1 348 1 249 1 205 1 303 1 140 2 208 1 107 1 279 1 80 2 293 2 223 1 134 1 199 1 330 2 235 1 137 1 
321 1 237 1 42 1 249 1 205 1 303 1 140 1 208 1 107 1 279 1 80 2 293 1 134 1 223 1 330 1 235 1 148 1 
297 1 335 1 35 1 140 1 361 1 293 1 94 1 306 1 7 1 223 1 134 1 330 1 235 1 137 1 
321 1 237 1 42 1 348 1 249 1 205 1 303 1 140 1 208 1 107 1 279 1 80 2 293 1 223 1 134 1 330 1 235 1 137 1 
90 1 
120 1 288 1 238 1 81 1 180 1 92 1 147 1 
337 1 20 1 117 1 81 1 281 1 228 1 180 1 213 1 
28 1 174 1 228 1 232 1 293 1 178 1 361 2 180 2 11 1 213 1 134 1 297 1 87 1 218 1 140 1 20 1 351 1 326 1 94 1 281 1 354 1 223 2 330 1 
20 1 81 1 281 1 122 1 228 1 53 1 180 1 16 1 213 1 48 1 
228 1 216 1 104 1 113 1 20 1 221 1 6 2 81 2 281 1 10 2 167 1 180 1 170 1 213 1 309 1 368 1 357 1 
20 1 120 1 238 1 81 1 281 1 228 1 180 1 213 1 92 1 
238 1 334 1 58 1 19 1 6 1 194 1 81 2 168 2 167 1 180 1 308 1 27 1 
221 1 120 1 238 1 95 1 52 1 170 1 
228 1 240 1 87 1 140 1 20 1 293 1 353 1 94 1 281 1 25 1 180 1 213 1 330 1 
267 1 101 1 126 1 316 2 250 3 336 1 293 1 178 1 361 1 37 1 61 1 82 3 234 1 253 1 134 1 319 1 110 2 135 1 65 2 183 1 322 1 297 1 188 1 277 2 278 1 241 1 140 1 364 1 94 1 329 2 223 1 330 1 
267 1 120 1 228 1 316 1 34 1 250 1 82 1 83 1 180 1 213 1 110 1 65 1 238 1 46 1 87 1 20 1 281 1 246 1 329 1 
9 1 310 1 109 1 
60 1 67 1 310 1 109 1 85 1 
9 1 310 1 109 1 
9 1 310 1 109 1 
127 1 310 1 109 1 
127 1 310 1 109 1 
127 1 310 1 109 1 
310 1 109 1 
68 1 355 1 
155 1 322 4 359 1 188 2 277 4 216 1 104 1 88 1 241 2 364 2 6 1 222 1 62 2 61 2 133 1 167 1 234 7 118 3 357 1 
6 1 155 1 288 1 322 3 62 1 133 1 167 1 234 5 216 1 104 1 118 2 88 1 357 1 
322 2 359 1 188 1 32 1 277 2 334 1 88 1 241 1 58 1 19 1 364 1 6 1 62 2 61 1 167 1 234 4 118 2 
322 4 359 1 334 1 16 1 88 1 48 2 58 1 19 1 6 1 62 2 167 1 53 1 234 7 63 1 118 3 
359 4 104 2 334 2 58 2 6 3 62 8 61 2 212 1 133 1 63 1 234 22 155 1 322 12 188 2 277 4 216 1 16 2 48 2 88 4 241 2 158 1 242 1 19 2 364 2 222 2 167 3 118 10 357 2 
322 1 234 1 48 1 
234 1 16 1 118 1 
322 3 359 1 188 1 277 2 32 1 334 1 241 1 58 1 88 2 19 1 364 1 6 1 61 1 62 3 167 1 234 6 11 1 118 3 
359 1 122 1 230 1 334 2 58 2 6 2 61 1 62 2 38 1 234 12 322 6 188 1 277 2 16 1 48 1 241 1 88 1 19 2 364 1 143 1 53 1 167 2 146 1 118 6 172 1 
322 3 359 1 216 1 104 1 88 1 6 1 62 2 167 1 234 6 118 3 357 1 
155 1 322 2 359 1 188 1 277 2 104 1 88 1 158 1 241 1 364 1 222 1 62 2 61 1 133 1 234 3 118 1 357 1 
322 5 359 2 188 1 277 2 104 2 216 1 241 1 88 3 364 1 6 2 61 1 62 5 167 2 234 10 368 1 118 5 357 2 172 1 
359 1 188 1 277 2 241 1 58 1 364 1 6 1 61 1 62 1 234 2 118 2 172 1 
322 2 359 1 188 1 277 2 334 1 88 1 241 1 58 1 19 1 364 1 6 1 62 2 61 1 167 1 234 4 118 2 172 1 
314 1 322 2 359 1 188 3 277 6 104 1 158 1 241 3 88 1 364 3 222 1 61 3 62 2 234 3 118 1 357 1 172 1 
314 1 359 5 32 1 104 3 334 3 58 3 6 5 61 5 62 11 133 1 234 33 63 1 185 1 155 1 322 18 188 5 277 10 216 2 16 3 158 1 48 4 241 5 88 6 91 1 19 3 364 5 222 2 53 1 145 1 167 5 118 15 357 3 172 1 
122 1 104 1 6 1 61 1 62 1 133 1 234 7 155 1 322 4 188 1 277 2 216 1 16 1 48 1 241 1 88 1 364 1 167 1 53 1 118 3 357 1 172 1 
359 1 122 1 32 1 104 1 58 1 6 2 61 2 62 2 133 1 234 10 63 1 155 1 322 5 188 2 277 4 216 1 16 1 88 1 48 2 241 2 19 1 364 2 167 1 53 1 118 5 357 1 172 1 
359 1 122 1 230 1 32 1 334 2 58 2 6 2 61 3 62 2 38 1 234 13 322 7 188 3 277 6 16 1 48 1 241 3 88 1 19 2 364 3 222 1 143 1 53 1 167 2 146 1 118 6 172 1 
359 1 122 1 230 1 32 1 334 1 58 2 6 2 61 3 62 2 38 1 234 11 322 4 188 3 277 6 16 1 48 1 241 3 88 1 19 2 364 3 222 1 143 1 53 1 167 1 146 1 118 7 172 1 
122 1 104 1 6 1 61 1 62 1 133 1 234 7 155 1 322 4 188 1 277 2 216 1 16 1 48 1 241 1 88 1 364 1 167 1 53 1 118 3 357 1 172 1 
359 1 122 1 230 1 334 2 58 2 6 2 61 1 62 2 38 1 234 12 322 6 188 1 277 2 16 1 48 1 241 1 88 1 19 2 364 1 143 1 53 1 167 2 146 1 118 6 172 1 
359 1 122 1 230 1 32 1 334 1 58 2 6 2 61 4 62 2 38 1 234 12 322 5 188 4 277 8 16 1 48 1 241 4 88 1 19 2 364 4 222 2 143 1 53 1 167 1 146 1 118 7 172 1 
314 1 359 2 122 1 230 1 334 1 58 2 6 2 61 4 62 4 38 1 234 12 322 5 188 4 277 8 16 1 48 1 241 4 88 2 19 2 364 4 222 2 143 1 53 1 167 1 146 1 118 7 172 1 
155 1 322 5 359 4 239 1 104 4 216 2 88 5 6 2 62 9 133 1 167 2 234 10 368 1 118 5 357 4 
314 1 359 1 122 1 230 1 334 1 58 2 6 2 61 4 62 2 38 1 234 12 322 5 188 4 277 8 16 1 48 1 241 4 88 1 19 2 364 4 222 2 143 1 53 1 167 1 146 1 118 7 172 1 
304 1 82 1 300 1 126 1 39 1 110 1 250 1 
15 1 300 1 126 1 49 1 177 1 130 1 250 1 304 1 82 1 39 1 110 1 284 1 
288 1 361 1 297 1 293 1 94 1 7 1 223 1 134 1 335 1 330 1 140 1 
183 1 0 1 297 1 126 1 140 1 250 2 361 1 178 1 293 1 94 1 82 2 329 1 253 1 223 1 134 1 330 1 110 1 65 1 
183 1 0 1 297 2 126 1 105 1 140 1 250 2 361 3 178 2 293 1 246 1 97 1 82 2 329 2 274 1 356 1 253 1 223 1 134 1 225 1 330 1 110 2 65 1 
0 1 102 1 126 1 105 1 250 2 293 2 178 2 361 3 82 2 274 1 134 1 340 1 110 2 65 1 183 1 297 2 140 2 97 1 246 1 329 2 356 1 223 1 330 2 225 1 
267 1 287 1 120 1 316 1 34 1 105 1 250 1 79 1 361 4 293 1 178 1 82 1 83 1 274 1 134 1 110 1 65 1 343 1 297 1 238 1 46 1 140 1 351 1 221 2 95 1 246 1 329 1 170 2 223 1 367 1 330 1 225 1 
267 1 287 1 120 1 316 1 34 1 105 1 250 1 361 4 293 1 178 1 82 1 83 1 274 1 134 1 110 1 65 1 297 1 238 1 46 1 89 1 140 1 351 1 221 2 95 1 246 1 329 1 170 2 223 1 367 1 330 1 225 1 
293 1 327 1 223 1 134 1 330 1 140 1 
66 1 260 1 297 2 103 1 43 1 140 7 218 1 208 1 112 1 193 1 21 1 293 6 178 1 361 3 94 2 327 1 144 1 134 2 223 3 199 1 330 7 
0 1 31 1 56 1 123 1 126 2 104 1 250 2 336 2 6 1 361 1 178 1 37 2 293 1 62 1 61 2 133 1 8 1 82 2 234 5 253 1 134 1 319 1 110 1 135 1 65 1 183 1 155 1 322 3 297 1 188 2 277 4 216 1 88 1 241 2 140 1 364 2 167 1 329 1 223 1 118 2 199 1 357 1 330 1 
267 1 228 1 316 1 33 1 104 1 34 1 250 1 6 2 293 1 81 3 82 1 10 2 83 1 180 2 213 1 110 1 65 1 46 1 216 1 140 1 92 1 113 1 20 1 221 1 326 1 94 1 281 1 354 1 246 1 329 1 167 2 25 1 170 1 368 1 330 1 357 1 147 1 
287 1 297 1 232 1 140 2 218 1 293 2 178 1 361 2 327 1 134 1 223 2 199 1 330 2 
297 1 335 1 140 4 293 4 361 1 94 1 7 1 307 1 223 1 134 1 199 1 340 1 330 4 
66 1 297 1 73 1 43 1 140 2 115 1 293 2 178 1 361 1 108 1 134 1 223 2 225 1 330 2 
237 1 42 1 80 1 293 1 94 1 223 1 134 1 205 1 330 1 140 1 
112 1 208 1 361 1 297 1 293 2 223 1 134 1 302 1 199 1 330 2 140 2 
260 1 297 2 103 1 335 1 140 5 112 1 293 4 361 3 94 1 7 1 307 1 134 2 223 2 199 1 225 1 330 5 
297 2 103 1 261 1 335 1 140 5 112 1 293 4 361 3 94 1 7 1 307 1 134 2 223 2 199 1 225 1 330 5 
183 1 0 1 297 1 102 1 126 1 140 1 250 2 361 1 178 1 293 1 94 1 82 2 329 1 223 1 134 1 330 1 110 1 65 1 
66 1 297 1 43 1 140 1 218 1 193 1 293 1 178 1 361 1 134 1 223 2 225 1 330 1 
192 1 324 1 301 1 126 1 157 1 
267 1 120 1 29 1 316 1 33 1 270 1 34 1 250 1 59 1 82 1 83 1 12 1 110 1 65 1 324 1 238 1 301 1 46 1 157 1 244 1 192 1 221 2 97 1 246 2 329 1 170 2 356 1 367 1 
269 1 301 1 157 1 272 1 207 1 250 1 192 1 82 1 110 1 
301 1 270 1 244 1 
288 1 121 1 280 1 124 1 
358 1 121 1 280 1 346 1 124 1 265 1 181 1 
111 1 74 1 265 1 
358 1 121 1 346 3 124 1 18 1 5 1 70 1 23 1 280 1 264 2 181 1 265 3 
358 1 121 1 280 1 346 2 124 1 318 1 265 2 181 1 77 1 
358 1 237 1 346 1 107 1 23 1 292 1 179 1 280 1 80 1 181 1 265 1 
358 1 121 1 23 1 280 1 346 1 265 1 181 1 
358 1 121 2 23 1 346 1 124 1 265 1 181 1 
358 2 121 1 346 2 23 1 280 1 98 1 255 1 295 1 181 2 265 2 
358 1 119 1 121 1 346 3 150 1 124 1 23 1 292 1 280 2 328 1 318 2 181 1 265 3 
358 1 121 1 42 1 237 1 346 2 124 1 303 1 132 1 107 1 23 1 280 1 80 2 318 1 181 1 265 2 
358 2 121 1 346 4 150 1 124 1 77 1 23 1 114 1 292 1 280 2 318 2 181 2 265 4 
358 1 121 1 23 1 280 1 346 1 124 1 265 1 181 1 
358 1 121 2 346 4 150 1 124 2 45 1 5 1 70 1 292 1 280 3 264 1 318 2 265 4 181 1 
358 1 121 1 346 2 124 1 163 1 23 1 22 1 280 1 365 1 318 1 181 1 265 2 
358 1 41 1 121 1 346 3 124 1 5 1 70 2 23 1 280 1 264 2 181 1 265 3 
320 2 280 2 54 1 26 1 
358 1 153 1 23 1 346 1 265 1 181 1 
119 1 358 1 121 1 23 1 280 1 346 2 124 1 318 1 265 2 181 1 
220 1 
358 1 121 1 23 1 280 1 346 1 124 1 265 1 181 1 
119 1 358 1 121 1 23 1 280 1 346 3 264 1 124 1 318 1 265 3 181 1 
292 1 280 1 150 1 45 1 
121 1 280 1 

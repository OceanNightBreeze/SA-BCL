#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 373 143 329 285 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 191 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
283 2 237 1 262 1 83 1 59 1 240 2 241 4 84 6 269 1 288 1 163 2 14 1 165 2 126 1 217 5 362 1 19 2 174 1 227 1 27 2 74 1 229 9 152 1 153 2 330 9 178 3 381 1 307 1 
283 2 237 1 262 1 83 1 59 1 240 2 241 4 84 6 269 1 288 1 163 2 14 1 165 2 126 1 217 5 362 1 19 2 174 1 227 1 27 2 74 1 229 9 152 1 153 2 330 9 178 3 381 1 307 1 
283 2 237 1 262 1 83 1 59 1 240 2 241 5 84 7 269 1 288 1 163 2 14 1 165 2 126 1 217 6 362 1 19 2 174 1 227 1 27 2 74 1 229 10 152 1 153 2 330 10 178 4 381 1 307 1 
283 2 237 1 262 1 83 1 59 1 240 2 241 3 84 4 269 1 288 1 163 2 14 1 165 2 126 1 217 4 362 1 19 2 174 1 227 1 27 2 74 1 229 7 153 1 330 7 178 2 381 1 307 1 
283 1 217 3 237 1 19 1 59 1 240 1 84 3 241 2 269 1 288 1 27 1 74 1 229 4 152 1 163 1 153 2 178 1 330 4 
217 1 283 1 295 1 237 1 19 1 174 1 266 1 269 1 288 1 27 1 229 2 163 1 14 1 330 2 374 1 165 1 
283 2 217 2 237 1 241 1 84 1 269 1 288 1 27 2 229 3 330 3 178 1 165 1 307 1 
362 1 217 5 283 2 237 1 19 1 59 1 83 1 240 1 84 7 241 4 269 1 288 1 110 1 27 2 74 1 229 9 152 1 163 1 153 2 330 9 203 1 178 3 165 1 307 1 
362 1 217 5 283 2 237 1 19 1 59 1 83 1 240 1 84 7 241 4 269 1 288 1 110 1 27 2 74 1 229 9 152 1 163 1 153 2 330 9 203 1 178 3 165 1 307 1 
244 1 4 1 265 1 
244 1 373 2 38 1 
225 2 236 1 194 1 341 2 249 2 378 2 350 2 337 2 
260 2 236 1 333 1 34 1 119 1 284 1 239 1 137 2 6 1 36 1 121 1 183 1 211 2 10 1 359 1 243 1 337 3 66 1 161 1 245 1 316 1 188 1 341 2 249 2 42 2 190 1 70 1 194 1 173 1 148 2 378 2 350 2 222 1 225 3 51 1 112 1 201 1 
225 1 111 1 194 1 341 1 249 1 345 1 378 1 350 1 355 1 337 1 
263 1 4 1 210 1 88 1 26 1 337 1 225 1 107 1 289 1 111 1 244 1 259 1 249 1 100 1 
4 1 210 2 350 1 378 1 26 1 337 1 225 1 107 1 289 2 111 1 244 1 259 1 341 1 249 1 100 1 
289 1 186 1 310 1 210 1 56 1 
289 2 186 1 244 1 118 1 4 1 162 1 210 2 56 1 
289 1 210 1 56 1 
194 1 210 1 350 1 378 1 337 1 225 1 186 1 289 1 111 1 341 1 249 1 345 1 32 1 355 1 
244 1 
289 2 186 1 244 1 118 1 4 1 210 2 56 1 377 1 
118 1 4 1 20 1 210 5 158 1 8 1 48 1 351 1 186 2 289 5 109 2 244 1 278 2 115 1 164 1 56 2 125 1 99 2 343 1 
260 1 70 1 119 1 239 1 173 1 36 1 148 1 302 1 222 1 87 1 378 1 10 1 337 2 225 2 66 1 201 1 341 1 342 1 249 1 42 1 
236 1 265 1 
236 2 349 1 138 1 350 1 378 1 337 2 225 2 341 1 249 2 
181 1 75 1 342 1 
260 1 236 1 119 1 70 1 239 1 173 1 36 1 148 1 222 1 10 1 337 1 225 1 66 1 76 1 201 1 42 1 
236 1 263 1 349 1 22 1 302 1 87 2 378 4 350 1 337 5 39 1 225 5 314 1 341 4 249 5 
225 2 111 1 341 2 249 2 86 1 345 1 378 2 337 2 
225 3 236 1 341 3 249 3 350 1 87 1 378 3 337 3 
225 1 111 1 341 1 249 1 345 1 378 1 337 1 
225 1 111 1 349 1 138 1 341 1 249 1 378 1 350 1 337 1 
282 1 260 1 236 1 34 1 119 1 284 1 239 1 137 2 6 1 36 1 210 1 121 1 183 1 211 1 87 1 10 1 243 1 337 4 66 1 289 1 161 1 245 1 188 1 341 3 249 3 167 1 100 1 42 1 190 1 70 1 349 1 194 1 173 1 148 1 302 1 222 1 350 2 378 3 26 1 107 1 225 4 111 1 201 1 259 1 
225 2 236 1 263 1 314 1 341 1 249 2 378 1 87 1 337 2 
155 1 349 1 210 1 302 1 350 1 87 2 378 3 26 1 337 3 225 3 107 1 289 1 111 1 244 1 259 1 341 3 249 3 167 1 100 1 
349 1 87 1 350 1 378 2 337 2 225 2 75 1 341 2 249 2 342 1 
260 1 236 1 119 1 70 1 239 1 36 1 173 1 148 1 222 1 10 1 337 1 225 1 66 1 201 1 42 1 
235 1 260 1 236 1 70 1 239 1 173 1 148 1 222 1 10 1 337 1 225 1 66 1 201 1 380 1 42 1 
181 2 34 1 284 2 137 2 6 1 121 1 183 1 211 4 359 2 243 1 270 1 123 1 161 1 342 2 251 1 193 1 105 1 25 1 53 1 28 1 75 2 55 1 116 1 331 1 
225 1 111 1 259 1 341 1 249 1 378 1 86 1 337 1 
293 1 184 1 
293 1 184 1 
1 1 37 1 
1 1 37 1 
1 1 293 1 184 1 37 1 
144 1 293 1 184 1 
144 1 293 1 184 1 
144 1 293 1 184 1 
214 1 293 1 184 1 
1 1 304 1 326 1 37 1 293 2 184 2 
113 1 293 1 184 1 
113 1 293 1 184 1 
113 1 293 1 184 1 
236 1 208 1 210 1 159 1 85 1 184 1 337 2 289 1 214 1 341 2 249 2 41 1 344 1 166 1 293 1 102 1 169 1 220 1 21 1 195 1 378 2 225 2 276 1 257 1 
261 1 17 1 208 2 322 2 21 3 210 2 365 1 221 1 159 2 326 1 184 2 289 2 12 1 244 1 276 2 258 1 166 2 293 2 102 1 
19 1 163 1 240 1 
19 1 163 1 266 1 
368 1 19 3 353 1 240 2 266 1 90 1 
154 1 368 1 19 2 240 1 266 1 90 1 
368 1 19 2 240 1 266 1 90 2 
33 2 118 1 4 1 210 5 9 1 8 3 268 1 89 1 38 1 289 5 186 4 212 2 244 2 373 3 372 1 99 1 343 1 169 1 220 1 193 1 171 2 297 1 298 1 195 1 106 1 25 1 351 2 109 1 53 1 116 1 278 1 56 1 
33 6 118 1 4 1 310 5 210 9 120 1 8 8 268 2 38 3 289 9 186 7 212 6 244 5 373 9 125 1 99 2 142 5 343 1 296 1 220 4 193 3 297 3 104 1 298 2 106 1 25 3 351 6 109 2 53 3 328 1 116 3 278 2 56 6 30 1 79 1 
33 2 4 1 210 3 9 1 8 3 268 1 38 2 186 2 289 3 212 2 244 3 372 1 373 4 125 1 99 1 220 1 171 1 193 1 297 1 298 1 25 1 351 2 109 1 53 1 278 1 116 1 
33 4 4 1 210 4 9 1 8 5 268 1 38 3 289 4 186 3 212 4 244 4 373 7 372 1 125 1 99 1 296 1 220 2 171 2 193 2 297 2 104 1 298 1 25 2 351 4 109 1 53 2 278 1 116 2 79 1 
173 1 265 1 306 1 
173 1 242 1 
199 1 
70 1 173 1 201 1 
256 1 173 1 
70 1 173 1 
70 1 173 2 47 1 199 1 228 1 201 1 306 2 
127 1 128 1 375 1 207 1 284 3 334 2 105 3 223 1 211 7 359 4 93 1 313 1 53 1 55 2 315 1 116 1 272 1 
127 1 128 1 375 1 207 1 284 3 334 2 105 3 223 1 211 7 359 4 93 1 313 1 53 1 55 2 315 1 116 1 272 1 
127 1 128 1 375 1 207 1 284 3 334 2 23 1 105 3 223 1 211 7 359 4 93 1 313 1 53 1 55 2 315 1 116 1 272 1 
134 1 207 1 308 1 34 1 284 15 137 2 334 3 287 3 121 1 211 31 336 1 358 1 243 1 359 16 122 1 161 1 93 2 313 2 315 2 272 1 127 2 128 1 375 1 18 1 193 3 297 3 105 10 223 5 25 3 53 4 54 1 55 5 116 4 279 4 
127 1 128 1 375 1 207 1 34 2 284 4 334 2 137 4 264 1 105 4 121 2 223 1 211 9 359 5 243 2 91 1 161 2 93 1 313 1 53 1 54 1 55 3 315 1 116 1 
0 1 260 1 283 1 237 1 239 1 240 1 84 1 266 1 269 1 288 1 11 1 66 1 163 1 339 1 247 1 271 1 165 1 42 1 168 1 217 1 319 1 347 1 145 1 19 2 148 1 27 1 229 2 353 1 330 2 354 1 
0 1 260 1 283 1 237 1 239 1 240 1 84 2 266 1 288 1 11 1 66 1 163 1 339 1 271 1 165 1 42 1 168 1 217 1 319 1 347 1 19 2 323 1 148 1 50 1 27 1 277 1 353 1 229 3 330 3 354 1 
0 1 260 1 237 1 239 1 240 1 84 2 266 1 288 1 11 1 66 1 339 1 163 1 271 1 165 1 42 1 217 1 319 1 347 1 19 2 323 1 148 1 277 1 229 2 353 1 330 2 
69 1 283 1 260 1 319 2 370 1 70 1 239 1 146 1 173 1 148 1 10 1 50 1 66 1 40 1 27 1 229 1 339 2 271 2 248 1 330 1 165 2 250 1 42 1 
0 1 260 1 283 1 239 1 240 1 266 1 269 1 11 1 66 1 163 1 339 1 247 1 271 1 165 1 42 1 168 1 319 1 347 1 19 2 323 1 148 1 27 1 229 1 353 1 330 1 354 1 
60 1 
260 2 118 3 309 1 210 4 8 2 268 1 267 2 10 2 66 1 69 1 219 2 320 1 363 1 70 1 172 1 173 1 278 1 234 1 133 1 239 1 38 2 92 2 289 4 244 1 95 1 338 1 96 2 373 2 99 1 343 1 42 2 143 1 43 2 253 2 348 1 146 1 147 2 148 2 300 1 351 2 255 2 108 1 109 1 56 6 
118 1 320 1 363 1 309 1 210 2 377 1 300 1 289 2 95 1 96 1 56 2 
289 1 320 1 253 1 363 1 95 1 309 1 210 1 300 1 267 1 
219 1 118 1 320 1 363 1 253 1 309 1 210 2 377 1 300 1 267 1 289 2 95 1 96 1 56 2 
356 1 118 3 309 1 4 2 210 4 8 1 267 3 15 1 219 4 320 1 363 1 225 1 226 1 329 1 278 1 32 1 133 1 337 1 38 2 92 2 289 4 244 2 95 1 96 4 341 1 249 1 99 1 343 1 345 1 143 1 43 2 253 3 194 1 377 1 147 2 300 1 350 1 378 1 351 1 255 2 109 1 111 1 114 1 56 7 355 1 
118 2 4 1 309 1 210 3 8 1 267 2 38 2 92 2 289 3 244 2 95 1 338 1 96 2 373 2 99 1 343 1 143 1 43 2 219 2 320 1 253 2 363 1 147 2 300 1 351 1 255 2 109 1 278 1 56 4 133 1 
356 1 118 2 4 1 309 1 210 3 8 1 267 2 38 2 92 2 289 3 244 1 95 1 96 2 99 1 343 1 143 1 43 2 219 2 320 1 253 2 363 1 147 2 300 1 255 2 351 1 109 1 114 1 329 1 278 1 56 4 133 1 
356 1 118 2 4 1 309 1 210 3 8 1 267 2 38 2 92 2 289 3 244 1 95 1 96 2 99 1 343 1 143 1 43 2 219 2 320 1 253 2 363 1 147 2 300 1 255 2 351 1 109 1 114 1 329 1 278 1 56 4 133 1 
309 1 285 1 210 1 8 1 92 1 289 1 95 1 373 1 99 1 97 1 343 1 143 1 320 1 363 1 147 1 300 1 351 1 366 1 109 1 200 1 329 1 278 1 
356 1 118 2 4 1 309 1 210 3 8 1 267 3 38 2 92 2 289 3 244 1 95 1 96 3 99 1 343 1 143 1 43 2 219 3 320 1 363 1 253 3 147 2 300 1 255 2 351 1 109 1 226 1 329 1 114 1 278 1 56 5 133 1 
356 1 118 2 4 1 309 1 210 3 8 1 267 3 38 2 92 2 289 3 244 1 95 1 96 3 99 1 343 1 143 1 43 2 219 3 320 1 363 1 253 3 147 2 300 1 255 2 351 1 109 1 226 1 329 1 114 1 278 1 56 5 133 1 
118 2 4 1 309 1 210 3 8 1 267 2 92 2 289 3 244 1 95 1 338 1 96 2 373 2 99 1 97 1 343 1 143 1 219 2 320 1 253 2 363 1 147 2 300 1 351 1 109 1 200 2 278 1 56 4 78 2 
127 1 181 1 128 1 375 1 236 2 207 1 34 1 284 3 334 1 137 2 6 1 105 2 265 1 183 1 121 1 211 6 359 3 243 1 270 1 161 1 93 1 53 1 75 1 55 2 116 1 342 1 
367 1 181 11 236 1 308 1 34 2 284 6 137 4 6 1 287 3 121 2 183 2 211 14 358 1 243 2 359 8 312 1 161 2 245 1 316 1 342 11 193 2 297 2 46 1 105 2 223 1 25 1 53 1 75 4 55 1 116 2 279 3 81 1 205 1 
260 1 236 1 119 1 34 1 239 1 284 1 137 2 36 1 6 1 183 1 121 1 87 1 211 2 10 1 243 1 337 2 359 1 312 1 66 1 161 1 245 1 316 1 341 1 249 1 42 1 376 1 70 1 173 1 148 1 302 1 222 1 378 1 225 2 75 1 132 1 76 1 29 1 201 1 
260 3 207 1 119 2 6 3 64 1 121 3 211 20 10 1 359 10 312 1 66 2 161 3 360 2 67 2 316 1 127 1 128 1 70 2 173 2 323 1 222 2 223 4 25 2 225 3 75 7 177 2 181 7 236 2 34 3 284 10 239 2 334 1 137 6 36 2 183 3 87 1 337 3 243 3 93 1 245 1 188 2 341 1 249 1 342 7 42 3 375 1 193 2 297 2 148 3 105 8 302 1 378 1 151 1 53 3 52 2 55 4 201 2 116 3 204 1 
58 1 260 7 6 2 7 1 121 2 211 2 65 1 10 2 359 1 270 1 66 4 161 2 316 1 215 1 317 1 69 1 70 3 321 1 173 4 323 1 275 1 225 1 233 1 34 2 284 1 239 3 137 4 183 2 87 1 243 2 337 1 245 1 246 1 341 1 249 1 42 6 146 1 299 1 148 7 378 1 197 1 112 2 201 1 
181 1 34 1 284 2 137 2 6 1 182 1 121 1 183 1 211 3 243 1 337 1 359 1 312 1 161 1 341 1 342 1 249 1 349 1 193 1 297 1 105 1 350 1 378 1 25 1 225 1 53 1 75 1 55 1 116 1 
181 1 34 1 193 1 137 2 6 1 105 1 183 1 121 1 223 1 211 2 243 1 359 2 270 1 161 1 75 1 116 1 342 1 331 1 
181 1 34 1 284 2 137 2 6 1 105 1 183 1 121 1 211 2 25 1 243 1 270 1 161 1 123 1 53 1 75 1 55 1 342 1 
181 2 34 1 284 2 137 2 6 1 121 1 183 1 211 4 359 2 243 1 270 1 161 1 342 2 193 1 297 1 105 2 223 1 25 1 53 1 75 2 55 1 116 1 
181 1 321 1 34 1 193 1 137 2 6 1 105 1 183 1 121 1 223 1 211 2 243 1 359 2 161 1 75 1 116 1 342 1 331 1 
181 1 321 1 34 1 284 2 137 2 6 1 105 1 183 1 121 1 211 2 25 1 243 1 161 1 123 1 53 1 75 1 55 1 342 1 
181 2 34 1 284 2 137 2 6 1 121 1 183 1 211 4 359 2 243 1 161 1 342 2 193 1 321 1 297 1 105 2 223 1 25 1 53 1 75 2 55 1 116 1 
181 2 34 1 284 2 137 2 6 1 121 1 183 1 211 4 359 2 243 1 161 1 342 2 193 1 297 1 105 2 223 1 25 1 53 1 75 2 55 1 116 1 
260 1 236 1 119 1 34 1 239 1 284 1 137 2 36 1 6 1 183 1 121 1 211 2 10 1 359 1 337 1 243 1 66 1 161 1 245 1 316 1 188 1 42 1 70 1 173 1 148 1 222 1 225 1 201 1 
235 1 260 1 236 1 34 1 239 1 284 1 137 2 6 1 183 1 121 1 211 2 140 1 10 1 359 1 337 1 243 1 66 1 161 1 245 1 316 1 42 1 70 1 173 1 148 1 222 1 225 1 201 1 380 1 
181 2 34 1 284 2 137 2 6 1 121 1 183 1 211 4 359 2 243 1 312 1 161 1 342 2 193 1 297 1 105 2 223 1 25 1 53 1 75 2 55 1 116 1 
260 1 181 2 119 1 34 1 284 2 239 1 137 2 36 1 6 1 183 1 121 1 211 4 359 2 337 1 243 1 66 1 161 1 188 1 342 2 42 1 145 1 193 1 70 1 297 1 173 1 148 1 105 2 25 1 223 1 222 1 225 1 53 1 52 1 75 2 55 1 116 1 201 1 
181 1 34 1 284 1 137 2 6 1 121 1 183 1 211 3 243 1 337 1 359 2 312 1 161 1 341 1 249 1 342 1 349 1 45 1 193 1 297 1 105 1 25 1 223 1 350 1 378 1 225 1 53 1 75 1 116 1 
369 1 207 1 2 1 308 1 34 3 284 21 334 1 137 6 287 3 371 1 264 1 121 3 211 41 358 3 243 3 359 20 161 3 93 1 189 1 294 1 127 1 128 1 375 1 192 1 193 4 297 4 105 8 24 1 196 1 223 4 25 4 149 1 352 4 53 5 54 1 175 1 55 4 116 5 31 2 279 4 179 1 332 1 82 1 
369 1 207 1 2 1 308 1 34 4 284 18 334 1 137 8 287 3 371 1 264 1 121 4 211 38 358 3 243 4 359 20 161 4 93 1 189 1 294 1 127 1 128 1 375 1 192 1 193 4 297 4 105 7 24 1 196 1 223 3 25 3 149 1 352 4 53 4 54 2 175 1 55 4 116 5 31 2 279 4 179 1 332 1 82 1 
369 1 207 1 2 1 308 2 34 2 284 25 334 1 137 4 287 4 371 1 264 1 121 2 211 52 358 2 243 2 359 27 161 2 93 1 294 1 127 1 128 1 375 1 192 1 193 7 297 7 46 2 105 14 24 1 196 1 223 7 25 7 149 1 352 4 53 8 54 1 175 1 55 7 116 8 31 1 279 4 179 1 82 1 
2 1 308 1 34 2 284 10 137 4 287 1 62 1 264 1 121 2 211 19 358 1 243 2 359 9 161 2 193 3 297 3 105 6 24 1 196 1 223 3 25 3 149 2 352 2 53 3 55 3 116 3 31 1 279 2 332 1 82 1 
369 1 2 1 34 3 284 12 137 6 287 2 371 1 264 1 121 3 211 26 358 2 243 3 359 14 161 3 294 1 192 1 193 3 297 3 105 4 24 1 223 2 196 1 25 2 149 1 352 4 53 2 54 2 175 1 55 2 116 3 31 2 279 2 179 1 82 2 
17 1 208 1 276 1 258 1 292 1 159 1 326 1 166 1 293 1 184 1 
214 1 85 1 
208 1 276 1 35 1 61 1 159 1 166 1 293 1 184 1 49 1 
144 1 130 1 
346 1 113 1 304 1 
17 1 208 1 322 1 21 2 210 1 365 1 221 1 159 1 326 1 184 1 289 1 12 1 244 1 276 1 258 1 166 1 293 1 102 1 
17 1 208 1 322 1 21 2 210 1 365 1 221 1 159 1 326 1 184 1 289 1 12 1 244 1 276 1 258 1 166 1 293 1 102 1 
17 1 208 1 322 1 21 2 210 1 365 1 221 1 159 1 326 1 184 1 289 1 12 1 244 1 276 1 258 1 166 1 293 1 102 1 
144 1 304 1 130 1 
144 1 304 1 130 1 
346 1 113 1 
346 1 113 1 304 1 
257 1 344 1 
236 1 208 1 210 1 63 1 159 1 85 1 184 1 337 2 289 1 186 1 214 1 341 2 249 2 41 1 344 1 166 1 293 1 169 1 220 1 322 1 21 1 365 1 195 1 378 2 225 2 276 1 257 1 
260 2 58 1 34 1 239 1 284 1 157 1 137 2 6 1 183 1 121 1 211 2 337 2 243 1 359 1 312 1 66 1 161 1 290 1 246 1 245 1 316 1 249 2 42 2 361 1 170 1 70 1 173 1 148 2 198 1 225 2 112 2 
168 1 0 1 260 2 19 2 145 1 239 1 240 1 323 1 148 2 324 1 266 1 11 1 66 1 73 1 353 1 163 1 271 1 180 1 42 2 
168 1 0 1 260 1 19 2 239 1 240 1 323 1 148 1 266 1 11 1 66 1 353 1 163 1 271 1 280 1 180 1 42 1 
69 1 260 1 70 1 239 1 72 1 146 1 173 1 148 1 10 1 66 1 73 1 271 1 250 1 42 1 
168 1 0 1 260 1 19 2 239 1 240 1 323 1 148 1 324 1 266 1 11 1 66 1 73 1 353 1 163 1 271 1 180 1 42 1 
254 1 
244 1 4 1 158 1 8 1 265 1 48 1 351 1 
118 1 4 1 210 1 8 1 38 1 289 1 244 2 373 1 99 1 343 1 43 1 255 1 351 1 109 1 278 1 56 1 133 1 
260 3 118 3 4 2 5 1 210 5 158 1 8 9 268 2 311 1 10 1 66 4 212 6 68 2 16 1 318 2 218 2 129 2 71 2 70 3 173 10 25 2 26 2 278 4 176 2 177 2 234 1 33 6 239 3 242 3 38 6 289 5 244 8 373 12 99 4 343 4 42 3 145 1 44 1 193 2 297 2 148 3 301 1 47 1 48 1 351 8 109 4 379 2 256 2 53 2 201 3 116 2 56 5 305 2 306 2 
33 5 118 1 4 2 210 1 287 1 371 1 8 8 268 1 358 1 38 3 289 1 212 5 244 5 187 1 373 6 99 2 68 2 343 2 294 1 192 1 193 2 297 2 25 2 351 5 109 2 53 2 175 1 231 1 278 2 116 2 56 1 234 1 305 1 279 1 179 1 
210 1 8 2 337 1 289 1 93 1 341 1 99 1 249 1 68 2 343 1 345 1 127 1 128 1 194 1 350 1 378 1 351 2 225 1 109 1 111 1 53 1 114 1 202 1 278 1 116 2 305 1 32 1 355 1 
4 1 158 1 8 1 48 1 351 1 109 1 244 1 278 1 99 1 343 1 
33 5 193 2 297 2 8 5 25 2 351 5 38 5 212 5 244 5 53 2 116 2 373 10 177 1 305 1 68 2 
289 1 244 1 118 1 4 1 210 1 56 1 
260 4 118 2 239 2 5 1 210 3 8 2 268 2 65 1 10 2 66 3 289 3 94 1 125 1 99 2 343 1 16 2 215 1 42 4 69 1 70 2 348 1 146 1 173 2 148 4 197 1 351 2 108 1 109 2 201 1 278 2 56 4 233 1 234 2 117 1 
260 1 236 1 119 1 34 1 284 1 239 1 137 2 36 1 6 1 121 1 183 1 211 1 10 1 243 1 337 3 66 1 161 1 245 1 188 1 341 2 249 2 42 1 190 1 194 1 70 1 173 1 148 1 378 2 350 2 222 1 225 3 201 1 
33 2 4 2 334 1 8 1 268 1 38 2 351 2 109 1 212 2 244 4 373 4 278 1 99 1 234 1 343 1 
208 1 159 1 131 1 
208 1 159 1 131 1 
208 1 159 1 131 1 
208 1 258 1 159 1 344 1 224 1 
208 1 13 1 159 1 
208 1 13 1 159 1 
208 1 13 1 159 1 
208 1 159 1 
293 1 184 1 
207 1 34 1 284 4 334 1 137 2 287 1 264 1 121 1 211 8 358 1 243 1 359 4 161 1 93 1 127 1 375 1 128 1 192 1 105 2 53 1 55 2 116 1 279 1 
207 1 308 1 34 2 284 5 334 1 137 4 287 1 264 1 121 2 211 11 160 1 358 1 243 2 359 6 161 2 93 1 127 1 128 1 375 1 192 1 193 1 297 1 105 3 223 1 53 1 55 2 116 2 279 2 
207 1 34 3 284 10 334 1 137 6 287 1 264 1 371 1 121 3 160 1 211 19 358 1 243 3 359 9 161 3 93 1 294 1 127 1 128 1 375 1 192 1 193 2 297 2 105 4 223 1 25 2 53 3 54 1 175 1 55 3 116 3 279 1 179 1 
207 1 34 3 284 7 334 1 137 6 287 1 264 1 371 1 121 3 160 1 211 17 358 1 243 3 359 10 161 3 93 1 294 1 127 1 128 1 375 1 192 1 193 2 297 2 105 5 223 2 25 1 53 2 54 1 175 1 55 3 116 3 279 1 179 1 
207 1 34 1 284 4 334 1 137 2 287 1 264 1 121 1 211 8 358 1 243 1 359 4 161 1 93 1 127 1 375 1 128 1 192 1 105 2 53 1 55 2 116 1 279 1 
34 1 284 6 137 2 287 1 264 1 371 1 121 1 211 12 358 1 243 1 359 6 161 1 294 1 192 1 193 2 297 2 105 2 223 1 25 2 53 2 175 1 55 1 116 2 279 1 179 1 
207 1 34 4 284 8 334 1 137 8 287 1 371 1 264 1 121 4 211 18 160 1 358 1 243 4 359 10 161 4 93 1 294 1 127 1 128 1 375 1 192 1 193 2 297 2 105 5 223 2 25 1 53 2 54 2 175 1 55 3 116 3 279 1 179 1 
34 4 284 7 137 8 287 1 371 1 264 1 121 4 211 16 358 1 243 4 359 9 161 4 294 1 192 1 193 3 297 3 105 6 223 3 25 2 53 2 54 2 175 1 55 3 116 3 279 1 179 1 332 1 
127 3 375 2 128 1 207 1 284 4 105 6 211 7 223 3 359 3 93 3 53 1 55 3 116 1 
207 1 34 4 284 8 334 1 137 8 287 1 371 1 264 1 121 4 211 18 358 1 243 4 359 10 161 4 93 1 294 1 127 1 128 1 375 1 192 1 193 2 297 2 105 4 223 1 25 1 53 2 54 2 175 1 55 3 116 3 279 1 179 1 332 1 
127 1 128 1 375 1 207 1 34 2 284 4 334 1 137 4 105 3 121 2 211 8 223 1 359 4 243 2 161 2 93 1 53 1 54 1 55 2 116 1 
127 1 375 1 128 1 207 1 284 3 334 1 265 1 105 2 211 6 359 3 93 1 53 1 55 2 116 1 
34 1 193 1 284 2 297 1 137 2 105 2 121 1 25 1 160 1 211 4 223 1 243 1 359 2 161 1 53 1 55 1 116 1 
308 1 193 1 284 4 297 1 287 1 105 2 25 1 211 7 223 1 358 1 359 3 53 1 55 1 116 1 279 2 
207 1 308 1 34 2 284 12 334 1 137 4 287 2 121 2 211 23 359 11 243 2 161 2 93 2 127 2 128 1 375 1 193 2 297 2 46 1 105 9 223 4 25 2 53 3 54 2 55 5 116 3 279 2 281 1 205 1 
284 1 279 1 211 1 
287 1 211 1 359 1 
34 1 193 1 284 3 297 1 137 2 105 3 121 1 160 1 211 6 223 1 25 1 243 1 359 3 161 1 53 1 55 2 116 1 177 1 
34 1 284 6 137 2 287 1 264 1 371 1 121 1 211 12 358 1 243 1 359 6 161 1 294 1 192 1 193 2 297 2 105 2 223 1 25 2 53 2 175 1 55 1 116 2 279 1 179 1 
127 1 128 1 284 3 105 2 211 6 223 1 359 3 93 1 53 1 55 1 116 1 
127 1 375 1 207 1 34 1 284 2 137 2 105 2 121 1 223 1 211 3 359 1 243 1 161 1 93 1 54 1 55 1 281 1 
127 2 128 1 34 1 284 5 137 2 264 1 105 5 121 1 223 2 211 10 243 1 359 5 161 1 93 2 53 2 55 3 202 1 116 2 
34 1 193 1 137 2 264 1 105 1 121 1 211 2 223 1 243 1 359 2 161 1 116 1 
34 1 193 1 284 2 297 1 137 2 264 1 105 2 121 1 25 1 211 4 223 1 243 1 359 2 161 1 53 1 55 1 116 1 
127 1 34 3 284 2 137 6 264 1 105 2 121 3 211 3 223 1 243 3 359 1 161 3 93 1 54 1 55 1 281 1 332 1 
207 1 308 1 34 5 284 18 334 1 137 10 287 3 264 1 121 5 336 1 160 1 211 34 358 1 243 5 359 16 122 1 161 5 93 3 127 3 128 2 375 1 18 1 193 3 297 3 105 12 223 5 25 3 53 5 54 2 55 7 116 5 279 4 281 1 332 1 
225 1 236 1 263 1 314 1 335 1 249 1 337 1 
150 1 191 1 136 1 232 1 340 1 
69 1 66 1 260 1 70 1 239 1 146 1 173 1 148 1 265 1 42 1 10 1 
260 1 236 1 70 1 119 1 239 1 173 1 148 1 222 1 87 1 378 1 10 1 337 2 225 2 66 1 201 1 341 1 249 1 42 1 
260 1 236 1 129 1 70 2 119 1 239 1 173 3 148 1 222 1 87 1 378 2 337 2 225 2 66 1 111 1 256 1 201 2 259 1 341 1 249 2 16 1 100 1 42 1 
260 2 3 1 236 1 239 1 87 1 337 2 66 1 341 1 249 2 16 1 42 2 100 1 129 1 70 2 173 3 148 2 378 2 222 1 225 2 111 1 256 1 201 2 259 1 380 1 
260 3 3 1 129 1 4 1 70 1 239 1 210 2 173 4 148 3 242 1 10 1 26 1 185 1 66 1 289 2 244 1 256 1 201 1 56 1 16 1 42 3 306 1 101 1 
260 3 218 1 3 1 129 1 4 1 70 1 239 1 210 2 173 4 148 3 242 1 10 1 26 1 66 1 289 2 244 1 256 1 201 1 56 1 16 1 42 3 306 1 
66 1 260 1 239 1 148 1 42 1 317 1 
260 6 70 2 239 2 173 3 275 1 323 1 7 1 299 1 148 6 47 1 10 2 66 3 112 1 246 1 201 1 233 1 215 1 317 1 42 5 57 1 
260 1 181 1 236 2 207 1 34 2 119 1 284 3 239 1 334 1 137 4 6 2 36 1 183 2 121 2 211 6 87 1 359 3 243 2 337 2 312 1 66 1 161 2 93 1 290 1 360 1 188 1 341 1 342 1 249 1 42 1 127 1 128 1 375 1 145 1 70 1 173 1 148 1 105 2 222 1 378 1 225 2 53 1 52 1 75 1 55 2 116 1 201 1 
260 1 118 1 4 1 5 1 210 3 158 1 8 1 242 1 10 1 289 3 186 1 244 1 99 2 343 2 42 1 218 1 71 1 173 2 148 1 48 1 26 1 351 1 109 2 379 1 278 2 176 1 56 2 306 1 
260 2 145 1 70 1 239 1 173 2 148 2 47 1 311 1 66 2 201 1 306 1 317 1 42 2 
69 1 260 4 3 1 145 1 70 1 239 1 146 1 173 1 148 4 141 1 10 1 66 1 42 4 
260 2 70 1 239 1 173 1 148 2 64 1 65 1 197 1 66 2 201 1 233 1 16 1 215 1 42 2 
0 1 66 1 260 1 19 1 239 1 163 1 148 1 266 1 42 1 10 1 
66 1 260 2 145 1 70 1 246 1 239 1 157 1 173 1 323 1 148 2 42 2 
69 1 260 5 145 1 70 2 239 2 146 1 173 3 275 1 148 5 299 1 141 1 10 1 66 2 246 1 16 1 42 4 
69 1 260 5 145 1 70 2 239 2 146 1 173 3 148 5 299 1 141 1 10 1 66 2 303 1 246 1 16 1 42 4 
260 1 236 1 70 1 239 1 173 1 148 1 222 1 87 1 378 1 10 1 337 2 225 2 66 1 201 1 341 1 249 1 380 1 42 1 
260 1 70 1 239 1 173 1 148 1 47 1 66 2 201 1 233 1 215 1 16 1 42 1 57 1 
236 1 238 1 364 1 103 1 252 1 
206 1 236 1 135 1 103 1 364 2 238 2 4 1 210 2 26 1 107 1 186 1 289 2 111 1 244 1 259 1 77 1 252 2 100 1 167 1 
225 1 198 1 170 1 103 1 364 1 249 1 252 1 337 1 361 1 
206 1 103 1 77 1 
288 1 217 1 237 1 265 1 
288 1 217 1 283 1 237 1 27 1 229 1 330 1 
319 1 330 1 165 1 
216 1 217 1 283 1 237 1 274 1 286 1 269 1 288 1 27 1 229 3 14 2 330 3 
288 1 217 1 283 1 237 1 27 1 229 2 153 1 330 2 84 1 
217 1 283 1 27 1 19 1 74 1 229 1 163 1 240 1 330 1 241 1 269 1 
217 1 283 1 237 1 27 1 229 1 330 1 269 1 
288 1 283 1 237 2 27 1 229 1 330 1 269 1 
217 1 283 2 237 1 156 1 269 1 27 2 230 1 229 2 330 2 80 1 
283 1 362 1 217 2 237 1 83 1 84 2 241 1 269 1 288 1 27 1 229 3 330 3 178 1 
217 1 283 1 237 1 19 2 240 1 84 1 266 1 327 1 269 1 288 1 27 1 229 2 353 1 163 1 330 2 
283 2 217 2 237 1 84 2 241 1 269 1 288 1 27 2 229 4 152 1 153 1 330 4 178 1 
288 1 217 1 283 1 237 1 27 1 229 1 330 1 269 1 
216 1 283 1 217 3 237 2 286 1 357 1 84 2 241 1 288 2 27 1 229 4 14 1 330 4 178 1 
217 1 283 1 237 1 325 1 84 1 269 1 288 1 27 1 229 2 330 2 203 1 273 1 
216 2 217 1 283 1 237 1 286 1 269 1 288 1 27 1 213 1 229 3 14 2 330 3 
217 2 124 1 209 1 291 2 
283 1 27 1 229 1 330 1 139 1 269 1 
288 1 217 1 362 1 283 1 237 1 27 1 229 2 330 2 84 1 269 1 
98 1 
288 1 217 1 283 1 237 1 27 1 229 1 330 1 269 1 
288 1 362 1 217 1 283 1 237 1 27 1 229 3 14 1 330 3 84 1 269 1 
217 1 357 1 178 1 241 1 
217 1 237 1 

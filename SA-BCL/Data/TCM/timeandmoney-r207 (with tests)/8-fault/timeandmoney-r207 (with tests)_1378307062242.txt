#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (252,277,311) 160 (124,303,350) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (252,277,311) 160 293 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (252,277,311) 160 293 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 158 326 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (252,277,311) 160 (124,303,350) 265 299 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (252,277,311) 160 (124,303,350) 265 299 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (252,277,311) 160 (124,303,350) 265 299 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (252,277,311) 160 (124,303,350) 265 299 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (252,277,311) 160 (124,303,350) 265 299 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (252,277,311) 160 (124,303,350) 265 299 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (252,277,311) 160 (124,303,350) 265 299 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (252,277,311) 160 (124,303,350) 265 299 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (252,277,311) 160 (124,303,350) 265 299 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (252,277,311) 160 (124,303,350) 265 299 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (252,277,311) 160 (124,303,350) 265 299 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 158 326 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (252,277,311) 160 293 181 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (252,277,311) 160 293 181 215 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (27,174,210,298) (27,174,210,298) 67 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
226 4 125 2 29 1 128 9 105 2 210 6 295 1 109 1 6 1 273 1 298 2 57 1 36 1 174 9 12 1 155 5 218 3 92 1 198 2 138 2 18 1 357 1 333 1 358 1 284 1 182 1 27 2 76 2 
226 4 125 2 29 1 128 9 105 2 210 6 295 1 109 1 6 1 273 1 298 2 57 1 36 1 174 9 12 1 155 5 218 3 92 1 198 2 138 2 18 1 357 1 333 1 358 1 284 1 182 1 27 2 76 2 
226 5 125 2 29 1 128 10 105 2 210 7 295 1 109 1 6 1 273 1 298 2 57 1 36 1 174 10 12 1 155 6 218 4 92 1 198 2 138 2 18 1 357 1 333 1 358 1 284 1 182 1 27 2 76 2 
226 3 125 2 29 1 128 7 105 1 210 4 295 1 109 1 6 1 273 1 298 2 57 1 36 1 174 7 12 1 155 4 218 2 92 1 198 2 138 2 18 1 333 1 358 1 284 1 182 1 27 2 76 2 
174 4 12 1 226 2 155 3 218 1 128 4 198 1 138 1 105 2 210 3 357 1 295 1 333 1 358 1 109 1 298 1 76 1 27 1 
174 2 155 1 125 1 128 2 198 1 18 1 295 1 333 1 358 1 212 1 273 1 298 1 192 1 59 1 27 1 76 1 
174 3 226 1 155 2 125 1 218 1 128 3 210 1 295 1 333 1 358 1 298 2 36 1 27 2 
226 4 125 1 29 1 128 9 105 2 210 7 295 1 109 1 298 2 36 1 174 9 12 1 155 5 218 3 92 1 198 1 138 1 257 1 357 1 333 1 358 1 180 1 27 2 76 1 
226 4 125 1 29 1 128 9 105 2 210 7 295 1 109 1 298 2 36 1 174 9 12 1 155 5 218 3 92 1 198 1 138 1 257 1 357 1 333 1 358 1 180 1 27 2 76 1 
87 1 99 1 23 1 
87 1 227 1 40 2 
10 1 252 2 311 2 277 2 348 2 123 1 26 2 318 2 
340 2 185 1 341 1 229 1 30 1 318 2 165 1 245 1 234 1 110 1 348 2 8 2 152 1 214 2 60 1 172 1 216 1 10 1 325 1 274 1 252 2 91 1 275 1 276 1 277 3 65 2 354 1 17 1 305 1 159 1 95 1 139 2 19 1 311 2 72 1 123 1 26 3 
47 1 10 1 252 1 20 1 311 1 126 1 277 1 348 1 26 1 318 1 
252 1 160 1 350 1 
252 1 126 1 277 1 303 2 93 1 318 1 43 2 87 1 311 1 23 1 348 1 170 1 250 1 26 1 124 1 
37 1 43 1 151 1 263 1 303 1 
85 1 43 2 87 1 151 1 263 1 303 2 23 1 336 1 
43 1 151 1 303 1 
47 1 10 1 43 1 252 1 20 1 311 1 126 1 263 1 277 1 303 1 348 1 289 1 26 1 318 1 
87 1 
85 1 43 2 87 1 151 1 263 1 353 1 303 2 23 1 
157 2 207 1 303 5 209 1 230 1 279 1 291 2 53 1 85 1 43 5 87 1 130 2 151 2 263 2 213 1 346 1 35 1 23 1 316 1 
99 1 123 1 
252 2 277 2 318 1 54 1 223 1 311 1 348 1 26 2 123 2 
297 1 98 1 82 1 
325 1 216 1 185 1 275 1 219 1 277 1 276 1 65 1 17 1 95 1 139 1 245 1 72 1 8 1 123 1 26 1 
216 1 325 1 185 1 252 1 275 1 38 1 276 1 277 2 65 1 17 1 95 1 139 1 245 1 72 1 311 1 98 1 73 1 348 1 8 1 26 2 
252 5 156 1 38 1 277 4 318 1 293 1 160 1 309 1 223 1 311 4 73 2 348 4 26 4 123 1 
252 2 20 1 311 2 126 1 335 1 277 2 348 2 26 2 
252 3 311 3 73 1 277 3 348 3 123 1 26 3 318 1 
252 1 20 1 311 1 126 1 277 1 348 1 26 1 
54 1 252 1 223 1 311 1 126 1 277 1 348 1 26 1 318 1 
340 1 185 1 341 1 126 1 229 1 30 1 318 2 165 1 245 1 348 3 8 1 152 1 170 1 250 1 214 2 172 1 216 1 325 1 10 1 274 1 252 3 91 1 275 1 38 1 276 1 277 4 303 1 65 1 255 1 93 1 17 1 305 1 95 1 159 1 139 1 43 1 308 1 223 1 72 1 311 3 73 1 123 1 26 4 124 1 
293 1 160 1 252 2 311 1 277 1 73 1 348 1 26 1 
252 3 126 1 38 1 303 1 277 3 255 1 93 1 318 1 43 1 87 1 271 1 223 1 311 3 73 2 348 3 170 1 250 1 26 3 124 1 
252 2 277 2 82 1 318 1 223 1 311 2 73 1 98 1 348 2 26 2 
325 1 216 1 185 1 275 1 277 1 65 1 276 1 17 1 95 1 139 1 245 1 72 1 8 1 123 1 26 1 
216 1 185 1 275 1 277 1 65 1 276 1 17 1 95 1 139 1 245 1 191 1 8 1 338 1 123 1 26 1 
340 4 341 1 342 1 229 1 82 2 165 1 86 1 235 1 110 2 189 1 297 2 152 2 58 1 214 2 251 1 274 1 91 1 351 1 199 1 305 1 312 1 98 2 161 1 147 1 
252 1 311 1 126 1 335 1 277 1 348 1 250 1 26 1 
329 1 253 1 
329 1 253 1 
3 1 267 1 
3 1 267 1 
3 1 267 1 
300 1 329 1 253 1 
63 1 329 1 253 1 
356 1 3 1 267 1 329 2 253 2 103 1 
300 1 329 1 253 1 
300 1 329 1 253 1 
343 1 329 1 253 1 
343 1 329 1 253 1 
343 1 329 1 253 1 
50 1 81 1 244 1 319 1 132 1 55 1 236 1 348 2 63 1 252 2 302 1 329 1 253 1 64 1 303 1 277 2 177 1 43 1 259 1 311 2 46 1 123 1 26 2 266 1 
113 1 148 1 302 1 253 2 329 2 103 1 303 2 129 1 163 1 177 2 81 2 244 2 43 2 87 1 259 2 310 2 260 1 132 3 45 1 
198 1 138 1 76 1 
212 1 198 1 76 1 
5 1 204 1 212 1 15 1 138 2 76 3 
5 1 288 1 212 1 15 1 138 1 76 2 
5 1 212 1 15 2 138 1 76 2 
28 2 227 1 208 1 209 3 291 1 4 2 53 2 85 1 246 1 87 2 235 1 130 1 151 1 55 1 188 1 189 1 236 1 56 2 346 1 169 1 58 1 327 1 157 1 351 1 303 5 40 3 43 5 261 1 283 1 263 4 23 1 46 1 
28 6 227 3 208 2 209 8 291 2 53 6 246 1 85 1 87 5 235 3 151 6 130 2 189 3 236 4 35 1 56 6 346 1 58 3 111 1 135 1 37 5 327 3 157 2 351 3 176 1 303 9 39 1 40 9 68 1 307 5 43 9 283 2 263 7 23 1 75 1 
28 2 227 2 208 1 209 3 291 1 4 1 53 2 87 3 235 1 130 1 236 1 189 1 35 1 56 2 169 1 58 1 327 1 157 1 351 1 303 3 40 4 43 3 261 1 283 1 263 2 23 1 
28 4 227 3 208 1 209 5 291 1 4 2 53 4 87 4 235 2 130 1 236 2 189 2 56 4 35 1 169 1 58 2 135 1 327 2 157 1 351 2 303 4 40 7 68 1 43 4 261 1 283 1 263 3 23 1 75 1 
276 1 74 1 99 1 
276 1 221 1 
154 1 
216 1 245 1 276 1 
276 1 359 1 
216 1 276 1 
242 1 216 1 245 1 301 1 74 2 276 3 
340 7 268 2 351 1 278 1 186 1 2 1 121 1 86 2 306 1 235 1 294 1 142 1 110 4 262 1 152 3 314 1 251 3 
340 7 268 2 351 1 278 1 186 1 2 1 121 1 86 2 306 1 235 1 294 1 142 1 110 4 262 1 152 3 314 1 251 3 
61 1 340 7 268 2 351 1 278 1 186 1 2 1 121 1 86 2 306 1 235 1 294 1 142 1 110 4 262 1 152 3 314 1 251 3 
340 31 268 3 162 1 228 4 229 1 186 1 2 2 150 3 86 5 294 1 235 4 110 16 189 3 152 15 58 3 214 2 251 10 171 1 274 1 327 3 328 1 91 1 195 1 351 4 220 1 278 1 305 1 121 2 306 2 142 5 262 2 264 1 314 1 101 1 
340 9 268 2 229 2 186 1 187 1 2 1 86 3 235 1 294 1 110 5 152 4 214 4 251 4 274 2 116 1 91 2 195 1 351 1 278 1 305 2 121 1 306 1 142 1 262 1 
204 1 206 1 125 1 128 2 231 1 210 1 321 1 295 1 212 1 8 1 249 1 298 1 193 1 174 2 155 1 65 1 239 1 198 1 138 1 17 1 95 1 139 1 69 1 333 1 358 1 201 1 224 1 315 1 27 1 76 2 
204 1 206 1 125 1 128 3 231 1 210 2 321 1 295 1 212 1 8 1 298 1 174 3 155 1 196 1 65 1 239 1 198 1 256 1 138 1 17 1 95 1 139 1 69 1 333 1 201 1 144 1 224 1 315 1 27 1 76 2 
204 1 206 1 125 1 128 2 210 2 295 1 212 1 8 1 174 2 155 1 196 1 65 1 239 1 256 1 198 1 17 1 138 1 95 1 139 1 69 1 333 1 201 1 224 1 315 1 76 2 
225 1 216 1 174 1 185 1 286 1 206 2 102 1 125 2 276 1 65 1 239 2 128 1 17 1 95 1 139 1 331 1 201 2 44 1 248 1 144 1 298 1 8 1 27 1 
204 1 206 1 125 1 128 1 231 1 321 1 212 1 8 1 298 1 193 1 174 1 65 1 239 1 198 1 256 1 138 1 17 1 95 1 139 1 69 1 358 1 201 1 224 1 315 1 27 1 76 2 
323 1 
326 1 185 1 157 1 158 1 303 1 65 1 209 1 291 1 139 1 43 1 151 1 130 1 283 1 346 1 8 1 
43 1 252 1 160 1 131 1 303 1 265 1 350 1 299 1 90 1 
43 1 252 1 160 1 131 1 303 1 265 1 350 1 299 1 90 1 
43 1 252 1 160 1 131 1 303 1 265 1 350 1 299 1 90 1 
85 1 43 2 252 1 160 1 131 1 151 1 353 1 303 2 265 1 350 1 299 1 90 1 
252 1 157 1 303 1 291 1 43 1 160 1 130 1 131 1 346 1 265 1 299 1 350 1 90 1 
43 1 252 1 160 1 131 1 303 1 265 1 350 1 299 1 90 1 
43 1 252 1 160 1 131 1 303 1 265 1 350 1 299 1 90 1 
43 1 252 1 160 1 131 1 303 1 265 1 350 1 299 1 90 1 
43 1 252 1 160 1 131 1 303 1 265 1 350 1 299 1 90 1 
43 1 252 1 160 1 131 1 303 1 265 1 350 1 299 1 90 1 
252 1 157 1 303 1 291 1 43 1 160 1 130 1 131 1 346 1 265 1 299 1 350 1 90 1 
340 6 341 1 268 1 229 1 186 1 82 1 165 1 86 2 294 1 235 1 110 3 297 1 152 3 214 2 251 2 274 1 91 1 351 1 278 1 199 1 305 1 306 1 262 1 98 1 99 1 123 2 
0 1 285 1 340 14 341 1 51 1 162 1 228 3 229 2 83 1 82 4 150 3 86 1 165 2 108 1 235 1 110 8 189 2 297 11 152 6 58 1 214 4 60 1 251 2 172 1 274 2 327 2 91 2 351 2 305 2 142 1 98 11 264 1 123 1 
185 1 340 2 341 1 229 1 82 1 83 1 245 1 165 1 107 1 110 1 8 1 348 1 152 1 214 2 60 1 216 1 325 1 172 1 274 1 252 1 275 1 91 1 219 1 38 1 276 1 65 1 277 2 17 1 178 1 95 1 305 1 139 1 72 1 311 1 73 1 202 1 123 1 26 2 
48 1 185 1 268 1 52 2 229 3 186 1 106 1 235 3 270 2 110 10 189 2 8 3 152 10 58 2 60 1 325 2 274 3 62 2 327 2 275 2 65 3 277 3 276 2 278 1 17 2 72 2 21 2 73 1 123 2 26 3 340 20 341 3 205 1 30 2 83 1 82 7 86 4 165 3 245 2 294 1 297 7 348 1 214 6 251 8 172 1 216 2 252 1 91 3 38 1 351 3 256 1 305 3 95 2 139 3 306 1 311 1 142 4 262 1 98 7 
225 1 185 2 102 1 317 1 229 2 234 2 110 1 8 7 152 1 60 1 274 2 117 1 65 7 276 4 277 1 199 1 17 3 200 1 73 1 26 1 340 2 341 2 292 1 164 1 165 2 245 1 211 1 296 1 133 1 348 1 168 1 214 4 216 3 172 1 252 1 91 2 256 1 305 2 95 4 139 6 140 1 311 1 146 1 
340 3 341 1 229 1 82 1 318 1 83 1 86 1 165 1 235 1 110 1 189 1 297 1 348 1 152 2 349 1 58 1 214 2 251 1 274 1 327 1 252 1 91 1 351 1 277 1 305 1 223 1 311 1 98 1 26 1 
340 2 274 1 341 1 91 1 351 1 229 1 199 1 82 1 305 1 165 1 142 1 110 2 189 1 297 1 98 1 214 2 251 1 147 1 
340 2 274 1 341 1 342 1 91 1 229 1 199 1 82 1 305 1 86 1 165 1 235 1 297 1 98 1 152 2 58 1 214 2 251 1 
340 4 341 1 229 1 82 2 165 1 86 1 235 1 110 2 189 1 297 2 152 2 58 1 214 2 251 2 327 1 274 1 91 1 351 1 199 1 305 1 142 1 98 2 
340 2 274 1 341 1 91 1 351 1 229 1 82 1 305 1 164 1 165 1 142 1 110 2 189 1 297 1 98 1 214 2 251 1 147 1 
340 2 274 1 341 1 342 1 91 1 229 1 82 1 305 1 86 1 164 1 165 1 235 1 297 1 98 1 152 2 58 1 214 2 251 1 
340 4 341 1 229 1 82 2 165 1 164 1 86 1 235 1 110 2 189 1 297 2 152 2 58 1 214 2 251 2 327 1 274 1 91 1 351 1 305 1 142 1 98 2 
340 4 341 1 229 1 82 2 165 1 86 1 235 1 110 2 189 1 297 2 152 2 58 1 214 2 251 2 327 1 274 1 91 1 351 1 305 1 142 1 98 2 
340 2 185 1 341 1 229 1 30 1 245 1 165 1 110 1 8 1 152 1 214 2 60 1 216 1 325 1 172 1 274 1 275 1 91 1 65 1 276 1 277 1 17 1 95 1 305 1 139 1 72 1 123 1 26 1 
340 2 185 1 341 1 229 1 245 1 165 1 110 1 191 1 8 1 152 1 214 2 60 1 216 1 172 1 274 1 275 1 91 1 65 1 276 1 277 1 304 1 17 1 95 1 305 1 139 1 338 1 123 1 26 1 
340 4 341 1 229 1 83 1 82 2 165 1 86 1 235 1 110 2 189 1 297 2 152 2 58 1 214 2 251 2 327 1 274 1 91 1 351 1 305 1 142 1 98 2 
340 4 341 1 229 1 30 1 82 2 86 1 245 1 165 1 235 1 110 2 189 1 297 2 8 1 249 1 152 2 58 1 214 2 251 2 325 1 216 1 274 1 327 1 275 1 91 1 351 1 65 1 276 1 277 1 17 1 95 1 305 1 139 1 142 1 72 1 21 1 98 2 26 1 
340 3 341 1 287 1 229 1 318 1 83 1 82 1 165 1 235 1 110 2 189 1 297 1 348 1 152 1 58 1 214 2 251 1 274 1 327 1 252 1 91 1 351 1 277 1 305 1 223 1 142 1 311 1 98 1 26 1 
340 19 162 1 228 2 229 2 31 1 150 1 86 3 166 1 33 1 235 3 110 9 189 3 89 1 7 2 152 10 58 3 214 4 251 6 11 1 274 2 327 3 116 1 91 2 351 3 13 2 305 2 42 1 142 3 143 1 264 1 
340 26 127 1 104 1 228 2 229 3 31 2 150 2 86 2 33 1 235 2 110 14 189 3 89 1 7 4 152 12 58 2 214 6 251 4 274 3 327 3 116 1 91 3 195 2 351 3 13 1 241 1 222 1 41 1 305 3 42 2 97 1 142 2 143 1 264 2 
268 1 228 4 104 1 229 3 186 1 150 3 235 5 110 20 189 4 7 4 152 21 58 4 327 4 274 3 116 1 195 1 13 1 278 1 241 1 340 41 162 1 127 1 31 1 86 4 33 1 166 1 247 1 294 1 89 1 214 6 251 8 91 3 351 5 222 1 305 3 41 1 42 2 306 1 97 1 142 4 262 1 143 1 264 3 
340 38 268 1 127 1 162 1 104 1 228 4 229 4 186 1 31 1 150 3 86 4 247 1 166 1 33 1 294 1 235 4 110 20 189 4 89 1 7 4 152 18 58 3 214 8 251 7 274 4 327 4 116 1 91 4 195 2 351 5 13 1 278 1 241 1 222 1 41 1 305 4 42 2 306 1 97 1 142 3 143 1 262 1 264 3 
285 2 340 52 268 1 127 1 162 2 104 1 228 4 229 2 186 1 31 1 150 4 86 7 33 1 294 1 235 8 110 27 189 7 89 1 7 4 152 25 58 7 214 4 251 14 274 2 327 7 116 1 91 2 195 1 351 8 13 1 278 1 241 1 222 1 41 1 305 2 42 1 306 1 97 1 142 7 143 1 262 1 264 2 
113 1 259 1 281 1 329 1 253 1 103 1 163 1 81 1 177 1 244 1 
63 1 64 1 
259 1 175 1 237 1 329 1 253 1 134 1 81 1 177 1 244 1 
77 1 300 1 
356 1 343 1 238 1 
113 1 148 1 302 1 253 1 329 1 103 1 303 1 163 1 177 1 81 1 244 1 43 1 87 1 259 1 310 1 260 1 132 2 45 1 
113 1 148 1 302 1 253 1 329 1 103 1 303 1 163 1 177 1 81 1 244 1 43 1 87 1 259 1 310 1 260 1 132 2 45 1 
113 1 148 1 302 1 253 1 329 1 103 1 303 1 163 1 177 1 81 1 244 1 43 1 87 1 259 1 310 1 260 1 132 2 45 1 
356 1 77 1 300 1 
356 1 77 1 300 1 
343 1 238 1 
356 1 343 1 238 1 
50 1 266 1 
50 1 81 1 244 1 319 1 132 1 55 1 236 1 348 2 63 1 252 2 329 1 253 1 64 1 277 2 303 1 177 1 43 1 259 1 310 1 311 2 263 1 45 1 100 1 46 1 123 1 26 2 266 1 
252 1 277 1 240 1 26 1 
204 1 136 1 65 2 352 1 239 1 198 1 256 1 231 1 138 1 17 1 95 1 139 2 69 1 212 1 8 2 249 1 224 1 25 1 76 2 
204 1 78 1 65 1 352 1 239 1 198 1 256 1 231 1 138 1 17 1 95 1 139 1 69 1 212 1 8 1 224 1 76 2 
225 1 216 1 185 1 286 1 102 1 276 1 65 1 239 1 17 1 355 1 95 1 139 1 8 1 25 1 
204 1 136 1 65 1 352 1 239 1 198 1 256 1 231 1 138 1 17 1 95 1 139 1 69 1 212 1 8 1 224 1 25 1 76 2 
94 1 
53 1 87 1 99 1 209 1 23 1 230 1 279 1 
157 1 227 1 79 1 303 1 137 1 209 1 40 1 291 1 43 1 85 1 269 1 53 1 87 2 151 1 130 1 346 1 23 1 
185 1 227 6 52 2 230 1 53 8 322 2 151 5 235 2 189 2 56 6 8 3 9 2 58 2 327 2 157 4 276 7 65 3 16 1 118 1 66 2 17 2 279 1 334 1 70 2 283 2 282 1 74 2 23 2 242 1 28 6 209 9 290 2 291 4 84 1 245 2 345 2 85 3 87 8 130 4 167 2 346 4 249 1 216 2 351 2 303 5 254 1 221 3 93 2 40 12 95 3 139 3 43 5 141 1 
28 5 227 3 104 1 228 1 209 8 291 2 150 1 85 1 53 5 87 5 151 1 130 2 235 2 88 1 189 2 56 5 346 2 9 2 58 2 327 2 157 2 351 2 303 1 66 1 40 6 241 1 222 1 41 1 122 1 43 1 97 1 334 1 283 1 264 1 23 2 
47 1 126 1 209 2 289 1 291 1 318 1 53 2 130 1 294 1 235 1 190 1 346 1 348 1 9 2 10 1 252 1 157 1 351 2 277 1 303 1 66 1 179 1 306 1 43 1 20 1 311 1 262 1 26 1 
157 1 209 1 230 1 279 1 291 1 53 1 87 1 130 1 346 1 23 1 
327 2 28 5 351 2 227 5 52 1 209 5 66 1 40 10 53 5 87 5 235 2 189 2 56 5 9 2 58 2 
43 1 85 1 87 1 151 1 303 1 23 1 
326 1 185 1 157 1 65 1 158 1 209 1 291 1 139 1 84 1 151 1 130 1 283 1 346 1 8 1 
340 1 185 1 341 1 229 1 30 1 318 2 245 1 165 1 8 1 348 2 152 1 214 2 172 1 10 1 325 1 216 1 274 1 252 2 91 1 275 1 65 1 277 3 276 1 17 1 159 1 95 1 305 1 139 1 311 2 72 1 123 1 26 3 
28 2 268 1 157 1 227 2 209 1 40 4 291 1 53 2 87 4 130 1 334 1 283 1 56 2 346 1 23 2 
81 1 244 1 258 1 
320 1 163 1 81 1 244 1 266 1 
81 1 244 1 258 1 
81 1 244 1 258 1 
173 1 81 1 244 1 
173 1 81 1 244 1 
173 1 81 1 244 1 
81 1 244 1 
329 1 253 1 
340 8 274 2 268 1 91 2 195 1 351 1 229 2 278 1 186 1 305 2 86 2 306 1 235 1 294 1 110 4 142 1 262 1 152 4 214 4 251 3 
86 2 306 1 340 6 235 1 294 1 268 1 110 3 351 1 262 1 99 1 278 1 152 3 186 1 251 2 
274 1 327 1 340 4 91 1 351 1 149 1 229 1 305 1 86 1 235 1 110 2 142 1 189 1 152 2 58 1 214 2 251 2 
340 7 327 1 162 1 351 1 228 2 150 1 86 1 235 1 110 3 142 1 189 1 264 1 152 4 58 1 251 2 
0 1 340 23 285 1 268 1 162 1 228 2 229 2 186 1 150 2 86 5 294 1 235 3 110 11 189 2 152 12 58 2 214 4 251 9 327 2 274 2 217 1 91 2 195 2 351 3 278 1 305 2 306 2 142 4 262 2 
340 1 228 1 152 1 
150 1 340 1 110 1 
274 1 340 6 327 1 91 1 351 1 149 1 52 1 229 1 305 1 86 2 235 1 110 3 142 1 189 1 152 3 58 1 214 2 251 3 
340 12 228 1 104 1 229 1 150 1 86 1 235 2 110 6 189 2 152 6 58 2 214 2 251 2 274 1 327 2 116 1 91 1 351 2 241 1 222 1 305 1 41 1 97 1 142 1 264 1 
340 6 351 1 306 1 86 1 294 1 235 1 110 3 142 1 262 1 152 3 251 2 
217 1 340 3 274 1 91 1 195 1 278 1 229 1 186 1 305 1 86 1 306 1 110 1 142 1 262 1 152 2 214 2 251 2 
274 1 340 10 116 1 91 1 351 2 229 1 305 1 306 2 86 3 294 1 235 2 142 2 110 5 190 1 262 2 152 5 214 2 251 5 
274 1 340 2 116 1 91 1 351 1 229 1 305 1 110 2 142 1 189 1 214 2 251 1 
274 1 327 1 340 4 116 1 91 1 351 1 229 1 305 1 86 1 235 1 110 2 142 1 189 1 152 2 58 1 214 2 251 2 
217 1 340 3 274 3 116 1 91 3 195 1 229 3 305 3 306 1 86 1 166 1 142 1 110 1 262 1 152 2 214 6 251 2 
340 34 268 1 162 1 228 4 149 1 229 5 186 1 150 3 86 7 166 1 294 2 235 5 110 16 189 3 152 18 58 3 214 10 251 12 217 1 274 5 327 3 328 1 116 1 91 5 195 2 351 5 220 1 278 1 305 5 306 3 142 5 262 3 264 1 101 1 
340 8 268 1 228 1 229 1 186 1 150 1 86 2 235 1 294 1 110 4 152 4 214 2 251 2 274 1 116 1 91 1 351 1 278 1 241 1 305 1 306 1 262 1 264 1 
340 11 268 1 162 1 228 2 149 1 229 2 186 1 150 1 86 2 235 1 294 1 110 6 189 1 152 5 214 4 251 3 274 2 327 1 116 1 91 2 351 2 278 1 241 1 305 2 306 1 142 1 262 1 264 1 
340 19 268 1 149 1 104 1 228 1 229 3 186 1 150 1 86 3 294 1 235 3 110 9 189 2 152 10 58 2 214 6 251 4 274 3 327 2 116 1 91 3 195 1 351 3 278 1 241 1 222 1 305 3 41 1 306 1 97 1 142 1 262 1 264 1 
340 17 268 1 149 1 228 1 104 1 229 3 186 1 150 1 86 3 294 1 235 2 110 10 189 2 152 7 58 1 214 6 251 5 274 3 327 2 116 1 91 3 195 1 351 3 278 1 241 1 222 1 305 3 41 1 306 1 97 1 142 2 262 1 264 1 
340 8 268 1 228 1 229 1 186 1 150 1 86 2 235 1 294 1 110 4 152 4 214 2 251 2 274 1 116 1 91 1 351 1 278 1 241 1 305 1 306 1 262 1 264 1 
340 12 228 1 104 1 229 1 150 1 86 1 235 2 110 6 189 2 152 6 58 2 214 2 251 2 274 1 327 2 116 1 91 1 351 2 241 1 222 1 305 1 41 1 97 1 142 1 264 1 
340 18 268 1 104 1 228 1 149 1 229 4 186 1 150 1 86 3 294 1 235 2 110 10 189 2 152 8 58 1 214 8 251 5 274 4 327 2 116 1 91 4 195 2 351 3 278 1 241 1 222 1 41 1 305 4 306 1 97 1 142 2 262 1 264 1 
340 16 104 1 228 1 229 4 150 1 86 3 166 1 235 2 110 9 189 3 152 7 58 2 214 8 251 6 274 4 327 3 116 1 91 4 195 2 351 3 241 1 222 1 41 1 305 4 97 1 142 3 264 1 
340 7 351 1 278 2 186 1 306 3 86 3 235 1 294 1 142 3 110 3 262 3 152 4 251 6 
340 18 268 1 104 1 228 1 229 4 186 1 150 1 86 3 166 1 294 1 235 2 110 10 189 2 152 8 58 1 214 8 251 4 274 4 327 2 116 1 91 4 195 2 351 3 278 1 241 1 222 1 41 1 305 4 306 1 97 1 142 1 262 1 264 1 
293 1 252 1 160 1 181 1 
293 1 114 1 252 1 160 1 337 1 80 1 24 1 181 1 215 1 
225 1 139 1 216 1 185 1 102 1 276 1 99 1 65 1 8 1 17 1 95 1 
216 1 185 1 252 1 275 1 276 1 277 2 65 1 17 1 95 1 139 1 245 1 311 1 72 1 73 1 348 1 8 1 123 1 26 2 
126 2 245 2 8 1 348 1 170 1 250 1 216 2 252 2 275 1 65 1 277 2 276 2 254 1 118 1 119 1 17 1 95 1 139 1 72 1 311 2 73 1 26 2 123 1 
126 2 245 2 191 1 8 1 348 1 170 1 250 1 216 2 252 2 275 1 65 1 277 2 276 2 254 1 118 1 119 1 17 1 95 1 139 1 311 2 73 1 26 2 123 1 
47 1 126 1 243 1 289 1 318 1 245 1 87 1 151 1 324 1 348 1 8 1 10 1 216 1 252 1 277 1 276 3 65 1 303 2 221 1 254 1 118 1 93 1 17 1 95 1 139 1 43 2 20 1 311 1 74 1 23 1 26 1 
47 1 126 1 289 1 318 1 245 1 87 1 151 1 322 1 348 1 8 1 10 1 216 1 252 1 277 1 276 3 65 1 303 2 221 1 254 1 118 1 93 1 17 1 95 1 139 1 43 2 20 1 311 1 74 1 23 1 26 1 
139 1 65 1 8 1 317 1 17 1 95 1 
242 1 185 2 317 1 245 1 234 1 211 1 296 1 8 6 168 1 216 2 117 1 276 3 65 6 256 1 17 2 200 1 95 3 139 5 22 1 146 1 
268 1 229 2 186 1 270 1 235 1 110 3 8 1 152 3 325 1 274 2 275 1 65 1 277 2 276 1 278 1 17 1 72 1 21 1 73 1 26 2 123 2 340 6 341 2 30 1 344 1 82 1 83 1 165 2 245 1 86 2 294 1 297 1 249 1 348 1 214 4 251 2 216 1 252 1 91 2 351 1 305 2 95 1 139 1 306 1 311 1 262 1 98 1 
185 1 209 1 230 1 290 1 291 2 84 1 53 1 345 1 85 1 87 1 130 2 322 1 151 2 167 1 346 2 8 1 157 2 303 3 65 1 276 2 221 1 93 1 279 1 139 1 43 3 263 1 74 1 23 1 
242 1 216 1 65 2 276 2 317 1 17 1 95 2 139 2 245 1 282 1 74 1 249 1 8 2 
225 1 216 1 1 1 185 1 102 1 65 4 276 1 17 1 95 1 96 1 139 4 8 4 249 1 
48 1 216 1 65 2 276 1 254 1 200 1 17 1 95 2 139 2 140 1 245 1 296 1 133 1 8 2 
139 1 185 1 212 1 65 1 224 1 8 1 198 1 17 1 76 1 95 1 
139 2 216 1 34 1 276 1 65 2 168 1 8 2 249 1 256 1 17 1 95 1 
225 1 216 2 1 1 185 1 117 1 102 1 65 5 276 3 254 1 17 2 95 2 139 4 8 5 249 1 168 1 146 1 
225 1 115 1 216 2 1 1 185 1 102 1 65 5 276 3 254 1 17 2 95 2 139 4 8 5 249 1 168 1 146 1 
216 1 185 1 252 1 275 1 276 1 277 2 65 1 17 1 95 1 139 1 245 1 311 1 191 1 73 1 348 1 8 1 123 1 26 2 
242 1 216 1 65 1 276 1 254 1 200 1 17 1 95 2 139 1 245 1 296 1 22 1 8 1 
184 1 71 1 330 1 203 1 123 1 
194 1 184 2 126 1 330 1 303 2 14 1 255 1 93 1 280 1 43 2 87 1 71 2 263 1 23 1 203 2 250 1 170 1 123 1 124 1 
71 1 330 1 240 1 203 1 
280 1 194 1 330 1 
155 1 295 1 333 1 99 1 
174 1 155 1 295 1 333 1 128 1 298 1 27 1 
206 1 125 1 128 1 
174 3 153 1 155 1 128 3 18 2 358 1 333 1 295 1 298 1 145 1 112 1 27 1 
105 1 210 1 174 2 155 1 295 1 333 1 128 2 298 1 27 1 
174 1 226 1 155 1 128 1 198 1 138 1 358 1 109 1 298 1 27 1 76 1 
174 1 155 1 295 1 358 1 128 1 298 1 27 1 
174 1 295 2 333 1 358 1 128 1 298 1 27 1 
339 1 174 2 155 1 197 1 128 2 295 1 358 1 272 1 298 2 27 2 
174 3 226 1 155 2 29 1 218 1 92 1 128 3 210 2 295 1 333 1 358 1 298 1 27 1 
210 1 174 2 358 1 212 1 128 1 298 1 67 1 27 1 76 1 
174 4 226 1 155 2 218 1 128 4 105 1 210 2 357 1 295 1 333 1 358 1 298 2 27 2 
174 1 155 1 295 1 333 1 358 1 128 1 298 1 27 1 
183 1 174 4 153 1 226 1 155 3 218 1 128 4 18 1 210 2 295 2 333 2 298 1 145 1 27 1 
174 2 155 1 128 2 232 1 32 1 210 1 295 1 358 1 333 1 180 1 298 1 27 1 
174 3 153 1 155 1 128 3 18 2 120 1 358 1 333 1 295 1 298 1 145 2 27 1 
155 2 313 1 347 1 233 2 
174 1 332 1 358 1 128 1 298 1 27 1 
210 1 174 2 155 1 295 1 333 1 358 1 29 1 128 2 298 1 27 1 
49 1 
174 1 155 1 295 1 333 1 358 1 128 1 298 1 27 1 
174 3 155 1 29 1 128 3 18 1 210 1 358 1 333 1 295 1 298 1 27 1 
183 1 226 1 155 1 218 1 
155 1 295 1 

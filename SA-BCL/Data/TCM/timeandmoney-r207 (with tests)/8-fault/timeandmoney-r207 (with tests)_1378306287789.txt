#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (12,150,176,221) (12,150,176,221) (12,150,176,221) 161 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (12,150,176,221) (12,150,176,221) (12,150,176,221) 161 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (12,150,176,221) (12,150,176,221) (12,150,176,221) 161 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (12,150,176,221) (12,150,176,221) (12,150,176,221) 161 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (12,150,176,221) (12,150,176,221) (12,150,176,221) 161 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (12,150,176,221) (12,150,176,221) (12,150,176,221) 161 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (12,150,176,221) (12,150,176,221) (12,150,176,221) 161 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (12,150,176,221) (12,150,176,221) (12,150,176,221) 161 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (12,150,176,221) (12,150,176,221) (12,150,176,221) 161 
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (12,150,176,221) (12,150,176,221) (12,150,176,221) 161 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (12,150,176,221) (12,150,176,221) (12,150,176,221) 161 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (12,150,176,221) (12,150,176,221) (12,150,176,221) (15,105) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (12,150,176,221) (12,150,176,221) (15,105) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (12,150,176,221) (12,150,176,221) (12,150,176,221) (15,105) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 186 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 48 1 56 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
161 1 18 1 150 1 12 1 176 1 
161 1 18 1 150 1 12 1 176 1 
161 1 18 1 150 1 12 1 176 1 
161 1 18 1 150 1 12 1 176 1 
161 1 18 1 150 1 12 1 176 1 
161 1 18 1 150 1 12 1 176 1 
161 1 18 1 150 1 12 1 176 1 
161 1 18 1 150 1 12 1 176 1 
161 1 18 1 150 1 12 1 176 1 
289 2 28 2 140 1 291 1 141 1 134 1 75 1 122 1 
156 1 0 1 28 5 182 1 140 1 141 2 224 2 254 1 75 1 209 1 124 1 106 1 289 5 76 2 236 1 81 2 291 1 39 1 134 2 
140 1 291 1 143 1 
140 1 317 1 35 2 
63 2 211 1 191 2 183 1 57 2 41 2 11 2 145 2 
220 1 139 1 183 1 6 1 271 1 272 1 273 1 11 2 301 2 104 1 145 2 13 2 235 1 148 1 274 1 191 2 55 1 20 2 57 3 22 1 24 1 245 2 63 3 251 1 204 1 206 1 253 1 71 1 167 1 128 1 211 1 259 1 322 1 174 1 40 2 41 2 295 1 
125 1 63 1 211 1 171 1 191 1 57 1 41 1 11 1 74 1 145 1 
247 1 63 1 28 1 140 1 225 1 145 1 289 1 258 1 171 1 291 1 57 1 325 1 172 1 89 1 
247 1 63 1 28 2 140 1 225 1 11 1 145 1 289 2 191 1 171 1 291 1 57 1 325 1 172 1 41 1 
289 1 28 1 30 1 141 1 134 1 
289 2 28 2 140 1 291 1 141 1 153 1 134 1 75 1 
289 1 28 1 134 1 
63 1 28 1 141 1 74 1 11 1 145 1 125 1 289 1 211 1 171 1 149 1 191 1 57 1 41 1 
140 1 
63 1 220 1 183 1 273 1 301 1 13 1 235 1 274 1 167 1 128 1 322 1 55 1 57 1 22 1 200 1 245 1 
183 1 143 1 
116 1 63 2 183 2 11 1 145 2 318 1 191 1 57 2 41 1 
278 1 240 1 292 1 
63 2 278 1 220 1 266 1 273 1 301 1 37 1 145 1 13 1 235 1 167 1 274 1 128 1 322 1 191 1 55 1 57 2 22 1 41 1 245 1 
249 1 63 5 266 2 183 1 185 1 11 1 163 1 145 5 318 1 37 1 258 1 191 4 57 5 41 4 
125 1 63 2 219 1 171 1 191 2 57 2 41 2 145 2 
63 3 266 1 191 3 183 1 57 3 41 3 11 1 145 3 
125 1 63 1 171 1 191 1 57 1 41 1 145 1 
116 1 63 1 171 1 191 1 57 1 41 1 11 1 145 1 318 1 
220 1 266 1 183 1 6 1 225 1 271 1 226 1 273 1 11 2 301 1 104 1 145 3 13 1 235 1 274 1 191 3 55 1 20 1 57 4 22 1 24 1 245 1 247 1 63 4 313 1 28 1 204 1 206 1 253 1 71 1 318 1 37 1 289 1 167 1 128 1 211 1 322 1 171 1 325 1 172 1 174 1 40 2 41 3 295 1 
63 2 258 1 266 1 191 1 183 1 57 2 41 1 185 1 145 2 
247 1 63 3 28 1 313 1 266 2 140 1 225 1 11 1 318 1 37 1 145 3 289 1 288 1 171 1 191 3 57 3 325 1 172 1 41 3 
63 2 278 1 266 1 11 1 318 1 145 2 191 2 57 2 292 1 41 2 
63 1 220 1 183 1 273 1 301 1 13 1 235 1 274 1 167 1 128 1 322 1 55 1 57 1 22 1 245 1 
63 1 220 1 183 1 273 1 301 1 13 1 235 1 167 1 128 1 55 1 57 1 22 1 42 1 245 1 310 1 
90 1 264 1 95 1 6 1 271 1 9 1 232 1 189 1 20 4 240 2 152 1 278 2 117 1 204 1 206 1 253 1 78 1 259 2 169 1 214 1 174 1 40 2 292 2 295 2 
63 1 219 1 171 1 191 1 57 1 172 1 41 1 145 1 
146 1 297 1 255 1 
177 1 297 2 178 1 38 1 255 2 36 1 
297 1 255 1 
297 1 255 1 
177 1 38 1 
177 1 38 1 
177 1 38 1 
166 1 297 1 255 1 
166 1 297 1 255 1 
166 1 297 1 255 1 
297 1 277 1 255 1 
297 1 277 1 255 1 
297 1 277 1 255 1 
297 1 96 1 183 1 10 1 145 2 146 1 107 1 191 2 241 1 57 2 115 1 312 1 63 2 201 1 28 1 160 1 252 1 205 1 69 1 255 1 289 1 129 1 260 1 41 2 
297 2 312 2 28 2 299 1 205 1 140 1 255 2 36 1 319 1 234 1 304 1 289 2 107 3 260 2 212 1 241 2 154 1 155 2 115 2 
84 1 85 1 293 1 
321 1 84 1 293 1 
321 1 4 1 306 1 131 1 85 2 84 3 
321 1 127 1 306 1 131 1 85 1 84 2 
321 1 306 2 131 1 85 1 84 2 
137 1 298 1 224 1 141 4 140 1 8 1 51 1 11 1 145 1 191 1 149 1 194 1 57 1 201 1 63 1 28 5 65 1 254 2 75 1 74 1 35 1 124 1 125 1 289 5 76 1 126 1 211 1 169 1 213 1 171 1 81 1 214 1 291 1 39 1 41 1 134 1 328 2 
137 1 224 1 141 4 140 1 8 1 51 1 11 1 145 1 149 1 191 1 194 1 57 1 23 1 58 2 201 1 63 1 61 1 65 1 28 5 30 2 254 2 75 1 74 1 35 1 124 1 125 1 289 5 76 1 211 1 169 1 213 1 81 1 171 1 214 1 291 1 39 1 41 1 134 3 
90 1 137 2 298 1 182 1 140 3 141 2 224 1 8 2 51 1 189 1 194 1 201 1 28 3 254 2 317 2 35 4 289 3 126 1 76 1 169 1 81 1 213 1 214 1 291 1 39 3 328 1 
90 2 137 4 298 1 182 1 140 4 224 1 141 3 8 4 51 1 189 2 237 1 194 1 59 1 201 2 28 4 72 1 254 4 317 3 35 7 289 4 76 1 126 1 169 2 81 1 213 2 214 2 291 1 39 5 328 2 
77 1 22 1 143 1 
22 1 73 1 
147 1 
235 1 55 1 22 1 
22 1 87 1 
55 1 22 1 
235 1 77 2 16 1 55 1 22 3 70 1 
311 1 223 1 5 1 314 2 9 3 142 1 257 1 78 2 189 1 108 1 169 1 259 4 20 7 198 1 295 3 262 1 175 1 
311 1 223 1 5 1 314 2 9 3 142 1 257 1 78 2 189 1 108 1 169 1 259 4 20 7 198 1 295 3 262 1 175 1 
311 1 223 1 5 1 314 2 9 3 142 1 53 1 257 1 78 2 189 1 108 1 169 1 259 4 20 7 198 1 295 3 262 1 175 1 
1 1 223 2 48 1 6 1 271 1 9 2 142 1 20 6 198 1 311 1 67 1 206 1 314 1 315 1 78 1 79 1 259 3 130 1 132 1 40 2 174 1 295 3 262 1 175 1 
223 1 5 1 6 2 271 2 9 4 142 1 233 1 189 1 108 1 20 9 198 1 67 1 206 2 314 2 78 3 257 1 169 1 259 5 290 1 174 2 40 4 295 4 262 1 175 1 
161 1 18 1 150 1 12 1 176 1 
161 1 18 1 150 1 12 1 176 1 
15 1 18 1 150 1 12 1 176 1 
105 1 18 1 221 1 150 1 
15 1 18 1 150 1 12 1 176 1 
151 1 
179 1 3 1 99 1 273 2 13 2 194 1 195 1 22 1 275 1 26 1 202 2 28 5 279 4 119 1 35 2 124 1 289 5 128 1 291 1 39 2 134 6 294 1 140 2 224 1 225 1 301 2 230 1 145 1 238 2 55 1 242 2 57 1 244 2 308 2 245 2 246 1 247 1 63 1 68 1 316 2 254 2 162 1 75 3 317 2 320 2 76 1 167 1 258 1 81 1 171 1 173 1 325 1 172 1 327 1 89 1 
225 1 145 1 195 1 57 1 275 1 246 1 247 1 63 1 28 3 279 2 75 1 122 1 320 1 289 3 258 1 171 1 325 1 172 1 327 1 294 1 134 2 89 1 
140 1 225 1 145 1 195 1 57 1 275 1 244 1 246 1 247 1 63 1 28 3 279 3 75 1 122 1 289 3 258 1 171 1 291 1 325 1 172 1 134 1 327 1 294 1 89 1 
140 1 225 1 145 1 195 1 57 1 275 1 244 1 246 1 247 1 63 1 28 3 279 3 316 1 75 1 122 1 320 1 289 3 258 1 171 1 291 1 325 1 172 1 327 1 294 1 134 2 89 1 
3 1 222 1 224 1 140 5 225 1 103 1 145 1 238 2 195 1 242 2 57 1 275 1 308 2 244 4 27 1 246 1 247 1 63 1 202 2 28 5 279 6 254 1 316 4 75 3 317 2 122 1 124 1 320 4 289 5 76 1 258 1 81 1 171 1 82 1 291 5 173 1 39 1 325 1 172 1 326 1 327 1 294 1 134 7 89 1 
3 1 179 1 195 1 275 1 202 2 28 4 279 4 35 2 124 1 289 4 291 1 39 1 294 1 134 4 224 1 140 2 225 1 145 1 238 2 57 1 242 2 308 2 244 2 246 1 247 1 63 1 254 1 316 2 75 2 317 2 320 2 76 1 258 1 171 1 81 1 172 1 325 1 173 1 327 1 89 1 
3 1 140 1 224 1 225 1 103 1 145 1 238 2 195 1 242 2 57 1 275 1 244 2 308 2 246 1 27 1 247 1 63 1 202 2 28 4 279 4 316 2 254 1 75 2 317 2 320 2 124 1 289 4 76 1 258 1 81 1 171 1 291 1 173 1 39 1 325 1 172 1 326 1 134 4 327 1 294 1 89 1 
3 1 140 1 224 1 225 1 103 1 145 1 238 2 195 1 242 2 57 1 275 1 244 2 308 2 246 1 27 1 247 1 63 1 202 2 28 4 279 4 316 2 254 1 75 2 317 2 320 2 124 1 289 4 76 1 258 1 81 1 171 1 291 1 173 1 39 1 325 1 172 1 326 1 134 4 327 1 294 1 89 1 
247 1 63 1 28 2 279 2 225 1 186 1 145 1 289 2 258 1 171 1 195 1 57 1 172 1 275 1 325 1 294 1 327 1 246 1 89 1 
3 1 222 1 140 1 224 1 225 1 103 1 145 1 238 2 195 1 242 2 57 1 275 1 308 2 244 3 27 1 246 1 247 1 63 1 202 2 28 4 279 5 254 1 316 3 75 2 317 2 124 1 320 3 289 4 76 1 258 1 81 1 171 1 291 1 173 1 39 1 325 1 172 1 326 1 327 1 294 1 134 5 89 1 
3 1 222 1 140 1 224 1 225 1 103 1 145 1 238 2 195 1 242 2 57 1 275 1 308 2 244 3 27 1 246 1 247 1 63 1 202 2 28 4 279 5 254 1 316 3 75 2 317 2 124 1 320 3 289 4 76 1 258 1 81 1 171 1 291 1 173 1 39 1 325 1 172 1 326 1 327 1 294 1 134 5 89 1 
179 1 224 1 225 1 184 1 145 1 109 1 195 1 242 1 57 1 275 1 308 1 246 1 247 1 63 1 28 3 279 2 254 1 75 1 35 1 124 1 289 3 76 1 258 1 81 1 171 1 324 1 173 1 39 1 325 1 172 1 134 1 327 1 294 1 89 1 
63 1 191 1 57 1 41 1 100 1 11 1 145 1 318 1 
5 1 183 2 6 1 271 1 9 2 143 1 108 1 189 1 20 6 240 1 198 1 278 1 117 1 204 1 206 1 253 1 314 1 78 2 257 1 169 1 259 3 292 1 174 1 40 2 262 1 295 3 
90 1 2 1 181 1 183 1 6 2 48 2 271 2 9 1 104 1 54 1 189 1 20 12 240 6 112 1 307 1 251 1 64 1 278 6 204 1 206 2 253 2 78 1 79 2 168 1 259 7 169 2 171 1 213 2 214 2 174 2 40 4 292 2 295 5 
218 1 220 1 266 1 181 1 183 1 6 1 271 1 50 1 273 1 301 1 104 1 13 1 145 1 235 1 274 1 188 1 191 1 55 1 57 2 20 2 22 1 245 1 200 1 63 2 251 1 204 1 206 1 253 1 37 1 167 1 128 1 259 1 322 1 292 1 41 1 40 2 174 1 295 1 
90 2 2 1 266 1 181 1 267 2 183 1 5 1 6 3 271 3 9 5 273 1 104 1 13 1 14 1 274 2 187 2 108 1 189 4 191 1 20 22 22 2 198 1 278 6 204 3 206 3 37 1 128 2 213 2 214 2 40 6 41 1 292 6 43 2 295 11 47 2 220 2 301 1 228 1 231 1 145 1 235 2 55 2 57 3 240 6 245 1 63 3 251 1 253 3 71 2 257 1 167 2 78 4 169 4 259 11 171 1 322 2 174 3 262 1 175 1 
217 1 266 1 6 2 271 2 99 1 273 2 301 8 104 1 145 1 13 7 148 2 191 1 55 2 57 1 20 2 22 3 276 1 245 8 309 1 25 1 63 1 251 1 117 1 204 2 281 1 206 2 253 2 285 1 68 1 120 1 167 2 128 2 259 1 41 1 174 2 40 4 135 1 136 1 295 1 
278 1 117 1 204 1 206 1 253 1 6 1 271 1 9 1 169 1 259 2 214 1 240 1 20 2 292 1 40 2 174 1 152 1 175 1 
90 1 278 1 117 1 204 1 206 1 253 1 6 1 271 1 9 1 232 1 78 1 189 1 240 1 20 2 292 1 40 2 174 1 295 2 
90 1 6 1 271 1 9 2 189 1 20 4 240 2 278 2 117 1 204 1 206 1 253 1 78 1 259 2 169 1 213 1 214 1 174 1 40 2 292 2 295 2 175 1 
278 1 204 1 206 1 253 1 6 1 271 1 9 1 169 1 259 2 214 1 240 1 20 2 292 1 40 2 174 1 152 1 309 1 175 1 
90 1 278 1 204 1 206 1 253 1 6 1 271 1 9 1 232 1 78 1 189 1 240 1 20 2 292 1 40 2 174 1 309 1 295 2 
90 1 6 1 271 1 9 2 189 1 20 4 240 2 309 1 278 2 204 1 206 1 253 1 78 1 259 2 169 1 213 1 214 1 174 1 40 2 292 2 295 2 175 1 
90 1 278 2 204 1 206 1 253 1 6 1 271 1 9 2 78 1 189 1 169 1 259 2 213 1 214 1 240 2 20 4 292 2 40 2 174 1 295 2 175 1 
220 1 183 1 6 1 271 1 273 1 301 1 104 1 13 1 235 1 274 1 55 1 20 2 57 1 22 1 245 1 63 1 251 1 204 1 206 1 253 1 71 1 167 1 128 1 259 1 322 1 40 2 174 1 295 1 
220 1 183 1 6 1 271 1 273 1 301 1 104 1 13 1 235 1 55 1 20 2 57 1 22 1 245 1 310 1 63 1 251 1 204 1 206 1 253 1 121 1 167 1 128 1 259 1 40 2 174 1 42 1 295 1 
90 1 181 1 6 1 271 1 9 2 189 1 20 4 240 2 278 2 204 1 206 1 253 1 78 1 259 2 169 1 213 1 214 1 174 1 40 2 292 2 295 2 175 1 
90 1 217 1 220 1 267 1 6 1 271 1 9 2 301 1 13 1 235 1 274 1 189 1 55 1 240 2 20 4 57 1 22 1 245 1 63 1 278 2 204 1 206 1 253 1 71 1 78 1 167 1 128 1 259 2 169 1 322 1 213 1 214 1 292 2 40 2 174 1 295 2 175 1 
90 1 265 1 181 1 6 1 271 1 9 1 11 1 145 1 189 1 191 1 57 1 20 3 240 1 63 1 278 1 204 1 206 1 253 1 318 1 169 1 259 2 213 1 214 1 174 1 40 2 41 1 292 1 295 1 175 1 
90 3 46 1 1 2 216 1 92 1 180 1 6 2 48 2 271 2 9 5 302 1 229 4 233 1 189 3 197 1 20 25 56 1 243 2 307 1 157 1 206 2 78 3 79 3 259 12 169 3 80 1 213 3 214 3 174 2 40 4 295 13 175 2 
45 1 90 2 1 2 92 2 180 1 6 3 48 2 271 3 9 4 144 1 302 1 229 4 233 1 189 2 197 1 20 26 56 1 243 1 157 2 67 2 207 1 206 3 118 1 78 2 79 2 259 14 169 3 80 1 213 3 214 3 174 3 40 6 295 12 175 2 
90 4 1 3 92 2 180 1 5 1 6 3 271 3 9 7 189 5 108 1 20 41 197 1 198 1 206 3 207 1 118 1 287 1 213 4 214 4 40 6 295 21 45 1 46 1 48 3 144 1 229 4 302 1 233 1 56 1 243 1 307 1 157 1 67 1 314 1 78 4 257 1 79 4 169 5 259 20 80 1 174 3 262 1 175 3 
45 1 90 3 46 1 1 3 92 2 180 1 5 1 6 4 48 3 271 4 9 6 144 1 302 1 229 4 233 1 108 1 189 4 197 1 20 38 56 1 243 1 198 1 307 1 157 1 67 2 207 1 206 4 314 1 118 1 287 1 257 1 78 4 79 4 259 20 169 5 80 1 213 4 214 4 174 4 40 8 262 1 295 18 175 2 
45 1 90 5 1 2 92 1 180 1 5 3 6 2 48 3 271 2 9 12 144 1 302 1 229 4 233 1 108 3 189 8 56 1 197 1 20 52 243 1 198 3 307 1 157 1 67 1 207 1 206 2 314 3 118 1 257 3 78 7 79 3 168 1 259 28 169 8 80 1 213 5 214 5 174 2 40 4 262 3 295 24 175 5 
297 1 234 1 312 1 260 1 280 1 241 1 154 1 255 1 36 1 115 1 
146 1 96 1 
297 1 312 1 260 1 193 1 323 1 241 1 255 1 102 1 115 1 
166 1 33 1 
178 1 277 1 159 1 
297 1 312 1 28 1 299 1 205 1 140 1 255 1 36 1 319 1 234 1 304 1 289 1 107 2 260 1 241 1 154 1 155 1 115 1 
297 1 312 1 28 1 299 1 205 1 140 1 255 1 36 1 319 1 234 1 304 1 289 1 107 2 260 1 241 1 154 1 155 1 115 1 
297 1 312 1 28 1 299 1 205 1 140 1 255 1 36 1 319 1 234 1 304 1 289 1 107 2 260 1 241 1 154 1 155 1 115 1 
166 1 178 1 33 1 
166 1 178 1 33 1 
277 1 159 1 
178 1 277 1 159 1 
129 1 252 1 
297 1 299 1 96 1 300 1 183 1 141 1 10 1 145 2 146 1 107 1 191 2 57 2 241 1 155 1 115 1 63 2 312 1 201 1 28 1 160 1 252 1 69 1 255 1 289 1 129 1 260 1 41 2 
181 1 6 1 271 1 301 2 104 1 145 2 13 2 148 2 55 1 57 2 20 2 22 1 276 1 111 1 245 2 63 2 251 1 29 1 204 1 206 1 253 1 286 1 256 1 167 1 128 1 259 1 261 1 40 2 174 1 135 1 295 1 
296 1 158 1 4 1 31 1 138 1 281 1 283 1 301 1 52 1 13 1 321 1 167 1 128 1 85 1 84 2 293 1 245 1 86 1 
296 1 158 1 217 1 4 1 31 1 138 1 281 1 283 1 301 2 52 1 13 2 321 1 167 1 128 1 85 1 84 2 293 1 245 2 86 1 
158 1 4 1 138 1 281 1 97 1 283 1 301 1 52 1 13 1 321 1 167 1 128 1 85 1 84 2 293 1 245 1 86 1 
158 1 31 1 94 1 68 1 99 1 273 1 301 1 13 1 167 1 128 1 55 1 22 1 110 1 245 1 
227 1 
156 1 140 1 291 1 39 1 254 1 143 1 209 1 
3 1 224 1 140 2 238 1 202 1 28 1 254 1 75 1 317 1 35 1 124 1 289 1 76 1 81 1 291 1 39 1 134 1 
90 2 268 2 270 2 98 1 8 6 273 1 13 3 187 2 190 2 189 2 17 2 194 2 21 1 22 10 113 1 26 1 28 5 203 2 282 2 208 1 209 1 35 12 124 4 289 5 128 4 213 2 214 2 291 2 39 9 134 5 137 6 217 1 224 4 140 8 225 2 301 3 235 3 55 3 245 3 156 1 66 2 70 1 254 8 73 3 75 3 164 2 317 6 167 3 76 4 77 2 169 2 81 4 88 1 87 2 
1 1 137 1 140 1 224 1 48 1 254 1 8 1 317 1 35 2 124 1 76 1 79 1 81 1 56 1 39 1 
224 1 11 1 228 1 145 1 189 1 149 1 191 1 57 1 198 1 27 1 63 1 28 1 203 1 254 2 74 1 164 2 124 1 125 1 289 1 76 1 257 1 211 1 169 2 171 1 81 1 39 2 41 1 262 1 
124 1 156 1 76 1 81 1 140 1 291 1 224 1 39 1 254 1 209 1 
90 2 137 5 203 1 140 5 254 5 8 5 164 2 35 10 317 5 187 1 189 2 169 2 213 2 214 2 39 5 
289 1 28 1 140 1 291 1 134 1 75 1 
182 1 224 2 99 1 273 2 101 1 301 4 230 1 13 4 55 1 194 2 22 1 113 1 245 4 114 1 26 2 28 3 68 1 119 1 254 2 75 2 124 1 289 3 167 1 76 2 128 1 81 2 39 2 134 4 88 2 
220 1 183 1 6 1 271 1 273 1 301 1 11 2 104 1 13 1 145 2 235 1 274 1 191 2 55 1 20 1 57 3 22 1 24 1 245 1 63 3 204 1 206 1 253 1 71 1 167 1 128 1 211 1 322 1 174 1 40 2 41 2 295 1 
137 2 224 1 140 4 314 1 8 2 254 2 317 2 35 4 124 1 76 1 81 1 194 1 291 2 39 1 26 1 
234 1 312 1 210 1 129 1 115 1 
312 1 199 1 115 1 
312 1 199 1 115 1 
312 1 199 1 115 1 
312 1 83 1 115 1 
312 1 83 1 115 1 
312 1 83 1 115 1 
312 1 115 1 
297 1 255 1 
67 1 206 2 5 1 6 2 314 1 271 2 9 3 257 1 78 2 189 1 108 1 169 1 259 4 20 8 40 4 174 2 198 1 295 4 262 1 175 1 
5 1 314 1 9 2 143 1 78 2 257 1 108 1 189 1 169 1 259 3 20 6 198 1 295 3 262 1 
90 1 206 1 6 1 271 1 9 2 78 1 189 1 169 1 259 2 213 1 214 1 20 4 40 2 174 1 133 1 295 2 175 1 
1 1 79 1 259 1 20 2 48 1 295 1 
90 2 5 1 48 2 6 1 271 1 9 7 228 1 54 1 108 1 189 5 20 26 198 2 307 1 67 1 206 1 314 1 257 2 78 5 79 2 168 1 169 5 259 13 213 2 214 2 40 2 174 1 262 2 295 13 175 2 
79 1 20 1 295 1 
259 1 20 1 48 1 
90 1 206 1 6 1 271 1 9 3 187 1 78 2 189 1 169 1 259 3 213 1 214 1 20 6 174 1 40 2 133 1 295 3 175 1 
45 1 90 2 1 1 48 1 6 1 271 1 9 2 144 1 233 1 189 2 20 12 56 1 206 1 207 1 118 1 78 1 79 1 259 6 169 2 213 2 214 2 174 1 40 2 295 6 175 1 
9 2 257 1 78 1 189 1 169 1 259 3 20 6 198 1 295 3 262 1 175 1 
67 1 206 1 5 1 6 1 271 1 9 2 315 1 78 1 108 1 259 1 20 3 198 1 40 2 174 1 262 1 295 2 175 1 
206 1 6 1 271 1 9 5 228 1 233 1 78 3 257 1 189 2 259 5 169 2 20 10 174 1 40 2 198 2 262 2 295 5 175 2 
206 1 6 1 271 1 9 1 233 1 169 1 259 2 214 1 20 2 40 2 174 1 175 1 
90 1 206 1 6 1 271 1 9 2 233 1 78 1 189 1 169 1 259 2 213 1 214 1 20 4 40 2 174 1 295 2 175 1 
46 1 67 1 206 3 6 3 271 3 315 1 9 2 233 1 78 1 259 1 20 3 40 6 174 3 198 1 295 2 262 1 175 1 
1 1 46 1 5 1 6 4 48 1 271 4 9 6 228 1 233 1 189 2 108 1 20 15 198 2 67 1 206 4 315 1 257 1 78 3 79 1 169 2 259 7 132 1 174 4 40 8 133 1 295 8 262 2 175 3 
45 1 90 1 1 1 5 1 48 1 6 2 271 2 9 9 144 1 228 1 233 1 108 1 189 4 20 24 56 1 198 2 67 1 206 2 207 1 314 1 118 1 257 2 78 5 79 1 259 14 169 5 213 2 214 2 174 2 40 4 262 2 295 10 175 4 
45 1 90 1 1 1 5 1 6 3 48 1 271 3 9 4 144 1 233 1 108 1 189 2 20 17 56 1 198 1 67 1 207 1 206 3 314 1 118 1 257 1 78 3 79 1 259 10 169 3 213 2 214 2 174 3 40 6 133 1 262 1 295 7 175 1 
45 1 90 2 1 1 5 1 48 1 6 3 271 3 9 4 144 1 233 1 108 1 189 3 20 19 56 1 198 1 67 1 207 1 206 3 314 1 118 1 257 1 78 3 79 1 259 9 169 3 213 2 214 2 174 3 40 6 133 1 262 1 295 10 175 1 
45 1 90 1 1 1 5 1 48 1 6 3 271 3 9 5 144 1 233 1 108 1 189 2 20 17 56 1 198 1 67 1 206 3 207 1 314 1 118 1 257 1 78 3 79 1 259 10 169 3 213 2 214 2 174 3 40 6 133 1 262 1 295 7 175 2 
45 1 90 1 1 1 5 1 48 1 6 2 271 2 9 9 144 1 228 1 233 1 108 1 189 4 20 24 56 1 198 2 67 1 206 2 207 1 314 1 118 1 257 2 78 5 79 1 259 14 169 5 213 2 214 2 174 2 40 4 262 2 295 10 175 4 
45 1 90 2 1 1 48 1 6 1 271 1 9 2 144 1 233 1 189 2 20 12 56 1 206 1 207 1 118 1 78 1 79 1 259 6 169 2 213 2 214 2 174 1 40 2 295 6 175 1 
45 1 90 1 1 1 5 1 6 4 48 1 271 4 9 5 144 1 233 1 108 1 189 2 20 18 56 1 198 1 67 2 207 1 206 4 314 1 118 1 257 1 78 3 79 1 259 10 169 3 213 2 214 2 174 4 40 8 133 1 262 1 295 8 175 2 
45 1 90 2 1 1 46 1 6 4 48 1 271 4 9 6 144 1 233 1 189 2 20 16 56 1 67 2 207 1 206 4 118 1 78 3 79 1 259 9 169 3 213 3 214 3 174 4 40 8 295 7 175 3 
5 2 9 6 78 3 257 1 189 1 108 1 169 1 259 3 20 7 198 3 295 4 262 3 175 3 
45 1 90 1 1 1 46 1 5 1 6 4 48 1 271 4 9 4 144 1 233 1 108 1 189 2 20 18 56 1 198 1 67 2 207 1 206 4 314 1 118 1 257 1 78 3 79 1 259 10 169 3 213 2 214 2 174 4 40 8 262 1 295 8 175 1 
263 1 63 1 258 1 183 1 57 1 185 1 145 1 
263 1 63 1 32 1 183 1 269 1 185 1 34 1 303 1 145 1 258 1 57 1 215 1 
217 1 68 1 99 1 273 1 301 5 13 4 167 2 128 2 55 2 196 1 22 3 276 1 245 5 88 1 25 1 136 1 
217 1 68 1 99 1 273 1 301 5 13 4 123 1 167 2 128 2 55 2 196 1 22 3 276 1 245 5 88 1 136 1 
167 1 128 1 55 1 22 1 68 1 99 1 143 1 273 1 245 1 301 1 13 1 
63 2 220 1 266 1 183 1 273 1 301 1 145 1 13 1 235 1 167 1 128 1 191 1 322 1 55 1 57 2 22 1 41 1 245 1 
247 1 63 2 220 1 266 1 183 1 301 1 145 2 13 1 235 2 167 1 128 1 190 1 171 1 191 1 322 1 55 2 57 2 172 1 22 3 41 2 245 1 87 1 88 1 
247 1 63 2 220 1 266 1 183 1 301 2 165 1 145 2 13 2 235 2 167 1 128 1 190 1 171 1 191 1 55 2 57 2 172 1 22 3 41 2 245 2 87 1 88 1 310 1 
62 1 28 2 140 1 225 1 273 1 73 1 301 3 165 1 13 3 235 1 289 2 77 1 167 1 128 1 190 1 55 1 19 1 291 1 22 4 134 1 245 3 87 1 88 1 
28 2 140 1 225 1 273 1 73 1 301 3 165 1 13 3 235 1 289 2 77 1 167 1 128 1 190 1 17 1 55 1 291 1 22 4 134 1 245 3 87 1 88 1 
167 1 128 1 120 1 245 1 301 1 13 1 
217 1 281 1 285 1 49 1 7 1 70 1 120 1 273 2 301 7 13 6 235 1 148 1 167 2 128 3 170 1 55 2 22 3 276 1 245 7 136 1 25 1 
266 1 267 1 181 1 5 1 183 2 6 2 271 2 9 2 13 1 274 1 108 1 189 1 191 1 20 6 22 1 198 1 278 1 204 2 206 2 286 1 128 1 292 1 40 4 41 1 295 3 217 1 47 1 220 1 301 1 145 1 235 1 55 1 57 2 240 1 245 1 63 2 253 2 71 1 314 1 167 1 78 2 257 1 169 1 259 3 322 1 174 2 262 1 
140 1 224 2 141 1 270 1 225 1 273 1 301 1 13 1 17 1 22 2 113 1 245 1 156 1 28 3 66 1 282 1 254 1 73 1 75 1 209 1 124 2 289 3 76 2 77 1 81 2 291 1 39 1 134 2 
217 1 208 1 70 1 120 1 301 2 13 2 235 1 77 1 167 1 128 2 55 1 22 2 245 2 
167 1 217 1 128 1 55 1 196 1 22 1 68 1 99 1 273 1 245 4 301 4 165 1 13 4 
250 1 93 1 49 1 7 1 301 2 13 2 235 1 305 1 167 1 128 2 55 1 22 1 245 2 88 1 
321 1 167 1 128 1 138 1 84 1 293 1 273 1 245 1 301 1 13 1 
167 1 217 1 128 1 55 1 281 1 22 1 276 1 245 2 301 2 256 1 13 2 
63 2 220 1 266 1 183 1 273 1 301 1 145 1 13 1 235 1 167 1 128 1 191 1 55 1 57 2 22 1 41 1 245 1 310 1 
49 1 7 1 70 1 301 1 13 1 235 1 167 1 128 2 170 1 55 1 22 1 245 1 88 1 
91 1 192 1 239 1 183 1 44 1 
247 1 248 1 60 1 91 1 28 2 313 1 183 1 140 1 141 1 284 1 225 1 289 2 171 1 192 2 239 2 291 1 172 1 325 1 44 2 
63 1 91 1 29 1 145 1 192 1 261 1 57 1 111 1 44 1 
248 1 91 1 284 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 351 290 (152,163) (25,319) (25,319) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 351 290 (152,163) (25,319) (25,319) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 351 290 (152,163) (25,319) (25,319) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 351 290 (152,163) (25,319) (25,319) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 351 (7,69,98,210) 321 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 351 290 (152,163) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 351 290 (152,163) 55 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 351 290 (152,163) 55 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 43 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 118 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 241 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 3 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 226 357 246 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 226 357 246 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 226 357 246 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 226 357 246 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 226 357 246 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 50 82 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 74 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 70 (253,256) 206 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 300 286 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 351 (7,69,98,210) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 351 290 49 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 351 290 66 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 351 290 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | ASSIGN | 815 | = null
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 616 | return null
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
20 1 34 1 95 2 25 1 144 1 161 2 331 3 128 1 351 1 290 1 283 2 30 1 163 1 319 1 338 1 192 1 152 1 293 1 107 1 155 3 
20 1 34 1 95 2 25 1 144 1 161 2 331 3 128 1 351 1 290 1 283 2 30 1 163 1 319 1 338 1 192 1 152 1 293 1 107 1 155 3 
20 1 34 1 95 2 25 1 144 1 161 2 331 3 128 1 351 1 290 1 283 2 30 1 163 1 319 1 338 1 192 1 152 1 293 1 107 1 155 3 
20 1 34 1 95 2 25 1 144 1 161 2 331 3 128 1 351 1 290 1 283 2 30 1 163 1 319 1 338 1 192 1 152 1 293 1 107 1 155 3 
174 1 188 1 95 1 338 1 98 1 144 1 321 1 161 1 331 2 351 1 30 1 155 2 
34 1 95 1 144 1 161 1 110 1 331 2 128 1 283 1 248 1 47 1 338 1 339 1 354 1 192 1 293 1 155 2 
163 1 95 2 338 1 144 1 161 2 331 2 351 1 290 1 283 1 30 1 155 2 
174 1 163 1 95 2 55 1 338 1 144 1 161 2 331 3 351 1 290 1 283 1 30 1 69 1 155 3 
174 1 163 1 95 2 55 1 338 1 144 1 161 2 331 3 351 1 290 1 283 1 30 1 69 1 155 3 
96 1 332 1 74 1 
96 1 193 2 6 1 
337 1 14 2 271 2 190 2 272 2 147 2 26 2 148 1 
143 1 200 2 116 1 219 1 302 1 147 3 26 2 148 1 304 1 336 1 337 1 103 2 270 1 76 1 271 2 176 2 272 2 227 1 122 2 77 1 254 1 9 1 126 1 312 1 111 1 112 2 84 1 14 2 86 1 166 1 190 3 33 1 195 1 196 1 68 1 265 1 141 1 
14 1 279 1 271 1 190 1 272 1 64 1 90 1 147 1 26 1 148 1 
276 1 279 1 215 1 96 1 328 1 160 1 330 1 332 1 101 1 147 1 26 1 149 1 190 1 291 1 
276 1 279 1 215 2 96 1 328 1 160 1 332 1 147 1 26 1 149 1 14 1 271 1 190 1 291 2 272 1 
189 1 
189 1 
325 1 215 1 291 1 
189 1 
96 1 
189 1 
180 1 278 1 215 1 189 1 291 1 307 1 287 1 
337 1 74 1 
184 1 99 1 147 2 26 2 337 2 14 1 271 1 190 2 272 1 
216 1 340 1 218 1 
254 1 9 1 116 1 111 1 302 1 147 1 112 1 304 1 337 1 84 1 103 1 15 1 190 1 176 1 265 1 141 1 
254 1 9 1 116 1 218 1 111 1 302 1 147 2 112 1 304 1 26 1 84 1 103 1 237 1 271 1 190 2 176 1 272 1 265 1 141 1 19 1 
337 1 14 1 237 1 271 3 190 3 272 3 147 3 26 3 
279 1 271 1 190 1 272 1 64 1 147 1 26 1 
14 1 279 1 271 1 190 1 184 1 272 1 99 1 147 1 26 1 
200 2 215 1 116 1 328 1 219 1 302 1 147 4 304 1 26 3 148 1 336 1 102 1 337 1 149 1 103 1 76 1 271 3 176 1 291 1 272 3 122 1 77 1 179 1 276 1 254 1 9 1 279 1 160 1 184 1 312 1 111 1 112 1 84 1 14 2 237 1 86 1 166 1 33 1 190 4 195 1 196 1 265 1 141 1 19 1 
337 1 237 1 271 1 190 2 194 1 272 1 101 1 147 2 26 2 
276 1 279 1 215 1 96 1 328 1 184 1 160 1 349 1 147 3 26 3 102 1 149 1 14 1 237 2 271 3 190 3 291 1 272 3 19 1 
218 1 184 1 147 2 26 2 14 1 237 1 271 2 190 2 340 1 272 2 
254 1 9 1 116 1 111 1 302 1 147 1 112 1 304 1 337 1 84 1 103 1 190 1 176 1 265 1 141 1 
254 1 9 1 111 1 302 1 147 1 112 1 304 1 337 1 259 1 103 1 190 1 176 1 92 1 265 1 141 1 
200 2 216 2 217 1 218 2 245 1 219 1 27 1 270 2 76 1 222 1 150 1 340 2 5 1 122 4 77 1 312 1 127 1 132 1 86 2 166 1 207 1 167 1 168 1 196 1 
298 1 279 1 271 1 190 1 328 1 272 1 147 1 26 1 
59 1 184 1 314 1 101 1 147 5 26 5 337 1 14 1 237 2 271 4 190 5 194 1 272 4 19 1 
298 1 279 1 271 2 190 2 272 2 64 1 147 2 26 2 
57 1 303 1 
57 1 303 1 
263 1 105 1 
263 1 105 1 
263 1 105 1 
71 1 57 1 303 1 
24 1 263 1 57 2 105 1 303 2 308 1 
57 1 303 1 62 1 
57 1 303 1 62 1 
57 1 303 1 62 1 
57 1 303 1 28 1 
57 1 303 1 28 1 
57 1 303 1 28 1 
310 1 215 2 96 1 181 1 1 2 80 2 303 2 247 1 335 2 269 1 31 2 16 2 225 1 57 2 133 3 291 2 252 1 308 1 67 1 
169 1 71 1 199 1 215 1 1 1 303 1 147 2 26 2 335 1 337 1 271 2 57 1 291 1 272 2 274 1 45 1 80 1 81 1 233 1 31 1 190 2 133 1 50 1 67 1 
192 1 293 1 107 1 
192 1 110 1 293 1 
22 1 192 3 40 1 39 1 110 1 107 2 
35 1 22 1 192 2 40 1 110 1 107 1 
22 2 192 2 40 1 110 1 107 1 
43 1 189 1 
87 1 189 2 157 1 118 1 
169 1 53 1 288 1 215 1 267 1 291 1 307 1 229 1 231 2 180 1 278 1 127 1 350 1 129 1 13 1 164 1 189 2 207 1 287 1 242 1 
169 1 53 1 288 1 215 1 267 1 291 1 307 1 229 1 231 2 180 1 278 1 127 1 350 1 129 1 13 1 164 1 189 1 207 1 241 1 287 1 242 1 
9 1 258 1 74 1 
9 1 285 1 
261 1 
9 1 111 1 
9 3 111 1 258 2 61 1 140 1 141 1 
9 1 111 1 141 1 
9 1 343 1 
142 1 197 1 51 1 21 1 44 1 280 1 127 1 100 1 171 1 27 3 270 4 86 3 222 2 167 1 106 2 294 1 122 7 
142 1 197 1 51 1 21 1 44 1 280 1 127 1 100 1 171 1 27 3 270 4 86 3 222 2 167 1 106 2 294 1 122 7 
142 1 197 1 51 1 21 1 44 1 280 1 127 1 100 1 171 1 27 3 270 4 86 3 222 2 167 1 106 2 294 1 122 7 93 1 
51 1 197 1 142 2 211 3 300 1 198 1 21 2 200 2 244 1 217 3 219 1 171 2 100 5 27 10 268 1 270 16 76 1 222 5 56 1 106 3 294 2 122 31 44 1 280 1 79 4 312 1 127 4 235 1 86 15 207 3 167 4 358 1 196 1 242 3 
142 1 51 1 21 1 44 1 280 1 200 4 312 2 127 1 219 2 100 1 171 1 27 4 352 1 270 5 76 2 86 4 222 3 167 1 106 2 294 1 358 1 196 2 122 9 275 1 
214 1 95 1 72 1 266 1 144 1 117 1 331 2 302 1 304 1 174 1 103 1 338 1 339 1 176 1 342 1 39 1 293 1 107 1 155 2 124 1 161 1 110 1 112 1 283 1 130 1 131 1 318 1 354 1 192 2 355 1 
214 1 95 1 72 1 266 1 144 1 117 1 331 3 302 1 304 1 174 2 103 1 339 1 176 1 39 1 120 1 293 1 107 1 58 1 155 3 124 1 161 1 110 1 112 1 283 1 131 1 318 1 354 1 192 2 355 1 91 1 
214 1 144 1 117 1 331 2 302 1 304 1 174 2 103 1 339 1 176 1 120 1 39 1 107 1 293 1 155 2 124 1 110 1 283 1 112 1 131 1 318 1 354 1 192 2 355 1 91 1 
94 1 254 1 95 1 9 1 158 1 54 1 111 1 161 1 117 2 302 1 331 1 283 2 112 1 304 1 131 2 103 1 85 1 318 2 151 1 176 1 58 1 345 1 155 1 
214 1 95 1 72 1 266 1 117 1 331 1 302 1 304 1 103 1 338 1 176 1 342 1 120 1 39 1 293 1 107 1 155 1 124 1 161 1 110 1 112 1 283 1 131 1 318 1 192 2 355 1 
109 1 
94 1 325 2 326 1 288 1 215 3 328 1 329 1 330 1 302 1 3 1 101 1 147 1 173 2 26 1 304 1 149 1 75 1 103 2 176 2 224 1 291 3 307 1 345 1 203 1 231 1 276 1 254 2 180 1 278 1 279 1 9 1 160 1 111 1 83 1 186 1 112 2 13 1 63 1 48 1 316 1 190 1 
203 1 276 1 325 2 279 1 215 3 328 1 329 1 160 1 330 1 101 1 186 1 147 1 173 2 26 1 149 1 75 1 63 1 190 1 224 1 291 3 264 1 178 1 
325 1 215 3 96 1 328 1 329 1 330 1 332 1 101 1 147 1 26 1 173 3 75 1 149 1 224 1 291 3 203 1 276 1 279 1 160 1 281 1 186 1 63 1 190 1 264 1 
203 1 276 1 325 1 279 1 215 2 328 1 329 1 160 1 330 1 101 1 12 1 186 1 147 1 173 2 26 1 149 1 75 1 63 1 190 1 291 2 178 1 
0 2 215 5 73 1 173 4 75 1 271 1 224 3 305 1 272 1 6 2 178 4 307 1 230 1 231 1 276 1 277 1 278 1 180 1 279 2 281 2 11 1 12 4 186 1 13 1 14 1 190 2 90 1 325 7 326 1 96 1 328 1 329 1 330 1 332 1 101 1 147 2 148 1 26 2 149 1 104 2 249 2 291 5 344 1 156 1 203 1 160 1 63 1 260 2 264 1 64 1 209 1 
0 2 215 3 73 1 173 3 75 1 271 1 224 1 272 1 6 2 307 1 178 1 230 1 231 1 276 1 278 1 180 1 279 2 281 1 186 1 13 1 12 1 14 1 190 2 193 2 17 1 90 1 325 2 326 1 96 3 328 1 329 1 330 1 332 1 101 1 147 2 148 1 26 2 149 1 104 2 249 1 291 3 156 1 203 1 160 1 63 1 260 2 64 1 
0 2 215 4 73 1 173 4 75 1 271 1 224 2 272 1 6 2 307 1 178 2 230 1 231 1 276 1 277 1 180 1 278 1 279 2 281 2 11 1 186 1 13 1 12 2 14 1 190 2 90 1 325 4 326 1 96 1 328 1 329 1 330 1 332 1 101 1 147 2 148 1 26 2 149 1 104 2 249 2 291 4 344 1 156 1 203 1 160 1 63 1 260 2 64 1 
0 2 215 4 73 1 173 4 75 1 271 1 224 2 272 1 6 2 307 1 178 2 230 1 231 1 276 1 277 1 180 1 278 1 279 2 281 2 11 1 186 1 13 1 12 2 14 1 190 2 90 1 325 4 326 1 96 1 328 1 329 1 330 1 332 1 101 1 147 2 148 1 26 2 149 1 104 2 249 2 291 4 344 1 156 1 203 1 160 1 63 1 260 2 64 1 
0 2 215 4 73 1 173 4 4 2 75 1 271 1 224 2 272 1 42 1 307 1 178 2 230 1 231 1 276 1 277 1 180 1 278 1 279 2 232 2 281 2 186 1 13 1 12 2 14 1 320 1 190 2 193 2 90 1 325 4 326 1 96 1 328 1 329 1 330 1 332 1 101 1 147 2 148 1 26 2 149 1 104 2 291 4 154 1 203 1 160 1 63 1 64 1 
0 2 215 4 73 1 173 4 75 1 271 1 224 2 272 1 6 2 178 3 307 1 230 1 231 1 276 1 277 1 278 1 180 1 279 2 281 2 11 1 12 3 186 1 13 1 14 1 190 2 90 1 325 5 326 1 96 1 328 1 329 1 330 1 332 1 101 1 147 2 148 1 26 2 149 1 104 2 249 2 291 4 344 1 156 1 203 1 160 1 63 1 260 2 64 1 209 1 
0 2 215 4 73 1 173 4 75 1 271 1 224 2 272 1 6 2 178 3 307 1 230 1 231 1 276 1 277 1 278 1 180 1 279 2 281 2 11 1 12 3 186 1 13 1 14 1 190 2 90 1 325 5 326 1 96 1 328 1 329 1 330 1 332 1 101 1 147 2 148 1 26 2 149 1 104 2 249 2 291 4 344 1 156 1 203 1 160 1 63 1 260 2 64 1 209 1 
0 2 215 4 73 1 173 3 4 2 75 1 271 1 224 2 272 1 42 1 307 1 178 2 230 1 231 1 276 1 278 1 180 1 279 2 232 2 281 1 186 1 13 1 12 2 14 1 190 2 193 2 17 1 90 1 325 4 326 1 96 1 328 1 329 1 330 1 332 1 101 1 147 2 148 1 26 2 149 1 104 2 291 4 203 1 160 1 63 1 64 1 
142 1 51 1 44 1 200 2 280 1 216 1 218 1 312 1 127 1 219 1 74 1 27 2 337 2 270 3 76 1 86 3 222 2 166 1 340 1 167 1 106 1 168 1 294 1 196 1 122 6 77 1 
300 1 143 1 211 3 200 4 216 11 218 11 217 1 219 2 100 1 2 1 201 1 336 1 27 2 337 1 268 1 270 8 76 2 222 1 340 4 122 14 77 2 79 3 312 2 296 1 127 2 86 6 166 1 207 2 135 1 167 1 114 1 196 2 242 2 
143 1 200 2 116 1 327 1 302 1 219 1 2 1 147 2 304 1 26 1 336 1 337 1 103 1 270 1 76 1 271 1 176 1 340 1 272 1 306 1 122 2 77 1 254 1 9 1 78 1 312 1 111 1 112 1 84 1 15 1 237 1 86 1 166 1 190 2 196 1 265 1 141 1 19 1 
213 2 301 2 116 2 216 7 218 7 217 2 219 3 302 2 2 1 304 2 270 10 76 3 271 1 222 4 176 3 120 1 272 1 122 20 77 3 309 1 44 1 9 2 280 1 312 3 127 3 46 1 84 2 237 1 86 10 190 3 136 1 196 3 242 2 19 1 141 2 142 1 51 1 143 1 200 6 100 4 147 3 26 1 336 1 27 8 337 2 103 3 340 7 106 1 294 1 254 1 111 2 112 3 256 2 166 3 33 2 262 2 207 2 167 3 265 2 
143 1 94 1 23 1 200 4 302 2 219 2 220 1 147 1 26 1 304 2 336 1 103 7 270 1 76 2 271 1 176 8 120 1 272 1 122 2 345 1 77 2 254 2 9 3 29 1 205 1 312 2 111 2 112 8 130 1 237 1 238 1 86 1 190 1 166 2 134 1 239 1 168 1 196 2 68 2 
200 2 216 1 218 1 217 1 219 1 2 1 147 1 26 1 27 1 119 1 270 1 76 1 271 1 222 1 340 1 272 1 122 3 77 1 184 1 312 1 127 1 14 1 86 2 166 1 190 1 207 1 167 1 196 1 242 1 
200 2 216 1 218 1 312 1 127 1 219 1 100 1 27 1 270 2 76 1 166 1 150 1 340 1 207 1 168 1 196 1 122 2 77 1 
200 2 216 1 218 1 217 1 312 1 219 1 27 1 132 1 76 1 86 2 222 1 166 1 340 1 167 1 168 1 196 1 122 2 77 1 
200 2 216 2 218 2 217 1 219 1 100 1 27 2 270 2 76 1 222 1 340 2 122 4 77 1 312 1 127 1 86 2 166 1 207 1 167 1 168 1 196 1 242 1 
200 2 216 1 218 1 312 1 127 1 219 1 100 1 27 1 270 2 76 1 238 1 166 1 150 1 340 1 207 1 196 1 122 2 77 1 
200 2 216 1 218 1 217 1 312 1 219 1 27 1 132 1 76 1 238 1 86 2 222 1 166 1 340 1 167 1 196 1 122 2 77 1 
200 2 216 2 218 2 217 1 219 1 100 1 27 2 270 2 76 1 222 1 340 2 122 4 77 1 312 1 127 1 238 1 86 2 166 1 207 1 167 1 196 1 242 1 
200 2 216 2 217 1 218 2 312 1 127 1 219 1 100 1 27 2 270 2 76 1 86 2 222 1 166 1 340 2 207 1 167 1 196 1 242 1 122 4 77 1 
143 1 200 2 116 1 302 1 219 1 147 1 304 1 336 1 337 1 103 1 270 1 76 1 176 1 122 2 77 1 254 1 9 1 312 1 111 1 112 1 84 1 86 1 33 1 190 1 166 1 196 1 265 1 141 1 
143 1 200 2 302 1 219 1 147 1 304 1 336 1 337 1 103 1 270 1 76 1 176 1 228 1 122 2 77 1 254 1 9 1 312 1 111 1 112 1 259 1 86 1 190 1 166 1 196 1 92 1 265 1 141 1 
200 2 216 2 218 2 217 1 219 1 2 1 100 1 27 2 270 2 76 1 222 1 340 2 122 4 77 1 312 1 127 1 86 2 166 1 207 1 167 1 196 1 242 1 
213 1 200 2 216 2 116 1 217 1 218 2 302 1 219 1 100 1 147 1 304 1 27 2 103 1 270 2 76 1 222 1 340 2 176 1 122 4 77 1 9 1 312 1 127 1 111 1 112 1 130 1 84 1 86 2 33 1 190 1 166 1 207 1 167 1 196 1 265 1 242 1 141 1 
200 2 216 1 217 1 218 1 219 1 100 1 2 1 147 1 26 1 27 1 270 2 76 1 271 1 340 1 272 1 122 3 77 1 184 1 312 1 127 1 14 1 284 1 86 1 166 1 190 1 207 1 167 1 196 1 242 1 
76 1 200 2 312 1 226 1 357 1 219 1 246 1 196 1 234 1 352 1 
76 1 200 2 312 1 226 1 357 1 219 1 246 1 196 1 234 1 352 1 
76 1 200 2 312 1 226 1 357 1 219 1 246 1 196 1 234 1 352 1 
76 1 200 2 312 1 226 1 357 1 219 1 246 1 196 1 234 1 352 1 
76 1 200 2 312 1 226 1 357 1 219 1 246 1 196 1 234 1 352 1 
52 1 310 1 31 1 1 1 57 1 80 1 303 1 308 1 247 1 335 1 
71 1 233 1 
236 1 31 1 36 1 1 1 57 1 80 1 89 1 303 1 335 1 
310 1 215 1 96 1 181 1 1 1 80 1 303 1 247 1 335 1 31 1 16 1 225 1 57 1 133 2 291 1 252 1 308 1 67 1 
310 1 215 1 96 1 181 1 1 1 80 1 303 1 247 1 335 1 31 1 16 1 225 1 57 1 133 2 291 1 252 1 308 1 67 1 
310 1 215 1 96 1 181 1 1 1 80 1 303 1 247 1 335 1 31 1 16 1 225 1 57 1 133 2 291 1 252 1 308 1 67 1 
353 1 24 1 62 1 
353 1 24 1 62 1 
250 1 28 1 
24 1 250 1 28 1 
199 1 45 1 
31 1 16 1 181 1 189 1 133 1 1 1 57 1 80 1 50 1 82 1 303 1 335 1 
353 1 62 1 
24 1 250 1 28 1 
143 1 212 1 200 2 97 1 302 1 219 1 2 1 220 1 147 2 304 1 26 2 336 1 103 2 270 1 76 1 176 2 122 2 77 1 204 1 9 1 312 1 111 1 112 2 297 1 86 1 166 1 191 1 190 2 134 1 196 1 68 2 
72 1 124 1 110 1 302 1 315 1 112 2 146 1 304 1 130 1 103 2 131 1 192 2 176 2 355 1 39 1 120 1 293 1 107 1 323 1 
72 1 124 1 110 1 302 1 315 1 282 1 112 1 304 1 103 1 131 1 192 2 176 1 355 1 39 1 120 1 293 1 107 1 
254 1 94 1 9 1 111 1 302 1 112 1 304 1 103 1 131 1 151 1 176 1 121 1 323 1 345 1 
72 1 124 1 110 1 302 1 315 1 112 1 146 1 304 1 103 1 131 1 192 2 176 1 355 1 39 1 120 1 293 1 107 1 323 1 
153 1 
251 1 177 1 74 1 
231 1 260 1 180 1 278 1 326 1 307 1 13 1 156 1 
254 1 278 1 180 1 288 1 9 2 326 1 111 1 302 1 13 1 112 1 304 2 61 1 103 1 206 1 176 1 285 1 307 1 253 1 139 1 70 1 141 1 
231 1 211 1 300 1 180 1 278 1 326 1 79 1 286 1 307 1 13 1 
142 1 170 2 326 1 215 1 73 1 147 1 148 1 26 1 271 1 291 1 272 1 202 1 294 1 307 1 231 2 180 1 278 1 44 1 279 1 11 1 127 2 13 2 14 1 190 1 167 1 64 1 90 1 137 1 
180 1 278 1 326 1 251 1 307 1 
231 2 164 1 207 1 127 1 350 1 242 1 
103 1 254 1 176 1 112 1 
231 1 180 1 278 1 288 1 326 1 83 1 307 1 13 1 
310 1 45 1 1 1 80 1 289 1 
317 1 1 1 80 1 
317 1 1 1 80 1 
317 1 1 1 80 1 
123 1 1 1 80 1 
123 1 1 1 80 1 
123 1 1 1 80 1 
1 1 80 1 
57 1 303 1 
51 1 142 1 44 1 200 4 280 1 312 2 127 1 219 2 100 1 27 3 270 4 76 2 86 4 222 2 167 1 106 1 358 1 294 1 196 2 122 8 
51 1 142 1 44 1 280 1 127 1 74 1 27 2 270 3 86 3 222 2 167 1 106 1 294 1 122 6 
200 2 217 1 312 1 127 1 219 1 100 1 185 1 27 2 270 2 76 1 86 2 222 1 207 1 167 1 196 1 242 1 122 4 
300 1 211 1 79 2 217 1 127 1 100 1 27 2 268 1 270 3 86 4 222 1 207 1 167 1 122 7 242 1 
142 2 51 1 211 2 200 4 217 2 219 2 100 4 201 1 27 9 268 1 270 11 76 2 222 5 106 1 294 2 122 23 44 1 280 1 79 2 312 2 127 3 162 1 86 12 207 2 135 1 167 3 358 2 196 2 242 2 
86 1 79 1 122 1 
211 1 270 1 122 1 
301 1 200 2 217 1 312 1 127 1 219 1 100 1 185 1 27 3 270 3 76 1 86 3 222 2 207 1 167 1 196 1 122 6 242 1 
211 1 300 1 200 2 217 2 145 1 219 1 100 1 27 2 270 6 76 1 222 1 175 1 122 12 79 1 125 1 312 1 127 2 352 1 86 6 207 2 167 2 286 1 196 1 138 1 242 2 
142 1 44 1 127 1 100 1 27 2 270 3 86 3 222 1 167 1 294 1 122 6 
142 1 51 1 280 1 200 2 312 1 219 1 100 1 162 1 27 2 270 1 76 1 86 2 222 1 294 1 358 1 196 1 122 3 
142 2 44 1 200 2 312 1 127 2 219 1 100 2 352 1 27 5 270 5 76 1 86 5 222 3 167 2 294 2 196 1 137 1 122 10 
200 2 312 1 127 1 219 1 100 1 352 1 27 1 270 2 76 1 207 1 196 1 122 2 
200 2 217 1 312 1 127 1 219 1 100 1 27 2 352 1 270 2 76 1 86 2 222 1 207 1 167 1 196 1 242 1 122 4 
142 1 200 6 312 3 219 3 100 1 162 1 352 1 27 2 270 1 76 3 86 2 222 1 65 1 358 1 294 1 196 3 122 3 
142 3 51 1 300 1 211 3 198 1 200 10 217 3 219 5 100 5 27 12 268 1 270 16 76 5 222 7 56 1 106 1 294 3 122 34 44 2 280 1 79 4 312 5 127 5 185 1 162 1 352 1 235 1 86 18 207 3 167 5 65 1 358 2 196 5 242 3 
142 1 51 1 300 1 211 1 44 1 280 1 200 2 79 1 312 1 127 1 219 1 27 2 352 1 270 4 76 1 86 4 222 2 167 1 286 1 106 1 294 1 196 1 122 8 
142 1 51 1 300 1 211 1 200 4 219 2 100 1 27 3 268 1 270 6 76 2 222 2 106 1 294 1 122 11 44 1 280 1 79 2 312 2 127 2 185 1 352 1 86 5 207 1 167 1 286 1 196 2 242 1 
142 1 51 1 211 1 300 1 200 6 217 2 145 1 219 3 100 1 27 4 270 9 76 3 222 3 175 1 106 1 294 1 122 19 44 1 280 1 79 1 125 1 312 3 127 3 185 1 352 1 86 10 207 2 167 3 286 1 358 1 196 3 138 1 242 2 
142 1 51 1 211 1 300 1 200 6 217 1 145 1 219 3 100 2 27 5 270 10 76 3 222 3 175 1 106 1 294 1 122 17 44 1 280 1 79 1 125 1 312 3 127 3 185 1 352 1 86 7 207 2 167 2 286 1 358 1 196 3 138 1 242 2 
142 1 51 1 300 1 211 1 44 1 280 1 200 2 79 1 312 1 127 1 219 1 27 2 352 1 270 4 76 1 86 4 222 2 167 1 286 1 106 1 294 1 196 1 122 8 
211 1 300 1 200 2 217 2 145 1 219 1 100 1 27 2 270 6 76 1 222 1 175 1 122 12 79 1 125 1 312 1 127 2 352 1 86 6 207 2 167 2 286 1 196 1 138 1 242 2 
142 1 51 1 300 1 211 1 200 8 217 1 145 1 219 4 100 2 27 5 270 10 76 4 222 3 175 1 106 1 294 1 122 18 44 1 280 1 79 1 125 1 312 4 127 3 185 1 352 1 86 8 207 2 167 2 286 1 358 2 196 4 138 1 242 2 
300 1 211 1 200 8 217 2 145 1 219 4 100 3 27 6 270 9 76 4 222 3 175 1 122 16 79 1 125 1 312 4 127 3 352 1 86 7 207 3 167 2 286 1 65 1 358 2 196 4 138 1 242 3 
51 1 142 3 44 1 280 2 127 1 100 3 27 6 270 3 86 4 222 3 167 1 294 3 122 7 
142 1 51 1 300 1 211 1 200 8 217 1 145 1 219 4 100 1 27 4 270 10 76 4 222 3 175 1 106 1 294 1 122 18 44 1 280 1 79 1 125 1 312 4 127 3 352 1 86 8 207 2 167 2 286 1 65 1 358 2 196 4 138 1 242 2 
337 1 243 1 190 1 194 1 101 1 147 1 26 1 
324 1 243 1 348 1 255 1 101 1 147 1 26 1 337 1 190 1 88 1 41 1 194 1 
94 1 103 1 254 1 9 1 176 1 111 1 302 1 112 1 304 1 345 1 74 1 
254 1 9 1 116 1 111 1 302 1 147 2 112 1 304 1 26 1 337 1 103 1 237 1 271 1 190 2 176 1 272 1 265 1 141 1 
276 1 279 1 9 3 116 1 328 1 159 1 111 2 302 1 147 2 112 1 304 1 26 2 337 1 103 1 237 1 38 1 271 1 190 2 176 1 343 1 272 2 265 1 141 2 
328 1 302 1 147 2 26 2 304 1 337 1 103 2 271 1 38 1 176 2 272 2 343 1 276 1 9 3 279 1 159 1 111 2 112 2 259 1 237 1 190 2 356 1 265 1 141 2 
325 1 215 2 96 1 302 1 332 1 304 1 149 1 103 3 38 1 176 3 291 2 343 1 273 1 254 1 9 4 347 1 159 1 111 1 112 3 258 1 356 1 285 1 141 1 
254 1 325 1 9 4 215 2 96 1 159 1 111 1 332 1 302 1 112 3 172 1 304 1 258 1 149 1 103 3 38 1 176 3 356 1 291 2 343 1 285 1 141 1 
103 1 29 1 176 1 302 1 112 1 304 1 
346 1 254 2 9 3 23 1 29 1 205 1 111 2 302 2 112 7 130 1 334 1 61 1 304 3 103 6 176 7 134 1 120 1 239 1 68 1 18 1 141 1 
213 1 116 1 216 1 218 1 219 2 302 1 2 1 304 1 270 3 76 2 271 1 222 2 176 1 272 1 122 6 77 2 44 1 9 1 280 1 312 2 127 1 130 1 84 1 237 1 86 3 190 2 196 2 141 1 51 1 142 1 200 4 97 1 147 2 26 1 27 2 337 2 103 1 340 1 106 1 294 1 111 1 256 1 112 1 33 1 166 2 167 1 265 1 
189 1 
9 2 29 1 111 1 302 1 112 2 130 1 258 1 61 1 304 2 103 2 176 2 139 1 141 1 
254 1 94 1 9 1 111 1 302 1 112 4 304 1 130 1 103 4 176 4 341 1 356 1 345 1 
346 1 309 1 9 1 159 1 111 1 302 1 112 2 304 2 103 2 299 1 176 2 292 1 18 1 141 1 
103 1 254 1 192 1 176 1 355 1 110 1 302 1 293 1 112 1 304 1 
212 1 9 1 111 1 302 1 112 2 130 1 304 1 103 2 176 2 134 1 120 1 
94 1 254 1 9 3 159 1 205 1 111 2 302 2 112 5 130 1 304 2 103 4 176 5 341 1 134 1 239 1 345 1 
94 1 254 1 295 1 9 3 159 1 111 2 302 2 112 5 130 1 304 2 103 4 176 5 341 1 134 1 239 1 345 1 
254 1 9 1 111 1 302 1 147 2 112 1 304 1 26 1 337 1 259 1 103 1 237 1 271 1 190 2 176 1 272 1 265 1 141 1 
346 1 9 1 159 1 111 1 302 1 112 1 334 1 61 1 304 2 103 1 176 1 18 1 141 1 
204 1 113 1 190 1 191 1 311 1 147 1 26 1 297 1 187 1 
113 1 60 1 257 1 
337 1 113 1 311 1 333 1 187 1 
215 1 328 1 73 1 333 1 147 1 26 1 148 1 102 1 149 1 271 1 291 1 272 1 276 1 279 2 160 1 311 1 10 1 60 1 257 1 187 1 14 1 113 1 190 1 189 1 64 1 90 1 
339 1 354 1 144 1 74 1 
95 1 339 1 354 1 144 1 161 1 331 1 155 1 
318 1 283 1 155 1 
95 1 182 1 144 1 161 1 331 3 313 1 128 2 37 1 338 1 339 1 354 1 155 3 
95 1 144 1 161 1 331 2 30 1 188 1 174 1 339 1 354 1 155 2 
95 1 338 1 98 1 144 1 161 1 331 1 351 1 30 1 155 1 
95 1 338 1 339 1 144 1 161 1 331 1 155 1 
95 1 338 1 339 2 354 1 161 1 331 1 155 1 
8 1 95 2 144 1 161 2 331 2 165 1 338 1 339 1 322 1 155 2 
174 1 95 1 49 1 338 1 32 1 144 1 161 1 331 2 351 1 290 1 30 1 155 2 
95 1 144 1 110 1 161 1 331 2 174 1 338 1 339 1 354 1 192 2 39 1 240 1 107 1 293 1 155 2 
174 1 188 1 95 1 338 1 144 1 161 1 331 2 351 1 66 1 290 1 30 1 155 2 
95 1 338 1 339 1 354 1 144 1 161 1 331 1 155 1 
174 1 95 1 144 1 161 1 331 2 351 1 290 1 30 2 155 2 
174 1 95 1 338 1 339 1 354 1 144 1 161 1 331 2 7 1 210 1 69 1 155 2 
95 1 144 1 161 1 313 1 331 3 128 2 37 2 338 1 339 1 354 1 115 1 155 3 
221 1 223 1 144 2 208 2 
95 1 338 1 161 1 331 1 108 1 155 1 
174 1 95 1 338 1 339 1 32 1 354 1 144 1 161 1 331 2 155 2 
183 1 
95 1 338 1 339 1 354 1 144 1 161 1 331 1 155 1 
174 1 95 1 338 1 32 1 339 1 354 1 144 1 161 1 331 3 128 1 155 3 
174 1 144 1 331 1 351 1 290 1 155 1 
339 1 144 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 7 (124,176) (124,176) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 7 (124,176) (124,176) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 7 (124,176) (124,176) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 7 (124,176) (124,176) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (168,194,280) (168,194,280) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (168,194,280) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (168,194,280) 163 20 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (168,194,280) 163 220 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (168,194,280) (168,194,280) 221 211 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (168,194,280) (168,194,280) 221 211 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (168,194,280) (168,194,280) 221 211 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (168,194,280) (168,194,280) 221 211 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (168,194,280) (168,194,280) 221 211 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (168,194,280) (168,194,280) 221 211 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (168,194,280) (168,194,280) 221 211 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (168,194,280) (168,194,280) 221 211 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (168,194,280) (168,194,280) 221 211 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (168,194,280) (168,194,280) 221 211 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (168,194,280) (168,194,280) 221 211 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (168,194,280) (168,194,280) 221 211 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 116 304 37 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 116 304 37 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 116 304 37 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 116 304 37 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 116 304 37 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 148 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 151 39 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (168,194,280) 163 8 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
96 1 97 1 143 1 67 1 176 1 156 1 265 1 266 1 129 1 335 1 7 1 205 1 271 1 36 2 124 1 284 2 
96 1 97 1 143 1 67 1 176 1 156 1 265 1 129 1 266 1 335 1 7 1 205 1 271 1 36 2 124 1 284 2 
96 1 97 1 143 1 67 1 176 1 156 1 265 1 129 1 266 1 335 1 7 1 205 1 271 1 36 2 124 1 284 2 
96 1 97 1 143 1 67 1 176 1 156 1 265 1 129 1 266 1 335 1 7 1 205 1 271 1 36 2 124 1 284 2 
95 3 143 1 67 1 127 1 129 1 266 1 300 1 111 1 180 2 113 1 7 1 205 1 98 3 271 1 36 4 284 4 104 1 225 2 
95 1 97 1 67 1 170 1 143 1 265 1 70 1 127 1 129 1 300 1 335 1 205 1 271 1 36 2 284 2 320 1 
95 2 67 1 127 1 129 2 300 1 335 1 180 1 131 1 113 1 98 1 271 2 36 3 284 3 
127 1 129 2 266 1 111 1 335 1 131 1 113 3 7 1 36 9 271 2 64 1 274 1 95 5 67 1 143 1 300 1 180 4 121 1 98 7 205 1 284 9 82 1 225 2 104 1 
127 1 129 2 266 1 111 1 335 1 131 1 113 3 7 1 36 9 271 2 64 1 274 1 95 5 67 1 143 1 300 1 180 4 121 1 98 7 205 1 284 9 82 1 225 2 104 1 
323 1 83 1 179 1 
83 1 23 1 230 2 
322 2 174 2 142 1 312 2 29 2 277 2 231 1 327 2 
307 1 53 1 263 1 310 1 153 1 312 2 2 1 29 2 86 2 157 1 229 1 317 1 231 1 138 1 91 1 93 1 322 3 218 2 296 1 118 2 174 3 142 1 275 1 40 1 41 1 277 2 43 1 327 2 329 1 147 2 73 1 282 2 238 1 331 1 48 1 24 1 81 1 
322 1 237 1 174 1 142 1 312 1 302 1 29 1 177 1 277 1 327 1 
322 1 174 1 194 1 168 1 29 1 69 1 
322 1 174 1 312 1 168 1 29 1 277 1 327 1 
188 1 309 1 207 1 141 1 280 1 
117 1 254 1 188 2 309 1 83 1 179 1 141 1 280 2 
188 1 141 1 280 1 
322 1 188 1 142 1 174 1 309 1 56 1 312 1 29 1 177 1 277 1 327 1 280 1 237 1 302 1 
83 1 
117 1 188 2 309 1 83 1 179 1 141 1 234 1 280 2 
117 1 188 5 219 2 13 1 309 2 66 1 83 1 210 1 313 1 179 1 145 1 280 5 71 2 33 1 193 1 137 1 141 2 273 2 295 1 
323 1 231 1 
322 2 174 2 312 1 29 2 277 1 327 1 342 1 186 1 231 2 
3 1 101 1 187 1 
322 1 218 1 53 1 174 1 40 1 41 1 153 1 86 1 157 1 43 1 329 1 260 1 147 1 231 1 91 1 81 1 
322 5 174 5 175 2 312 1 29 5 69 1 277 4 327 4 236 1 316 1 74 1 63 1 186 1 231 1 
322 2 237 1 174 2 29 2 177 1 277 2 79 1 327 2 
322 2 218 1 53 1 40 1 174 2 41 1 153 1 175 1 157 1 29 1 86 1 277 1 43 1 327 1 316 1 329 1 147 1 91 1 187 1 81 1 
322 3 174 3 312 1 175 1 29 3 277 3 231 1 327 3 
322 1 237 1 174 1 29 1 177 1 277 1 327 1 
322 1 174 1 312 1 29 1 177 1 342 1 277 1 186 1 327 1 
322 2 316 1 20 1 174 2 312 1 175 1 168 1 29 2 277 2 163 1 186 1 327 2 
322 2 174 2 74 1 175 1 29 2 69 1 277 1 231 1 327 1 
322 1 316 1 174 1 175 1 168 1 29 1 277 1 220 1 163 1 327 1 
322 2 174 2 175 1 312 1 29 2 3 1 277 2 327 2 186 1 187 1 
322 1 218 1 53 1 174 1 40 1 41 1 153 1 86 1 157 1 43 1 329 1 147 1 231 1 91 1 81 1 
322 1 218 1 174 1 40 1 41 1 153 1 86 1 157 1 43 1 328 1 329 1 147 1 231 1 81 1 261 1 
307 1 226 1 310 2 2 1 3 2 229 1 6 1 293 1 199 1 296 1 118 2 202 1 298 1 281 1 100 1 73 1 303 1 282 4 239 1 331 1 101 2 50 1 24 2 187 2 
322 1 174 1 29 1 177 1 162 1 277 1 79 1 327 1 
339 1 77 1 
339 1 77 1 
85 1 87 1 
85 1 87 1 
85 1 87 1 
339 1 154 1 77 1 
46 1 339 2 85 1 77 2 87 1 212 1 
339 1 77 1 171 1 
339 1 77 1 171 1 
339 1 77 1 171 1 
339 1 77 1 136 1 
339 1 77 1 136 1 
339 1 77 1 136 1 
26 1 308 1 188 1 169 1 244 1 108 1 106 1 154 1 125 1 29 2 339 1 231 1 322 2 15 1 174 2 200 1 277 2 327 2 326 1 204 1 280 1 146 1 77 1 352 1 
52 1 188 2 169 2 15 3 198 1 152 2 83 1 200 1 345 1 125 2 326 2 349 1 280 2 46 1 339 2 214 1 88 1 77 2 352 2 
205 1 143 1 266 1 
205 1 143 1 170 1 
167 1 216 1 143 3 170 1 266 2 51 1 
167 1 216 1 143 2 170 1 49 1 266 1 
167 1 216 2 143 2 170 1 266 1 
308 1 188 5 244 1 333 1 106 1 309 4 228 2 83 2 210 1 6 1 230 3 141 1 273 1 117 1 10 1 324 1 219 1 119 2 297 1 66 3 179 1 145 2 71 1 280 5 72 2 303 1 22 1 239 1 76 1 23 1 50 1 185 1 
308 4 188 9 245 1 309 7 83 5 210 1 6 3 248 1 61 5 137 1 230 9 141 6 294 1 273 2 117 1 10 1 324 3 219 2 119 6 65 1 66 8 178 1 179 1 145 6 280 9 71 2 72 6 207 5 303 3 239 3 76 2 102 1 23 3 50 3 185 2 
308 1 188 3 309 2 83 3 228 1 6 1 137 1 230 4 273 1 324 1 219 1 119 2 297 1 66 3 179 1 145 2 71 1 280 3 72 2 303 1 22 1 76 1 239 1 23 2 185 1 50 1 
308 2 188 4 309 3 83 4 228 2 6 2 248 1 230 7 137 1 273 1 324 2 219 1 119 4 297 1 66 5 178 1 179 1 145 4 71 1 280 4 72 4 303 2 22 1 76 1 239 2 23 3 102 1 185 1 50 2 
99 1 323 1 43 1 
283 1 43 1 
262 1 
41 1 153 1 43 1 
289 1 43 1 
41 1 43 1 
99 2 34 1 41 1 153 1 75 1 43 3 
151 1 310 1 189 1 202 2 267 1 348 1 281 3 338 2 32 1 21 1 282 4 305 1 50 1 24 3 25 1 252 1 
151 1 310 1 189 1 202 2 267 1 348 1 281 3 338 2 32 1 21 1 282 4 305 1 50 1 24 3 25 1 252 1 
151 1 310 1 189 1 161 1 202 2 267 1 348 1 281 3 338 2 32 1 21 1 282 4 305 1 50 1 24 3 25 1 252 1 
151 1 310 13 189 2 2 1 267 1 229 1 6 3 31 1 32 1 338 3 172 1 92 4 252 1 159 1 232 1 324 3 296 1 118 2 144 3 202 5 120 1 348 2 281 10 73 1 282 28 21 2 303 3 47 1 239 3 240 1 305 5 50 4 24 15 25 2 
151 1 118 4 296 2 310 2 189 1 2 2 202 3 267 1 229 2 120 1 348 1 281 4 350 1 32 1 338 2 73 2 21 1 282 6 305 1 209 1 50 1 24 4 25 1 
27 1 243 1 57 1 170 1 86 1 58 1 127 1 266 1 129 1 335 1 132 1 288 1 36 2 271 1 62 1 95 1 218 1 40 1 17 1 67 1 143 2 300 1 164 1 98 1 205 1 147 1 222 1 284 2 81 1 51 1 
243 1 57 1 170 1 86 1 58 1 127 1 266 1 129 1 336 1 335 1 132 1 288 1 36 3 271 1 62 1 253 1 95 1 218 1 40 1 143 2 300 1 257 1 164 1 205 1 98 2 147 1 222 1 284 3 81 1 51 1 
57 1 170 1 86 1 58 1 127 1 266 1 335 1 336 1 132 1 288 1 36 2 62 1 253 1 95 1 218 1 40 1 143 2 300 1 98 2 205 1 147 1 222 1 284 2 81 1 51 1 
55 1 86 1 129 1 4 1 335 2 132 2 269 1 36 1 271 1 62 2 115 1 218 1 40 1 41 1 256 1 257 1 43 1 329 1 147 1 330 1 222 2 284 1 81 1 
243 1 57 1 170 1 86 1 58 1 266 1 129 1 336 1 335 1 132 1 288 1 36 1 271 1 62 1 218 1 40 1 17 1 67 1 143 2 164 1 205 1 147 1 222 1 284 1 81 1 51 1 
319 1 
188 2 210 1 29 1 86 2 126 1 211 1 314 1 194 1 135 1 141 2 115 1 273 1 117 1 322 1 218 2 219 1 174 1 40 1 41 1 66 1 256 1 69 1 43 1 235 1 145 1 71 1 280 2 122 1 221 1 329 2 147 2 168 1 185 1 81 1 
322 1 221 1 188 1 174 1 194 1 135 1 168 1 29 1 69 1 211 1 235 1 280 1 
322 1 221 1 188 1 174 1 194 1 135 1 168 1 29 1 69 1 211 1 235 1 280 1 
322 1 221 1 188 1 174 1 194 1 135 1 168 1 29 1 69 1 211 1 235 1 280 1 
117 1 322 1 188 2 174 1 29 1 69 1 211 1 234 1 235 1 280 2 221 1 194 1 135 1 168 1 141 1 
322 1 188 1 219 1 174 1 210 1 29 1 69 1 211 1 235 1 280 1 71 1 221 1 194 1 135 1 168 1 273 1 
322 1 221 1 188 1 174 1 194 1 135 1 168 1 29 1 69 1 211 1 235 1 280 1 
322 1 221 1 188 1 174 1 194 1 135 1 168 1 29 1 69 1 211 1 235 1 280 1 
322 1 221 1 188 1 174 1 194 1 135 1 168 1 29 1 69 1 211 1 235 1 280 1 
322 1 221 1 188 1 174 1 194 1 135 1 168 1 29 1 69 1 211 1 235 1 280 1 
322 1 221 1 188 1 174 1 194 1 135 1 168 1 29 1 69 1 211 1 235 1 280 1 
322 1 188 1 219 1 174 1 210 1 29 1 69 1 211 1 235 1 280 1 71 1 221 1 194 1 135 1 168 1 273 1 
307 1 151 1 226 1 310 1 189 1 2 1 3 1 267 1 229 1 32 1 338 1 231 1 323 1 296 1 118 2 202 2 348 1 281 2 73 1 282 3 331 1 101 1 50 1 24 2 187 1 
307 2 263 1 310 6 2 2 3 4 229 2 6 1 213 1 317 1 231 1 92 3 324 2 160 1 296 2 118 4 144 3 202 1 281 2 73 2 282 14 303 1 47 1 239 2 351 1 331 1 101 11 305 1 240 1 50 2 241 1 223 1 187 11 24 8 
307 1 53 1 263 1 310 1 153 1 110 1 2 1 157 1 86 1 29 1 3 1 229 1 213 1 316 1 317 1 231 1 91 1 322 2 218 1 40 1 174 2 118 2 296 1 41 1 175 1 277 1 43 1 327 1 329 1 259 1 147 1 260 1 73 1 282 2 331 1 182 1 81 1 24 1 
307 1 322 1 218 1 296 1 118 2 174 1 175 1 2 1 86 1 29 1 277 1 229 1 327 1 316 1 213 1 329 1 147 1 73 1 331 1 272 1 
307 2 27 1 263 1 226 1 310 1 2 2 29 1 86 8 191 1 246 1 229 2 336 1 318 1 317 1 173 1 138 2 115 1 94 1 322 1 218 8 174 1 40 2 296 2 118 4 41 2 175 1 256 1 277 1 279 1 43 3 327 1 258 1 329 2 147 7 73 2 282 2 331 2 81 2 24 1 
307 1 310 2 312 1 28 1 2 1 29 1 3 1 229 1 6 1 213 1 322 1 324 1 296 1 118 2 174 1 202 1 277 1 327 1 281 1 73 1 282 3 303 1 239 1 101 1 331 1 50 1 186 1 187 1 24 1 
307 1 118 2 296 1 226 1 2 1 3 1 229 1 281 1 100 1 73 1 282 2 239 1 101 1 331 1 305 1 50 1 187 1 24 2 
307 1 118 2 296 1 226 1 310 2 2 1 202 1 3 1 229 1 6 1 281 1 73 1 282 2 303 1 101 1 331 1 293 1 187 1 
307 1 226 1 310 2 2 1 3 2 229 1 6 1 324 1 296 1 118 2 202 1 281 2 73 1 282 4 303 1 239 1 331 1 101 2 305 1 50 1 24 2 187 2 
307 1 118 2 296 1 2 1 3 1 246 1 229 1 281 1 100 1 73 1 282 2 239 1 101 1 331 1 305 1 50 1 187 1 24 2 
307 1 118 2 296 1 310 2 2 1 202 1 3 1 246 1 229 1 6 1 281 1 73 1 282 2 303 1 101 1 331 1 293 1 187 1 
307 1 310 2 2 1 3 2 246 1 229 1 6 1 324 1 296 1 118 2 202 1 281 2 73 1 282 4 303 1 239 1 331 1 101 2 305 1 50 1 24 2 187 2 
307 1 324 1 118 2 296 1 310 2 2 1 202 1 3 2 229 1 6 1 281 2 73 1 303 1 282 4 239 1 101 2 331 1 305 1 50 1 187 2 24 2 
307 1 53 1 263 1 310 1 153 1 2 1 157 1 86 1 229 1 317 1 231 1 91 1 322 1 218 1 40 1 275 1 174 1 118 2 296 1 41 1 43 1 329 1 147 1 73 1 282 2 331 1 24 1 81 1 
307 1 263 1 310 1 153 1 2 1 157 1 86 1 229 1 317 1 231 1 322 1 218 1 40 1 174 1 118 2 296 1 41 1 43 1 328 1 329 1 45 1 147 1 73 1 282 2 331 1 24 1 81 1 261 1 
307 1 310 2 2 1 3 2 229 1 6 1 213 1 324 1 296 1 118 2 202 1 281 2 73 1 282 4 303 1 239 1 331 1 101 2 305 1 50 1 24 2 187 2 
307 1 53 1 27 1 310 2 153 1 2 1 157 1 86 1 3 2 229 1 6 1 91 1 322 1 218 1 324 1 40 1 275 1 174 1 118 2 296 1 41 1 202 1 43 1 281 2 44 1 147 1 73 1 303 1 282 4 239 1 101 2 331 1 305 1 50 1 187 2 24 2 81 1 
307 1 286 1 310 1 312 1 2 1 29 1 3 1 229 1 6 1 213 1 322 1 324 1 296 1 118 2 174 1 277 1 327 1 281 1 73 1 303 1 282 3 239 1 331 1 101 1 305 1 50 1 186 1 24 2 187 1 
116 1 296 1 118 2 73 1 2 1 304 1 209 1 250 1 37 1 229 1 
116 1 296 1 118 2 73 1 2 1 304 1 209 1 250 1 37 1 229 1 
116 1 296 1 118 2 73 1 2 1 304 1 209 1 250 1 37 1 229 1 
116 1 296 1 118 2 73 1 2 1 304 1 209 1 250 1 37 1 229 1 
116 1 296 1 118 2 73 1 2 1 304 1 209 1 250 1 37 1 229 1 
268 1 52 1 169 1 46 1 339 1 88 1 125 1 77 1 352 1 326 1 
154 1 204 1 
165 1 169 1 339 1 125 1 77 1 352 1 203 1 326 1 224 1 
171 1 78 1 
334 1 136 1 212 1 
52 1 188 1 169 1 15 2 198 1 152 1 83 1 200 1 125 1 326 1 349 1 280 1 46 1 339 1 214 1 88 1 77 1 352 1 
52 1 188 1 169 1 15 2 198 1 152 1 83 1 200 1 125 1 326 1 349 1 280 1 46 1 339 1 214 1 88 1 77 1 352 1 
52 1 188 1 169 1 15 2 198 1 152 1 83 1 200 1 125 1 326 1 349 1 280 1 46 1 339 1 214 1 88 1 77 1 352 1 
171 1 78 1 212 1 
171 1 78 1 212 1 
334 1 136 1 
334 1 136 1 212 1 
26 1 146 1 
26 1 308 1 188 1 169 1 244 1 108 1 106 1 152 1 309 1 154 1 125 1 29 2 339 1 215 1 231 1 322 2 174 2 198 1 15 1 277 2 326 1 204 1 327 2 280 1 146 1 77 1 352 1 
307 1 54 1 263 1 310 1 2 1 86 2 29 2 30 1 229 1 213 1 134 1 318 1 317 1 138 2 322 2 218 2 40 1 174 2 118 2 296 1 41 1 18 1 43 1 258 1 147 2 73 1 282 2 331 1 81 1 80 1 24 1 
218 2 27 1 243 1 40 1 143 2 170 1 86 2 58 1 266 1 336 1 288 1 205 1 247 1 147 2 123 1 62 1 197 1 81 1 51 1 
218 1 243 1 40 1 109 1 143 2 170 1 86 1 58 1 266 1 336 1 288 1 205 1 147 1 62 1 197 1 81 1 51 1 
218 1 40 1 41 1 55 1 256 1 86 1 43 1 329 1 147 1 123 1 208 1 62 1 81 1 115 1 
218 1 243 1 40 1 143 2 170 1 86 1 58 1 266 1 336 1 288 1 205 1 247 1 147 1 123 1 62 1 197 1 81 1 51 1 
299 1 
323 1 33 1 193 1 66 1 83 1 179 1 145 1 
188 1 83 2 210 1 59 1 112 1 35 1 230 1 141 1 273 1 117 1 219 1 66 1 179 1 145 1 71 1 280 1 23 1 
218 1 219 1 40 1 41 1 153 1 210 1 86 1 43 2 71 1 329 1 337 1 147 1 148 1 75 1 283 1 81 2 273 1 
188 1 107 1 83 5 84 1 210 2 314 1 6 2 192 1 290 1 217 1 38 1 230 6 139 1 141 1 251 1 92 1 273 2 117 1 324 2 219 2 119 5 66 8 144 1 179 2 145 5 280 1 71 2 72 5 303 2 47 1 239 2 23 3 185 1 50 2 150 2 
39 1 151 1 188 1 219 1 66 2 189 1 210 1 145 2 280 1 71 1 348 1 303 1 50 1 103 1 150 1 273 1 
219 1 83 1 66 1 210 1 179 1 145 1 71 1 33 1 193 1 273 1 
324 2 119 5 83 5 66 5 145 5 6 2 158 1 72 5 303 2 239 2 23 5 50 2 230 10 139 1 150 2 
117 1 188 1 83 1 179 1 141 1 280 1 
188 3 210 1 190 2 86 4 126 1 314 2 60 1 137 1 141 4 115 1 273 2 117 2 218 4 219 2 40 1 344 1 41 1 66 2 256 1 43 1 145 2 71 2 280 3 122 1 329 2 147 4 181 1 185 2 81 1 
307 1 53 1 263 1 310 1 153 1 312 2 2 1 86 1 29 2 157 1 229 1 231 1 91 1 322 3 218 1 296 1 118 2 174 3 142 1 275 1 40 1 41 1 277 2 43 1 327 2 329 1 147 1 73 1 282 1 238 1 331 1 81 1 
219 1 119 2 66 1 83 4 210 1 179 2 314 1 145 2 71 1 338 1 72 2 23 2 230 4 185 1 273 1 
52 1 166 1 146 1 169 1 352 1 
169 1 201 1 352 1 
169 1 201 1 352 1 
169 1 201 1 352 1 
169 1 89 1 352 1 
169 1 89 1 352 1 
169 1 89 1 352 1 
169 1 352 1 
339 1 77 1 
151 1 310 2 84 1 189 1 2 1 267 1 229 1 338 1 32 1 92 1 296 1 118 2 144 1 202 2 348 1 281 2 73 1 282 5 47 1 209 1 50 1 24 3 
151 1 310 3 227 1 189 1 84 1 2 2 267 1 229 2 338 1 32 1 92 2 324 1 296 2 118 4 144 1 202 2 348 1 281 3 73 2 282 8 47 1 239 1 209 1 240 1 305 1 50 2 24 5 
151 1 227 1 310 8 189 1 84 1 2 3 267 1 229 3 6 2 192 1 338 1 32 1 290 1 217 1 38 1 92 1 324 2 296 3 118 6 144 1 202 3 120 1 348 1 281 4 73 3 282 16 303 2 47 1 239 2 305 1 209 1 50 3 24 8 
151 1 227 1 310 5 189 1 84 1 2 3 267 1 229 3 6 1 192 1 338 1 32 1 290 1 217 1 38 1 92 1 324 2 296 3 118 6 144 1 202 3 120 1 348 1 281 5 73 3 282 14 303 1 47 1 239 2 305 2 209 1 50 3 24 9 
151 1 310 2 84 1 189 1 2 1 267 1 229 1 338 1 32 1 92 1 296 1 118 2 144 1 202 2 348 1 281 2 73 1 282 5 47 1 209 1 50 1 24 3 
310 6 84 1 2 1 229 1 6 2 192 1 290 1 217 1 38 1 92 1 324 2 296 1 118 2 144 1 202 1 281 2 73 1 282 12 303 2 47 1 239 2 305 1 209 1 50 2 24 6 
151 1 310 6 227 1 189 1 84 1 2 4 267 1 229 4 6 1 192 1 338 1 32 1 290 1 217 1 38 1 92 1 324 2 296 4 118 8 144 1 202 3 120 2 348 1 281 5 73 4 282 15 303 1 47 1 239 2 305 2 209 1 50 3 24 9 
310 7 311 1 84 1 2 4 229 4 6 2 192 1 290 1 217 1 38 1 92 1 324 3 296 4 118 8 144 1 202 3 120 2 281 6 73 4 282 16 303 2 47 1 239 3 305 3 209 1 50 3 24 9 
39 1 151 2 310 2 189 2 202 4 267 1 348 2 281 7 338 1 32 1 303 1 282 7 305 3 50 3 24 5 
151 1 310 6 311 1 189 1 84 1 2 4 267 1 229 4 6 1 192 1 338 1 32 1 290 1 217 1 38 1 92 1 324 2 296 4 118 8 144 1 202 3 120 2 348 1 281 4 73 4 282 15 303 1 47 1 239 2 305 1 209 1 50 3 24 9 
151 1 118 4 296 2 310 2 189 1 2 2 202 2 267 1 229 2 120 1 348 1 281 3 338 1 32 1 73 2 282 5 305 1 50 1 24 3 
281 2 338 1 151 1 32 1 323 1 310 1 189 1 282 3 202 2 50 1 267 1 24 2 348 1 
324 1 118 2 296 1 310 2 227 1 2 1 202 1 229 1 6 1 281 2 73 1 303 1 282 4 239 1 305 1 50 1 24 2 
324 1 310 4 144 1 202 1 6 1 281 2 303 1 282 7 47 1 239 1 240 1 305 1 50 1 92 2 24 3 
151 1 310 10 189 2 2 2 267 1 229 2 6 2 338 1 32 1 92 2 324 2 160 1 118 4 296 2 16 1 144 2 202 5 120 2 348 2 281 9 73 2 282 20 303 2 239 2 305 4 240 1 50 3 24 10 223 1 
310 1 282 1 92 1 
282 1 144 1 24 1 
324 1 296 1 118 2 227 1 310 3 2 1 202 2 229 1 6 1 281 3 158 1 73 1 282 6 303 1 239 1 305 1 50 1 24 3 
310 6 84 1 2 1 229 1 6 2 192 1 290 1 217 1 38 1 92 1 324 2 296 1 118 2 144 1 202 1 281 2 73 1 282 12 303 2 47 1 239 2 305 1 209 1 50 2 24 6 
151 1 282 1 50 1 24 1 
118 2 296 1 16 1 310 2 189 1 2 1 202 1 267 1 229 1 120 1 348 1 281 2 32 1 73 1 282 3 305 1 24 1 
39 1 151 1 296 1 118 2 310 3 189 1 2 1 202 2 229 1 348 1 281 4 73 1 282 7 303 1 209 1 305 2 50 2 24 4 
118 2 296 1 2 1 229 1 281 1 73 1 282 2 239 1 209 1 305 1 50 1 24 2 
324 1 118 2 296 1 310 2 2 1 202 1 229 1 6 1 281 2 73 1 303 1 282 4 239 1 209 1 305 1 50 1 24 2 
118 6 296 3 16 1 310 2 311 1 189 1 2 3 202 1 229 3 120 1 348 1 281 2 73 3 282 3 209 1 305 1 24 1 
151 2 310 14 227 1 311 1 189 2 2 5 267 1 229 5 6 3 31 1 338 1 32 1 172 1 92 4 232 1 324 3 296 5 118 10 16 1 144 3 202 6 120 2 348 2 281 11 73 5 282 28 303 3 47 1 239 3 209 1 240 1 305 5 50 5 24 14 
322 1 174 1 74 1 346 1 29 1 69 1 231 1 
332 1 322 1 11 1 174 1 346 1 29 1 19 1 69 1 74 1 341 1 231 1 242 1 
323 1 218 1 329 1 40 1 147 1 41 1 256 1 86 1 43 1 81 1 115 1 
322 2 218 1 174 2 40 1 41 1 153 1 175 1 157 1 29 1 86 1 277 1 43 1 327 1 329 1 147 1 231 1 91 1 81 1 
153 2 86 1 190 1 29 2 157 1 133 1 289 1 9 1 231 1 91 1 322 2 218 1 40 1 174 2 41 2 175 1 162 1 177 1 277 2 43 3 327 1 147 1 81 1 
153 2 86 2 190 1 29 2 157 1 133 1 289 1 9 1 231 1 322 2 218 2 40 1 174 2 41 2 175 1 162 1 177 1 277 2 43 3 327 1 147 2 149 1 81 1 261 1 
188 2 153 1 83 1 86 3 190 1 289 1 196 1 9 1 141 1 140 1 218 3 40 1 41 1 233 1 43 4 179 1 280 2 99 1 329 1 147 3 283 1 149 1 81 1 
188 2 218 3 40 1 41 1 83 1 233 1 153 1 190 1 86 3 43 4 179 1 347 1 280 2 329 1 99 1 147 3 289 1 283 1 9 1 141 1 149 1 81 1 
218 1 40 1 147 1 86 1 279 1 81 1 
27 1 218 7 40 2 41 2 1 1 153 1 86 7 191 1 42 1 279 1 43 3 336 1 329 2 147 6 318 1 114 1 75 1 138 1 173 1 81 3 94 1 
307 2 151 1 27 1 53 1 310 1 153 1 189 1 2 2 157 1 29 1 86 1 3 1 267 1 229 2 213 1 134 1 338 1 32 1 249 1 231 1 91 1 322 2 218 1 40 1 174 2 118 4 296 2 275 1 41 1 175 1 202 2 277 1 43 1 327 1 348 1 281 2 44 1 147 1 73 2 282 3 101 1 331 2 50 1 187 1 24 2 81 1 
188 3 309 1 83 1 210 2 86 1 33 1 193 1 60 1 195 1 292 1 141 2 273 2 117 1 218 1 12 1 219 2 66 1 233 1 43 2 179 1 347 1 145 1 71 2 280 3 329 1 99 1 147 1 283 1 
27 1 218 2 40 1 41 1 153 1 86 2 279 1 43 2 99 1 337 1 147 2 75 1 81 2 
218 4 27 1 40 1 41 1 256 1 86 4 43 1 5 1 329 1 147 4 149 1 81 1 115 1 
321 1 218 2 105 1 40 1 41 1 153 1 190 1 86 2 42 1 43 1 147 2 114 1 270 1 81 2 
205 1 218 1 329 1 40 1 147 1 143 1 170 1 58 1 86 1 81 1 
218 2 27 1 40 1 147 2 41 1 318 1 86 2 43 1 81 1 80 1 336 1 
218 5 27 1 40 2 41 2 256 1 190 1 86 5 191 1 43 3 5 1 329 1 147 4 318 1 173 1 115 1 81 2 
218 5 27 1 40 2 41 2 256 1 190 1 86 5 191 1 43 3 5 1 329 1 147 4 206 1 318 1 115 1 81 2 
322 2 218 1 174 2 40 1 41 1 153 1 175 1 157 1 29 1 86 1 277 1 43 1 327 1 329 1 147 1 231 1 81 1 261 1 
218 1 40 1 41 1 1 1 153 1 190 1 86 1 42 1 43 1 147 1 114 1 75 1 81 2 
343 1 276 1 291 1 301 1 231 1 
188 1 14 1 343 1 276 1 309 1 291 1 301 1 155 1 168 1 8 1 163 1 280 1 
322 1 54 1 174 1 276 1 18 1 291 1 301 1 29 1 30 1 
14 1 276 1 8 1 
95 1 323 1 127 1 300 1 
95 1 36 1 271 1 127 1 284 1 129 1 300 1 
284 1 335 1 132 1 
95 1 67 1 265 2 129 1 127 1 300 1 271 1 36 3 90 1 284 3 285 1 306 1 
95 1 98 1 36 2 271 1 127 1 284 2 129 1 300 1 225 1 
95 1 67 1 143 1 129 1 266 1 111 1 180 1 205 1 271 1 36 1 284 1 
95 1 36 1 271 1 67 1 127 1 284 1 129 1 
36 1 271 1 67 1 127 2 284 1 129 1 300 1 
95 1 0 1 325 1 67 1 287 1 127 1 129 2 271 2 36 2 284 2 
95 2 67 1 127 1 129 1 300 1 121 1 180 1 113 1 98 2 271 1 36 3 284 3 82 1 
95 1 170 1 143 2 67 1 68 1 127 1 129 1 266 1 300 1 205 1 98 1 271 1 36 2 284 2 51 1 
95 2 67 1 127 1 129 2 300 1 180 1 113 1 98 2 271 2 36 4 284 4 104 1 225 1 
95 1 36 1 271 1 67 1 127 1 284 1 129 1 300 1 
95 3 265 1 127 2 129 1 300 2 130 1 180 1 113 1 98 2 36 4 271 1 90 1 284 4 306 1 
95 1 67 1 127 1 129 1 300 1 98 1 340 1 271 1 36 2 284 2 184 1 274 1 
95 1 67 1 265 2 129 1 127 1 300 1 271 1 36 3 90 2 284 3 183 1 306 1 
95 2 264 2 255 1 315 1 
36 1 271 1 67 1 278 1 284 1 129 1 
95 1 98 1 36 2 271 1 67 1 127 1 284 2 129 1 300 1 82 1 
128 1 
95 1 36 1 271 1 67 1 127 1 284 1 129 1 300 1 
95 1 67 1 265 1 129 1 127 1 300 1 98 1 271 1 36 3 284 3 82 1 
113 1 95 1 130 1 180 1 
95 1 127 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (344,346,352) (68,79,278) (68,79,278) (68,79,278) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 199 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 301 281 72 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 69 (24,279) (24,279) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (344,346,352) (344,346,352) (344,346,352) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 98 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 199 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 301 281 72 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 301 82 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> <<
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
126 1 166 2 1 1 27 2 193 1 150 1 307 1 249 1 78 1 33 1 53 2 221 2 107 1 54 1 286 1 56 1 336 4 139 2 58 6 338 2 156 1 339 5 87 1 320 2 88 1 40 9 296 3 42 9 
126 1 166 2 1 1 27 2 193 1 150 1 307 1 249 1 78 1 33 1 53 2 221 2 107 1 54 1 286 1 56 1 336 4 139 2 58 6 338 2 156 1 339 5 87 1 320 2 88 1 40 9 296 3 42 9 
126 1 166 2 1 1 27 2 193 1 150 1 307 1 249 1 78 1 33 1 53 2 221 2 107 1 54 1 286 1 56 1 336 5 139 2 58 7 338 2 156 1 339 6 87 1 320 2 88 1 40 10 296 4 42 10 
126 1 166 2 1 1 27 2 193 1 150 1 307 1 78 1 33 1 53 2 221 2 107 1 54 1 286 1 56 1 336 3 139 2 58 4 338 1 156 1 339 4 87 1 320 2 88 1 40 7 296 2 42 7 
336 2 139 1 58 3 338 2 156 1 339 3 1 1 27 1 320 1 88 1 40 4 296 1 249 1 53 1 221 1 107 1 42 4 54 1 
276 1 139 1 166 1 339 1 156 1 27 1 40 2 78 1 80 1 53 1 333 1 33 1 221 1 107 1 42 2 54 1 
56 1 336 1 139 2 166 1 58 1 156 1 339 2 40 3 296 1 53 2 107 1 42 3 54 1 
166 1 101 1 1 1 27 1 307 1 249 1 53 2 221 1 107 1 54 1 336 4 56 1 271 1 139 2 58 7 338 2 156 1 339 5 87 1 320 1 88 1 40 9 296 3 42 9 
166 1 101 1 1 1 27 1 307 1 249 1 53 2 221 1 107 1 54 1 336 4 56 1 271 1 139 2 58 7 338 2 156 1 339 5 87 1 320 1 88 1 40 9 296 3 42 9 
199 1 136 1 11 1 
60 2 136 1 233 1 
47 1 350 2 32 2 91 2 28 1 132 2 312 2 185 2 
145 1 24 1 303 1 96 1 47 1 350 3 216 1 0 1 69 1 329 1 357 1 28 1 132 3 218 2 52 2 331 1 32 2 106 1 250 1 137 1 312 2 252 1 177 2 224 1 179 2 157 1 120 1 230 1 275 1 144 1 160 1 91 2 325 1 373 1 185 2 46 2 375 1 
47 1 350 1 317 1 32 1 91 1 132 1 312 1 185 1 74 1 149 1 
350 1 290 1 130 1 292 1 259 1 132 1 149 1 32 1 136 1 267 1 84 1 109 1 9 1 11 1 
350 1 290 1 130 2 292 1 259 1 132 1 149 1 32 1 91 1 136 1 267 2 185 1 312 1 9 1 11 1 
264 1 196 1 130 1 267 1 326 1 
264 1 136 1 130 2 83 1 267 2 326 1 158 1 11 1 
264 1 130 1 267 1 
47 1 350 1 317 1 130 1 280 1 74 1 132 1 149 1 32 1 91 1 267 1 326 1 185 1 312 1 
136 1 
359 1 264 1 136 1 130 2 83 1 267 2 326 1 11 1 
127 1 264 2 240 1 241 1 70 2 130 5 181 1 358 1 103 1 4 1 136 1 262 1 222 2 83 1 267 5 285 2 326 2 215 1 11 1 
199 1 28 1 
316 1 350 2 100 1 32 2 91 1 28 2 312 1 185 1 132 2 
105 1 118 1 89 1 
177 1 350 1 69 1 329 1 357 1 28 1 132 1 218 1 283 1 331 1 230 1 160 1 106 1 137 1 46 1 375 1 
177 1 350 2 69 1 277 1 329 1 118 1 357 1 132 2 370 1 218 1 230 1 331 1 32 1 160 1 91 1 106 1 137 1 312 1 46 1 375 1 
350 5 316 1 277 1 243 1 258 1 132 5 28 1 370 2 51 1 32 5 91 4 84 1 312 4 185 1 
350 2 317 1 32 2 91 2 26 1 132 2 312 2 149 1 
350 3 32 3 91 3 185 1 28 1 132 3 312 3 370 1 
350 1 317 1 32 1 91 1 132 1 312 1 149 1 
100 1 350 1 316 1 32 1 91 1 132 1 312 1 185 1 149 1 
145 1 24 1 303 1 47 1 350 4 216 1 69 1 0 1 277 1 329 1 130 1 357 1 28 1 132 4 149 1 218 1 52 2 331 1 32 3 106 1 250 1 137 1 267 1 312 3 9 1 205 1 177 1 224 1 225 1 316 1 290 1 292 1 259 1 179 1 370 1 120 1 230 1 275 1 144 1 160 1 91 3 185 2 46 1 375 1 
350 2 32 2 91 1 258 1 84 1 28 1 132 2 312 1 370 1 
225 1 316 1 350 3 48 1 277 1 290 1 130 1 259 1 292 1 132 3 149 1 370 2 32 3 91 3 136 1 267 1 185 1 312 3 9 1 
316 1 350 2 118 1 132 2 370 1 89 1 32 2 91 2 185 1 312 2 
177 1 350 1 69 1 329 1 357 1 28 1 132 1 218 1 331 1 230 1 160 1 106 1 137 1 46 1 375 1 
177 1 350 1 329 1 357 1 2 1 28 1 132 1 218 1 331 1 230 1 160 1 137 1 46 1 55 1 375 1 
145 1 235 1 303 2 216 1 265 1 168 1 52 2 151 1 104 1 105 2 334 1 252 2 224 1 118 2 179 4 89 2 321 1 120 1 231 1 275 1 144 1 263 1 300 1 43 1 
350 1 32 1 290 1 91 1 26 1 132 1 312 1 149 1 
114 1 6 1 
114 1 6 1 
18 1 311 1 
18 1 311 1 
18 1 311 1 
159 1 114 1 6 1 
114 1 6 1 95 1 
349 1 18 1 114 2 76 1 6 2 311 1 
159 1 114 1 6 1 
159 1 114 1 6 1 
114 1 245 1 6 1 
114 1 245 1 6 1 
114 1 245 1 6 1 
97 1 350 2 247 1 130 1 28 1 132 2 266 1 32 2 220 1 6 1 267 1 312 2 203 1 114 1 206 1 323 1 371 1 39 1 91 2 44 1 94 1 234 1 95 1 125 1 
349 1 12 1 363 1 304 1 206 2 114 2 353 1 247 2 130 2 62 1 148 1 266 2 322 2 323 2 136 1 6 2 267 2 44 1 125 3 
221 1 27 1 320 1 
333 1 221 1 27 1 
333 1 221 3 257 1 172 1 320 2 38 1 
333 1 211 1 221 2 257 1 172 1 320 1 
333 1 221 2 172 1 257 2 320 1 
127 2 47 1 350 1 264 1 241 1 70 1 130 5 131 1 280 1 132 1 169 1 74 1 149 1 151 1 32 1 200 1 222 1 174 1 136 1 83 1 267 5 360 2 285 1 312 1 313 1 11 1 317 1 60 1 321 1 208 1 39 1 90 1 19 1 91 1 185 1 326 4 215 1 
127 2 47 1 350 1 264 3 241 1 70 1 130 5 131 1 280 1 74 1 132 1 149 1 30 2 151 1 196 2 32 1 134 1 222 1 174 1 136 1 83 1 267 5 285 1 312 1 313 1 11 1 317 1 60 1 341 1 321 1 208 1 39 1 90 1 19 1 91 1 326 4 185 1 215 1 
47 1 127 2 350 1 241 3 70 1 265 1 130 3 131 1 280 1 132 1 74 1 169 1 149 1 151 1 32 1 200 1 222 1 136 2 334 1 360 1 267 3 285 1 312 1 313 1 11 1 317 1 60 3 321 1 208 2 39 1 90 1 19 2 91 1 262 1 233 1 185 1 326 2 
127 4 241 5 70 1 265 2 130 4 131 1 169 1 151 2 308 1 200 1 222 1 136 3 334 2 360 2 267 4 285 1 313 2 11 1 319 1 60 6 321 2 143 1 208 4 39 2 90 1 19 4 262 1 233 2 326 3 
199 1 329 1 293 1 
329 1 361 1 
297 1 
160 1 329 1 357 1 
115 1 329 1 
160 1 329 1 
160 1 189 1 329 3 357 1 212 1 293 2 
302 1 235 3 237 1 303 4 188 1 327 1 25 1 265 2 170 1 104 2 223 1 252 5 111 1 16 1 179 9 369 1 321 2 261 1 
302 1 235 4 237 1 303 4 188 1 327 1 25 1 265 2 170 1 104 2 223 1 252 5 111 1 16 1 179 9 369 1 321 2 261 2 
302 1 235 3 237 1 303 4 188 1 327 1 25 1 356 1 265 2 170 1 104 2 223 1 252 5 111 1 16 1 179 9 369 1 321 2 261 1 
252 1 188 2 327 1 223 1 162 1 179 1 369 1 
145 2 235 5 302 1 237 1 303 5 188 1 327 1 25 1 265 2 355 1 170 1 52 4 104 3 223 1 154 1 252 6 224 2 111 1 365 1 16 1 179 11 321 2 120 2 261 2 275 2 
288 1 139 1 166 1 68 1 253 1 278 1 40 1 79 1 53 1 346 1 42 1 35 1 93 1 54 1 362 1 
166 1 68 1 49 1 246 1 27 1 218 1 79 1 219 1 53 1 333 1 221 2 107 1 137 1 35 1 362 1 177 1 288 1 139 1 253 1 226 1 58 2 339 1 156 1 320 1 38 1 40 3 230 1 42 3 346 1 46 1 
166 1 49 1 27 1 218 1 79 1 219 1 333 1 221 2 107 1 137 1 35 1 362 1 177 1 253 1 58 2 226 1 339 1 156 1 320 1 38 1 40 2 230 1 42 2 346 1 46 1 
166 2 246 1 147 1 329 1 218 1 331 1 53 1 137 1 35 2 362 2 177 1 139 1 253 2 112 1 272 1 17 1 230 1 40 1 372 1 160 1 183 1 42 1 46 1 
288 1 177 1 139 1 68 1 166 1 253 1 49 1 278 1 27 1 320 1 38 1 218 1 230 1 40 1 79 1 333 1 53 1 219 1 221 2 137 1 346 1 42 1 35 1 54 1 46 1 362 1 
315 1 
146 1 241 2 329 1 50 1 149 1 3 1 331 2 285 1 109 1 9 1 11 1 335 1 112 1 290 1 255 4 60 2 14 2 340 1 117 2 292 1 259 1 17 1 121 2 160 1 65 2 345 1 298 1 215 1 66 1 127 2 264 6 350 1 70 1 167 1 130 5 132 1 218 2 32 1 136 2 222 1 137 1 36 1 83 3 267 5 269 2 84 1 177 2 85 2 142 1 90 1 230 1 274 1 92 2 233 2 46 2 
264 2 350 1 255 2 290 1 167 1 130 3 259 1 50 1 292 1 132 1 149 1 3 1 359 1 32 1 298 1 83 1 267 3 269 1 84 1 9 1 109 1 66 1 
264 1 350 1 167 1 130 3 50 1 132 1 149 1 3 1 359 1 32 1 136 1 267 3 83 1 84 1 109 1 9 1 11 1 290 1 255 3 292 1 259 1 65 1 298 1 66 1 
350 1 264 2 167 1 130 3 50 1 132 1 149 1 3 1 359 1 32 1 136 1 83 1 267 3 84 1 269 1 109 1 9 1 11 1 290 1 255 3 292 1 259 1 121 1 65 1 298 1 66 1 
127 1 99 1 264 7 350 1 241 1 70 1 167 1 130 5 50 1 132 1 149 1 75 1 3 1 359 1 32 1 222 1 136 5 83 3 267 5 285 1 84 1 269 4 109 1 9 1 11 5 337 1 85 2 290 1 255 6 14 2 340 1 117 2 142 1 292 1 259 1 121 4 65 4 161 1 298 1 92 2 233 2 214 1 215 1 66 1 
127 1 264 4 350 1 241 1 70 1 167 1 130 4 50 1 132 1 149 1 3 1 32 1 136 2 222 1 36 1 83 2 267 4 269 2 285 1 84 1 109 1 9 1 11 1 85 2 290 1 255 4 60 2 14 2 340 1 117 2 142 1 292 1 259 1 121 2 65 2 298 1 92 2 233 2 66 1 215 1 
127 1 264 4 350 1 99 1 241 1 70 1 167 1 130 4 50 1 132 1 149 1 3 1 75 1 32 1 136 1 222 1 83 2 267 4 269 2 84 1 285 1 109 1 9 1 11 1 85 2 290 1 255 4 14 2 340 1 117 2 142 1 292 1 259 1 121 2 65 2 298 1 92 2 233 2 214 1 66 1 215 1 
127 1 264 4 350 1 99 1 241 1 70 1 167 1 130 4 50 1 132 1 149 1 3 1 75 1 32 1 136 1 222 1 83 2 267 4 269 2 84 1 285 1 109 1 9 1 11 1 85 2 290 1 255 4 14 2 340 1 117 2 142 1 292 1 259 1 121 2 65 2 298 1 92 2 233 2 214 1 66 1 215 1 
127 1 264 4 350 1 241 1 70 1 167 1 130 4 50 1 132 1 149 1 3 1 32 1 136 1 222 1 108 1 83 2 267 4 269 2 270 2 84 1 285 1 109 1 9 1 251 1 11 1 85 2 13 1 290 1 255 4 60 2 14 2 142 1 292 1 259 1 121 2 273 2 65 2 298 1 214 1 66 1 215 1 
127 1 350 1 264 5 99 1 241 1 70 1 167 1 130 4 50 1 132 1 149 1 75 1 3 1 32 1 136 1 222 1 83 2 267 4 285 1 84 1 269 3 109 1 9 1 11 1 337 1 85 2 290 1 255 5 14 2 340 1 117 2 142 1 292 1 259 1 121 3 65 3 298 1 92 2 233 2 214 1 215 1 66 1 
127 1 350 1 264 5 99 1 241 1 70 1 167 1 130 4 50 1 132 1 149 1 75 1 3 1 32 1 136 1 222 1 83 2 267 4 285 1 84 1 269 3 109 1 9 1 11 1 337 1 85 2 290 1 255 5 14 2 340 1 117 2 142 1 292 1 259 1 121 3 65 3 298 1 92 2 233 2 214 1 215 1 66 1 
127 1 264 4 350 1 241 1 70 1 167 1 130 4 50 1 132 1 149 1 3 1 32 1 136 1 222 1 108 1 36 1 83 2 267 4 269 2 270 2 285 1 84 1 109 1 9 1 11 1 85 2 290 1 255 4 60 2 14 2 142 1 292 1 259 1 121 2 273 2 65 2 298 1 66 1 215 1 
302 1 120 1 145 1 52 2 224 1 216 1 275 1 144 1 199 1 168 1 170 1 
235 2 145 2 303 6 67 1 216 2 265 1 28 1 282 1 52 4 151 2 104 1 105 11 250 1 334 1 138 1 313 2 252 8 140 3 224 2 155 1 118 11 179 14 157 1 180 3 89 4 321 2 120 2 182 1 261 1 275 2 144 1 299 1 184 1 
145 1 303 1 350 2 69 1 216 1 128 1 277 1 329 1 357 1 28 1 132 2 218 1 283 1 52 2 331 1 32 1 106 1 250 1 137 1 138 1 312 1 177 1 252 1 224 1 179 2 157 1 89 1 370 1 120 1 230 1 232 1 160 1 144 1 91 1 275 1 21 1 46 1 375 1 
235 5 145 3 237 1 277 1 279 2 329 2 149 1 52 6 331 1 151 2 104 4 106 2 201 2 105 6 250 1 334 2 8 1 202 2 252 11 111 1 16 1 118 6 157 1 120 3 261 1 160 2 302 1 24 2 303 11 350 3 216 3 69 2 25 1 265 4 357 2 28 1 132 3 170 1 29 1 218 1 32 1 81 1 137 2 138 1 312 1 313 2 177 1 224 3 364 2 179 22 370 1 89 6 321 4 230 2 275 3 91 1 144 3 46 1 375 2 
145 2 303 1 350 1 216 2 71 1 168 1 329 1 72 1 281 1 132 1 73 1 218 3 52 4 331 2 32 1 250 1 137 1 312 1 177 3 252 1 224 2 112 1 179 2 17 1 157 1 370 1 120 2 230 1 91 1 275 2 144 2 160 1 325 1 301 1 93 1 46 3 
235 1 145 1 303 2 350 1 216 1 265 1 132 1 52 2 151 1 32 1 104 1 105 1 334 1 138 1 312 1 313 1 252 1 224 1 316 1 116 1 118 1 179 3 89 1 321 1 120 1 91 1 275 1 144 1 185 1 
235 1 145 1 252 2 224 1 216 1 168 1 118 1 179 2 89 1 321 1 120 1 52 2 151 1 261 1 144 1 275 1 105 1 43 1 
235 1 145 1 224 1 303 2 216 1 168 1 265 1 118 1 179 2 89 1 120 1 52 2 104 1 144 1 275 1 105 1 334 1 263 1 
145 1 235 2 303 2 216 1 168 1 265 1 52 2 151 1 104 1 105 2 334 1 313 1 252 2 224 1 118 2 179 4 89 2 321 1 120 1 261 1 275 1 144 1 
235 1 145 1 252 2 224 1 216 1 118 1 179 2 73 1 89 1 321 1 120 1 52 2 151 1 261 1 144 1 275 1 105 1 43 1 
235 1 145 1 224 1 303 2 216 1 265 1 118 1 179 2 73 1 89 1 120 1 52 2 104 1 144 1 275 1 105 1 334 1 263 1 
145 1 235 2 303 2 216 1 265 1 73 1 52 2 151 1 104 1 105 2 334 1 313 1 252 2 224 1 118 2 179 4 89 2 321 1 120 1 261 1 275 1 144 1 
145 1 235 2 303 2 216 1 265 1 52 2 151 1 104 1 105 2 334 1 313 1 252 2 224 1 118 2 179 4 89 2 321 1 120 1 261 1 275 1 144 1 
24 1 145 1 303 1 350 1 69 1 216 1 329 1 357 1 28 1 132 1 218 1 52 2 331 1 106 1 250 1 137 1 252 1 177 1 224 1 179 2 157 1 120 1 230 1 160 1 144 1 275 1 46 1 375 1 
145 1 303 1 350 1 216 1 329 1 357 1 2 1 28 1 132 1 218 1 52 2 331 1 250 1 137 1 55 1 252 1 177 1 224 1 179 2 157 1 120 1 230 1 160 1 144 1 275 1 20 1 46 1 375 1 
145 1 235 2 303 2 216 1 265 1 52 2 151 1 104 1 105 2 334 1 138 1 313 1 252 2 224 1 118 2 179 4 89 2 321 1 120 1 261 1 275 1 144 1 
24 1 69 1 279 1 93 1 
235 1 145 1 303 1 350 1 216 1 265 1 132 1 52 2 151 1 32 1 105 1 334 1 138 1 7 1 312 1 313 1 252 2 224 1 316 1 118 1 179 3 89 1 321 1 120 1 261 1 91 1 275 1 144 1 185 1 
145 2 235 6 187 1 303 10 355 1 265 3 133 2 282 1 52 4 31 1 151 3 197 1 104 3 5 1 334 3 313 3 252 9 57 1 140 2 224 2 155 1 113 1 179 19 180 1 342 1 321 3 120 2 261 3 275 2 124 2 
235 4 145 3 303 12 187 2 238 1 265 2 355 1 133 4 248 1 330 1 282 2 52 6 151 3 197 1 104 2 5 1 334 2 154 2 313 3 252 14 224 3 140 2 113 2 179 26 180 2 342 1 321 3 120 3 210 1 261 2 275 3 41 1 186 1 124 1 
302 1 145 3 235 6 187 2 303 18 238 1 355 1 265 4 170 1 133 4 248 1 330 1 282 3 52 6 195 1 151 4 197 1 104 3 5 1 334 4 154 1 313 4 252 16 57 1 140 4 224 3 155 1 113 1 179 34 180 3 342 1 321 4 120 3 210 1 261 3 275 3 41 1 186 1 124 1 
302 1 145 4 235 6 187 2 303 16 238 1 355 1 265 3 170 1 133 4 248 1 330 1 282 3 52 8 195 1 151 4 197 1 104 3 5 1 334 3 154 2 313 4 252 17 57 1 140 4 224 4 155 1 113 1 179 33 180 3 342 1 321 4 120 4 210 1 261 3 275 4 41 1 186 1 124 1 
302 1 145 2 235 13 187 1 303 23 238 1 355 1 265 7 170 1 133 4 248 1 330 1 282 2 52 4 151 7 197 1 104 6 5 1 334 7 154 1 313 7 252 24 140 4 224 2 155 2 113 1 179 47 180 4 342 1 321 7 120 2 210 1 261 7 275 2 41 1 299 2 186 1 124 1 
349 1 348 1 323 1 304 1 114 1 206 1 353 1 247 1 6 1 266 1 
371 1 95 1 
323 1 114 1 206 1 37 1 190 1 247 1 6 1 306 1 266 1 
159 1 213 1 
239 1 76 1 245 1 
349 1 12 1 304 1 206 1 114 1 353 1 130 1 247 1 62 1 148 1 266 1 322 1 323 1 136 1 267 1 6 1 44 1 125 2 
349 1 12 1 304 1 206 1 114 1 353 1 130 1 247 1 62 1 148 1 266 1 322 1 323 1 136 1 267 1 6 1 44 1 125 2 
349 1 12 1 304 1 206 1 114 1 353 1 130 1 247 1 62 1 148 1 266 1 322 1 323 1 136 1 267 1 6 1 44 1 125 2 
159 1 76 1 213 1 
159 1 76 1 213 1 
239 1 245 1 
239 1 76 1 245 1 
97 1 220 1 
97 1 350 2 130 1 247 1 28 1 132 2 266 1 32 2 220 1 267 1 6 1 312 2 203 1 176 1 114 1 206 1 62 1 322 1 323 1 371 1 39 1 91 2 326 1 94 1 234 1 95 1 125 1 
165 1 350 1 32 1 132 1 
288 1 177 1 344 1 352 1 219 1 86 1 346 1 93 1 46 1 362 1 218 1 
177 1 288 1 351 1 49 1 27 1 320 1 38 1 218 1 344 1 230 1 333 1 219 1 221 2 137 1 346 1 46 1 362 1 
177 1 112 1 86 1 147 1 329 1 61 1 17 1 218 1 230 1 331 1 160 1 137 1 46 1 362 1 
177 1 288 1 352 1 49 1 86 1 27 1 320 1 38 1 218 1 344 1 230 1 333 1 219 1 221 2 137 1 346 1 46 1 362 1 
152 1 
127 1 241 1 4 1 199 1 136 1 11 1 181 1 
127 1 264 1 241 1 70 1 130 1 222 1 136 2 83 1 267 1 285 1 11 1 340 1 60 1 117 1 233 1 92 1 215 1 
98 1 241 9 328 2 329 6 331 1 151 2 4 1 153 1 201 2 334 2 285 4 11 2 254 2 60 12 256 2 259 2 293 2 208 6 19 6 160 1 122 1 212 1 215 4 127 8 264 5 70 4 265 2 129 1 130 5 357 1 218 1 222 4 136 8 137 1 267 5 83 3 361 3 175 2 313 2 177 1 178 2 368 2 181 1 321 2 90 2 230 2 274 1 233 6 93 1 46 1 374 2 
127 5 264 1 238 1 241 8 70 2 354 1 217 1 265 2 130 1 248 1 330 1 282 1 151 2 222 2 136 5 334 2 267 1 83 1 285 2 313 2 11 2 140 1 254 2 256 1 60 6 180 1 321 2 208 5 90 1 274 1 19 5 41 1 233 3 215 2 186 1 
237 1 127 2 47 1 350 1 25 1 70 1 241 2 265 1 130 1 280 1 132 1 74 1 149 1 75 1 32 1 222 1 267 1 285 1 312 1 254 2 111 1 317 1 256 1 16 1 321 2 91 1 185 1 215 1 
127 1 70 1 241 1 181 1 4 1 222 1 136 1 285 1 215 1 11 1 
127 5 254 2 241 5 256 1 60 10 265 2 321 2 208 5 151 2 19 5 201 1 136 5 233 5 334 2 313 2 
264 1 136 1 130 1 267 1 83 1 11 1 
127 2 146 1 264 4 70 2 241 2 329 2 130 3 357 1 218 4 331 2 171 2 310 1 222 2 34 1 284 1 137 2 83 2 267 3 285 2 10 1 177 4 112 1 17 1 230 3 90 2 274 2 160 2 345 1 122 1 262 1 45 1 123 1 215 1 46 4 
145 1 24 1 303 1 47 1 350 3 0 1 69 1 216 1 329 1 357 1 28 1 132 3 218 1 52 2 331 1 32 2 106 1 250 1 137 1 312 2 177 1 224 1 179 1 120 1 230 1 275 1 91 2 160 1 144 1 185 2 46 1 375 1 
127 2 327 1 70 1 241 1 60 4 208 2 90 1 274 1 19 2 222 1 136 4 233 2 285 1 215 1 11 2 
323 1 247 1 204 1 
323 1 304 1 97 1 332 1 247 1 
323 1 247 1 204 1 
323 1 247 1 204 1 
236 1 323 1 247 1 
236 1 323 1 247 1 
236 1 323 1 247 1 
323 1 247 1 
114 1 6 1 
252 5 235 4 145 2 302 1 303 5 237 1 224 2 111 1 25 1 265 2 16 1 179 10 170 1 321 2 120 2 52 4 261 2 104 2 275 2 154 1 
302 1 199 1 170 1 
235 2 145 1 252 2 303 2 224 1 265 1 179 4 321 1 120 1 52 2 151 1 261 1 104 1 275 1 334 1 347 1 313 1 
252 3 235 2 140 2 303 4 155 1 265 1 179 7 180 1 321 1 282 1 151 1 261 1 104 1 334 1 313 1 
302 1 235 5 145 1 237 1 303 10 67 1 25 1 265 4 170 1 52 2 151 2 104 3 334 2 313 2 154 1 252 10 140 2 224 1 155 1 111 1 16 1 179 20 180 2 321 4 120 1 261 2 275 1 299 1 
303 1 140 1 179 1 
252 1 179 1 180 1 
145 1 252 3 235 3 224 1 303 3 265 1 179 6 321 1 120 1 52 2 151 1 261 1 275 1 104 2 201 1 334 1 347 1 313 1 
145 1 235 2 303 6 238 1 355 1 265 2 248 1 282 1 330 1 52 2 151 2 104 1 334 2 313 2 252 6 140 1 224 1 179 12 180 1 321 2 120 1 261 1 275 1 41 1 186 1 
252 3 235 2 303 3 237 1 111 1 25 1 265 1 179 6 321 1 261 1 104 1 
252 1 235 2 145 1 302 1 237 1 303 2 224 1 25 1 16 1 179 3 170 1 120 1 52 2 261 1 104 1 275 1 135 1 154 1 
145 1 235 5 252 5 224 1 237 2 303 5 111 1 25 2 355 1 16 1 265 2 179 10 321 2 120 1 52 2 261 2 275 1 104 3 
145 1 252 2 235 1 224 1 355 1 179 2 321 1 120 1 52 2 151 1 261 1 275 1 
235 2 145 1 252 2 303 2 224 1 265 1 355 1 179 4 321 1 120 1 52 2 151 1 261 1 104 1 275 1 334 1 313 1 
145 3 235 2 252 1 57 1 303 2 224 3 237 1 25 1 355 1 179 3 120 3 52 6 261 1 275 3 104 1 135 1 154 1 
302 1 145 4 235 6 237 1 303 12 25 1 355 1 265 4 305 1 170 1 282 1 52 8 151 2 104 3 173 1 334 2 268 1 154 1 313 2 252 12 140 3 57 1 224 4 111 1 16 1 179 24 180 3 321 4 120 4 261 3 275 4 347 1 
235 3 145 1 302 1 303 5 237 1 25 1 265 2 355 1 170 1 248 1 282 1 52 2 104 2 252 5 140 1 224 1 111 1 16 1 179 10 180 1 321 2 120 1 261 1 275 1 
302 1 145 2 235 4 237 1 303 6 25 1 265 2 355 1 170 1 248 1 282 1 52 4 151 1 104 2 313 1 252 7 140 2 224 2 155 1 111 1 16 1 179 13 180 1 321 3 120 2 261 2 275 2 347 1 
302 1 145 3 235 5 237 1 303 11 238 1 25 1 355 1 265 4 170 1 248 1 330 1 282 1 52 6 151 2 104 3 334 2 313 2 154 1 252 10 140 1 224 3 111 1 16 1 179 21 180 1 321 4 120 3 261 2 275 3 41 1 347 1 186 1 
302 1 145 3 235 6 237 1 303 8 238 1 25 1 355 1 265 3 170 1 248 1 282 1 330 1 52 6 151 2 104 3 334 1 154 1 313 2 252 11 140 1 224 3 111 1 16 1 179 19 180 1 321 4 120 3 261 3 275 3 41 1 347 1 186 1 
235 3 145 1 302 1 303 5 237 1 25 1 265 2 355 1 170 1 248 1 282 1 52 2 104 2 252 5 140 1 224 1 111 1 16 1 179 10 180 1 321 2 120 1 261 1 275 1 
145 1 235 2 303 6 238 1 355 1 265 2 248 1 282 1 330 1 52 2 151 2 104 1 334 2 313 2 252 6 140 1 224 1 179 12 180 1 321 2 120 1 261 1 275 1 41 1 186 1 
302 1 145 4 235 5 237 1 303 9 238 1 25 1 355 1 265 3 170 1 248 1 330 1 282 1 52 8 151 2 104 3 334 1 313 2 154 2 252 11 140 1 224 4 111 1 16 1 179 20 180 1 321 4 120 4 261 2 275 4 41 1 347 1 186 1 
145 4 235 6 303 7 238 1 355 1 265 2 248 1 330 1 282 1 52 8 151 3 104 3 334 2 313 3 154 2 252 9 140 1 224 4 57 1 179 16 180 1 321 3 120 4 261 3 275 4 41 1 186 1 
252 2 302 1 235 4 303 3 237 2 111 1 25 2 265 1 16 1 179 5 170 1 321 1 261 2 104 2 
302 1 145 4 235 5 237 1 303 9 238 1 25 1 355 1 265 3 170 1 248 1 330 1 282 1 52 8 151 2 104 3 334 1 313 2 154 2 252 11 140 1 224 4 57 1 111 1 16 1 179 20 180 1 321 4 120 4 261 2 275 4 41 1 186 1 
350 1 32 1 258 1 84 1 28 1 132 1 343 1 
350 1 207 1 15 1 258 1 28 1 132 1 294 1 343 1 295 1 32 1 324 1 84 1 
177 1 230 1 331 1 112 1 160 1 199 1 329 1 137 1 17 1 46 1 218 1 
177 1 350 2 329 1 357 1 28 1 132 2 370 1 218 1 230 1 331 1 32 1 160 1 91 1 106 1 137 1 312 1 46 1 375 1 
350 2 329 3 357 2 28 1 132 2 149 1 218 1 32 2 106 1 171 1 137 1 312 2 9 1 177 1 290 1 115 1 370 1 229 1 230 1 91 1 160 2 46 1 375 1 
350 2 329 3 357 2 28 1 132 2 149 1 218 2 32 2 171 1 137 1 312 2 9 1 55 1 177 2 290 1 115 1 228 1 370 1 229 1 230 1 91 1 160 2 46 2 375 1 
177 3 264 1 318 1 115 1 130 2 329 4 259 1 357 1 293 1 228 1 218 3 229 1 209 1 331 1 230 1 160 1 171 1 136 1 137 1 267 2 361 1 46 3 11 1 
177 3 264 1 115 1 130 2 368 1 329 4 259 1 357 1 293 1 228 1 218 3 229 1 331 1 230 1 160 1 171 1 136 1 137 1 267 2 361 1 46 3 11 1 
177 1 230 1 137 1 46 1 23 1 218 1 
177 2 329 1 72 1 357 1 281 1 218 2 192 1 331 2 230 2 160 1 137 1 212 1 301 1 93 1 123 1 46 2 10 1 
145 1 224 1 350 1 216 1 366 1 132 1 370 1 120 1 52 2 32 1 275 1 91 1 144 1 93 1 138 1 312 1 
127 1 264 2 241 1 70 2 130 3 329 2 218 1 331 1 4 1 136 1 222 2 267 3 83 1 285 2 361 1 175 1 11 1 177 1 178 1 368 1 259 1 293 1 181 1 122 1 326 1 215 2 46 1 374 1 
177 1 230 2 160 1 153 1 329 2 137 1 357 1 212 1 93 1 293 1 46 1 23 1 218 1 
177 1 112 1 329 1 357 1 218 1 230 2 331 1 160 1 137 1 284 1 93 1 45 1 123 1 10 1 46 1 
177 2 289 1 329 1 357 1 218 2 230 2 160 1 171 1 284 1 137 1 45 1 123 1 46 2 10 1 
177 1 230 1 331 1 49 1 333 1 221 1 137 1 27 1 46 1 218 1 
177 1 219 1 93 1 46 1 218 1 
177 1 331 1 93 1 46 1 218 1 
177 1 331 1 82 1 301 1 93 1 46 1 218 1 
177 1 350 2 329 1 357 1 28 1 132 2 370 1 218 1 230 1 331 1 32 1 160 1 91 1 137 1 312 1 46 1 55 1 375 1 
177 1 329 1 357 1 218 1 192 1 230 2 160 1 171 1 137 1 212 1 123 1 46 1 10 1 
314 1 64 1 309 1 291 1 28 1 
314 2 225 1 290 1 130 2 291 2 259 1 292 1 28 1 119 1 149 1 191 1 64 1 309 2 136 1 267 2 9 1 326 1 11 1 110 1 
314 1 165 1 64 1 291 1 
64 1 119 1 191 1 
339 1 156 1 199 1 107 1 
139 1 40 1 339 1 156 1 53 1 107 1 42 1 
166 1 35 1 42 1 
139 1 227 1 339 1 156 1 40 3 198 1 78 2 53 1 22 1 107 1 42 3 54 1 
139 1 40 2 58 1 338 1 339 1 156 1 53 1 107 1 42 2 
336 1 139 1 339 1 27 1 320 1 88 1 40 1 53 1 221 1 42 1 54 1 
139 1 40 1 339 1 156 1 53 1 42 1 54 1 
139 1 40 1 156 2 53 1 107 1 42 1 54 1 
139 2 242 1 339 1 156 1 141 1 40 2 63 1 53 2 42 2 54 1 
336 1 139 1 58 2 156 1 339 2 87 1 40 3 296 1 307 1 53 1 107 1 42 3 54 1 
139 1 58 1 339 1 156 1 244 1 27 1 320 1 38 1 40 2 333 1 53 1 221 2 107 1 42 2 54 1 
336 1 139 2 58 2 338 1 156 1 339 2 40 4 296 1 249 1 53 2 107 1 42 4 54 1 
139 1 40 1 339 1 156 1 53 1 107 1 42 1 54 1 
336 1 139 1 164 1 58 2 227 1 156 2 339 3 40 4 296 1 78 1 53 1 22 1 107 2 42 4 
287 1 271 1 139 1 58 1 339 1 156 1 40 2 77 1 53 1 107 1 42 2 54 1 
139 1 227 2 339 1 156 1 40 3 78 2 53 1 22 1 107 1 42 3 163 1 54 1 
194 2 59 1 339 2 102 1 
139 1 40 1 53 1 367 1 42 1 54 1 
139 1 40 2 58 1 307 1 339 1 156 1 53 1 107 1 42 2 54 1 
260 1 
139 1 40 1 339 1 156 1 53 1 107 1 42 1 54 1 
139 1 40 3 58 1 307 1 78 1 339 1 156 1 53 1 107 1 42 3 54 1 
336 1 164 1 296 1 339 1 
339 1 156 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 296 (192,196) (192,196) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 296 (192,196) (192,196) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 296 (192,196) (192,196) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 296 (192,196) (192,196) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (48,138,281,327) (48,138,281,327) 128 308 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (48,138,281,327) (48,138,281,327) 128 308 45 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (48,138,281,327) (48,138,281,327) 128 308 45 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 310 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (207,224) 246 344 206 230 201 286 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 344 206 230 73 284 84 300 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 344 206 230 73 284 84 300 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 344 206 230 73 284 84 300 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 344 206 230 73 284 84 300 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 310 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 344 206 230 73 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 344 206 230 201 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 344 206 230 73 222 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (48,138,281,327) (48,138,281,327) 128 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (48,138,281,327) (48,138,281,327) 128 9 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
329 1 106 1 192 1 48 1 296 1 326 1 257 1 327 1 141 1 172 1 142 1 196 1 281 1 
329 1 106 1 192 1 48 1 296 1 326 1 257 1 327 1 141 1 172 1 142 1 196 1 281 1 
329 1 106 1 192 1 48 1 296 1 326 1 257 1 327 1 141 1 172 1 142 1 196 1 281 1 
329 1 106 1 192 1 48 1 296 1 326 1 257 1 327 1 141 1 172 1 142 1 196 1 281 1 
308 1 329 1 128 1 106 1 48 1 327 2 281 1 138 1 
12 1 237 1 296 1 326 1 327 2 257 1 141 1 85 1 329 1 106 2 62 1 48 1 330 1 332 1 163 1 281 1 
327 3 257 1 329 1 29 1 106 3 158 1 62 2 48 2 330 1 108 1 163 1 281 2 138 1 
308 1 128 1 327 7 257 1 355 1 45 1 156 1 329 1 29 1 106 6 62 2 158 2 48 2 238 1 108 2 281 2 138 5 
308 1 128 1 327 7 257 1 355 1 45 1 156 1 329 1 29 1 106 6 62 2 158 2 48 2 238 1 108 2 281 2 138 5 
74 1 310 1 260 1 
60 2 203 1 260 1 
335 2 229 2 90 1 88 2 362 2 14 2 58 1 40 2 
65 1 351 1 90 1 216 1 174 1 218 1 303 1 304 1 277 2 239 2 30 2 362 3 194 2 124 2 53 1 126 1 148 1 11 1 335 2 337 1 56 1 130 1 14 2 58 1 105 1 59 1 229 2 316 1 87 1 20 1 160 1 88 3 162 1 270 1 374 1 40 2 290 1 
335 1 236 1 228 1 229 1 43 1 88 1 362 1 14 1 58 1 40 1 
335 1 187 1 43 1 208 1 153 1 72 1 4 1 74 1 360 1 250 1 88 1 362 1 39 1 260 1 
236 1 43 2 72 2 4 1 74 1 360 1 362 2 260 1 335 2 204 1 208 2 14 2 58 1 229 2 228 1 250 1 88 2 39 1 40 2 
353 1 208 1 99 1 22 1 72 1 
74 1 159 1 353 1 288 1 208 2 99 1 72 2 260 1 
353 1 208 1 72 1 
335 1 236 1 43 1 204 1 208 1 58 1 14 1 72 1 228 1 229 1 88 1 362 1 99 1 40 1 
260 1 
74 1 25 1 353 1 288 1 208 2 99 1 72 2 260 1 
223 1 294 1 263 1 81 2 288 1 353 2 208 5 171 1 72 5 175 1 209 2 74 1 75 1 31 1 50 1 99 2 64 2 125 1 260 1 
224 1 65 1 335 1 337 1 351 1 130 1 14 1 27 1 59 1 303 1 229 1 277 1 20 1 30 1 160 1 88 2 162 1 362 2 124 1 195 1 
310 1 90 1 
335 2 140 1 43 1 90 1 152 1 14 1 229 1 211 1 88 2 362 2 40 1 
224 1 119 1 246 1 
65 1 351 1 337 1 90 1 130 1 59 1 303 1 315 1 277 1 20 1 30 1 160 1 88 1 362 1 162 1 124 1 
335 3 229 3 90 1 88 3 362 3 14 3 195 1 40 1 
335 1 228 1 229 1 43 1 88 1 362 1 14 1 
335 1 140 1 43 1 152 1 14 1 229 1 88 1 362 1 40 1 
65 1 351 1 43 1 90 1 216 1 27 1 72 1 174 1 4 1 218 1 303 1 360 1 304 1 277 1 239 2 30 1 362 4 194 1 124 1 195 1 53 1 126 1 11 1 335 3 337 1 56 1 130 1 152 1 14 3 208 1 58 1 105 1 59 1 229 3 289 1 87 1 250 1 20 1 160 1 269 1 88 4 162 1 39 1 40 2 
335 2 187 1 43 1 90 1 14 1 229 1 211 1 88 2 362 2 195 1 41 1 
335 3 43 1 152 1 208 1 14 3 72 1 27 1 4 1 360 1 229 3 289 1 250 1 88 3 362 3 39 1 195 2 333 1 260 1 40 1 
224 1 335 2 152 1 14 2 119 1 229 2 88 2 362 2 195 1 40 1 
65 1 351 1 337 1 90 1 130 1 59 1 303 1 277 1 20 1 30 1 160 1 88 1 362 1 162 1 124 1 
65 1 253 1 337 1 90 1 59 1 303 1 277 1 20 1 30 1 160 1 88 1 362 1 162 1 124 1 318 1 
224 1 283 1 198 1 216 1 312 1 207 1 105 1 246 1 174 1 119 1 218 2 304 1 239 2 122 1 194 2 53 1 126 1 
335 1 113 1 43 1 14 1 4 1 229 1 88 1 362 1 
335 5 187 1 90 1 14 4 152 1 27 1 266 1 229 4 88 5 362 5 195 2 23 1 41 1 40 1 
335 1 228 1 229 1 43 1 88 1 362 1 14 1 
262 1 285 1 
262 1 285 1 
214 1 136 1 
214 1 136 1 
214 1 136 1 
262 1 371 1 285 1 
262 1 371 1 285 1 
262 1 371 1 285 1 
262 1 285 1 248 1 
262 2 214 1 285 2 136 1 242 1 155 1 
262 1 285 1 325 1 
262 1 285 1 325 1 
262 1 285 1 325 1 
262 2 285 2 1 1 324 2 68 1 188 1 151 1 169 2 208 2 298 2 72 2 17 3 358 2 19 1 268 2 38 1 123 1 242 1 260 1 
292 1 24 1 324 1 68 1 89 1 90 1 169 1 72 1 358 1 146 1 362 2 259 1 262 1 335 2 285 1 80 1 14 2 208 1 245 1 17 1 229 2 248 1 268 1 88 2 
296 1 326 1 172 1 
296 1 326 1 332 1 
232 1 28 1 97 1 326 3 172 2 332 1 
232 1 63 1 97 1 326 2 172 1 332 1 
232 2 97 1 326 2 172 1 332 1 
255 2 349 1 352 1 186 2 353 1 72 5 328 1 74 1 357 1 146 1 50 3 121 1 122 1 99 4 259 1 260 2 364 2 223 1 203 1 263 2 81 1 288 1 312 1 206 1 35 1 208 5 245 1 15 1 209 1 60 3 64 1 344 1 212 1 
255 6 349 2 294 1 186 6 353 6 170 1 72 9 328 2 74 1 146 4 220 5 50 8 121 3 122 3 99 7 363 1 260 5 223 1 199 1 203 3 263 6 81 2 179 1 368 1 288 1 312 3 206 3 35 1 208 9 209 2 60 9 64 2 344 3 22 5 110 1 212 3 
349 1 255 2 352 1 294 1 186 2 72 3 328 1 74 1 146 1 50 3 121 1 122 1 99 2 260 3 364 1 203 2 81 1 263 2 312 1 206 1 208 3 15 1 209 1 60 4 64 1 344 1 212 1 
255 4 349 1 352 1 186 4 294 1 170 1 72 4 328 1 74 1 146 2 50 5 121 2 122 2 99 3 260 4 364 2 199 1 203 3 81 1 263 4 312 2 206 2 208 4 15 1 209 1 60 7 64 1 344 2 212 2 110 1 
59 1 310 1 92 1 
59 1 117 1 
181 1 
59 1 337 1 
59 3 293 1 337 1 92 2 162 1 282 1 
59 1 337 1 162 1 
59 1 193 1 
345 1 66 1 168 1 70 1 301 3 96 1 218 4 76 1 121 2 122 2 194 9 55 4 264 1 372 1 183 1 316 5 342 1 164 1 
345 1 66 2 168 1 70 1 301 3 218 5 96 1 76 1 121 2 122 2 194 10 55 5 264 1 372 1 183 1 316 5 342 1 164 1 
345 1 66 1 168 1 70 1 301 3 96 1 218 4 76 1 121 2 122 2 194 9 55 4 264 1 369 1 372 1 183 1 316 5 342 1 164 1 
345 1 66 4 168 1 91 1 70 2 73 1 174 1 301 6 96 1 218 15 76 2 304 1 219 3 239 2 121 4 122 4 51 1 194 30 53 1 101 1 336 3 55 10 264 2 206 2 312 2 105 1 372 2 183 2 135 1 316 15 342 1 341 1 344 2 164 1 
345 1 66 2 168 1 70 1 174 2 301 4 218 6 96 1 76 1 304 2 239 4 121 2 122 2 51 1 194 12 53 2 102 1 55 6 264 1 105 2 372 1 157 1 183 1 316 6 164 1 
65 1 112 1 67 1 296 1 297 1 326 2 327 2 257 1 172 1 329 1 28 1 277 1 30 1 48 1 330 1 241 1 124 1 332 1 281 1 243 1 202 1 225 1 36 1 106 2 62 1 61 1 251 1 160 1 163 1 138 1 
65 1 112 1 67 1 295 1 296 1 326 2 327 3 257 1 172 1 28 1 277 1 30 1 48 1 330 1 241 1 124 1 332 1 281 1 243 1 202 1 367 1 36 1 227 1 106 3 62 1 61 1 251 1 160 1 163 1 138 2 
65 1 112 1 295 1 296 1 326 2 257 1 327 2 172 1 28 1 277 1 30 1 330 1 241 1 124 1 332 1 243 1 202 1 227 1 106 2 62 1 61 1 251 1 160 1 163 1 138 2 
65 1 0 1 112 2 337 1 367 1 257 2 327 1 340 1 59 1 18 1 106 1 267 1 277 1 61 2 48 1 20 1 30 1 160 1 361 1 251 2 231 1 124 1 281 1 
65 1 243 1 112 1 67 1 202 1 295 1 296 1 326 2 225 1 257 1 327 1 36 1 172 1 28 1 329 1 106 1 277 1 61 1 48 1 30 1 160 1 251 1 241 1 124 1 332 1 281 1 
274 1 
139 1 187 1 43 1 328 1 4 1 277 2 50 2 7 1 331 1 52 1 100 1 335 1 337 1 150 2 203 2 288 3 208 5 153 1 339 4 209 1 59 1 60 2 20 2 250 1 160 1 64 1 166 2 65 1 347 1 353 6 72 5 116 1 356 2 74 1 302 2 359 2 360 1 30 2 361 1 306 1 362 1 124 2 260 2 223 1 129 2 263 2 81 1 313 1 370 1 373 2 88 1 39 1 231 1 184 1 375 1 
347 1 335 1 150 1 187 1 25 1 43 1 288 1 353 2 208 3 339 2 72 3 153 1 116 1 4 1 360 1 250 1 88 1 362 1 39 1 52 1 184 1 375 1 
347 1 187 1 25 1 43 1 353 1 72 3 116 1 4 1 74 1 360 1 362 1 52 1 260 1 335 1 288 1 208 3 153 1 339 3 373 1 250 1 88 1 39 1 375 1 184 1 
347 1 187 1 25 1 43 1 353 2 72 3 116 1 4 1 74 1 360 1 362 1 52 1 260 1 335 1 129 1 150 1 288 1 208 3 153 1 339 3 373 1 250 1 88 1 39 1 375 1 184 1 
187 1 43 1 4 1 275 1 6 1 50 1 52 1 334 1 100 1 335 1 150 4 203 2 288 3 208 5 339 6 153 1 209 1 250 1 64 1 166 2 346 1 347 1 25 1 256 1 353 7 72 5 116 1 356 2 74 5 302 2 360 1 359 2 362 1 306 1 260 5 223 1 129 4 81 1 263 1 373 4 88 1 39 1 184 1 375 1 
139 1 187 1 43 1 4 1 50 1 52 1 100 1 335 1 150 2 203 2 288 2 208 4 339 4 153 1 209 1 60 2 250 1 64 1 166 2 347 1 353 4 72 4 116 1 356 2 74 1 302 2 360 1 359 2 362 1 306 1 260 2 223 1 129 2 81 1 263 1 373 2 88 1 39 1 184 1 375 1 
346 1 347 1 187 1 256 1 43 1 353 4 72 4 116 1 356 2 4 1 74 1 302 2 359 2 360 1 50 1 306 1 362 1 52 1 334 1 260 1 100 1 223 1 335 1 129 2 150 2 203 2 263 1 81 1 288 2 208 4 153 1 339 4 209 1 373 2 250 1 88 1 39 1 64 1 166 2 375 1 184 1 
346 1 347 1 187 1 256 1 43 1 353 4 72 4 116 1 356 2 4 1 74 1 302 2 359 2 360 1 50 1 306 1 362 1 52 1 334 1 260 1 100 1 223 1 335 1 129 2 150 2 203 2 263 1 81 1 288 2 208 4 153 1 339 4 209 1 373 2 250 1 88 1 39 1 64 1 166 2 375 1 184 1 
320 2 347 1 187 1 256 1 43 1 353 4 72 4 143 2 116 1 4 1 74 1 118 1 302 2 360 1 50 1 306 1 362 1 52 1 260 1 223 1 335 1 34 1 129 2 150 2 263 1 81 1 288 2 208 4 153 1 339 4 209 1 180 1 60 2 373 2 250 1 88 1 39 1 64 1 166 2 375 1 184 1 
346 1 347 1 187 1 256 1 43 1 353 5 72 4 116 1 356 2 4 1 74 1 302 2 359 2 360 1 6 1 50 1 306 1 362 1 52 1 334 1 260 1 100 1 223 1 335 1 129 3 150 3 203 2 263 1 81 1 288 2 208 4 153 1 339 5 209 1 373 3 250 1 88 1 39 1 64 1 166 2 375 1 184 1 
346 1 347 1 187 1 256 1 43 1 353 5 72 4 116 1 356 2 4 1 74 1 302 2 359 2 360 1 6 1 50 1 306 1 362 1 52 1 334 1 260 1 100 1 223 1 335 1 129 3 150 3 203 2 263 1 81 1 288 2 208 4 153 1 339 5 209 1 373 3 250 1 88 1 39 1 64 1 166 2 375 1 184 1 
139 1 320 2 347 1 187 1 43 1 353 4 72 4 143 2 116 1 4 1 74 1 302 2 360 1 50 1 306 1 362 1 52 1 260 1 223 1 335 1 129 2 150 2 263 1 81 1 288 2 208 4 153 1 339 4 209 1 180 1 60 2 373 2 250 1 88 1 39 1 64 1 166 2 375 1 184 1 
345 1 174 1 198 1 304 1 310 1 239 2 168 1 216 1 53 1 105 1 126 1 
224 4 336 1 286 1 201 1 206 1 216 1 105 1 246 4 174 1 176 1 218 1 304 1 316 3 219 1 239 2 121 1 230 1 194 4 344 1 53 1 126 1 
65 1 351 1 90 1 216 1 115 1 27 1 174 1 119 1 176 1 303 1 218 1 277 1 304 1 30 1 239 2 362 2 124 1 194 2 195 1 53 1 126 1 11 1 335 1 337 1 130 1 14 1 105 1 59 1 315 1 133 1 134 1 229 1 316 1 20 1 160 1 88 2 162 1 270 1 
3 1 47 1 276 1 277 1 239 4 194 5 195 1 53 2 11 1 335 1 337 1 55 2 244 1 56 1 206 1 14 1 105 2 246 2 59 1 20 1 160 1 21 1 162 1 344 1 65 1 66 2 351 1 216 2 27 1 174 2 119 2 176 1 218 2 303 1 304 2 30 1 121 1 362 2 124 1 126 2 224 2 130 1 229 1 316 3 88 2 
65 2 234 1 235 1 295 1 297 1 216 2 174 2 218 1 5 1 277 8 304 2 30 7 239 4 361 1 362 1 124 8 194 2 195 1 53 2 126 2 197 1 11 1 335 1 198 1 337 2 338 1 14 1 105 2 314 1 59 3 229 1 316 1 20 2 160 2 88 1 231 1 270 1 374 2 185 1 
216 1 174 1 301 1 119 1 176 1 218 2 304 1 239 2 121 1 362 1 122 1 194 3 53 1 126 1 224 1 335 1 55 1 206 1 312 1 152 1 14 1 105 1 246 1 229 1 210 1 316 1 88 1 344 1 40 1 
224 1 66 1 198 1 55 1 216 1 105 1 246 1 174 1 119 1 304 1 316 2 239 2 121 1 109 1 194 2 344 1 53 1 126 1 
224 1 283 1 198 1 216 1 312 1 105 1 246 1 174 1 119 1 218 2 304 1 239 2 122 1 194 2 53 1 126 1 
66 1 216 1 174 1 119 2 218 2 304 1 239 2 121 1 122 1 194 4 53 1 126 1 224 2 198 1 55 1 206 1 312 1 105 1 246 2 316 2 344 1 
224 1 66 1 55 1 216 1 105 1 246 1 174 1 119 1 5 1 304 1 316 2 239 2 121 1 109 1 194 2 344 1 53 1 126 1 
224 1 283 1 216 1 312 1 105 1 246 1 174 1 119 1 218 2 5 1 304 1 239 2 122 1 194 2 53 1 126 1 
224 1 66 1 55 1 216 1 206 1 105 1 246 1 174 1 119 1 5 1 304 1 316 2 239 2 121 1 194 2 344 1 53 1 126 1 
224 1 66 1 55 1 216 1 206 1 105 1 246 1 174 1 119 1 304 1 316 2 239 2 121 1 194 2 344 1 53 1 126 1 
65 1 351 1 90 1 216 1 174 1 303 1 218 1 277 1 304 1 30 1 239 2 362 1 194 2 124 1 53 1 126 1 11 1 337 1 56 1 130 1 105 1 59 1 316 1 20 1 160 1 88 1 162 1 270 1 
65 1 253 1 90 1 216 1 174 1 303 1 218 1 277 1 304 1 30 1 239 2 362 1 194 2 124 1 53 1 126 1 127 1 11 1 337 1 105 1 59 1 316 1 20 1 160 1 88 1 162 1 318 1 270 1 
224 1 66 1 55 1 216 1 206 1 105 1 246 1 174 1 119 1 176 1 304 1 316 2 239 2 121 1 194 2 344 1 53 1 126 1 
65 1 66 1 351 1 297 1 216 1 174 1 119 1 303 1 277 1 304 1 30 1 239 2 121 1 362 1 194 2 124 1 53 1 126 1 224 1 55 1 337 1 56 1 130 1 206 1 105 1 246 1 59 1 316 2 160 1 88 1 162 1 21 1 344 1 
66 1 216 1 174 1 119 1 176 1 304 1 239 2 121 1 8 1 362 1 194 2 53 1 126 1 224 1 335 1 55 1 206 1 152 1 14 1 105 1 246 1 229 1 316 2 88 1 344 1 40 1 
102 1 336 1 284 1 287 1 206 1 105 2 73 1 84 1 300 1 174 2 218 2 304 2 316 4 219 1 239 4 121 1 230 1 194 6 344 1 53 2 261 1 111 1 
272 1 66 2 254 1 73 2 300 1 174 3 301 2 145 1 218 12 304 3 120 1 219 2 239 6 221 1 121 3 51 2 122 2 194 26 222 1 33 1 279 1 53 3 261 4 102 1 336 2 284 2 55 4 206 3 312 2 105 3 84 2 316 14 344 3 111 1 
102 1 336 1 284 1 287 1 206 1 105 2 73 1 84 1 300 1 174 2 218 2 304 2 316 4 219 1 239 4 121 1 230 1 194 6 344 1 53 2 261 1 111 1 
102 1 336 1 284 1 287 1 206 1 105 2 73 1 84 1 300 1 174 2 218 2 304 2 316 4 219 1 239 4 121 1 230 1 194 6 344 1 53 2 261 1 111 1 
345 1 102 1 336 1 284 1 168 1 206 1 105 1 73 1 84 1 300 1 174 1 218 2 304 1 316 4 219 1 239 2 121 1 230 1 194 6 344 1 53 1 261 1 111 1 
262 1 79 1 358 1 285 1 1 1 324 1 268 1 151 1 169 1 242 1 
248 1 89 1 
262 1 190 1 358 1 285 1 324 1 268 1 169 1 299 1 37 1 
262 1 285 1 1 1 68 1 324 1 188 1 151 1 169 1 208 1 298 1 72 1 17 2 358 1 19 1 268 1 38 1 242 1 260 1 
262 1 285 1 1 1 68 1 324 1 188 1 151 1 169 1 208 1 298 1 72 1 17 2 358 1 19 1 268 1 38 1 242 1 260 1 
262 1 285 1 1 1 68 1 324 1 188 1 151 1 169 1 208 1 298 1 72 1 17 2 358 1 19 1 268 1 38 1 242 1 260 1 
371 1 132 1 155 1 
371 1 132 1 155 1 
325 1 26 1 
325 1 26 1 155 1 
292 1 24 1 
292 1 24 1 324 1 89 1 90 1 169 1 298 1 72 1 358 1 146 1 362 2 99 1 259 1 262 1 335 2 366 1 285 1 80 1 208 1 14 2 245 1 17 1 229 2 248 1 268 1 88 2 38 1 
371 1 132 1 
325 1 26 1 155 1 
65 1 216 1 174 1 95 1 176 1 218 1 277 2 304 1 239 2 30 2 362 2 124 2 194 2 53 1 126 1 197 1 11 1 335 2 365 1 337 1 104 1 57 1 338 1 105 1 247 1 59 1 316 1 160 1 88 2 270 1 374 2 
65 1 243 1 67 1 202 1 295 1 296 1 297 1 326 2 71 1 172 1 93 1 28 1 277 2 30 2 160 1 251 1 124 2 332 1 213 1 
65 1 243 1 67 1 202 1 295 1 296 1 326 2 71 1 172 1 28 1 277 1 30 1 251 1 160 1 124 1 332 1 291 1 
65 1 0 1 337 1 83 1 93 1 59 1 277 1 20 1 30 1 160 1 251 1 361 1 124 1 231 1 
65 1 243 1 67 1 202 1 295 1 296 1 326 2 71 1 172 1 93 1 28 1 277 1 30 1 251 1 160 1 124 1 332 1 213 1 
189 1 
175 1 74 1 310 1 263 1 50 1 171 1 260 1 
223 1 81 1 263 1 203 1 353 1 288 1 208 1 72 1 209 1 356 1 74 1 60 1 359 1 50 1 64 1 260 2 100 1 
319 2 323 1 186 6 92 2 44 2 328 2 144 2 277 3 278 2 49 1 50 9 193 2 331 1 280 1 282 1 337 3 244 2 203 6 288 3 206 2 208 5 209 4 59 10 60 12 20 1 160 3 161 2 162 3 64 4 344 2 212 2 65 4 255 6 215 2 297 1 353 5 354 2 171 1 217 1 72 5 117 3 175 1 74 2 360 2 30 3 121 2 305 1 122 2 124 3 260 8 223 4 81 4 263 8 312 2 
272 1 254 1 255 5 186 5 215 1 353 1 72 1 73 1 94 1 328 1 145 1 74 2 219 1 221 1 50 8 121 2 331 1 122 2 222 1 260 5 223 2 336 1 81 2 203 3 263 5 288 1 206 2 312 2 208 1 131 1 209 2 60 6 64 2 344 2 212 3 
346 1 236 1 215 1 43 1 72 1 96 1 76 1 50 2 121 2 362 1 122 1 223 1 335 1 81 1 263 2 264 1 204 1 208 1 58 1 14 1 209 1 228 1 229 1 88 1 64 1 212 2 164 1 40 1 
223 1 81 1 263 1 171 1 209 1 175 1 74 1 50 1 64 1 260 1 
255 5 186 5 244 1 215 1 263 5 203 5 206 2 312 2 60 10 50 5 121 2 122 2 344 2 212 2 260 5 
74 1 353 1 288 1 208 1 72 1 260 1 
65 1 294 1 353 4 72 3 328 2 277 4 30 4 49 1 50 2 361 1 98 1 305 2 331 2 124 4 223 1 337 1 81 2 263 2 288 2 313 1 208 3 370 1 226 1 209 2 59 1 20 2 160 1 64 2 231 1 
65 1 351 1 90 1 216 1 174 1 218 1 303 1 304 1 277 1 239 2 30 1 362 3 194 1 124 1 53 1 126 1 11 1 335 2 337 1 56 1 130 1 14 2 58 1 105 1 59 1 229 2 87 1 20 1 160 1 88 3 162 1 40 2 
255 2 186 2 328 1 74 2 50 2 331 1 260 4 223 1 81 1 263 2 203 2 209 1 60 4 372 1 64 1 212 1 
233 1 324 1 268 1 
233 1 324 1 268 1 
233 1 324 1 268 1 
1 1 24 1 324 1 268 1 10 1 
324 1 268 1 177 1 
324 1 268 1 177 1 
324 1 268 1 177 1 
324 1 268 1 
262 1 285 1 
345 1 66 2 168 1 174 2 301 2 96 1 218 5 304 2 76 1 239 4 121 2 51 1 122 2 194 10 53 2 55 4 264 1 105 2 316 5 164 1 
345 1 310 1 168 1 
78 1 55 1 206 1 312 1 105 1 174 1 301 1 218 2 304 1 316 2 239 2 121 1 122 1 194 4 344 1 53 1 
336 1 218 1 316 3 219 1 121 1 230 1 206 1 194 4 344 1 73 1 
336 1 218 1 201 1 316 3 219 1 121 1 230 1 206 1 194 4 344 1 
336 1 218 1 194 1 
316 1 219 1 194 1 
78 1 66 2 55 3 244 1 206 1 312 1 105 1 174 1 301 1 218 3 304 1 316 3 239 2 121 1 122 1 194 6 344 1 53 1 
272 1 254 1 66 1 73 1 174 1 301 1 145 1 218 6 304 1 219 1 239 2 221 1 121 2 122 2 194 12 222 1 53 1 336 1 102 1 55 2 206 2 312 2 105 1 316 6 344 2 
66 1 55 2 264 1 301 1 218 3 76 1 316 3 121 1 122 1 194 6 164 1 
345 1 66 1 348 1 55 2 264 1 168 1 105 1 174 1 301 1 96 1 218 2 76 1 304 1 316 1 239 2 51 1 194 3 53 1 
102 1 66 2 55 5 264 2 105 1 174 1 301 3 96 1 218 5 304 1 76 2 316 5 239 2 121 2 122 2 194 10 53 1 164 1 
102 1 66 1 55 1 105 1 174 1 304 1 316 2 239 2 121 1 194 2 344 1 53 1 
102 1 66 1 55 2 312 1 206 1 105 1 174 1 301 1 218 2 304 1 316 2 239 2 121 1 122 1 194 4 344 1 53 1 
348 1 102 1 66 1 55 2 287 1 264 1 105 3 174 3 301 1 218 2 304 3 76 1 316 1 239 6 51 1 194 3 53 3 
345 1 66 3 168 1 91 1 73 1 174 4 301 3 96 1 218 12 76 1 304 4 219 3 239 8 121 4 51 1 122 4 194 24 53 4 101 1 336 3 78 1 102 1 55 6 287 1 264 1 206 2 312 2 105 4 316 12 341 1 344 2 164 1 
345 1 66 1 168 1 73 1 174 1 301 2 218 5 96 1 304 1 76 1 219 1 239 2 121 2 122 2 194 10 222 1 53 1 336 1 102 1 55 3 264 1 105 1 316 5 164 1 
78 1 102 1 336 1 206 1 105 2 73 1 174 2 218 1 304 2 316 3 219 1 239 4 121 1 230 1 222 1 194 4 344 1 53 2 
345 1 272 1 66 2 254 1 168 1 73 1 174 3 145 1 301 4 96 1 218 11 76 1 304 3 219 1 239 6 221 1 121 4 122 4 51 1 194 21 222 1 53 3 78 1 336 1 102 1 55 6 264 1 206 2 312 2 105 3 316 10 344 2 164 1 
345 1 272 1 254 1 66 3 168 1 73 1 174 3 301 2 145 1 96 1 218 8 76 1 304 3 219 1 239 6 221 1 121 4 51 1 122 3 194 19 222 1 53 3 78 1 336 1 102 1 55 5 264 1 206 2 312 1 105 3 316 11 344 2 164 1 
345 1 66 1 168 1 73 1 174 1 301 2 218 5 96 1 304 1 76 1 219 1 239 2 121 2 122 2 194 10 222 1 53 1 336 1 102 1 55 3 264 1 105 1 316 5 164 1 
272 1 254 1 66 1 73 1 174 1 301 1 145 1 218 6 304 1 219 1 239 2 221 1 121 2 122 2 194 12 222 1 53 1 336 1 102 1 55 2 206 2 312 2 105 1 316 6 344 2 
345 1 272 1 66 2 254 1 168 1 73 1 174 4 145 1 301 3 96 1 218 9 76 1 304 4 219 1 239 8 221 1 121 4 122 3 51 2 194 20 222 1 53 4 336 1 78 1 102 1 55 5 264 1 206 2 312 1 105 4 316 11 344 2 164 1 
272 1 254 1 66 2 73 1 174 3 145 1 218 4 304 3 219 1 239 6 221 1 121 2 51 1 122 1 194 11 222 1 53 3 336 1 102 1 55 2 287 1 206 2 312 1 105 3 316 7 344 2 
345 1 66 2 55 4 168 1 264 2 301 2 218 3 96 1 76 2 316 2 121 1 122 1 194 5 164 1 
345 1 272 1 66 2 254 1 168 1 73 1 174 4 145 1 301 3 96 1 218 9 76 1 304 4 219 1 239 8 221 1 121 4 122 3 51 2 194 20 222 1 53 4 336 1 102 1 55 5 287 1 264 1 206 2 312 1 105 4 316 11 344 2 164 1 
335 1 187 1 90 1 88 1 362 1 205 1 41 1 
54 1 335 1 187 1 90 1 205 1 173 1 154 1 249 1 88 1 362 1 178 1 41 1 
65 1 59 1 337 1 277 1 310 1 30 1 20 1 160 1 361 1 231 1 124 1 
65 1 335 1 337 1 351 1 90 1 14 1 59 1 303 1 229 1 277 1 20 1 30 1 160 1 88 2 162 1 362 2 124 1 195 1 
65 1 351 1 43 2 90 1 44 1 4 1 303 1 277 1 30 1 193 1 305 1 362 2 124 1 195 1 335 2 337 2 14 2 59 3 229 1 211 1 250 1 160 1 88 2 162 2 
65 1 253 1 43 2 90 1 44 1 4 1 303 1 277 1 30 1 193 1 305 1 362 2 124 1 195 1 335 2 337 2 14 2 59 3 229 1 211 1 250 1 160 1 88 2 162 2 
65 1 337 1 103 1 69 1 353 1 44 1 92 1 208 2 72 2 117 1 74 1 59 4 360 1 277 3 20 1 30 3 193 1 32 1 160 1 162 1 305 1 124 3 260 1 
65 1 337 1 103 1 353 1 44 1 92 1 208 2 72 2 117 1 74 1 59 4 360 1 277 3 20 1 30 3 278 1 193 1 160 1 162 1 305 1 124 3 260 1 
65 1 277 1 30 1 160 1 124 1 314 1 
65 3 234 1 235 1 337 2 13 1 309 1 295 1 297 1 338 1 314 1 59 3 277 7 147 1 20 2 30 6 160 2 162 1 124 7 374 1 282 1 185 1 
43 1 90 1 47 1 96 1 277 1 239 4 194 8 195 1 53 2 335 1 337 1 55 3 56 1 14 1 105 2 247 1 59 1 211 1 160 1 21 1 162 1 164 1 65 1 345 1 66 1 351 1 297 1 168 1 216 2 174 2 301 2 176 1 303 1 218 4 304 2 76 1 30 1 121 2 362 2 122 2 124 1 126 2 264 1 130 1 229 1 316 4 88 2 
319 1 353 2 92 1 171 1 72 3 117 1 175 1 144 1 74 1 360 1 277 1 30 1 278 1 50 1 49 1 124 1 99 1 260 1 223 2 263 1 81 2 288 1 208 3 209 2 59 2 20 1 161 1 64 2 
65 2 337 1 297 1 92 1 314 1 59 2 277 2 30 2 160 1 162 1 124 2 280 1 282 1 
65 1 337 1 103 1 297 1 16 1 59 1 277 4 20 1 30 4 361 1 160 1 124 4 231 1 
65 2 273 1 337 1 309 1 59 1 277 2 147 1 30 2 160 1 305 1 162 1 124 2 77 1 165 1 
65 1 277 1 202 1 30 1 20 1 296 1 160 1 326 1 124 1 332 1 
65 1 59 1 337 1 277 2 295 1 30 2 160 1 297 1 57 1 338 1 124 2 
65 2 234 1 235 1 337 2 297 1 338 1 16 1 59 3 277 5 20 1 30 4 361 1 160 2 305 1 231 1 124 5 
65 2 234 1 337 2 114 1 297 1 338 1 16 1 59 3 277 5 20 1 30 4 361 1 160 2 305 1 231 1 124 5 
65 1 335 1 253 1 337 1 90 1 14 1 59 1 303 1 229 1 277 1 20 1 30 1 160 1 88 2 162 1 362 2 124 1 195 1 
65 2 337 1 13 1 309 1 59 1 277 1 147 1 30 1 160 1 305 1 162 1 124 1 282 1 
182 1 350 1 200 1 311 1 90 1 
236 1 350 1 167 1 43 2 72 2 4 1 74 1 360 1 362 1 99 1 260 1 335 1 200 1 311 1 204 1 14 1 58 1 208 2 182 1 228 1 229 1 289 1 250 1 88 1 39 1 343 1 137 1 40 1 
335 1 95 1 182 1 365 1 350 1 200 1 104 1 88 1 362 1 
182 1 167 1 343 1 
62 1 310 1 330 1 163 1 
106 1 62 1 48 1 330 1 327 1 163 1 281 1 
112 1 106 1 257 1 
42 1 237 2 327 3 2 1 329 1 106 3 86 1 62 1 48 1 330 1 281 1 163 1 
128 1 106 1 48 1 327 2 281 1 138 1 
296 1 326 1 327 1 172 1 329 1 106 1 62 1 48 1 240 1 108 1 281 1 
329 1 106 1 62 1 48 1 330 1 327 1 281 1 
329 1 106 1 48 1 330 2 327 1 163 1 281 1 
329 1 321 1 106 2 62 1 48 2 82 1 330 1 327 2 271 1 281 2 
327 3 355 1 156 1 329 1 106 3 158 1 62 2 48 1 330 1 108 1 163 1 281 1 138 2 
296 1 326 2 327 2 172 1 329 1 28 1 106 2 62 1 48 1 330 1 332 1 163 1 281 1 252 1 138 1 
329 1 128 1 106 1 48 1 9 1 327 2 281 1 138 1 
329 1 106 1 62 1 48 1 330 1 327 1 163 1 281 1 
42 1 237 1 2 1 327 4 191 1 106 4 158 1 62 3 48 1 330 2 108 1 163 2 281 1 138 2 
322 1 327 2 265 1 329 1 106 2 62 1 48 1 238 1 330 1 281 1 163 1 138 1 
42 2 237 2 2 1 327 3 46 1 329 1 106 3 62 1 48 1 330 1 281 1 163 1 
149 1 62 2 307 2 258 1 
329 1 106 1 48 1 107 1 327 1 281 1 
156 1 329 1 106 2 62 1 48 1 330 1 327 2 163 1 281 1 138 1 
317 1 
329 1 106 1 62 1 48 1 330 1 327 1 163 1 281 1 
156 1 329 1 106 3 62 1 237 1 48 1 330 1 327 3 163 1 281 1 138 1 
191 1 62 1 158 1 108 1 
62 1 330 1 

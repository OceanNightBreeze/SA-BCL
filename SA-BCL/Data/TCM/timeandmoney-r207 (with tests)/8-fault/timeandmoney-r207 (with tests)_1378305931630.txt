#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 94 313 134 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 94 313 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 94 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 94 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 94 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 94 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 94 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 94 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 94 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
109 1 71 1 210 1 191 1 329 1 331 1 54 1 217 1 95 9 338 1 137 4 7 7 28 2 61 1 298 1 299 2 321 5 103 1 342 9 104 1 280 3 252 1 179 1 185 2 
109 1 71 1 210 1 191 1 329 1 331 1 54 1 217 1 95 9 338 1 137 4 7 7 28 2 61 1 298 1 299 2 321 5 103 1 342 9 104 1 280 3 252 1 179 1 185 2 
103 1 342 1 188 1 95 1 28 1 185 1 
103 1 342 1 188 1 95 1 28 1 185 1 
103 1 342 1 188 1 95 1 28 1 185 1 
103 1 342 1 188 1 95 1 28 1 185 1 
109 1 71 1 28 1 191 1 61 1 329 1 299 2 321 3 54 1 103 1 217 1 342 4 280 1 95 4 338 1 137 2 7 3 185 1 
235 1 283 1 142 1 28 1 71 1 210 1 191 1 61 1 321 1 3 1 103 1 217 1 342 2 95 2 89 1 185 1 
28 2 210 1 191 1 321 2 103 1 217 1 342 3 104 1 95 3 280 1 137 1 7 1 185 2 
339 1 
246 1 261 1 311 2 
250 2 81 1 163 2 38 2 82 2 127 2 255 2 101 1 
302 1 236 1 260 1 38 2 114 1 91 1 211 1 73 1 50 1 238 1 115 2 264 1 52 1 53 2 267 1 219 1 96 1 58 2 243 1 81 1 163 3 82 2 223 1 124 1 101 1 13 1 228 1 63 1 250 3 30 1 16 1 253 1 127 2 255 2 345 2 258 2 130 1 
195 1 250 1 81 1 163 1 38 1 82 1 127 1 255 1 57 1 144 1 
20 1 244 1 163 1 189 1 246 1 82 1 213 1 144 1 145 1 250 1 207 1 147 1 18 1 79 1 
244 2 163 1 189 1 38 1 246 1 82 1 145 2 144 1 250 1 207 1 147 1 255 1 127 1 18 1 79 1 
44 1 244 1 318 1 93 1 145 1 
44 1 244 2 246 1 18 1 285 1 12 1 93 1 145 2 
244 1 93 1 145 1 
44 1 244 1 81 1 163 1 38 1 82 1 144 1 145 1 195 1 250 1 254 1 255 1 127 1 57 1 
246 1 
44 1 271 1 244 2 246 1 18 1 285 1 93 1 145 2 
44 2 122 1 186 1 244 5 295 1 21 1 154 1 304 1 246 1 285 1 62 1 330 2 145 5 194 1 93 2 251 1 55 2 322 2 18 1 
339 1 
250 2 163 2 38 1 281 1 127 1 255 1 82 2 101 2 225 1 
340 1 232 1 161 1 
163 1 165 1 91 1 124 1 50 1 115 1 101 1 264 1 53 1 63 1 228 1 250 1 30 1 267 1 16 1 58 1 
20 1 152 1 173 1 250 5 159 1 163 5 176 2 38 4 255 1 82 5 127 4 101 1 225 1 69 1 
195 1 250 2 163 2 32 1 38 2 82 2 127 2 144 1 
163 2 38 1 91 1 82 1 124 1 50 1 115 1 264 1 53 1 228 1 63 1 267 1 250 2 30 1 16 1 159 1 176 1 232 1 127 1 58 1 
250 3 176 1 163 3 38 3 255 1 82 3 127 3 101 1 
195 1 250 1 163 1 38 1 82 1 127 1 144 1 
250 1 163 1 281 1 38 1 82 1 127 1 255 1 144 1 225 1 
302 1 236 1 189 1 38 3 114 1 91 1 50 1 238 1 115 1 264 1 52 1 53 1 267 1 159 1 56 1 79 1 58 1 243 1 244 1 81 1 163 4 316 1 82 3 223 1 124 1 101 1 13 1 225 1 144 1 145 1 228 1 63 1 250 4 207 1 30 1 147 1 16 1 176 1 253 1 255 2 127 3 345 2 258 1 130 1 
20 1 152 1 250 2 163 2 176 1 38 1 82 2 127 1 101 1 
244 1 163 3 189 1 38 3 246 1 82 3 225 1 145 1 144 1 250 3 207 1 147 1 159 1 176 2 56 1 255 1 127 3 79 1 140 1 
340 1 163 2 38 2 82 2 225 1 250 2 176 1 232 1 255 1 127 2 
163 1 91 1 50 1 124 1 115 1 101 1 264 1 53 1 63 1 228 1 250 1 30 1 267 1 16 1 58 1 
163 1 91 1 50 1 124 1 115 1 212 1 101 1 264 1 53 1 228 1 250 1 30 1 279 1 16 1 58 1 
236 1 113 1 114 1 211 2 238 2 136 1 239 1 161 2 243 1 98 1 340 2 166 1 223 1 13 1 87 1 253 1 232 2 105 1 66 1 345 2 180 1 106 1 151 1 258 4 
250 1 147 1 163 1 32 1 38 1 82 1 127 1 144 1 
111 1 
111 1 
37 1 72 1 
37 1 72 1 
37 1 72 1 
111 1 
111 1 
37 1 111 2 72 1 
111 1 
111 1 
111 1 
111 1 
111 1 
134 1 94 1 97 1 313 1 244 1 111 1 145 1 86 1 
94 1 97 1 313 1 111 1 86 1 
71 1 61 1 329 1 
235 1 71 1 61 1 
235 1 174 1 120 1 71 3 329 2 85 1 
235 1 174 1 120 1 71 2 329 1 19 1 
235 1 174 2 120 1 71 2 329 1 
44 4 35 1 186 1 48 1 153 1 190 1 261 1 285 1 330 1 93 1 306 1 55 1 78 1 293 1 311 2 270 1 244 5 98 1 295 1 246 2 145 5 230 1 251 2 322 1 126 2 178 1 66 1 181 1 18 1 33 1 
44 7 47 1 186 1 48 4 282 1 190 4 261 3 285 1 330 2 93 6 335 1 55 2 78 4 239 1 311 7 122 1 270 2 244 9 98 3 295 4 246 5 318 5 145 9 230 1 17 1 251 6 31 5 322 2 66 3 181 3 18 1 106 1 33 2 107 1 183 1 
44 2 48 1 153 1 38 1 190 1 261 1 330 1 195 1 55 1 78 1 57 1 293 1 311 2 122 1 270 1 244 3 81 1 295 1 98 1 163 1 82 1 246 2 144 1 145 3 250 1 251 2 322 1 126 1 127 1 255 1 254 1 18 1 181 1 66 1 33 1 
153 1 38 1 261 2 78 2 311 4 270 1 122 1 81 1 163 1 82 1 17 1 126 2 322 1 127 1 181 2 18 1 183 1 44 3 48 2 190 2 330 1 195 1 335 1 55 1 57 1 293 1 244 4 98 2 295 1 246 3 144 1 145 4 250 1 251 4 254 1 255 1 66 2 33 1 
339 1 
272 1 124 1 
214 1 
228 1 16 1 124 1 
59 1 124 1 
16 1 124 1 
269 1 228 1 16 1 328 1 26 2 124 3 
0 1 209 1 327 1 211 4 238 3 133 2 239 1 292 2 201 1 274 1 224 2 102 1 180 3 66 1 234 1 151 3 258 7 
0 1 209 1 327 1 211 4 238 3 133 2 265 2 239 1 292 2 201 1 274 1 224 2 102 1 180 3 66 1 234 1 151 5 258 7 
0 1 209 1 327 1 211 4 238 3 133 2 239 1 292 2 201 1 60 1 274 1 224 2 102 1 180 3 66 1 234 1 151 3 258 7 
0 1 36 1 327 1 209 1 1 1 114 2 39 1 211 20 238 13 133 3 265 6 308 4 42 1 239 2 199 2 292 3 201 1 10 4 243 2 98 4 274 1 223 2 224 3 13 2 102 2 170 1 229 1 15 1 65 1 180 4 181 4 66 5 345 4 106 1 234 2 151 10 258 33 
132 1 0 1 327 1 114 2 211 5 238 4 2 1 133 2 265 1 239 1 199 1 292 2 201 1 243 2 274 1 223 2 224 2 13 2 102 1 66 1 345 4 180 4 234 1 151 5 258 9 
45 1 324 1 235 1 49 1 91 1 71 2 210 1 191 1 50 1 329 1 115 1 53 1 215 1 216 1 217 1 95 2 41 1 7 1 58 1 28 1 61 1 248 1 85 1 43 1 321 1 103 1 342 2 148 1 257 1 185 1 
45 1 324 1 235 1 91 1 71 2 210 1 191 1 50 1 329 1 115 1 117 1 53 1 215 1 216 1 217 1 95 3 41 1 7 2 58 1 28 1 61 1 248 1 85 1 321 1 342 3 208 1 233 1 148 1 257 1 185 1 
45 1 324 1 235 1 91 1 71 2 210 1 191 1 50 1 115 1 329 1 117 1 53 1 217 1 95 2 41 1 7 2 58 1 248 1 61 1 85 1 321 1 342 2 233 1 148 1 257 1 
324 2 112 1 91 1 210 2 50 1 115 1 53 1 40 1 158 1 95 1 160 1 41 2 138 1 58 1 28 1 248 2 124 1 30 1 342 1 231 1 208 1 16 1 185 1 
45 1 324 1 235 1 91 1 71 2 210 1 50 1 329 1 115 1 117 1 53 1 215 1 216 1 95 1 41 1 58 1 28 1 61 1 248 1 85 1 43 1 103 1 342 1 148 1 257 1 185 1 
320 1 
261 2 213 1 263 1 5 2 76 2 309 1 79 1 9 1 163 1 164 1 317 1 82 1 276 1 322 1 18 1 128 1 182 3 184 2 20 1 186 1 189 1 285 2 330 1 93 5 55 1 290 1 244 4 295 1 297 1 246 1 144 1 145 4 205 1 64 5 207 1 250 1 147 1 251 1 343 1 344 2 256 3 346 3 
20 1 186 1 189 1 261 2 285 2 330 1 213 1 263 1 93 5 5 2 55 1 76 2 309 1 290 1 79 1 9 1 244 4 295 1 163 1 297 1 246 1 82 1 317 1 164 1 276 1 205 1 145 4 144 1 64 5 250 1 207 1 147 1 251 1 343 1 322 1 344 2 18 1 128 1 256 3 182 3 184 2 346 3 
20 1 186 1 22 1 189 1 285 2 213 1 330 1 93 4 263 1 5 2 55 1 77 2 309 1 79 1 311 2 9 1 244 4 295 1 163 1 245 2 246 1 317 1 82 1 275 1 276 1 145 4 144 1 64 4 250 1 207 1 147 1 251 1 343 1 322 1 18 1 256 2 182 2 346 2 184 2 
261 2 115 2 213 1 263 1 40 1 5 2 266 1 76 2 309 1 79 1 311 2 9 1 312 1 270 1 163 1 314 1 317 1 82 1 276 1 124 1 231 1 16 1 322 1 18 1 182 2 184 2 20 1 186 1 22 1 189 1 91 1 285 3 50 1 330 1 93 6 53 2 55 1 58 2 244 5 295 2 297 1 246 2 204 1 145 5 144 1 64 4 30 2 250 1 207 1 147 1 251 2 343 1 344 2 256 2 346 2 
20 1 271 1 244 3 163 1 189 1 317 1 82 1 285 1 276 1 213 1 93 2 144 1 145 3 263 1 64 2 207 1 250 1 147 1 309 1 256 1 79 1 9 1 
20 1 189 1 285 1 213 1 93 1 263 1 309 1 79 1 9 1 271 1 244 3 163 1 82 1 317 1 246 1 276 1 145 3 144 1 64 3 250 1 207 1 147 1 18 1 182 1 
20 1 189 1 285 1 213 1 263 1 93 2 309 1 79 1 9 1 271 1 244 3 163 1 82 1 317 1 246 1 276 1 145 3 144 1 64 3 250 1 207 1 147 1 18 1 256 1 182 1 346 1 
261 2 213 1 263 1 5 2 76 2 309 1 79 1 9 1 271 1 163 1 317 1 82 1 164 1 276 1 322 1 18 5 128 1 182 4 184 2 20 1 186 1 325 1 189 1 285 3 330 1 93 7 55 1 290 1 244 5 295 1 297 1 246 5 144 1 145 5 205 1 64 6 207 1 250 1 147 1 251 1 343 1 344 2 256 4 346 4 
20 1 186 1 22 1 189 1 261 2 285 2 213 1 330 1 93 4 263 1 5 2 55 1 76 2 309 1 79 1 311 2 9 1 244 4 295 1 163 1 297 1 246 2 317 1 82 1 276 1 145 4 144 1 64 4 250 1 207 1 147 1 251 1 343 1 322 1 344 2 18 1 256 2 182 2 346 2 184 2 
20 1 186 1 189 1 261 2 285 2 213 1 330 1 93 4 263 1 5 2 55 1 76 2 309 1 290 1 79 1 9 1 244 4 295 1 163 1 297 1 246 1 82 1 317 1 276 1 205 1 145 4 144 1 64 4 250 1 207 1 147 1 251 1 343 1 322 1 344 2 18 1 256 2 128 1 182 2 346 2 184 2 
20 1 186 1 189 1 261 2 285 2 213 1 330 1 93 4 263 1 5 2 55 1 76 2 309 1 290 1 79 1 9 1 244 4 295 1 163 1 297 1 246 1 82 1 317 1 276 1 205 1 145 4 144 1 64 4 250 1 207 1 147 1 251 1 343 1 322 1 344 2 18 1 256 2 128 1 182 2 346 2 184 2 
20 1 259 1 186 1 189 1 285 2 213 1 330 1 93 4 263 1 5 2 55 1 77 2 309 1 79 1 311 2 9 1 244 4 295 1 163 1 245 2 246 1 275 1 82 1 317 1 276 1 205 1 145 4 144 1 249 1 64 4 250 1 207 1 147 1 251 1 343 1 322 1 18 1 256 2 182 2 346 2 184 2 
243 1 236 1 253 1 114 1 345 2 136 1 223 1 13 1 339 1 
236 1 70 1 260 1 114 2 155 1 211 8 238 6 265 1 52 1 308 3 196 1 239 1 161 11 10 3 243 2 98 2 340 3 223 2 101 1 13 2 170 1 15 1 229 1 253 2 232 11 345 4 88 1 181 2 66 2 106 1 151 1 258 14 
236 1 260 1 326 1 38 1 91 1 114 1 50 1 211 1 115 1 238 1 264 1 53 1 52 1 267 1 159 1 294 1 58 1 243 1 340 1 163 2 165 1 82 1 223 1 124 1 101 1 13 1 228 1 63 1 30 1 250 2 16 1 176 1 177 1 253 1 127 1 88 1 345 2 258 2 
302 2 0 1 260 1 38 1 114 3 211 10 115 1 264 2 119 2 267 2 159 1 268 2 161 5 163 3 274 1 82 1 223 3 167 2 224 2 124 2 13 3 228 2 176 1 16 2 232 5 127 1 180 3 88 1 181 2 46 1 236 3 327 1 91 2 50 2 238 6 133 1 52 1 53 1 288 1 239 1 292 2 201 1 58 1 243 3 98 2 296 2 340 5 101 2 63 2 30 1 250 3 253 3 345 6 66 3 151 3 258 16 
236 2 260 1 49 1 38 1 91 2 114 2 284 1 50 2 211 1 73 2 115 8 238 1 117 1 53 8 52 1 118 1 135 1 40 1 218 1 136 1 162 1 58 7 243 2 163 1 82 1 223 2 124 3 168 1 13 2 250 1 30 2 231 1 176 1 16 2 253 2 127 1 345 4 323 1 258 2 
236 1 38 1 114 1 211 1 291 1 243 1 98 1 163 1 82 1 223 1 225 1 13 1 250 1 253 1 255 1 127 1 345 2 88 1 181 1 66 1 258 1 
243 1 236 1 98 1 340 1 114 1 223 1 211 2 13 1 265 1 232 1 253 1 105 1 136 1 345 2 66 1 161 1 151 1 258 2 
243 1 236 1 340 1 114 1 166 1 223 1 238 2 13 1 232 1 253 1 180 1 136 1 345 2 161 1 106 1 239 1 151 1 258 2 
243 1 236 1 98 1 340 1 114 1 223 1 211 2 13 1 232 1 253 1 136 1 345 2 181 1 66 1 161 1 258 2 
243 1 236 1 98 1 340 1 114 1 223 1 211 2 13 1 265 1 135 1 232 1 253 1 105 1 345 2 66 1 161 1 151 1 258 2 
243 1 236 1 340 1 114 1 166 1 223 1 238 2 13 1 135 1 232 1 253 1 180 1 345 2 161 1 106 1 239 1 151 1 258 2 
243 1 236 1 98 1 340 1 114 1 223 1 211 2 13 1 135 1 232 1 253 1 345 2 181 1 66 1 161 1 258 2 
243 1 236 1 98 1 340 1 114 1 223 1 211 2 13 1 232 1 253 1 345 2 181 1 66 1 161 1 258 2 
302 1 236 1 260 1 91 1 114 1 211 1 50 1 115 1 238 1 264 1 53 1 52 1 267 1 58 1 243 1 163 1 223 1 124 1 101 1 13 1 228 1 63 1 30 1 250 1 16 1 253 1 345 2 258 2 
236 1 260 1 91 1 114 1 211 1 50 1 212 1 115 1 238 1 264 1 53 1 52 1 121 1 58 1 243 1 163 1 223 1 124 1 101 1 13 1 228 1 30 1 250 1 279 1 16 1 253 1 345 2 258 2 
243 1 236 1 98 1 340 1 114 1 223 1 211 2 13 1 232 1 253 1 88 1 345 2 181 1 66 1 161 1 258 2 
302 1 236 1 49 1 91 1 114 1 211 2 50 1 115 1 264 1 53 1 267 1 268 1 161 1 58 1 243 1 98 1 340 1 163 1 223 1 124 1 13 1 228 1 63 1 250 1 16 1 232 1 253 1 66 1 345 2 181 1 258 2 
236 1 38 1 114 1 211 2 238 1 239 1 161 1 200 1 243 1 98 1 163 1 82 1 223 1 225 1 13 1 250 1 253 1 232 1 255 1 127 1 345 2 88 1 181 1 66 1 106 1 258 3 
114 2 23 1 157 1 211 22 238 12 51 1 286 1 2 1 265 5 4 1 75 1 308 4 337 3 24 1 198 1 239 2 220 1 10 4 243 2 123 1 98 7 223 2 203 1 13 2 171 1 170 2 15 2 229 2 345 4 181 7 66 7 106 2 67 1 151 5 258 34 
114 2 23 1 157 1 211 22 238 12 51 1 286 1 2 1 265 5 4 1 75 1 308 4 337 3 24 1 198 1 239 2 220 1 10 4 243 2 123 1 98 7 223 2 203 1 13 2 171 1 170 2 15 2 229 2 345 4 181 7 66 7 106 2 67 1 151 5 258 34 
0 1 327 1 114 1 23 1 157 1 211 25 238 12 51 1 133 1 286 1 2 1 265 6 75 1 308 4 337 3 24 1 198 1 239 2 220 1 292 1 10 4 243 1 123 1 98 7 274 1 223 1 224 1 203 1 13 1 171 1 170 2 15 2 229 2 180 1 345 2 181 7 66 8 106 1 67 1 151 7 258 37 
114 2 23 1 157 1 211 21 238 9 51 1 286 1 2 1 265 5 4 1 75 1 308 4 337 2 24 1 198 1 239 1 10 4 243 2 123 1 98 7 223 2 203 1 100 1 13 2 171 1 170 2 15 2 229 2 345 4 181 7 66 7 106 1 67 1 151 5 258 30 
114 1 23 1 157 2 211 9 238 7 51 2 2 1 286 1 75 1 308 2 337 2 24 1 198 1 239 1 220 1 10 2 243 1 123 1 98 2 223 1 203 1 13 1 171 1 15 2 345 2 181 2 66 2 106 1 67 1 258 16 
236 1 260 1 91 1 114 1 50 1 211 1 73 2 115 2 238 1 53 2 52 1 118 1 74 1 58 2 243 1 163 2 141 1 82 2 223 1 124 1 83 1 13 1 227 1 250 2 16 1 125 1 253 1 88 1 345 2 323 1 258 2 
235 1 49 1 91 1 71 2 61 1 50 1 248 1 329 1 115 2 85 1 117 1 29 1 53 2 226 1 334 1 216 1 148 1 257 1 58 2 
235 1 91 1 71 2 61 1 248 1 50 1 329 1 115 1 85 1 117 1 53 1 334 1 216 1 148 1 257 1 58 1 242 1 
91 1 50 1 124 1 248 1 115 1 206 1 53 1 226 1 40 1 30 1 231 1 16 1 138 1 58 1 
235 1 91 1 71 2 61 1 50 1 248 1 329 1 115 1 85 1 117 1 29 1 53 1 226 1 334 1 216 1 148 1 257 1 58 1 
8 1 
302 1 236 1 38 2 91 1 114 1 50 1 238 1 115 1 264 1 52 1 53 1 267 1 58 1 243 1 81 1 163 3 82 2 223 1 124 1 101 1 13 1 63 1 228 1 30 1 250 3 16 1 253 1 127 2 255 2 345 2 258 1 130 1 
270 1 186 1 48 2 295 1 190 2 261 2 246 4 330 1 204 1 133 1 251 2 55 1 322 1 18 2 311 4 
339 1 
244 1 186 1 295 1 297 1 246 2 261 1 285 1 330 1 145 1 93 1 251 1 55 1 322 1 76 1 344 1 18 1 311 1 
261 4 115 1 305 2 307 1 311 9 270 2 269 1 272 3 124 6 84 1 169 1 228 1 16 1 322 3 18 1 181 2 186 3 48 5 189 2 190 5 91 1 285 3 50 2 330 3 93 5 53 1 55 3 289 2 26 2 239 1 58 1 244 5 295 6 98 2 296 2 246 5 204 1 145 5 30 1 251 7 66 2 106 1 68 2 150 2 347 2 108 2 
186 1 48 3 190 3 261 2 23 1 330 1 286 1 308 1 55 1 24 1 198 1 311 4 10 1 123 1 295 2 98 2 246 2 15 1 251 4 322 1 181 2 66 2 
244 1 186 1 143 1 224 1 330 1 145 1 55 1 322 1 128 1 292 1 201 1 
186 1 295 1 304 1 154 1 246 1 330 1 251 1 55 1 322 1 18 1 
98 1 48 1 190 1 261 1 246 1 251 2 181 1 66 1 311 2 
244 1 246 1 18 1 285 1 145 1 93 1 
186 1 91 1 156 1 285 2 50 1 192 1 115 4 330 2 92 1 93 4 53 4 40 1 266 1 55 2 58 4 122 1 270 2 244 3 295 2 314 1 319 2 124 1 204 2 145 3 30 2 231 1 16 1 251 2 322 2 
94 1 86 1 
94 1 86 1 
94 1 86 1 
94 1 86 1 
94 1 86 1 
94 1 86 1 
94 1 86 1 
94 1 86 1 
111 1 
0 1 327 1 114 2 211 5 238 5 265 2 133 1 239 1 199 1 292 2 201 1 243 2 274 1 223 2 224 2 13 2 345 4 180 3 66 1 151 5 258 10 
339 1 
243 1 98 1 114 1 223 1 211 2 13 1 333 1 345 2 181 1 66 1 258 2 
10 2 98 2 211 6 238 2 265 2 170 1 15 1 229 1 308 2 181 2 66 2 151 2 258 8 
70 1 0 1 327 1 114 1 211 9 238 5 133 1 265 1 308 2 239 1 199 1 292 2 201 1 10 2 243 1 98 2 274 1 223 1 224 2 13 1 170 1 229 1 180 3 66 3 181 2 345 2 151 4 258 14 
10 1 238 1 258 1 
308 1 211 1 258 1 
98 1 296 1 211 3 238 1 265 1 181 1 66 1 151 1 258 4 
114 1 23 1 211 6 238 2 2 1 286 1 265 1 308 1 24 1 198 1 10 1 243 1 123 1 98 2 223 1 13 1 15 1 345 2 181 2 66 2 151 1 258 8 
327 1 180 1 66 1 224 1 239 1 211 3 238 3 292 1 151 2 265 1 258 6 
243 1 0 1 274 1 114 1 223 1 211 1 224 1 238 2 13 1 265 1 180 1 345 2 42 1 199 1 292 1 151 2 258 3 
0 1 327 1 114 1 211 4 238 4 133 1 2 1 308 1 239 1 292 2 201 1 10 1 243 1 123 1 274 1 223 1 224 2 13 1 15 1 66 1 345 2 180 3 151 3 258 8 
114 2 23 1 211 11 238 9 286 1 2 1 265 2 333 1 308 2 24 1 198 1 239 3 10 2 243 2 123 1 98 4 223 2 13 2 170 1 15 1 229 1 345 4 181 4 66 4 106 3 151 2 258 20 
114 2 23 1 211 6 238 2 2 1 286 1 265 1 333 1 308 1 24 1 198 1 10 1 243 2 123 1 98 2 223 2 13 2 15 1 345 4 181 2 66 2 151 1 258 8 
114 2 23 1 211 6 238 4 2 1 286 1 333 1 308 1 24 1 198 1 239 1 10 1 243 2 123 1 98 2 223 2 13 2 15 1 345 4 181 2 66 2 106 1 258 10 
0 1 327 1 114 1 211 4 238 4 133 1 2 1 308 1 239 1 292 2 201 1 10 1 243 1 123 1 274 1 223 1 224 2 13 1 15 1 66 1 345 2 180 3 151 3 258 8 
114 1 23 1 211 6 238 2 2 1 286 1 265 1 308 1 24 1 198 1 10 1 243 1 123 1 98 2 223 1 13 1 15 1 345 2 181 2 66 2 151 1 258 8 
114 2 23 1 211 6 238 4 2 1 286 1 333 1 308 1 24 1 198 1 239 1 10 1 243 2 123 1 98 2 223 2 13 2 15 1 345 4 181 2 66 2 106 1 258 10 
114 2 23 1 211 6 238 4 2 1 286 1 265 1 4 1 308 1 24 1 198 1 239 1 10 1 243 2 123 1 98 2 223 2 13 2 15 1 345 4 181 2 66 2 106 1 151 1 258 10 
0 1 274 2 327 1 224 3 211 3 238 4 265 3 180 3 66 1 239 1 292 3 151 6 258 7 
114 2 23 1 211 6 238 4 2 1 286 1 4 1 308 1 24 1 198 1 239 1 10 1 243 2 123 1 98 2 223 2 13 2 15 1 345 4 181 2 66 2 106 1 258 10 
180 1 224 1 292 1 151 1 201 1 
243 1 98 1 114 1 223 1 211 2 13 1 2 1 265 1 345 2 66 1 151 1 258 2 
243 1 98 1 114 1 223 1 211 2 238 2 13 1 2 1 265 1 345 2 181 1 66 1 239 1 106 1 151 1 258 4 
243 3 114 3 223 3 224 1 211 1 238 2 13 3 2 1 265 1 4 1 345 6 180 1 42 1 199 1 292 1 151 2 258 3 
0 1 36 1 327 1 114 4 39 1 211 12 238 10 133 1 2 1 265 3 4 1 333 1 308 3 239 2 199 1 292 2 201 1 10 3 243 4 98 2 274 1 223 4 224 2 13 4 15 1 65 1 180 3 345 8 181 2 66 3 106 1 151 6 258 22 
20 1 152 1 287 1 250 1 163 1 82 1 101 1 
20 1 152 1 163 1 99 1 237 1 82 1 101 1 287 1 250 1 301 1 25 1 34 1 
53 1 30 1 115 1 339 1 58 1 
163 2 38 1 82 1 91 1 124 1 50 1 115 1 101 1 264 1 53 1 228 1 250 2 30 1 267 1 16 1 176 1 127 1 58 1 
38 1 91 1 90 1 50 1 115 1 264 1 53 1 267 1 58 1 59 1 163 2 82 2 319 1 124 3 101 1 144 1 228 2 250 2 207 1 147 1 176 1 16 2 127 2 
131 1 38 1 91 1 90 1 50 1 212 1 115 2 264 1 53 2 58 2 59 1 163 2 82 2 319 1 124 3 101 1 144 1 228 2 250 2 207 1 147 1 176 1 16 2 127 2 
131 1 189 1 91 1 90 1 50 1 115 3 193 1 93 1 53 3 26 1 310 1 58 3 59 1 272 1 244 2 246 1 319 1 124 4 145 2 228 1 30 1 16 1 18 1 
131 1 59 1 244 2 272 1 189 1 246 1 90 1 91 1 319 1 50 1 124 4 115 3 145 2 93 1 53 3 228 1 30 1 16 1 18 1 26 1 68 1 58 3 
53 1 218 1 91 1 50 1 115 1 58 1 
269 1 110 1 49 1 91 2 284 1 73 1 124 3 50 3 168 1 115 7 117 1 14 1 53 7 228 1 218 1 30 2 146 1 16 2 323 1 162 1 58 6 
302 1 0 1 38 1 114 2 211 3 115 1 264 1 267 1 268 1 161 1 163 2 274 1 82 1 167 1 223 2 124 1 224 2 13 2 227 1 228 1 176 1 16 1 232 1 127 1 88 1 180 3 236 2 49 1 327 1 91 1 50 1 238 3 133 1 53 1 239 1 292 2 201 1 58 1 243 2 340 1 101 2 63 1 250 2 253 2 345 4 66 1 151 3 258 6 
44 1 186 2 189 1 154 1 304 1 285 1 115 1 330 2 92 1 305 1 93 2 53 1 55 2 289 1 26 1 58 1 244 3 272 1 295 1 246 1 124 2 145 3 30 1 251 1 322 2 18 1 68 1 347 1 
269 1 49 1 91 1 124 2 50 2 115 2 84 1 53 2 228 1 218 1 16 1 26 1 58 2 
131 1 49 1 91 1 50 1 124 1 115 4 53 4 332 1 40 1 30 1 231 1 16 1 58 4 
110 1 315 1 91 1 319 1 124 1 50 2 115 2 53 2 278 1 228 1 336 1 146 1 16 1 58 2 
53 1 235 1 30 1 91 1 71 1 61 1 50 1 257 1 115 1 58 1 
53 2 74 1 16 1 49 1 91 1 50 1 124 1 323 1 115 2 117 1 58 2 
49 1 91 2 284 1 319 1 124 3 50 2 115 5 168 1 53 5 332 1 40 1 231 1 30 1 16 2 323 1 58 4 
222 1 49 1 91 2 284 1 319 1 124 3 50 2 115 5 53 5 332 1 40 1 231 1 30 1 16 2 323 1 58 4 
163 2 38 1 82 1 91 1 124 1 50 1 115 1 212 1 101 1 264 1 53 1 228 1 250 2 30 1 16 1 176 1 127 1 58 1 
269 1 110 1 91 1 319 1 124 1 50 2 115 1 14 1 53 1 228 1 146 1 16 1 58 1 
187 1 197 1 27 1 341 1 101 1 
44 1 244 2 11 1 187 2 189 1 246 1 341 2 27 2 101 1 144 1 145 2 207 1 147 1 175 1 197 1 56 1 18 1 79 1 221 1 
250 1 163 1 125 1 141 1 187 1 197 1 82 1 341 1 83 1 
11 1 197 1 221 1 
28 1 191 1 331 1 321 1 103 1 342 3 217 1 95 3 7 1 89 1 185 1 
321 1 280 1 137 1 241 1 
321 1 217 1 
339 1 
321 1 217 1 342 1 95 1 28 1 191 1 185 1 
342 1 41 1 210 1 
321 1 103 1 217 1 342 3 95 3 273 1 28 1 202 1 191 1 89 2 277 1 185 1 
321 1 217 1 342 2 95 2 28 1 191 1 7 1 299 1 185 1 
28 1 71 1 61 1 329 1 321 1 103 1 342 1 95 1 338 1 137 1 185 1 
321 1 103 1 217 1 342 1 95 1 28 1 185 1 
103 1 217 2 342 1 95 1 28 1 191 1 185 1 
28 2 116 1 321 1 103 1 217 1 342 2 6 1 95 2 139 1 185 2 
28 1 191 1 298 1 331 1 321 2 103 1 217 1 342 3 95 3 280 1 137 1 7 2 185 1 
235 1 71 2 28 1 191 1 61 1 329 1 85 1 321 1 103 1 300 1 217 1 342 2 95 2 7 1 185 1 
28 2 191 1 299 1 321 2 103 1 54 1 217 1 342 4 95 4 280 1 137 1 7 2 185 2 
321 1 103 1 217 1 342 1 95 1 28 1 191 1 185 1 
28 1 202 1 191 2 277 1 321 3 217 2 342 4 95 4 280 1 137 1 7 2 89 1 241 1 185 1 
303 1 28 1 191 1 321 1 103 1 217 1 342 2 95 2 252 1 7 1 240 1 185 1 
321 1 172 1 103 1 217 1 342 3 95 3 28 1 202 1 191 1 89 2 277 2 185 1 
321 2 247 1 129 1 149 2 
103 1 342 1 95 1 28 1 262 1 185 1 
321 1 103 1 217 1 342 2 95 2 28 1 191 1 7 1 331 1 185 1 
80 1 
321 1 103 1 217 1 342 1 95 1 28 1 191 1 185 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (56,341) (56,341) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (135,194) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (135,194) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (135,194) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (135,194) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (135,194) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (135,194) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (135,194) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (135,194) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (135,194) 100 257 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (135,194) 100 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (37,96,122) (50,229,267) (50,229,267) (50,229,267) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (37,96,122) (50,229,267) (50,229,267) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (37,96,122) (50,229,267) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (37,96,122) (50,229,267) (50,229,267) (50,229,267) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (37,96,122) (37,96,122) (37,96,122) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (37,96,122) (37,96,122) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (37,96,122) (37,96,122) (37,96,122) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 253 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
66 1 169 1 123 2 337 9 127 2 275 1 215 1 103 1 174 2 52 9 7 2 8 2 176 1 278 2 343 6 203 1 222 3 262 4 281 1 325 1 112 1 84 1 348 1 113 1 206 5 22 2 148 1 252 1 
66 1 169 1 123 2 337 9 127 2 275 1 215 1 103 1 174 2 52 9 7 2 8 2 176 1 278 2 343 6 203 1 222 3 262 4 281 1 325 1 112 1 84 1 348 1 113 1 206 5 22 2 148 1 252 1 
66 1 169 1 123 2 337 10 127 2 275 1 215 1 103 1 174 2 52 10 7 2 8 2 176 1 278 2 343 7 203 1 222 4 262 5 281 1 325 1 112 1 84 1 348 1 113 1 206 6 22 2 148 1 252 1 
66 1 169 1 123 2 337 7 127 2 275 1 215 1 103 1 174 2 52 7 7 2 8 1 176 1 278 2 343 4 203 1 222 2 262 3 281 1 112 1 84 1 348 1 113 1 206 4 22 2 148 1 252 1 
325 1 123 1 112 1 113 1 337 4 206 3 127 1 275 1 174 1 22 1 7 1 52 4 8 2 176 1 343 3 222 1 281 1 262 2 
22 1 174 1 169 1 52 1 341 1 278 1 25 1 113 1 337 1 56 1 
112 1 113 1 337 3 206 2 174 2 22 2 52 3 176 1 278 1 343 1 203 1 222 1 262 1 
66 1 123 1 337 9 127 1 275 1 103 1 174 2 259 1 52 9 7 1 8 2 176 1 278 1 343 7 222 3 203 1 80 1 262 4 281 1 325 1 112 1 113 1 206 5 22 2 
66 1 123 1 337 9 127 1 275 1 103 1 174 2 259 1 52 9 7 1 8 2 176 1 278 1 343 7 222 3 203 1 80 1 262 4 281 1 325 1 112 1 113 1 206 5 22 2 
54 1 141 1 344 1 
9 2 141 1 330 1 
179 1 217 2 255 1 312 2 2 2 102 2 44 2 129 2 
288 2 311 1 1 1 255 1 291 1 232 1 97 1 312 2 171 1 2 2 98 1 234 2 339 1 102 3 129 2 49 1 217 2 236 1 342 1 179 1 14 1 324 2 161 1 163 1 85 1 60 2 186 1 304 1 23 2 92 1 42 1 149 1 271 1 120 1 354 1 26 1 44 3 
217 1 255 1 91 1 312 1 2 1 162 1 102 1 71 1 44 1 129 1 
160 1 204 1 2 1 141 1 102 1 20 1 116 1 71 1 73 1 187 1 54 1 250 1 269 1 44 1 
204 1 312 1 2 1 141 1 102 1 116 2 20 1 129 1 71 1 217 1 73 1 187 1 54 1 269 2 44 1 
28 1 89 1 17 1 269 1 116 1 
16 1 89 1 136 1 54 1 141 1 17 1 269 2 116 2 
17 1 269 1 116 1 
255 1 312 1 162 1 2 1 70 1 102 1 116 1 71 1 129 1 217 1 89 1 91 1 269 1 44 1 
141 1 
16 1 32 1 89 1 54 1 141 1 17 1 269 2 116 2 
345 1 16 1 346 1 256 2 68 1 141 1 17 2 116 5 166 2 199 1 89 2 296 1 219 1 78 1 54 1 269 5 320 2 178 1 121 1 
179 1 254 1 160 1 312 4 181 1 2 5 102 5 129 4 303 1 207 2 217 1 276 1 209 1 44 5 
91 1 312 2 2 2 334 1 102 2 71 1 44 2 129 2 
288 1 311 1 193 1 1 1 232 1 171 1 312 1 161 1 2 1 234 1 102 2 129 1 276 1 207 1 236 1 23 1 342 1 149 1 120 1 44 2 
179 1 344 1 
179 2 254 1 312 1 2 2 102 2 129 1 105 1 217 1 44 2 
193 1 317 1 114 1 
179 1 288 1 322 1 311 1 232 1 1 1 171 1 161 1 234 1 102 1 236 1 23 1 342 1 149 1 120 1 44 1 
179 1 217 1 207 1 312 3 2 3 102 3 44 3 129 3 
91 1 312 1 2 1 102 1 71 1 44 1 129 1 
254 1 105 1 217 1 312 1 2 1 102 1 71 1 44 1 129 1 
288 1 254 1 311 1 1 1 232 1 291 1 255 1 97 1 171 1 312 3 272 1 2 3 234 1 102 4 129 3 71 1 217 2 276 1 73 1 236 1 342 1 179 1 204 1 324 2 161 1 85 1 60 1 20 1 116 1 207 1 186 1 304 1 23 1 92 1 42 1 187 1 149 1 269 1 271 1 120 1 354 1 26 1 212 1 44 4 
179 1 303 1 207 1 160 1 312 1 2 2 102 2 44 2 129 1 
254 1 204 1 312 3 2 3 141 1 143 1 102 3 116 1 20 1 71 1 129 3 217 1 276 1 207 2 73 1 187 1 269 1 44 3 212 1 
254 1 193 1 312 2 2 2 114 1 102 2 129 2 207 1 217 1 44 2 
179 1 288 1 311 1 232 1 1 1 171 1 161 1 234 1 102 1 236 1 23 1 342 1 149 1 120 1 44 1 
179 1 288 1 311 1 232 1 1 1 138 1 171 1 161 1 234 1 102 1 284 1 23 1 342 1 149 1 44 1 
193 2 97 1 29 1 218 1 317 2 298 1 318 1 137 1 301 1 324 2 83 1 163 2 140 1 85 2 114 2 60 4 302 1 304 1 92 1 151 1 271 1 354 1 26 1 287 1 
73 1 312 1 2 1 102 1 334 1 71 1 44 1 129 1 
194 1 86 1 
194 1 86 1 
88 1 135 1 
88 1 135 1 
88 1 135 1 
194 1 86 1 
194 1 86 1 
194 1 86 1 
194 1 86 1 
194 1 86 1 
194 1 86 1 
194 1 86 1 
194 1 86 1 
194 1 175 1 100 1 86 1 269 1 257 1 116 1 
194 1 175 1 100 1 86 1 
7 1 123 1 127 1 
25 1 
25 1 
25 1 
25 1 
67 1 29 1 156 1 256 1 214 1 124 2 51 1 199 3 9 3 219 2 220 2 318 1 54 1 79 1 320 1 345 1 16 1 159 1 263 1 83 1 17 1 141 2 87 1 330 1 116 5 166 1 89 4 119 1 269 5 151 1 64 1 63 2 
28 1 255 1 312 1 2 1 70 1 102 1 71 1 129 1 217 1 54 1 221 1 241 1 162 1 17 1 141 1 329 1 116 2 89 2 91 1 269 2 44 1 
67 1 29 1 256 1 124 1 214 1 199 3 219 2 9 4 220 2 318 1 54 1 79 1 320 1 159 1 263 1 83 1 141 3 330 2 116 3 166 1 89 2 119 1 269 3 151 1 121 1 63 2 
67 1 47 1 29 2 256 1 124 2 214 2 199 5 9 7 219 4 220 4 318 2 54 1 79 1 11 1 320 1 159 1 263 1 83 2 141 4 330 3 21 1 116 4 166 1 89 3 119 2 269 4 151 2 63 4 121 1 
1 1 342 1 149 1 
149 1 41 1 
333 1 149 1 344 1 
149 1 251 1 
145 1 
342 1 149 1 
1 1 333 2 342 1 149 3 61 1 5 1 
82 1 347 1 301 2 327 1 140 1 273 1 163 1 125 1 60 1 216 1 307 1 24 1 242 1 
82 1 347 1 301 2 327 1 140 1 273 1 163 1 125 1 60 1 216 1 307 1 24 1 242 1 
82 1 347 1 301 2 336 1 327 1 140 1 273 1 163 1 125 1 60 1 216 1 307 1 24 1 242 1 
97 1 29 3 273 2 214 3 125 1 216 1 173 4 200 1 202 3 318 3 242 2 82 5 347 2 224 1 301 9 324 2 327 2 83 3 163 13 140 4 85 12 60 25 248 1 227 1 24 1 307 2 92 1 188 1 189 1 167 1 151 3 354 1 26 1 
82 1 347 1 301 3 324 4 97 2 327 1 110 1 140 2 273 1 163 2 125 1 85 1 60 3 184 1 24 1 307 1 92 2 189 1 354 2 242 1 26 2 
288 1 232 1 171 1 113 1 234 1 337 1 340 1 349 1 315 1 249 1 229 1 50 1 174 1 22 1 332 1 52 1 278 1 23 1 201 1 267 1 25 1 96 1 
288 1 232 1 171 1 234 1 337 2 4 1 340 1 349 1 249 1 229 1 50 1 74 1 174 1 22 1 332 1 52 2 278 1 23 1 201 1 343 1 25 1 96 1 36 1 
288 1 232 1 171 1 234 1 337 1 340 1 349 1 249 1 50 1 74 1 52 1 23 1 201 1 278 1 343 1 25 1 96 1 36 1 
288 1 0 1 311 1 232 1 171 1 234 1 337 1 340 2 4 1 249 2 295 1 174 1 22 1 52 1 306 1 278 2 23 1 201 2 342 1 149 1 279 1 240 1 191 1 
288 1 232 1 171 1 113 1 234 1 337 1 340 1 349 1 249 1 229 1 50 1 174 1 22 1 332 1 52 1 278 1 23 1 201 1 267 1 25 1 96 1 36 1 
45 1 
0 1 310 2 311 2 232 1 195 1 99 2 2 1 234 2 102 1 199 2 9 2 54 1 320 1 57 1 243 1 321 1 58 4 16 3 160 1 204 1 247 2 328 2 17 6 59 1 19 1 330 2 116 5 20 1 166 1 23 2 250 1 288 2 27 1 171 1 256 1 130 2 71 1 73 1 295 1 219 2 342 1 34 1 345 1 139 1 263 1 141 2 350 2 231 2 352 1 305 1 187 1 149 1 269 5 94 1 44 1 
2 1 99 1 102 1 71 1 73 1 32 1 34 1 57 1 321 1 58 2 16 1 204 1 160 1 59 1 17 2 116 3 20 1 352 1 187 1 250 1 269 3 44 1 
2 1 102 1 71 1 73 1 32 1 34 1 54 1 57 1 321 1 58 3 16 1 204 1 160 1 328 1 17 1 59 1 141 1 116 3 20 1 352 1 187 1 250 1 269 3 44 1 
310 1 2 1 99 1 102 1 71 1 73 1 32 1 34 1 54 1 57 1 321 1 58 3 16 1 204 1 160 1 328 1 59 1 17 2 141 1 116 3 20 1 352 1 187 1 250 1 269 3 44 1 
310 4 99 4 2 1 102 1 6 1 199 1 54 5 320 1 57 1 58 6 321 1 16 3 15 1 204 1 160 1 247 2 328 4 17 7 59 1 330 2 20 1 116 5 166 1 250 1 27 1 256 1 71 1 130 2 73 1 32 1 219 1 34 1 261 1 345 1 141 5 350 2 230 1 231 2 352 1 187 1 353 1 269 5 94 1 44 1 
310 2 2 1 99 2 102 1 199 1 9 2 54 1 320 1 57 1 58 4 321 1 16 2 204 1 160 1 247 2 328 2 59 1 17 4 19 1 330 2 20 1 116 4 166 1 250 1 27 1 256 1 71 1 130 2 73 1 219 1 34 1 345 1 141 2 350 2 231 2 352 1 187 1 269 4 94 1 44 1 
310 2 27 1 256 1 99 2 2 1 102 1 130 2 71 1 73 1 6 1 199 1 219 1 54 1 34 1 261 1 320 1 57 1 321 1 58 4 345 1 16 2 204 1 160 1 247 2 328 2 141 1 17 4 59 1 330 2 116 4 20 1 350 2 231 2 166 1 352 1 187 1 353 1 250 1 269 4 94 1 44 1 
310 2 27 1 256 1 99 2 2 1 102 1 130 2 71 1 73 1 6 1 199 1 219 1 54 1 34 1 261 1 320 1 57 1 321 1 58 4 345 1 16 2 204 1 160 1 247 2 328 2 141 1 17 4 59 1 330 2 116 4 20 1 350 2 231 2 166 1 352 1 187 1 353 1 250 1 269 4 94 1 44 1 
310 2 27 1 155 2 256 1 99 2 2 1 338 1 102 1 71 1 73 1 316 1 199 1 9 2 219 1 54 1 34 1 320 1 57 1 321 1 58 4 345 1 16 2 204 1 160 1 328 2 141 1 17 4 59 1 116 4 20 1 350 2 146 1 231 2 166 1 352 1 187 1 353 1 250 1 269 4 95 2 44 1 
27 1 310 3 256 1 2 1 99 3 102 1 130 2 71 1 6 1 73 1 199 1 219 1 54 1 34 1 320 1 261 1 57 1 321 1 58 5 345 1 16 2 15 1 204 1 160 1 247 2 328 3 141 1 59 1 17 5 330 2 116 4 20 1 350 2 231 2 166 1 352 1 187 1 353 1 250 1 269 4 94 1 44 1 
27 1 310 3 256 1 2 1 99 3 102 1 130 2 71 1 6 1 73 1 199 1 219 1 54 1 34 1 320 1 261 1 57 1 321 1 58 5 345 1 16 2 15 1 204 1 160 1 247 2 328 3 141 1 59 1 17 5 330 2 116 4 20 1 350 2 231 2 166 1 352 1 187 1 353 1 250 1 269 4 94 1 44 1 
310 2 155 2 2 1 99 2 102 1 199 1 9 2 54 1 320 1 57 1 58 4 321 1 16 2 204 1 160 1 328 2 59 1 17 4 19 1 20 1 116 4 166 1 250 1 27 1 256 1 71 1 73 1 219 1 34 1 345 1 141 1 146 1 350 2 231 2 352 1 187 1 269 4 95 2 44 1 
301 1 324 2 97 1 327 1 140 1 125 1 304 1 24 1 92 1 271 1 354 1 344 1 242 1 287 1 26 1 
193 11 97 2 29 2 214 2 293 1 173 3 49 1 76 1 133 1 106 1 317 11 202 3 318 2 179 1 82 1 301 2 224 1 324 4 83 1 140 1 163 8 85 6 114 4 164 1 60 14 186 1 304 2 92 2 167 1 271 1 151 1 354 2 26 2 
288 1 311 1 153 1 1 1 232 1 97 1 171 1 312 1 2 1 234 1 274 1 102 2 129 1 49 1 276 1 236 1 342 1 179 1 322 1 324 2 161 1 163 1 264 1 114 1 85 1 164 1 60 2 207 1 304 1 186 1 23 1 92 1 149 1 120 1 271 1 354 1 26 1 44 2 
309 2 311 1 232 2 1 2 193 6 97 3 313 1 312 1 2 1 234 3 3 2 102 3 49 1 276 1 236 2 317 6 318 2 242 1 324 6 327 1 161 2 163 7 114 6 164 1 60 14 207 1 285 1 24 1 23 3 210 1 120 2 26 3 288 3 171 2 29 2 292 2 214 2 125 1 129 1 342 2 36 1 82 4 38 2 301 7 83 2 140 3 85 7 186 1 304 3 92 3 42 2 149 2 151 2 271 3 354 3 44 3 
288 8 0 1 311 2 232 2 97 2 154 1 312 1 171 2 2 1 234 7 102 1 315 1 129 1 49 1 104 1 295 1 297 1 342 2 36 1 14 2 245 1 324 4 283 1 163 1 85 1 60 2 144 1 182 1 207 1 304 2 186 1 23 8 92 2 149 3 271 2 354 2 287 1 44 1 26 2 
254 1 193 1 97 1 312 1 29 1 2 1 214 1 102 1 129 1 217 1 317 1 318 1 223 1 301 1 324 2 83 1 140 1 163 1 114 1 85 2 164 1 60 3 304 1 92 1 271 1 151 1 354 1 26 1 44 1 
82 1 193 1 301 1 324 2 97 1 29 1 163 2 114 1 60 2 304 1 317 1 298 1 92 1 318 1 271 1 354 1 287 1 26 1 
137 1 193 1 301 1 324 2 97 1 83 1 140 1 114 1 85 2 60 2 304 1 317 1 92 1 271 1 151 1 354 1 287 1 26 1 
193 2 97 1 29 1 214 1 317 2 318 1 82 1 301 2 324 2 83 1 163 2 140 1 114 2 85 2 60 4 304 1 92 1 271 1 151 1 354 1 26 1 287 1 
82 1 193 1 301 1 324 2 97 1 29 1 163 2 114 1 60 2 182 1 304 1 317 1 298 1 92 1 318 1 271 1 354 1 26 1 
137 1 193 1 301 1 324 2 97 1 83 1 140 1 114 1 85 2 60 2 182 1 304 1 317 1 92 1 271 1 151 1 354 1 26 1 
193 2 97 1 29 1 214 1 317 2 318 1 82 1 301 2 324 2 83 1 163 2 140 1 114 2 85 2 60 4 182 1 304 1 92 1 271 1 151 1 354 1 26 1 
82 1 193 2 301 2 324 2 97 1 29 1 83 1 140 1 214 1 163 2 85 2 114 2 60 4 304 1 317 2 92 1 318 1 151 1 271 1 354 1 26 1 
288 1 311 1 1 1 232 1 97 1 171 1 234 1 102 1 49 1 236 1 342 1 179 1 324 2 161 1 163 1 85 1 60 2 304 1 186 1 23 1 42 1 92 1 149 1 120 1 271 1 354 1 44 1 26 1 
288 1 311 1 1 1 232 1 97 1 171 1 234 1 102 1 49 1 342 1 179 1 138 1 324 2 161 1 163 1 111 1 85 1 60 2 284 1 304 1 186 1 23 1 92 1 149 1 271 1 354 1 44 1 26 1 
193 2 97 1 29 1 214 1 317 2 318 1 82 1 301 2 324 2 83 1 163 2 140 1 114 2 85 2 164 1 60 4 304 1 92 1 271 1 151 1 354 1 26 1 
288 1 309 1 193 2 1 1 232 1 97 1 29 1 171 1 214 1 234 1 102 1 315 1 236 1 317 2 318 1 342 1 82 1 301 2 324 2 83 1 161 1 140 1 163 2 85 2 114 2 60 4 304 1 23 1 42 1 92 1 149 1 151 1 120 1 271 1 354 1 44 1 26 1 
254 1 193 1 97 1 312 1 29 1 2 1 214 1 102 1 129 1 217 1 317 1 318 1 158 1 82 1 301 1 324 2 83 1 163 2 85 1 114 1 164 1 60 3 304 1 92 1 151 1 271 1 354 1 26 1 44 1 
289 2 97 2 29 3 214 3 314 1 173 2 197 1 294 1 33 1 202 1 318 3 10 1 157 1 82 3 180 1 224 1 301 6 324 4 83 3 140 3 163 9 85 10 60 19 184 1 92 2 211 2 167 1 151 3 354 2 26 2 
289 4 97 3 29 3 214 3 314 2 173 2 197 1 202 2 318 3 10 2 157 1 82 2 180 1 301 4 324 6 83 2 140 2 163 14 85 12 205 1 115 1 60 26 184 1 185 1 286 1 92 3 211 1 189 2 150 1 167 2 151 2 354 3 26 3 335 1 
97 3 314 2 197 1 318 4 202 3 10 1 242 1 157 1 324 6 327 1 163 17 205 1 115 1 60 36 286 1 24 1 211 1 167 3 26 3 335 1 289 4 29 4 214 4 125 1 69 1 173 4 294 1 82 4 180 1 301 7 224 1 83 4 140 3 85 19 184 1 185 1 92 3 150 1 189 1 151 4 354 3 
97 4 314 2 197 1 318 4 202 3 10 1 242 1 157 1 324 8 327 1 163 17 205 1 115 1 60 33 286 1 24 1 211 1 167 3 26 4 335 1 289 4 29 4 214 4 125 1 69 1 173 4 294 1 82 3 180 1 301 7 224 1 83 3 140 4 85 16 184 1 185 1 92 4 150 1 189 2 151 3 354 4 
289 4 97 2 29 7 214 7 125 1 314 1 173 4 197 1 76 2 202 4 318 7 10 1 242 1 157 1 82 7 180 1 224 2 301 13 324 4 327 1 83 7 140 6 163 24 205 1 85 23 115 1 60 47 184 1 185 1 24 1 286 1 92 2 211 1 189 1 150 1 167 2 151 7 354 2 335 1 26 2 
288 2 232 1 97 1 154 1 171 1 2 2 234 2 102 2 258 1 49 1 297 1 342 1 239 1 14 2 324 2 109 1 163 1 85 1 164 1 60 2 265 1 118 1 304 1 186 1 23 2 92 1 149 1 271 1 354 1 26 1 44 2 
288 2 37 1 232 1 122 1 171 1 234 2 340 1 315 1 349 1 75 1 332 1 23 2 25 1 36 1 96 1 
288 1 232 1 332 1 122 1 260 1 171 1 23 1 25 1 234 1 340 1 349 1 96 1 36 1 
288 1 0 1 311 1 232 1 171 1 234 1 340 1 198 1 295 1 75 1 23 1 342 1 149 1 240 1 
288 1 37 1 232 1 122 1 171 1 234 1 340 1 349 1 75 1 332 1 23 1 25 1 36 1 96 1 
280 1 
199 1 219 1 78 1 54 1 141 1 344 1 178 1 
256 1 130 1 199 1 219 1 9 1 54 1 320 1 345 1 16 1 247 1 141 2 17 1 330 1 116 1 166 1 269 1 94 1 
311 1 232 3 1 3 234 3 3 2 196 2 315 1 199 9 9 12 277 1 318 2 54 2 320 4 16 3 246 2 326 1 17 5 165 2 330 6 116 5 331 1 117 2 166 4 23 3 333 2 251 3 61 1 63 6 288 3 213 2 171 4 29 2 256 4 214 2 172 2 31 2 132 1 219 8 220 6 78 1 342 3 77 1 178 1 345 4 139 1 263 2 83 2 141 8 228 2 41 2 187 2 149 10 269 5 151 2 
29 2 256 2 214 2 173 1 31 1 199 8 9 6 219 5 220 5 202 1 318 2 54 2 320 2 345 2 16 1 139 1 263 1 40 1 83 2 17 1 141 5 205 1 18 1 330 3 116 1 117 2 166 2 185 1 286 1 150 1 269 1 167 1 151 2 63 5 335 1 
65 1 255 1 29 1 312 1 256 1 2 1 70 1 102 1 71 1 129 1 31 1 6 1 217 1 199 2 219 1 320 1 242 1 345 1 327 1 162 1 116 1 117 2 166 1 91 1 269 1 151 1 44 1 
345 1 256 1 141 1 166 1 199 1 219 1 78 1 54 1 320 1 178 1 
29 2 83 2 214 2 141 5 3 1 330 5 31 1 117 2 199 5 219 5 9 10 220 5 318 2 151 2 63 5 
16 1 54 1 141 1 17 1 269 1 116 1 
288 4 0 1 311 2 232 1 171 1 256 2 234 4 295 1 199 2 219 2 277 2 342 1 238 1 320 2 12 1 243 1 345 1 16 2 263 2 139 2 326 1 17 4 116 3 166 2 305 1 23 4 149 1 269 3 121 1 
288 1 311 1 255 1 291 1 232 1 1 1 97 1 312 2 171 1 2 2 234 1 102 3 129 2 217 2 236 1 342 1 179 1 324 2 161 1 85 1 60 1 186 1 304 1 23 1 92 1 42 1 149 1 120 1 271 1 354 1 44 3 26 1 
345 1 263 1 139 1 256 1 273 1 141 4 330 2 166 1 199 1 9 4 219 2 220 2 54 2 320 1 63 2 
13 1 81 1 237 1 
13 1 290 1 81 1 39 1 30 1 
13 1 81 1 237 1 
13 1 81 1 237 1 
13 1 308 1 81 1 
13 1 308 1 81 1 
13 1 308 1 81 1 
13 1 81 1 
194 1 86 1 
82 1 301 2 324 4 97 2 327 1 163 1 140 1 85 1 125 1 60 2 24 1 92 2 189 1 354 2 26 2 242 1 
301 1 327 1 24 1 140 1 125 1 344 1 242 1 
82 1 301 2 324 2 97 1 29 1 83 1 140 1 214 1 163 2 85 2 60 4 177 1 92 1 318 1 151 1 354 1 26 1 
82 1 224 1 301 2 29 1 83 1 140 1 163 3 214 1 85 4 60 7 173 2 202 1 318 1 167 1 151 1 
65 1 97 2 29 3 273 1 214 2 125 1 173 2 76 1 133 1 318 2 202 2 242 4 82 5 224 1 301 11 324 4 327 4 83 2 163 13 140 6 85 14 60 27 183 1 208 1 24 1 92 2 189 2 151 3 354 2 26 2 
85 1 60 1 173 1 
202 1 163 1 60 1 
82 1 301 3 97 1 324 2 29 1 83 1 214 1 163 3 140 2 85 3 3 1 60 6 177 1 92 1 318 1 151 1 354 1 26 1 
97 1 29 2 214 2 173 1 202 1 318 2 82 1 301 2 324 2 83 2 163 6 140 1 85 6 205 1 60 12 184 1 185 1 286 1 92 1 150 1 167 1 151 2 354 1 335 1 26 1 
82 1 301 2 29 1 327 1 163 3 140 1 85 3 60 6 183 1 151 1 242 1 
65 1 97 1 29 1 273 1 125 1 242 3 82 3 301 6 324 2 327 3 140 3 163 6 85 6 60 12 183 1 208 1 24 1 92 1 189 1 151 1 354 1 26 1 
65 1 82 2 301 4 97 1 324 2 327 1 29 1 140 2 163 3 85 3 60 6 184 1 92 1 151 1 354 1 26 1 242 1 
82 1 301 1 324 2 97 1 29 1 163 2 60 2 184 1 92 1 318 1 354 1 26 1 
82 1 301 2 324 2 97 1 29 1 83 1 140 1 214 1 163 2 85 2 60 4 184 1 92 1 318 1 151 1 354 1 26 1 
82 1 301 2 324 6 97 3 327 1 140 1 163 1 85 2 60 3 184 1 294 1 208 1 92 3 189 1 354 3 26 3 242 1 
97 5 29 4 214 3 125 1 173 4 294 1 177 1 202 3 318 3 242 3 82 5 224 1 301 11 324 10 327 3 83 3 163 13 140 6 85 15 248 1 60 28 183 1 227 1 184 1 208 1 24 1 188 1 92 5 189 2 167 1 151 4 354 5 26 5 
301 1 324 2 97 1 327 1 140 1 163 1 125 1 85 1 60 2 173 1 184 1 24 1 92 1 202 1 167 1 354 1 242 1 26 1 335 1 
97 2 29 1 214 1 125 1 173 2 177 1 202 1 318 1 242 1 82 1 224 1 301 2 324 4 327 1 140 1 163 3 85 2 60 5 184 1 24 1 92 2 167 1 354 2 335 1 26 2 
97 3 29 2 214 2 125 1 173 1 177 1 202 1 318 2 242 1 82 1 301 3 324 6 327 1 83 2 163 6 140 2 85 7 205 1 60 13 184 1 185 1 24 1 286 1 92 3 150 1 189 1 167 1 151 2 354 3 335 1 26 3 
97 3 29 2 214 2 125 1 173 1 177 1 202 1 318 2 242 1 82 2 301 4 324 6 327 1 83 1 163 7 140 2 85 4 205 1 60 11 184 1 185 1 24 1 286 1 92 3 189 1 150 1 167 1 151 1 354 3 335 1 26 3 
301 1 324 2 97 1 327 1 140 1 163 1 125 1 85 1 60 2 173 1 184 1 24 1 92 1 202 1 167 1 354 1 242 1 26 1 335 1 
97 1 29 2 214 2 173 1 202 1 318 2 82 1 301 2 324 2 83 2 163 6 140 1 85 6 205 1 60 12 184 1 185 1 286 1 92 1 150 1 167 1 151 2 354 1 335 1 26 1 
97 4 29 2 214 2 125 1 173 1 177 1 202 1 318 2 242 1 82 2 301 4 324 8 327 1 83 1 163 7 140 2 85 5 205 1 60 12 184 1 185 1 24 1 286 1 92 4 150 1 189 2 167 1 151 1 354 4 335 1 26 4 
97 4 29 3 214 3 173 1 294 1 202 1 318 3 82 3 301 6 324 8 83 2 163 9 140 3 85 7 205 1 60 16 184 1 185 1 286 1 92 4 150 1 189 2 167 1 151 2 354 4 335 1 26 4 
82 2 301 4 327 2 140 2 163 1 125 2 85 1 60 2 24 1 242 2 
97 4 29 2 214 2 125 1 173 1 294 1 202 1 318 2 242 1 82 1 301 3 324 8 327 1 83 1 163 7 140 2 85 5 205 1 60 12 184 1 185 1 24 1 286 1 92 4 150 1 189 2 167 1 151 1 354 4 335 1 26 4 
179 1 152 1 303 1 160 1 2 1 102 1 44 1 
179 1 152 1 160 1 233 1 2 1 102 1 235 1 303 1 107 1 55 1 268 1 44 1 
179 1 288 1 311 1 1 1 232 1 138 1 171 1 312 1 161 1 2 1 234 1 102 2 129 1 207 1 23 1 342 1 149 1 44 2 
288 1 46 1 1 1 232 1 171 2 234 1 126 1 351 1 277 1 23 1 342 1 149 1 61 1 
288 1 0 1 311 1 232 1 295 1 171 1 23 1 342 1 149 1 234 1 344 1 
179 1 288 1 311 1 1 1 232 1 171 1 312 1 161 1 2 1 234 1 102 2 129 1 207 1 236 1 23 1 342 1 149 1 44 2 
288 1 232 1 1 2 312 2 171 1 2 2 234 1 172 1 102 2 129 1 71 1 73 1 236 1 277 1 342 2 179 1 161 1 20 1 41 1 207 1 23 1 149 3 44 2 
288 2 232 1 1 2 312 2 171 1 2 2 234 2 172 1 102 2 129 1 71 1 73 1 277 1 342 2 179 1 138 1 161 1 266 1 20 1 41 1 207 1 23 2 149 3 44 2 
288 3 311 1 232 1 1 1 171 1 234 3 172 1 277 1 342 1 54 1 108 1 17 1 141 1 266 1 116 2 41 1 333 1 90 1 23 3 187 1 149 4 269 2 251 1 
288 3 311 1 1 1 232 1 171 1 141 1 172 1 234 3 17 1 266 1 116 2 41 1 228 1 277 1 23 3 333 1 187 1 342 1 54 1 149 4 269 2 251 1 
288 1 232 1 245 1 171 1 23 1 234 1 
288 1 46 1 311 1 1 1 232 1 171 2 234 1 126 1 351 1 23 1 342 1 149 1 61 1 
288 1 309 1 1 1 232 1 97 2 171 1 312 1 2 1 125 1 234 1 102 2 315 1 129 1 236 1 342 1 242 1 38 1 301 1 324 4 327 1 109 1 161 1 140 1 164 1 207 1 304 2 24 1 23 1 92 2 42 1 149 1 271 2 120 1 354 2 26 2 44 2 
288 1 311 1 213 1 256 2 234 1 196 1 199 1 219 1 78 1 54 1 320 2 178 1 345 2 16 1 246 1 326 1 141 1 17 2 116 3 228 1 166 2 89 1 23 1 333 1 187 1 149 2 269 3 251 1 
288 2 245 1 1 1 232 1 171 2 234 2 315 1 331 1 333 1 23 2 342 1 149 2 61 1 
288 4 0 1 311 1 232 1 171 1 234 4 266 1 315 1 295 1 23 4 342 1 149 1 270 1 
288 1 323 1 1 1 232 1 313 1 171 2 234 1 126 1 72 1 351 1 23 1 342 1 149 1 
288 1 311 1 232 1 171 1 23 1 25 1 234 1 349 1 
288 2 232 1 171 1 234 2 315 1 297 1 23 2 342 1 149 1 239 1 36 1 
288 5 0 1 311 1 232 2 171 2 283 1 234 4 315 1 104 1 295 1 297 1 277 1 23 5 342 2 149 3 270 1 
288 5 0 1 311 1 232 2 171 2 283 1 234 4 226 1 315 1 295 1 297 1 277 1 23 5 342 2 149 3 270 1 
179 1 300 1 134 1 319 1 35 1 
179 1 192 1 300 2 282 1 204 1 141 1 225 1 20 1 116 2 71 1 73 1 89 1 134 2 187 1 54 1 319 1 269 2 35 2 212 1 
300 1 118 1 2 1 319 1 35 1 102 1 265 1 258 1 44 1 
192 1 225 1 319 1 
176 1 112 1 206 1 344 1 
22 1 174 1 52 1 176 1 112 1 337 1 206 1 
52 1 278 1 201 1 
112 1 113 1 337 3 206 1 101 1 48 1 147 1 174 1 22 1 148 2 52 3 176 1 
22 1 174 1 52 2 8 1 176 1 343 1 112 1 337 2 206 1 
123 1 113 1 337 1 206 1 127 1 275 1 174 1 22 1 52 1 7 1 262 1 
22 1 174 1 52 1 112 1 113 1 337 1 206 1 
22 1 174 1 52 1 176 1 112 2 113 1 337 1 
244 1 170 1 112 1 113 1 337 2 206 1 174 2 22 2 52 2 62 1 
66 1 112 1 113 1 337 3 206 2 103 1 174 1 22 1 52 3 176 1 343 2 222 1 262 1 
22 1 174 1 52 1 25 1 113 1 337 1 253 1 
325 1 112 1 113 1 337 4 206 2 174 2 22 2 52 4 8 1 176 1 343 2 222 1 262 1 
22 1 174 1 52 1 176 1 112 1 113 1 337 1 206 1 
112 2 337 4 101 1 206 3 131 1 147 1 148 1 174 1 22 1 52 4 176 2 343 2 222 1 262 1 
112 1 113 1 337 2 206 1 142 1 174 1 22 1 52 2 176 1 343 1 80 1 43 1 
112 1 113 1 337 3 101 1 206 1 147 2 174 1 22 1 148 2 52 3 176 1 190 1 
168 1 53 2 93 1 206 2 
22 1 174 1 52 1 113 1 337 1 128 1 
66 1 22 1 174 1 52 2 176 1 343 1 112 1 113 1 337 2 206 1 
299 1 
22 1 174 1 52 1 176 1 112 1 113 1 337 1 206 1 
66 1 148 1 22 1 174 1 52 3 176 1 343 1 112 1 113 1 337 3 206 1 
131 1 222 1 206 1 262 1 
112 1 206 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 50 (10,104) (10,104) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 50 (10,104) (10,104) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 50 (10,104) (10,104) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 50 (10,104) (10,104) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (36,212,230,293) (36,212,230,293) (82,128,140,296) 143 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (36,212,230,293) (36,212,230,293) (82,128,140,296) 143 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 83 150 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 139 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 139 22 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 7 16 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 332 7 16 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 351 332 7 23 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 7 16 156 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 7 16 156 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 83 150 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (36,212,230,293) (36,212,230,293) (82,128,140,296) (82,128,140,296) (82,128,140,296) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
344 2 93 1 123 1 230 1 310 1 258 1 151 3 36 3 212 2 46 1 166 1 294 1 293 2 
104 1 123 1 281 1 151 1 124 1 36 1 212 1 50 1 216 1 253 1 294 1 293 1 10 1 
104 1 123 1 281 1 151 1 124 1 36 1 212 1 50 1 216 1 253 1 294 1 293 1 10 1 
104 1 123 1 281 1 151 1 124 1 36 1 212 1 50 1 216 1 253 1 294 1 293 1 10 1 
104 1 123 1 281 1 151 1 124 1 36 1 212 1 50 1 216 1 253 1 294 1 293 1 10 1 
344 3 93 1 230 3 296 1 191 1 258 2 281 1 151 4 36 4 212 1 272 2 286 1 46 1 50 1 216 1 166 1 294 1 293 1 
344 1 93 1 123 1 151 2 36 2 212 1 315 1 172 1 46 1 50 1 216 1 176 1 342 1 253 1 294 1 293 1 
230 1 151 1 36 2 212 1 82 1 293 1 294 1 143 1 
230 1 151 1 36 2 212 1 82 1 293 1 294 1 143 1 
257 1 219 1 162 1 312 1 243 1 114 1 221 1 223 1 41 1 217 1 367 1 134 1 62 1 189 1 
136 1 
219 1 243 1 221 1 223 1 330 1 134 1 62 1 136 1 257 1 162 1 113 1 312 1 114 1 363 1 41 1 217 1 145 1 367 1 189 1 
319 1 19 2 219 1 193 5 243 1 299 4 221 1 223 1 328 1 110 1 252 1 274 2 330 1 62 1 134 1 205 1 30 1 31 1 136 2 160 2 357 1 65 1 257 4 334 1 162 1 312 1 113 2 114 4 339 2 214 1 363 2 292 2 217 1 41 1 367 2 265 1 189 1 266 2 
136 1 113 1 127 1 
351 1 
223 2 208 1 219 2 312 2 217 2 41 2 243 1 221 2 
105 1 149 2 219 2 194 1 125 1 323 1 126 1 243 1 129 1 221 3 4 2 223 2 157 1 226 1 329 1 307 1 92 1 356 1 207 1 309 1 208 1 233 1 312 2 285 1 163 1 69 2 116 1 338 1 259 1 73 1 15 1 120 2 217 3 41 2 317 1 146 1 368 2 
219 1 162 1 312 1 243 1 221 1 223 1 41 1 217 1 62 1 189 1 
190 1 43 1 219 1 242 1 243 1 221 2 223 1 327 1 177 1 134 1 62 1 255 1 136 1 257 1 162 2 113 1 312 1 114 1 217 2 41 2 189 1 
190 1 219 2 242 1 243 1 221 2 223 2 327 1 177 1 134 1 62 1 136 1 257 2 162 2 312 2 113 1 114 2 217 2 41 2 189 1 
363 1 215 1 257 1 367 1 114 1 
219 1 243 1 221 1 223 1 201 1 330 1 134 1 62 1 136 1 257 1 162 1 113 1 312 1 114 1 363 1 41 1 217 1 367 1 189 1 
363 1 257 1 114 1 
219 1 208 2 312 1 361 1 221 2 301 1 223 1 41 2 217 2 
326 1 262 1 175 1 
356 1 309 1 149 1 208 1 194 1 126 1 259 1 338 1 221 1 71 1 226 1 120 1 217 1 317 1 307 1 368 1 
356 1 12 1 309 1 161 1 149 1 219 1 194 1 312 1 126 1 338 1 259 1 221 2 226 1 262 1 120 1 41 1 217 2 317 1 307 1 368 1 
208 1 127 1 
223 1 161 1 208 1 219 3 312 3 217 3 41 3 221 3 
219 1 162 1 312 1 217 1 41 1 189 1 221 1 
219 1 162 1 312 1 361 1 301 1 221 1 223 1 41 1 217 1 
105 1 190 1 149 1 219 3 194 1 242 1 125 1 126 1 129 1 243 1 301 1 221 4 4 1 223 2 157 1 226 1 327 1 329 1 307 1 177 1 92 1 356 1 12 1 309 1 161 1 208 1 257 1 233 1 67 1 162 1 312 3 163 1 69 2 235 1 114 1 116 1 338 1 259 1 120 1 217 4 41 3 317 1 146 1 368 1 
109 1 161 1 208 1 43 1 219 1 312 1 217 2 41 2 221 2 
136 1 12 1 161 2 190 1 257 1 219 3 242 1 162 1 312 3 297 1 114 1 235 1 301 1 221 3 223 1 327 1 41 3 217 3 177 1 
223 1 219 1 262 1 312 1 217 1 41 1 221 1 301 1 
356 1 309 1 149 1 208 1 194 1 126 1 259 1 338 1 221 1 226 1 120 1 217 1 307 1 317 1 368 1 
356 1 309 1 149 1 208 1 194 1 126 1 338 1 221 1 324 1 120 1 217 1 27 1 307 1 317 1 368 1 
18 1 52 1 148 1 105 1 345 1 19 1 125 1 4 4 157 1 326 2 273 1 175 2 329 1 92 1 285 2 69 2 163 2 116 1 262 2 102 1 292 1 341 1 
219 1 162 1 312 1 221 1 327 1 133 1 41 1 217 1 
12 1 358 1 161 2 43 1 219 4 208 1 21 1 312 4 221 5 301 1 223 1 109 1 41 5 217 5 
219 1 162 1 312 1 217 1 41 1 189 1 221 1 
227 1 284 1 159 1 
322 1 228 1 227 2 284 2 9 1 115 1 
227 1 284 1 
227 1 284 1 
228 1 115 1 
228 1 115 1 
228 1 115 1 
64 1 227 1 284 1 
64 1 227 1 284 1 
64 1 227 1 284 1 
229 1 227 1 284 1 
229 1 227 1 284 1 
229 1 227 1 284 1 
136 1 218 2 0 2 257 2 333 1 322 1 209 1 66 1 284 2 180 2 114 2 183 2 155 2 184 1 86 1 248 1 202 3 227 2 316 1 
218 1 241 1 219 2 155 1 221 2 200 1 202 1 227 1 275 1 159 1 208 1 257 1 232 1 284 1 311 1 312 2 180 1 114 1 13 1 183 1 49 1 184 1 41 2 217 2 
281 1 88 1 216 2 263 2 342 1 
281 1 50 1 216 1 
50 1 216 1 342 1 
72 1 281 2 88 1 216 3 263 1 342 1 
281 1 88 1 216 2 353 1 263 1 342 1 
148 1 79 1 345 1 19 1 219 1 193 1 243 1 299 3 221 1 223 1 5 1 6 1 351 2 275 1 276 1 274 1 277 1 330 1 306 2 134 1 62 1 254 1 136 2 160 1 257 4 334 1 282 1 162 1 312 1 113 1 114 4 339 1 363 1 14 1 291 1 292 1 217 1 41 1 367 4 189 1 
219 1 221 1 223 1 5 1 6 1 274 1 275 1 277 1 330 1 134 1 136 2 334 1 282 1 339 1 14 1 291 1 292 1 189 1 148 1 19 1 345 1 193 1 243 1 299 3 351 2 62 1 206 1 254 1 160 1 257 4 35 1 162 1 312 1 113 1 68 2 114 4 363 3 215 2 217 1 41 1 367 4 
148 1 79 1 345 1 19 1 219 1 193 2 243 1 299 3 221 1 223 1 5 1 6 1 110 1 276 1 274 1 275 1 351 4 277 2 62 1 134 1 306 1 254 1 136 3 160 1 257 3 162 1 282 2 312 1 113 1 114 3 339 1 291 2 292 1 217 1 41 1 367 2 189 1 
148 1 79 1 345 1 19 1 193 2 299 3 5 1 6 1 110 1 351 4 274 1 276 1 275 1 277 2 306 1 135 1 254 1 136 2 160 1 257 2 282 2 114 2 339 1 291 2 292 1 367 1 
362 1 
127 1 317 1 28 1 
47 1 317 1 
126 1 317 1 
126 1 103 1 28 2 317 3 338 1 318 1 
126 1 317 1 338 1 
317 1 178 1 
31 1 19 1 357 1 65 1 256 1 20 1 1 3 360 1 285 4 163 3 117 1 4 7 350 1 101 1 292 1 279 1 122 2 147 2 
148 3 105 1 19 4 345 3 42 1 20 5 1 10 170 1 130 4 348 1 84 1 4 31 247 1 5 3 350 1 329 1 279 1 31 2 92 1 357 2 65 1 256 2 95 3 285 16 69 2 163 15 116 1 117 2 288 1 101 1 292 4 76 1 147 3 122 5 
105 1 19 3 20 1 1 4 245 1 4 14 350 1 329 1 279 1 92 1 31 2 357 2 231 1 256 1 65 2 285 8 69 2 163 6 116 1 117 1 214 1 292 3 147 2 122 3 
31 1 19 1 357 1 65 1 256 1 20 1 1 3 285 4 163 3 117 1 4 7 350 1 101 1 292 1 279 1 122 2 147 2 
31 1 19 1 357 1 65 1 256 1 20 1 1 3 285 4 163 3 117 1 4 7 350 1 101 1 292 1 279 1 122 2 147 2 
356 1 123 2 309 1 149 1 179 1 194 1 151 1 36 1 126 1 212 1 260 1 58 1 85 2 118 1 60 2 120 1 239 1 186 1 317 1 29 1 77 2 293 1 368 1 
123 1 149 1 151 1 2 1 194 1 220 1 85 1 303 1 60 1 24 1 356 1 359 1 281 1 36 1 212 1 72 1 50 1 120 1 364 1 216 2 342 1 75 1 77 1 368 1 293 1 294 1 
344 1 123 1 149 1 151 2 2 1 194 1 220 1 85 1 46 1 60 1 24 1 356 1 93 1 230 1 359 1 281 1 36 2 212 1 72 1 50 1 120 1 74 1 364 1 216 2 342 1 75 1 77 1 368 1 293 1 294 1 
344 1 123 1 149 1 271 1 151 3 2 1 194 1 220 1 85 1 303 1 46 1 60 1 24 1 356 1 93 1 230 2 359 1 281 1 36 3 212 1 72 1 50 1 120 1 364 1 239 1 216 2 342 1 77 1 368 1 293 1 
344 1 123 1 149 1 271 1 151 2 194 1 85 1 303 1 46 1 60 1 24 1 356 1 93 1 230 2 359 1 281 1 36 2 72 1 120 1 364 1 50 1 216 2 342 1 77 1 368 1 
195 1 
160 1 309 1 149 1 257 1 137 1 193 1 334 1 150 1 299 1 114 1 83 1 339 1 363 2 6 1 274 1 120 1 330 1 368 1 
190 1 43 1 242 1 246 1 56 1 221 1 327 1 249 1 330 1 61 1 177 1 255 1 136 1 257 2 162 1 139 1 113 1 114 2 363 2 38 1 39 2 217 1 41 1 145 1 
136 1 255 1 270 1 190 1 257 2 43 1 242 1 162 1 113 1 114 2 56 1 246 1 221 1 38 1 327 1 39 3 249 1 41 1 217 1 61 1 177 1 
190 1 270 1 43 1 242 1 246 1 56 1 22 1 221 1 327 1 249 1 330 1 61 1 177 1 255 1 136 1 257 2 162 1 139 1 113 1 114 2 363 2 38 1 39 3 217 1 41 1 145 1 
363 1 257 1 330 1 145 1 114 1 
190 1 43 1 193 1 242 1 299 1 346 1 347 1 246 1 56 1 221 1 327 1 249 1 351 1 274 1 61 1 177 1 332 1 255 1 136 2 160 1 257 2 334 1 335 1 162 1 113 1 164 1 114 2 339 1 38 1 291 1 39 2 41 1 217 1 188 1 
270 1 190 1 43 1 193 1 242 1 299 1 346 2 347 1 22 1 246 1 56 1 221 1 131 1 327 1 249 1 7 1 274 1 330 1 61 1 177 1 280 1 332 1 255 1 136 1 160 1 257 2 334 1 139 1 335 2 162 1 113 1 114 2 339 1 363 2 38 1 291 1 39 3 16 1 217 1 41 1 188 2 
190 1 43 1 193 1 242 1 299 1 346 1 347 1 22 1 246 1 56 1 221 1 131 1 327 1 249 1 7 1 274 1 330 1 61 1 177 1 280 1 332 1 255 1 136 1 160 1 257 2 334 1 139 1 335 1 162 1 113 1 114 2 339 1 363 2 38 1 291 1 39 2 16 1 217 1 41 1 188 1 
190 1 43 1 193 1 242 1 299 1 346 1 246 1 56 1 23 1 221 1 327 1 111 1 249 1 7 1 351 1 274 1 61 1 177 1 332 1 255 1 136 1 160 1 257 2 334 1 335 1 162 1 113 1 141 1 114 2 339 1 38 1 39 2 217 1 41 1 187 1 
270 2 190 1 43 1 193 1 242 1 299 1 346 2 347 1 246 1 56 1 22 2 221 1 156 1 131 1 327 1 249 1 7 1 274 1 330 1 61 1 177 1 280 1 332 1 255 1 136 1 160 1 257 2 334 1 335 2 162 1 139 2 113 1 114 2 339 1 363 3 38 1 291 1 39 4 16 1 217 1 41 1 188 2 
270 2 190 1 43 1 193 1 242 1 299 1 346 2 347 1 246 1 56 1 22 2 221 1 156 1 131 1 327 1 249 1 7 1 274 1 330 1 61 1 177 1 280 1 332 1 255 1 136 1 160 1 257 2 334 1 335 2 162 1 139 2 113 1 114 2 339 1 363 3 38 1 291 1 39 4 16 1 217 1 41 1 188 2 
270 1 190 1 43 1 193 1 242 1 299 1 346 2 22 1 246 1 56 1 221 1 327 1 111 2 249 1 351 1 274 1 330 1 355 1 61 1 177 1 332 1 255 1 136 1 160 1 257 2 334 1 139 1 335 2 162 1 113 1 141 1 164 1 114 2 339 1 363 2 38 1 39 3 41 1 217 1 
105 1 80 1 149 2 194 2 125 1 197 1 196 1 323 1 126 2 4 2 157 1 251 1 329 1 92 1 356 3 309 1 63 1 285 1 69 2 163 1 338 1 116 1 260 1 73 1 238 1 120 2 186 1 317 2 368 2 146 1 
148 1 105 1 19 1 345 1 219 1 125 1 301 1 221 1 222 1 4 3 223 1 326 1 157 1 5 1 175 1 329 1 92 1 312 1 285 1 69 2 163 2 142 1 116 1 262 1 292 1 41 1 217 1 
31 2 92 1 105 1 19 1 357 2 208 2 65 1 1 2 125 1 285 2 127 1 163 3 69 2 116 1 4 5 157 1 350 1 273 1 292 1 329 1 279 1 122 2 
105 2 125 2 323 1 130 2 4 7 157 1 326 6 175 6 204 1 329 2 90 1 91 1 92 2 208 1 95 2 285 3 163 4 69 4 142 1 116 2 262 6 76 1 51 1 146 1 
105 1 219 1 125 1 323 1 221 1 4 2 157 1 175 1 329 1 92 1 12 1 161 1 312 1 285 1 69 2 163 1 142 1 116 1 119 1 100 1 217 1 41 1 146 1 
219 1 125 2 126 1 129 1 221 2 4 7 174 1 326 3 5 1 226 1 175 3 329 2 92 2 12 1 285 3 142 1 338 1 98 1 289 1 292 1 146 1 148 1 105 2 19 1 345 1 149 1 194 1 152 1 157 2 307 1 356 1 309 1 161 1 312 1 163 4 69 4 116 2 259 1 262 3 120 1 41 1 217 2 317 1 368 1 167 1 
92 1 148 1 105 1 19 1 125 1 285 2 69 2 116 1 4 2 326 1 157 1 262 1 175 1 273 1 329 1 341 1 
92 1 18 1 105 1 345 1 125 1 69 2 163 2 116 1 4 2 326 1 157 1 262 1 175 1 273 1 329 1 292 1 
92 1 148 1 105 1 345 1 19 1 125 1 285 2 163 2 69 2 116 1 4 4 326 2 157 1 5 1 262 2 175 2 273 1 292 1 329 1 
92 1 148 1 105 1 19 1 125 1 196 1 285 2 69 2 116 1 4 2 326 1 157 1 262 1 175 1 329 1 341 1 
92 1 18 1 105 1 345 1 125 1 196 1 69 2 163 2 116 1 4 2 326 1 157 1 262 1 175 1 329 1 292 1 
92 1 148 1 105 1 345 1 19 1 125 1 196 1 285 2 163 2 69 2 116 1 4 4 326 2 157 1 5 1 262 2 175 2 292 1 329 1 
92 1 148 1 105 1 345 1 19 1 125 1 285 2 163 2 69 2 116 1 4 4 326 2 157 1 5 1 262 2 175 2 292 1 329 1 
105 1 149 1 194 1 125 1 323 1 126 1 129 1 221 1 4 2 157 1 226 1 329 1 307 1 92 1 356 1 309 1 208 1 285 1 69 2 163 1 338 1 259 1 116 1 120 1 217 1 317 1 368 1 146 1 
105 1 149 1 194 1 125 1 323 1 126 1 81 1 324 1 221 1 4 2 157 1 329 1 307 1 27 1 92 1 356 1 309 1 208 1 285 1 69 2 163 1 338 1 116 1 120 1 217 1 317 1 368 1 146 1 
92 1 148 1 105 1 345 1 19 1 125 1 285 2 163 2 69 2 142 1 116 1 4 4 326 2 157 1 5 1 262 2 175 2 292 1 329 1 
148 1 105 1 345 1 19 1 149 1 194 1 125 1 126 1 129 1 221 1 4 4 326 2 157 1 5 1 226 1 175 2 329 1 307 1 92 1 356 1 285 2 163 2 69 2 338 1 259 1 116 1 289 1 262 2 120 1 74 1 292 1 217 1 317 1 368 1 
148 1 105 1 345 1 19 1 219 1 125 1 301 1 221 1 4 3 223 1 157 1 5 1 326 1 87 1 175 1 329 1 92 1 312 1 285 2 163 1 69 2 142 1 116 1 262 1 292 1 41 1 217 1 
148 3 105 2 169 1 19 3 345 3 20 3 1 6 130 2 348 1 4 19 5 3 352 2 329 2 26 1 89 1 92 2 231 1 283 1 95 1 285 9 69 4 163 10 116 2 165 1 236 1 237 2 365 1 292 3 76 1 122 3 
148 3 105 3 169 1 19 3 345 2 42 2 20 2 1 4 298 1 130 2 4 26 5 3 352 4 329 3 26 2 89 1 92 3 32 1 231 1 283 2 95 2 285 14 163 12 69 6 116 3 236 1 237 1 292 2 121 1 343 1 76 2 122 2 240 1 369 1 
169 1 42 1 1 8 130 4 4 41 5 4 329 3 89 1 279 1 92 3 231 1 283 2 95 3 285 20 236 1 237 1 292 5 343 1 240 1 147 1 148 4 105 3 345 4 19 5 20 4 298 1 348 1 350 1 352 4 26 1 31 1 32 1 357 1 65 1 211 1 163 21 69 6 116 3 165 1 121 1 76 3 122 4 369 1 
148 4 105 4 169 1 19 5 345 3 42 2 20 3 1 7 298 1 130 4 348 1 4 38 5 4 350 1 352 4 329 4 26 1 89 1 279 1 31 1 92 4 32 1 357 1 65 1 231 1 283 2 95 3 211 1 285 20 69 8 163 18 116 4 165 1 236 1 237 1 292 4 121 1 343 1 76 3 147 1 369 1 240 1 122 4 
148 7 105 2 53 2 169 1 19 8 345 7 42 1 20 7 1 14 298 1 130 4 348 2 4 52 5 7 350 1 352 4 329 2 26 1 89 1 279 1 31 1 92 2 32 1 357 1 65 1 231 1 283 1 95 4 285 27 69 4 163 25 116 2 236 1 237 1 292 8 121 1 343 1 76 2 147 1 369 1 240 1 122 7 
218 1 333 1 322 1 66 1 227 1 284 1 180 1 183 1 213 1 155 1 
241 1 159 1 
218 1 107 1 227 1 284 1 180 1 171 1 331 1 183 1 155 1 
136 1 218 1 0 1 257 1 333 1 322 1 209 1 66 1 284 1 180 1 114 1 183 1 184 1 155 1 86 1 248 1 202 2 227 1 
136 1 218 1 0 1 257 1 333 1 322 1 209 1 66 1 284 1 180 1 114 1 183 1 184 1 155 1 86 1 248 1 202 2 227 1 
136 1 218 1 0 1 257 1 333 1 322 1 209 1 66 1 284 1 180 1 114 1 183 1 184 1 155 1 86 1 248 1 202 2 227 1 
64 1 199 1 9 1 
64 1 199 1 9 1 
229 1 57 1 
229 1 57 1 9 1 
200 1 13 1 
218 1 241 1 0 1 219 2 221 2 155 1 200 1 86 1 202 1 227 1 275 1 159 1 208 1 257 1 232 1 284 1 311 1 312 2 180 1 114 1 13 1 183 1 49 1 340 1 217 2 41 2 367 1 
64 1 199 1 
229 1 57 1 9 1 
268 1 168 1 105 1 80 1 149 2 194 1 125 1 323 1 126 1 300 1 221 2 4 2 157 1 59 1 329 1 25 1 308 1 92 1 356 1 285 1 69 2 163 1 142 1 116 1 73 2 120 2 217 2 41 2 317 1 368 2 146 1 
356 1 309 1 149 1 179 1 194 1 126 1 337 1 260 1 120 1 185 1 186 1 317 1 368 1 77 1 
356 1 149 1 281 1 194 1 220 1 97 1 72 1 303 1 304 1 50 1 120 1 364 1 216 2 185 1 24 1 342 1 368 1 77 1 
356 1 149 2 281 1 194 1 220 1 97 1 72 1 303 1 304 1 50 1 120 2 74 1 364 1 216 2 185 1 24 1 342 1 368 2 77 1 
356 1 149 1 281 1 194 1 220 1 72 1 303 1 304 1 50 1 120 1 364 1 216 2 24 1 278 1 342 1 368 1 77 1 
94 1 
136 1 160 1 334 1 193 1 113 1 299 1 339 1 328 1 274 1 265 1 
148 1 136 2 19 1 345 1 193 2 282 2 299 2 5 1 291 2 351 4 277 2 292 1 266 1 
136 1 219 1 162 1 312 1 113 1 243 1 221 1 223 1 363 1 217 1 41 1 330 1 134 1 62 1 189 1 
160 1 309 1 149 1 137 1 193 1 334 1 150 1 299 1 244 1 339 1 83 1 363 2 6 1 120 1 274 1 330 1 368 1 
136 1 328 1 193 1 113 1 127 1 299 1 265 1 
136 1 160 1 334 1 193 1 299 1 347 1 339 1 291 1 351 1 274 1 188 1 
126 1 44 1 5 1 6 1 274 2 277 3 330 1 47 2 136 3 334 2 282 3 181 1 96 1 338 1 339 2 98 1 291 3 292 1 103 1 148 1 19 1 345 1 149 1 194 1 242 1 193 3 299 4 351 6 28 1 112 1 356 2 160 2 309 1 257 1 114 1 70 1 37 1 363 2 120 1 366 1 317 4 368 1 266 1 
219 1 130 1 221 1 223 1 5 2 6 1 274 2 277 5 330 1 134 1 136 5 137 1 334 2 282 5 95 1 339 2 99 1 291 3 292 2 343 1 189 1 240 1 148 2 345 2 19 2 193 5 243 1 299 8 298 1 108 1 351 6 62 1 205 1 160 2 162 1 113 2 312 1 363 1 217 1 41 1 121 1 76 1 369 1 266 2 
19 2 219 1 193 2 243 1 299 2 221 1 223 1 131 1 274 1 134 1 62 1 205 1 31 1 160 1 357 1 257 1 65 1 334 1 162 1 312 1 114 1 339 1 214 1 292 1 217 1 41 1 189 1 266 2 
105 1 149 1 219 2 194 1 125 1 126 1 243 1 129 1 221 3 4 1 223 2 157 1 226 1 329 1 307 1 92 1 356 1 309 1 208 1 233 1 312 2 163 1 69 2 116 1 259 1 338 1 120 1 217 3 41 2 317 1 146 1 368 1 
136 4 160 1 137 1 193 2 334 1 282 2 113 2 299 1 339 1 6 1 291 2 351 4 274 1 277 2 147 1 
218 1 333 1 198 1 13 1 155 1 
218 1 261 1 155 1 
218 1 261 1 155 1 
218 1 261 1 155 1 
218 1 305 1 155 1 
218 1 305 1 155 1 
218 1 305 1 155 1 
218 1 155 1 
227 1 284 1 
92 1 31 2 105 1 357 2 19 2 231 1 65 1 20 2 1 5 285 5 69 2 163 5 116 1 214 1 4 10 329 1 292 2 122 3 
92 1 148 1 105 1 19 1 231 1 20 1 1 1 285 2 69 2 116 1 4 2 329 1 
92 1 148 1 105 1 345 1 19 1 231 1 20 1 1 2 285 2 163 2 69 2 116 1 4 4 5 1 292 1 329 1 122 1 
92 3 31 1 105 3 357 1 42 1 231 1 20 1 1 2 285 1 163 2 69 6 116 3 165 1 4 3 204 1 329 3 122 1 
148 3 105 5 19 5 345 3 42 2 20 5 1 12 130 4 348 1 84 1 247 1 4 34 173 1 5 3 350 1 204 1 329 5 279 1 31 3 92 5 357 3 65 2 231 1 95 3 285 16 163 18 69 10 116 5 165 1 288 1 292 5 76 1 147 1 122 7 
105 1 19 1 1 2 130 1 4 8 350 1 329 1 279 1 92 1 31 1 357 1 231 1 65 1 95 1 285 4 163 4 69 2 116 1 292 1 76 1 147 1 240 1 122 2 
148 1 105 2 19 2 20 1 1 3 130 2 348 1 4 11 173 1 5 1 350 1 329 2 279 1 31 1 92 2 357 1 65 1 231 1 95 1 285 6 163 5 69 4 116 2 292 1 76 1 147 1 122 2 240 1 
148 2 105 3 19 3 345 2 42 1 20 1 1 4 298 1 130 1 4 19 173 1 5 2 350 1 329 3 279 1 31 1 92 3 357 1 65 1 231 1 95 1 285 9 163 10 69 6 116 3 292 3 121 1 343 1 76 1 147 1 240 1 369 1 122 3 
148 2 105 3 19 3 345 1 42 1 20 2 1 5 298 1 130 1 4 17 173 1 5 2 350 1 329 3 279 1 31 1 92 3 357 1 65 1 231 1 95 1 285 10 163 7 69 6 116 3 292 2 121 1 343 1 76 1 147 1 240 1 369 1 122 3 
105 1 19 1 1 2 130 1 4 8 350 1 329 1 279 1 92 1 31 1 357 1 231 1 65 1 95 1 285 4 163 4 69 2 116 1 292 1 76 1 147 1 240 1 122 2 
148 2 105 1 19 2 345 2 20 1 1 2 298 1 130 1 4 12 5 2 329 1 92 1 231 1 95 1 285 6 163 6 69 2 116 1 292 2 121 1 343 1 76 1 240 1 369 1 122 1 
148 2 105 4 19 3 345 1 42 2 20 2 1 5 298 1 130 1 4 18 173 1 5 2 350 1 329 4 279 1 31 1 92 4 357 1 65 1 231 1 95 1 285 10 163 8 69 8 116 4 292 2 121 1 343 1 76 1 147 1 240 1 369 1 122 3 
148 3 105 4 19 3 345 2 42 2 20 3 1 6 298 1 130 1 4 16 5 3 329 4 92 4 231 1 95 1 285 9 163 7 69 8 116 4 165 1 292 2 121 1 343 1 76 1 240 1 369 1 122 3 
31 3 357 3 19 1 65 1 20 3 1 6 285 3 163 4 4 7 350 1 292 1 279 2 122 3 
148 2 105 4 19 3 345 1 42 2 20 1 1 4 298 1 130 1 4 18 5 2 350 1 329 4 279 1 31 1 92 4 357 1 65 1 231 1 95 1 285 10 163 8 69 8 116 4 165 1 292 2 121 1 343 1 76 1 147 1 240 1 369 1 122 3 
92 2 31 1 105 2 19 1 357 1 65 1 42 1 20 1 1 3 285 4 163 4 69 4 116 2 4 8 350 1 292 1 329 2 279 1 147 1 122 2 
31 1 357 1 19 1 65 1 1 2 285 3 127 1 163 3 4 6 350 1 292 1 279 1 147 1 122 2 
92 1 148 1 105 1 345 1 19 1 20 1 1 2 285 2 163 2 69 2 116 1 4 4 173 1 5 1 292 1 329 1 122 1 
148 1 345 1 19 1 20 1 1 2 95 1 285 3 163 4 130 2 348 1 4 7 5 1 292 1 76 1 122 1 
148 2 105 2 19 3 345 2 53 1 42 2 20 4 1 9 130 2 348 1 4 23 5 2 350 1 204 1 329 2 279 1 31 2 92 2 357 2 65 1 95 2 285 11 163 12 69 4 116 2 292 3 51 1 147 1 122 5 
4 1 163 1 130 1 
4 1 95 1 285 1 
92 1 148 1 105 1 19 1 345 1 20 1 1 3 285 3 69 2 163 3 116 1 4 6 173 1 98 1 5 1 329 1 292 1 122 2 
148 2 105 1 19 2 345 2 20 1 1 2 298 1 130 1 4 12 5 2 329 1 92 1 231 1 95 1 285 6 163 6 69 2 116 1 292 2 121 1 343 1 76 1 240 1 369 1 122 1 
31 1 19 1 357 1 65 1 20 1 1 2 285 3 163 3 4 6 292 1 122 1 
31 1 92 1 105 1 357 1 42 1 20 1 1 2 285 1 163 2 69 2 116 1 4 3 350 1 204 1 329 1 279 1 122 1 
109 1 208 1 43 1 217 1 41 1 8 1 221 1 
208 1 43 1 314 1 182 1 3 1 221 1 225 1 109 1 290 1 8 1 41 1 217 1 
356 1 309 1 149 4 194 1 126 1 260 1 40 1 120 4 74 1 186 1 317 1 368 4 17 1 
356 2 149 2 63 1 234 1 194 1 197 1 336 1 126 1 338 1 238 1 251 1 120 2 317 1 368 2 
356 1 309 1 149 1 194 1 50 1 120 1 216 1 24 1 342 1 368 1 
308 1 356 1 149 2 194 1 126 1 303 1 74 1 120 2 25 1 317 1 368 2 
356 2 309 1 149 5 234 1 194 2 126 2 260 1 40 1 120 4 74 1 186 1 25 1 354 1 317 3 368 5 11 1 
356 2 309 1 149 5 234 1 194 2 126 2 154 1 260 1 40 1 120 4 74 1 186 1 25 1 317 3 368 5 11 1 
260 1 356 1 309 1 149 1 194 1 120 1 126 1 186 1 127 1 317 1 368 1 
356 1 309 1 161 1 149 1 208 1 219 1 194 1 312 1 126 1 338 1 221 2 226 1 120 1 41 1 217 2 317 1 307 1 368 1 
269 1 149 1 190 1 219 2 194 1 126 2 221 2 226 1 327 1 307 1 178 1 356 1 161 1 208 1 234 1 162 1 312 1 338 2 120 1 217 2 41 2 317 3 368 1 
269 1 149 2 190 1 219 2 194 1 126 2 221 2 327 1 27 1 307 1 178 1 356 1 161 1 208 1 234 1 162 1 312 1 338 2 120 2 217 2 41 2 317 3 368 2 17 1 
269 1 149 3 194 1 242 1 126 1 55 1 47 1 28 1 178 1 136 1 356 1 309 1 257 2 234 1 113 1 114 2 338 1 363 1 120 3 317 4 368 3 17 1 267 1 
136 1 356 1 309 1 269 1 149 3 257 2 242 1 234 1 194 1 113 1 126 1 114 2 338 1 44 1 363 1 120 3 47 1 317 4 28 1 178 1 368 3 17 1 
356 1 144 1 149 1 194 1 120 1 368 1 
295 1 356 3 309 2 149 7 63 1 194 2 126 2 338 1 73 1 144 1 303 1 238 1 74 1 120 6 25 1 103 1 354 1 48 1 317 3 368 7 11 1 
268 1 105 2 19 1 149 1 219 1 1 2 194 1 125 2 126 1 129 1 221 2 4 5 157 2 174 1 226 1 350 1 329 2 279 1 307 1 31 2 92 2 356 1 357 2 161 1 208 2 65 1 312 1 285 2 163 3 69 4 142 1 338 1 116 2 259 1 289 1 74 1 120 1 292 1 217 2 41 1 317 1 368 1 122 2 
219 1 221 1 44 1 223 1 328 1 274 2 330 1 47 1 134 1 136 2 334 2 181 1 96 1 339 2 292 2 189 1 19 2 149 1 242 1 193 5 243 1 299 4 244 1 28 1 62 1 205 1 31 1 160 2 309 1 357 1 257 2 65 1 162 1 113 2 312 1 114 2 70 1 214 1 363 2 120 1 41 1 217 1 367 1 317 2 368 1 265 1 266 2 
356 2 149 2 194 1 126 1 338 1 37 1 144 1 74 1 120 2 103 1 28 1 317 2 368 2 
356 1 309 1 161 1 149 1 208 1 219 1 194 1 312 1 126 1 338 1 221 2 120 1 41 1 217 2 317 1 307 1 27 1 368 1 
356 2 149 1 63 1 234 1 194 1 126 1 338 1 238 1 120 1 103 1 48 1 317 1 368 1 
302 1 208 1 192 1 210 1 349 1 
190 1 219 1 192 1 242 1 243 1 153 1 221 1 223 1 302 1 132 1 327 1 349 1 250 1 177 1 134 1 62 1 136 1 257 2 210 1 162 2 312 1 113 1 235 1 114 2 217 1 41 1 367 1 189 1 
168 1 302 1 192 1 59 1 349 1 217 1 41 1 221 1 300 1 
302 1 132 1 250 1 
344 1 93 1 151 1 46 1 36 1 212 1 293 1 294 1 
344 3 320 1 93 2 230 2 258 1 151 4 36 4 212 1 315 1 224 1 46 2 158 1 166 1 293 1 
230 1 151 1 36 2 140 1 128 1 212 1 82 1 293 1 294 1 
344 1 320 2 93 1 151 3 36 3 212 1 315 2 46 1 203 1 158 1 294 1 293 1 
344 2 321 1 45 2 264 1 
151 1 36 1 212 1 293 1 294 1 78 1 
344 1 93 1 230 1 151 2 46 1 36 2 313 1 212 1 293 1 294 1 
54 1 
344 1 93 1 151 1 46 1 36 1 212 1 293 1 294 1 
344 1 93 1 46 1 127 1 
344 1 93 1 151 1 46 1 36 1 212 1 293 1 
123 1 151 1 60 1 
344 1 320 1 93 1 151 3 36 3 212 1 287 1 315 2 46 1 158 1 294 1 293 1 
344 1 93 1 230 1 151 2 46 1 36 2 272 1 212 1 293 1 
344 1 296 1 258 1 281 1 151 1 36 1 212 1 50 1 216 1 294 1 293 1 
344 1 151 1 46 1 36 1 212 1 293 1 294 1 
93 1 151 1 46 2 36 1 212 1 293 1 294 1 
344 1 106 1 151 2 138 1 34 1 36 2 212 2 46 1 294 1 293 2 
344 2 93 1 230 2 258 1 151 3 36 3 313 1 212 1 325 1 46 1 166 1 294 1 293 1 
344 1 93 1 33 1 230 1 281 1 151 2 36 2 212 1 72 1 46 1 50 1 216 2 342 1 294 1 293 1 
344 2 93 1 230 2 191 1 258 1 151 4 36 4 212 2 272 1 46 1 166 1 294 1 293 2 
344 1 93 1 230 1 151 3 46 1 36 3 313 1 212 1 293 1 294 1 315 1 
344 1 224 1 258 1 166 1 
344 1 46 1 

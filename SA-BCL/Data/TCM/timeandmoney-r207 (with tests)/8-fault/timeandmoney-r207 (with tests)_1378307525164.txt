#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) (257,334,346) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) 87 339 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) 87 183 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException (51,345) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) (257,334,346) 337 306 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) (257,334,346) 337 306 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) (257,334,346) 337 306 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) (257,334,346) 337 306 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) (257,334,346) 337 306 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) (257,334,346) 337 306 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) (257,334,346) 337 306 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) (257,334,346) 337 306 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) (257,334,346) 337 306 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) (257,334,346) 337 306 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) (257,334,346) 337 306 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) (257,334,346) 337 306 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 242 322 248 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 242 62 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 311 150 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException (51,345) (51,345) 114 (197,264) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException (51,345) (51,345) 114 (168,198) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 242 322 248 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 242 62 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 242 322 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 242 166 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (51,345) (51,345) (257,334,346) 87 319 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | ASSIGN | 5073 | = null
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
72 1 292 1 340 2 341 3 22 5 1 1 77 2 227 2 27 1 228 9 141 2 144 2 5 1 252 1 330 1 186 2 353 1 256 1 216 1 282 2 172 9 90 1 174 6 92 1 68 1 115 1 359 1 71 4 
72 1 292 1 340 2 341 3 22 5 1 1 77 2 227 2 27 1 228 9 141 2 144 2 5 1 252 1 330 1 186 2 353 1 256 1 216 1 282 2 172 9 90 1 174 6 92 1 68 1 115 1 359 1 71 4 
72 1 292 1 340 2 341 4 22 6 1 1 77 2 227 2 27 1 228 10 141 2 144 2 5 1 252 1 330 1 186 2 353 1 256 1 216 1 282 2 172 10 90 1 174 7 92 1 68 1 115 1 359 1 71 5 
72 1 292 1 340 2 341 2 22 4 1 1 77 2 227 2 27 1 228 7 141 2 144 2 5 1 252 1 330 1 186 2 353 1 256 1 216 1 282 1 172 7 174 4 92 1 68 1 115 1 359 1 71 3 
72 1 252 1 292 1 186 1 340 1 216 1 341 1 282 2 22 3 172 4 227 1 90 1 174 3 92 1 228 4 141 1 144 1 71 2 
72 1 292 1 186 1 162 1 255 1 100 1 22 1 172 2 227 1 77 1 92 1 27 1 228 2 141 1 359 1 144 1 
72 1 292 1 341 1 22 2 172 3 227 2 77 1 174 1 92 1 68 1 228 3 141 2 71 1 
72 1 292 1 340 1 341 3 22 5 26 1 77 1 227 2 228 9 141 2 144 1 252 1 186 1 256 1 216 1 282 2 172 9 174 7 90 1 92 1 68 1 115 1 71 4 177 1 
72 1 292 1 340 1 341 3 22 5 26 1 77 1 227 2 228 9 141 2 144 1 252 1 186 1 256 1 216 1 282 2 172 9 174 7 90 1 92 1 68 1 115 1 71 4 177 1 
262 1 299 1 333 1 
333 1 246 1 161 2 
37 2 121 2 176 1 69 2 192 2 12 2 286 1 84 2 
318 1 133 1 99 2 291 1 118 1 295 1 180 1 224 2 102 2 103 1 104 1 321 1 121 2 301 1 31 1 145 1 34 1 37 2 171 1 12 2 84 2 65 2 112 1 190 1 264 1 128 1 285 2 176 1 19 1 69 3 192 3 114 1 286 1 219 1 97 1 289 1 132 1 
8 1 37 1 121 1 179 1 69 1 192 1 127 1 12 1 286 1 84 1 
195 1 334 1 121 1 345 1 69 1 192 1 127 1 257 1 51 1 
334 1 37 1 121 1 345 1 69 1 192 1 127 1 12 1 84 1 51 1 
185 1 93 1 346 1 215 1 140 1 
262 1 170 1 185 1 333 1 93 2 175 1 346 2 215 1 
93 1 346 1 215 1 
185 1 8 1 37 1 179 1 127 1 12 1 84 1 121 1 93 1 346 1 192 1 69 1 286 1 169 1 
333 1 
262 1 185 1 113 1 333 1 93 2 175 1 346 2 215 1 
179 1 101 4 105 2 200 2 182 1 121 1 346 5 108 1 324 1 349 2 326 1 169 1 33 1 230 2 185 2 8 1 80 2 37 1 10 1 352 1 215 2 233 5 127 1 12 1 234 1 84 1 150 1 311 1 262 2 333 2 93 5 18 2 175 1 69 1 192 1 286 1 156 1 287 1 
299 1 176 1 
37 1 12 1 84 1 121 2 176 2 192 2 69 2 220 1 316 1 
278 1 232 1 56 1 
291 1 117 1 224 1 102 1 65 1 190 1 264 1 176 1 301 1 69 1 192 1 19 1 114 1 31 1 219 1 132 1 
291 1 37 1 12 1 224 1 102 1 56 1 65 1 190 1 264 1 121 1 301 1 129 1 19 1 114 1 192 2 69 2 219 1 31 1 305 1 132 1 
37 3 121 3 176 1 129 1 69 3 192 3 12 3 84 1 
37 1 121 1 179 1 69 1 192 1 127 1 12 1 
37 1 121 1 69 1 192 1 127 1 12 1 220 1 84 1 316 1 
339 1 37 2 127 1 12 2 84 1 87 1 334 1 121 2 345 1 129 1 192 2 69 2 305 1 316 1 51 1 
195 1 109 1 37 1 121 2 176 1 129 1 69 2 192 2 12 1 
37 1 127 1 12 1 87 1 334 1 121 1 345 1 129 1 183 1 192 1 69 1 305 1 51 1 
232 1 37 2 12 2 56 1 84 1 121 2 129 1 192 2 69 2 316 1 
291 1 224 1 102 1 65 1 190 1 264 1 176 1 301 1 69 1 192 1 114 1 19 1 31 1 219 1 132 1 
290 1 224 1 102 1 65 1 190 1 176 1 301 1 69 1 192 1 114 1 19 1 168 1 31 1 219 1 132 1 
99 2 118 1 180 1 104 1 103 2 56 2 321 1 349 1 34 2 278 2 79 1 209 1 210 1 232 2 283 1 188 1 112 1 45 1 285 4 18 1 155 1 97 1 
125 1 37 1 121 1 69 1 192 1 127 1 12 1 51 1 
195 1 7 1 109 1 37 4 12 4 225 1 84 1 121 5 129 2 176 1 192 5 69 5 305 1 316 1 
125 1 37 2 121 2 179 1 69 2 192 2 127 1 12 2 
202 1 3 1 
202 1 3 1 
86 1 89 1 
86 1 89 1 
86 1 89 1 
202 1 3 1 74 1 
202 1 3 1 11 1 
202 2 86 1 146 1 3 2 89 1 42 1 
202 1 3 1 74 1 
202 1 3 1 74 1 
202 1 3 1 245 1 
202 1 3 1 245 1 
202 1 3 1 245 1 
146 1 52 2 0 1 15 3 202 2 263 1 3 2 78 1 333 1 239 2 167 1 139 2 93 2 284 1 346 2 29 2 275 1 350 2 32 1 
221 1 52 1 116 1 296 1 202 1 3 1 121 2 58 1 346 1 29 1 350 1 32 1 37 2 11 1 12 2 15 1 239 1 47 1 93 1 176 1 192 2 69 2 241 1 335 1 
186 1 340 1 144 1 
186 1 100 1 144 1 
205 1 152 1 340 2 186 3 100 1 194 1 
106 1 152 1 340 1 186 2 100 1 194 1 
152 2 340 1 186 2 100 1 194 1 
116 1 161 3 296 1 101 3 298 1 200 1 246 1 137 1 346 5 349 1 122 1 33 1 79 1 230 1 209 1 185 4 80 1 148 2 233 2 281 1 215 1 13 1 262 1 111 1 333 2 47 1 93 5 18 1 154 2 175 1 130 1 158 2 
161 9 101 8 135 1 298 1 200 2 182 1 246 3 346 9 140 5 249 1 349 3 122 2 33 1 123 1 61 1 79 3 230 2 209 3 185 7 80 2 148 6 40 5 233 6 215 6 13 3 217 1 262 1 111 2 47 4 333 5 93 9 18 3 154 6 175 1 70 1 
161 4 101 3 200 1 246 2 182 1 137 1 346 3 349 1 122 1 230 1 79 1 209 1 185 2 80 1 148 2 281 1 233 2 13 1 262 1 111 1 333 3 47 1 93 3 18 1 154 2 158 1 
161 7 101 5 200 1 246 3 182 1 137 1 346 4 349 2 122 1 123 1 230 1 79 2 209 2 185 3 80 1 148 4 281 1 233 4 13 2 217 1 262 1 111 1 333 4 47 2 93 4 18 2 154 4 158 2 70 1 
76 1 299 1 19 1 
19 1 199 1 
328 1 
19 1 219 1 
76 2 301 1 19 3 41 1 219 1 331 1 
301 1 19 1 219 1 
19 1 193 1 
184 1 214 1 234 1 103 3 355 2 311 1 151 1 119 1 138 1 285 7 18 1 28 1 156 1 349 1 304 3 325 2 34 4 
184 1 214 1 234 1 103 3 355 2 311 1 151 1 119 1 138 1 285 7 18 1 28 1 156 1 349 1 304 3 325 2 34 4 
184 1 214 1 234 1 103 3 355 2 311 1 151 1 119 1 300 1 138 1 285 7 18 1 28 1 156 1 349 1 304 3 325 2 34 4 
159 1 138 1 285 1 214 2 355 1 119 1 34 1 
99 4 118 2 180 2 21 1 103 4 138 1 28 1 349 1 250 1 325 3 304 4 34 5 184 1 254 1 214 1 234 1 355 2 151 1 311 1 112 2 285 9 18 1 156 1 97 2 
72 1 292 1 338 1 340 1 100 1 22 1 102 1 224 1 227 1 77 1 205 1 59 1 228 2 31 1 141 1 144 1 186 2 213 1 172 2 235 1 65 1 218 1 66 1 174 1 153 1 92 1 240 1 268 1 131 1 132 1 
292 1 338 1 340 1 100 1 22 1 102 1 224 1 227 1 77 1 205 1 59 1 228 3 31 1 141 1 144 1 229 1 186 2 258 1 172 3 65 1 218 1 66 1 174 2 153 1 92 1 265 1 240 1 268 1 131 1 132 1 
292 1 338 1 340 1 100 1 22 1 102 1 224 1 77 1 205 1 228 2 31 1 144 1 229 1 186 2 172 2 65 1 218 1 66 1 174 2 92 1 265 1 240 1 268 1 131 1 132 1 
102 1 224 1 227 1 77 2 228 1 31 1 141 1 142 1 307 1 35 1 187 1 258 1 172 1 65 1 218 2 190 1 240 2 19 1 315 1 267 1 219 1 268 2 132 1 
72 1 338 1 340 1 100 1 102 1 224 1 227 1 77 1 205 1 59 1 228 1 31 1 141 1 144 1 229 1 186 2 172 1 235 1 65 1 218 1 66 1 153 1 240 1 268 1 131 1 132 1 
348 1 
195 1 337 1 196 1 101 1 181 1 102 2 224 2 200 1 2 1 121 1 345 1 346 2 31 1 142 1 33 1 306 1 230 1 80 1 187 1 215 2 233 1 127 1 257 1 260 1 65 2 111 1 190 2 44 1 334 1 93 2 175 1 69 1 192 1 19 1 219 1 51 1 132 1 
195 1 337 1 196 1 127 1 181 1 257 1 334 1 121 1 345 1 93 1 346 1 192 1 69 1 51 1 306 1 
195 1 337 1 196 1 127 1 181 1 257 1 334 1 121 1 345 1 93 1 346 1 192 1 69 1 51 1 306 1 
195 1 337 1 196 1 127 1 181 1 257 1 334 1 121 1 345 1 93 1 346 1 192 1 69 1 51 1 306 1 
195 1 337 1 196 1 215 1 127 1 181 1 257 1 113 1 334 1 121 1 345 1 93 2 346 2 175 1 69 1 192 1 51 1 306 1 
230 1 195 1 337 1 80 1 196 1 127 1 181 1 257 1 200 1 334 1 121 1 345 1 93 1 346 1 69 1 192 1 33 1 51 1 306 1 
195 1 337 1 196 1 127 1 181 1 257 1 334 1 121 1 345 1 93 1 346 1 192 1 69 1 51 1 306 1 
195 1 337 1 196 1 127 1 181 1 257 1 334 1 121 1 345 1 93 1 346 1 192 1 69 1 51 1 306 1 
195 1 337 1 196 1 127 1 181 1 257 1 334 1 121 1 345 1 93 1 346 1 192 1 69 1 51 1 306 1 
195 1 337 1 196 1 127 1 181 1 257 1 334 1 121 1 345 1 93 1 346 1 192 1 69 1 51 1 306 1 
195 1 337 1 196 1 127 1 181 1 257 1 334 1 121 1 345 1 93 1 346 1 192 1 69 1 51 1 306 1 
230 1 195 1 337 1 80 1 196 1 127 1 181 1 257 1 200 1 334 1 121 1 345 1 93 1 346 1 69 1 192 1 33 1 51 1 306 1 
99 2 118 1 180 1 56 1 104 1 103 3 299 1 321 1 28 1 325 2 304 2 349 1 34 3 184 1 278 1 210 1 232 1 234 1 355 1 311 1 112 1 285 6 18 1 176 2 156 1 97 1 
99 4 118 2 295 1 178 1 180 2 342 1 103 6 104 2 56 11 321 1 4 3 302 1 304 1 276 1 349 2 34 8 278 11 79 2 351 1 209 1 253 1 232 4 171 1 13 2 151 1 236 3 112 2 285 14 176 1 18 1 50 1 97 2 
291 1 99 2 117 1 118 1 295 1 180 1 102 1 224 1 342 1 104 1 103 1 321 1 107 1 121 1 301 1 31 1 305 1 34 1 232 1 37 1 126 1 171 1 12 1 65 1 190 1 112 1 264 1 285 2 176 1 129 1 19 1 114 1 69 2 192 2 219 1 96 1 97 1 132 1 
99 4 134 1 180 2 55 1 102 1 224 1 103 4 104 2 56 3 321 2 325 1 145 1 60 1 278 3 232 3 12 1 13 1 65 1 190 1 112 2 16 1 285 7 18 1 192 2 69 2 114 1 19 1 291 1 118 2 342 1 121 1 301 1 304 1 31 1 349 1 305 1 34 3 79 1 209 1 37 1 171 1 264 1 91 1 129 1 219 1 97 2 132 1 
99 4 242 1 118 2 295 1 180 2 102 4 224 4 104 2 103 1 321 2 247 1 121 1 301 1 248 1 322 1 31 3 142 1 34 1 210 1 36 1 37 1 187 1 212 1 213 1 171 1 12 1 65 4 189 1 190 2 112 2 128 1 49 1 17 1 285 2 129 1 69 1 192 1 19 3 219 3 97 2 132 2 
99 2 118 1 180 1 342 1 75 1 56 1 104 1 103 2 321 1 121 1 349 1 34 1 278 1 79 1 209 1 232 1 37 1 12 1 13 1 84 1 112 1 285 3 18 1 192 1 69 1 316 1 97 1 
278 1 79 1 99 2 210 1 232 1 118 1 180 1 56 1 104 1 151 1 112 1 321 1 285 2 155 1 304 1 349 1 97 1 34 2 
278 1 99 2 209 1 210 1 232 1 118 1 180 1 56 1 104 1 103 2 112 1 45 1 321 1 285 2 18 1 97 1 
99 2 118 1 180 1 104 1 56 2 103 2 321 1 349 1 34 2 79 1 278 2 209 1 210 1 232 2 13 1 112 1 285 4 18 1 97 1 
278 1 79 1 99 2 36 1 232 1 118 1 180 1 56 1 104 1 151 1 112 1 321 1 285 2 155 1 304 1 349 1 97 1 34 2 
278 1 99 2 209 1 36 1 232 1 118 1 180 1 56 1 104 1 103 2 112 1 45 1 321 1 285 2 18 1 97 1 
99 2 118 1 180 1 104 1 56 2 103 2 321 1 349 1 304 1 34 2 79 1 278 2 209 1 36 1 232 2 13 1 151 1 112 1 285 4 18 1 97 1 
278 2 79 1 209 1 99 2 232 2 118 1 180 1 13 1 103 2 56 2 104 1 112 1 321 1 285 4 18 1 349 1 97 1 34 2 
291 1 99 2 118 1 295 1 180 1 102 1 224 1 104 1 103 1 321 1 301 1 31 1 145 1 34 1 171 1 65 1 190 1 112 1 264 1 285 2 176 1 114 1 19 1 192 1 69 1 219 1 97 1 132 1 
290 1 99 2 118 1 295 1 180 1 102 1 224 1 104 1 103 1 321 1 301 1 31 1 168 1 34 1 171 1 65 1 43 1 190 1 112 1 285 2 176 1 114 1 19 1 192 1 69 1 219 1 97 1 132 1 
99 2 118 1 180 1 342 1 104 1 56 2 103 2 321 1 349 1 34 2 79 1 278 2 209 1 232 2 13 1 112 1 285 4 18 1 97 1 
291 1 99 2 118 1 180 1 102 1 224 1 103 2 56 2 104 1 321 1 301 1 349 1 31 1 145 1 34 2 278 2 79 1 209 1 232 2 213 1 13 1 65 1 112 1 264 1 91 1 285 4 18 1 114 1 19 1 192 1 69 1 219 1 97 1 132 1 
99 2 118 1 180 1 342 1 103 1 104 1 56 1 321 1 121 1 304 1 349 1 34 2 79 1 278 1 209 1 232 1 37 1 12 1 13 1 259 1 84 1 151 1 112 1 285 3 18 1 192 1 69 1 316 1 97 1 
99 4 53 1 118 2 180 2 103 7 320 1 273 1 4 2 302 1 250 1 349 2 304 1 143 1 34 6 79 2 351 1 209 2 147 1 13 2 236 1 151 1 112 2 48 1 285 13 191 1 18 2 357 1 97 2 
99 6 118 3 223 1 180 3 21 2 103 12 320 1 201 1 120 1 273 1 4 2 207 1 302 2 304 3 325 1 250 1 349 3 327 1 34 14 79 3 209 2 231 1 147 1 13 3 151 2 236 2 112 3 48 2 285 26 18 2 191 4 357 2 97 3 317 1 
99 6 223 1 180 3 103 21 320 1 4 4 273 1 325 2 327 1 143 1 184 1 147 1 231 1 13 4 234 1 151 4 236 3 112 3 285 41 18 5 191 4 156 1 118 3 21 1 201 1 120 1 207 1 28 1 303 1 302 3 304 6 349 5 250 1 34 20 79 4 209 4 351 1 355 1 311 1 48 1 357 2 97 3 317 1 
99 8 223 1 180 4 103 18 320 1 4 4 273 1 325 2 327 1 143 1 184 1 147 1 231 1 13 4 234 1 151 3 236 3 112 4 285 38 18 4 191 4 156 1 118 4 21 2 201 1 120 1 207 1 28 1 303 1 302 3 304 5 349 5 250 1 34 20 79 4 209 3 351 1 355 1 311 1 48 1 357 2 97 4 317 1 
99 4 223 1 118 2 180 2 21 1 103 19 201 1 320 1 120 1 273 1 4 3 207 1 28 1 302 2 304 4 325 2 250 1 349 5 327 1 34 18 184 1 79 4 351 1 209 4 231 1 147 1 13 4 234 1 355 1 311 1 151 2 236 2 112 2 48 1 285 37 18 5 191 4 156 1 357 1 97 2 317 1 
202 1 146 1 52 1 0 1 3 1 239 1 167 1 29 1 350 1 98 1 
221 1 11 1 
202 1 52 1 81 1 3 1 67 1 46 1 239 1 29 1 350 1 
146 1 52 1 0 1 15 2 202 1 263 1 3 1 333 1 239 1 167 1 139 1 93 1 284 1 346 1 29 1 275 1 32 1 350 1 
146 1 52 1 0 1 15 2 202 1 263 1 3 1 333 1 239 1 167 1 139 1 93 1 284 1 346 1 29 1 275 1 32 1 350 1 
146 1 52 1 0 1 15 2 202 1 263 1 3 1 333 1 239 1 167 1 139 1 93 1 284 1 346 1 29 1 275 1 32 1 350 1 
74 1 42 1 57 1 
74 1 42 1 57 1 
245 1 173 1 
245 1 173 1 42 1 
58 1 335 1 
221 1 52 1 116 1 296 1 202 1 3 1 139 1 58 1 121 2 346 1 29 1 350 1 185 1 38 1 37 2 11 1 12 2 15 1 239 1 47 1 284 1 93 1 176 1 69 2 192 2 241 1 335 1 
74 1 57 1 
245 1 173 1 42 1 
99 2 242 1 118 1 295 1 180 1 102 2 224 2 342 1 104 1 103 1 203 1 321 1 247 1 121 2 301 1 31 2 34 1 62 1 280 1 212 1 171 1 83 1 65 2 189 1 112 1 128 2 49 1 17 1 285 2 19 2 69 2 192 2 219 2 336 1 97 1 132 1 
229 1 338 1 340 1 186 2 213 1 100 1 224 2 102 2 65 2 88 1 205 1 66 1 59 1 314 1 31 1 157 1 268 1 144 1 132 1 
229 1 338 1 160 1 340 1 186 2 100 1 224 1 102 1 65 1 88 1 205 1 66 1 59 1 31 1 268 1 144 1 132 1 
307 1 187 1 224 1 102 1 65 1 271 1 190 1 314 1 19 1 31 1 219 1 268 1 142 1 132 1 
229 1 338 1 340 1 186 2 100 1 224 1 102 1 65 1 88 1 205 1 66 1 59 1 314 1 31 1 157 1 268 1 144 1 132 1 
164 1 
262 1 299 1 333 1 101 1 233 1 324 1 326 1 
161 1 101 1 200 1 246 1 346 1 33 1 230 1 80 1 233 1 149 1 215 1 310 1 262 1 333 2 93 1 94 1 175 1 
134 1 101 4 224 1 102 1 105 1 230 2 9 1 148 3 233 3 110 1 13 1 65 1 111 1 190 1 333 3 154 3 18 1 19 4 293 1 161 6 197 1 199 2 200 2 76 1 204 1 246 3 301 1 346 2 31 2 349 1 33 2 251 1 79 1 209 1 80 2 215 2 41 1 261 1 93 2 175 1 95 1 219 1 132 1 
270 1 161 6 223 1 101 8 105 2 200 2 201 1 136 1 246 3 4 1 346 1 207 1 108 1 302 1 349 2 33 2 230 2 79 2 209 2 231 1 80 2 148 5 215 1 233 5 13 2 260 1 236 1 111 1 262 2 333 5 93 1 175 1 154 5 18 2 317 1 
230 1 80 1 101 2 233 2 309 1 234 1 150 1 311 1 200 1 105 1 93 1 18 1 346 1 156 1 349 1 33 1 
230 1 80 1 233 1 101 1 200 1 262 1 333 1 324 1 326 1 33 1 
79 1 209 1 161 4 148 2 233 2 101 2 13 1 246 2 333 2 154 2 18 1 349 1 
262 1 333 1 93 1 346 1 175 1 215 1 
73 1 163 2 101 2 102 4 224 4 200 2 2 1 182 1 346 3 31 1 142 1 33 1 230 2 80 2 187 1 215 4 233 2 260 2 65 4 312 1 237 1 111 2 190 2 44 1 93 3 175 2 19 1 219 1 132 1 
318 1 99 2 291 1 118 1 180 1 102 1 224 1 103 1 104 1 321 1 121 2 301 1 31 1 145 1 37 2 171 1 12 2 65 1 84 2 112 1 190 1 264 1 285 1 176 1 69 3 192 3 114 1 19 1 286 1 219 1 97 1 132 1 
230 1 80 1 161 4 148 2 233 2 101 1 260 1 355 1 200 1 111 1 262 2 246 2 333 4 154 2 33 1 
269 1 29 1 350 1 
0 1 58 1 29 1 350 1 277 1 
269 1 29 1 350 1 
269 1 29 1 350 1 
344 1 29 1 350 1 
344 1 29 1 350 1 
344 1 29 1 350 1 
29 1 350 1 
202 1 3 1 
184 1 99 4 118 2 180 2 21 1 234 1 103 4 355 1 311 1 151 1 112 2 285 8 18 1 28 1 156 1 349 1 304 3 325 2 97 2 34 4 
184 1 234 1 103 3 355 1 311 1 299 1 285 6 18 1 28 1 156 1 325 2 304 2 349 1 34 3 
79 1 209 1 99 2 118 1 180 1 13 1 103 2 151 1 238 1 112 1 285 4 18 1 304 1 349 1 97 1 34 2 
79 1 209 1 351 1 13 1 103 4 236 1 151 1 4 2 285 7 18 1 302 1 349 1 304 1 34 3 
99 4 118 2 178 1 180 2 21 2 103 12 4 2 28 1 325 3 304 7 349 3 34 11 184 1 79 2 351 1 209 2 253 1 279 1 13 2 234 2 355 1 311 1 151 4 236 2 112 2 285 23 18 3 156 2 97 2 
4 1 285 1 103 1 
285 1 236 1 34 1 
79 1 134 1 209 1 13 1 103 3 151 1 285 6 18 1 349 1 304 2 325 1 34 3 
99 4 118 2 223 1 180 2 21 1 103 7 201 1 4 1 207 1 302 1 250 1 349 2 325 1 304 2 34 6 79 2 209 2 231 1 13 2 151 1 236 1 112 2 285 13 18 2 97 2 317 1 
234 1 103 3 311 1 151 1 285 6 18 1 156 1 349 1 325 1 304 2 34 3 
184 1 99 2 279 1 118 1 180 1 21 1 234 1 103 2 151 1 112 1 285 3 28 1 156 1 304 2 325 1 97 1 34 1 
99 2 118 1 180 1 234 2 103 5 150 1 151 2 311 1 112 1 285 10 18 2 156 2 250 1 325 3 304 5 349 2 97 1 34 5 
79 1 99 2 118 1 180 1 151 1 112 1 285 2 250 1 349 1 304 1 97 1 34 2 
79 1 99 2 209 1 118 1 180 1 13 1 103 2 112 1 285 4 18 1 250 1 349 1 97 1 34 2 
99 6 279 1 118 3 180 3 21 1 234 1 103 2 151 1 112 3 285 3 156 1 250 1 325 1 304 2 143 1 97 3 34 1 
99 10 118 5 180 5 243 1 21 2 54 1 103 18 4 4 28 1 302 1 325 4 250 1 349 5 304 9 143 1 34 16 184 1 79 3 351 1 209 3 279 1 13 3 234 3 355 1 311 2 236 3 151 5 238 1 112 5 285 34 18 5 156 3 288 1 97 5 
99 2 118 1 180 1 103 4 4 1 207 1 28 1 302 1 349 1 250 1 325 2 304 2 34 4 184 1 234 1 355 1 236 1 311 1 112 1 285 8 18 1 156 1 97 1 
99 4 118 2 180 2 103 5 4 2 207 1 28 1 302 1 325 2 250 1 349 2 304 3 34 6 184 1 79 1 351 1 13 1 234 1 355 1 311 1 236 1 151 1 112 2 238 1 285 11 18 1 156 1 97 2 
99 6 118 3 223 1 180 3 21 1 103 10 201 1 4 1 207 1 28 1 302 1 250 1 349 3 325 3 304 4 34 9 184 1 79 2 209 2 231 1 13 2 234 1 355 1 311 1 151 1 236 1 238 1 112 3 285 19 18 3 156 1 97 3 317 1 
99 8 118 4 223 1 180 4 21 2 103 5 201 1 4 1 207 1 302 1 250 1 349 2 325 1 304 2 34 7 79 2 209 1 231 1 13 2 151 1 236 1 238 1 112 4 285 12 18 1 97 4 317 1 
99 2 118 1 180 1 103 4 4 1 207 1 28 1 302 1 349 1 250 1 325 2 304 2 34 4 184 1 234 1 355 1 236 1 311 1 112 1 285 8 18 1 156 1 97 1 
99 4 118 2 223 1 180 2 21 1 103 7 201 1 4 1 207 1 302 1 250 1 349 2 325 1 304 2 34 6 79 2 209 2 231 1 13 2 151 1 236 1 112 2 285 13 18 2 97 2 317 1 
99 8 118 4 223 1 180 4 21 2 103 8 201 1 4 1 207 1 28 1 302 1 250 1 349 3 325 3 304 5 34 10 184 1 79 2 209 1 231 1 13 2 234 1 355 1 311 1 151 2 236 1 238 1 112 4 285 18 18 2 156 1 97 4 317 1 
99 8 118 4 223 1 180 4 21 2 103 7 201 1 4 1 207 1 302 1 250 1 349 3 325 1 304 4 143 1 34 9 79 3 209 2 231 1 13 3 151 3 236 1 112 4 285 16 18 2 97 4 317 1 
184 1 234 3 103 4 151 3 311 1 285 7 18 1 28 2 156 3 325 3 304 6 349 1 34 3 
99 8 118 4 223 1 180 4 21 2 103 8 201 1 4 1 207 1 28 1 302 1 250 1 349 3 325 3 304 4 143 1 34 10 184 1 79 2 209 1 231 1 13 2 234 1 355 1 311 1 151 1 236 1 112 4 285 18 18 2 156 1 97 4 317 1 
226 1 195 1 109 1 121 1 176 1 69 1 192 1 
195 1 109 1 82 1 23 1 14 1 226 1 244 1 121 1 176 1 192 1 69 1 124 1 
299 1 190 1 187 1 19 1 102 1 224 1 31 1 219 1 142 1 65 1 132 1 
37 1 12 1 224 1 102 1 65 1 190 1 264 1 121 1 176 1 301 1 129 1 19 1 114 1 192 2 69 2 219 1 31 1 132 1 
37 1 163 1 127 1 12 1 224 1 102 1 65 1 264 1 121 1 345 1 301 1 129 1 19 1 114 1 192 1 69 1 219 1 31 1 51 1 132 1 
37 1 163 1 127 1 12 1 224 1 102 1 65 1 121 1 345 1 301 1 129 1 19 1 114 1 192 1 69 1 219 1 31 1 168 1 51 1 132 1 
163 1 102 3 224 3 198 1 199 1 343 1 76 1 272 1 346 2 301 1 31 1 251 1 215 1 65 3 85 1 262 1 190 1 333 1 93 2 19 4 193 1 219 1 132 1 
251 1 163 1 197 1 215 1 224 3 102 3 65 3 199 1 343 1 262 1 190 1 76 1 333 1 272 1 93 2 301 1 346 2 19 4 193 1 219 1 31 1 132 1 
313 1 102 1 224 1 31 1 65 1 132 1 
242 1 212 1 213 1 41 1 224 3 102 3 65 3 189 2 332 1 190 2 247 2 49 1 248 1 301 2 322 1 19 3 219 3 31 4 132 2 
99 4 291 1 118 2 180 2 342 1 224 1 102 1 56 1 103 3 104 2 321 2 121 1 301 1 28 1 349 1 304 2 325 2 31 1 145 1 34 3 60 1 278 1 184 1 232 1 37 1 280 1 213 1 12 1 234 1 355 1 65 1 311 1 112 2 264 1 91 1 285 6 176 2 18 1 129 1 19 1 114 1 69 2 192 2 156 1 219 1 97 2 132 1 
293 1 73 1 197 1 101 1 224 1 102 1 199 1 200 2 76 1 346 3 324 1 326 1 33 2 230 2 251 1 185 1 80 2 233 1 215 2 110 1 65 1 262 1 190 1 333 1 93 3 175 1 19 2 95 1 
76 1 9 1 313 1 213 1 301 1 19 2 41 1 102 2 224 2 31 2 219 1 65 2 132 1 
222 1 187 1 213 1 224 4 102 4 65 4 343 1 190 1 19 1 31 1 219 1 142 1 132 1 
163 1 212 1 224 2 102 2 65 2 189 1 25 1 247 1 49 1 301 1 19 1 219 1 31 2 132 1 
190 1 66 1 186 1 100 1 102 1 224 1 31 1 65 1 144 1 132 1 
229 1 242 1 62 1 213 1 212 1 224 2 102 2 65 2 189 1 247 1 49 1 301 1 19 2 31 2 219 2 132 1 
242 1 213 1 212 1 224 2 102 2 65 2 189 1 190 1 247 1 49 1 301 1 322 1 19 2 31 2 219 2 132 1 
242 1 213 1 212 1 224 2 102 2 65 2 189 1 190 1 166 1 247 1 49 1 301 1 19 2 31 2 219 2 132 1 
37 1 12 1 224 1 102 1 65 1 190 1 121 1 176 1 301 1 129 1 19 1 114 1 192 2 69 2 219 1 31 1 168 1 132 1 
163 1 41 1 224 1 102 1 65 1 189 1 332 1 247 1 301 1 19 1 219 1 31 2 132 1 
294 1 274 1 176 1 308 1 64 1 
185 1 294 1 308 1 127 1 319 1 64 1 87 1 334 1 274 1 345 1 93 1 266 1 346 1 208 1 51 1 
203 1 294 1 121 1 274 1 69 1 192 1 83 1 336 1 64 1 
274 1 266 1 319 1 
299 1 292 1 92 1 22 1 
292 1 227 1 92 1 228 1 22 1 172 1 141 1 
77 1 240 1 228 1 
72 1 292 1 227 1 356 1 92 1 228 3 22 1 165 1 347 1 172 3 141 1 359 2 
292 1 227 1 174 1 92 1 228 2 22 1 282 1 172 2 141 1 
72 1 340 1 186 1 216 1 22 1 172 1 227 1 228 1 141 1 144 1 71 1 
72 1 227 1 92 1 228 1 22 1 172 1 141 1 
72 1 292 1 227 1 92 2 228 1 172 1 141 1 
72 1 20 1 211 1 22 1 172 2 227 2 92 1 228 2 30 1 141 2 
72 1 292 1 256 1 341 1 22 2 172 3 227 1 174 2 92 1 228 3 141 1 115 1 71 1 
72 1 292 1 186 2 340 1 100 1 22 1 172 2 354 1 227 1 205 1 174 1 92 1 228 2 141 1 144 1 
72 1 292 1 282 1 341 1 22 2 172 4 227 2 90 1 174 2 92 1 228 4 141 2 71 1 
72 1 292 1 227 1 92 1 228 1 22 1 172 1 141 1 
292 2 341 1 22 3 165 1 63 1 172 4 227 1 174 2 92 2 228 4 347 1 141 1 359 1 71 1 
72 1 292 1 227 1 206 1 174 1 92 1 228 2 22 1 172 2 24 1 141 1 177 1 
72 1 292 1 39 1 22 1 172 3 165 2 227 1 92 1 228 3 347 1 141 1 359 2 
6 1 329 1 22 2 358 2 
72 1 227 1 228 1 323 1 172 1 141 1 
72 1 292 1 227 1 174 1 92 1 256 1 228 2 22 1 172 2 141 1 
297 1 
72 1 292 1 227 1 92 1 228 1 22 1 172 1 141 1 
72 1 292 1 227 1 174 1 92 1 256 1 228 3 22 1 172 3 141 1 359 1 
22 1 341 1 63 1 71 1 
92 1 22 1 

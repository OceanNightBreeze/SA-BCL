#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 118 253 340 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 172 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 13 67 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 13 67 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 13 67 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 13 271 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 13 67 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1902 | = null
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
73 1 114 6 270 4 121 1 336 1 361 2 151 9 153 1 200 2 103 1 278 2 155 2 254 3 84 1 313 1 258 1 88 1 232 1 366 1 285 1 187 2 161 1 135 5 320 2 321 2 17 1 40 1 41 9 
73 1 114 6 270 4 121 1 336 1 361 2 151 9 153 1 200 2 103 1 155 2 278 2 254 3 84 1 313 1 258 1 88 1 232 1 366 1 285 1 187 2 161 1 135 5 320 2 321 2 17 1 40 1 41 9 
73 1 114 7 270 5 121 1 336 1 361 2 151 10 153 1 200 2 103 1 155 2 278 2 254 4 84 1 313 1 258 1 88 1 232 1 366 1 285 1 187 2 161 1 135 6 320 2 321 2 17 1 40 1 41 10 
73 1 114 4 270 3 121 1 336 1 361 2 151 7 153 1 200 2 103 1 155 2 278 2 254 2 84 1 313 1 258 1 232 1 366 1 285 1 187 1 161 1 135 4 320 2 321 2 17 1 40 1 41 7 
258 1 88 1 114 3 270 2 232 1 285 1 336 1 187 2 135 3 321 1 320 1 361 1 151 4 200 1 153 1 155 1 254 1 41 4 
258 1 293 1 121 1 336 1 135 1 161 1 320 1 361 1 321 1 151 2 153 1 200 1 252 1 278 1 41 2 109 1 
258 1 114 1 270 1 336 1 135 2 320 2 361 2 151 3 153 1 103 1 278 1 41 3 254 1 
114 7 270 4 195 1 336 1 361 2 151 9 153 1 200 1 103 1 277 1 278 1 155 1 254 3 84 1 258 1 88 1 232 1 285 1 187 2 135 5 320 2 17 1 321 1 41 9 
114 7 270 4 195 1 336 1 361 2 151 9 153 1 200 1 103 1 277 1 278 1 155 1 254 3 84 1 258 1 88 1 232 1 285 1 187 2 135 5 320 2 17 1 321 1 41 9 
61 1 280 1 302 1 
365 2 199 1 302 1 
203 2 104 2 164 2 1 2 338 1 249 2 169 2 83 1 
1 2 330 2 75 1 194 1 23 1 169 2 243 2 48 2 297 2 79 1 198 1 177 1 338 1 178 1 299 1 124 1 249 2 227 1 83 1 279 1 312 1 203 2 257 1 35 1 9 1 104 3 344 1 345 1 283 1 186 1 287 1 164 3 136 2 42 1 43 1 167 1 94 1 
203 1 62 1 104 1 164 1 1 1 57 1 249 1 169 1 83 1 85 1 
203 1 104 1 367 1 284 1 120 1 62 1 29 1 164 1 262 1 300 1 201 1 226 1 280 1 302 1 
203 1 104 1 1 1 169 1 284 1 120 1 62 1 29 2 164 1 249 1 262 1 300 2 201 1 280 1 302 1 
353 1 29 1 300 1 373 1 291 1 
353 1 29 2 276 1 300 2 280 1 302 1 291 1 96 1 
29 1 300 1 291 1 
203 1 353 1 104 1 1 1 57 1 169 1 62 1 29 1 164 1 249 1 300 1 325 1 83 1 85 1 
302 1 
353 1 29 2 300 2 205 1 280 1 302 1 291 1 96 1 
353 2 1 1 268 3 217 2 169 1 197 1 101 2 221 2 335 1 122 1 29 5 249 1 125 1 300 5 126 1 81 1 83 1 85 1 280 2 256 2 302 2 203 1 104 1 57 1 11 1 259 2 58 2 368 1 348 5 62 1 164 1 288 1 263 4 325 1 289 1 328 2 291 2 96 1 
203 1 257 1 104 2 36 1 330 1 75 1 23 1 344 1 169 1 48 1 79 1 198 1 165 1 164 2 136 1 178 1 299 1 249 1 214 1 279 1 
61 1 338 1 
203 2 104 2 1 1 219 1 169 1 274 1 164 2 338 2 249 1 
15 1 87 1 214 1 
257 1 104 1 330 1 23 1 75 1 344 1 48 1 79 1 164 1 362 1 136 1 198 1 338 1 178 1 299 1 279 1 
203 3 104 3 1 1 165 1 164 3 338 1 249 3 169 3 
203 1 62 1 104 1 164 1 57 1 249 1 169 1 
203 1 62 1 104 1 274 1 164 1 1 1 219 1 249 1 169 1 
1 2 330 1 219 1 75 1 23 1 194 1 169 3 243 1 48 1 120 1 297 2 79 1 29 1 198 1 338 1 178 1 299 1 124 1 249 3 300 1 201 1 227 1 83 1 279 1 255 1 312 1 203 3 257 1 9 1 104 4 36 1 344 1 283 1 284 1 186 1 319 1 287 1 62 1 164 4 165 1 136 1 262 1 42 1 43 1 
203 2 104 2 164 2 165 1 338 1 49 1 249 1 169 1 367 1 
203 3 104 3 1 1 36 1 219 1 169 3 185 1 284 1 319 1 120 1 62 1 29 1 165 2 164 3 249 3 262 1 300 1 201 1 302 1 
203 2 104 2 1 1 87 1 219 1 169 2 165 1 164 2 249 2 214 1 
257 1 104 1 330 1 23 1 75 1 344 1 48 1 79 1 164 1 136 1 198 1 338 1 178 1 299 1 279 1 
257 1 104 1 330 1 23 1 75 1 344 1 273 1 48 1 164 1 136 1 310 1 198 1 338 1 178 1 299 1 
267 1 145 1 221 1 101 1 359 1 243 4 5 1 297 2 246 1 227 1 341 1 228 1 35 2 9 1 87 2 156 1 183 1 283 1 186 1 15 2 287 2 214 2 42 1 43 1 
203 1 62 1 104 1 164 1 322 1 249 1 201 1 169 1 
203 5 266 1 104 5 1 1 36 1 219 1 169 4 158 1 367 1 165 2 164 5 49 1 338 1 249 4 
203 2 62 1 104 2 322 1 164 2 57 1 249 2 169 2 
105 1 116 1 
105 1 116 1 
69 1 47 1 
69 1 47 1 
69 1 47 1 
28 1 105 1 116 1 
28 1 105 1 116 1 
105 2 77 1 116 2 78 1 69 1 47 1 
105 1 116 1 86 1 
28 1 105 1 116 1 
105 1 116 1 70 1 
105 1 116 1 70 1 
105 1 116 1 70 1 
241 1 218 2 168 1 332 1 105 2 116 2 346 1 360 1 78 1 303 2 234 2 29 2 275 2 371 1 238 2 300 2 375 1 154 3 302 1 
218 1 24 1 169 2 116 1 360 1 29 1 275 1 338 1 249 2 300 1 154 1 86 1 203 2 104 2 105 1 303 1 134 1 162 1 164 2 137 1 64 1 238 1 189 1 213 1 
321 1 200 1 155 1 
293 1 321 1 200 1 
235 1 0 1 293 1 200 3 155 2 290 1 
208 1 0 1 293 1 200 2 155 1 290 1 
0 1 293 1 200 2 155 1 290 2 
353 4 2 2 217 1 197 1 101 1 221 1 5 1 222 1 29 5 199 1 6 2 300 5 51 1 280 1 302 2 365 3 129 1 130 1 315 1 156 1 132 2 259 1 58 1 348 2 134 1 162 1 138 1 68 1 263 3 213 1 291 1 96 1 
353 7 2 6 217 2 307 1 356 1 197 1 101 3 221 3 335 1 5 3 222 2 29 9 199 3 6 6 248 5 300 9 51 3 280 1 302 5 365 9 129 2 56 1 130 1 156 3 259 2 58 2 348 6 134 4 261 1 373 5 263 8 212 1 44 1 291 6 96 1 
353 2 2 2 217 1 101 1 221 1 335 1 222 1 5 1 29 3 199 2 6 2 300 3 51 1 280 1 302 3 129 1 365 4 315 1 156 1 132 1 259 1 58 1 134 1 348 2 138 1 263 3 
353 3 2 4 217 1 307 1 101 2 221 2 335 1 222 1 5 2 29 4 199 3 6 4 300 4 51 2 280 1 302 4 365 7 129 1 315 1 156 2 132 2 259 1 58 1 134 2 348 4 138 1 263 5 212 1 44 1 
61 1 314 1 178 1 
143 1 178 1 
225 1 
178 1 75 1 
314 2 178 3 75 1 299 1 357 1 27 1 
178 1 75 1 299 1 
178 1 210 1 
35 4 267 3 342 1 111 2 269 1 260 1 101 1 221 1 243 7 287 3 122 1 175 1 239 1 108 1 228 2 328 1 256 1 
35 4 267 3 342 1 111 2 269 1 260 1 101 1 221 1 243 7 287 3 122 1 175 1 239 1 108 1 228 2 328 1 256 1 
35 4 267 3 342 1 111 2 269 1 260 1 101 1 221 1 243 7 287 3 122 1 175 1 239 1 108 1 228 2 328 1 256 1 95 1 
216 1 267 10 110 1 111 3 269 1 221 4 101 4 243 31 147 4 5 3 122 1 297 2 337 1 175 5 251 1 51 3 227 1 228 5 256 2 35 16 342 1 156 3 260 2 186 1 287 15 63 1 65 1 141 1 239 1 108 2 42 1 328 2 191 3 43 1 
267 4 111 2 269 1 101 1 221 1 243 9 297 4 122 1 175 1 227 2 228 3 256 1 35 5 342 1 133 1 260 1 186 2 287 4 370 1 141 1 108 1 42 2 43 2 328 1 
292 1 293 1 330 1 114 1 23 1 76 1 48 1 336 1 361 1 198 1 176 1 151 2 339 1 32 1 153 1 200 2 155 1 278 1 364 1 128 1 258 1 282 1 12 1 207 1 135 1 235 1 321 1 136 1 320 1 41 2 
292 1 293 1 330 1 114 2 23 1 76 1 48 1 336 1 361 1 198 1 176 1 151 3 339 1 32 1 200 2 155 1 278 1 364 1 128 1 258 1 182 1 282 1 347 1 135 1 235 1 321 1 136 1 320 1 41 3 327 1 
293 1 330 1 114 2 23 1 76 1 48 1 336 1 198 1 151 2 339 1 32 1 200 2 278 1 155 1 364 1 128 1 258 1 282 1 347 1 135 1 235 1 136 1 321 1 41 2 327 1 
330 1 75 1 23 1 48 1 148 1 198 1 361 1 80 1 151 1 178 1 363 1 278 2 52 1 364 2 128 2 257 1 182 1 282 2 369 1 136 1 320 1 236 1 41 1 
292 1 293 1 330 1 23 1 76 1 48 1 361 1 198 1 176 1 151 1 339 1 32 1 153 1 200 2 155 1 278 1 364 1 128 1 282 1 12 1 347 1 235 1 321 1 136 1 320 1 41 1 
188 1 
240 2 45 2 330 2 197 1 48 2 244 1 4 1 148 1 199 2 198 1 150 2 300 5 201 1 52 1 302 2 202 1 257 2 203 1 54 1 104 1 259 1 58 1 206 2 348 2 62 1 164 1 262 1 18 2 263 2 350 1 72 2 354 1 217 1 75 1 23 1 120 1 222 1 29 5 178 1 179 4 311 1 226 1 280 1 365 2 181 1 231 1 367 1 284 1 136 2 237 1 323 1 140 1 372 2 96 3 291 6 
240 1 244 1 120 1 29 3 179 2 300 3 311 1 201 1 226 1 202 1 203 1 104 1 205 1 367 1 284 1 62 1 164 1 323 1 140 1 262 1 291 2 96 1 
244 1 120 1 29 3 179 3 300 3 311 1 201 1 226 1 280 1 202 1 302 1 203 1 104 1 205 1 206 1 367 1 284 1 62 1 164 1 323 1 140 1 262 1 291 1 96 1 
240 1 45 1 244 1 120 1 29 3 179 3 300 3 311 1 201 1 226 1 280 1 202 1 302 1 203 1 104 1 205 1 206 1 367 1 284 1 62 1 164 1 323 1 140 1 262 1 96 1 291 2 
240 2 45 2 118 1 244 1 120 1 29 3 179 2 300 3 311 1 201 1 253 1 226 1 340 1 202 1 203 1 104 1 205 1 367 1 284 1 62 1 164 1 323 1 140 1 262 1 291 3 96 1 
240 2 45 2 197 1 244 1 4 1 199 2 150 2 300 4 201 1 202 1 302 2 203 1 104 1 259 1 58 1 206 2 348 1 62 1 164 1 262 1 263 1 18 2 354 1 72 2 217 1 120 1 29 4 179 4 311 1 226 1 280 1 365 2 181 1 367 1 284 1 323 1 140 1 372 2 96 2 291 4 
240 2 45 2 72 2 354 1 217 1 197 1 244 1 118 1 4 1 120 1 29 4 199 2 150 2 152 1 180 1 179 4 300 4 311 1 201 1 226 1 280 1 302 1 202 1 203 1 104 1 259 1 58 1 206 2 367 1 284 1 348 1 62 1 164 1 323 1 140 1 262 1 372 2 18 2 263 1 291 4 96 2 
240 2 45 2 72 2 354 1 217 1 197 1 244 1 118 1 4 1 120 1 29 4 199 2 150 2 152 1 180 1 179 4 300 4 311 1 201 1 226 1 280 1 302 1 202 1 203 1 104 1 259 1 58 1 206 2 367 1 284 1 348 1 62 1 164 1 323 1 140 1 262 1 372 2 18 2 263 1 291 4 96 2 
240 2 45 2 97 1 217 1 220 2 197 1 244 1 4 1 120 1 149 2 29 4 223 1 180 1 179 4 300 4 311 1 201 1 226 1 280 1 302 1 202 1 203 1 104 1 365 2 259 1 58 1 206 2 367 1 284 1 348 1 62 1 164 1 323 1 140 1 262 1 372 2 39 1 18 2 263 1 291 4 96 2 
240 3 72 2 354 1 45 3 217 1 197 1 244 1 118 1 4 1 120 1 29 4 199 2 150 2 152 1 180 1 179 5 300 4 311 1 201 1 226 1 253 1 280 1 302 1 202 1 203 1 104 1 259 1 58 1 206 3 367 1 284 1 348 1 62 1 164 1 323 1 140 1 262 1 372 2 18 2 263 1 96 2 291 5 
240 3 72 2 354 1 45 3 217 1 197 1 244 1 118 1 4 1 120 1 29 4 199 2 150 2 152 1 180 1 179 5 300 4 311 1 201 1 226 1 253 1 280 1 302 1 202 1 203 1 104 1 259 1 58 1 206 3 367 1 284 1 348 1 62 1 164 1 323 1 140 1 262 1 372 2 18 2 263 1 96 2 291 5 
240 2 97 1 45 2 197 1 244 1 4 1 149 2 300 4 201 1 202 1 302 1 203 1 104 1 259 1 58 1 206 2 348 1 62 1 164 1 262 1 263 1 18 2 217 1 220 2 120 1 29 4 179 4 311 1 226 1 280 1 365 2 181 1 367 1 284 1 323 1 140 1 372 2 96 2 291 4 
35 3 9 1 267 2 342 1 111 1 87 1 269 1 101 1 221 1 243 6 283 1 186 1 15 1 61 1 287 3 122 1 297 2 338 2 227 1 214 1 228 2 341 1 42 1 43 1 328 1 256 1 
267 2 98 1 272 1 196 1 221 3 101 1 243 17 147 4 5 3 297 4 175 1 338 1 51 3 227 2 228 1 312 1 9 1 35 10 87 4 89 1 156 1 345 1 317 1 283 2 186 2 15 13 63 1 287 7 65 2 214 13 42 2 43 2 191 3 
330 1 75 1 23 1 169 1 196 1 25 1 243 2 48 1 79 1 297 2 198 1 362 1 338 1 178 1 299 1 249 1 227 1 279 1 8 1 312 1 257 1 203 1 9 1 104 2 35 1 36 1 87 1 344 1 345 1 283 1 186 1 287 1 136 1 164 2 165 1 38 1 42 1 43 1 
330 1 169 1 196 1 243 1 172 1 48 1 297 2 249 1 227 1 312 1 203 1 257 1 9 1 104 1 36 1 283 1 186 1 287 1 164 1 165 1 136 1 42 1 43 1 
330 8 23 2 75 2 169 1 295 1 243 2 173 1 48 7 297 4 148 1 198 2 178 3 123 1 249 1 227 2 52 1 341 1 281 1 312 1 203 1 257 2 104 1 9 2 35 1 345 1 283 2 60 1 186 2 347 1 207 1 287 1 164 1 165 1 136 8 324 1 377 1 42 2 43 2 94 2 
267 1 1 1 219 1 169 1 196 1 170 1 221 1 101 1 243 3 5 1 297 2 249 1 51 1 227 1 228 1 203 1 9 1 104 1 35 1 87 1 156 1 283 1 186 1 15 1 287 2 164 1 214 1 42 1 43 1 
9 1 35 2 267 1 87 1 221 1 243 2 283 1 186 1 15 1 5 1 297 2 246 1 175 1 227 1 214 1 341 1 42 1 43 1 
9 1 267 1 87 1 156 1 145 1 101 1 243 2 283 1 186 1 15 1 287 2 297 2 227 1 214 1 228 1 341 1 42 1 43 1 
267 2 221 1 101 1 243 4 5 1 297 2 175 1 51 1 227 1 341 1 228 1 35 2 9 1 87 2 156 1 283 1 186 1 15 2 287 2 214 2 42 1 43 1 
9 1 35 2 267 1 87 1 221 1 243 2 283 1 186 1 15 1 5 1 297 2 246 1 175 1 324 1 227 1 214 1 42 1 43 1 
9 1 267 1 87 1 156 1 145 1 101 1 243 2 283 1 186 1 15 1 287 2 297 2 324 1 227 1 214 1 228 1 42 1 43 1 
267 2 221 1 101 1 243 4 5 1 297 2 175 1 51 1 227 1 228 1 35 2 9 1 87 2 156 1 283 1 186 1 15 2 287 2 324 1 214 2 42 1 43 1 
267 2 221 1 101 1 243 4 5 1 297 2 175 1 51 1 227 1 228 1 35 2 9 1 87 2 156 1 283 1 186 1 15 2 287 2 214 2 42 1 43 1 
330 1 75 1 23 1 243 2 48 1 79 1 297 2 198 1 338 1 178 1 299 1 124 1 227 1 279 1 312 1 257 1 35 1 104 1 9 1 344 1 345 1 283 1 186 1 287 1 136 1 164 1 42 1 43 1 
71 1 330 1 75 1 23 1 273 1 243 2 48 1 297 2 198 1 310 1 338 1 178 1 299 1 227 1 312 1 257 1 35 1 104 1 9 1 344 1 345 1 283 1 186 1 287 1 136 1 164 1 42 1 43 1 
267 2 196 1 221 1 101 1 243 4 5 1 297 2 175 1 51 1 227 1 228 1 35 2 9 1 87 2 156 1 283 1 186 1 15 2 287 2 214 2 42 1 43 1 
267 2 330 1 23 1 75 1 101 1 221 1 243 4 3 1 48 1 5 1 79 1 297 2 175 1 198 1 178 1 299 1 124 1 51 1 227 1 228 1 279 1 35 2 104 1 9 1 87 2 156 1 344 1 283 1 186 1 207 1 15 2 287 2 136 1 164 1 214 2 42 1 43 1 
267 1 1 1 74 1 219 1 169 1 196 1 101 1 221 1 243 3 5 1 297 2 175 1 249 1 51 1 227 1 203 1 9 1 104 1 35 2 87 1 156 1 283 1 186 1 15 1 287 1 164 1 214 1 42 1 43 1 
267 2 355 1 329 1 221 1 101 1 334 1 171 1 243 9 147 2 5 1 297 4 175 1 31 1 51 1 227 2 228 1 35 4 156 1 13 1 186 2 63 1 287 5 370 1 65 1 67 1 107 1 42 2 43 2 191 1 
267 2 355 1 329 1 221 1 101 1 334 1 171 1 243 9 147 2 5 1 297 4 175 1 31 1 51 1 227 2 228 1 35 4 156 1 13 1 186 2 63 1 287 5 370 1 65 1 67 1 107 1 42 2 43 2 191 1 
267 12 355 3 98 2 111 1 329 1 269 1 221 7 101 7 171 1 243 46 245 1 147 4 5 6 122 1 297 4 175 6 31 1 51 6 82 1 227 2 228 6 256 1 204 1 35 24 342 1 156 6 13 1 186 2 37 1 63 2 287 22 370 1 209 1 65 2 67 1 141 1 107 1 42 2 328 1 326 1 43 2 191 4 
267 2 355 1 329 1 271 1 221 1 101 1 334 1 171 1 243 9 147 2 5 1 297 4 175 1 31 1 51 1 227 2 228 1 35 4 156 1 13 1 186 2 63 1 287 5 370 1 65 1 107 1 42 2 43 2 191 1 
267 2 355 3 329 2 101 1 221 2 171 1 243 20 245 1 147 2 5 2 297 6 175 1 31 1 51 2 82 1 227 3 228 1 204 1 35 11 156 1 13 1 186 3 287 9 63 2 37 1 370 1 209 1 67 1 141 2 107 2 42 3 326 1 43 3 191 2 
241 1 275 1 218 1 105 1 371 1 238 1 116 1 159 1 78 1 303 1 
64 1 86 1 
275 1 349 1 218 1 105 1 106 1 238 1 116 1 303 1 352 1 
241 1 218 1 332 1 105 1 116 1 346 1 360 1 78 1 303 1 234 1 29 1 275 1 371 1 300 1 238 1 375 1 154 2 302 1 
241 1 218 1 332 1 105 1 116 1 346 1 360 1 78 1 303 1 234 1 29 1 275 1 371 1 300 1 238 1 375 1 154 2 302 1 
241 1 218 1 332 1 105 1 116 1 346 1 360 1 78 1 303 1 234 1 29 1 275 1 371 1 300 1 238 1 375 1 154 2 302 1 
28 1 77 1 358 1 
28 1 77 1 358 1 
70 1 296 1 
77 1 70 1 296 1 
24 1 189 1 
353 1 218 1 24 1 169 2 116 1 29 1 275 1 338 1 249 2 300 1 154 1 86 1 203 2 104 2 105 1 346 1 318 1 303 1 134 1 234 1 162 1 164 2 137 1 64 1 238 1 189 1 213 1 
28 1 358 1 
77 1 70 1 296 1 
330 2 22 1 23 1 75 1 331 1 144 1 196 1 243 2 48 2 297 2 198 1 178 1 227 1 281 1 312 1 203 2 9 1 104 2 35 1 345 1 283 1 60 1 233 1 186 1 287 1 136 2 164 2 93 1 42 1 43 1 94 2 
292 1 293 1 330 2 23 1 90 1 59 1 48 2 347 1 207 1 235 1 321 1 198 1 136 2 339 1 32 1 139 1 200 2 155 1 128 1 
292 1 293 1 330 1 23 1 48 1 347 1 235 1 321 1 136 1 198 1 339 1 32 1 139 1 200 2 155 1 21 1 128 1 
257 1 330 1 23 1 75 1 90 1 48 1 148 1 198 1 136 1 80 1 178 1 66 1 52 1 128 1 
292 1 293 1 330 1 23 1 90 1 59 1 48 1 347 1 235 1 321 1 198 1 136 1 339 1 32 1 139 1 200 2 155 1 128 1 
264 1 
61 1 126 1 263 1 81 1 280 1 302 1 348 1 
354 1 72 1 217 1 197 1 29 1 199 1 150 1 300 1 280 1 302 2 365 1 259 1 58 1 348 1 263 1 96 1 291 1 
2 6 143 3 330 3 294 1 197 4 101 2 48 3 5 2 298 1 198 4 199 6 6 6 299 3 300 5 51 2 302 8 257 1 343 1 156 2 259 4 58 4 207 1 348 8 210 2 263 9 211 2 20 2 268 2 217 4 305 2 112 2 23 3 75 3 357 1 221 2 308 2 222 2 29 5 30 1 178 10 126 1 81 1 280 2 314 2 365 12 231 1 316 1 284 2 92 2 136 3 289 2 376 2 291 5 96 3 
268 2 2 5 217 2 197 2 221 2 101 2 245 1 147 1 222 1 5 2 29 1 199 3 6 5 300 1 51 2 301 1 280 2 302 5 204 1 365 6 156 2 231 1 259 2 58 2 348 5 63 1 37 1 209 1 263 8 374 1 289 1 326 1 191 1 291 1 96 1 
268 2 1 1 217 1 169 1 197 1 221 2 101 1 29 1 122 1 152 1 249 1 300 1 83 1 85 1 256 1 203 1 104 1 57 1 11 1 259 1 58 1 348 2 62 1 164 1 263 2 325 1 289 1 328 1 
217 1 259 1 58 1 197 1 348 1 126 1 81 1 263 1 280 1 302 1 
365 10 268 2 2 5 156 2 221 2 101 2 348 5 5 2 199 5 6 5 51 2 263 5 289 1 376 1 302 5 
29 1 300 1 280 1 302 1 291 1 96 1 
265 1 330 4 217 2 23 1 75 1 197 1 335 1 48 4 222 2 29 3 148 1 198 1 298 1 178 1 300 3 52 1 53 1 257 2 231 2 259 2 316 2 58 2 348 2 136 4 237 1 263 2 350 1 291 4 96 2 
1 2 330 1 194 1 23 1 75 1 169 2 243 1 48 1 297 2 79 1 198 1 338 1 178 1 124 1 299 1 249 2 227 1 83 1 279 1 312 1 257 1 203 2 104 3 9 1 344 1 283 1 186 1 287 1 136 1 164 3 42 1 43 1 
365 4 2 2 111 1 217 1 231 1 259 1 58 1 197 1 348 2 222 1 199 2 6 2 263 1 280 2 302 4 
224 1 218 1 238 1 
224 1 218 1 238 1 
193 1 218 1 371 1 24 1 238 1 
224 1 218 1 238 1 
218 1 113 1 238 1 
218 1 113 1 238 1 
218 1 113 1 238 1 
218 1 238 1 
105 1 116 1 
267 2 111 1 269 1 101 1 221 2 243 11 147 2 5 1 122 1 297 2 51 1 227 1 228 2 256 1 35 6 342 1 186 1 287 5 63 1 370 1 209 1 65 1 42 1 191 1 43 1 328 1 
267 3 111 1 269 1 101 1 221 2 243 11 147 2 5 1 122 1 297 4 175 1 51 1 227 2 228 2 256 1 229 1 35 6 342 1 186 2 287 5 63 1 370 1 209 1 65 1 42 2 328 1 43 2 191 1 
267 4 111 1 269 1 221 3 101 3 243 19 245 1 147 1 5 2 122 1 297 6 175 1 51 2 227 3 228 3 256 1 204 1 229 1 35 9 342 1 156 2 186 3 287 10 63 1 37 1 370 1 209 1 141 1 42 3 328 1 191 1 43 3 326 1 
267 5 111 1 269 1 221 3 101 2 243 17 245 1 147 1 5 2 122 1 297 6 175 2 51 2 227 3 228 3 256 1 204 1 229 1 35 10 342 1 156 1 186 3 287 7 63 1 37 1 370 1 209 1 141 1 42 3 328 1 191 1 43 3 326 1 
267 2 111 1 269 1 101 1 221 2 243 11 147 2 5 1 122 1 297 2 51 1 227 1 228 2 256 1 35 6 342 1 186 1 287 5 63 1 370 1 209 1 65 1 42 1 191 1 43 1 328 1 
267 2 221 2 101 2 243 12 245 1 147 1 5 2 297 2 175 1 51 2 227 1 228 1 204 1 35 6 156 2 186 1 287 6 63 1 37 1 370 1 209 1 42 1 191 1 43 1 326 1 
267 5 111 1 269 1 221 3 101 2 243 18 245 1 147 1 5 2 122 1 297 8 175 2 51 2 227 4 228 3 256 1 204 1 229 1 35 10 342 1 156 1 186 4 287 8 63 1 37 1 370 1 209 1 141 2 42 4 328 1 326 1 43 4 191 1 
267 6 221 3 101 2 243 16 334 1 245 1 147 1 5 3 297 8 175 3 51 3 227 4 228 3 204 1 35 9 156 2 186 4 287 7 63 1 37 1 370 1 209 1 141 2 42 4 326 1 43 4 191 1 
35 3 342 1 267 6 269 2 101 1 221 1 243 7 287 4 122 1 175 3 228 3 328 3 256 3 
267 4 111 1 269 1 221 3 101 2 243 18 334 1 245 1 147 1 5 2 122 1 297 8 175 1 51 2 227 4 228 3 256 1 204 1 35 10 342 1 156 1 186 4 287 8 63 1 37 1 370 1 209 1 141 2 42 4 328 1 326 1 43 4 191 1 
35 4 267 3 342 1 111 1 269 1 101 1 221 1 243 8 186 2 287 4 122 1 297 4 175 1 141 1 227 2 228 2 42 2 43 2 328 1 256 1 
35 3 342 1 267 2 111 1 269 1 221 1 101 1 243 6 61 1 287 3 122 1 228 2 328 1 256 1 
229 1 35 2 267 2 156 1 101 1 221 1 243 4 186 1 5 1 287 2 297 2 175 1 51 1 227 1 228 1 42 1 43 1 
35 3 267 2 156 1 101 1 221 1 243 7 147 2 5 1 63 1 287 4 175 1 65 1 51 1 228 1 191 1 
267 9 98 1 111 1 269 1 221 3 101 3 243 23 147 2 5 2 309 1 122 1 297 4 175 4 51 2 227 2 228 5 256 2 35 11 342 1 156 2 317 1 186 2 287 12 65 1 141 2 42 2 328 2 191 2 43 2 
287 1 243 1 147 1 
35 1 243 1 191 1 
229 1 35 3 267 3 156 1 221 1 101 1 243 6 186 1 5 1 287 3 297 2 175 1 51 1 227 1 42 1 376 1 228 2 43 1 
267 2 221 2 101 2 243 12 245 1 147 1 5 2 297 2 175 1 51 2 227 1 228 1 204 1 35 6 156 2 186 1 287 6 63 1 37 1 370 1 209 1 42 1 191 1 43 1 326 1 
35 3 267 2 221 1 101 1 243 6 287 3 122 1 175 1 228 1 328 1 256 1 
35 1 267 2 342 1 269 1 243 3 186 1 309 1 287 2 297 2 175 1 141 1 227 1 228 1 42 1 328 1 43 1 256 1 
35 5 267 5 11 1 221 2 101 2 243 10 186 1 287 5 297 2 122 1 370 1 175 2 227 1 42 1 228 3 43 1 328 2 256 2 
35 2 267 1 221 1 243 2 186 1 5 1 297 2 370 1 175 1 227 1 42 1 43 1 
35 2 267 2 156 1 101 1 221 1 243 4 186 1 5 1 287 2 297 2 370 1 175 1 51 1 227 1 228 1 42 1 43 1 
35 1 267 2 334 1 243 3 186 3 309 1 287 2 297 6 370 1 175 1 141 1 227 3 42 3 228 1 43 3 328 1 256 1 
216 1 267 12 110 1 111 1 269 1 221 5 101 5 334 1 243 34 147 4 5 3 309 1 122 2 297 10 337 1 175 5 51 3 227 5 228 7 256 3 229 1 35 16 342 1 156 3 186 5 287 18 63 1 370 1 65 1 141 2 42 5 328 3 43 5 191 3 
203 1 104 1 164 1 338 1 49 1 367 1 26 1 
55 1 192 1 203 1 104 1 367 1 286 1 26 1 163 1 164 1 338 1 49 1 7 1 
61 1 257 1 148 1 198 1 136 1 330 1 178 1 23 1 75 1 52 1 48 1 
203 1 257 1 104 2 330 1 75 1 23 1 344 1 169 1 48 1 79 1 198 1 165 1 164 2 136 1 338 1 178 1 299 1 249 1 
330 1 23 1 75 2 169 1 48 1 79 1 198 1 338 1 178 3 299 2 249 2 201 1 203 2 104 2 344 1 316 1 62 1 136 1 164 2 165 1 262 1 210 1 211 1 
330 2 23 1 75 2 169 1 273 1 48 2 198 1 338 1 178 3 299 2 249 2 201 1 203 2 104 2 344 1 316 1 62 1 136 2 164 2 165 1 262 1 210 1 19 1 211 1 
257 1 314 1 330 3 143 1 99 1 75 1 23 1 316 1 284 1 48 3 29 2 198 1 136 3 178 4 299 1 210 1 300 2 19 1 211 1 280 1 215 1 302 1 291 1 
257 1 314 1 330 3 143 1 305 1 75 1 23 1 316 1 284 1 48 3 29 2 198 1 136 3 178 4 299 1 210 1 300 2 19 1 211 1 280 1 302 1 291 1 
198 1 136 1 330 1 23 1 123 1 48 1 
257 2 330 7 46 1 75 2 23 2 295 1 184 1 357 1 173 1 60 1 48 6 347 1 207 1 136 7 198 3 178 3 123 1 299 1 190 1 377 1 94 1 
267 2 111 1 330 1 269 1 75 1 23 1 169 1 196 1 101 1 221 1 242 1 243 6 3 1 48 1 122 1 297 4 79 1 198 1 338 2 178 1 299 1 124 1 249 1 227 2 228 2 279 1 256 1 203 1 35 3 9 2 104 2 342 1 87 1 344 1 283 2 233 1 186 2 207 1 15 1 287 3 164 2 165 1 136 1 214 1 42 2 328 1 43 2 
353 1 330 1 143 1 217 2 305 1 112 1 197 2 48 1 308 1 29 3 298 1 178 2 126 1 300 3 81 1 280 1 302 1 257 1 314 1 259 2 58 2 284 1 348 1 136 1 263 1 20 1 291 2 96 1 
314 1 330 2 75 1 23 1 357 1 48 2 207 1 136 2 198 2 30 1 178 2 123 1 299 1 
257 1 330 4 75 1 23 1 48 4 207 1 148 1 198 1 136 4 178 1 19 1 52 1 34 1 
330 2 46 1 75 1 23 1 316 1 91 1 48 2 304 1 136 2 198 2 178 1 299 1 127 1 190 1 
257 1 293 1 321 1 198 1 136 1 330 1 32 1 23 1 200 1 48 1 
330 2 75 1 23 1 144 1 48 2 60 1 207 1 347 1 136 2 198 1 178 1 
257 1 330 5 75 2 23 2 316 1 48 4 60 1 173 1 207 1 148 1 136 5 198 2 178 3 52 1 377 1 34 1 
257 1 330 5 75 2 23 2 316 1 48 4 60 1 173 1 207 1 148 1 136 5 198 2 178 3 50 1 52 1 34 1 
203 1 257 1 104 2 330 1 75 1 23 1 344 1 169 1 273 1 48 1 198 1 165 1 164 2 136 1 338 1 178 1 299 1 249 1 
330 1 46 1 75 1 23 1 316 1 184 1 357 1 48 1 136 1 198 2 178 1 299 1 190 1 
203 1 104 1 164 1 22 1 331 1 166 1 100 1 117 1 93 1 
166 1 250 1 102 1 
338 1 166 1 100 1 117 1 142 1 
353 1 131 1 100 2 117 2 102 1 284 1 319 1 120 1 62 1 29 2 338 1 166 1 262 1 250 1 300 2 201 1 280 1 302 1 142 2 
336 1 61 1 135 1 258 1 
336 1 135 1 258 1 361 1 320 1 151 1 41 1 
151 1 282 1 278 1 
336 1 135 1 258 1 247 1 361 1 320 1 151 3 306 1 153 1 41 3 351 1 121 2 
336 1 187 1 135 1 258 1 361 1 320 1 151 2 114 1 41 2 
270 1 285 1 135 1 320 1 361 1 321 1 151 1 153 1 200 1 155 1 41 1 
135 1 258 1 361 1 320 1 151 1 153 1 41 1 
336 1 258 2 361 1 320 1 151 1 153 1 41 1 
160 1 16 1 361 1 320 1 151 1 153 1 41 1 
258 1 114 2 270 1 336 1 135 2 320 1 361 1 17 1 151 3 153 1 41 3 84 1 254 1 
258 1 293 1 114 1 119 1 336 1 135 1 235 1 320 1 361 1 321 1 151 2 200 2 153 1 155 1 41 2 
258 1 88 1 114 2 270 1 336 1 187 1 135 2 320 2 361 2 151 4 153 1 41 4 254 1 
336 1 135 1 258 1 361 1 320 1 151 1 153 1 41 1 
258 2 306 1 114 2 270 1 121 1 336 2 135 3 247 1 320 1 361 1 151 4 33 1 41 4 254 1 
258 1 10 1 114 1 333 1 195 1 336 1 135 1 320 1 361 1 151 2 153 1 41 2 
258 1 306 2 14 1 121 2 336 1 135 1 247 1 320 1 361 1 151 3 153 1 41 3 
135 2 230 1 174 2 146 1 
361 1 320 1 151 1 153 1 115 1 41 1 
336 1 135 1 258 1 361 1 320 1 151 2 114 1 153 1 84 1 41 2 
157 1 
336 1 135 1 258 1 361 1 320 1 151 1 153 1 41 1 
336 1 135 1 258 1 361 1 320 1 151 3 114 1 153 1 84 1 41 3 121 1 
135 1 33 1 270 1 254 1 
135 1 258 1 

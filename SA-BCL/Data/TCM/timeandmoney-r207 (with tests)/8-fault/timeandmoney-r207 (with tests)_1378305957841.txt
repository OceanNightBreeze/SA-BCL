#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (130,280) 363 (120,135) (120,135) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (130,280) 363 (120,135) (120,135) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (130,280) 363 (120,135) (120,135) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (130,280) 363 (120,135) (120,135) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (78,242) (122,282) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (78,242) (122,282) (122,282) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (78,242) (122,282) (122,282) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (78,242) (122,282) (122,282) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException (78,242) 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException (78,242) 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (78,242) (122,282) (122,282) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (92,305) (92,305) (252,351) 328 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (78,242) (122,282) (122,282) 159 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (78,242) (122,282) (122,282) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (78,242) (122,282) (122,282) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (78,242) (122,282) (122,282) 159 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 162 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
363 1 120 1 135 1 221 1 124 1 230 1 118 1 130 1 149 1 327 1 145 1 
363 1 120 1 135 1 221 1 124 1 230 1 118 1 130 1 149 1 327 1 145 1 
363 1 120 1 135 1 221 1 124 1 230 1 118 1 130 1 149 1 327 1 145 1 
363 1 120 1 135 1 221 1 124 1 230 1 118 1 130 1 149 1 327 1 145 1 
124 1 221 4 171 2 107 1 188 1 118 1 143 2 6 1 144 1 44 1 370 1 357 1 145 1 134 3 71 1 49 3 149 4 288 1 
124 1 221 2 230 1 107 1 118 1 131 1 132 1 6 1 44 1 145 1 111 1 134 1 67 1 149 2 327 1 288 1 
124 2 221 3 118 2 143 1 44 1 145 1 134 2 71 1 49 1 149 3 327 1 288 1 280 1 
300 1 221 9 118 2 143 4 144 1 6 1 44 1 357 1 145 1 65 1 71 3 360 1 167 1 49 7 149 9 288 1 124 2 171 2 188 1 107 1 370 1 134 5 327 1 280 1 
300 1 221 9 118 2 143 4 144 1 6 1 44 1 357 1 145 1 65 1 71 3 360 1 167 1 49 7 149 9 288 1 124 2 171 2 188 1 107 1 370 1 134 5 327 1 280 1 
337 1 26 1 31 1 
106 1 180 2 31 1 
233 2 187 2 97 1 28 2 228 1 356 2 294 2 185 2 
200 1 237 1 39 1 161 1 97 1 305 1 98 1 261 1 356 3 68 1 244 1 47 1 334 1 148 1 228 1 185 2 366 1 16 1 19 1 187 2 128 2 172 1 322 1 250 1 189 2 191 1 294 3 233 2 194 1 275 2 157 1 298 2 28 2 257 1 219 2 178 1 60 1 
282 1 233 1 242 1 187 1 97 1 28 1 356 1 294 1 185 1 
282 1 96 1 97 1 163 1 5 1 356 2 310 1 242 1 315 1 122 1 75 1 185 1 361 1 337 1 187 2 215 1 294 2 86 1 233 1 28 1 31 1 
282 1 337 1 96 1 187 2 97 1 5 1 356 2 294 2 215 1 310 2 233 2 242 1 122 1 315 1 28 2 75 1 31 1 185 2 361 2 
310 1 204 1 113 1 20 1 361 1 
259 1 310 2 337 1 204 1 20 1 109 1 31 1 361 2 
310 1 204 1 361 1 
282 1 310 1 233 1 242 1 187 1 97 1 122 1 28 1 20 1 356 1 294 1 185 1 361 1 
31 1 
310 2 337 1 204 1 20 1 109 1 31 1 361 2 146 1 
249 1 15 1 337 1 201 1 179 1 204 2 223 1 20 2 214 2 109 1 343 2 345 1 241 2 310 5 121 1 48 1 31 1 198 1 361 5 
26 1 228 1 
233 1 88 1 187 2 28 1 228 2 356 2 185 1 294 2 362 1 
320 1 138 1 332 1 
39 1 16 1 161 1 128 1 322 1 98 1 189 1 261 1 356 1 294 1 68 1 228 1 265 1 257 1 219 1 60 1 
68 1 95 1 128 1 189 1 219 1 
336 1 95 1 187 2 356 2 215 1 294 2 233 2 88 1 28 2 228 1 78 1 185 1 
233 1 242 1 187 1 28 1 356 1 294 1 
336 1 233 3 187 3 28 3 228 1 356 3 185 1 294 3 
233 1 242 1 187 1 28 1 356 1 294 1 
233 1 88 1 187 1 28 1 356 1 215 1 294 1 185 1 362 1 
233 1 95 1 88 1 187 1 28 1 356 1 294 1 185 1 
336 1 233 1 187 2 99 1 28 1 228 1 356 2 294 2 86 1 
95 1 
336 1 233 2 88 1 138 1 187 2 332 1 28 2 356 2 294 2 185 1 
39 1 16 1 161 1 128 1 322 1 98 1 189 1 261 1 356 1 294 1 68 1 228 1 257 1 219 1 60 1 
16 1 161 1 128 1 322 1 98 1 189 1 42 1 356 1 294 1 68 1 10 1 228 1 257 1 219 1 60 1 
220 1 200 1 329 1 207 1 240 1 165 1 208 1 332 2 334 2 169 1 320 2 19 1 129 1 172 1 250 1 54 1 191 1 157 1 275 4 298 2 25 1 138 2 30 1 178 2 
233 1 96 1 187 1 28 1 72 1 356 1 215 1 294 1 
84 1 12 1 
84 1 12 1 
267 1 277 1 
267 1 277 1 
267 1 277 1 
248 1 84 1 12 1 
206 1 84 1 12 1 
267 1 51 1 277 1 84 2 12 2 318 1 
248 1 84 1 12 1 
248 1 84 1 12 1 
227 1 84 1 12 1 
227 1 84 1 12 1 
227 1 84 1 12 1 
206 1 353 1 43 1 356 2 181 1 310 1 183 1 209 1 102 1 228 1 12 1 361 1 187 2 341 1 251 1 84 1 270 1 294 2 133 1 233 2 136 1 139 1 196 1 28 2 
199 2 82 1 62 1 341 2 369 1 43 1 84 2 216 1 310 2 136 2 139 2 158 1 196 2 209 3 51 1 12 2 31 1 361 2 177 1 
107 1 6 1 357 1 
107 1 6 1 132 1 
262 1 324 1 6 3 132 1 357 2 13 1 
156 1 262 1 324 1 6 2 132 1 357 1 
262 2 324 1 6 2 132 1 357 1 
35 2 34 1 283 2 61 1 179 1 204 1 180 3 226 2 241 1 181 1 310 5 183 1 359 1 208 1 104 1 361 5 169 1 249 2 337 1 15 3 105 1 106 1 129 1 20 4 214 1 270 1 343 1 109 1 299 1 30 1 31 2 32 1 
35 6 283 6 201 1 61 2 204 6 179 1 180 9 63 1 181 4 241 2 310 9 359 2 208 3 361 9 169 3 289 5 249 6 337 1 15 8 105 1 154 1 212 1 106 3 129 3 20 7 214 2 109 1 343 2 110 1 56 1 113 5 350 1 30 3 31 5 32 3 
34 1 35 2 283 2 201 1 61 1 180 4 226 1 241 1 181 1 310 3 359 1 208 1 104 1 361 3 169 1 249 2 337 1 15 3 106 2 129 1 20 2 214 1 343 1 30 1 31 3 32 1 
35 4 34 1 283 4 201 1 61 1 180 7 226 2 63 1 241 1 181 2 310 4 359 1 208 2 104 1 361 4 169 2 249 4 337 1 15 5 154 1 106 3 129 2 20 3 214 1 343 1 110 1 30 2 31 4 32 2 
285 1 161 1 26 1 
372 1 161 1 
333 1 
16 1 161 1 60 1 
161 1 74 1 
161 1 60 1 
285 2 16 1 161 3 213 1 151 1 60 1 
38 1 225 1 173 1 190 1 240 1 296 1 165 2 275 1 101 1 264 1 91 1 317 1 178 1 
38 1 225 1 173 1 190 1 240 1 296 1 165 2 275 1 101 1 264 1 91 1 317 1 178 1 
38 1 173 1 225 1 190 1 240 1 296 1 165 2 275 1 101 1 264 1 91 1 317 1 352 1 178 1 
38 2 200 1 238 1 225 2 240 4 311 1 165 9 287 1 208 3 101 1 50 1 264 2 316 1 334 12 317 2 169 3 364 4 80 1 19 1 172 1 368 3 129 3 173 1 190 2 296 1 157 1 275 25 298 2 91 5 140 1 30 3 32 3 178 13 
38 1 200 2 19 2 172 2 173 1 225 1 190 1 240 2 296 1 358 1 165 3 275 3 157 2 298 4 218 1 50 1 264 1 334 1 91 1 317 1 178 2 
221 2 2 1 118 1 6 2 44 1 357 1 145 1 309 1 314 1 49 1 245 1 149 2 288 1 13 1 124 1 128 1 107 1 322 1 189 1 55 1 132 1 22 1 272 1 134 1 235 1 326 1 327 1 257 1 279 1 219 1 
301 1 221 3 2 1 118 1 6 2 44 1 357 1 309 1 49 2 245 1 149 3 288 1 13 1 124 1 186 1 128 1 107 1 322 1 323 1 189 1 55 1 132 1 22 1 272 1 134 1 326 1 327 1 257 1 279 1 219 1 
301 1 221 2 2 1 6 2 44 1 357 1 309 1 49 2 149 2 288 1 13 1 128 1 322 1 107 1 323 1 189 1 55 1 132 1 272 1 134 1 326 1 327 1 257 1 279 1 219 1 
221 1 303 1 205 1 116 1 161 1 118 1 45 1 309 2 68 1 149 1 247 1 124 1 186 1 128 1 322 1 189 1 137 1 326 2 257 1 327 2 279 2 219 1 60 1 
221 1 2 1 118 1 6 2 357 1 145 1 309 1 245 1 149 1 13 1 124 1 128 1 107 1 322 1 323 1 189 1 55 1 132 1 22 1 272 1 235 1 326 1 327 1 257 1 279 1 219 1 
79 1 
114 1 116 1 204 6 161 1 163 1 5 1 164 2 284 2 241 1 66 1 68 2 69 1 243 1 75 1 247 1 249 2 15 2 337 2 81 2 291 1 18 4 128 2 214 1 343 1 294 1 215 1 86 1 175 1 87 2 347 1 257 1 31 3 219 2 141 2 96 1 179 1 180 2 356 1 310 5 308 1 46 2 312 1 359 1 315 1 103 1 361 5 155 1 187 1 106 2 322 1 189 2 109 3 112 2 276 1 60 1 
96 1 204 2 163 1 5 1 356 1 146 1 66 1 310 3 308 1 46 1 69 1 315 1 75 1 361 3 337 2 291 1 155 1 18 2 187 1 109 1 294 1 215 1 86 1 31 2 
337 2 81 1 96 1 155 1 291 1 18 3 187 1 163 1 5 1 356 1 215 1 294 1 86 1 308 1 310 2 66 1 69 1 315 1 75 1 31 2 361 2 
96 1 204 2 163 1 5 1 356 1 146 1 66 1 310 3 308 1 46 1 69 1 315 1 75 1 361 3 337 2 81 1 291 1 155 1 18 3 187 1 109 1 294 1 215 1 86 1 87 1 31 2 
282 1 114 1 330 1 204 7 163 1 5 1 164 2 284 2 241 1 66 1 242 1 69 1 8 1 122 1 75 1 123 1 249 1 337 4 15 1 81 3 291 1 18 5 214 1 343 1 215 1 294 2 86 1 87 4 347 1 28 1 31 4 36 1 141 2 142 1 96 1 179 1 97 1 356 2 146 1 308 1 310 5 46 4 315 1 185 1 361 5 155 1 187 2 106 2 109 3 233 1 112 2 
114 1 204 4 163 1 5 1 164 2 284 2 241 1 66 1 69 1 75 1 249 1 337 3 15 1 81 2 291 1 18 4 214 1 343 1 215 1 294 1 86 1 347 1 87 2 31 4 141 2 96 1 179 1 180 2 356 1 310 4 308 1 46 2 312 1 315 1 361 4 155 1 187 1 106 2 109 2 112 2 
141 2 36 1 114 1 96 1 204 4 179 1 163 1 5 1 164 2 284 2 356 1 241 1 66 1 310 4 308 1 46 2 8 1 69 1 315 1 75 1 123 1 361 4 249 1 15 1 337 3 81 2 291 1 155 1 18 4 187 1 106 2 214 1 109 2 343 1 294 1 215 1 86 1 87 2 112 2 347 1 31 3 
141 2 36 1 114 1 96 1 204 4 179 1 163 1 5 1 164 2 284 2 356 1 241 1 66 1 310 4 308 1 46 2 8 1 69 1 315 1 75 1 123 1 361 4 249 1 15 1 337 3 81 2 291 1 155 1 18 4 187 1 106 2 214 1 109 2 343 1 294 1 215 1 86 1 87 2 112 2 347 1 31 3 
96 1 204 4 179 1 180 2 163 1 354 1 5 1 164 2 284 2 356 1 241 1 66 1 310 4 308 1 46 2 182 2 8 1 69 1 315 1 75 1 361 4 249 1 15 1 337 3 81 2 290 1 291 1 155 1 127 2 18 4 187 1 229 1 214 1 109 2 343 1 294 1 215 1 86 1 87 2 347 1 31 3 
141 2 36 1 114 1 96 1 330 1 179 1 204 5 163 1 5 1 164 2 284 2 356 1 241 1 66 1 310 4 308 1 46 3 8 1 69 1 315 1 123 1 75 1 361 4 249 1 15 1 337 3 81 3 291 1 155 1 18 5 187 1 106 2 214 1 109 2 343 1 294 1 215 1 86 1 112 2 347 1 87 3 31 3 
141 2 36 1 114 1 96 1 330 1 179 1 204 5 163 1 5 1 164 2 284 2 356 1 241 1 66 1 310 4 308 1 46 3 8 1 69 1 315 1 123 1 75 1 361 4 249 1 15 1 337 3 81 3 291 1 155 1 18 5 187 1 106 2 214 1 109 2 343 1 294 1 215 1 86 1 112 2 347 1 87 3 31 3 
204 4 163 1 5 1 164 2 284 2 241 1 66 1 69 1 75 1 249 1 337 3 15 1 81 2 290 1 291 1 18 4 127 2 214 1 343 1 215 1 294 1 86 1 347 1 87 2 31 3 96 1 179 1 180 2 356 1 310 4 308 1 182 2 46 2 312 1 315 1 361 4 155 1 187 1 109 2 
200 1 19 1 172 1 250 1 173 1 190 1 191 1 240 1 296 1 165 1 157 1 25 1 298 2 26 1 264 1 
200 2 117 1 224 1 240 1 165 2 208 2 244 1 332 4 334 6 316 1 228 1 320 11 169 1 364 3 80 1 17 1 19 2 172 2 368 3 129 2 250 1 295 1 191 2 194 1 157 2 275 14 298 4 255 1 138 11 91 1 30 1 32 2 178 8 
200 1 95 1 117 1 19 1 83 1 172 1 250 1 108 1 191 1 275 1 194 1 157 1 298 2 178 1 
92 1 200 1 95 1 117 1 19 1 128 1 172 1 305 1 250 1 189 1 191 1 275 1 157 1 68 1 298 2 244 1 334 1 351 1 219 1 328 1 
200 2 161 3 116 1 4 1 239 1 119 1 356 1 68 2 313 1 314 1 244 1 334 1 246 1 247 1 336 1 366 2 187 1 128 8 19 2 322 2 172 2 323 1 250 2 342 1 189 7 294 1 191 2 273 1 233 1 157 2 194 1 275 2 25 1 298 4 28 1 257 2 219 8 178 1 60 2 
200 1 94 1 117 1 356 1 240 1 165 1 208 1 332 1 334 2 185 1 320 1 169 1 19 1 187 1 172 1 129 1 250 1 191 1 294 1 233 1 157 1 275 3 88 1 298 2 138 1 28 1 30 1 32 1 178 1 
320 1 220 1 200 1 19 1 172 1 129 1 250 1 191 1 165 1 275 2 157 1 25 1 298 2 138 1 208 1 332 1 91 1 178 2 
320 1 169 1 200 1 19 1 172 1 250 1 207 1 191 1 240 1 165 1 275 2 157 1 25 1 298 2 138 1 332 1 334 2 30 1 
169 1 320 2 200 1 19 1 172 1 129 1 250 1 191 1 240 1 165 2 275 4 157 1 25 1 298 2 138 2 208 1 332 2 334 2 91 1 30 1 32 1 178 2 
320 1 220 1 200 1 19 1 172 1 129 1 250 1 191 1 165 1 275 2 157 1 298 2 138 1 208 1 332 1 91 1 246 1 178 2 
320 1 169 1 200 1 19 1 172 1 250 1 207 1 191 1 240 1 165 1 275 2 157 1 298 2 138 1 332 1 334 2 246 1 30 1 
169 1 320 2 200 1 19 1 172 1 129 1 250 1 191 1 240 1 165 2 275 4 157 1 298 2 138 2 208 1 332 2 334 2 91 1 30 1 246 1 32 1 178 2 
169 1 320 2 200 1 19 1 172 1 129 1 250 1 191 1 240 1 165 2 157 1 275 4 298 2 138 2 208 1 332 2 334 2 91 1 30 1 32 1 178 2 
200 1 39 1 161 1 98 1 305 1 261 1 356 1 68 1 244 1 334 1 228 1 16 1 128 1 19 1 322 1 172 1 250 1 189 1 294 1 191 1 194 1 275 2 157 1 298 2 257 1 219 1 178 1 60 1 
200 1 161 1 98 1 42 1 307 1 356 1 68 1 244 1 10 1 334 1 228 1 16 1 128 1 19 1 322 1 172 1 250 1 189 1 294 1 191 1 194 1 275 2 157 1 298 2 257 1 219 1 178 1 60 1 
169 1 320 2 200 1 117 1 19 1 172 1 129 1 250 1 191 1 240 1 165 2 275 4 157 1 298 2 138 2 208 1 332 2 334 2 91 1 30 1 32 1 178 2 
92 1 200 1 39 1 161 1 98 1 305 1 261 1 356 1 240 1 165 2 208 1 314 1 332 2 334 2 169 1 320 2 16 1 128 1 19 1 129 1 322 1 172 1 250 1 189 1 294 1 191 1 275 4 157 1 298 2 138 2 91 1 30 1 257 1 219 1 32 1 178 2 60 1 
200 1 117 1 356 1 165 1 208 1 332 1 334 1 185 1 169 1 320 1 19 1 187 1 172 1 129 1 250 1 269 1 191 1 294 1 233 1 157 1 275 3 88 1 298 2 138 1 28 1 91 1 30 1 32 1 178 2 
0 1 200 2 331 1 240 1 100 1 358 1 165 2 208 1 168 1 334 5 316 1 150 1 266 1 169 1 364 2 338 1 80 1 19 2 172 2 368 1 129 1 157 2 275 9 298 4 27 1 91 1 30 1 32 1 178 4 
0 1 200 3 304 1 240 1 100 2 358 1 165 2 208 2 50 2 334 9 150 1 266 1 319 1 169 1 170 1 364 2 338 3 80 2 19 3 172 3 368 2 129 2 21 1 193 1 157 3 275 20 254 1 298 6 27 2 91 1 160 1 30 1 32 2 178 11 
0 1 200 2 331 1 240 1 100 1 358 1 165 2 208 1 334 5 316 1 150 1 266 1 169 1 364 2 338 1 80 1 19 2 172 2 368 1 129 1 193 1 157 2 275 9 298 4 27 1 91 1 30 1 32 1 178 4 
0 1 200 2 331 1 240 1 100 1 358 1 165 2 208 1 334 5 316 1 150 1 266 1 169 1 364 2 338 1 80 1 19 2 172 2 368 1 129 1 193 1 157 2 275 9 298 4 27 1 91 1 30 1 32 1 178 4 
0 1 200 2 304 1 240 6 100 1 358 1 165 12 208 6 50 1 264 1 334 20 316 2 150 1 266 1 319 1 170 1 169 6 364 4 338 3 80 2 19 2 172 2 368 4 129 6 173 1 190 1 21 1 295 2 193 1 296 1 254 1 157 2 275 41 298 4 27 1 91 6 160 1 30 6 32 6 178 21 
166 1 136 1 139 1 196 1 62 1 341 1 51 1 84 1 12 1 177 1 
206 1 133 1 
37 1 136 1 203 1 139 1 196 1 341 1 89 1 84 1 12 1 
248 1 271 1 
227 1 321 1 318 1 
199 1 62 1 341 1 369 1 43 1 84 1 216 1 310 1 136 1 139 1 158 1 196 1 209 2 51 1 12 1 31 1 361 1 177 1 
199 1 62 1 341 1 369 1 43 1 84 1 216 1 310 1 136 1 139 1 158 1 196 1 209 2 51 1 12 1 31 1 361 1 177 1 
199 1 62 1 341 1 369 1 43 1 84 1 216 1 310 1 136 1 139 1 158 1 196 1 209 2 51 1 12 1 31 1 361 1 177 1 
248 1 271 1 318 1 
248 1 271 1 318 1 
227 1 321 1 
227 1 321 1 318 1 
353 1 102 1 
199 1 206 1 353 1 356 2 181 1 310 1 183 1 209 1 102 1 228 1 76 1 12 1 361 1 187 2 341 1 20 1 251 1 84 1 270 1 294 2 133 1 216 1 233 2 136 1 139 1 196 1 28 2 
200 1 115 1 161 1 117 1 356 2 313 1 244 1 184 1 334 1 366 2 339 1 128 2 187 2 19 1 322 1 172 1 250 1 53 1 189 2 344 1 191 1 294 2 273 1 157 1 194 1 275 2 298 2 257 1 219 2 60 1 178 1 
2 1 128 2 107 1 322 1 323 1 189 2 6 2 132 1 357 1 272 1 309 1 253 1 314 1 245 1 257 1 13 1 219 2 236 1 33 1 
2 1 128 1 340 1 107 1 322 1 323 1 189 1 6 2 132 1 357 1 272 1 309 1 245 1 257 1 13 1 219 1 33 1 
161 1 116 1 128 1 322 1 189 1 309 1 68 1 253 1 286 1 137 1 257 1 247 1 219 1 60 1 
2 1 128 1 107 1 322 1 323 1 189 1 6 2 132 1 357 1 272 1 309 1 253 1 245 1 257 1 13 1 219 1 236 1 33 1 
234 1 
249 1 15 1 337 1 26 1 48 1 31 1 198 1 
141 1 114 1 179 1 204 1 180 1 241 1 310 1 361 1 249 1 15 1 337 1 106 1 214 1 343 1 109 1 112 1 31 2 
283 3 161 4 204 2 241 2 285 1 68 1 208 1 11 1 75 1 211 1 335 1 169 1 249 3 15 4 16 1 128 1 129 1 214 2 343 2 252 1 217 1 256 1 257 2 31 3 30 1 219 1 32 1 35 3 260 1 179 2 180 6 310 2 359 1 151 1 361 2 153 1 322 1 106 3 189 1 109 1 192 1 372 2 60 1 
35 5 283 5 204 1 179 2 180 6 241 2 310 1 7 1 359 1 208 2 243 1 335 2 361 1 319 1 170 1 169 2 364 1 249 5 15 8 337 2 80 1 367 1 106 3 368 1 129 2 214 2 21 1 109 1 343 2 254 1 58 1 31 5 160 1 30 2 32 2 
36 1 282 1 179 1 97 1 356 1 241 1 310 1 242 1 122 1 264 1 335 2 185 1 361 1 169 1 249 1 15 2 187 1 129 1 293 1 214 1 190 1 343 1 294 1 233 1 28 1 159 1 
249 1 337 1 15 1 179 1 214 1 343 1 241 1 48 1 31 1 198 1 
35 5 169 2 249 5 283 5 15 5 129 2 180 10 106 5 7 1 208 2 211 1 335 2 31 5 30 2 32 2 
310 1 337 1 204 1 109 1 31 1 361 1 
201 1 161 1 179 1 204 4 116 1 241 2 310 3 68 2 147 1 359 2 70 2 243 2 103 1 247 1 361 3 249 2 15 2 128 4 322 1 189 4 214 2 343 2 109 2 232 1 175 1 274 1 257 1 219 4 60 1 
200 1 237 1 39 1 161 1 97 1 305 1 98 1 261 1 356 3 68 1 244 1 334 1 228 1 185 2 16 1 19 1 128 1 187 2 172 1 322 1 250 1 189 1 294 3 191 1 233 2 275 1 157 1 298 2 28 2 257 1 219 1 60 1 
35 2 249 2 283 2 15 1 337 2 179 1 106 2 180 4 225 1 214 1 343 1 241 1 359 1 243 1 31 4 
196 1 341 1 306 1 
196 1 62 1 353 1 341 1 258 1 
196 1 341 1 306 1 
196 1 341 1 306 1 
196 1 341 1 197 1 
196 1 341 1 197 1 
196 1 341 1 197 1 
196 1 341 1 
84 1 12 1 
200 2 19 2 172 2 173 1 190 1 240 1 296 1 165 2 275 2 157 2 298 4 50 1 334 1 264 1 91 1 178 1 
296 1 165 1 26 1 264 1 173 1 190 1 240 1 
169 1 200 1 19 1 172 1 129 1 240 1 371 1 165 2 157 1 275 4 298 2 208 1 334 2 91 1 30 1 32 1 178 2 
169 1 364 2 80 1 368 1 129 1 240 1 165 2 275 7 208 1 334 4 316 1 91 1 30 1 32 1 178 3 
200 2 1 1 224 1 225 1 240 6 165 11 208 2 50 2 264 4 316 1 334 14 169 3 364 2 19 2 129 3 368 2 172 2 293 1 173 1 190 4 295 1 296 1 275 27 157 2 298 4 159 1 91 5 30 2 32 2 178 13 
364 1 275 1 334 1 
275 1 368 1 178 1 
169 1 200 1 19 1 172 1 129 1 240 2 371 1 165 3 157 1 275 6 298 2 208 1 334 3 211 1 91 1 30 1 32 1 178 3 
200 1 240 1 358 1 165 2 208 2 334 6 170 1 169 2 319 1 364 1 80 1 19 1 368 1 172 1 129 2 21 1 275 12 254 1 157 1 298 2 91 1 160 1 30 2 32 2 178 6 
169 1 165 2 275 6 129 1 293 1 264 1 334 3 91 1 190 1 240 1 178 3 
200 1 1 1 225 1 240 3 165 6 50 1 334 6 264 3 169 1 19 1 172 1 129 1 293 1 173 1 190 3 296 1 157 1 275 12 298 2 159 1 91 3 178 6 
169 2 200 1 19 1 172 1 129 2 293 1 190 2 240 3 358 1 165 5 157 1 275 10 298 2 159 1 264 2 334 5 91 2 178 5 
200 1 19 1 172 1 129 1 358 1 165 1 157 1 275 2 298 2 208 1 91 1 178 2 
169 1 200 1 19 1 172 1 129 1 240 1 358 1 165 2 157 1 275 4 298 2 208 1 334 2 91 1 30 1 32 1 178 2 
200 3 1 1 19 3 331 1 172 3 190 1 240 1 358 1 165 2 275 3 157 3 298 6 50 1 334 2 264 1 91 1 178 1 
200 5 1 1 238 1 331 1 240 6 358 1 311 1 165 11 208 3 50 2 264 3 334 15 316 1 169 4 364 4 80 1 19 5 172 5 368 3 129 4 293 1 173 1 190 3 296 1 371 1 157 5 275 28 298 10 140 1 91 5 30 3 32 3 178 13 
364 1 200 1 80 1 19 1 172 1 368 1 173 1 190 1 240 1 296 1 358 1 165 1 157 1 254 1 275 2 298 2 264 1 334 1 178 1 
200 2 240 1 358 1 165 2 208 1 264 1 334 2 316 1 364 2 80 1 19 2 172 2 368 1 129 1 173 1 190 1 296 1 371 1 275 5 254 1 157 2 298 4 91 1 32 1 178 3 
200 3 240 2 358 1 165 3 208 2 50 1 264 1 334 7 319 1 170 1 169 2 364 1 80 1 19 3 368 1 172 3 129 2 173 1 190 1 21 1 296 1 371 1 275 13 254 1 157 3 298 6 91 1 160 1 30 2 32 2 178 6 
200 3 240 2 358 1 165 4 208 2 50 1 264 1 334 4 170 1 169 1 319 1 364 1 80 1 19 3 368 1 172 3 129 2 173 1 190 1 21 1 296 1 371 1 275 11 254 1 157 3 298 6 91 2 160 1 30 1 32 2 178 7 
364 1 200 1 80 1 19 1 172 1 368 1 173 1 190 1 240 1 296 1 358 1 165 1 157 1 254 1 275 2 298 2 264 1 334 1 178 1 
200 1 240 1 358 1 165 2 208 2 334 6 170 1 169 2 319 1 364 1 80 1 19 1 368 1 172 1 129 2 21 1 275 12 254 1 157 1 298 2 91 1 160 1 30 2 32 2 178 6 
200 4 240 2 358 1 165 4 208 2 50 2 264 1 334 5 319 1 170 1 169 1 364 1 80 1 19 4 172 4 368 1 129 2 173 1 190 1 21 1 296 1 371 1 275 12 254 1 157 4 298 8 91 2 160 1 30 1 32 2 178 7 
200 4 331 1 240 3 358 1 165 6 208 3 50 2 334 7 319 1 170 1 169 2 364 1 80 1 19 4 172 4 368 1 129 3 21 1 275 16 254 1 157 4 298 8 91 3 160 1 30 2 32 3 178 9 
173 2 190 2 240 2 296 1 165 4 275 2 264 2 334 1 91 2 178 1 
200 4 331 1 240 2 358 1 165 3 208 2 50 2 264 1 334 5 319 1 170 1 169 1 364 1 80 1 19 4 172 4 368 1 129 2 173 1 190 1 21 1 296 1 275 12 254 1 157 4 298 8 91 1 160 1 30 1 32 2 178 7 
187 1 99 1 73 1 228 1 356 1 294 1 86 1 
93 1 281 1 125 1 187 1 99 1 356 1 294 1 86 1 23 1 325 1 73 1 228 1 
68 1 161 1 116 1 26 1 128 1 322 1 189 1 257 1 247 1 219 1 60 1 
336 1 16 1 39 1 161 1 187 1 128 1 322 1 98 1 189 1 356 2 294 2 233 1 68 1 28 1 228 1 257 1 219 1 60 1 
96 1 39 1 161 3 98 1 356 2 70 1 315 1 74 1 228 1 210 1 336 1 16 2 128 1 187 2 322 1 189 1 294 2 215 1 233 1 28 2 257 1 219 1 60 2 
96 1 161 3 98 1 356 2 70 1 9 1 315 1 10 1 74 1 228 1 210 1 336 1 16 2 128 2 187 2 322 1 189 2 294 2 215 1 233 1 28 2 257 1 219 2 60 2 
282 1 222 1 204 1 161 4 97 1 356 1 285 1 310 2 242 1 70 1 122 1 74 1 210 1 75 1 185 1 361 2 337 1 16 1 187 1 128 1 322 1 52 1 189 1 294 1 233 1 372 1 28 1 257 1 31 1 219 1 60 1 
282 1 260 1 204 1 161 4 97 1 356 1 285 1 310 2 242 1 70 1 122 1 74 1 210 1 75 1 185 1 361 2 337 1 16 1 187 1 128 1 322 1 189 1 294 1 233 1 372 1 28 1 257 1 31 1 219 1 60 1 
128 1 322 1 189 1 342 1 257 1 219 1 
366 1 16 1 161 3 4 1 128 7 40 1 322 2 323 1 239 1 342 1 189 6 119 1 64 1 273 1 68 2 314 1 263 1 257 3 219 7 151 1 60 2 
92 1 200 2 39 1 161 1 117 1 98 1 305 1 261 1 356 2 240 1 165 1 314 1 264 1 336 1 16 1 187 1 19 2 128 1 322 1 172 2 250 2 189 1 173 1 190 1 344 1 191 2 294 2 296 1 233 1 157 2 298 4 28 1 351 1 257 1 219 1 60 1 
282 1 204 2 161 2 285 1 241 2 242 1 68 1 122 1 75 1 335 2 169 2 249 3 337 2 15 4 128 1 129 1 20 1 293 1 214 2 343 2 294 1 252 1 217 1 28 1 31 2 219 1 260 1 179 2 97 1 356 1 310 3 147 1 48 1 264 1 185 1 361 3 187 1 189 1 109 1 190 1 192 1 233 1 372 1 159 1 198 1 
16 1 161 2 128 2 322 1 342 1 189 2 285 1 314 1 256 1 257 2 219 2 151 1 60 1 
116 1 161 1 128 4 322 1 355 1 189 4 68 1 314 1 9 1 257 1 247 1 219 4 60 1 
16 1 161 1 128 2 40 1 322 1 189 2 174 1 64 1 349 1 70 1 59 1 257 2 219 2 60 1 
68 1 128 1 107 1 322 1 189 1 6 1 132 1 257 1 219 1 272 1 
115 1 161 1 128 2 322 1 323 1 189 2 273 1 314 1 257 1 219 2 60 1 
116 1 161 3 128 5 322 2 239 1 355 1 189 4 119 1 273 1 68 1 70 1 314 1 247 1 257 2 219 5 60 2 
116 1 161 3 128 5 322 2 41 1 355 1 189 4 119 1 273 1 68 1 70 1 314 1 247 1 257 2 219 5 60 2 
336 1 16 1 161 1 187 1 128 1 322 1 98 1 189 1 356 2 294 2 233 1 68 1 28 1 10 1 228 1 257 1 219 1 60 1 
16 1 161 1 128 1 40 1 322 1 189 1 64 1 70 1 263 1 257 2 219 1 151 1 60 1 
176 1 348 1 268 1 14 1 
310 1 176 1 348 1 3 1 302 1 162 1 268 1 20 1 14 1 361 1 
176 1 348 1 339 1 187 1 53 1 184 1 356 1 294 1 14 1 
348 1 3 1 162 1 
134 1 26 1 44 1 288 1 
134 1 221 1 124 1 118 1 149 1 44 1 288 1 
326 1 149 1 327 1 
124 1 221 3 118 1 44 1 145 1 346 1 134 1 67 2 149 3 278 1 77 1 288 1 
134 1 221 2 124 1 171 1 118 1 49 1 149 2 44 1 288 1 
134 1 221 1 124 1 107 1 118 1 143 1 149 1 6 1 144 1 357 1 145 1 
134 1 221 1 124 1 118 1 149 1 288 1 145 1 
221 1 124 1 118 1 149 1 44 1 288 2 145 1 
124 2 221 2 118 2 292 1 145 1 134 1 297 1 29 1 149 2 288 1 
124 1 221 3 118 1 143 1 44 1 145 1 65 1 134 2 71 1 167 1 49 2 149 3 288 1 
124 1 221 2 107 1 118 1 132 1 6 2 44 1 357 1 145 1 134 1 49 1 149 2 90 1 288 1 13 1 
124 2 221 4 171 1 118 2 143 1 44 1 370 1 145 1 134 2 71 1 49 2 149 4 288 1 
134 1 221 1 124 1 118 1 149 1 44 1 288 1 145 1 
202 1 221 4 124 1 118 1 143 1 44 2 346 1 67 1 134 3 71 1 49 2 149 4 77 1 288 2 
124 1 221 2 118 1 44 1 145 1 134 1 57 1 195 1 360 1 49 1 149 2 288 1 
365 1 124 1 221 3 118 1 44 1 145 1 346 1 134 1 67 2 149 3 77 2 288 1 
152 1 134 2 126 2 231 1 
221 1 124 1 24 1 118 1 149 1 145 1 
65 1 134 1 221 2 124 1 118 1 49 1 149 2 44 1 288 1 145 1 
85 1 
134 1 221 1 124 1 118 1 149 1 44 1 288 1 145 1 
65 1 134 1 67 1 221 3 124 1 118 1 49 1 149 3 44 1 288 1 145 1 
134 1 202 1 71 1 143 1 
134 1 288 1 

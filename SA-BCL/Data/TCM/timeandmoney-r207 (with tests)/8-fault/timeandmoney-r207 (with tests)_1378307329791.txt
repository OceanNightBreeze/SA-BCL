#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 271 346 49 327 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 271 346 49 327 272 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 271 346 49 327 272 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 271 346 49 327 272 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (194,347) 25 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (194,347) 236 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (194,347) 236 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (194,347) 25 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 119 67 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 133 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 165 (55,235) (55,235) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 1442 | if (x) -> if (!x)
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
105 2 81 1 165 4 214 9 130 9 217 6 4 1 319 1 66 2 201 1 227 4 202 1 204 2 136 1 93 2 71 1 95 2 261 2 235 1 139 1 373 1 120 1 239 1 99 3 307 1 263 1 336 1 312 2 55 1 
105 2 81 1 165 4 214 9 130 9 217 6 4 1 319 1 66 2 201 1 227 4 202 1 204 2 136 1 71 1 93 2 95 2 261 2 235 1 139 1 373 1 120 1 239 1 99 3 307 1 263 1 336 1 312 2 55 1 
105 2 81 1 165 4 214 9 130 9 217 6 4 1 319 1 66 2 201 1 227 4 202 1 204 2 136 1 71 1 93 2 95 2 261 2 235 1 139 1 373 1 120 1 239 1 99 3 307 1 263 1 336 1 312 2 55 1 
105 2 81 1 165 3 214 7 130 7 217 4 4 1 319 1 66 2 227 3 202 1 204 2 136 1 71 1 93 1 95 2 261 2 235 1 139 1 373 1 120 1 239 1 99 2 307 1 263 1 336 1 312 2 55 1 
105 1 81 1 165 2 214 4 130 4 217 3 319 1 66 1 227 2 201 1 202 1 204 1 93 2 261 1 235 1 239 1 99 1 312 1 55 1 
136 1 105 1 11 1 302 1 130 2 214 2 95 1 261 1 235 1 319 1 263 1 276 1 202 1 312 1 204 1 55 1 
105 2 165 1 71 1 130 3 214 3 95 1 261 2 217 1 235 1 99 1 319 1 227 1 202 1 55 1 
105 2 81 1 165 4 214 9 130 9 217 7 2 1 319 1 66 1 227 4 201 1 202 1 8 1 204 1 71 1 93 2 95 1 261 2 235 1 373 1 120 1 239 1 99 3 312 1 55 1 
105 2 81 1 165 4 214 9 130 9 217 7 2 1 319 1 66 1 227 4 201 1 202 1 8 1 204 1 71 1 93 2 95 1 261 2 235 1 373 1 120 1 239 1 99 3 312 1 55 1 
133 1 229 1 313 1 
232 1 288 2 313 1 
285 1 112 2 58 2 45 2 311 2 283 1 318 2 9 2 
142 2 291 1 250 1 108 1 58 2 59 1 167 1 316 1 338 1 318 3 197 1 29 1 199 1 30 1 256 1 147 2 31 1 275 1 112 3 321 2 9 2 92 1 348 1 260 1 154 1 279 1 15 1 45 2 283 1 182 1 262 1 237 1 285 1 207 2 18 1 264 2 311 2 
180 1 112 1 58 1 42 1 45 1 311 1 283 1 10 1 318 1 9 1 
0 1 107 1 277 1 45 1 46 1 270 1 317 1 318 1 353 1 240 1 112 1 229 1 10 1 313 1 
0 1 107 1 277 1 58 1 45 1 317 2 270 2 318 1 240 1 112 1 229 1 311 1 9 1 10 1 313 1 
332 1 325 1 20 1 317 1 270 1 
332 1 190 1 325 1 114 1 229 1 317 2 270 2 313 1 
332 1 317 1 270 1 
325 1 180 1 42 1 58 1 293 1 45 1 270 1 317 1 283 1 318 1 112 1 311 1 10 1 9 1 
313 1 
332 1 190 1 325 1 229 1 317 2 270 2 219 1 313 1 
265 1 211 1 190 1 129 1 72 1 325 2 13 2 215 1 115 2 372 1 270 5 317 5 332 2 335 1 175 1 229 1 151 1 313 1 365 2 
285 1 133 1 
285 2 58 1 112 2 357 1 45 2 311 1 9 1 318 2 300 1 
131 1 339 1 117 1 
92 1 291 1 108 1 154 1 279 1 15 1 318 1 30 1 285 1 31 1 147 1 80 1 275 1 112 1 264 1 321 1 
128 1 326 2 58 4 45 5 318 5 353 1 354 1 285 1 112 5 228 1 33 1 311 1 9 4 300 1 
334 1 180 1 112 2 58 2 45 2 10 1 318 2 9 2 
92 1 291 1 154 1 108 1 326 1 58 1 279 1 15 1 45 1 339 1 318 2 30 1 31 1 147 1 275 1 112 2 33 1 264 1 321 1 9 1 
285 1 326 1 112 3 58 3 45 3 311 1 318 3 9 3 
180 1 112 1 58 1 45 1 10 1 318 1 9 1 
112 1 58 1 357 1 45 1 311 1 10 1 318 1 9 1 300 1 
0 1 107 1 142 2 291 1 250 1 108 1 58 3 59 1 167 1 316 1 270 1 317 1 318 4 62 1 197 1 29 1 30 1 31 1 147 1 275 1 112 4 33 1 321 1 9 3 10 1 300 1 92 1 277 1 367 1 260 1 154 1 326 1 279 1 15 1 45 3 283 1 262 1 237 1 240 1 285 1 207 1 18 1 264 1 311 2 
353 1 285 1 112 2 58 1 326 1 228 1 45 2 318 2 9 1 
107 1 0 1 277 1 206 1 367 1 326 2 58 3 45 3 317 1 270 1 318 3 240 1 112 3 33 1 311 1 10 1 9 3 300 1 313 1 
326 1 58 2 131 1 45 2 318 2 339 1 112 2 311 1 9 2 300 1 
92 1 291 1 108 1 154 1 279 1 15 1 318 1 30 1 285 1 31 1 147 1 275 1 112 1 264 1 321 1 
92 1 138 1 212 1 154 1 279 1 15 1 318 1 30 1 285 1 31 1 147 1 275 1 112 1 264 1 321 1 
140 1 142 2 250 1 59 2 167 1 338 2 131 2 339 2 197 1 224 1 226 1 7 1 91 1 178 1 260 1 117 2 77 1 237 1 333 1 242 1 207 4 18 1 186 1 377 1 
277 1 334 1 112 1 58 1 45 1 10 1 318 1 9 1 
292 1 174 1 
292 1 174 1 
234 1 375 1 
234 1 375 1 
234 1 375 1 
292 1 174 1 47 1 
194 1 234 1 292 2 174 2 168 1 375 1 
337 1 292 1 174 1 
292 1 174 1 47 1 
292 1 174 1 47 1 
127 1 292 1 174 1 
127 1 292 1 174 1 
127 1 292 1 174 1 
322 1 337 1 350 1 83 1 73 1 58 2 292 1 143 1 45 2 270 1 317 1 318 2 118 1 222 1 363 1 285 1 225 1 320 1 173 1 112 2 174 1 176 1 177 1 9 2 
70 1 83 2 73 3 292 2 280 1 270 2 317 2 118 2 320 1 135 1 174 2 310 1 176 2 22 1 177 2 289 1 347 1 313 1 210 2 
66 1 204 1 312 1 
276 1 204 1 312 1 
315 1 17 1 122 1 66 2 276 1 312 3 
315 1 122 1 66 1 124 1 276 1 312 2 
315 1 66 1 122 2 276 1 312 2 
265 2 106 1 190 1 166 2 215 3 143 1 317 5 270 5 255 1 170 1 224 1 225 1 32 1 229 1 365 1 40 1 13 1 325 4 350 1 232 1 115 1 372 1 282 2 77 1 183 1 333 1 332 1 242 1 160 1 245 2 288 3 313 2 
265 6 211 1 106 2 359 1 190 1 215 8 317 9 270 9 255 2 224 3 65 1 229 1 365 2 231 1 349 1 350 4 325 7 13 2 232 3 115 2 372 1 282 6 77 3 183 1 333 3 332 6 242 3 158 1 20 5 160 3 245 6 288 9 188 5 24 1 313 5 
265 2 211 1 106 1 166 1 215 3 317 3 270 3 255 1 224 1 32 1 229 1 365 1 40 1 325 2 13 1 350 1 232 2 115 1 282 2 77 1 333 1 242 1 160 1 245 2 288 4 313 3 
265 4 211 1 106 1 166 2 215 5 317 4 270 4 255 1 224 2 65 1 32 1 229 1 365 1 40 1 349 1 13 1 350 2 325 3 232 3 115 1 282 4 77 2 333 2 242 2 158 1 160 2 245 4 288 7 313 4 
133 1 275 1 116 1 
275 1 119 1 
159 1 
92 1 154 1 275 1 
275 1 254 1 
154 1 275 1 
92 1 259 1 154 1 275 3 116 2 54 1 
91 3 12 1 361 2 268 1 59 3 338 4 75 1 3 1 329 1 184 1 333 1 242 1 207 7 171 1 53 1 162 1 377 2 
91 3 12 1 361 2 268 1 59 3 338 4 75 1 3 1 329 1 184 1 333 1 242 1 207 7 171 1 53 1 162 1 377 2 
91 3 12 1 361 2 268 1 59 3 338 4 75 1 3 1 329 1 184 1 333 1 242 1 171 1 207 7 286 1 53 1 162 1 377 2 
142 2 248 1 250 1 361 3 268 2 59 15 167 1 338 16 271 4 3 5 197 1 224 3 171 1 172 1 200 1 299 1 346 1 91 10 12 2 260 1 75 1 97 1 77 3 48 1 329 2 184 2 333 4 207 31 242 4 123 3 160 3 53 1 162 1 377 5 
142 4 250 2 361 2 268 1 59 4 167 2 338 5 3 1 197 2 171 1 299 1 91 4 12 1 260 2 233 1 75 1 329 1 184 1 333 1 242 1 207 9 162 1 376 1 377 3 
105 1 214 2 130 2 26 1 217 1 61 1 27 1 169 1 362 1 30 1 319 1 147 1 66 1 321 1 276 1 202 1 204 1 38 1 278 1 324 1 303 1 95 1 261 1 15 1 235 1 304 1 17 1 264 1 312 2 55 1 
105 1 214 3 130 3 26 1 217 2 61 1 218 1 146 1 169 1 362 1 30 1 319 1 147 1 66 1 321 1 276 1 204 1 38 1 366 1 324 1 303 1 95 1 261 1 15 1 235 1 304 1 17 1 264 1 312 2 55 1 
214 2 130 2 26 1 217 2 61 1 218 1 146 1 169 1 362 1 30 1 319 1 147 1 66 1 321 1 276 1 204 1 324 1 303 1 95 1 15 1 235 1 17 1 264 1 312 2 55 1 
105 1 366 1 323 1 154 1 130 1 214 1 324 2 251 1 95 2 15 1 26 2 261 1 61 2 238 1 30 1 31 1 147 1 121 1 275 1 150 1 264 1 321 1 258 1 
105 1 214 1 130 1 26 1 61 1 218 1 169 1 362 1 30 1 147 1 66 1 321 1 276 1 202 1 204 1 38 1 278 1 324 1 303 1 95 1 261 1 15 1 304 1 17 1 264 1 312 2 
152 1 
247 1 106 1 0 1 107 1 190 3 251 1 1 2 145 2 253 4 147 2 149 1 112 1 5 2 150 1 6 2 10 1 154 1 13 1 351 1 115 1 15 1 352 2 353 1 78 1 21 1 309 1 264 2 358 1 313 2 265 2 267 1 215 2 270 5 317 5 318 1 273 1 30 1 31 2 275 1 321 2 229 1 34 2 35 1 365 1 39 1 277 1 179 1 232 2 45 1 96 2 372 1 46 1 240 1 332 6 288 2 
247 1 0 1 107 1 190 1 317 3 270 3 253 2 219 1 318 1 149 1 112 1 34 1 10 1 39 1 277 1 45 1 46 1 353 1 240 1 332 2 78 1 309 1 
247 1 0 1 107 1 190 1 317 3 270 3 253 3 219 1 318 1 149 1 112 1 6 1 229 1 10 1 39 1 277 1 45 1 46 1 353 1 240 1 332 1 78 1 309 1 313 1 
247 1 0 1 107 1 190 1 317 3 270 3 219 1 253 3 318 1 149 1 112 1 5 1 6 1 34 1 229 1 10 1 39 1 277 1 45 1 46 1 353 1 240 1 332 2 78 1 309 1 313 1 
247 1 107 1 0 1 190 3 1 2 145 2 253 6 149 1 112 1 5 4 6 4 69 1 10 1 13 1 351 1 115 1 352 2 353 1 78 1 309 1 313 5 265 1 215 1 270 5 317 5 219 1 318 1 273 1 274 1 34 4 229 5 365 1 39 1 277 1 43 1 232 2 45 1 46 1 372 1 96 2 240 1 51 1 332 7 244 1 
247 1 107 1 0 1 190 2 1 2 145 2 253 4 149 1 112 1 5 2 6 2 10 1 13 1 351 1 115 1 352 2 353 1 78 1 309 1 313 2 265 1 215 1 270 4 317 4 318 1 273 1 34 2 229 1 35 1 365 1 39 1 277 1 232 2 45 1 372 1 46 1 96 2 240 1 332 4 288 2 
265 1 247 1 0 1 107 1 190 2 215 1 1 2 145 2 317 4 270 4 253 4 318 1 273 1 274 1 149 1 112 1 5 2 6 2 229 1 34 2 69 1 10 1 365 1 39 1 277 1 13 1 232 2 351 1 115 1 45 1 96 2 46 1 372 1 352 2 353 1 240 1 51 1 332 4 78 1 309 1 313 1 
265 1 247 1 0 1 107 1 190 2 215 1 1 2 145 2 317 4 270 4 253 4 318 1 273 1 274 1 149 1 112 1 5 2 6 2 229 1 34 2 69 1 10 1 365 1 39 1 277 1 13 1 232 2 351 1 115 1 45 1 96 2 46 1 372 1 352 2 353 1 240 1 51 1 332 4 78 1 309 1 313 1 
265 1 247 1 0 1 107 1 190 2 215 1 145 2 317 4 270 4 253 4 340 1 318 1 341 2 273 1 274 1 149 1 112 1 5 2 68 2 6 2 229 1 34 2 10 1 365 1 39 1 277 1 13 1 115 1 45 1 281 1 96 2 46 1 372 1 98 1 353 1 240 1 332 4 78 1 309 1 288 2 313 1 
265 1 247 1 0 1 107 1 190 2 215 1 1 2 145 2 317 4 270 4 253 5 318 1 273 1 274 1 149 1 112 1 5 3 6 3 229 1 34 3 69 1 10 1 365 1 39 1 277 1 13 1 232 2 351 1 115 1 45 1 96 2 372 1 46 1 352 2 51 1 353 1 240 1 332 5 78 1 244 1 309 1 313 1 
265 1 247 1 0 1 107 1 190 2 215 1 1 2 145 2 317 4 270 4 253 5 318 1 273 1 274 1 149 1 112 1 5 3 6 3 229 1 34 3 69 1 10 1 365 1 39 1 277 1 13 1 232 2 351 1 115 1 45 1 96 2 372 1 46 1 352 2 51 1 353 1 240 1 332 5 78 1 244 1 309 1 313 1 
247 1 107 1 0 1 190 2 145 2 253 4 340 1 341 2 149 1 112 1 5 2 68 2 6 2 10 1 13 1 115 1 353 1 78 1 309 1 313 1 265 1 215 1 270 4 317 4 318 1 273 1 34 2 229 1 35 1 365 1 39 1 277 1 45 1 372 1 46 1 96 2 240 1 332 4 288 2 
142 2 250 1 361 1 59 3 167 1 131 1 338 3 339 1 197 1 133 1 171 1 226 1 91 2 12 1 260 1 75 1 117 1 237 1 184 1 333 1 285 2 242 1 207 6 18 1 162 1 377 2 
142 4 248 1 213 1 249 1 250 2 59 6 167 2 338 8 131 4 271 3 3 1 339 11 197 2 256 1 224 1 346 1 137 1 91 2 260 2 117 11 77 2 262 1 237 2 333 1 285 1 157 1 207 14 242 2 18 1 52 1 123 3 160 2 377 1 
291 1 142 2 213 1 108 1 250 1 58 1 59 1 167 1 131 1 338 1 318 2 197 1 30 1 147 1 31 1 256 1 275 1 112 2 89 1 364 1 33 1 321 1 9 1 92 1 154 1 260 1 326 1 279 1 15 1 45 1 237 1 262 1 285 1 207 2 80 1 18 1 161 1 264 1 
142 6 291 2 250 3 108 2 58 1 59 10 338 10 339 7 3 4 198 1 197 3 256 1 147 3 112 3 344 2 9 1 12 1 260 3 154 2 74 2 15 2 75 1 117 7 77 2 262 1 207 20 18 3 160 2 264 3 162 1 213 1 361 1 167 3 131 7 218 1 318 3 29 2 30 2 31 1 224 2 171 1 275 2 33 1 321 3 92 2 91 8 94 1 326 1 279 2 45 1 237 3 184 1 333 3 285 2 242 3 185 2 104 1 187 2 377 4 
142 4 250 2 251 1 58 1 59 1 167 2 338 1 87 1 218 1 318 1 27 1 109 1 197 2 30 2 147 8 31 2 256 1 275 3 226 1 112 1 150 1 321 8 9 1 37 1 260 2 154 2 326 1 15 2 45 1 305 1 182 2 330 1 237 2 328 1 262 1 207 2 18 2 264 7 23 1 
142 2 213 1 250 1 58 1 59 2 167 1 131 1 338 1 339 1 318 1 197 1 224 1 112 1 9 1 300 1 91 1 260 1 44 1 45 1 117 1 77 1 237 1 333 1 242 1 207 3 18 1 160 1 311 1 377 1 
91 1 142 2 260 1 250 1 167 1 131 1 338 2 3 1 339 1 117 1 77 1 237 1 197 1 207 2 242 1 18 1 226 1 7 1 
91 1 142 2 260 1 250 1 178 1 59 2 167 1 131 1 339 1 117 1 237 1 197 1 333 1 224 1 207 2 18 1 226 1 377 1 
142 2 250 1 59 2 167 1 338 2 131 2 339 2 3 1 197 1 224 1 226 1 91 2 260 1 77 1 117 2 237 1 333 1 242 1 207 4 18 1 160 1 377 1 
91 1 142 2 260 1 250 1 167 1 131 1 338 2 3 1 339 1 117 1 77 1 328 1 237 1 197 1 207 2 242 1 18 1 7 1 
91 1 142 2 260 1 250 1 178 1 59 2 167 1 131 1 339 1 117 1 328 1 237 1 197 1 333 1 224 1 207 2 18 1 377 1 
142 2 250 1 59 2 167 1 338 2 131 2 339 2 3 1 197 1 224 1 91 2 260 1 77 1 117 2 237 1 328 1 333 1 242 1 207 4 18 1 160 1 377 1 
142 2 250 1 59 2 167 1 338 2 131 2 339 2 3 1 197 1 224 1 91 2 260 1 77 1 117 2 237 1 333 1 207 4 242 1 18 1 160 1 377 1 
291 1 142 2 108 1 250 1 59 1 167 1 338 1 318 1 29 1 197 1 30 1 256 1 147 1 31 1 275 1 112 1 321 1 92 1 154 1 260 1 279 1 15 1 237 1 262 1 285 1 207 2 18 1 264 1 
142 2 212 1 250 1 59 1 167 1 338 1 318 1 197 1 30 1 256 1 147 1 31 1 275 1 112 1 257 1 321 1 92 1 138 1 154 1 260 1 279 1 15 1 237 1 262 1 285 1 207 2 18 1 264 1 
142 2 213 1 250 1 59 2 167 1 338 2 131 2 339 2 3 1 197 1 224 1 91 2 260 1 77 1 117 2 237 1 333 1 242 1 207 4 18 1 160 1 377 1 
291 1 142 2 108 1 250 1 59 2 167 1 131 2 338 2 3 1 339 2 318 1 27 1 29 1 197 1 30 1 224 1 147 1 275 1 112 1 321 1 91 2 92 1 154 1 260 1 279 1 15 1 117 2 77 1 237 1 333 1 207 4 242 1 18 1 185 1 160 1 264 1 377 1 
142 2 213 1 250 1 58 1 59 1 167 1 338 2 131 1 3 1 318 1 339 1 197 1 224 1 298 1 112 1 9 1 300 1 91 1 260 1 45 1 77 1 117 1 237 1 333 1 242 1 207 3 18 1 160 1 311 1 
142 4 248 1 57 1 250 2 269 2 59 10 167 2 338 9 271 2 220 1 3 3 88 1 272 1 197 2 224 3 346 1 91 6 260 2 41 2 327 1 76 1 77 3 333 3 79 1 207 19 242 3 123 1 160 3 377 3 376 1 
142 2 260 1 250 1 57 2 41 1 327 2 59 3 167 1 338 2 271 2 49 1 88 1 197 1 272 1 207 5 123 1 376 1 346 2 
142 4 248 1 57 2 250 2 269 1 59 10 167 2 338 8 271 4 220 1 3 2 88 1 272 1 197 2 224 2 346 3 91 3 260 2 41 2 327 1 77 2 49 1 333 2 356 1 79 1 207 18 242 2 123 2 160 2 377 1 376 1 
142 4 248 1 57 2 250 2 269 1 59 10 167 2 338 8 271 4 220 1 3 2 88 1 272 1 197 2 224 2 346 3 91 4 260 2 41 2 327 1 77 2 49 1 333 2 356 1 79 1 207 18 242 2 123 2 160 2 377 2 376 1 
142 2 248 1 361 1 57 1 250 1 59 10 167 1 338 10 271 3 3 2 88 1 272 1 197 1 224 2 171 1 346 2 137 1 91 5 12 1 260 1 41 1 327 1 75 1 77 2 49 1 184 1 333 3 207 20 242 3 123 2 160 2 162 1 377 3 376 1 
90 1 135 1 83 1 292 1 174 1 310 1 176 1 177 1 118 1 347 1 
222 1 337 1 
297 1 110 1 83 1 292 1 174 1 176 1 230 1 177 1 118 1 
236 1 47 1 
127 1 25 1 194 1 
70 1 83 1 73 2 292 1 280 1 270 1 317 1 118 1 320 1 135 1 174 1 310 1 176 1 22 1 177 1 347 1 313 1 210 1 
70 1 83 1 73 2 292 1 280 1 270 1 317 1 118 1 320 1 135 1 174 1 310 1 176 1 22 1 177 1 347 1 313 1 210 1 
70 1 83 1 73 2 292 1 280 1 270 1 317 1 118 1 320 1 135 1 174 1 310 1 176 1 22 1 177 1 347 1 313 1 210 1 
194 1 236 1 47 1 
194 1 236 1 47 1 
127 1 25 1 
127 1 25 1 194 1 
322 1 363 1 
337 1 83 1 58 2 292 1 143 1 317 1 270 1 318 2 222 1 363 1 225 1 112 2 173 1 174 1 176 1 177 1 9 2 322 1 325 1 350 1 73 1 280 1 45 2 118 1 285 1 100 1 210 1 
142 2 213 1 250 1 59 1 167 1 338 1 87 1 294 1 318 2 197 1 30 1 147 2 256 1 148 1 275 1 112 2 321 2 203 1 154 1 260 1 370 1 15 1 45 2 182 2 330 1 237 1 262 1 241 1 207 2 18 1 264 2 
193 1 303 1 15 1 26 1 304 1 85 1 218 1 27 1 30 1 362 1 147 2 17 1 66 1 102 1 276 1 264 2 321 2 204 1 312 2 
303 1 26 1 15 1 304 1 85 1 218 1 331 1 362 1 30 1 147 1 17 1 66 1 276 1 264 1 321 1 204 1 312 2 
154 1 251 1 15 1 26 1 30 1 31 1 147 1 134 1 121 1 275 1 102 1 150 1 264 1 321 1 
193 1 303 1 26 1 15 1 304 1 85 1 218 1 30 1 362 1 147 1 17 1 66 1 102 1 276 1 264 1 321 1 204 1 312 2 
181 1 
265 1 133 1 72 1 335 1 215 1 229 1 313 1 
265 1 190 1 13 1 351 1 215 1 232 1 115 1 1 1 317 1 270 1 372 1 352 1 332 1 229 1 288 1 313 2 365 1 
92 1 154 1 13 1 15 1 115 1 372 1 119 1 30 2 31 1 147 1 275 1 342 1 67 1 264 1 321 1 54 1 365 1 
265 5 106 1 190 1 360 1 215 8 317 1 270 1 271 1 63 1 64 1 111 1 224 2 229 2 346 1 365 2 153 1 368 1 13 2 232 3 115 2 372 2 282 5 77 2 374 1 49 1 332 1 333 2 242 2 123 1 160 2 245 5 163 2 288 6 358 1 313 5 
265 2 215 2 58 1 293 1 86 1 317 1 270 1 318 1 112 1 10 1 9 1 365 1 12 1 368 1 13 1 180 1 42 1 115 1 45 1 372 1 283 1 51 1 184 1 333 1 242 2 163 2 162 1 311 1 
265 1 72 1 13 1 215 1 115 1 372 1 335 1 229 1 365 1 313 1 
265 5 368 1 232 5 215 5 282 5 77 2 333 2 224 2 242 2 160 2 187 1 245 5 163 2 288 10 313 5 
332 1 190 1 229 1 317 1 270 1 313 1 
314 1 265 2 211 1 106 2 190 2 267 1 251 1 195 2 215 2 270 3 317 3 30 3 147 4 31 2 275 2 150 1 321 4 365 2 205 1 92 1 301 1 154 2 13 2 15 2 115 2 372 1 50 1 155 1 332 4 19 1 21 1 264 4 126 1 358 2 
142 2 291 1 250 1 108 1 58 2 59 1 167 1 316 1 318 3 197 1 29 1 30 1 147 1 31 1 275 1 112 3 321 1 9 2 92 1 154 1 260 1 279 1 15 1 45 2 283 1 262 1 237 1 285 1 207 1 18 1 264 1 311 2 
265 2 106 1 361 1 13 1 232 2 215 1 115 1 372 1 282 2 245 2 288 4 229 2 358 1 365 1 313 4 
16 1 83 1 177 1 
322 1 141 1 135 1 83 1 177 1 
16 1 83 1 177 1 
16 1 83 1 177 1 
84 1 83 1 177 1 
84 1 83 1 177 1 
84 1 83 1 177 1 
83 1 177 1 
292 1 174 1 
91 3 142 4 12 1 361 1 260 2 250 2 59 4 167 2 338 4 75 1 3 1 197 2 184 1 333 1 242 1 207 8 171 1 299 1 162 1 377 2 
91 2 184 1 333 1 12 1 133 1 207 6 242 1 171 1 361 1 59 3 338 3 75 1 162 1 377 2 
91 2 142 2 260 1 250 1 59 2 167 1 338 2 77 1 3 1 197 1 333 1 224 1 242 1 207 4 101 1 160 1 377 1 
91 2 248 1 59 4 338 3 271 2 77 1 3 1 333 1 224 1 207 7 242 1 123 1 160 1 377 1 346 1 
248 1 142 4 361 1 250 2 59 12 167 2 338 11 271 2 3 4 197 2 223 1 224 2 171 1 299 2 137 1 91 9 12 2 260 2 75 1 77 2 184 2 333 3 242 3 207 23 157 1 123 2 160 2 162 1 377 5 
207 1 59 1 271 1 
207 1 123 1 338 1 
91 3 142 2 250 1 260 1 59 3 167 1 338 3 77 1 3 1 197 1 333 1 224 1 207 6 242 1 101 1 160 1 187 1 377 2 
142 2 360 1 250 1 59 6 167 1 338 6 271 1 3 1 197 1 63 1 64 1 224 2 346 1 91 2 260 1 153 1 77 2 49 1 333 2 207 12 242 2 123 1 160 2 376 1 377 1 
91 2 12 1 59 3 338 3 3 1 184 1 333 1 242 1 207 6 162 1 377 1 
91 2 142 2 12 1 260 1 250 1 59 2 167 1 338 1 75 1 3 1 184 1 223 1 197 1 171 1 207 3 299 1 377 1 
91 5 142 2 12 2 250 1 260 1 59 5 167 1 338 5 86 1 3 2 197 1 184 2 333 2 207 10 242 2 162 1 376 1 377 3 
91 1 142 2 260 1 250 1 167 1 338 2 77 1 3 1 197 1 242 1 207 2 376 1 
91 2 142 2 260 1 250 1 59 2 167 1 338 2 77 1 3 1 197 1 333 1 224 1 242 1 207 4 160 1 377 1 376 1 
91 2 142 6 12 1 260 3 250 3 59 2 167 3 338 1 220 1 3 1 223 1 197 3 184 1 207 3 299 1 376 1 377 1 
142 10 248 1 361 1 250 5 59 18 167 5 338 16 271 4 220 1 3 5 223 1 197 5 224 3 171 1 172 1 299 2 200 1 346 1 91 12 12 3 260 5 75 1 97 1 77 3 184 3 333 5 207 34 242 5 101 1 123 3 160 3 162 2 376 1 377 7 
142 2 361 1 250 1 59 4 167 1 338 4 271 1 197 1 171 1 346 1 91 2 12 1 260 1 75 1 49 1 184 1 333 1 242 1 207 8 123 1 162 1 376 1 377 2 
142 4 248 1 361 1 250 2 59 5 167 2 338 6 271 2 3 1 197 2 171 1 346 1 91 3 12 1 260 2 75 1 77 1 49 1 184 1 333 1 207 11 242 2 101 1 123 1 160 1 162 1 377 2 376 1 
142 6 360 1 361 1 250 3 59 10 167 3 338 9 271 1 3 1 197 3 63 1 64 1 224 2 171 1 299 1 346 1 91 4 12 1 260 3 153 1 75 1 77 2 49 1 184 1 333 3 207 19 242 3 101 1 123 1 160 2 162 1 376 1 377 3 
142 6 360 1 361 1 250 3 59 7 167 3 338 10 271 1 3 2 197 3 63 1 64 1 224 1 171 1 299 1 346 1 91 5 12 1 260 3 153 1 75 1 77 2 49 1 184 1 333 2 207 17 242 3 101 1 123 1 160 2 162 1 376 1 377 3 
142 2 361 1 250 1 59 4 167 1 338 4 271 1 197 1 171 1 346 1 91 2 12 1 260 1 75 1 49 1 184 1 333 1 242 1 207 8 123 1 162 1 376 1 377 2 
142 2 360 1 250 1 59 6 167 1 338 6 271 1 3 1 197 1 63 1 64 1 224 2 346 1 91 2 260 1 153 1 77 2 49 1 333 2 207 12 242 2 123 1 160 2 376 1 377 1 
142 8 360 1 361 1 250 4 59 8 167 4 338 10 271 1 3 2 197 4 63 1 64 1 224 1 171 1 299 2 346 1 91 5 12 1 153 1 260 4 75 1 77 2 49 1 184 1 333 2 207 18 242 3 101 1 123 1 160 2 162 1 376 1 377 3 
142 8 360 1 250 4 59 7 167 4 338 9 271 1 3 3 220 1 197 4 63 1 64 1 224 2 299 2 346 1 91 6 153 1 260 4 77 3 49 1 333 2 207 16 242 3 123 1 160 3 376 1 377 3 
91 6 12 3 59 4 75 1 338 3 3 3 184 3 333 1 207 7 171 2 242 1 162 1 377 3 
142 8 360 1 361 1 250 4 59 8 167 4 338 10 271 1 3 1 220 1 197 4 63 1 64 1 224 1 171 1 299 2 346 1 91 4 12 1 153 1 260 4 75 1 77 2 49 1 184 1 333 2 207 18 242 3 123 1 160 2 162 1 376 1 377 3 
353 1 285 1 112 1 14 1 228 1 45 1 318 1 
353 1 285 1 112 1 14 1 252 1 371 1 228 1 287 1 45 1 318 1 246 1 36 1 
30 1 133 1 147 1 31 1 154 1 275 1 251 1 15 1 150 1 321 1 264 1 
92 1 291 1 154 1 326 1 58 1 279 1 15 1 45 1 318 2 30 1 285 1 31 1 147 1 275 1 112 2 264 1 321 1 9 1 
291 1 195 1 58 2 318 2 254 1 28 1 30 1 147 1 275 3 112 2 321 1 9 1 10 1 92 2 277 1 154 2 326 1 279 1 15 1 45 2 240 1 285 1 264 1 
212 1 195 1 58 2 318 2 254 1 28 1 30 1 147 2 275 3 112 2 321 2 9 1 10 1 92 2 277 1 154 2 326 1 279 1 15 1 45 2 240 1 285 1 125 1 264 2 
107 1 195 1 317 2 270 2 254 1 28 1 30 1 147 3 31 1 275 4 321 3 229 1 92 1 154 1 15 1 116 1 119 1 332 1 284 1 355 1 125 1 264 3 313 1 
107 1 92 1 154 1 195 1 216 1 15 1 116 1 270 2 317 2 254 1 119 1 28 1 30 1 332 1 31 1 147 3 275 4 125 1 264 3 321 3 229 1 313 1 
30 1 147 1 15 1 321 1 264 1 37 1 
92 1 154 2 15 2 218 1 305 1 182 1 330 1 27 1 109 1 295 1 50 1 155 1 30 3 31 2 147 7 275 3 264 6 321 7 54 1 37 1 23 1 
291 1 142 4 108 1 250 2 58 1 59 3 338 3 339 1 197 2 147 1 148 1 112 2 9 1 12 1 260 2 154 1 74 1 15 1 75 1 117 1 207 6 18 2 264 1 162 1 213 1 361 1 167 2 131 1 318 2 27 1 29 1 30 1 171 1 275 1 321 1 92 1 91 2 326 1 279 1 45 1 237 2 184 1 333 1 285 2 242 1 185 1 377 2 
265 1 107 1 190 1 266 1 215 1 216 1 317 3 270 3 31 1 147 1 275 2 321 1 229 1 365 2 301 1 72 1 13 2 325 1 115 2 116 1 372 2 119 1 332 2 335 1 209 1 264 1 313 1 189 1 
92 1 154 1 15 1 116 1 30 2 147 1 342 1 275 1 159 1 264 1 321 1 54 1 37 1 
154 1 251 1 15 1 27 1 306 1 30 1 31 1 147 4 275 1 150 1 125 1 264 4 321 4 
205 1 314 1 92 1 154 1 195 1 15 1 50 1 155 1 198 1 30 2 147 2 275 1 264 2 321 2 
30 1 362 1 147 1 31 1 15 1 276 1 321 1 264 1 204 1 312 1 
154 1 15 1 218 1 294 1 27 1 330 1 30 1 147 2 275 1 264 2 321 2 
154 2 251 1 195 1 15 2 305 1 27 1 330 1 306 1 30 2 31 1 147 5 275 3 150 1 264 4 321 5 23 1 
154 2 251 1 195 1 15 2 305 1 27 1 330 1 306 1 30 2 31 1 147 5 275 3 150 1 264 4 321 5 378 1 
92 1 212 1 154 1 326 1 58 1 279 1 15 1 45 1 318 2 30 1 285 1 31 1 147 1 275 1 112 2 264 1 321 1 9 1 
92 1 154 1 195 1 15 1 295 1 50 1 155 1 30 2 147 1 275 1 264 1 321 1 54 1 
241 1 192 1 369 1 112 1 370 1 45 1 196 1 203 1 318 1 
290 1 156 1 369 1 
285 1 192 1 369 1 103 1 196 1 
107 1 290 1 0 1 277 1 367 1 192 2 369 1 325 1 270 2 317 2 196 2 240 1 156 1 285 1 103 2 229 1 164 1 10 1 313 1 
133 1 235 1 55 1 
105 1 319 1 214 1 130 1 261 1 235 1 55 1 
214 1 95 1 61 1 
105 1 136 1 130 2 214 2 261 1 235 1 319 1 308 1 202 1 345 1 55 1 
105 1 93 1 130 2 214 2 261 1 217 1 235 1 319 1 55 1 
105 1 81 1 165 1 130 1 214 1 261 1 66 1 227 1 202 1 312 1 204 1 
105 1 214 1 130 1 261 1 202 1 55 1 
105 1 165 1 214 1 130 1 261 1 235 1 202 1 55 1 
105 2 56 1 130 2 214 2 261 2 132 1 296 1 202 1 55 1 
105 1 165 1 130 3 214 3 261 1 217 2 235 1 373 1 120 1 99 1 319 1 227 1 202 1 55 1 
105 1 130 2 214 2 82 1 261 1 217 1 235 1 319 1 17 1 66 1 276 1 202 1 312 2 204 1 55 1 
105 1 165 1 93 1 130 3 214 3 261 1 217 2 235 1 99 1 319 1 201 1 227 1 202 1 55 1 
105 1 319 1 214 1 130 1 261 1 235 1 202 1 55 1 
105 1 165 1 130 3 214 3 261 1 217 2 235 1 99 1 319 2 227 1 55 1 
105 1 130 2 214 2 261 1 217 1 235 1 221 1 319 1 343 1 202 1 8 1 55 1 
105 1 136 1 130 2 214 2 261 1 144 1 235 1 319 1 308 1 202 1 55 1 
165 2 191 2 113 1 60 1 
105 1 243 1 214 1 130 1 261 1 202 1 
105 1 130 2 214 2 261 1 217 1 235 1 373 1 319 1 202 1 55 1 
208 1 
105 1 319 1 214 1 130 1 261 1 235 1 202 1 55 1 
136 1 105 1 319 1 214 2 130 2 261 1 235 1 202 1 55 1 
165 1 99 1 319 1 227 1 
55 1 

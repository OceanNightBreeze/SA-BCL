#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (267,281) 202 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (267,281) 202 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 252 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 252 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 252 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 280 206 230 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 252 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (29,260) 249 255 272 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 75 359 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 75 359 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 75 359 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 75 359 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 75 359 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 252 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 280 206 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 252 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 255 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 280 363 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 280 363 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 280 363 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 280 363 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 280 363 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 280 363 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 280 363 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 280 363 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 252 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 252 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
324 3 1 1 191 1 157 3 16 1 308 1 222 1 209 2 8 1 107 1 270 2 281 1 109 1 
26 1 324 9 1 2 191 1 308 1 59 1 222 4 223 2 66 1 8 1 175 1 88 1 107 6 129 1 267 1 314 1 178 2 270 2 109 3 70 2 275 2 157 9 74 1 16 1 51 1 77 1 209 2 281 1 
26 1 324 9 1 2 191 1 308 1 59 1 222 4 223 2 66 1 8 1 175 1 88 1 107 6 129 1 267 1 314 1 178 2 270 2 109 3 70 2 275 2 157 9 74 1 16 1 51 1 77 1 209 2 281 1 
26 1 324 10 1 2 191 1 308 1 59 1 222 5 223 2 66 1 8 1 175 1 88 1 107 7 129 1 267 1 314 1 178 2 270 2 109 4 70 2 275 2 157 10 74 1 16 1 51 1 77 1 209 2 281 1 
26 1 324 7 1 2 191 1 308 1 59 1 222 3 223 1 66 1 8 1 175 1 88 1 107 4 129 1 267 1 314 1 178 2 270 2 109 2 70 2 275 2 157 7 74 1 16 1 77 1 209 2 281 1 
70 1 324 4 275 1 191 1 157 4 16 1 308 1 51 1 223 2 77 1 222 2 209 1 8 1 107 3 314 1 109 1 270 1 178 1 
70 1 324 2 275 1 1 1 191 1 157 2 169 1 16 1 58 1 308 1 59 1 209 1 8 1 175 1 248 1 270 1 
282 1 324 1 157 1 209 1 202 1 308 1 281 1 270 1 
282 1 324 1 157 1 209 1 202 1 308 1 281 1 270 1 
81 1 91 1 101 1 342 1 111 1 170 1 365 1 158 1 242 1 85 1 235 1 358 1 200 1 116 1 
5 1 
145 1 102 1 64 1 5 1 111 2 200 1 12 1 116 2 
43 1 145 1 82 1 146 1 102 2 5 1 111 5 110 1 171 1 356 1 50 2 263 1 294 2 333 2 369 1 200 2 12 1 116 5 177 1 
252 1 
229 2 5 1 117 1 
81 2 235 2 91 1 342 2 231 1 358 2 170 2 158 2 
81 2 0 1 83 1 56 1 170 2 32 2 219 1 287 2 221 1 124 2 6 1 38 1 194 1 39 1 358 2 357 1 201 1 131 1 336 1 42 1 297 1 91 1 319 1 342 2 73 2 231 1 232 1 278 1 158 3 48 1 235 3 161 1 184 1 21 1 238 1 186 2 97 1 
81 1 235 1 91 1 101 1 342 1 358 1 170 1 365 1 158 1 242 1 
145 1 250 1 101 1 5 1 111 1 253 1 158 1 240 1 235 1 65 1 67 1 358 1 130 1 116 1 
81 1 145 1 250 1 101 1 5 1 342 1 111 2 170 1 158 1 240 1 235 1 65 1 358 1 130 1 116 2 
102 1 318 1 111 1 200 1 116 1 
145 1 102 1 5 1 111 2 200 1 364 1 12 1 116 2 
102 1 111 1 116 1 
81 1 101 1 342 1 231 1 170 1 352 1 158 2 235 2 127 1 358 2 226 1 
249 1 148 1 29 1 
297 1 83 1 73 1 231 1 158 1 48 1 235 1 124 1 161 1 194 1 39 1 201 1 186 1 80 1 336 1 97 1 
81 1 235 3 182 1 342 3 231 1 358 3 170 3 158 3 
235 1 101 1 342 1 358 1 170 1 365 1 158 1 
81 1 101 1 342 1 170 1 352 1 158 1 235 1 127 1 358 1 
81 2 0 1 101 1 83 1 56 1 170 3 32 2 219 1 287 1 240 1 221 1 124 1 194 1 127 1 65 1 197 1 39 1 358 3 201 1 130 1 131 1 336 1 90 1 297 1 250 1 91 1 182 1 319 1 342 3 73 1 231 1 232 1 111 1 278 1 48 1 158 4 235 4 161 1 184 1 21 1 22 1 186 1 97 1 116 1 
235 2 182 1 342 1 231 1 67 1 358 2 170 1 328 1 158 2 
81 1 250 1 101 1 182 2 5 1 342 3 111 1 170 3 240 1 158 3 60 1 235 3 127 1 65 1 197 1 358 3 130 1 116 1 90 1 
81 1 182 1 148 1 342 2 29 1 170 2 158 2 235 2 127 1 358 2 
297 1 83 1 73 1 231 1 158 1 48 1 235 1 124 1 161 1 194 1 39 1 201 1 186 1 336 1 97 1 
73 1 231 1 158 1 48 1 235 1 124 1 161 1 194 1 258 1 39 1 78 1 201 1 186 1 336 1 97 1 
0 1 148 2 29 2 56 1 150 1 32 2 287 4 289 1 40 1 131 1 42 2 133 1 227 1 338 1 249 2 232 1 76 1 278 1 139 1 184 2 21 1 260 1 95 1 213 1 
235 1 101 1 65 1 342 1 358 1 170 1 276 1 158 1 
252 1 
297 1 182 1 83 1 342 1 73 1 29 1 170 1 48 1 158 2 235 2 124 1 161 1 194 1 39 1 358 1 201 1 186 1 336 1 97 1 90 1 
81 1 182 2 342 4 231 1 170 4 328 1 35 1 158 5 235 5 127 1 67 1 358 5 303 1 90 1 
235 2 101 1 342 2 276 1 358 2 170 2 365 1 158 2 
284 1 30 1 335 1 
156 1 310 1 360 1 325 1 284 2 30 2 
284 1 30 1 57 1 
284 1 30 1 57 1 
284 1 30 1 57 1 
284 1 30 1 
284 1 30 1 
310 1 360 1 
310 1 360 1 
310 1 360 1 
246 1 284 1 30 1 
246 1 284 1 30 1 
246 1 284 1 30 1 
134 1 156 1 15 1 71 3 2 2 5 1 45 1 111 2 30 2 284 2 279 2 261 2 152 1 162 2 62 1 237 1 208 2 24 1 116 2 
54 1 147 1 170 2 284 1 30 1 350 1 261 1 154 1 62 1 358 2 335 1 11 1 71 1 342 2 231 1 111 1 279 1 158 2 235 2 162 1 208 1 370 1 116 1 323 1 
275 2 321 1 349 2 58 1 178 1 
70 1 275 1 178 1 
70 1 275 1 58 1 
275 3 321 1 349 1 58 1 89 1 178 2 
86 1 275 2 321 1 349 1 58 1 178 1 
214 2 145 1 82 1 102 1 147 1 192 1 5 2 149 1 350 1 151 1 356 2 330 2 195 1 333 1 294 1 69 1 200 4 12 1 177 3 229 3 137 2 111 5 76 1 139 1 50 1 345 1 95 1 348 1 213 1 116 5 117 1 323 1 
214 6 187 5 145 1 82 1 216 1 102 6 5 5 149 2 356 6 330 6 153 1 174 1 195 2 294 2 333 2 69 3 200 7 106 1 10 1 12 1 177 8 229 9 318 5 110 1 111 9 76 3 139 3 50 2 93 1 95 3 348 1 213 3 116 9 117 3 323 4 
214 2 145 1 192 1 5 3 149 1 356 2 330 2 195 1 333 1 294 1 200 2 69 1 177 3 229 4 137 1 111 3 110 1 76 1 139 1 50 1 345 1 95 1 213 1 116 3 117 2 323 1 
214 4 145 1 216 1 192 1 5 4 149 1 356 4 330 4 174 1 195 1 333 1 294 1 200 3 69 2 177 5 229 7 137 2 111 4 110 1 76 2 139 2 50 1 345 1 93 1 95 2 213 2 116 4 117 3 323 2 
41 1 
161 1 97 1 
181 1 33 1 161 1 39 1 347 2 97 2 41 1 
252 1 
173 1 97 1 
161 1 39 1 97 1 
100 1 97 1 
338 3 299 1 317 1 76 1 150 2 138 1 17 1 220 1 287 7 172 1 291 1 184 3 94 2 199 1 95 1 185 1 9 1 42 4 
280 1 230 1 291 2 126 1 184 1 94 1 206 1 312 1 287 3 220 1 42 2 
0 2 326 1 150 3 32 4 287 9 220 1 291 1 199 1 9 1 131 2 42 5 338 4 299 1 14 1 232 2 76 1 138 1 17 1 254 1 184 4 21 2 94 2 95 1 185 1 
338 3 299 1 317 1 76 1 150 2 138 1 17 1 220 1 287 7 291 1 184 3 94 2 199 1 95 1 185 1 9 1 42 4 
338 3 299 1 317 1 76 1 150 2 138 1 17 1 220 1 287 7 291 1 184 3 94 2 199 1 95 1 185 1 9 1 42 4 
215 1 324 1 1 2 157 1 3 1 73 1 46 1 300 1 122 2 329 1 124 1 309 2 161 1 290 1 194 1 209 1 225 1 212 2 201 1 186 1 336 1 97 1 270 1 
324 1 1 1 58 1 122 1 308 1 309 1 124 1 201 1 336 1 89 1 132 1 178 1 270 1 180 1 339 1 70 1 275 2 157 1 73 1 209 1 210 1 212 1 141 1 186 1 163 1 144 1 
98 1 324 2 1 1 191 1 58 1 122 1 308 1 309 1 124 1 8 1 107 1 201 1 336 1 89 1 132 1 178 1 270 1 180 1 339 1 70 1 275 2 157 2 73 1 16 1 209 1 210 1 212 1 141 1 186 1 144 1 
324 3 1 1 191 1 58 1 122 1 309 1 124 1 225 1 8 1 107 2 201 1 89 1 336 1 132 1 178 1 270 1 339 1 70 1 275 2 157 3 73 1 16 1 209 1 210 1 212 1 141 1 186 1 163 1 143 1 144 1 
324 2 1 1 191 1 58 1 122 1 309 1 124 1 8 1 107 2 201 1 336 1 89 1 178 1 339 1 70 1 275 2 157 2 73 1 16 1 212 1 141 1 186 1 163 1 143 1 144 1 
285 1 
145 1 101 1 102 6 283 1 5 2 149 1 288 2 329 1 240 1 193 1 194 2 65 1 294 1 333 1 67 1 201 1 336 1 12 3 250 1 205 1 73 2 111 5 343 1 253 1 344 2 158 1 161 1 257 2 302 1 304 1 25 4 116 5 117 2 165 2 215 1 82 1 120 2 356 2 124 2 265 1 358 1 313 2 130 1 176 1 269 1 271 1 177 2 229 2 135 2 277 1 233 1 50 1 235 1 186 2 97 1 
250 1 101 1 102 2 283 1 111 3 253 1 240 1 233 1 158 1 193 1 235 1 64 1 65 1 302 1 67 1 358 1 313 1 130 1 25 2 12 1 116 3 269 1 
145 1 101 1 102 1 283 1 5 1 240 1 193 1 65 1 64 1 67 1 358 1 130 1 269 1 12 1 250 1 111 3 253 1 158 1 233 1 235 1 257 1 302 1 25 3 116 3 
145 1 101 1 283 1 120 1 102 2 5 1 240 1 193 1 64 1 65 1 67 1 358 1 130 1 313 1 12 1 269 1 250 1 111 3 253 1 158 1 233 1 235 1 257 1 302 1 25 3 116 3 
145 5 101 1 283 1 102 7 5 5 240 1 288 2 193 1 155 1 65 1 64 1 294 1 333 1 7 1 67 1 198 1 12 3 250 1 205 1 111 5 253 1 158 1 344 2 257 4 302 1 164 1 25 6 116 5 117 2 165 2 82 1 120 4 356 1 265 1 358 1 313 4 130 1 269 1 177 1 135 2 361 1 233 1 50 1 235 1 
165 2 145 1 82 1 101 1 120 2 102 4 283 1 5 2 288 2 240 1 356 1 193 1 65 1 265 1 333 1 294 1 67 1 358 1 313 2 130 1 176 1 12 2 269 1 177 1 229 2 250 1 205 1 135 2 111 4 253 1 344 2 233 1 158 1 50 1 235 1 257 2 302 1 25 4 116 4 117 2 
165 2 145 1 101 1 82 1 120 2 102 4 283 1 5 1 288 2 240 1 356 1 193 1 155 1 65 1 265 1 333 1 294 1 7 1 67 1 358 1 313 2 130 1 12 2 269 1 177 1 250 1 205 1 135 2 361 1 111 4 253 1 344 2 158 1 233 1 50 1 235 1 257 2 302 1 25 4 116 4 117 2 
165 2 145 1 101 1 82 1 120 2 102 4 283 1 5 1 288 2 240 1 356 1 193 1 155 1 65 1 265 1 333 1 294 1 7 1 67 1 358 1 313 2 130 1 12 2 269 1 177 1 250 1 205 1 135 2 361 1 111 4 253 1 344 2 158 1 233 1 50 1 235 1 257 2 302 1 25 4 116 4 117 2 
165 2 145 1 101 1 82 1 120 2 102 4 283 1 5 1 240 1 356 1 193 1 65 1 265 1 333 1 332 1 294 1 7 1 67 1 358 1 313 2 130 1 204 1 12 2 269 1 177 1 179 1 229 2 250 1 135 2 111 4 253 1 158 1 233 1 50 1 235 1 19 2 257 2 302 1 23 2 25 4 116 4 
165 2 145 1 82 1 101 1 283 1 120 3 102 5 5 1 288 2 240 1 356 1 193 1 155 1 65 1 265 1 333 1 294 1 7 1 67 1 358 1 130 1 313 3 12 2 269 1 177 1 250 1 205 1 135 2 361 1 111 4 253 1 344 2 158 1 233 1 50 1 235 1 257 3 302 1 164 1 25 5 116 4 117 2 
165 2 145 1 82 1 101 1 283 1 120 3 102 5 5 1 288 2 240 1 356 1 193 1 155 1 65 1 265 1 333 1 294 1 7 1 67 1 358 1 130 1 313 3 12 2 269 1 177 1 250 1 205 1 135 2 361 1 111 4 253 1 344 2 158 1 233 1 50 1 235 1 257 3 302 1 164 1 25 5 116 4 117 2 
165 2 145 1 82 1 101 1 120 2 102 4 283 1 5 1 240 1 356 1 193 1 65 1 265 1 333 1 294 1 67 1 358 1 313 2 130 1 176 1 204 1 12 2 269 1 177 1 229 2 250 1 135 2 111 4 253 1 233 1 158 1 50 1 235 1 19 2 257 2 302 1 23 2 25 4 116 4 
215 1 98 1 0 2 55 1 170 1 56 2 32 4 219 1 34 1 287 2 329 1 124 8 289 1 6 1 104 1 194 2 38 2 358 1 334 1 201 2 336 2 131 2 108 1 42 1 182 1 342 1 73 7 232 2 278 2 158 1 235 1 301 1 161 2 184 1 21 2 368 1 186 8 163 1 97 3 
81 1 0 1 148 1 29 1 56 1 170 1 150 1 32 2 287 3 63 1 127 1 358 1 69 1 131 1 42 1 338 1 249 1 340 1 342 1 232 1 278 1 76 1 139 1 158 1 235 1 184 2 21 1 95 1 213 1 
338 1 249 1 0 1 148 1 29 1 232 1 56 1 278 1 76 1 32 2 17 1 287 2 289 1 21 1 40 1 131 1 213 1 42 2 
338 1 249 1 0 1 148 1 29 1 232 1 56 1 150 1 278 1 32 2 139 1 287 2 289 1 184 2 21 1 95 1 131 1 133 1 
0 1 148 2 29 2 56 1 150 1 32 2 287 4 289 1 69 1 131 1 42 2 338 2 249 2 232 1 76 1 278 1 17 1 139 1 184 2 21 1 95 1 213 1 
338 1 249 1 0 1 148 1 29 1 232 1 56 1 278 1 76 1 32 2 17 1 287 2 301 1 21 1 40 1 131 1 213 1 42 2 
338 1 249 1 0 1 148 1 29 1 232 1 56 1 150 1 278 1 32 2 139 1 287 2 301 1 184 2 21 1 95 1 131 1 133 1 
0 1 148 2 29 2 56 1 150 1 32 2 287 4 69 1 131 1 42 2 338 2 249 2 232 1 76 1 278 1 17 1 139 1 301 1 184 2 21 1 95 1 213 1 
0 1 148 2 29 2 56 1 150 1 32 2 287 4 69 1 131 1 42 2 338 2 249 2 232 1 76 1 278 1 17 1 139 1 184 2 21 1 95 1 213 1 
0 1 83 1 56 1 32 2 219 1 287 2 124 1 6 1 194 1 39 1 201 1 336 1 131 1 42 1 297 1 319 1 73 1 231 1 232 1 278 1 48 1 158 1 235 1 161 1 184 1 21 1 186 1 97 1 
0 1 56 1 32 2 219 1 287 2 124 1 6 1 194 1 39 1 201 1 336 1 337 1 131 1 42 1 73 1 231 1 232 1 278 1 48 1 158 1 235 1 161 1 184 1 258 1 21 1 78 1 186 1 97 1 
0 1 148 2 29 2 56 1 150 1 32 2 287 4 69 1 131 1 42 2 338 2 249 2 340 1 232 1 76 1 278 1 17 1 139 1 184 2 21 1 95 1 213 1 
98 1 0 1 307 1 148 2 83 1 29 2 56 1 150 1 32 2 287 4 124 1 39 1 201 1 69 1 336 1 131 1 42 2 297 1 338 2 249 2 319 1 73 1 232 1 76 1 278 1 139 1 17 1 48 1 158 1 235 1 161 1 184 2 21 1 95 1 186 1 213 1 97 1 
81 1 0 1 148 1 29 1 56 1 170 1 32 2 287 3 127 1 358 1 69 1 268 1 131 1 42 2 338 1 249 1 340 1 342 1 232 1 278 1 76 1 139 1 17 1 158 1 235 1 184 1 21 1 95 1 213 1 
289 1 0 1 21 1 252 1 232 1 56 1 278 1 32 2 131 1 
249 3 0 1 340 1 29 3 232 1 56 1 278 1 32 2 287 2 255 1 126 1 184 1 21 1 312 1 131 1 42 1 272 1 
0 1 27 1 83 1 148 1 56 1 170 1 32 2 219 1 287 2 124 1 6 1 194 1 311 1 39 1 358 1 201 1 336 1 131 1 90 1 42 1 297 1 274 1 182 1 340 1 73 1 342 1 231 1 232 1 278 1 48 1 158 2 235 2 161 1 184 1 21 1 186 1 80 1 97 1 
0 3 148 7 56 3 150 4 241 1 287 20 6 1 194 1 199 1 9 1 201 2 69 2 336 2 297 2 299 1 338 8 249 7 340 1 73 3 342 1 76 3 17 4 158 3 161 2 21 3 346 2 305 2 163 1 213 2 166 1 307 2 83 2 28 1 29 7 170 1 32 6 219 1 124 3 358 1 39 2 131 3 90 1 42 10 228 2 182 1 319 2 231 2 232 3 278 3 138 1 139 2 48 2 235 3 184 10 94 1 185 1 95 3 186 3 97 2 
359 1 0 1 21 1 326 1 75 1 232 1 32 2 131 1 315 1 
359 1 0 1 21 1 326 1 75 1 232 1 32 2 131 1 315 1 
359 1 0 1 21 1 326 1 75 1 232 1 32 2 131 1 315 1 
359 1 0 1 21 1 326 1 75 1 232 1 32 2 131 1 315 1 
359 1 0 1 21 1 326 1 75 1 232 1 32 2 131 1 315 1 
261 1 162 1 156 1 237 1 208 1 24 1 284 1 30 1 31 1 279 1 
370 1 335 1 
261 1 162 1 208 1 168 1 105 1 284 1 30 1 351 1 279 1 
134 1 156 1 15 1 71 2 2 1 5 1 111 1 30 1 284 1 279 1 261 1 152 1 162 1 62 1 237 1 208 1 24 1 116 1 
134 1 156 1 15 1 71 2 2 1 5 1 111 1 30 1 284 1 279 1 261 1 152 1 162 1 62 1 237 1 208 1 24 1 116 1 
134 1 156 1 15 1 71 2 2 1 5 1 111 1 30 1 284 1 279 1 261 1 152 1 162 1 62 1 237 1 208 1 24 1 116 1 
246 1 325 1 103 1 
246 1 325 1 103 1 
72 1 57 1 
325 1 72 1 57 1 
154 1 11 1 
54 1 190 1 147 1 2 1 170 2 284 1 30 1 350 1 152 1 261 1 154 1 358 2 200 1 335 1 11 1 71 1 342 2 231 1 111 1 158 2 279 1 235 2 162 1 208 1 370 1 116 1 323 1 
246 1 103 1 
325 1 72 1 57 1 
0 1 217 1 56 1 32 2 121 1 219 1 34 1 287 2 355 1 124 2 6 1 104 1 38 2 293 1 358 2 201 1 336 1 131 1 42 1 340 1 73 2 232 1 278 1 158 2 235 2 161 1 184 1 21 1 142 1 186 2 97 1 
215 1 73 1 300 1 122 1 329 1 124 1 161 1 331 1 194 1 125 1 201 1 186 1 336 1 97 1 
70 1 251 1 275 2 73 1 58 1 122 1 124 1 125 1 141 1 201 1 186 1 163 1 89 1 336 1 316 1 132 1 178 1 144 1 
98 1 70 1 251 1 275 2 73 2 58 1 122 1 124 2 125 1 141 1 201 1 186 2 163 1 89 1 336 1 316 1 132 1 178 1 144 1 
70 1 275 2 73 1 58 1 122 1 262 1 124 1 141 1 201 1 186 1 163 1 89 1 336 1 316 1 132 1 178 1 144 1 
37 1 
43 1 145 1 82 1 5 1 50 1 356 1 294 1 333 1 369 1 177 1 
228 1 214 5 306 1 229 10 5 5 76 2 139 2 92 2 356 5 330 5 69 2 95 2 213 2 117 5 177 5 
145 1 102 1 5 1 111 1 116 1 12 1 
215 1 82 1 102 4 149 2 329 1 356 2 124 4 245 1 194 2 333 2 294 2 201 1 336 1 12 2 177 2 271 2 298 1 136 2 73 4 110 1 111 3 277 1 343 1 50 2 161 1 186 4 96 1 97 1 116 3 
252 1 
145 1 82 1 102 1 5 2 288 1 356 1 333 1 294 1 12 1 177 1 229 1 205 1 111 1 344 1 50 1 116 1 117 1 
188 2 53 2 98 1 145 2 100 2 102 5 327 2 5 8 149 2 240 2 243 2 330 6 194 1 294 4 333 4 68 1 201 4 69 2 336 3 12 3 296 2 298 1 73 3 111 5 76 2 160 1 161 3 256 1 347 2 213 2 116 5 117 6 214 6 306 2 119 2 82 4 33 1 356 8 124 3 173 3 39 3 271 1 177 9 228 2 43 1 229 12 136 1 139 2 92 2 50 4 369 1 95 2 186 3 97 10 
214 5 306 1 99 1 145 2 82 2 189 1 102 1 5 5 149 1 356 5 330 5 126 1 295 1 333 2 294 2 69 2 266 1 312 1 12 1 271 1 177 8 229 6 362 1 111 1 363 1 76 2 139 2 159 1 92 2 50 2 280 1 95 2 213 2 116 1 117 3 
81 1 306 1 101 1 82 1 167 1 170 1 356 2 242 1 85 1 333 1 294 1 199 1 358 1 177 2 299 1 91 1 361 1 342 1 111 1 76 2 365 1 158 1 92 2 50 1 235 1 185 1 95 1 116 1 
81 2 0 1 83 1 170 2 56 1 32 2 219 1 287 1 221 1 124 1 194 1 358 2 39 1 201 1 131 1 336 1 297 1 91 1 319 1 73 1 342 2 231 1 232 1 278 1 158 3 48 1 235 3 161 1 184 1 21 1 186 1 97 1 
214 2 229 4 145 2 82 1 5 4 149 1 356 2 50 1 330 2 294 1 333 1 94 1 117 2 177 1 271 1 
261 1 237 1 208 1 211 1 11 1 
261 1 208 1 239 1 
261 1 208 1 239 1 
261 1 208 1 239 1 
261 1 208 1 
284 1 30 1 
261 1 208 1 286 1 
261 1 208 1 286 1 
261 1 208 1 286 1 
299 2 338 5 0 1 167 1 326 1 232 1 150 3 76 2 32 2 17 2 287 10 184 5 21 1 199 2 185 1 95 2 131 1 42 5 
338 1 0 1 326 1 232 1 76 1 32 2 17 1 287 2 21 1 131 1 213 1 42 2 
338 2 0 1 326 1 232 1 150 1 76 1 32 2 139 1 17 1 287 4 184 2 21 1 95 1 69 1 131 1 213 1 42 2 
299 1 338 2 14 1 0 3 326 1 232 3 150 1 113 1 32 6 17 1 287 3 184 2 21 3 199 1 131 3 273 1 42 1 
0 3 326 1 341 1 232 3 206 1 32 6 287 2 280 1 126 1 184 1 21 3 312 1 131 3 42 1 273 1 
338 3 299 1 0 2 14 1 232 2 76 1 150 2 32 4 138 1 17 1 287 8 184 4 21 2 94 1 199 1 95 1 185 1 9 1 131 2 42 4 
252 1 
338 2 0 1 341 1 232 1 150 1 76 1 32 2 139 1 17 1 287 4 184 2 21 1 95 1 69 1 131 1 213 1 42 2 
280 1 126 1 184 1 312 1 287 2 42 1 
255 1 126 1 184 1 312 1 287 2 42 1 
184 1 312 1 287 1 
126 1 287 1 42 1 
228 1 338 3 0 1 341 1 232 1 76 1 150 2 32 2 17 1 139 1 287 6 184 3 21 1 69 1 95 1 131 1 213 1 42 3 
280 1 0 1 126 1 184 1 21 1 326 1 232 1 363 1 312 1 32 2 131 1 287 2 42 1 
299 1 338 2 76 1 150 1 17 1 287 6 184 3 199 1 185 1 95 1 42 3 
338 2 299 1 14 1 0 1 232 1 150 1 138 1 113 1 32 2 17 1 287 3 184 2 21 1 199 1 9 1 131 1 42 1 
280 1 0 1 126 1 184 1 21 1 326 1 232 1 363 1 312 1 32 2 131 1 287 2 42 1 
0 2 341 1 326 1 232 2 363 1 32 4 287 2 280 1 126 1 184 1 21 2 312 1 131 2 42 1 
99 1 0 3 189 1 326 1 150 3 32 6 287 19 126 1 199 1 9 1 69 2 266 1 312 1 131 3 42 9 299 1 338 4 14 1 341 1 232 3 363 1 76 3 138 1 17 1 139 2 159 1 280 1 184 10 21 3 94 1 185 1 95 3 213 2 
280 1 0 1 126 1 184 1 21 1 326 1 232 1 363 1 312 1 32 2 131 1 287 2 42 1 
280 1 0 1 126 1 184 1 21 1 326 1 232 1 363 1 312 1 32 2 131 1 287 2 42 1 
99 1 0 1 189 1 326 1 150 1 32 2 287 12 126 1 69 2 266 1 312 1 131 1 42 6 338 2 232 1 363 1 76 2 17 1 139 2 159 1 280 1 184 6 21 1 95 2 213 2 
0 2 326 1 341 1 232 2 363 1 32 4 287 2 280 1 126 1 184 1 21 2 312 1 131 2 42 1 
0 2 326 1 232 2 363 1 32 4 287 2 280 1 126 1 184 1 21 2 312 1 131 2 42 1 273 1 
299 3 338 6 150 3 76 1 138 2 17 3 287 7 184 4 199 3 95 1 9 1 185 1 42 3 
0 2 326 1 232 2 363 1 32 4 287 2 280 1 126 1 184 1 21 2 312 1 131 2 42 1 273 1 
235 1 231 1 67 1 358 1 115 1 328 1 158 1 
44 1 231 1 328 1 158 1 235 1 264 1 292 1 67 1 358 1 115 1 128 1 79 1 
215 1 98 1 73 4 329 1 114 1 124 4 161 1 194 1 247 1 201 1 186 4 336 1 97 1 
136 1 73 2 28 1 49 1 123 1 124 2 161 1 320 1 39 1 201 2 186 2 203 1 336 1 97 1 
124 1 70 1 194 1 275 1 73 1 141 1 201 1 186 1 58 1 336 1 
98 1 73 2 124 2 161 1 104 1 201 1 186 2 142 1 163 1 336 1 97 1 
215 1 98 1 136 1 55 1 73 4 329 1 124 5 161 2 194 1 104 1 247 1 334 1 201 2 186 5 336 2 97 3 
215 1 98 1 136 1 55 1 73 4 329 1 124 5 244 1 161 2 194 1 104 1 247 1 201 2 186 5 336 2 97 3 
124 1 194 1 252 1 73 1 186 1 
297 1 182 1 342 1 73 1 231 1 170 1 48 1 158 2 235 2 124 1 161 1 194 1 39 1 358 1 201 1 186 1 336 1 97 1 
297 1 100 1 101 1 182 1 136 1 342 1 73 1 231 1 170 2 48 1 158 2 235 2 124 1 161 2 65 1 39 2 358 2 201 1 186 1 130 1 336 1 97 3 296 1 
100 1 101 1 182 1 136 1 342 1 73 2 231 1 170 2 48 1 158 2 114 1 235 2 124 2 161 2 65 1 39 2 358 2 201 1 78 1 186 2 130 1 336 1 97 3 296 1 
118 1 145 1 100 1 102 1 136 1 5 1 73 3 111 2 240 1 114 1 124 3 161 1 194 1 173 1 39 1 347 1 201 1 186 3 322 1 336 1 116 2 97 4 296 1 
145 1 100 1 102 1 136 1 5 1 73 3 327 1 111 2 240 1 114 1 124 3 161 1 194 1 173 1 39 1 347 1 201 1 186 3 336 1 116 2 97 4 296 1 
124 1 73 1 201 1 368 1 186 1 336 1 
98 1 55 1 73 6 33 1 207 1 123 1 124 7 161 2 320 1 38 1 104 1 194 2 39 1 368 1 334 1 201 3 186 7 163 1 336 2 97 3 108 1 
98 1 0 2 148 1 56 2 150 2 287 6 293 1 199 1 201 1 9 1 336 1 297 1 299 1 338 2 249 1 340 1 73 1 342 1 76 1 158 2 161 1 346 1 21 2 307 1 83 1 29 1 170 1 32 4 124 1 358 1 39 1 131 2 42 3 182 1 319 1 232 2 231 2 278 2 138 1 48 1 235 2 184 3 94 1 185 1 95 1 186 1 97 1 
188 1 145 1 119 1 82 2 102 2 5 1 327 1 240 1 356 1 243 1 124 1 194 1 173 1 333 2 294 2 200 1 12 1 177 1 43 1 298 1 73 1 111 3 50 2 347 1 369 1 186 1 116 3 97 2 
98 1 73 2 33 1 124 2 256 1 161 1 347 1 39 1 368 1 201 2 186 2 336 1 97 2 
182 1 342 1 73 1 231 1 170 1 48 1 158 2 235 2 124 1 161 1 194 1 39 1 358 1 201 1 78 1 186 1 336 1 97 1 
136 1 73 1 33 1 207 1 123 1 124 1 161 1 320 1 39 1 201 2 186 1 336 1 97 1 
36 1 235 1 217 1 196 1 4 1 358 1 121 1 158 1 355 1 
224 1 4 1 47 1 
36 1 196 1 367 1 4 1 231 1 
145 1 250 1 101 1 5 1 4 1 231 1 111 2 47 1 240 1 36 2 65 1 224 1 140 1 196 2 367 2 197 1 200 1 130 1 116 2 
324 1 191 1 157 1 209 1 8 1 16 1 308 1 270 1 
324 4 191 2 157 4 16 2 59 1 222 1 183 1 20 1 209 1 8 2 107 2 13 1 270 1 109 1 
324 1 282 1 157 1 353 1 16 1 308 1 18 1 20 1 209 1 8 1 270 1 
324 3 191 1 157 3 16 1 308 1 59 2 87 1 183 2 209 1 8 1 13 1 270 1 
191 2 259 1 84 1 354 2 
324 1 157 1 218 1 209 1 308 1 270 1 
324 2 191 1 157 2 209 1 8 1 107 1 129 1 16 1 308 1 270 1 
366 1 
324 1 191 1 157 1 209 1 8 1 16 1 308 1 270 1 
252 1 
324 1 191 1 157 1 209 1 8 1 16 1 270 1 
309 1 1 1 157 1 
324 3 191 1 157 3 16 1 308 1 59 2 234 1 183 1 209 1 8 1 13 1 270 1 
223 1 324 2 191 1 157 2 209 1 8 1 107 1 16 1 270 1 
222 1 77 1 70 1 324 1 275 1 157 1 209 1 308 1 178 1 270 1 
324 1 191 1 157 1 209 1 16 1 308 1 270 1 
324 1 157 1 209 1 8 1 16 2 308 1 270 1 
324 2 191 1 157 2 16 1 308 1 61 1 236 1 209 2 52 1 270 2 
324 3 191 1 157 3 74 1 16 1 308 1 222 1 209 1 8 1 107 2 129 1 270 1 109 1 
70 1 324 2 275 2 191 1 157 2 112 1 16 1 58 1 308 1 209 1 8 1 107 1 89 1 270 1 178 1 
324 4 191 1 157 4 16 1 308 1 51 1 223 1 222 1 209 2 8 1 107 2 270 2 109 1 
324 3 191 1 157 3 209 1 8 1 107 1 129 1 16 1 308 1 59 1 270 1 
222 1 324 1 157 1 107 1 109 1 
191 1 16 1 

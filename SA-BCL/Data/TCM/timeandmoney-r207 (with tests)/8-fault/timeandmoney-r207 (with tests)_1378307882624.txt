#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 303 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint; | RETURN | 620 | return null
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
309 1 175 9 119 2 214 3 54 4 193 1 123 1 57 2 194 1 220 1 364 2 343 2 266 6 107 1 316 9 226 1 8 2 186 1 9 5 206 1 323 1 11 1 167 1 304 2 351 1 280 2 286 1 353 1 
309 1 175 9 119 2 214 3 54 4 193 1 123 1 57 2 194 1 220 1 364 2 343 2 266 6 107 1 316 9 226 1 8 2 186 1 9 5 206 1 323 1 11 1 167 1 304 2 351 1 280 2 286 1 353 1 
309 1 175 10 119 2 214 4 54 5 193 1 123 1 57 2 194 1 220 1 364 2 343 2 266 7 107 1 316 10 226 1 8 2 186 1 9 6 206 1 323 1 11 1 167 1 304 2 351 1 280 2 286 1 353 1 
186 1 175 7 8 2 309 1 54 3 214 2 119 2 193 1 9 4 123 1 57 2 206 1 323 1 11 1 194 1 220 1 364 2 167 1 343 1 304 2 280 2 266 4 286 1 316 7 107 1 226 1 353 1 
186 1 175 4 214 1 54 2 119 1 193 1 9 3 57 1 323 1 194 1 220 1 364 1 304 1 343 2 351 1 280 1 266 3 316 4 
186 1 175 2 8 1 193 1 9 1 123 1 57 1 163 1 220 1 364 1 304 1 280 1 255 1 316 2 157 1 353 1 
186 1 175 3 8 1 214 1 54 1 193 1 9 2 206 1 220 1 364 2 304 2 266 1 316 3 
186 1 175 9 0 1 8 1 119 1 214 3 54 4 193 1 9 5 57 1 206 1 323 1 194 1 30 1 220 1 364 2 343 2 304 2 351 1 280 1 266 7 286 1 316 9 226 1 
186 1 175 9 0 1 8 1 119 1 214 3 54 4 193 1 9 5 57 1 206 1 323 1 194 1 30 1 220 1 364 2 343 2 304 2 351 1 280 1 266 7 286 1 316 9 226 1 
259 1 127 1 131 1 
259 1 250 1 117 2 
90 2 278 2 134 1 51 2 100 2 138 2 234 1 227 2 
356 1 120 1 291 1 58 1 100 3 361 1 179 1 335 1 28 1 180 1 60 1 134 1 296 1 32 1 82 1 315 2 138 2 227 2 90 3 89 1 249 1 68 1 69 1 70 1 234 1 115 1 325 1 278 2 189 2 47 1 326 1 209 1 281 2 283 2 51 2 18 2 192 1 
90 1 278 1 254 1 51 1 297 1 100 1 138 1 234 1 227 1 312 1 
97 1 355 1 90 1 216 1 273 1 259 1 99 1 100 1 127 1 337 1 183 1 254 1 51 1 284 1 
97 1 355 2 90 1 259 1 99 2 100 1 127 1 337 1 278 1 183 1 254 1 51 1 284 1 138 1 227 1 
355 1 221 1 99 1 105 1 243 1 
355 2 221 1 259 1 99 2 105 1 127 1 269 1 159 1 
355 1 221 1 99 1 
355 1 90 1 99 1 126 1 100 1 234 1 312 1 278 1 254 1 105 1 51 1 297 1 138 1 227 1 
259 1 
355 2 221 1 259 1 99 2 105 1 127 1 65 1 269 1 
355 5 259 1 204 1 99 5 10 1 127 1 301 2 293 1 208 2 340 1 195 1 221 2 147 1 105 2 369 1 269 1 173 2 4 1 308 1 
134 1 131 1 
90 2 43 1 100 2 278 1 134 2 51 2 306 1 138 1 227 1 
314 1 42 1 232 1 
90 1 291 1 100 1 361 1 70 1 179 1 335 1 189 1 134 1 326 1 47 1 296 1 32 1 283 1 199 1 18 1 
78 1 90 2 291 1 232 1 70 1 100 2 361 1 335 1 179 1 278 1 189 1 47 1 326 1 296 1 32 1 283 1 35 1 51 1 138 1 18 1 
90 5 78 1 273 1 43 1 178 1 100 5 278 4 134 1 106 1 35 2 51 5 138 4 20 1 227 1 
90 2 278 2 254 1 51 2 297 1 100 2 138 2 237 1 
90 3 278 3 134 1 35 1 51 3 100 3 138 3 227 1 
90 1 278 1 254 1 51 1 297 1 100 1 138 1 
90 1 278 1 43 1 254 1 51 1 306 1 100 1 138 1 227 1 
356 1 97 1 355 1 78 1 120 1 291 1 151 1 99 1 58 1 100 4 361 1 335 1 179 1 28 1 337 1 134 1 296 1 183 1 32 1 315 1 35 1 138 3 227 2 89 1 90 4 249 1 68 1 43 1 69 1 70 1 234 1 115 1 236 1 278 3 189 1 47 1 326 1 209 1 254 1 281 2 283 1 51 3 284 1 18 1 
90 2 278 1 134 1 273 1 51 2 35 1 178 1 100 2 138 1 
355 1 97 1 78 1 90 3 43 1 259 1 99 1 151 1 100 3 337 1 278 3 183 1 254 1 282 1 284 1 35 2 51 3 138 3 227 1 
90 2 42 1 43 1 100 2 232 1 278 2 35 1 51 2 138 2 227 1 
90 1 291 1 100 1 361 1 70 1 179 1 335 1 189 1 134 1 326 1 47 1 296 1 32 1 283 1 18 1 
90 1 291 1 100 1 361 1 70 1 335 1 189 1 134 1 326 1 47 1 32 1 283 1 86 1 18 1 354 1 
356 1 258 1 120 2 58 1 314 2 81 1 82 2 155 1 198 1 315 4 85 1 108 1 109 1 68 1 42 2 69 1 231 1 232 2 71 1 115 1 209 1 75 1 281 2 116 1 
90 1 278 1 254 1 51 1 100 1 138 1 237 1 337 1 
246 1 113 1 
246 1 113 1 
56 1 218 1 
56 1 218 1 
56 1 218 1 
246 1 98 1 113 1 
246 1 98 1 113 1 
3 1 246 1 113 1 
56 1 113 2 218 1 264 1 294 1 246 2 371 1 
246 1 98 1 113 1 
327 1 246 1 113 1 
327 1 246 1 113 1 
327 1 246 1 113 1 
355 1 215 1 1 1 25 1 26 1 99 1 100 2 313 1 3 1 134 1 196 1 246 1 84 1 138 2 228 1 90 2 113 1 72 1 278 2 16 1 279 1 51 2 52 1 289 1 
355 2 143 1 1 2 259 1 121 1 99 2 27 1 113 2 374 1 235 1 346 1 313 1 16 3 196 2 246 2 84 2 371 1 289 2 379 2 
119 1 280 1 57 1 
280 1 255 1 57 1 
119 2 255 1 57 3 164 1 370 1 139 1 
119 1 348 1 255 1 57 2 164 1 370 1 
119 1 255 1 57 2 370 1 164 2 
355 5 25 1 258 1 245 1 26 1 99 5 259 2 127 1 293 1 153 2 263 1 181 2 340 3 221 1 62 1 105 4 85 1 87 1 269 1 36 1 318 2 204 2 250 1 111 1 301 1 71 1 208 1 324 1 75 1 52 1 173 1 117 3 
245 1 99 6 100 1 293 1 153 2 340 3 105 5 297 1 67 1 204 2 161 1 250 1 301 1 71 1 208 1 254 1 75 1 173 1 117 3 355 6 258 1 26 2 259 3 126 1 127 1 311 3 312 1 263 1 221 4 85 1 138 1 269 1 227 1 36 1 90 1 318 2 234 1 324 1 278 1 51 1 243 3 331 1 
355 3 258 1 245 1 26 1 259 3 99 3 127 1 153 2 181 1 195 1 340 3 62 1 105 2 85 1 87 1 36 1 318 2 204 2 250 2 301 1 71 1 208 1 324 1 75 1 173 1 117 4 
355 4 258 2 245 1 26 2 259 4 99 4 124 1 127 1 153 4 181 2 195 1 340 5 62 1 105 3 85 2 87 1 36 2 318 4 204 4 250 3 301 1 71 2 208 1 324 1 15 1 49 1 75 2 173 1 117 7 
32 1 285 1 131 1 
32 1 128 1 
79 1 
47 1 326 1 32 1 
32 1 240 1 
47 1 32 1 
166 1 47 1 326 1 150 1 32 3 285 2 
149 1 120 3 258 1 358 1 274 1 152 1 187 1 92 1 238 1 377 2 366 1 81 3 82 4 315 7 85 1 345 1 109 2 
149 1 120 3 258 1 358 1 274 1 152 1 187 1 92 1 238 1 377 2 366 1 81 3 82 4 315 7 85 1 345 1 109 2 
149 1 120 3 258 1 274 1 358 1 152 1 310 1 187 1 92 1 238 1 377 2 366 1 81 3 82 4 315 7 85 1 345 1 109 2 
356 1 149 2 120 15 258 4 358 1 152 2 366 5 81 10 342 1 33 1 82 16 136 4 315 31 85 4 345 1 36 3 109 5 160 1 68 1 69 1 274 1 187 2 205 1 71 3 251 1 92 1 238 2 377 3 168 3 209 1 75 3 281 2 191 1 212 1 
356 2 149 1 258 1 120 4 358 1 152 1 102 1 81 4 366 1 82 5 315 9 85 1 109 3 7 1 68 2 69 2 274 1 187 1 92 1 238 1 377 2 209 2 281 4 212 1 
175 2 119 1 193 1 291 1 260 1 57 2 335 1 29 1 363 1 220 1 364 1 265 1 266 1 316 2 139 1 141 1 270 1 271 1 186 1 8 1 317 1 9 1 189 1 304 1 280 1 255 1 283 1 242 1 307 1 18 1 
175 3 119 1 193 1 291 1 260 1 57 2 335 1 29 1 363 1 220 1 364 1 154 1 266 2 316 3 139 1 141 1 271 1 8 1 317 1 9 1 376 1 189 1 304 1 280 1 255 1 283 1 172 1 242 1 307 1 18 1 
175 2 119 1 193 1 291 1 260 1 57 2 335 1 363 1 220 1 154 1 266 2 316 2 139 1 141 1 8 1 317 1 9 1 189 1 280 1 255 1 283 1 172 1 242 1 307 1 18 1 
290 1 8 2 175 1 317 2 142 1 291 1 80 1 361 1 335 1 376 1 182 1 189 1 47 1 364 1 135 1 32 1 304 1 224 1 283 1 242 2 316 1 18 1 307 2 
175 1 119 1 291 1 260 1 57 2 335 1 29 1 363 1 364 1 265 1 316 1 139 1 141 1 271 1 186 1 8 1 317 1 189 1 304 1 280 1 255 1 283 1 172 1 242 1 307 1 18 1 
93 1 
97 1 291 1 99 5 100 1 335 1 101 2 293 1 337 1 340 2 64 1 5 1 201 1 204 2 250 2 301 1 207 1 208 1 74 1 254 1 211 2 256 2 18 2 173 1 117 2 22 1 355 5 257 2 23 1 216 1 24 2 259 1 80 1 122 1 125 1 361 2 221 6 183 1 32 1 224 1 269 3 372 4 373 2 90 1 273 1 275 2 324 1 146 1 189 2 47 1 283 2 51 1 284 1 287 1 381 1 
355 3 97 1 23 1 90 1 216 1 201 1 273 1 99 3 100 1 101 1 337 1 221 2 183 1 254 1 284 1 51 1 64 1 65 1 269 1 372 2 22 1 381 1 
355 3 97 1 23 1 90 1 216 1 201 1 273 1 259 1 99 3 100 1 127 1 337 1 221 1 183 1 254 1 256 1 284 1 51 1 64 1 65 1 269 1 372 3 22 1 381 1 
355 2 97 1 23 1 90 1 216 1 201 1 273 1 99 2 100 1 101 1 337 1 221 1 183 1 254 1 284 1 51 1 64 1 372 2 373 1 22 1 381 1 
97 1 332 1 99 5 100 2 101 4 293 1 337 1 340 1 297 1 64 1 65 1 5 1 201 1 204 1 250 2 301 1 208 1 254 2 76 1 211 2 256 2 173 1 22 1 355 5 23 1 257 2 216 1 24 2 217 1 259 1 122 1 126 1 127 1 312 1 262 1 219 1 221 7 183 1 138 1 269 3 227 1 372 4 373 4 90 2 273 1 275 2 234 1 278 1 284 1 51 2 381 1 
97 1 99 3 100 2 293 1 101 1 337 1 340 1 297 1 64 1 5 1 201 1 204 1 250 2 301 1 208 1 254 2 211 2 256 1 173 1 117 2 22 1 355 3 23 1 257 1 216 1 24 2 259 3 122 1 126 1 125 1 127 1 312 1 221 2 183 1 138 1 269 1 227 1 372 3 373 1 90 2 273 1 275 2 234 1 278 1 284 1 51 2 381 1 
332 1 97 1 99 4 100 2 293 1 101 2 337 1 340 1 297 1 64 1 5 1 201 1 204 1 250 2 301 1 208 1 254 2 76 1 211 2 256 2 173 1 22 1 355 4 23 1 257 2 216 1 24 2 259 1 122 1 126 1 127 1 312 1 219 1 221 4 183 1 138 1 269 2 227 1 372 4 373 2 90 2 273 1 275 2 234 1 278 1 284 1 51 2 381 1 
332 1 97 1 99 4 100 2 293 1 101 2 337 1 340 1 297 1 64 1 5 1 201 1 204 1 250 2 301 1 208 1 254 2 76 1 211 2 256 2 173 1 22 1 355 4 23 1 257 2 216 1 24 2 259 1 122 1 126 1 127 1 312 1 219 1 221 4 183 1 138 1 269 2 227 1 372 4 373 2 90 2 273 1 275 2 234 1 278 1 284 1 51 2 381 1 
355 2 97 1 23 1 90 1 216 1 201 1 273 1 99 2 100 1 337 1 303 1 183 1 254 1 284 1 51 1 64 1 372 2 22 1 381 1 
332 1 97 1 99 4 100 2 101 3 293 1 337 1 340 1 297 1 64 1 5 1 201 1 204 1 250 2 301 1 208 1 254 2 76 1 211 2 256 2 173 1 22 1 355 4 23 1 257 2 216 1 24 2 259 1 122 1 126 1 127 1 312 1 262 1 219 1 221 5 183 1 138 1 269 2 227 1 372 4 373 3 90 2 273 1 275 2 234 1 278 1 284 1 51 2 381 1 
332 1 97 1 99 4 100 2 101 3 293 1 337 1 340 1 297 1 64 1 5 1 201 1 204 1 250 2 301 1 208 1 254 2 76 1 211 2 256 2 173 1 22 1 355 4 23 1 257 2 216 1 24 2 259 1 122 1 126 1 127 1 312 1 262 1 219 1 221 5 183 1 138 1 269 2 227 1 372 4 373 3 90 2 273 1 275 2 234 1 278 1 284 1 51 2 381 1 
97 1 99 4 100 2 293 1 101 2 337 1 340 1 339 2 197 2 297 1 64 1 201 1 204 1 301 1 208 1 254 2 256 1 173 1 117 2 22 1 355 4 23 1 216 1 24 2 259 1 122 1 126 1 125 1 127 1 312 1 221 4 183 1 138 1 269 2 227 1 372 3 373 2 40 1 90 2 273 1 275 2 234 1 278 1 284 1 51 2 381 1 
356 1 258 1 120 3 358 1 58 1 131 1 314 1 134 2 81 2 82 3 315 6 85 1 109 2 68 1 42 1 69 1 274 1 231 1 232 1 187 1 115 1 92 1 238 1 377 1 209 1 281 2 
356 2 120 6 258 1 55 1 58 1 103 1 314 11 134 1 341 1 366 1 81 2 82 8 33 1 136 3 315 14 85 2 36 2 109 1 88 1 249 1 68 2 42 4 69 2 232 11 71 1 251 1 115 2 12 1 325 1 209 2 168 3 75 2 281 4 
356 1 78 1 291 1 120 1 361 1 58 1 100 2 335 1 179 1 134 1 341 1 296 1 32 1 82 1 35 1 315 2 199 1 138 1 90 2 249 1 68 1 42 1 69 1 276 1 70 1 375 1 115 1 325 1 189 1 278 1 47 1 326 1 209 1 283 1 281 2 51 1 330 1 18 1 
291 2 100 3 58 3 335 2 341 1 296 2 109 4 249 1 68 3 69 3 162 1 70 2 165 2 71 2 115 3 209 3 350 2 75 2 172 1 18 3 356 3 78 1 258 3 120 10 358 1 361 1 362 1 179 2 129 1 314 7 134 2 366 4 81 8 32 2 82 10 35 1 315 20 85 3 138 1 140 2 36 2 90 3 89 2 42 7 274 1 187 1 232 7 92 1 238 1 325 1 377 1 189 3 278 1 326 2 47 2 329 2 283 3 281 6 51 1 
356 2 118 1 291 2 120 1 80 1 2 1 100 1 361 2 58 2 335 2 130 1 60 2 32 3 82 1 224 1 35 1 315 2 138 1 270 1 90 1 249 1 68 2 320 1 69 2 230 1 144 1 231 1 115 2 325 1 278 1 189 8 47 2 209 2 352 1 283 7 281 4 172 1 51 1 18 8 
356 1 258 1 120 2 58 1 100 1 314 1 341 1 81 1 82 1 315 3 85 1 138 1 227 1 36 1 109 1 90 1 68 1 42 1 43 1 69 1 232 1 71 1 115 1 278 1 302 1 209 1 75 1 281 2 51 1 
356 1 68 1 42 1 69 1 231 1 232 1 58 1 115 1 314 1 81 1 366 1 209 1 155 1 82 2 75 1 281 2 315 2 85 1 
356 1 68 1 258 1 120 2 42 1 69 1 231 1 232 1 58 1 71 1 115 1 314 1 81 1 209 1 281 2 315 2 116 1 109 1 
356 1 120 2 258 1 68 1 42 2 69 1 231 1 232 2 58 1 71 1 115 1 314 2 81 2 366 1 209 1 82 2 75 1 281 2 315 4 85 1 36 1 109 1 
356 1 68 1 42 1 230 1 69 1 232 1 58 1 115 1 314 1 81 1 366 1 209 1 155 1 82 2 75 1 281 2 315 2 85 1 
356 1 68 1 258 1 120 2 42 1 230 1 69 1 232 1 58 1 71 1 115 1 314 1 81 1 209 1 281 2 315 2 116 1 109 1 
356 1 120 2 258 1 68 1 42 2 230 1 69 1 232 2 58 1 71 1 115 1 314 2 81 2 366 1 209 1 82 2 75 1 281 2 315 4 85 1 36 1 109 1 
356 1 120 2 258 1 68 1 42 2 69 1 232 2 58 1 71 1 115 1 314 2 81 2 366 1 209 1 82 2 75 1 281 2 315 4 85 1 36 1 109 1 
356 1 291 1 120 1 361 1 100 1 58 1 335 1 179 1 134 1 296 1 32 1 82 1 315 2 89 1 90 1 249 1 68 1 69 1 70 1 115 1 325 1 189 1 47 1 326 1 209 1 283 1 281 2 18 1 
356 1 291 1 120 1 361 1 100 1 58 1 335 1 134 1 32 1 82 1 247 1 315 2 86 1 90 1 249 1 68 1 69 1 70 1 115 1 325 1 189 1 47 1 326 1 209 1 283 1 281 2 18 1 354 1 
356 1 258 1 120 2 58 1 314 2 341 1 366 1 81 2 82 2 315 4 85 1 36 1 109 1 68 1 42 2 69 1 232 2 71 1 115 1 209 1 75 1 281 2 
356 1 120 2 258 1 291 1 100 1 58 1 335 1 179 1 314 2 81 2 366 1 296 1 32 1 82 2 315 4 85 1 36 1 109 1 270 1 89 1 90 1 68 1 42 2 69 1 232 2 70 1 71 1 115 1 189 1 326 1 47 1 209 1 329 1 75 1 283 1 281 2 18 1 
356 1 120 1 258 1 58 1 100 1 314 1 341 1 81 1 366 1 82 2 156 1 315 3 85 1 138 1 227 1 36 1 90 1 68 1 42 1 43 1 69 1 232 1 71 1 115 1 278 1 209 1 75 1 281 2 51 1 
356 2 120 10 258 3 177 1 61 1 366 3 81 6 83 1 82 9 33 1 34 1 136 2 315 19 85 3 344 1 36 3 109 3 39 1 7 1 68 2 69 2 71 3 251 1 209 2 168 1 170 2 75 3 281 4 171 1 174 2 
356 3 258 2 120 12 261 1 177 2 338 1 61 2 366 2 81 4 82 14 34 1 315 26 136 2 85 3 344 1 36 3 109 2 39 1 7 1 68 3 319 1 69 3 110 1 71 2 251 2 94 1 209 3 168 2 170 1 241 1 75 3 281 6 212 2 174 4 
338 1 61 2 344 1 109 4 7 1 68 3 69 3 110 1 71 4 251 3 168 3 209 3 75 4 170 1 171 1 212 1 174 4 356 3 258 5 120 21 358 1 261 1 177 1 81 8 366 4 33 1 82 20 34 1 268 1 315 41 136 4 85 5 36 4 39 1 319 1 274 1 187 1 92 1 238 1 377 1 94 1 241 1 281 6 
356 4 120 18 258 4 358 1 261 1 177 1 338 1 61 2 366 3 81 7 82 20 33 1 268 1 34 1 136 4 315 38 85 5 344 1 36 4 109 4 39 1 7 1 68 4 319 1 69 4 274 1 110 1 187 1 71 3 251 3 92 1 238 1 377 1 94 1 209 4 168 3 170 1 241 1 75 4 281 8 171 1 212 2 174 4 
356 2 120 25 258 8 358 1 261 1 177 1 338 1 103 2 61 1 366 7 81 14 82 27 33 2 34 1 136 4 315 52 85 8 344 1 36 7 109 7 39 1 7 1 68 2 319 1 69 2 274 1 110 1 187 1 71 7 251 2 92 1 238 1 377 1 94 1 209 2 168 4 170 1 241 1 75 7 281 4 212 1 174 4 
333 1 143 1 196 1 1 1 246 1 84 1 113 1 371 1 235 1 289 1 
3 1 72 1 
196 1 1 1 246 1 84 1 113 1 59 1 21 1 289 1 46 1 
13 1 98 1 
264 1 327 1 41 1 
355 1 143 1 1 1 259 1 121 1 99 1 113 1 374 1 235 1 346 1 313 1 16 2 196 1 246 1 84 1 371 1 289 1 379 1 
355 1 143 1 1 1 259 1 121 1 99 1 113 1 374 1 235 1 346 1 313 1 16 2 196 1 246 1 84 1 371 1 289 1 379 1 
355 1 143 1 1 1 259 1 121 1 99 1 113 1 374 1 235 1 346 1 313 1 16 2 196 1 246 1 84 1 371 1 289 1 379 1 
13 1 264 1 98 1 
13 1 264 1 98 1 
327 1 41 1 
264 1 327 1 41 1 
215 1 228 1 
355 1 215 1 1 1 25 1 26 1 99 1 100 2 3 1 134 1 196 1 222 1 246 1 84 1 105 1 138 2 228 1 90 2 113 1 346 1 72 1 278 2 16 1 279 1 51 2 52 1 379 1 289 1 
90 1 347 1 292 1 51 1 100 1 132 1 
357 1 119 1 317 1 291 1 260 1 57 2 359 1 335 1 29 1 189 2 365 1 280 1 255 1 283 2 172 1 18 2 139 1 141 1 270 1 
119 1 317 1 291 1 260 1 57 2 359 1 335 1 29 1 189 1 280 1 255 1 283 1 225 1 172 1 18 1 139 1 141 1 
357 1 317 1 291 1 80 1 361 1 335 1 189 1 182 1 47 1 32 1 283 1 224 1 18 1 248 1 
357 1 119 1 317 1 291 1 260 1 57 2 359 1 335 1 29 1 189 1 365 1 280 1 255 1 283 1 172 1 18 1 139 1 141 1 
77 1 
340 1 147 1 259 1 204 1 127 1 131 1 308 1 
355 1 257 1 259 2 99 1 127 1 293 1 340 1 221 1 269 1 5 1 204 1 250 1 301 1 208 1 211 1 173 1 117 1 
291 4 334 2 99 5 335 3 293 4 153 6 340 9 295 1 63 2 6 1 300 2 204 8 250 6 114 1 301 4 165 2 208 4 71 2 166 1 349 2 75 2 18 3 173 4 117 12 308 1 355 5 258 2 176 1 259 8 361 1 127 2 128 3 221 5 31 1 32 10 85 2 269 3 38 2 36 2 270 1 318 6 272 2 233 2 324 2 146 1 189 3 47 3 326 3 147 1 240 2 190 2 283 3 284 2 285 2 
355 1 258 2 99 1 259 5 127 2 293 2 153 5 338 1 340 8 221 1 136 1 85 2 269 1 38 2 36 2 318 5 272 1 319 1 204 5 110 1 250 3 301 2 324 1 208 2 71 2 251 1 146 1 277 1 94 1 168 1 241 1 75 2 17 1 173 2 117 6 
355 1 258 1 99 1 100 1 126 1 293 1 312 1 219 1 340 2 297 1 85 2 138 1 38 2 227 1 90 1 272 1 204 2 187 1 301 1 234 1 208 1 92 1 238 1 278 1 328 1 254 1 51 1 173 1 
204 1 259 1 301 1 127 1 293 1 208 1 340 1 147 1 173 1 308 1 
318 5 258 2 272 1 204 5 259 5 250 5 165 1 153 5 71 2 340 5 75 2 85 2 38 2 36 2 117 10 
355 1 221 1 259 1 99 1 127 1 269 1 
355 3 291 1 99 3 80 1 361 2 335 1 293 1 195 1 340 2 221 4 295 1 32 1 185 1 224 1 269 2 204 2 114 2 301 2 208 2 324 2 146 2 189 4 47 1 74 1 305 1 283 4 287 1 18 4 173 2 
356 1 120 1 291 1 361 1 100 3 58 1 179 1 335 1 28 1 134 1 296 1 32 1 315 1 138 2 227 2 90 3 89 1 249 1 68 1 69 1 70 1 234 1 115 1 189 1 278 2 326 1 47 1 209 1 281 2 283 1 51 2 18 1 
318 2 204 2 259 4 250 2 301 1 127 2 293 1 153 2 208 1 324 1 146 1 377 1 340 1 173 1 117 4 
253 1 84 1 289 1 
253 1 84 1 289 1 
143 1 239 1 84 1 228 1 289 1 
253 1 84 1 289 1 
84 1 289 1 298 1 
84 1 289 1 298 1 
84 1 289 1 298 1 
84 1 289 1 
246 1 113 1 
356 2 258 1 120 4 68 2 69 2 358 1 274 1 187 1 92 1 238 1 377 1 366 1 81 3 209 2 82 4 281 4 315 8 85 1 212 1 109 2 
120 3 258 1 358 1 274 1 187 1 131 1 92 1 238 1 377 1 81 2 82 3 315 6 85 1 109 2 
356 1 120 2 258 1 68 1 69 1 71 1 81 2 209 1 366 1 82 2 75 1 281 2 315 4 85 1 19 1 36 1 109 1 
258 1 120 4 71 1 251 1 168 1 366 1 81 2 82 3 33 1 75 1 136 2 315 7 85 1 36 1 109 1 
356 2 120 12 258 3 55 1 358 1 103 1 81 9 366 4 33 1 82 11 315 23 136 2 85 3 36 2 109 5 68 2 69 2 274 1 187 2 71 2 92 1 238 2 377 1 168 2 209 2 75 2 281 4 212 2 213 1 
120 1 315 1 136 1 
168 1 82 1 315 1 
356 1 68 1 120 3 258 1 69 1 165 1 71 1 209 1 366 1 81 3 82 3 75 1 281 2 315 6 85 1 19 1 36 1 109 2 
356 1 120 6 258 2 338 1 366 1 81 2 82 6 315 12 136 1 85 2 36 2 109 1 7 1 68 1 319 1 69 1 110 1 71 2 251 1 94 1 168 1 209 1 75 2 241 1 281 2 
258 1 120 3 187 1 92 1 238 1 81 2 366 1 82 3 315 6 85 1 109 1 
356 1 120 2 68 1 69 1 274 1 358 1 187 1 238 1 366 1 81 2 209 1 82 1 281 2 315 3 212 1 213 1 109 1 
120 6 258 2 187 2 92 1 238 2 81 6 366 3 328 1 82 6 315 12 85 2 109 3 
356 1 68 1 69 1 209 1 366 1 81 1 82 2 75 1 281 2 315 2 85 1 7 1 
356 1 120 2 258 1 68 1 69 1 71 1 81 2 209 1 366 1 82 2 75 1 281 2 315 4 85 1 36 1 109 1 7 1 
356 3 120 2 68 3 69 3 187 1 238 1 209 3 81 2 366 1 82 1 281 6 171 1 315 3 212 1 213 1 109 1 7 1 
356 5 120 18 258 5 358 1 342 1 366 5 81 12 82 16 33 1 136 4 315 34 85 5 36 3 109 7 7 1 68 5 69 5 274 1 187 3 205 1 71 3 251 1 92 2 238 3 377 1 209 5 168 3 75 3 281 10 171 1 212 2 191 1 213 1 19 1 
356 1 258 1 120 4 358 1 81 2 82 4 315 8 136 1 85 1 109 2 7 1 68 1 319 1 69 1 274 1 187 1 251 1 92 1 238 1 377 1 168 1 209 1 281 2 
356 2 258 1 120 5 358 1 366 1 81 3 82 6 33 1 315 11 136 2 85 2 36 1 109 2 7 1 68 2 319 1 69 2 274 1 187 1 251 1 92 1 238 1 377 1 209 2 168 1 75 1 281 4 19 1 
356 3 120 10 258 3 358 1 338 1 366 1 81 4 82 9 315 19 136 1 85 3 36 2 109 3 7 1 68 3 319 1 69 3 274 1 110 1 187 1 71 2 251 1 92 1 238 1 377 1 94 1 168 1 209 3 241 1 75 2 281 6 212 1 19 1 
356 3 120 7 258 2 358 1 338 1 366 2 81 5 82 10 315 17 136 1 85 3 36 2 109 3 7 1 68 3 319 1 69 3 274 1 110 1 187 1 71 1 251 1 92 1 238 1 377 1 94 1 168 1 209 3 75 2 241 1 281 6 212 1 19 1 
356 1 258 1 120 4 358 1 81 2 82 4 315 8 136 1 85 1 109 2 7 1 68 1 319 1 69 1 274 1 187 1 251 1 92 1 238 1 377 1 168 1 209 1 281 2 
356 1 120 6 258 2 338 1 366 1 81 2 82 6 315 12 136 1 85 2 36 2 109 1 7 1 68 1 319 1 69 1 110 1 71 2 251 1 94 1 168 1 209 1 75 2 241 1 281 2 
356 4 120 8 258 2 358 1 338 1 366 2 81 5 82 10 315 18 136 1 85 3 36 2 109 3 7 1 68 4 319 1 69 4 274 1 110 1 187 1 71 1 251 1 92 1 238 1 377 1 94 1 209 4 168 1 241 1 75 2 281 8 212 2 19 1 
356 4 120 7 258 2 338 1 366 3 81 6 82 9 315 16 136 1 85 3 36 3 109 3 7 1 68 4 319 1 69 4 110 1 71 2 251 1 94 1 209 4 168 1 241 1 75 3 281 8 171 1 212 2 
120 4 258 1 358 1 274 2 187 3 92 1 238 3 81 6 366 3 82 3 315 7 85 1 109 3 
356 4 120 8 258 2 358 1 338 1 366 1 81 4 82 10 315 18 136 1 85 3 36 2 109 3 7 1 68 4 319 1 69 4 274 1 110 1 187 1 71 1 251 1 92 1 238 1 377 1 94 1 209 4 168 1 241 1 75 2 281 8 171 1 212 2 
90 1 134 1 273 1 51 1 100 1 178 1 112 1 
66 1 90 1 202 1 273 1 112 1 178 1 100 1 134 1 169 1 367 1 51 1 244 1 
189 1 47 1 291 1 32 1 224 1 80 1 283 1 18 1 361 1 335 1 131 1 
90 2 291 1 70 1 100 2 361 1 335 1 278 1 189 1 134 1 47 1 326 1 296 1 32 1 283 1 35 1 51 1 138 1 18 1 
291 1 100 2 335 1 337 1 134 1 296 1 183 1 32 3 35 1 138 2 90 2 70 1 233 1 114 1 189 1 278 1 326 2 47 2 254 1 240 1 283 1 51 2 18 1 
291 1 100 2 335 1 337 1 134 1 183 1 32 3 35 1 86 1 138 2 90 2 70 1 233 1 114 1 189 2 278 1 326 2 47 2 210 1 254 1 240 1 283 2 51 2 18 2 
355 2 291 1 99 2 259 1 361 1 335 1 127 1 128 1 221 1 32 4 184 1 233 1 114 1 189 3 326 1 47 1 210 1 50 1 240 1 283 3 284 1 285 1 18 3 
355 2 291 1 334 1 259 1 99 2 361 1 233 1 127 1 114 1 335 1 128 1 189 3 47 1 326 1 221 1 210 1 32 4 240 1 283 3 284 1 285 1 18 3 
189 1 291 1 283 1 18 1 335 1 130 1 
291 3 320 1 144 1 2 1 361 2 335 2 45 1 130 1 60 1 189 7 166 1 326 1 47 2 32 3 352 1 283 6 172 1 18 7 37 1 270 1 380 1 
291 1 100 2 58 2 335 1 341 1 296 1 109 2 68 2 69 2 70 1 115 2 209 2 18 1 356 2 258 1 120 3 358 1 179 1 314 1 134 2 81 2 32 1 82 3 35 1 315 6 85 1 138 1 140 1 270 1 89 1 90 2 42 1 229 1 274 1 187 1 232 1 92 1 238 1 189 1 278 1 377 1 326 1 47 1 329 1 283 1 281 4 51 1 
355 3 334 1 259 1 99 3 361 1 127 1 293 2 128 1 340 1 221 2 295 1 32 2 63 1 105 1 269 1 204 1 301 2 208 2 189 1 147 1 349 1 283 1 190 1 284 1 285 1 18 1 173 2 308 1 
291 2 335 1 130 1 189 2 166 1 326 1 47 1 32 2 283 2 285 1 18 2 270 1 6 1 
291 1 80 1 361 1 335 1 189 4 47 1 210 1 32 1 368 1 283 4 224 1 18 4 270 1 
291 2 114 1 362 1 335 1 45 1 189 2 104 1 326 1 47 1 32 1 148 1 283 2 18 2 37 1 
189 1 291 1 280 1 255 1 283 1 57 1 18 1 361 1 335 1 141 1 
291 1 2 1 335 1 189 2 47 1 32 1 283 2 172 1 18 2 53 1 270 1 
291 2 320 1 80 1 361 1 2 1 114 1 335 2 189 5 47 2 32 3 368 1 224 1 283 4 352 1 18 5 270 1 
291 2 320 1 80 1 321 1 361 1 2 1 114 1 335 2 189 5 47 2 32 3 368 1 224 1 283 4 18 5 270 1 
90 2 291 1 70 1 100 2 361 1 335 1 278 1 189 1 134 1 47 1 326 1 32 1 283 1 35 1 51 1 86 1 138 1 18 1 
291 2 114 1 335 1 45 1 189 1 166 1 326 1 47 1 32 1 283 1 18 1 37 1 380 1 
134 1 200 1 322 1 188 1 91 1 
355 2 97 1 200 1 259 1 99 2 151 1 322 2 360 1 44 1 127 1 188 2 91 2 337 1 134 1 183 1 254 1 105 1 284 1 96 1 
347 1 200 1 292 1 322 1 188 1 132 1 
200 1 360 1 96 1 
220 1 193 1 9 1 131 1 
175 1 220 1 364 1 193 1 304 1 9 1 316 1 
8 1 242 1 316 1 
175 3 186 1 220 1 364 1 193 1 304 1 9 1 123 2 316 3 95 1 336 1 145 1 
175 2 220 1 364 1 193 1 343 1 304 1 266 1 9 1 316 2 
175 1 186 1 119 1 54 1 364 1 304 1 280 1 9 1 57 1 316 1 323 1 
175 1 186 1 220 1 364 1 304 1 9 1 316 1 
175 1 186 1 220 2 364 1 193 1 304 1 316 1 
175 2 186 1 220 1 48 1 364 2 304 2 9 1 316 2 288 1 158 1 
186 1 175 3 214 1 54 1 193 1 9 2 220 1 364 1 304 1 266 2 316 3 286 1 226 1 
186 1 175 2 119 1 193 1 9 1 57 2 73 1 220 1 364 1 304 1 280 1 255 1 266 1 316 2 139 1 
186 1 175 4 214 1 54 1 193 1 9 2 220 1 364 2 304 2 343 1 351 1 266 2 316 4 
175 1 186 1 220 1 364 1 193 1 304 1 9 1 316 1 
175 4 214 1 54 1 193 2 9 3 123 1 145 1 220 2 364 1 304 1 223 1 266 2 316 4 95 1 
0 1 14 1 175 2 186 1 220 1 364 1 193 1 304 1 266 1 267 1 9 1 316 2 
186 1 175 3 193 1 9 1 123 2 145 2 220 1 364 1 304 1 316 3 95 1 378 1 
252 1 299 2 203 1 9 2 
133 1 175 1 186 1 364 1 304 1 316 1 
175 2 186 1 220 1 364 1 193 1 304 1 266 1 9 1 316 2 226 1 
137 1 
175 1 186 1 220 1 364 1 193 1 304 1 9 1 316 1 
175 3 186 1 220 1 364 1 193 1 304 1 266 1 9 1 123 1 316 3 226 1 
54 1 214 1 223 1 9 1 
220 1 9 1 

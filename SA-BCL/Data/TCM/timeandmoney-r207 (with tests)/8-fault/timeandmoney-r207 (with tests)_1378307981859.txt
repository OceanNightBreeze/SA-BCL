#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 7 121 363 304 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 85 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 45 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1007 | = null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
169 1 297 1 134 1 4 1 240 1 61 1 
169 1 297 1 134 1 4 1 240 1 61 1 
169 1 297 1 134 1 4 1 240 1 61 1 
169 1 297 1 134 1 4 1 240 1 61 1 
169 1 149 3 214 2 158 1 364 1 264 1 352 1 41 1 234 1 175 1 61 1 29 2 112 1 54 1 307 3 4 1 134 4 240 4 
169 1 158 1 40 1 364 1 352 1 41 1 277 1 61 1 205 1 87 1 307 1 280 1 4 1 134 2 89 1 240 2 
8 1 169 2 214 1 149 1 158 1 41 1 61 1 54 1 280 1 307 2 4 2 134 3 240 3 
169 2 149 7 264 1 352 1 25 1 175 1 29 2 54 3 134 9 4 2 8 1 214 4 158 1 39 1 59 1 364 1 41 1 234 1 61 1 342 1 112 1 280 1 307 5 240 9 
169 2 149 7 264 1 352 1 25 1 175 1 29 2 54 3 134 9 4 2 8 1 214 4 158 1 39 1 59 1 364 1 41 1 234 1 61 1 342 1 112 1 280 1 307 5 240 9 
45 1 31 1 88 1 
31 1 124 1 7 2 
316 2 109 2 340 1 247 2 163 2 281 2 116 1 76 2 
349 2 223 1 172 1 22 1 262 1 24 2 174 1 93 1 129 1 247 3 132 1 291 1 5 1 230 2 76 2 316 2 212 1 155 1 159 2 140 1 299 1 300 1 323 1 187 1 109 2 340 1 253 1 190 1 326 1 163 3 192 1 281 2 327 1 116 1 220 1 14 1 239 2 
316 1 109 1 296 1 340 1 247 1 163 1 55 1 319 1 281 1 76 1 
34 1 296 1 272 1 362 1 143 1 11 1 324 1 84 1 247 1 73 1 31 1 163 1 88 1 76 1 
316 1 34 1 296 1 272 2 362 1 143 1 109 1 84 2 247 1 73 1 31 1 163 1 281 1 88 1 76 1 
84 1 272 1 9 1 30 1 270 1 
84 2 272 2 31 1 9 1 88 1 336 1 270 1 71 1 
84 1 272 1 9 1 
316 1 296 1 272 1 224 1 319 1 109 1 340 1 84 1 247 1 163 1 55 1 281 1 270 1 76 1 
31 1 
302 1 84 2 272 2 31 1 9 1 88 1 336 1 270 1 
351 1 272 5 171 1 9 2 275 1 298 2 184 2 145 1 95 1 84 5 31 1 266 1 3 1 211 1 282 1 88 1 336 1 270 2 293 2 
316 1 212 1 155 1 223 1 22 1 172 1 104 1 159 1 202 1 174 1 93 1 187 1 109 1 253 1 247 2 367 1 163 2 230 1 239 1 76 1 
45 1 116 1 
316 1 139 1 200 1 109 1 247 2 163 2 281 1 116 2 76 2 
21 1 104 1 48 1 
212 1 155 1 223 1 172 1 22 1 159 1 174 1 93 1 187 1 253 1 247 1 305 1 163 1 116 1 230 1 239 1 
316 4 200 1 202 2 60 1 320 1 324 1 109 4 247 5 163 5 367 1 281 1 116 1 76 5 295 1 
196 1 316 2 109 2 296 1 247 2 163 2 55 1 76 2 
316 3 109 3 247 3 163 3 281 1 202 1 116 1 76 3 
316 1 109 1 296 1 247 1 163 1 55 1 76 1 
316 1 109 1 296 1 247 1 163 1 139 1 200 1 281 1 76 1 
349 1 223 1 22 1 172 1 262 1 24 2 200 1 202 1 174 1 93 1 204 1 247 4 73 1 132 1 5 1 230 1 76 3 316 3 34 1 212 1 155 1 296 1 272 1 362 1 159 1 299 1 143 1 300 1 365 1 187 1 109 3 340 1 253 1 84 1 326 1 163 4 367 1 192 1 281 2 327 1 116 1 220 1 14 1 239 1 
324 1 316 1 109 1 247 2 163 2 202 1 116 1 60 1 76 2 
316 3 34 1 296 1 272 1 362 1 200 1 202 2 143 1 204 1 109 3 84 1 247 3 73 1 31 1 46 1 367 1 163 3 281 1 76 3 
316 2 104 1 200 1 202 1 109 2 247 2 163 2 281 1 48 1 76 2 
212 1 155 1 223 1 172 1 22 1 159 1 174 1 93 1 187 1 253 1 247 1 163 1 116 1 230 1 239 1 
212 1 155 1 172 1 22 1 159 1 174 1 93 1 187 1 247 1 189 1 163 1 267 1 116 1 230 1 239 1 
349 4 241 1 21 2 262 1 24 2 68 1 92 1 289 1 130 1 207 1 132 1 5 1 6 1 338 1 232 1 104 2 140 2 299 1 300 2 107 1 326 1 48 2 49 1 14 1 
34 1 316 1 196 1 109 1 296 1 247 1 163 1 76 1 
237 1 315 1 
237 1 315 1 
167 1 321 1 
167 1 321 1 
167 1 321 1 
237 1 315 1 77 1 
330 1 237 2 315 2 167 1 321 1 26 1 
225 1 237 1 315 1 
237 1 315 1 77 1 
237 1 315 1 77 1 
237 1 268 1 315 1 
237 1 268 1 315 1 
237 1 268 1 315 1 
225 1 247 2 131 1 315 1 101 1 179 1 337 1 76 2 316 2 249 1 231 1 272 1 361 1 103 1 109 2 84 1 12 1 343 1 163 2 164 1 237 1 345 1 116 1 120 1 
260 1 249 3 272 2 361 2 330 1 341 1 84 2 334 1 98 1 31 1 343 2 164 1 345 2 237 2 315 2 337 2 136 2 328 1 258 1 
112 1 364 1 352 1 
364 1 352 1 277 1 
112 2 137 1 123 1 352 3 277 1 91 1 
0 1 112 1 123 1 352 2 277 1 91 1 
112 1 123 2 352 2 277 1 91 1 
19 1 351 1 241 1 124 1 309 1 227 1 95 2 130 1 131 1 207 1 206 2 31 2 292 2 211 3 179 1 293 1 336 1 270 4 6 1 7 3 317 1 272 5 9 1 298 1 184 1 144 1 146 2 252 1 278 1 84 5 12 1 88 1 
19 2 351 1 241 2 124 2 309 2 95 4 130 2 266 1 207 2 30 4 31 4 209 1 292 4 211 6 179 4 270 6 336 1 293 2 6 2 7 6 317 1 272 8 9 5 233 4 298 2 184 2 144 2 146 4 84 8 366 1 191 1 88 1 238 1 195 1 118 1 
19 1 241 1 124 2 309 1 227 1 95 2 130 1 207 1 31 3 266 1 206 1 211 3 292 2 179 1 270 2 293 1 6 1 7 4 272 3 298 1 184 1 144 1 146 2 278 1 84 3 88 1 
19 1 241 1 124 2 309 1 227 1 95 2 130 1 207 1 31 2 266 1 206 1 209 1 292 2 211 3 179 2 293 1 270 2 6 1 7 4 272 3 298 1 184 1 144 1 146 2 278 1 84 3 191 1 238 1 
45 1 106 1 174 1 
246 1 174 1 
27 1 
212 1 174 1 93 1 
210 1 174 1 
212 1 174 1 
212 1 102 1 44 1 106 2 174 3 93 1 
338 3 349 7 329 1 308 1 140 4 300 3 226 1 127 1 311 1 289 2 207 1 99 1 256 1 360 1 6 1 15 1 58 2 
338 3 349 7 329 1 308 1 140 4 300 3 226 1 127 1 311 1 289 2 207 1 99 1 256 1 360 1 6 1 15 1 58 2 
338 3 197 1 349 7 329 1 308 1 140 4 300 3 226 1 127 1 311 1 289 2 207 1 99 1 256 1 360 1 6 1 15 1 58 2 
19 3 17 1 349 31 241 3 329 2 262 1 308 5 24 2 226 2 127 1 311 2 289 5 130 3 207 4 132 1 99 2 208 1 269 4 360 1 6 4 78 1 58 3 338 10 157 1 318 1 81 1 140 16 300 15 113 3 326 1 256 1 166 1 14 1 15 1 
349 9 329 1 262 2 308 1 24 4 226 1 127 1 311 1 289 3 207 1 132 2 208 1 99 1 360 1 6 1 58 2 338 4 140 5 339 1 300 4 344 1 326 2 14 2 15 1 
169 1 149 1 263 1 243 1 352 2 355 1 358 1 134 2 4 1 230 1 57 1 35 1 155 1 137 1 158 1 159 1 364 1 141 1 41 1 277 1 61 1 187 1 112 1 115 1 307 1 280 1 165 1 239 1 259 1 240 2 
169 1 149 2 243 1 352 2 152 1 355 1 358 1 134 3 4 1 230 1 57 1 35 1 155 1 137 1 158 1 105 1 159 1 364 1 41 1 277 1 187 1 112 1 254 1 115 1 307 1 280 1 165 1 239 1 259 1 240 3 
149 2 243 1 352 2 152 1 355 1 134 2 230 1 57 1 35 1 155 1 137 1 158 1 159 1 364 1 41 1 277 1 187 1 254 1 112 1 115 1 307 1 280 1 239 1 259 1 240 2 
18 1 169 1 172 1 285 1 151 1 51 1 174 2 93 1 153 1 357 1 133 1 134 1 4 1 230 1 294 1 79 1 35 2 212 2 155 2 105 1 159 1 276 1 187 1 255 1 115 2 280 2 236 1 239 1 259 2 240 1 
169 1 263 1 243 1 352 2 355 1 358 1 134 1 4 1 230 1 57 1 35 1 155 1 137 1 159 1 364 1 277 1 61 1 187 1 112 1 254 1 115 1 280 1 165 1 239 1 259 1 240 1 
53 1 
18 1 351 1 172 2 51 1 174 2 93 1 153 1 95 1 72 1 357 1 211 1 133 1 230 2 293 1 336 1 212 2 155 2 213 1 272 2 9 2 159 2 298 1 184 1 144 1 187 1 84 2 236 1 147 1 239 2 
284 1 332 1 312 2 333 1 247 1 73 1 336 1 76 1 34 1 296 1 272 3 9 2 362 1 143 1 11 1 186 1 324 1 302 1 188 1 84 3 163 1 325 1 
332 1 312 3 333 1 247 1 73 1 31 1 336 1 76 1 34 1 296 1 272 3 9 1 362 1 82 1 143 1 11 1 186 1 324 1 302 1 188 1 84 3 163 1 325 1 88 1 
284 1 332 1 312 3 333 1 247 1 73 1 31 1 336 1 76 1 34 1 296 1 272 3 251 1 9 2 362 1 82 1 143 1 11 1 186 1 302 1 324 1 188 1 84 3 163 1 325 1 88 1 
284 4 332 1 95 1 333 1 247 1 211 1 336 3 293 1 296 1 251 4 9 7 298 1 216 1 11 1 108 1 302 1 163 1 257 2 121 1 351 1 67 2 261 1 173 1 124 2 312 6 73 1 31 5 76 1 34 1 272 5 362 1 363 1 82 4 184 1 143 1 235 2 186 1 322 1 324 1 188 1 84 5 325 1 193 2 88 5 
50 1 284 2 332 1 95 1 333 1 247 1 211 1 293 1 336 2 7 2 296 1 251 2 9 4 298 1 216 1 11 1 163 1 257 2 121 1 351 1 67 2 124 2 312 4 73 1 31 2 76 1 34 1 272 4 362 1 184 1 82 2 143 1 235 2 186 1 324 1 188 1 84 4 325 1 193 2 88 1 
121 1 351 1 67 2 284 2 124 2 332 1 173 1 95 1 312 4 333 1 247 1 73 1 31 1 211 1 336 2 293 1 76 1 34 1 296 1 251 2 272 4 9 4 362 1 298 1 363 1 216 1 82 2 184 1 143 1 235 2 11 1 186 1 322 1 324 1 188 1 84 4 163 1 325 1 193 2 88 1 257 2 
121 1 351 1 67 2 284 2 124 2 332 1 173 1 95 1 312 4 333 1 247 1 73 1 31 1 211 1 336 2 293 1 76 1 34 1 296 1 251 2 272 4 9 4 362 1 298 1 363 1 216 1 82 2 184 1 143 1 235 2 11 1 186 1 322 1 324 1 188 1 84 4 163 1 325 1 193 2 88 1 257 2 
121 1 351 1 332 1 95 1 288 1 312 2 333 1 247 1 73 1 33 1 211 1 293 1 76 1 7 1 34 1 296 1 272 2 362 1 298 1 363 1 184 1 143 1 235 1 11 1 186 1 324 1 188 1 84 2 304 1 163 1 325 1 193 1 63 1 
121 1 351 1 67 2 261 1 284 3 124 2 173 1 332 1 95 1 312 5 333 1 247 1 73 1 31 1 211 1 336 2 293 1 76 1 34 1 296 1 272 4 251 3 9 5 362 1 298 1 363 1 216 1 184 1 82 3 143 1 235 2 11 1 186 1 322 1 324 1 188 1 84 4 163 1 325 1 193 2 88 1 257 2 
121 1 351 1 67 2 261 1 284 3 124 2 173 1 332 1 95 1 312 5 333 1 247 1 73 1 31 1 211 1 336 2 293 1 76 1 34 1 296 1 272 4 251 3 9 5 362 1 298 1 363 1 216 1 184 1 82 3 143 1 235 2 11 1 186 1 322 1 324 1 188 1 84 4 163 1 325 1 193 2 88 1 257 2 
50 1 1 2 284 2 332 1 95 1 288 1 333 1 247 1 211 1 293 1 336 2 7 2 296 1 251 2 9 4 298 1 11 1 163 1 121 1 351 1 312 4 73 1 31 1 33 2 76 1 34 1 272 4 362 1 184 1 82 2 143 1 235 2 186 1 324 1 188 1 84 4 325 1 193 2 88 1 
349 6 329 1 21 1 262 1 24 2 68 1 127 1 289 2 207 1 132 1 99 1 5 1 360 1 6 1 58 1 338 2 104 1 299 1 140 3 300 3 45 1 326 1 48 1 116 2 14 1 15 1 
19 2 350 1 349 14 222 1 241 1 21 11 262 2 308 1 24 4 28 1 289 1 130 2 207 1 132 2 269 3 5 1 6 2 78 1 338 2 138 1 104 11 81 1 299 2 140 8 300 6 113 3 190 1 326 2 48 4 116 1 220 1 194 1 14 2 
349 2 223 1 22 1 172 1 262 1 24 2 202 1 174 1 93 1 28 1 247 2 132 1 230 1 5 1 76 1 316 1 212 1 155 1 159 1 160 1 299 1 140 1 300 1 187 1 109 1 253 1 305 1 190 1 163 2 367 1 326 1 218 1 279 1 48 1 116 1 220 1 239 1 14 1 
316 1 349 1 172 1 262 1 159 1 24 2 202 1 299 1 300 1 109 1 28 1 85 1 247 1 326 1 132 1 367 1 163 1 220 1 230 1 5 1 239 1 14 1 76 1 
18 1 349 2 172 1 262 1 24 2 51 1 174 2 93 1 153 1 357 1 132 1 133 1 229 1 230 2 5 1 212 2 155 2 159 2 299 1 140 1 217 1 300 1 323 1 187 1 190 1 326 1 236 1 220 1 239 2 14 1 
19 1 349 3 241 1 21 1 262 1 200 1 24 2 28 1 289 1 247 1 130 1 207 1 132 1 5 1 76 1 6 1 316 1 338 1 104 1 299 1 140 1 161 1 300 2 109 1 326 1 163 1 281 1 48 1 14 1 
338 1 349 2 21 1 104 1 262 1 308 1 24 2 299 1 140 2 68 1 92 1 130 1 132 1 326 1 48 1 5 1 14 1 6 1 
338 1 349 2 241 1 21 1 104 1 262 1 24 2 299 1 68 1 300 2 289 1 207 1 132 1 326 1 48 1 5 1 49 1 14 1 
19 1 349 4 241 1 21 2 262 1 308 1 24 2 68 1 289 1 130 1 207 1 132 1 5 1 6 1 338 2 104 2 140 2 299 1 300 2 326 1 48 2 14 1 
338 1 349 2 21 1 104 1 262 1 308 1 24 2 299 1 140 2 217 1 92 1 130 1 132 1 326 1 48 1 5 1 14 1 6 1 
338 1 349 2 241 1 21 1 104 1 262 1 24 2 299 1 217 1 300 2 289 1 207 1 132 1 326 1 48 1 5 1 49 1 14 1 
19 1 349 4 241 1 21 2 262 1 308 1 24 2 289 1 130 1 207 1 132 1 5 1 6 1 338 2 104 2 140 2 299 1 217 1 300 2 326 1 48 2 14 1 
19 1 349 4 241 1 21 2 262 1 308 1 24 2 289 1 130 1 207 1 132 1 5 1 6 1 338 2 104 2 140 2 299 1 300 2 326 1 48 2 14 1 
349 2 223 1 22 1 172 1 262 1 24 2 174 1 93 1 247 1 132 1 230 1 5 1 212 1 155 1 159 1 140 1 299 1 300 1 187 1 253 1 190 1 163 1 326 1 327 1 116 1 220 1 239 1 14 1 
349 2 22 1 172 1 262 1 24 2 174 1 93 1 247 1 267 1 132 1 230 1 5 1 212 1 155 1 159 1 140 1 299 1 300 1 187 1 111 1 189 1 190 1 163 1 326 1 116 1 220 1 239 1 14 1 
19 1 349 4 241 1 21 2 262 1 308 1 24 2 28 1 289 1 130 1 207 1 132 1 5 1 6 1 338 2 104 2 140 2 299 1 300 2 326 1 48 2 14 1 
19 1 349 4 241 1 223 1 21 2 22 1 23 1 262 1 308 1 24 2 174 1 93 1 289 1 247 1 130 1 207 1 132 1 230 1 5 1 6 1 212 1 338 2 155 1 104 2 159 1 140 2 299 1 141 1 300 2 187 1 253 1 163 1 326 1 327 1 48 2 239 1 14 1 
19 1 349 3 241 1 21 1 262 1 308 1 200 1 24 2 28 1 247 1 130 1 207 1 132 1 154 1 5 1 76 1 6 1 316 1 338 1 104 1 299 1 140 2 300 1 109 1 326 1 163 1 281 1 48 1 14 1 
19 4 349 41 148 1 241 4 329 1 122 1 262 3 308 4 24 6 126 1 286 1 127 1 52 1 310 1 287 1 289 4 74 2 130 4 207 5 132 3 99 1 208 1 135 1 269 4 360 1 6 5 58 1 78 3 156 1 338 8 182 1 38 1 273 1 81 1 140 20 339 1 300 21 110 4 113 3 326 3 47 1 14 3 15 1 
19 4 349 38 148 1 241 3 329 1 122 1 262 4 308 3 24 8 126 1 286 1 127 1 52 1 310 1 287 1 289 4 74 2 130 4 207 4 132 4 99 1 208 2 135 1 269 4 360 1 6 5 58 1 78 3 156 1 338 7 182 1 38 1 273 1 81 1 140 20 339 1 300 18 110 4 113 3 326 4 47 1 14 4 15 1 
19 7 349 52 148 1 241 7 329 1 122 1 262 2 308 7 24 4 126 1 127 1 52 1 310 1 287 1 289 7 74 1 130 7 207 8 132 2 99 1 208 1 135 1 269 4 360 1 6 8 58 1 78 2 338 14 182 1 38 1 138 2 273 1 81 2 140 27 339 1 300 25 110 4 113 4 326 2 47 1 14 2 15 1 
19 3 349 19 148 1 241 3 262 2 308 3 24 4 126 1 286 1 310 1 245 1 289 3 74 1 130 3 207 3 132 2 269 2 6 3 78 1 338 6 273 2 81 1 140 9 339 1 300 10 110 2 113 1 326 2 47 1 14 2 
19 3 349 26 148 1 241 2 122 1 262 3 308 2 24 6 126 2 52 1 310 1 287 1 289 2 74 2 130 3 207 2 132 3 208 2 135 1 269 2 6 3 78 2 338 4 182 1 38 1 273 1 140 14 300 12 339 1 110 4 113 2 326 3 47 1 14 3 
349 2 198 1 262 1 201 1 24 2 2 1 174 1 28 1 247 2 132 1 229 1 5 1 230 2 76 2 212 1 155 1 183 1 159 2 299 1 140 1 185 1 300 1 323 2 187 1 86 1 190 1 163 2 326 1 220 1 239 2 14 1 
155 1 170 1 137 1 159 2 364 1 141 1 352 2 277 1 125 1 187 1 355 1 112 1 254 1 115 1 358 1 230 2 239 2 119 1 57 1 
170 1 155 1 137 1 159 1 364 1 352 2 277 1 187 1 355 1 112 1 254 1 115 1 56 1 358 1 230 1 239 1 57 1 
18 1 172 1 151 1 51 1 174 2 93 1 153 1 357 1 133 1 230 1 212 2 155 2 276 1 159 1 187 1 115 1 236 1 219 1 239 1 119 1 
155 1 170 1 137 1 159 1 364 1 352 2 277 1 125 1 187 1 355 1 112 1 254 1 115 1 358 1 230 1 239 1 119 1 57 1 
271 1 
95 1 45 1 31 1 275 1 211 1 88 1 145 1 
351 1 67 1 124 1 95 1 31 2 211 1 293 1 336 1 7 1 272 1 9 1 298 1 216 1 184 1 84 1 88 1 257 1 
283 1 241 2 93 3 203 2 95 8 97 1 246 3 207 2 335 2 210 2 211 9 292 6 293 4 336 3 6 2 7 12 212 3 155 4 213 1 215 2 9 5 298 4 159 3 106 2 162 2 62 2 64 2 19 2 351 4 172 1 124 6 176 2 174 10 128 2 73 2 130 2 31 8 75 1 178 1 230 3 181 1 37 2 272 5 275 1 141 1 184 4 144 2 145 1 146 6 187 3 44 1 84 5 88 2 239 3 
19 2 351 2 241 2 122 1 124 3 52 1 95 5 130 2 31 5 207 2 292 5 211 8 135 1 336 1 269 1 293 2 6 2 7 6 78 1 213 1 37 1 182 1 38 1 272 1 215 2 9 1 298 2 184 2 144 1 146 5 303 1 84 1 113 1 306 1 88 2 
351 1 329 1 224 1 173 1 95 2 247 1 207 1 55 1 99 1 211 2 180 1 293 1 360 1 6 2 76 1 316 1 296 1 37 1 272 1 215 2 298 1 319 1 184 1 109 1 340 1 84 1 163 1 281 1 
351 1 275 1 298 1 184 1 145 1 95 1 31 1 211 1 88 1 293 1 
19 2 37 1 241 2 215 2 124 5 146 5 95 5 130 2 31 5 207 2 335 1 292 5 211 5 6 2 7 10 
84 1 272 1 31 1 9 1 88 1 336 1 
18 1 351 1 172 2 51 1 174 2 93 1 153 1 95 1 72 1 357 1 211 1 133 1 293 1 230 2 336 1 181 1 212 2 155 2 213 1 272 1 9 2 298 1 159 2 184 1 144 1 187 1 84 1 236 1 147 1 239 2 
349 1 223 1 172 1 22 1 262 1 24 2 174 1 93 1 247 3 132 1 230 1 5 1 76 2 316 2 212 1 155 1 159 1 299 1 300 1 187 1 109 2 340 1 253 1 326 1 163 3 192 1 281 2 327 1 116 1 220 1 239 1 14 1 
351 1 213 1 298 1 184 1 124 2 144 1 146 2 95 2 31 4 292 2 211 1 88 2 293 1 58 1 7 4 
361 1 228 1 343 1 
231 1 361 1 98 1 343 1 69 1 
361 1 228 1 343 1 
361 1 228 1 343 1 
96 1 361 1 343 1 
96 1 361 1 343 1 
96 1 361 1 343 1 
361 1 343 1 
237 1 315 1 
349 8 329 1 262 1 24 2 127 1 289 2 207 1 132 1 99 1 269 1 360 1 6 1 58 1 78 1 338 2 182 1 140 4 300 4 339 1 113 1 326 1 14 1 15 1 
19 1 349 11 329 1 262 2 308 1 24 4 127 1 244 1 289 2 130 1 207 1 132 2 99 1 269 2 360 1 6 2 58 1 78 1 338 3 182 1 81 1 140 6 300 5 339 1 113 1 326 2 14 2 15 1 
19 2 349 19 241 2 329 1 122 1 262 3 308 1 24 6 127 1 52 1 244 1 289 3 130 2 207 3 132 3 99 1 208 1 135 1 269 1 360 1 6 3 58 1 78 1 338 4 182 1 38 1 140 9 300 10 339 1 113 1 326 3 14 3 15 1 
19 2 349 17 241 1 329 1 262 3 122 1 308 2 24 6 127 1 52 1 244 1 289 3 130 2 207 2 132 3 99 1 208 1 135 1 269 1 360 1 6 3 58 1 78 1 338 5 182 1 38 1 140 10 300 7 339 1 113 1 326 3 14 3 15 1 
349 8 329 1 262 1 24 2 127 1 289 2 207 1 132 1 99 1 269 1 360 1 6 1 58 1 78 1 338 2 182 1 140 4 300 4 339 1 113 1 326 1 14 1 15 1 
19 2 349 12 241 2 262 1 122 1 308 1 24 2 52 1 289 1 130 2 207 2 132 1 135 1 269 1 6 2 78 1 338 2 182 1 38 1 140 6 300 6 339 1 113 1 326 1 14 1 
19 2 349 18 241 1 329 1 122 1 262 4 308 2 24 8 127 1 52 1 244 1 289 3 130 2 207 2 132 4 99 1 208 2 135 1 269 1 360 1 6 3 58 1 78 1 338 5 182 1 38 1 140 10 300 8 339 1 113 1 326 4 14 4 15 1 
19 3 349 16 241 2 122 1 262 4 308 3 24 8 286 1 52 1 289 3 130 3 207 2 132 4 208 2 135 1 269 1 6 3 78 1 338 6 182 1 38 1 140 9 300 7 339 1 113 1 326 4 14 4 
349 7 338 6 329 3 308 3 140 3 300 4 127 1 289 3 207 1 99 3 360 1 15 2 6 1 
19 2 349 18 241 1 329 1 122 1 262 4 308 1 24 8 127 1 286 1 52 1 289 3 130 2 207 2 132 4 99 1 208 2 135 1 269 1 360 1 6 3 58 1 78 1 338 4 182 1 38 1 140 10 300 8 339 1 113 1 326 4 14 4 15 1 
349 8 338 3 329 1 262 2 308 1 24 4 140 4 300 4 127 1 289 2 207 1 132 2 326 2 208 1 99 1 360 1 14 2 6 1 15 1 58 1 
338 2 349 6 329 1 140 3 300 3 127 1 45 1 289 2 207 1 99 1 360 1 15 1 6 1 58 1 
19 1 338 2 349 4 241 1 262 1 308 1 24 2 140 2 300 2 244 1 289 1 130 1 207 1 132 1 326 1 14 1 6 1 
19 1 349 7 338 2 241 1 308 1 81 1 140 3 300 4 289 1 113 1 130 1 207 1 269 2 6 1 78 1 
19 2 349 23 222 1 241 2 329 2 262 2 308 4 24 4 127 1 289 5 130 2 207 3 132 2 99 2 208 2 32 1 269 2 360 1 6 3 58 1 338 9 138 1 81 1 140 11 300 12 113 2 326 2 14 2 15 1 
349 1 269 1 300 1 
349 1 113 1 140 1 
19 1 349 6 338 3 241 1 262 1 308 1 24 2 140 3 300 3 244 1 289 2 130 1 207 1 326 1 132 1 335 1 14 1 6 1 
19 2 349 12 241 2 262 1 122 1 308 1 24 2 52 1 289 1 130 2 207 2 132 1 135 1 269 1 6 2 78 1 338 2 182 1 38 1 140 6 300 6 339 1 113 1 326 1 14 1 
349 6 338 2 329 1 308 1 140 3 300 3 289 1 207 1 99 1 360 1 6 1 
338 2 349 3 329 1 262 1 308 1 24 2 140 1 300 2 127 1 289 1 132 1 326 1 99 1 208 1 32 1 14 1 15 1 
338 5 349 10 329 2 262 1 308 2 24 2 140 5 339 1 300 5 289 3 207 2 326 1 132 1 99 2 180 1 14 1 360 1 6 2 
349 2 338 1 262 1 308 1 24 2 140 2 339 1 130 1 132 1 326 1 14 1 6 1 
19 1 338 2 349 4 241 1 262 1 308 1 24 2 140 2 300 2 339 1 289 1 130 1 207 1 132 1 326 1 14 1 6 1 
349 3 338 2 329 1 262 3 308 1 24 6 140 1 300 2 339 1 286 1 289 1 132 3 326 3 208 1 99 1 32 1 14 3 
17 1 19 3 349 34 241 3 329 3 262 5 308 5 24 10 127 1 286 1 244 1 289 7 130 3 207 5 132 5 99 3 208 2 32 1 269 4 360 2 6 5 58 1 78 1 157 1 338 12 81 1 140 16 300 18 339 1 113 3 326 5 166 1 14 5 15 1 
324 1 247 1 199 1 163 1 116 1 60 1 76 1 
36 1 80 1 199 1 60 1 353 1 83 1 324 1 247 1 163 1 116 1 117 1 76 1 
212 1 45 1 172 1 159 1 236 1 133 1 230 1 239 1 174 1 
316 1 212 1 155 1 22 1 172 1 159 1 202 1 174 1 93 1 187 1 109 1 253 1 247 2 163 2 116 1 230 1 239 1 76 1 
283 1 22 1 202 1 174 3 93 2 247 2 210 1 230 1 76 2 316 2 34 1 212 2 155 1 296 1 362 1 159 1 62 1 187 1 109 1 253 1 163 2 116 1 239 1 
283 1 22 1 150 1 202 1 174 3 93 2 247 2 267 1 210 1 230 2 76 2 316 2 34 1 212 2 155 1 296 1 362 1 159 2 62 1 187 1 109 1 163 2 116 1 239 2 
283 1 172 1 150 1 174 4 93 1 246 1 73 1 31 1 210 1 230 3 212 1 155 1 272 2 9 1 274 1 106 1 159 3 62 1 187 1 84 2 88 1 346 1 239 3 
212 1 155 1 283 1 272 2 172 1 9 1 150 1 159 3 106 1 162 1 174 4 93 1 62 1 187 1 84 2 246 1 73 1 31 1 210 1 88 1 230 3 239 3 
187 1 354 1 155 1 159 1 230 1 239 1 
212 2 155 3 183 1 172 2 159 7 10 1 141 1 174 3 323 1 93 1 42 1 153 1 187 2 354 1 313 1 44 1 254 1 248 1 357 1 230 6 239 7 
349 6 198 1 223 1 21 1 329 1 22 1 262 2 23 1 24 4 202 1 127 1 174 1 93 1 28 1 356 1 289 2 247 2 207 1 132 2 99 1 5 2 230 1 360 1 6 1 76 1 58 1 316 1 212 1 338 2 155 1 104 1 159 1 140 3 299 2 141 1 300 3 187 1 109 1 253 1 163 2 326 2 327 1 48 1 116 2 14 2 239 1 15 1 
351 2 172 1 176 1 174 2 95 1 128 1 246 1 73 1 31 1 211 1 230 1 293 2 270 1 336 1 181 1 272 3 9 2 275 1 159 1 298 2 106 1 184 2 162 1 145 1 84 3 88 1 64 1 239 1 
212 1 155 2 106 1 159 2 141 1 174 2 93 1 187 1 354 1 44 1 178 1 230 2 239 2 
18 1 212 2 155 2 172 1 159 2 141 1 51 1 174 2 93 1 153 1 187 1 357 1 133 1 236 1 230 2 239 2 
168 1 18 1 212 1 283 1 155 2 159 2 51 1 174 1 93 1 153 1 187 1 357 1 230 2 239 2 
187 1 355 1 155 1 172 1 159 1 364 1 352 1 277 1 230 1 239 1 
212 1 155 1 183 1 159 2 141 1 2 1 174 1 187 1 254 1 230 2 239 2 
18 1 172 1 51 1 174 4 93 1 153 1 248 1 357 1 133 1 230 2 212 3 155 3 183 1 159 3 141 1 42 1 187 2 236 1 239 3 
18 1 172 1 51 1 174 4 93 1 153 1 265 1 357 1 133 1 230 2 212 3 155 3 183 1 159 3 141 1 42 1 187 2 236 1 239 3 
316 1 212 1 155 1 22 1 172 1 159 1 202 1 174 1 93 1 187 1 109 1 247 2 163 2 267 1 116 1 230 1 239 1 76 1 
212 1 283 1 155 2 159 1 10 1 174 1 93 1 153 1 187 1 44 1 357 1 230 1 239 1 
94 1 177 1 116 1 65 1 301 1 
34 1 347 1 296 1 272 2 362 1 90 1 143 1 301 2 204 1 94 1 43 1 84 2 73 1 31 1 177 2 88 1 116 1 270 1 65 2 
201 1 185 1 301 1 94 1 86 1 247 1 177 1 163 1 76 1 
347 1 94 1 43 1 
45 1 158 1 307 1 41 1 
169 1 158 1 307 1 134 1 4 1 41 1 240 1 
280 1 134 1 259 1 
348 1 169 1 114 1 158 1 40 2 307 1 13 1 134 3 4 1 41 1 240 3 61 1 
29 1 169 1 149 1 158 1 307 1 134 2 4 1 41 1 240 2 
169 1 214 1 112 1 364 1 307 1 264 1 352 1 134 1 4 1 240 1 61 1 
169 1 307 1 134 1 4 1 41 1 240 1 61 1 
169 1 158 1 134 1 4 1 41 2 240 1 61 1 
250 1 66 1 169 2 242 1 307 1 134 2 4 2 41 1 240 2 61 1 
169 1 149 2 214 1 158 1 59 1 41 1 61 1 342 1 54 1 307 2 4 1 134 3 240 3 
169 1 149 1 137 1 158 1 331 1 364 1 352 2 41 1 277 1 61 1 112 1 307 1 4 1 134 2 240 2 
169 2 149 2 214 1 158 1 41 1 175 1 61 1 29 1 54 1 307 2 4 2 134 4 240 4 
169 1 158 1 307 1 134 1 4 1 41 1 240 1 61 1 
169 1 149 2 214 1 158 2 40 1 41 2 290 1 114 1 54 1 307 3 13 1 134 4 4 1 240 4 
169 1 149 1 158 1 39 1 314 1 307 1 142 1 134 2 4 1 41 1 240 2 61 1 
169 1 158 1 40 2 41 1 61 1 114 2 307 1 100 1 13 1 4 1 134 3 240 3 
16 1 307 2 359 2 70 1 
20 1 169 1 134 1 4 1 240 1 61 1 
169 1 149 1 342 1 158 1 307 1 134 2 4 1 41 1 240 2 61 1 
221 1 
169 1 158 1 307 1 134 1 4 1 41 1 240 1 61 1 
169 1 149 1 342 1 158 1 40 1 307 1 134 3 4 1 41 1 240 3 61 1 
214 1 290 1 54 1 307 1 
307 1 41 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 104 (261,349,372) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 296 99 119 181 356 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 296 99 119 181 356 157 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 296 99 119 181 356 157 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 296 99 119 181 356 157 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 296 99 119 181 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 296 99 119 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 296 99 119 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 296 99 119 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 296 99 119 181 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 296 99 119 181 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 296 99 119 181 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
170 1 365 2 307 1 114 1 313 1 205 1 280 3 265 1 43 1 44 1 266 6 17 1 374 9 328 2 182 2 126 1 291 2 73 2 90 1 251 1 188 9 359 5 339 2 77 2 302 1 109 1 304 1 30 4 
170 1 365 2 307 1 114 1 313 1 205 1 280 3 265 1 43 1 44 1 266 6 17 1 374 9 328 2 182 2 126 1 291 2 73 2 90 1 251 1 188 9 359 5 77 2 339 2 302 1 109 1 304 1 30 4 
170 1 365 2 307 1 114 1 313 1 205 1 280 4 265 1 43 1 44 1 266 7 17 1 374 10 328 2 182 2 126 1 291 2 73 2 90 1 251 1 188 10 359 6 77 2 339 2 302 1 109 1 304 1 30 5 
170 1 365 2 307 1 114 1 313 1 205 1 280 2 265 1 43 1 44 1 266 4 17 1 374 7 328 2 182 2 126 1 291 2 73 2 90 1 251 1 188 7 359 4 77 2 339 1 302 1 304 1 30 3 
266 3 17 1 170 1 365 1 374 4 328 1 182 1 73 1 90 1 188 4 280 1 205 1 359 3 77 1 339 2 302 1 109 1 30 2 
17 1 113 1 114 1 374 2 328 1 182 1 231 1 291 1 73 1 90 1 188 2 359 1 77 1 302 1 66 1 44 1 
266 1 17 1 374 3 328 2 182 2 291 1 90 1 188 3 280 1 359 2 302 1 43 1 30 1 
170 1 365 1 59 1 234 1 280 3 205 1 265 1 43 1 266 7 17 1 374 9 328 2 182 2 126 1 291 1 73 1 90 1 188 9 359 5 339 2 77 1 302 1 109 1 30 4 
170 1 365 1 59 1 234 1 280 3 205 1 265 1 43 1 266 7 17 1 374 9 328 2 182 2 126 1 291 1 73 1 90 1 188 9 359 5 339 2 77 1 302 1 109 1 30 4 
34 1 58 1 341 1 
332 2 370 1 341 1 
364 2 333 2 336 2 91 1 318 2 360 2 269 2 121 1 
227 2 364 2 273 1 308 1 172 1 309 1 133 1 262 1 235 1 177 1 369 2 103 1 318 3 120 1 12 1 121 1 156 2 123 1 45 1 268 1 289 1 143 1 245 1 162 1 269 2 330 1 24 1 250 1 333 2 336 3 224 1 91 1 76 2 360 2 340 2 29 1 169 1 
364 1 333 1 336 1 159 1 318 1 360 1 239 1 269 1 121 1 61 1 
257 1 274 1 34 1 277 1 310 1 219 1 220 1 333 1 49 1 336 1 318 1 239 1 212 1 341 1 
364 1 257 2 34 1 277 1 310 1 269 1 219 1 220 1 333 1 336 1 360 1 318 1 239 1 212 2 341 1 
55 1 257 1 259 1 218 1 212 1 
55 1 272 1 257 2 34 1 158 1 259 1 212 2 341 1 
55 1 257 1 212 1 
364 1 257 1 159 1 259 1 89 1 269 1 61 1 333 1 336 1 360 1 318 1 239 1 212 1 121 1 
341 1 
55 1 272 1 257 2 47 1 34 1 259 1 212 2 341 1 
105 2 272 1 257 5 180 1 55 2 97 1 34 1 259 2 107 1 161 2 252 1 25 1 204 1 337 1 128 2 154 1 212 5 341 1 168 1 
91 1 58 1 
364 1 269 1 333 2 203 1 336 2 91 2 318 2 360 1 42 1 
165 1 299 1 288 1 
227 1 273 1 268 1 172 1 143 1 235 1 250 1 369 1 336 1 224 1 103 1 91 1 147 1 76 1 318 1 29 1 
227 1 273 1 268 1 172 1 143 1 269 1 250 1 235 1 333 1 165 1 316 1 369 1 336 2 224 1 103 1 76 1 317 1 360 1 318 2 29 1 
364 1 333 3 316 1 336 3 91 1 318 3 360 3 269 3 
333 1 336 1 159 1 318 1 360 1 239 1 269 1 
364 1 333 1 203 1 336 1 318 1 360 1 42 1 239 1 269 1 
227 1 364 2 257 1 273 1 308 1 172 1 277 1 310 1 262 1 235 1 101 1 203 1 177 1 316 1 369 1 140 1 103 1 317 1 318 4 120 1 12 1 239 1 212 1 121 1 156 1 123 1 268 1 289 1 143 1 162 1 269 3 219 1 220 1 24 1 250 1 333 3 336 4 224 1 91 1 76 1 360 3 340 2 29 1 169 1 
333 2 316 1 49 1 336 2 91 1 318 2 360 1 127 1 269 1 
364 1 257 1 277 1 310 1 269 3 219 1 35 1 220 1 333 3 101 1 203 1 316 2 336 3 317 1 360 3 318 3 212 1 239 1 341 1 
364 1 288 1 269 2 333 2 203 1 316 1 165 1 336 2 360 2 318 2 
227 1 273 1 268 1 172 1 143 1 235 1 250 1 369 1 336 1 103 1 224 1 91 1 76 1 318 1 29 1 
227 1 273 1 268 1 172 1 355 1 250 1 369 1 336 1 103 1 224 1 91 1 76 1 9 1 318 1 29 1 
256 1 228 1 308 1 309 2 233 1 38 1 263 1 237 1 139 1 177 1 120 1 12 1 156 4 289 2 288 2 290 1 162 1 331 1 24 1 270 1 296 1 165 2 299 2 340 2 
333 1 336 1 41 1 318 1 360 1 239 1 269 1 220 1 
364 1 275 1 127 1 269 4 174 1 333 5 203 1 316 2 49 1 336 5 91 1 317 1 360 4 318 5 
333 2 336 2 41 1 159 1 318 2 360 2 239 1 269 2 
20 1 261 1 
20 1 261 1 
104 1 372 1 
104 1 372 1 
104 1 372 1 
20 1 255 1 261 1 
104 1 20 1 261 1 372 1 
349 1 20 1 261 1 
20 1 255 1 261 1 
20 1 255 1 261 1 
20 1 94 1 261 1 
20 1 94 1 261 1 
20 1 94 1 261 1 
364 1 257 2 96 2 232 2 261 2 347 1 61 1 63 2 83 1 209 1 318 1 117 1 239 1 212 2 121 1 124 1 325 1 327 1 159 1 125 1 20 2 89 1 269 1 333 1 222 1 336 1 300 2 360 1 362 2 
257 1 96 1 232 1 261 1 347 1 201 1 39 1 349 1 63 1 6 1 318 2 319 1 212 1 20 1 269 2 333 2 336 2 91 1 300 1 360 2 301 1 129 1 93 1 362 1 
365 1 77 1 73 1 
113 1 77 1 73 1 
113 1 365 2 276 1 207 1 92 1 77 3 
164 1 113 1 365 1 276 1 207 1 77 2 
113 1 365 1 207 1 276 2 77 2 
55 1 272 1 257 5 173 2 259 4 34 1 99 1 263 1 38 1 39 1 6 1 139 1 116 2 370 1 319 1 212 5 154 3 241 1 105 1 267 1 106 2 107 2 161 1 163 1 21 1 332 3 252 1 296 1 358 1 128 1 254 1 341 2 
55 6 257 9 272 1 173 6 259 7 34 1 99 3 263 3 38 3 40 1 139 3 370 3 118 1 319 4 321 1 212 9 154 8 267 1 105 2 180 1 106 6 86 1 218 5 107 6 161 2 292 1 21 2 332 9 252 1 296 3 358 2 128 2 303 1 341 5 95 5 
257 3 173 2 34 1 259 2 99 1 263 1 38 1 139 1 116 1 370 2 319 1 212 3 154 3 241 1 105 1 180 1 106 2 161 1 107 2 21 1 332 4 296 1 358 1 128 1 254 1 341 3 
257 4 173 4 34 1 259 3 99 2 263 2 38 2 139 2 40 1 116 2 370 3 118 1 319 2 212 4 154 5 241 1 105 1 106 4 180 1 86 1 161 1 107 4 21 1 332 7 296 2 358 1 128 1 254 1 341 4 
224 1 225 1 58 1 
102 1 224 1 
380 1 
224 1 29 1 
172 1 224 3 71 1 225 2 29 1 226 1 
172 1 224 1 29 1 
224 1 284 1 
256 2 228 3 156 7 309 4 289 3 19 1 199 1 377 2 175 1 23 1 263 1 38 1 100 1 176 1 48 1 7 1 352 1 
256 2 228 3 156 7 309 4 289 3 19 1 199 1 377 2 175 1 23 1 263 1 38 1 100 1 176 1 48 1 7 1 352 1 
256 2 228 3 156 7 309 4 289 3 19 1 199 1 377 2 175 1 23 1 263 1 38 1 100 1 264 1 176 1 48 1 7 1 352 1 
342 1 256 5 228 10 80 3 308 1 309 16 312 4 99 3 199 2 175 1 100 1 38 4 263 4 176 1 62 1 177 1 139 3 7 2 352 2 120 1 322 1 156 31 289 15 142 1 19 5 375 1 162 1 377 3 23 2 357 1 334 1 296 3 48 1 340 2 
256 3 228 4 308 2 309 5 4 1 199 1 175 1 263 1 38 1 100 1 176 1 177 2 7 1 120 2 352 1 156 9 289 4 142 1 19 1 184 1 162 2 377 2 23 1 340 4 
227 1 343 1 113 1 365 1 138 1 369 1 103 1 14 1 213 1 323 1 266 1 17 1 268 1 374 2 328 1 182 1 247 1 73 1 291 1 90 1 188 2 26 1 359 1 76 1 77 2 92 1 302 1 110 1 192 1 53 1 
227 1 343 1 113 1 365 1 81 1 138 1 369 1 103 1 64 1 14 1 323 1 266 2 17 1 268 1 374 3 328 1 182 1 247 1 73 1 291 1 185 1 188 3 26 1 359 1 76 1 92 1 77 2 302 1 110 1 53 1 
227 1 343 1 113 1 365 1 138 1 369 1 103 1 64 1 14 1 323 1 266 2 17 1 268 1 374 2 247 1 291 1 73 1 185 1 188 2 359 1 76 1 77 2 92 1 302 1 110 1 
227 1 306 1 273 1 268 1 374 1 328 1 81 1 182 1 247 2 291 2 135 1 202 1 188 1 369 1 103 1 224 1 238 1 76 1 78 1 29 1 110 2 305 1 323 2 
227 1 343 1 113 1 365 1 138 1 369 1 103 1 64 1 14 1 323 1 268 1 374 1 328 1 182 1 247 1 73 1 291 1 90 1 188 1 26 1 76 1 77 2 92 1 110 1 192 1 53 1 
13 1 
227 2 272 3 55 6 273 2 1 2 274 1 171 1 2 2 98 2 277 1 103 1 282 1 351 2 239 1 105 1 354 1 183 1 72 1 246 1 107 2 294 2 189 2 252 1 358 1 76 2 148 1 29 1 363 1 305 1 306 1 257 5 33 1 34 1 310 1 366 4 369 2 370 2 208 2 318 1 154 2 212 5 214 1 268 1 161 1 219 1 220 1 332 2 221 1 333 1 49 1 336 1 224 1 128 1 341 2 131 1 
272 1 55 2 257 3 33 1 274 1 310 1 277 1 366 2 294 1 219 1 220 1 221 1 333 1 47 1 49 1 336 1 148 1 318 1 239 1 212 3 131 1 363 1 
55 1 257 3 272 1 33 1 274 1 2 1 34 1 277 1 310 1 366 3 318 1 212 3 239 1 219 1 220 1 221 1 333 1 47 1 336 1 49 1 148 1 131 1 341 1 363 1 
272 1 257 3 55 2 33 1 274 1 2 1 34 1 277 1 310 1 366 3 318 1 212 3 239 1 219 1 294 1 220 1 221 1 333 1 189 1 47 1 336 1 49 1 148 1 131 1 341 1 363 1 
55 7 272 3 257 5 33 1 1 2 274 1 34 5 2 4 98 2 277 1 310 1 260 1 346 1 366 6 370 2 8 1 208 2 351 2 318 1 154 1 212 5 239 1 105 1 329 1 183 1 246 1 107 1 161 1 219 1 294 4 220 1 221 1 252 1 333 1 189 4 47 1 49 1 336 1 128 1 148 1 341 5 131 1 31 1 363 1 
55 4 272 2 257 4 33 1 1 2 274 1 34 1 2 2 98 2 277 1 310 1 366 4 370 2 208 2 282 1 351 2 318 1 154 1 212 4 239 1 105 1 183 1 246 1 107 1 161 1 294 2 219 1 220 1 332 2 221 1 189 2 252 1 333 1 49 1 336 1 148 1 128 1 341 2 131 1 363 1 
55 4 272 2 257 4 33 1 1 2 274 1 34 1 2 2 98 2 277 1 310 1 366 4 346 1 370 2 8 1 208 2 351 2 318 1 154 1 212 4 239 1 105 1 183 1 246 1 107 1 161 1 294 2 219 1 220 1 221 1 189 2 333 1 252 1 336 1 49 1 148 1 128 1 341 1 131 1 363 1 31 1 
55 4 272 2 257 4 33 1 1 2 274 1 34 1 2 2 98 2 277 1 310 1 366 4 346 1 370 2 8 1 208 2 351 2 318 1 154 1 212 4 239 1 105 1 183 1 246 1 107 1 161 1 294 2 219 1 220 1 221 1 189 2 333 1 252 1 336 1 49 1 148 1 128 1 341 1 131 1 363 1 31 1 
55 4 272 2 257 4 33 1 1 2 274 1 56 1 34 1 2 2 98 2 277 1 310 1 366 4 8 1 318 1 154 1 212 4 239 1 324 1 242 2 105 1 160 2 183 1 248 1 107 1 161 1 294 2 219 1 220 1 332 2 221 1 189 2 333 1 252 1 336 1 49 1 148 1 128 1 341 1 131 1 363 1 
272 2 257 4 55 5 33 1 1 2 274 1 34 1 2 3 98 2 277 1 310 1 366 5 346 1 370 2 8 1 208 2 351 2 318 1 154 1 212 4 239 1 105 1 329 1 183 1 246 1 107 1 161 1 219 1 294 3 220 1 221 1 252 1 333 1 189 3 336 1 49 1 128 1 148 1 341 1 131 1 31 1 363 1 
272 2 257 4 55 5 33 1 1 2 274 1 34 1 2 3 98 2 277 1 310 1 366 5 346 1 370 2 8 1 208 2 351 2 318 1 154 1 212 4 239 1 105 1 329 1 183 1 246 1 107 1 161 1 219 1 294 3 220 1 221 1 252 1 333 1 189 3 336 1 49 1 128 1 148 1 341 1 131 1 31 1 363 1 
55 4 272 2 257 4 33 1 1 2 274 1 56 1 34 1 2 2 98 2 277 1 310 1 366 4 282 1 318 1 154 1 212 4 239 1 242 2 105 1 160 2 183 1 107 1 161 1 294 2 219 1 220 1 332 2 221 1 189 2 252 1 333 1 49 1 336 1 148 1 128 1 341 1 131 1 363 1 
256 2 228 2 308 1 309 3 58 1 199 1 175 1 100 1 38 1 263 1 176 1 177 1 120 1 12 1 352 1 156 6 288 1 289 3 162 1 377 1 24 1 270 1 165 1 299 1 91 2 340 2 
342 1 256 1 228 2 80 3 308 2 309 8 312 3 262 1 99 2 367 1 200 1 38 2 263 1 115 1 177 2 139 1 120 2 12 1 156 14 289 6 288 4 19 1 245 1 162 2 22 1 24 2 334 1 296 2 165 11 167 1 299 11 91 1 340 4 
227 1 273 1 172 1 308 1 309 1 262 1 235 1 115 1 369 1 316 1 177 1 103 1 317 1 318 2 12 1 120 1 240 1 156 2 268 1 288 1 289 1 143 1 245 1 162 1 269 1 249 1 250 1 24 1 333 1 336 2 224 1 91 1 76 1 147 1 79 1 360 1 29 1 340 2 
227 1 228 5 273 1 344 1 172 2 229 2 99 2 175 1 235 2 100 1 176 1 177 3 139 2 103 2 239 1 352 1 12 3 16 1 289 11 288 6 19 1 143 2 245 1 24 3 250 2 296 2 299 6 76 1 360 1 29 2 256 4 194 1 308 3 309 11 262 1 199 1 36 2 38 4 263 4 115 1 369 1 316 1 82 1 317 1 318 3 120 3 156 22 123 2 268 2 269 1 162 3 333 1 165 6 336 3 224 2 50 2 91 1 340 6 271 2 
227 6 273 2 172 1 57 1 278 1 136 1 177 2 103 3 64 1 12 2 67 1 289 1 245 1 24 2 74 1 76 7 360 1 29 3 305 1 306 1 308 2 309 1 262 1 369 7 316 1 210 1 318 1 320 1 120 2 213 1 156 2 215 1 268 4 216 1 162 2 269 1 330 2 270 1 333 1 223 1 336 1 224 4 340 4 
256 1 228 1 364 1 308 1 309 1 99 1 38 1 263 1 203 1 115 1 177 1 139 1 318 1 120 1 12 1 156 3 288 1 289 2 162 1 269 1 24 1 333 1 296 1 165 1 336 1 299 1 360 1 28 1 340 2 
228 1 156 2 308 1 309 2 288 1 19 1 162 1 24 1 270 1 38 1 237 1 296 1 165 1 177 1 299 1 340 2 12 1 120 1 
256 1 228 1 156 2 308 1 288 1 289 2 290 1 162 1 24 1 270 1 263 1 165 1 177 1 139 1 299 1 340 2 12 1 120 1 
256 1 228 2 156 4 308 1 309 2 289 2 288 2 19 1 162 1 99 1 24 1 263 1 270 1 38 1 296 1 139 1 165 2 177 1 299 2 340 2 12 1 120 1 
228 1 156 2 67 1 308 1 309 2 288 1 19 1 162 1 24 1 38 1 237 1 296 1 165 1 177 1 299 1 340 2 12 1 120 1 
256 1 228 1 156 2 67 1 308 1 288 1 289 2 290 1 162 1 24 1 263 1 165 1 177 1 139 1 299 1 340 2 12 1 120 1 
256 1 228 2 156 4 67 1 308 1 309 2 289 2 288 2 19 1 162 1 99 1 24 1 263 1 38 1 296 1 139 1 165 2 177 1 299 2 340 2 12 1 120 1 
256 1 228 2 156 4 308 1 309 2 289 2 288 2 19 1 162 1 99 1 24 1 263 1 38 1 296 1 139 1 165 2 177 1 299 2 340 2 12 1 120 1 
227 1 273 1 172 1 308 1 309 1 262 1 235 1 369 1 177 1 103 1 318 1 12 1 120 1 156 2 123 1 268 1 289 1 143 1 245 1 162 1 250 1 24 1 336 1 224 1 91 1 76 1 29 1 340 2 
227 1 155 1 273 1 268 1 172 1 355 1 250 1 369 1 336 1 224 1 103 1 76 1 9 1 318 1 29 1 
256 1 228 2 156 4 308 1 309 2 289 2 288 2 19 1 162 1 99 1 24 1 263 1 38 1 115 1 296 1 139 1 165 2 177 1 299 2 340 2 12 1 120 1 
256 1 227 1 228 2 172 1 308 1 229 1 309 2 99 1 235 1 263 1 38 1 139 1 369 1 177 1 103 1 318 1 12 1 120 1 213 1 156 4 123 1 268 1 289 2 288 2 19 1 143 1 162 1 250 1 24 1 296 1 165 2 336 1 299 2 224 1 76 1 29 1 340 2 
228 1 364 1 308 1 309 2 99 1 263 1 38 1 203 1 115 1 139 1 177 1 318 1 120 1 12 1 156 3 289 1 46 1 288 1 19 1 162 1 269 1 24 1 333 1 296 1 165 1 336 1 299 1 360 1 340 2 
256 3 342 1 228 6 0 1 80 1 308 2 309 9 312 2 99 3 4 1 38 3 263 3 236 1 177 2 139 3 11 2 120 2 156 19 69 1 326 1 157 1 289 10 19 3 162 2 356 1 297 2 334 1 296 3 75 1 340 4 
342 2 156 11 0 1 80 2 326 2 308 1 157 1 309 6 181 1 289 5 312 2 162 1 99 1 4 1 356 2 38 1 296 1 297 2 177 1 191 1 119 1 340 2 120 1 
256 1 342 3 228 3 0 1 80 3 308 2 309 12 312 4 99 3 4 1 38 3 263 2 177 2 139 2 11 1 119 1 120 2 179 1 156 24 69 1 326 2 157 1 181 1 289 12 19 2 162 2 356 1 297 3 334 1 296 3 75 1 191 1 340 4 
256 2 342 3 228 4 0 1 80 3 308 2 309 12 312 4 99 3 4 1 38 3 263 2 177 2 139 2 11 1 119 1 120 2 179 1 156 24 69 1 326 2 157 1 181 1 289 12 19 2 162 2 356 1 297 3 334 1 296 3 75 1 191 1 340 4 
256 5 342 2 228 9 0 1 80 4 308 1 309 19 312 4 99 5 199 1 4 1 175 1 367 2 100 1 38 6 263 5 176 1 177 1 139 4 119 1 352 1 120 1 156 36 326 1 157 1 181 1 289 17 19 4 162 1 377 1 356 1 297 2 334 2 296 5 191 1 340 2 
187 1 353 1 63 1 96 1 300 1 152 1 20 1 261 1 122 1 362 1 
201 1 349 1 
63 1 84 1 96 1 217 1 300 1 20 1 144 1 261 1 362 1 
364 1 257 1 96 1 232 2 261 1 347 1 61 1 63 1 83 1 209 1 318 1 117 1 239 1 212 1 121 1 124 1 325 1 327 1 159 1 125 1 20 1 89 1 269 1 333 1 222 1 336 1 300 1 360 1 362 1 
364 1 257 1 96 1 232 2 261 1 347 1 61 1 63 1 83 1 209 1 318 1 117 1 239 1 212 1 121 1 124 1 325 1 327 1 159 1 125 1 20 1 89 1 269 1 333 1 222 1 336 1 300 1 360 1 362 1 
364 1 257 1 96 1 232 2 261 1 347 1 61 1 63 1 83 1 209 1 318 1 117 1 239 1 212 1 121 1 124 1 325 1 327 1 159 1 125 1 20 1 89 1 269 1 333 1 222 1 336 1 300 1 360 1 362 1 
190 1 345 1 255 1 
190 1 345 1 255 1 
65 1 94 1 
190 1 65 1 94 1 
93 1 129 1 
257 1 96 1 259 1 261 1 232 1 201 1 39 1 349 1 63 1 6 1 83 1 209 1 318 2 319 1 212 1 285 1 20 1 269 2 333 2 336 2 91 1 300 1 301 1 129 1 93 1 360 2 362 1 
345 1 255 1 
190 1 65 1 94 1 
227 2 150 1 308 1 309 1 198 1 262 1 136 1 348 1 115 1 369 2 177 1 103 1 281 1 318 2 320 1 12 1 120 1 156 2 268 1 289 1 245 1 162 1 330 2 24 1 295 1 333 2 336 2 224 1 76 2 29 1 340 2 
227 2 15 1 343 1 113 1 365 1 268 1 197 1 73 1 293 1 138 1 26 1 369 2 103 1 76 2 92 1 77 2 64 1 213 1 323 1 
227 1 15 1 343 1 113 1 365 1 268 1 73 1 138 1 26 1 369 1 103 1 76 1 92 1 77 2 64 1 149 1 323 1 
227 1 306 1 273 1 268 1 293 1 369 1 103 1 224 1 76 1 78 1 29 1 373 1 323 1 305 1 
227 1 15 1 343 1 113 1 365 1 268 1 197 1 73 1 293 1 138 1 26 1 369 1 103 1 76 1 92 1 77 2 64 1 323 1 
27 1 
204 1 97 1 34 1 58 1 154 1 107 1 341 1 
105 1 257 1 55 1 272 1 34 1 246 1 161 1 107 1 332 1 252 1 370 1 128 1 208 1 351 1 212 1 154 1 341 2 
227 1 112 1 257 1 55 1 272 1 273 1 172 1 173 3 99 1 314 1 36 1 263 1 38 1 37 1 102 2 139 1 369 1 370 3 103 1 212 1 154 4 105 2 106 3 70 1 268 2 107 3 161 2 332 6 378 1 252 2 296 1 379 1 358 1 224 3 76 1 128 2 361 1 29 1 226 1 341 3 132 1 
342 1 32 1 80 1 173 4 312 1 99 2 38 2 263 2 139 2 370 1 119 1 154 6 105 1 106 4 87 1 181 1 161 1 107 4 332 2 252 1 296 2 128 1 191 1 341 1 
194 1 364 1 257 1 199 1 61 1 315 1 175 1 38 2 263 1 318 1 239 1 352 1 212 1 154 2 121 1 105 1 70 2 159 1 89 1 161 1 107 2 269 1 252 1 333 1 336 1 128 1 360 1 31 1 
105 1 97 1 34 1 161 1 107 1 252 1 204 1 128 1 154 1 341 1 
106 5 70 2 173 5 107 5 99 2 315 1 36 1 332 10 38 2 263 2 296 2 139 2 370 5 154 5 341 5 
257 1 55 1 272 1 34 1 212 1 341 1 
227 4 306 1 273 2 55 4 272 2 257 3 171 1 3 1 369 4 103 1 154 2 212 3 214 1 287 1 105 2 180 1 268 1 354 2 161 2 107 2 252 1 358 2 224 1 128 2 76 4 253 1 52 2 29 1 305 1 
227 1 364 2 273 1 308 1 172 1 262 1 235 1 177 1 369 1 103 1 318 3 120 1 121 1 12 1 156 1 123 1 268 1 289 1 143 1 269 2 162 1 250 1 24 1 333 2 336 3 224 1 91 1 76 1 360 2 340 2 29 1 169 1 
105 1 106 2 173 2 34 2 354 1 107 2 161 1 377 1 332 4 252 1 358 1 370 2 128 1 154 1 341 4 
244 1 96 1 300 1 
353 1 298 1 96 1 300 1 93 1 
244 1 96 1 300 1 
244 1 96 1 300 1 
108 1 96 1 300 1 
108 1 96 1 300 1 
108 1 96 1 300 1 
96 1 300 1 
20 1 261 1 
256 2 156 8 228 3 308 2 309 4 289 4 142 1 19 1 162 2 377 1 199 1 175 1 263 1 38 1 100 1 176 1 177 2 340 4 120 2 352 1 
256 2 228 2 156 6 309 3 289 3 58 1 377 1 199 1 175 1 100 1 38 1 263 1 176 1 352 1 
256 1 85 1 228 2 156 4 308 1 309 2 289 2 19 1 162 1 99 1 263 1 38 1 296 1 139 1 177 1 340 2 120 1 
256 1 342 1 156 7 228 2 80 1 309 3 289 4 19 1 312 2 99 1 263 1 38 1 334 1 296 1 139 1 
256 5 228 9 80 2 308 2 309 11 312 2 60 1 99 2 199 2 175 1 367 1 100 1 38 3 263 3 176 1 139 2 177 2 352 2 120 2 156 23 289 12 142 2 19 4 162 2 377 1 22 1 296 2 334 1 340 4 
156 1 289 1 312 1 
156 1 80 1 309 1 
85 1 256 2 156 6 228 3 308 1 309 3 289 3 19 1 162 1 99 1 36 1 38 1 263 1 296 1 177 1 139 1 340 2 120 1 
342 1 156 5 80 1 308 1 309 3 181 1 289 2 312 1 162 1 99 1 4 1 38 1 296 1 177 1 191 1 119 1 340 2 120 1 
256 1 156 6 228 2 309 3 289 3 19 1 199 1 175 1 38 1 263 1 352 1 
256 1 228 2 156 3 308 1 309 1 289 2 142 1 19 1 60 1 162 1 199 1 100 1 176 1 177 1 340 2 352 1 120 1 
256 3 194 1 228 5 156 10 308 1 309 5 289 5 19 2 162 1 4 1 199 2 175 1 38 2 263 2 177 1 340 2 120 1 352 2 
156 2 228 1 308 1 309 2 19 1 162 1 4 1 38 1 296 1 177 1 340 2 120 1 
256 1 228 2 156 4 308 1 309 2 289 2 19 1 162 1 99 1 4 1 263 1 38 1 296 1 139 1 177 1 340 2 120 1 
256 1 156 3 228 2 308 3 309 1 142 1 289 2 19 1 60 1 162 3 4 1 199 1 177 3 75 1 340 6 120 3 352 1 
342 1 256 7 228 12 80 3 308 5 309 16 60 1 312 4 99 3 199 3 4 1 175 2 100 1 38 5 263 5 176 1 177 5 139 3 352 3 322 1 120 5 85 1 156 34 142 2 289 18 19 5 375 1 162 5 377 1 357 1 334 1 296 3 75 1 340 10 
342 1 256 2 228 2 80 1 308 1 309 4 312 1 4 1 199 1 175 1 263 1 38 1 100 1 176 1 177 1 120 1 352 1 156 8 289 4 181 1 162 1 377 1 340 2 
256 2 342 1 228 3 80 1 308 2 309 6 312 2 99 1 199 1 4 1 175 1 263 1 100 1 38 2 176 1 177 2 352 1 120 2 85 1 156 11 289 5 181 1 19 1 162 2 377 1 334 1 296 1 340 4 
342 1 156 5 80 1 308 1 309 3 181 1 289 2 312 1 162 1 99 1 4 1 38 1 296 1 177 1 191 1 119 1 340 2 120 1 
342 1 156 5 80 1 308 1 309 3 181 1 289 2 312 1 162 1 99 1 4 1 38 1 296 1 177 1 191 1 119 1 340 2 120 1 
342 1 256 2 228 2 80 1 308 1 309 4 312 1 4 1 199 1 175 1 263 1 38 1 100 1 176 1 177 1 120 1 352 1 156 8 289 4 181 1 162 1 377 1 340 2 
342 1 156 5 80 1 308 1 309 3 181 1 289 2 312 1 162 1 99 1 4 1 38 1 296 1 177 1 191 1 119 1 340 2 120 1 
85 1 342 1 156 5 80 1 308 2 309 3 181 1 289 2 312 1 162 2 99 1 4 1 38 1 296 1 177 2 191 1 119 1 340 4 120 2 
342 1 156 5 80 1 308 2 309 3 181 1 289 2 312 1 162 2 99 1 4 1 38 1 296 1 177 2 75 1 191 1 119 1 340 4 120 2 
256 3 156 7 228 6 309 3 289 4 19 3 199 3 175 1 263 1 100 1 38 1 176 2 352 3 
342 1 156 5 80 1 308 2 309 3 181 1 289 2 312 1 162 2 99 1 4 1 38 1 296 1 177 2 75 1 191 1 119 1 340 4 120 2 
333 1 335 1 336 1 49 1 91 1 318 1 127 1 
54 1 243 1 230 1 127 1 279 1 333 1 335 1 49 1 336 1 91 1 130 1 318 1 
227 1 306 1 273 1 268 1 369 1 103 1 224 1 76 1 58 1 29 1 305 1 
227 1 273 1 268 1 172 1 143 1 269 1 250 1 333 1 316 1 369 1 336 2 224 1 103 1 91 1 76 1 360 1 318 2 29 1 
227 1 172 2 310 1 369 1 316 1 103 1 318 2 239 1 284 1 268 1 143 1 269 2 376 1 220 1 250 1 333 2 336 2 224 3 91 1 76 1 360 1 52 1 29 2 
227 2 172 2 310 1 369 2 316 1 103 1 9 1 318 2 239 1 284 1 268 1 269 2 145 1 376 1 220 1 250 1 333 2 336 2 224 3 91 1 76 2 360 1 52 1 29 2 
227 3 55 1 257 2 273 1 172 1 34 1 137 1 102 1 369 3 103 1 212 2 284 1 268 1 145 1 376 1 219 1 224 4 76 3 338 1 225 1 52 1 29 1 341 1 
227 1 364 1 257 1 34 1 61 1 102 1 369 1 318 1 239 1 212 1 121 1 159 1 89 1 269 1 378 1 333 1 336 1 224 1 76 1 360 1 52 1 341 1 
227 1 268 1 369 1 103 1 76 1 51 1 
227 5 273 2 215 1 268 3 216 1 172 1 57 1 330 1 136 1 74 1 369 6 223 1 178 1 224 3 103 2 76 6 64 1 29 2 226 1 213 1 
227 1 228 2 172 1 229 1 175 1 235 1 100 1 176 1 177 2 103 1 12 2 352 1 288 1 289 3 143 1 24 2 250 1 299 1 76 1 360 1 29 1 256 2 150 1 308 2 309 3 199 1 38 1 263 1 115 1 369 1 316 1 318 2 120 2 213 1 156 6 123 1 268 1 269 1 162 2 377 1 333 1 165 1 336 2 224 1 91 2 340 4 271 1 
227 1 55 1 272 1 273 1 97 1 3 1 61 1 175 1 102 1 239 1 352 1 105 2 70 2 107 5 252 2 76 1 360 1 361 1 112 1 194 1 364 1 257 2 259 1 34 2 199 1 315 1 37 1 38 2 263 2 369 1 204 1 318 1 212 2 154 4 121 1 159 1 89 1 161 2 269 1 378 1 333 1 336 1 224 1 128 2 341 2 
227 2 268 2 172 1 314 1 369 2 224 2 103 1 76 2 225 1 51 1 29 1 226 1 213 1 
227 4 306 1 273 1 268 1 18 1 145 1 369 4 224 1 103 1 76 4 29 1 213 1 305 1 
227 2 141 1 215 1 268 2 172 1 278 1 369 2 223 1 224 1 103 1 76 2 210 1 52 1 29 1 
227 1 138 1 273 1 113 1 268 1 369 1 103 1 76 1 77 1 73 1 
227 2 348 1 268 1 369 2 103 1 224 1 76 2 64 1 29 1 213 1 136 1 
227 4 306 1 273 1 268 2 216 1 18 1 57 1 136 1 369 5 224 3 103 2 76 5 52 1 29 2 213 1 305 1 
227 4 306 1 273 1 268 2 18 1 57 1 136 1 369 5 224 3 103 2 76 5 10 1 52 1 29 2 213 1 305 1 
227 1 273 1 268 1 172 1 269 1 250 1 333 1 316 1 369 1 336 2 224 1 103 1 91 1 76 1 9 1 360 1 318 2 29 1 
227 1 215 1 268 2 172 1 369 1 223 1 178 1 224 1 103 1 76 1 52 1 29 1 226 1 
186 1 333 1 295 1 336 1 166 1 281 1 318 1 198 1 283 1 
186 1 311 1 111 1 
186 1 368 1 166 1 91 1 283 1 
257 2 34 1 259 1 310 1 277 1 311 1 219 1 220 1 186 1 368 2 101 1 166 2 91 1 211 1 239 1 212 2 283 2 341 1 111 1 
17 1 359 1 58 1 302 1 
17 1 188 1 374 1 359 1 328 1 182 1 302 1 
188 1 247 1 291 1 
17 1 114 2 374 3 328 1 182 1 90 1 146 1 188 3 350 1 359 1 153 1 302 1 
266 1 17 1 188 2 374 2 359 1 328 1 339 1 182 1 302 1 
365 1 374 1 328 1 182 1 73 1 90 1 188 1 205 1 359 1 77 1 30 1 
17 1 188 1 374 1 359 1 328 1 182 1 90 1 
17 2 188 1 374 1 328 1 182 1 302 1 90 1 
17 1 374 2 328 2 182 2 90 1 134 1 188 2 5 1 359 1 286 1 
266 2 17 1 374 3 328 1 182 1 126 1 90 1 188 3 280 1 359 2 265 1 302 1 30 1 
266 1 17 1 113 1 365 1 374 2 328 1 182 1 73 1 90 1 188 2 359 1 77 2 381 1 92 1 302 1 
266 2 17 1 374 4 328 2 182 2 90 1 188 4 280 1 359 2 339 1 302 1 109 1 30 1 
17 1 188 1 374 1 359 1 328 1 182 1 302 1 90 1 
266 2 17 2 258 1 114 1 374 4 328 1 182 1 146 1 188 4 280 1 359 3 153 1 302 2 30 1 
266 1 17 1 195 1 88 1 374 2 328 1 182 1 90 1 234 1 188 2 359 1 302 1 
17 1 114 2 374 3 328 1 182 1 90 1 146 2 188 3 359 1 153 1 302 1 193 1 
196 1 206 2 151 1 359 2 
68 1 188 1 374 1 328 1 182 1 90 1 
266 1 17 1 188 2 374 2 359 1 328 1 265 1 182 1 302 1 90 1 
371 1 
17 1 188 1 374 1 359 1 328 1 182 1 302 1 90 1 
266 1 17 1 188 3 114 1 374 3 359 1 328 1 265 1 182 1 302 1 90 1 
258 1 280 1 359 1 30 1 
17 1 359 1 

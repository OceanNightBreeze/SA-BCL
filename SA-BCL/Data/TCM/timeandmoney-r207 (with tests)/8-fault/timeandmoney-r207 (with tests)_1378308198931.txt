#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (92,235) 323 (142,150) (142,150) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (92,235) 323 (142,150) (142,150) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (92,235) 323 (142,150) (142,150) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (92,235) 323 (142,150) (142,150) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (58,241,246,347) (58,241,246,347) 210 17 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (58,241,246,347) (58,241,246,347) 210 17 355 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (58,241,246,347) (58,241,246,347) 210 17 355 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (74,219,366) (44,335,350) (44,335,350) (44,335,350) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 348 259 191 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 239 (137,318) (137,318) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (74,219,366) (74,219,366) (74,219,366) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 1 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 348 259 191 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 348 120 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (58,241,246,347) (58,241,246,347) 210 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (58,241,246,347) (58,241,246,347) 210 47 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
347 1 279 1 330 1 235 1 88 1 142 1 333 1 241 1 246 1 323 1 150 1 
347 1 279 1 330 1 235 1 88 1 142 1 333 1 241 1 246 1 323 1 150 1 
347 1 279 1 330 1 235 1 88 1 142 1 333 1 241 1 246 1 323 1 150 1 
347 1 279 1 330 1 235 1 88 1 142 1 333 1 241 1 246 1 323 1 150 1 
347 1 17 1 279 1 330 1 241 2 58 1 210 1 246 1 
347 1 279 2 330 1 292 1 241 2 133 1 333 1 192 1 246 1 375 1 107 1 303 1 88 1 56 1 90 1 101 1 
347 2 92 1 279 3 330 1 292 1 241 3 333 1 246 2 122 1 90 1 353 1 58 1 101 2 
347 2 92 1 17 1 279 6 330 1 153 1 355 1 86 1 241 7 333 1 210 1 246 2 122 2 353 2 345 1 58 5 101 2 
347 2 92 1 17 1 279 6 330 1 153 1 355 1 86 1 241 7 333 1 210 1 246 2 122 2 353 2 345 1 58 5 101 2 
145 1 240 1 59 1 
208 2 67 1 59 1 
312 2 296 2 357 2 201 2 13 1 45 2 298 1 299 2 
238 1 239 1 289 1 62 1 130 1 291 1 294 1 296 3 158 2 298 1 299 2 134 2 174 1 9 1 198 1 137 1 201 2 13 1 45 2 227 1 228 1 46 1 253 1 372 1 309 1 281 1 357 3 53 1 336 2 312 2 26 1 315 1 99 2 213 2 287 1 263 1 34 1 
312 1 271 1 296 1 357 1 201 1 13 1 369 1 45 1 81 1 299 1 
139 1 181 1 371 1 240 1 296 1 79 1 80 1 357 1 299 1 81 1 300 1 83 1 57 1 59 1 
139 1 181 1 240 1 296 1 80 1 357 1 299 1 81 1 300 2 312 1 83 2 201 1 57 1 45 1 59 1 
300 1 250 1 285 1 83 1 233 1 
76 1 300 2 140 1 250 1 285 1 83 2 240 1 59 1 
300 1 250 1 83 1 
112 1 296 1 357 1 81 1 299 1 300 1 312 1 271 1 285 1 83 1 369 1 13 1 201 1 45 1 
59 1 
76 1 300 2 250 1 63 1 285 1 83 2 240 1 59 1 
76 1 240 1 40 1 220 1 68 2 356 1 221 1 105 1 300 5 250 2 260 1 285 2 83 5 211 2 163 1 197 1 126 1 344 2 59 1 
145 1 298 1 
363 1 296 2 374 1 357 2 299 2 298 2 312 1 201 1 45 1 
351 1 314 1 226 1 
239 1 46 1 289 1 130 1 309 1 296 1 158 1 357 1 298 1 134 1 315 1 174 1 213 1 198 1 359 1 34 1 
312 1 21 1 296 3 357 3 201 3 45 3 298 1 299 3 
271 1 296 1 357 1 201 1 45 1 81 1 299 1 
312 1 363 1 296 1 374 1 357 1 201 1 45 1 81 1 299 1 
238 1 239 1 289 1 130 1 291 1 294 1 363 1 296 4 158 1 298 1 299 3 134 1 300 1 174 1 9 1 198 1 137 1 201 3 13 1 45 3 46 1 139 1 181 1 253 1 309 1 21 1 80 1 281 1 357 4 81 1 53 1 336 2 312 2 26 1 315 1 83 1 99 1 27 1 28 1 213 1 168 1 57 1 263 1 34 1 
371 1 148 1 296 2 21 1 357 2 201 1 45 1 298 1 299 2 
139 1 181 1 267 1 363 1 21 2 296 3 80 1 357 3 81 1 299 3 300 1 312 1 83 1 27 1 168 1 57 1 201 3 45 3 59 1 
363 1 21 1 296 2 357 2 299 2 312 1 314 1 226 1 201 2 45 2 
239 1 46 1 289 1 130 1 309 1 296 1 158 1 357 1 298 1 134 1 315 1 174 1 213 1 198 1 34 1 
46 1 289 1 309 1 296 1 158 1 357 1 298 1 134 1 106 1 315 1 174 1 213 1 286 1 198 1 34 1 
169 1 238 1 62 2 362 1 294 1 65 1 245 1 351 2 170 1 108 1 9 2 11 1 226 2 253 1 281 1 334 1 117 1 336 2 25 1 26 1 314 2 261 1 99 4 263 1 
278 1 296 1 80 1 357 1 201 1 45 1 81 1 299 1 
46 1 239 1 289 1 130 1 309 1 21 1 296 2 158 1 357 2 299 1 134 1 315 1 174 1 213 1 198 1 168 1 226 1 201 1 45 1 34 1 
371 1 363 1 21 2 296 5 357 5 299 5 298 1 312 1 148 1 326 1 168 1 201 4 200 1 45 4 
278 1 271 1 296 2 357 2 201 2 45 2 81 1 299 2 
301 1 89 1 
301 1 89 1 
352 1 310 1 
352 1 310 1 
352 1 310 1 
301 1 176 1 89 1 
301 1 176 1 89 1 
301 1 176 1 89 1 
301 1 89 1 194 1 
301 1 320 1 89 1 
301 2 89 2 115 1 352 1 310 1 32 1 
301 1 89 1 194 1 
301 1 89 1 194 1 
307 2 308 1 205 2 182 2 114 1 280 1 349 1 115 1 22 2 118 1 301 2 300 2 83 2 10 2 89 2 149 3 343 1 59 1 202 1 
290 1 320 1 296 2 39 1 298 1 299 2 324 1 301 1 300 1 223 1 10 1 89 1 201 2 45 2 16 1 307 1 308 1 205 1 22 1 357 2 23 1 83 1 149 1 127 1 
133 1 192 1 31 1 
133 1 56 1 192 1 
94 1 254 1 133 3 56 1 31 2 164 1 
254 1 133 2 56 1 31 1 164 1 248 1 
254 1 133 2 56 1 31 1 164 2 
288 1 104 2 240 1 67 1 68 1 40 1 221 2 245 1 193 2 324 1 70 1 300 5 250 1 108 1 273 2 73 1 11 1 138 1 76 1 16 1 78 1 208 3 311 1 23 1 117 1 119 1 260 3 285 4 83 5 211 1 344 1 59 2 
0 1 104 6 240 1 67 3 220 1 40 1 68 2 221 6 245 3 41 5 300 9 195 1 250 6 108 3 273 6 73 2 11 3 138 1 76 1 16 4 329 1 208 9 311 3 117 3 233 5 119 2 185 1 260 8 317 1 285 7 83 9 211 2 344 2 60 1 59 5 
288 1 240 1 104 2 67 2 68 1 220 1 193 1 245 1 221 2 70 1 300 3 108 1 73 1 273 2 11 1 16 1 208 4 311 1 117 1 119 1 260 3 285 2 83 3 211 1 344 1 59 3 
288 1 0 1 240 1 104 4 67 3 68 1 220 1 193 2 245 2 221 4 70 1 300 4 108 2 273 4 73 1 11 2 16 2 329 1 208 7 311 2 117 2 119 1 185 1 260 5 285 3 83 4 211 1 344 1 59 4 
145 1 309 1 128 1 
36 1 309 1 
268 1 
315 1 309 1 
46 1 64 1 309 3 268 1 315 1 109 1 128 2 
46 1 315 1 309 1 
154 1 309 1 
266 1 62 4 362 3 95 1 364 1 365 1 25 2 108 1 367 1 99 7 166 1 9 3 110 2 304 1 11 1 262 1 14 1 
266 1 62 4 362 3 95 1 364 1 365 1 25 2 108 1 367 1 99 7 166 1 9 3 110 2 304 1 11 1 262 1 14 1 
266 1 62 4 362 3 95 1 364 1 365 1 25 2 108 1 367 1 99 7 166 1 9 3 304 1 110 2 11 1 262 1 75 1 14 1 
266 1 62 16 362 10 294 1 103 3 132 1 364 2 245 3 365 1 108 4 367 2 304 1 305 1 9 15 110 3 11 4 14 2 95 5 209 1 281 1 311 3 232 1 117 3 336 2 25 5 283 4 26 1 358 1 82 1 166 1 99 31 262 2 263 1 237 1 
266 2 62 8 362 4 102 1 294 1 364 1 108 3 367 1 110 2 304 1 9 6 11 3 14 2 95 1 281 1 336 2 313 1 25 3 26 1 99 14 166 1 262 2 263 1 264 1 
347 1 279 1 361 1 330 1 293 1 241 1 333 1 243 1 335 1 246 1 350 1 147 1 74 1 44 1 85 1 
347 1 289 1 361 1 293 1 241 2 133 2 158 1 192 1 243 1 246 1 350 1 134 1 160 1 173 1 174 1 74 1 354 1 279 2 94 1 333 1 144 1 335 1 147 1 377 1 213 1 56 1 58 1 31 1 
134 1 147 1 377 1 213 1 158 1 144 1 
347 1 289 1 279 1 293 2 155 1 309 1 333 2 241 1 158 1 243 2 257 1 246 1 134 1 147 2 160 1 315 1 174 1 213 1 327 1 162 1 178 1 91 1 34 1 
347 1 289 1 361 1 293 1 241 1 133 2 158 1 192 1 243 1 246 1 350 1 134 1 174 1 74 1 44 1 354 1 279 1 330 1 94 1 333 1 335 1 147 1 377 1 213 1 56 1 31 1 
224 1 
289 1 2 1 3 2 156 1 155 1 240 1 242 1 158 2 296 1 67 2 68 1 299 1 159 2 300 5 250 6 196 1 76 3 113 1 207 1 208 2 309 1 79 1 80 1 357 1 81 1 119 1 165 2 315 1 260 2 83 5 211 1 213 2 212 1 34 2 360 4 40 1 42 2 221 2 134 2 272 1 174 1 277 2 178 1 179 1 139 1 181 1 371 1 183 2 52 1 146 1 340 2 57 1 344 1 59 2 346 1 
76 1 139 1 360 2 181 1 63 1 2 1 371 1 207 1 242 1 296 1 80 1 79 1 357 1 81 1 299 1 300 3 250 2 165 1 272 1 83 3 57 1 346 1 
360 3 63 1 2 1 240 1 242 1 296 1 299 1 300 3 250 1 272 1 277 1 76 1 139 1 181 1 371 1 207 1 79 1 80 1 357 1 81 1 83 3 57 1 59 1 346 1 
360 3 63 1 2 1 240 1 242 1 296 1 299 1 300 3 272 1 250 2 277 1 76 1 139 1 181 1 371 1 207 1 79 1 80 1 357 1 183 1 81 1 165 1 83 3 57 1 59 1 346 1 
63 1 2 1 3 2 156 1 240 5 242 1 296 1 67 2 68 1 299 1 300 5 159 2 250 7 8 1 76 3 206 1 207 1 80 1 79 1 357 1 81 1 165 4 260 1 83 5 211 1 212 1 360 6 40 1 221 1 42 2 272 1 171 1 136 1 277 4 139 1 181 1 371 1 183 4 282 1 340 2 57 1 344 1 59 5 346 1 
2 1 3 2 156 1 240 1 242 1 296 1 67 2 68 1 299 1 300 4 159 2 250 4 76 2 207 1 208 2 80 1 79 1 357 1 81 1 165 2 260 1 83 4 212 1 211 1 360 4 40 1 221 1 42 2 272 1 277 2 139 1 181 1 371 1 183 2 52 1 340 2 57 1 344 1 59 2 346 1 
360 4 2 1 3 2 156 1 240 1 242 1 296 1 67 2 40 1 68 1 42 2 221 1 299 1 159 2 300 4 250 4 272 1 8 1 136 1 277 2 76 2 139 1 181 1 371 1 206 1 207 1 79 1 80 1 357 1 183 2 81 1 165 2 260 1 83 4 212 1 211 1 340 2 57 1 344 1 59 1 346 1 
360 4 2 1 3 2 156 1 240 1 242 1 296 1 67 2 40 1 68 1 42 2 221 1 299 1 159 2 300 4 250 4 272 1 8 1 136 1 277 2 76 2 139 1 181 1 371 1 206 1 207 1 79 1 80 1 357 1 183 2 81 1 165 2 260 1 83 4 212 1 211 1 340 2 57 1 344 1 59 1 346 1 
360 4 2 1 156 1 240 1 242 1 295 2 296 1 40 1 68 1 42 2 221 1 299 1 159 2 7 1 300 4 250 4 272 1 274 2 136 1 277 2 76 2 139 1 252 1 181 1 371 1 207 1 208 2 79 1 80 1 357 1 183 2 97 1 81 1 165 2 260 1 83 4 211 1 57 1 344 1 59 1 346 1 
360 5 2 1 3 2 156 1 240 1 242 1 296 1 67 2 68 1 40 1 42 2 221 1 299 1 159 2 300 4 272 1 171 1 250 5 8 1 136 1 277 3 76 2 139 1 181 1 371 1 206 1 207 1 79 1 80 1 357 1 183 3 81 1 165 3 260 1 83 4 212 1 211 1 340 2 57 1 344 1 59 1 346 1 
360 5 2 1 3 2 156 1 240 1 242 1 296 1 67 2 68 1 40 1 42 2 221 1 299 1 159 2 300 4 272 1 171 1 250 5 8 1 136 1 277 3 76 2 139 1 181 1 371 1 206 1 207 1 79 1 80 1 357 1 183 3 81 1 165 3 260 1 83 4 212 1 211 1 340 2 57 1 344 1 59 1 346 1 
2 1 156 1 240 1 242 1 296 1 295 2 68 1 299 1 7 1 300 4 159 2 250 4 76 2 207 1 208 2 80 1 79 1 357 1 81 1 165 2 260 1 83 4 211 1 360 4 40 1 221 1 42 2 272 1 274 2 277 2 139 1 181 1 371 1 183 2 52 1 57 1 344 1 59 1 346 1 
238 1 266 1 62 3 362 2 294 1 298 2 351 1 108 1 304 1 9 3 110 1 11 1 226 1 14 1 253 1 281 1 336 2 145 1 25 2 314 1 26 1 261 1 166 1 99 6 262 1 263 1 
238 1 62 6 362 2 294 1 103 2 245 2 351 8 108 2 9 4 305 1 11 1 12 1 226 8 253 1 18 1 370 1 95 1 255 1 281 1 311 2 51 1 117 1 336 2 25 1 283 2 26 1 314 3 99 10 263 1 
238 1 239 1 289 1 62 1 130 1 291 1 294 1 158 1 296 2 87 1 298 1 299 1 134 1 174 1 9 1 198 1 12 1 201 1 45 1 227 1 46 1 93 1 253 1 309 1 21 1 281 1 357 2 336 2 314 1 26 1 315 1 98 1 213 1 99 2 168 1 359 1 263 1 34 1 
238 3 239 2 289 2 62 10 291 1 294 3 4 2 158 3 296 3 245 2 298 2 299 1 351 7 108 3 110 1 304 1 9 10 11 3 198 2 12 1 14 1 201 1 15 2 253 3 309 2 21 1 357 3 311 2 117 2 25 4 26 3 314 7 315 2 166 1 213 3 262 1 168 1 318 2 263 3 34 1 266 1 130 2 362 8 38 2 134 3 174 2 325 1 137 2 226 7 45 1 227 1 328 1 46 2 95 4 281 3 184 1 336 6 377 1 99 20 
238 2 348 1 289 1 62 1 291 1 294 2 155 1 191 1 296 1 158 3 299 1 134 3 174 1 175 1 9 1 201 1 178 1 45 1 227 1 253 2 309 1 21 1 357 1 281 2 259 1 336 4 26 2 315 1 261 1 213 3 99 2 124 1 287 1 263 2 85 1 34 2 
238 1 62 1 362 1 294 1 363 1 296 1 245 1 299 1 351 1 108 1 9 2 11 1 226 1 12 1 201 1 45 1 253 1 143 1 281 1 357 1 311 1 117 1 336 2 25 1 312 1 314 1 26 1 99 3 263 1 
238 1 253 1 62 2 362 1 294 1 95 1 281 1 334 1 245 1 351 1 336 2 314 1 26 1 108 1 261 1 99 2 226 1 263 1 
238 1 253 1 362 1 294 1 65 1 281 1 117 1 351 1 336 2 25 1 314 1 26 1 261 1 99 2 9 2 11 1 226 1 263 1 
238 1 253 1 62 2 362 2 294 1 95 1 281 1 311 1 245 1 117 1 351 2 336 2 25 1 314 2 26 1 108 1 261 1 99 4 9 2 11 1 226 2 263 1 
238 1 253 1 62 2 362 1 294 1 95 1 281 1 334 1 245 1 351 1 336 2 314 1 26 1 108 1 175 1 99 2 226 1 263 1 
238 1 253 1 362 1 294 1 65 1 281 1 117 1 351 1 336 2 25 1 314 1 26 1 175 1 99 2 9 2 11 1 226 1 263 1 
238 1 253 1 62 2 362 2 294 1 95 1 281 1 311 1 245 1 117 1 351 2 336 2 25 1 314 2 26 1 108 1 175 1 99 4 9 2 11 1 226 2 263 1 
238 1 253 1 62 2 362 2 294 1 95 1 281 1 311 1 245 1 117 1 351 2 336 2 25 1 314 2 26 1 108 1 99 4 9 2 11 1 226 2 263 1 
238 1 239 1 289 1 62 1 130 1 291 1 294 1 158 1 296 1 298 1 134 1 174 1 9 1 198 1 137 1 227 1 46 1 253 1 309 1 357 1 281 1 336 2 26 1 315 1 99 2 213 1 263 1 34 1 
238 1 289 1 62 1 291 1 294 1 158 1 296 1 298 1 134 1 106 1 174 1 9 1 198 1 227 1 46 1 253 1 204 1 309 1 357 1 281 1 336 2 26 1 315 1 99 2 213 1 286 1 263 1 34 1 
238 1 253 1 62 2 362 2 294 1 95 1 281 1 311 1 245 1 117 1 351 2 336 2 25 1 314 2 26 1 108 1 99 4 9 2 11 1 226 2 12 1 263 1 
239 1 137 1 318 1 85 1 
238 1 62 2 362 1 294 1 363 1 296 1 245 1 299 1 351 1 108 1 9 1 11 1 12 1 226 1 201 1 45 1 253 1 95 1 281 1 357 1 311 1 117 1 336 2 312 1 26 1 314 1 316 1 99 3 263 1 
189 1 62 9 362 6 294 2 103 1 245 3 222 1 43 1 172 2 108 3 9 10 305 1 11 3 276 1 77 1 95 3 373 2 281 2 311 3 117 3 336 4 25 3 283 2 26 2 358 1 99 19 167 1 236 1 263 2 264 1 
189 1 35 1 62 14 362 4 294 3 103 2 245 3 222 1 172 4 108 3 302 1 161 1 9 12 11 2 77 1 95 2 373 1 281 3 311 3 117 2 24 1 336 6 25 2 26 3 283 2 358 2 55 1 99 26 167 2 236 2 263 3 264 1 100 1 237 2 
266 1 35 1 189 1 62 20 362 8 294 3 103 3 245 4 222 1 172 4 108 5 302 1 161 1 110 1 304 1 9 21 305 1 11 5 276 1 14 1 77 1 95 4 373 1 281 3 311 4 117 4 24 1 336 6 25 4 283 4 26 3 54 1 55 1 358 3 166 1 99 41 167 1 236 2 262 1 263 3 264 1 100 1 237 1 
266 1 35 1 189 1 62 20 362 7 294 4 103 3 245 4 222 1 172 4 108 5 302 1 161 1 110 1 304 1 9 18 305 1 11 4 276 1 14 1 77 1 95 3 373 1 281 4 311 4 117 3 24 1 336 8 25 4 283 4 26 4 54 1 55 1 358 3 166 1 99 38 167 1 236 2 262 1 263 4 264 1 100 1 237 2 
266 1 35 1 189 1 62 27 362 14 294 2 103 4 245 7 222 1 172 4 108 8 302 1 161 1 110 1 304 1 9 25 305 2 11 8 14 1 77 1 95 7 373 1 281 2 311 7 51 2 117 7 24 1 336 4 25 7 283 4 26 2 55 1 358 2 166 1 99 52 167 1 236 1 262 1 263 2 264 1 100 1 237 1 
301 1 307 1 205 1 10 1 89 1 115 1 22 1 343 1 202 1 269 1 
223 1 320 1 
301 1 203 1 307 1 135 1 205 1 10 1 89 1 22 1 96 1 
307 1 308 1 205 1 182 1 280 1 349 1 115 1 22 1 118 1 300 1 301 1 83 1 10 1 89 1 149 2 343 1 59 1 202 1 
307 1 308 1 205 1 182 1 280 1 349 1 115 1 22 1 118 1 300 1 301 1 83 1 10 1 89 1 149 2 343 1 59 1 202 1 
307 1 308 1 205 1 182 1 280 1 349 1 115 1 22 1 118 1 300 1 301 1 83 1 10 1 89 1 149 2 343 1 59 1 202 1 
37 1 176 1 32 1 
37 1 176 1 32 1 
190 1 194 1 
190 1 32 1 194 1 
39 1 127 1 
290 1 320 1 296 2 39 1 298 1 299 2 324 1 300 1 301 1 223 1 10 1 89 1 201 2 45 2 16 1 307 1 182 1 205 1 280 1 22 1 357 2 50 1 23 1 285 1 83 1 149 1 127 1 
37 1 176 1 
190 1 32 1 194 1 
238 1 289 1 348 1 62 1 291 1 294 1 296 2 158 2 299 2 134 2 174 1 177 1 9 1 12 1 227 1 253 1 231 1 309 1 357 2 281 1 336 2 26 1 234 1 315 1 213 2 99 2 124 1 342 1 287 2 30 1 263 1 
134 1 366 1 361 1 377 1 74 1 293 1 213 1 158 1 219 1 85 1 265 1 
354 1 289 1 361 1 293 1 94 1 133 2 158 1 192 1 134 1 366 1 338 1 377 1 174 1 74 1 213 1 56 1 31 1 
289 1 131 1 293 1 155 1 309 1 158 1 134 1 315 1 174 1 213 1 327 1 178 1 265 1 34 1 
289 1 354 1 361 1 293 1 94 1 133 2 158 1 192 1 219 1 134 1 366 1 377 1 174 1 74 1 213 1 56 1 31 1 265 1 
218 1 
145 1 260 1 240 1 221 1 126 1 59 1 105 1 
3 1 240 1 67 1 68 1 40 1 221 1 300 1 250 1 76 1 208 1 260 1 83 1 212 1 211 1 340 1 344 1 59 2 
289 2 1 1 64 1 240 2 104 6 158 1 67 6 68 4 247 2 245 2 105 1 300 5 250 5 108 2 11 2 76 3 306 2 309 6 208 12 311 2 117 2 119 2 260 9 315 1 83 5 211 4 213 1 29 2 126 1 85 1 33 2 128 2 34 1 36 3 38 2 40 4 221 8 134 1 174 1 273 6 275 2 179 1 46 1 229 1 141 1 49 1 337 2 378 2 57 2 344 4 59 8 
35 1 103 1 104 5 240 2 67 3 68 2 40 2 221 5 245 2 300 1 250 1 108 2 273 5 161 1 11 2 179 1 76 1 208 6 311 2 117 2 24 1 337 1 119 1 283 1 260 8 358 1 55 1 186 1 83 1 211 2 379 1 29 2 344 2 59 5 100 1 
266 1 296 1 68 1 40 1 221 2 299 1 300 1 271 1 108 2 8 1 11 1 14 1 369 1 13 1 201 1 45 1 112 1 357 1 81 1 337 1 313 1 312 1 260 2 83 1 211 1 29 2 262 1 344 1 
240 1 40 1 68 1 221 1 105 1 260 1 211 1 126 1 344 1 59 1 
38 1 104 5 208 10 67 5 311 2 245 2 221 5 117 2 337 1 108 2 260 5 273 5 29 2 11 2 59 5 
76 1 300 1 250 1 83 1 240 1 59 1 
289 1 319 1 155 1 158 4 220 1 68 2 40 1 221 2 134 4 300 3 250 4 174 1 196 1 179 2 178 1 76 2 229 1 309 1 258 2 146 1 119 2 315 1 260 2 123 1 83 3 211 2 213 4 344 2 34 2 
238 1 239 1 289 1 130 1 291 1 294 1 158 1 296 3 298 1 299 2 134 1 174 1 9 1 198 1 137 1 201 2 13 1 45 2 46 1 253 1 309 1 281 1 357 3 53 1 336 2 312 2 26 1 315 1 99 1 213 1 263 1 34 1 
104 2 240 2 208 4 67 2 40 1 68 1 221 2 119 1 260 1 273 2 211 1 110 1 179 1 344 1 59 4 
307 1 10 1 256 1 
307 1 10 1 256 1 
307 1 10 1 256 1 
307 1 71 1 10 1 
307 1 10 1 244 1 39 1 202 1 
307 1 71 1 10 1 
307 1 71 1 10 1 
307 1 10 1 
301 1 89 1 
266 1 62 4 362 3 294 2 95 1 281 2 336 4 25 2 26 2 108 1 99 8 166 1 110 1 9 4 304 1 11 1 262 1 14 1 263 2 237 1 
266 1 62 3 362 2 145 1 25 2 108 1 166 1 99 6 110 1 9 3 304 1 262 1 11 1 14 1 
62 2 362 2 230 1 294 1 95 1 281 1 311 1 245 1 117 1 336 2 25 1 26 1 108 1 99 4 9 2 11 1 263 1 
25 1 62 3 283 2 362 2 108 1 358 1 103 1 99 7 95 1 305 1 9 4 11 1 311 1 245 1 117 1 
266 1 62 11 362 9 152 1 103 2 294 2 245 2 108 3 110 1 304 1 305 1 9 12 11 3 14 2 370 1 95 4 311 2 281 2 117 2 51 1 336 4 25 5 283 2 26 2 166 1 99 23 262 2 263 2 237 2 
283 1 99 1 9 1 
62 1 99 1 103 1 
62 3 362 3 230 1 294 1 38 1 95 1 281 1 311 1 245 1 117 1 336 2 25 2 26 1 108 1 99 6 9 3 11 1 263 1 
35 1 62 6 362 2 103 1 294 1 245 2 108 2 161 1 9 6 11 2 95 1 281 1 311 2 117 2 24 1 336 2 25 1 283 1 26 1 358 1 55 1 99 12 263 1 264 1 100 1 
266 1 62 3 362 2 95 1 25 1 108 1 99 6 9 3 11 1 262 1 14 1 
62 1 362 2 152 1 294 1 95 1 281 1 336 2 25 1 26 1 99 3 166 1 304 1 9 2 262 1 14 1 263 1 237 1 
266 1 62 5 362 5 294 1 95 2 281 1 336 2 313 1 25 3 26 1 108 2 99 10 9 5 262 2 11 2 14 2 263 1 264 1 
62 2 362 1 294 1 95 1 281 1 245 1 336 2 26 1 108 1 99 2 264 1 263 1 
62 2 362 2 294 1 95 1 281 1 311 1 245 1 117 1 336 2 25 1 26 1 108 1 99 4 9 2 11 1 264 1 263 1 
62 1 152 1 362 2 294 3 95 1 281 3 336 6 25 1 26 3 99 3 9 2 262 1 276 1 14 1 264 1 263 3 237 1 
266 2 62 16 152 1 362 12 294 5 103 3 245 3 108 5 110 1 304 1 9 18 305 1 11 5 276 1 14 3 230 1 95 5 209 1 281 5 311 3 232 1 117 3 336 10 25 7 283 4 26 5 358 1 82 1 166 1 99 34 262 3 263 5 264 1 237 2 
266 1 62 4 362 2 103 1 294 1 108 1 110 1 9 4 304 1 11 1 14 1 281 1 336 2 25 2 283 1 26 1 358 1 55 1 99 8 166 1 262 1 263 1 264 1 
266 1 62 6 362 3 294 2 103 1 245 1 108 2 110 1 304 1 9 5 305 1 11 1 14 1 230 1 95 1 281 2 311 1 336 4 25 2 283 2 26 2 358 1 55 1 166 1 99 11 262 1 264 1 263 2 
266 1 35 1 62 9 362 4 103 1 294 3 245 2 108 3 161 1 110 1 304 1 9 10 11 3 14 1 230 1 95 1 281 3 311 2 117 2 24 1 336 6 25 3 283 1 26 3 358 1 55 1 166 1 99 19 262 1 263 3 264 1 100 1 237 1 
266 1 35 1 62 10 362 5 103 1 294 3 245 2 108 3 161 1 110 1 304 1 9 7 11 2 14 1 230 1 95 2 281 3 311 2 117 1 24 1 336 6 25 3 283 1 26 3 358 1 55 1 166 1 99 17 262 1 263 3 264 1 100 1 237 1 
266 1 62 4 362 2 103 1 294 1 108 1 110 1 9 4 304 1 11 1 14 1 281 1 336 2 25 2 283 1 26 1 358 1 55 1 99 8 166 1 262 1 263 1 264 1 
35 1 62 6 362 2 103 1 294 1 245 2 108 2 161 1 9 6 11 2 95 1 281 1 311 2 117 2 24 1 336 2 25 1 283 1 26 1 358 1 55 1 99 12 263 1 264 1 100 1 
266 1 35 1 62 10 362 5 294 4 103 1 245 2 108 3 161 1 110 1 304 1 9 8 11 2 14 1 230 1 95 2 281 4 311 2 117 1 24 1 336 8 25 3 283 1 26 4 358 1 55 1 166 1 99 18 262 1 263 4 264 1 100 1 237 2 
35 1 62 9 362 6 294 4 103 1 245 3 108 3 161 1 9 7 11 2 276 1 95 3 281 4 311 3 117 2 24 1 336 8 25 3 283 1 26 4 358 1 55 1 99 16 264 1 263 4 100 1 237 2 
266 1 62 3 362 6 95 3 25 3 108 1 99 7 166 1 9 4 304 2 11 1 262 3 14 3 
266 1 35 1 62 10 362 4 294 4 103 1 245 2 108 3 161 1 110 1 304 1 9 8 11 2 276 1 14 1 95 1 281 4 311 2 117 1 24 1 336 8 25 3 283 1 26 4 358 1 55 1 166 1 99 18 262 1 264 1 263 4 100 1 237 2 
251 1 371 1 148 1 296 1 357 1 298 1 299 1 
371 1 296 1 321 1 357 1 297 1 298 1 299 1 251 1 148 1 72 1 125 1 215 1 
134 1 289 1 145 1 315 1 174 1 155 1 213 1 309 1 158 1 178 1 34 1 
46 1 289 1 130 1 309 1 21 1 296 2 158 1 357 2 298 1 299 1 134 1 315 1 174 1 213 1 198 1 201 1 45 1 34 1 
289 1 130 1 154 1 158 1 296 2 298 1 299 2 134 1 174 1 198 1 201 1 45 2 46 2 139 1 309 3 48 1 21 1 80 1 357 2 258 1 81 1 315 2 213 1 
289 1 129 1 154 1 158 2 296 2 298 1 299 2 134 2 106 1 174 1 198 1 201 1 45 2 46 2 139 1 309 3 48 1 21 1 80 1 357 2 258 1 81 1 315 2 213 2 
46 1 216 1 61 1 289 1 36 1 129 1 154 1 240 1 48 1 309 4 158 3 258 1 134 3 300 2 250 1 315 1 174 1 83 2 213 3 57 1 59 1 128 1 34 1 
46 1 289 1 306 1 36 1 129 1 154 1 240 1 48 1 309 4 158 3 258 1 134 3 300 2 250 1 315 1 174 1 83 2 213 3 57 1 59 1 128 1 34 1 
134 1 289 1 174 1 213 1 331 1 158 1 
46 1 348 1 289 2 64 1 309 1 191 1 158 2 259 1 6 1 134 2 315 1 121 1 174 1 339 1 213 2 85 1 34 2 
238 1 253 1 294 1 231 1 21 1 296 1 357 1 281 1 299 1 336 2 26 1 12 1 201 1 263 1 45 1 85 1 
36 1 240 1 158 1 68 2 40 2 221 1 247 1 105 1 134 1 300 3 250 2 275 1 76 1 229 1 306 1 309 2 260 1 285 1 83 3 213 1 211 2 57 1 126 1 344 2 59 1 33 1 128 1 34 1 
46 1 289 2 141 1 331 1 64 1 309 2 158 1 134 1 315 1 174 1 213 1 85 1 128 1 
111 1 46 1 289 2 309 1 158 1 134 1 284 1 315 1 121 1 174 1 339 1 213 1 178 1 85 1 34 1 
111 1 46 1 289 2 309 1 158 2 258 1 134 2 284 1 315 1 121 1 174 1 325 1 339 1 213 2 
134 1 289 1 354 1 174 1 213 1 133 1 56 1 158 1 192 1 34 1 
134 1 377 1 213 1 158 1 85 1 
134 1 213 1 158 1 85 1 34 1 
134 1 348 1 120 1 213 1 158 1 85 1 34 1 
46 1 289 1 309 1 21 1 296 2 158 1 357 2 298 1 299 1 134 1 106 1 315 1 174 1 213 1 198 1 201 1 45 1 34 1 
46 1 289 2 64 1 309 1 158 1 258 1 6 1 134 1 315 1 121 1 174 1 339 1 213 1 
225 1 199 1 188 1 298 1 69 1 
139 1 181 1 217 1 240 1 332 1 80 1 298 1 81 1 69 2 300 2 285 1 83 2 27 1 214 1 199 1 225 2 57 1 188 2 59 1 
234 1 177 1 296 1 342 1 199 1 225 1 357 1 188 1 299 1 
332 1 214 1 199 1 
145 1 292 1 90 1 101 1 
347 1 279 1 292 1 241 1 90 1 246 1 101 1 
279 1 333 1 243 1 
347 1 279 3 330 1 292 1 241 3 5 1 246 1 303 2 187 1 341 1 90 1 101 1 
347 1 279 1 241 2 58 1 210 1 246 1 
347 1 180 1 279 1 330 1 241 1 133 1 192 1 246 1 122 1 31 1 101 1 
347 1 279 1 330 1 292 1 241 1 246 1 101 1 
347 1 279 1 330 1 292 2 241 1 90 1 246 1 
347 2 151 1 279 2 330 1 292 1 241 2 157 1 246 2 368 1 101 1 
347 1 279 3 330 1 153 1 292 1 241 3 246 1 122 1 90 1 353 1 345 1 58 2 101 2 
347 1 279 2 330 1 292 1 94 1 66 1 133 2 241 2 192 1 246 1 56 1 90 1 31 1 58 1 101 1 
347 1 279 1 330 1 47 1 241 2 58 1 210 1 246 1 
347 1 279 1 330 1 292 1 241 1 90 1 246 1 101 1 
347 1 279 4 292 2 241 4 5 1 246 1 173 1 303 1 122 1 187 1 90 2 353 1 58 2 101 3 
347 1 279 2 330 1 292 1 86 1 241 2 246 1 376 1 84 1 90 1 58 1 101 1 
347 1 279 3 330 1 292 1 241 3 20 1 5 2 246 1 303 2 187 1 90 1 101 1 
270 1 249 2 116 1 101 2 
347 1 279 1 330 1 241 1 322 1 246 1 
347 1 279 2 330 1 153 1 292 1 241 2 90 1 58 1 246 1 101 1 
19 1 
347 1 279 1 330 1 292 1 241 1 90 1 246 1 101 1 
347 1 279 3 330 1 153 1 292 1 241 3 246 1 303 1 90 1 58 1 101 1 
173 1 122 1 353 1 101 1 
292 1 101 1 

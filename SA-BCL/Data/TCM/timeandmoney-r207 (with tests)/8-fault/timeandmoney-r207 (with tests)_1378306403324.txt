#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 231 (206,258) (206,258) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 231 (206,258) (206,258) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 231 (206,258) (206,258) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 231 (206,258) (206,258) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 287 168 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 343 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 299 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | ASSIGN | 1192 | = null
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
202 1 216 1 106 1 129 1 34 1 206 1 147 1 258 1 185 1 231 1 345 1 
202 1 216 1 106 1 129 1 34 1 206 1 147 1 258 1 185 1 231 1 345 1 
202 1 216 1 106 1 129 1 34 1 206 1 147 1 258 1 185 1 231 1 345 1 
202 1 216 1 106 1 129 1 34 1 206 1 147 1 258 1 185 1 231 1 345 1 
129 4 34 1 172 1 361 3 79 1 0 2 63 1 216 1 202 4 289 2 66 1 324 1 31 1 325 3 86 1 50 1 41 1 345 1 
129 2 54 1 34 1 185 1 216 1 202 2 337 1 106 1 3 1 31 1 324 1 325 1 86 1 230 1 41 1 345 1 
129 3 157 1 34 2 172 1 361 1 0 1 216 2 202 3 106 1 325 2 86 1 41 1 345 1 
129 9 172 3 245 1 0 4 104 1 202 9 106 1 289 2 31 1 324 1 325 5 50 1 157 1 34 2 361 7 79 1 63 1 277 1 216 2 302 1 66 1 86 1 41 1 345 1 
129 9 172 3 245 1 0 4 104 1 202 9 106 1 289 2 31 1 324 1 325 5 50 1 157 1 34 2 361 7 79 1 63 1 277 1 216 2 302 1 66 1 86 1 41 1 345 1 
20 1 43 1 78 1 
43 1 44 2 250 1 
360 2 153 2 125 1 155 2 39 2 375 1 210 2 278 2 
68 1 101 2 25 1 284 2 196 2 198 1 73 2 47 1 227 1 151 1 176 1 153 3 155 3 210 2 52 1 95 1 359 1 360 2 184 1 297 1 214 1 124 1 125 1 186 1 300 1 278 2 364 1 234 1 142 1 367 2 84 1 341 1 304 1 342 1 374 1 39 2 375 1 
194 1 57 1 183 1 360 1 125 1 278 1 153 1 39 1 155 1 210 1 
194 2 43 1 92 1 8 1 205 1 153 2 328 1 209 1 155 2 210 1 117 1 57 1 183 1 360 1 125 1 278 1 256 1 20 1 166 1 308 1 39 2 
194 2 43 1 92 1 8 1 205 1 153 2 328 2 155 2 209 2 210 2 57 1 360 2 183 1 125 1 278 2 256 1 20 1 308 1 39 2 
246 1 69 1 265 1 328 1 209 1 
20 1 46 1 246 1 332 1 69 1 43 1 328 2 209 2 
69 1 328 1 209 1 
194 1 57 1 183 1 360 1 125 1 278 1 246 1 205 1 153 1 328 1 209 1 39 1 155 1 210 1 
43 1 
20 1 46 1 246 1 247 1 69 1 43 1 328 2 209 2 
146 1 311 1 69 2 43 1 122 1 275 1 140 1 20 1 46 1 246 2 1 2 134 2 109 1 292 1 164 2 49 1 328 5 127 1 209 5 
101 1 25 1 284 1 285 1 95 1 360 1 297 1 73 1 300 1 234 1 47 1 151 1 304 1 341 1 162 1 153 2 12 1 39 1 155 2 210 1 
78 1 375 1 
116 1 360 1 278 1 187 1 153 2 39 2 155 2 210 1 375 2 
286 1 90 1 12 1 
101 1 25 1 284 1 219 1 95 1 297 1 73 1 300 1 234 1 47 1 151 1 341 1 304 1 153 1 155 1 375 1 
285 1 360 3 153 3 155 3 39 3 278 1 375 1 210 3 
194 1 57 1 360 1 153 1 155 1 39 1 210 1 
194 1 187 1 116 1 360 1 153 1 155 1 39 1 210 1 278 1 
194 1 68 1 101 1 25 1 284 1 196 2 198 1 285 1 73 1 47 1 92 1 227 1 151 1 204 1 176 1 8 1 153 4 328 1 155 4 209 1 210 3 52 1 116 1 95 1 360 3 297 1 214 1 125 1 300 1 278 2 364 1 234 1 256 1 142 1 367 1 84 1 304 1 341 1 162 1 374 1 308 1 167 1 39 3 375 1 
117 1 285 1 360 1 222 1 153 2 155 2 39 2 375 1 210 1 
116 1 194 1 285 2 360 3 43 1 278 1 256 1 92 1 204 1 8 1 162 1 153 3 328 1 308 1 209 1 39 3 155 3 38 1 210 3 
116 1 360 1 153 1 12 1 155 1 39 1 210 1 278 1 
101 1 25 1 284 1 95 1 297 1 73 1 300 1 234 1 47 1 341 1 304 1 151 1 153 1 155 1 375 1 
101 1 25 1 284 1 95 1 132 1 297 1 201 1 73 1 300 1 234 1 304 1 151 1 153 1 155 1 375 1 
52 1 17 1 42 1 211 1 196 2 88 1 286 1 214 1 90 1 364 2 215 1 142 1 367 2 227 1 84 1 229 1 126 1 374 1 12 1 
194 1 360 1 264 1 92 1 153 1 39 1 155 1 210 1 
116 1 117 1 285 2 346 1 360 4 222 1 298 1 278 1 162 1 153 5 39 5 155 5 210 4 375 1 
194 1 57 1 360 1 153 1 155 1 39 1 210 1 
269 1 138 1 
269 1 138 1 
100 1 133 1 
100 1 133 1 
100 1 133 1 
178 1 269 1 138 1 
178 1 269 1 138 1 
269 1 138 1 318 1 
269 2 207 1 316 1 100 1 133 1 138 2 
178 1 269 1 138 1 
353 1 269 1 138 1 
353 1 269 1 138 1 
353 1 269 1 138 1 
334 1 43 1 59 2 138 2 174 1 276 1 319 2 351 3 303 1 368 2 269 2 6 2 207 1 11 2 217 1 373 1 259 1 328 2 209 2 
221 1 318 1 319 1 351 1 5 1 6 1 269 1 150 1 11 1 10 1 153 2 328 1 209 1 155 2 210 2 56 1 360 2 120 1 138 1 276 1 236 1 368 1 39 2 375 1 
324 1 31 1 63 1 
3 1 324 1 31 1 
24 1 3 1 252 1 31 3 62 1 63 2 
24 1 131 1 3 1 31 2 62 1 63 1 
24 1 3 1 31 2 63 1 62 2 
195 1 260 1 310 2 69 1 242 1 221 1 70 1 88 1 43 2 44 3 173 1 46 1 1 1 246 4 225 1 134 1 29 1 292 1 229 1 250 1 328 5 209 5 156 2 56 1 120 1 60 1 275 3 140 2 20 1 145 1 164 1 239 2 
194 1 69 1 313 1 43 1 265 1 246 2 2 1 290 1 205 1 153 1 328 2 209 2 155 1 210 1 57 1 183 1 360 1 125 1 278 1 20 1 39 1 
195 1 260 1 311 1 310 2 242 1 88 1 43 3 44 4 173 1 246 2 1 1 225 1 134 1 29 1 229 1 250 2 328 3 209 3 156 2 56 1 275 3 140 2 20 1 164 1 145 1 239 1 
130 1 195 1 260 1 310 4 311 1 242 1 88 2 43 4 44 7 173 2 1 1 246 3 225 2 134 1 29 1 229 2 250 3 328 4 32 1 209 4 156 4 94 1 56 2 275 5 140 4 20 1 164 1 145 2 239 2 
151 1 152 1 78 1 
151 1 287 1 
350 1 
151 1 300 1 
25 1 151 3 152 2 163 1 371 1 300 1 
25 1 151 1 300 1 
151 1 282 1 
358 1 17 3 283 1 333 1 262 1 359 4 253 2 255 1 200 1 99 1 364 3 225 1 367 7 229 1 126 2 344 1 114 1 
358 1 17 3 283 1 333 1 262 1 359 4 253 2 255 1 200 1 99 1 364 3 225 1 367 7 229 1 126 2 344 1 114 1 
358 1 17 3 283 1 333 1 262 1 359 4 253 2 255 1 200 1 99 1 364 3 225 1 367 7 111 1 229 1 126 2 344 1 114 1 
283 2 196 4 220 3 88 3 173 3 348 2 225 3 227 2 291 1 229 3 51 1 114 1 52 2 358 4 17 6 18 1 333 1 359 11 253 1 363 1 255 1 99 1 364 12 367 23 339 1 84 2 22 1 144 1 145 3 374 2 126 2 23 4 
283 1 196 4 262 1 200 1 348 1 225 1 227 2 229 1 114 1 52 2 17 4 358 1 359 5 253 2 255 1 139 1 99 1 364 4 338 1 367 9 84 2 374 2 126 3 344 1 
101 1 129 2 309 1 284 1 312 1 73 1 202 2 106 1 3 1 322 1 324 1 31 2 325 1 154 1 251 1 34 1 121 1 252 1 361 1 254 1 80 1 63 1 216 1 234 1 304 1 37 1 86 1 41 1 345 1 40 1 
101 1 129 3 309 1 284 1 73 1 202 3 106 1 3 1 322 1 324 1 31 2 325 1 154 1 13 1 251 1 55 1 34 1 252 1 121 1 361 2 80 1 63 1 216 1 234 1 141 1 304 1 37 1 86 1 41 1 40 1 
101 1 129 2 284 1 73 1 202 2 106 1 3 1 322 1 31 2 324 1 325 1 154 1 251 1 55 1 121 1 252 1 361 2 63 1 234 1 141 1 304 1 37 1 86 1 41 1 40 1 
101 1 129 1 284 1 73 1 202 1 106 2 108 1 151 1 9 1 228 1 327 1 13 1 154 2 34 1 95 1 97 1 121 2 300 1 234 1 216 1 304 1 37 2 192 1 
101 1 129 1 309 1 284 1 73 1 202 1 106 1 3 1 322 1 324 1 31 2 154 1 251 1 55 1 34 1 121 1 252 1 254 1 80 1 63 1 216 1 234 1 304 1 37 1 345 1 40 1 
295 1 
170 2 260 1 223 2 43 2 44 2 224 1 46 3 1 1 92 1 134 1 8 1 9 1 328 5 53 2 271 1 95 2 19 2 275 2 140 2 233 1 234 1 20 1 336 1 65 1 281 1 194 1 101 2 284 2 241 1 69 6 243 2 244 4 73 2 349 1 108 1 110 1 292 1 151 1 293 1 153 1 250 2 209 5 155 1 117 1 118 2 213 2 362 1 300 1 256 1 304 1 164 1 166 1 372 1 308 1 39 1 
194 1 69 2 243 1 244 2 43 1 224 1 46 1 349 1 247 1 92 1 110 1 8 1 153 1 328 3 155 1 209 3 271 1 117 1 256 1 20 1 65 1 166 1 308 1 39 1 
194 1 271 1 117 1 43 1 244 3 213 1 224 1 20 1 256 1 349 1 92 1 65 1 110 1 8 1 166 1 153 1 328 2 308 1 209 2 39 1 155 1 
194 1 170 1 69 2 243 1 244 3 43 1 224 1 46 1 349 1 247 1 92 1 110 1 8 1 153 1 328 3 155 1 209 3 271 1 117 1 213 1 256 1 20 1 65 1 166 1 308 1 39 1 
170 4 171 1 43 3 223 2 224 1 46 3 1 1 92 1 134 1 8 1 328 5 53 2 271 1 180 1 57 1 183 1 19 2 61 1 275 1 278 1 140 1 20 3 65 1 281 1 194 2 241 1 69 7 243 4 244 5 349 1 105 1 247 1 110 1 30 1 292 1 205 1 153 2 250 2 155 2 209 5 210 1 117 1 118 2 360 1 213 3 125 1 256 1 164 1 166 1 308 1 39 2 
170 2 43 3 223 2 44 2 224 1 46 2 1 1 92 1 134 1 8 1 328 4 53 2 271 1 19 2 275 1 140 1 20 2 65 1 281 1 194 1 241 1 69 4 243 2 244 4 349 1 110 1 292 1 153 1 250 2 155 1 209 4 117 1 118 2 213 2 362 1 256 1 164 1 166 1 308 1 39 1 
194 1 170 2 241 1 69 4 243 2 223 2 244 4 43 2 224 1 46 2 349 1 105 1 1 1 92 1 134 1 110 1 292 1 8 1 153 1 250 2 328 4 155 1 209 4 53 2 180 1 271 1 117 1 118 2 213 2 19 2 61 1 275 1 140 1 256 1 20 2 65 1 164 1 166 1 281 1 308 1 39 1 
194 1 170 2 241 1 69 4 243 2 223 2 244 4 43 2 224 1 46 2 349 1 105 1 1 1 92 1 134 1 110 1 292 1 8 1 153 1 250 2 328 4 155 1 209 4 53 2 180 1 271 1 117 1 118 2 213 2 19 2 61 1 275 1 140 1 256 1 20 2 65 1 164 1 166 1 281 1 308 1 39 1 
194 1 170 2 241 1 69 4 243 2 223 2 244 4 43 2 44 2 317 1 224 1 46 2 349 1 1 1 92 1 134 1 110 1 292 1 8 1 153 1 328 4 155 1 209 4 115 1 180 1 271 1 117 1 98 1 213 2 19 2 35 2 275 1 140 1 256 1 20 2 65 1 340 2 164 1 166 1 308 1 39 1 
194 1 170 3 241 1 69 5 243 3 223 2 244 5 43 2 224 1 46 2 349 1 1 1 105 1 92 1 134 1 110 1 292 1 30 1 8 1 153 1 250 2 328 4 155 1 209 4 53 2 180 1 271 1 117 1 118 2 19 2 213 3 61 1 275 1 140 1 256 1 20 2 65 1 164 1 166 1 281 1 308 1 39 1 
194 1 170 3 241 1 69 5 243 3 223 2 244 5 43 2 224 1 46 2 349 1 1 1 105 1 92 1 134 1 110 1 292 1 30 1 8 1 153 1 250 2 328 4 155 1 209 4 53 2 180 1 271 1 117 1 118 2 19 2 213 3 61 1 275 1 140 1 256 1 20 2 65 1 164 1 166 1 281 1 308 1 39 1 
170 2 43 2 223 2 44 2 224 1 317 1 46 2 1 1 92 1 134 1 8 1 328 4 271 1 19 2 275 1 140 1 20 2 65 1 340 2 194 1 241 1 69 4 243 2 244 4 349 1 110 1 292 1 153 1 155 1 209 4 117 1 213 2 362 1 35 2 256 1 164 1 166 1 308 1 39 1 
52 1 17 2 211 1 196 2 359 2 262 1 214 1 78 1 200 1 255 2 364 3 142 1 225 1 367 5 227 1 84 1 229 1 126 2 374 1 344 1 375 2 114 2 
196 4 220 3 286 12 173 3 90 12 225 3 227 2 291 1 93 1 176 1 12 12 270 1 52 2 358 3 17 3 359 10 136 1 214 1 124 1 364 5 142 2 367 15 84 2 22 2 145 3 305 1 87 1 374 2 375 1 23 4 
196 2 285 1 90 1 227 1 93 1 176 1 153 1 155 1 210 1 52 1 359 1 360 1 274 1 214 1 124 1 36 1 364 1 142 1 367 2 84 1 162 1 374 1 39 1 
173 1 90 2 47 1 225 1 227 2 93 1 176 1 12 2 52 2 17 3 179 1 95 1 234 1 142 2 235 1 341 1 145 1 101 1 25 1 284 1 196 4 285 1 198 1 103 1 286 2 73 1 27 1 151 1 153 2 155 2 210 1 358 2 296 1 359 3 360 1 297 1 214 2 300 1 364 2 367 5 84 2 304 1 162 1 374 2 126 1 39 1 
101 2 25 1 284 2 196 2 347 1 73 2 149 1 227 1 108 1 203 1 151 2 176 1 9 1 52 1 95 1 119 1 359 1 272 1 77 1 184 1 214 1 124 1 300 2 234 3 364 1 142 1 367 2 304 2 84 1 374 1 
196 2 88 1 286 1 173 1 90 1 225 1 227 1 93 1 153 1 229 1 12 1 155 1 210 1 116 1 52 1 17 1 16 1 359 1 360 1 214 1 278 1 364 2 142 1 367 3 84 1 145 1 126 1 374 1 39 1 
52 1 17 1 358 1 211 1 196 2 359 2 286 1 214 1 90 1 142 1 225 1 367 2 227 1 84 1 145 1 374 1 12 1 135 1 
52 1 17 1 42 1 211 1 196 2 88 1 286 1 214 1 90 1 364 2 142 1 367 2 227 1 84 1 229 1 126 1 374 1 12 1 
196 2 88 1 286 2 173 1 90 2 225 1 227 1 229 1 12 2 52 1 358 1 17 2 211 1 359 2 214 1 364 2 142 1 367 4 84 1 145 1 374 1 126 1 
52 1 17 1 358 1 196 2 359 2 77 1 286 1 214 1 90 1 142 1 225 1 367 2 227 1 84 1 145 1 374 1 12 1 135 1 
52 1 17 1 42 1 196 2 77 1 88 1 286 1 214 1 90 1 364 2 142 1 367 2 227 1 84 1 229 1 126 1 374 1 12 1 
52 1 17 1 358 1 196 2 359 2 77 1 286 1 214 1 173 1 90 1 142 1 225 1 367 2 227 1 84 1 145 1 374 1 12 1 
52 1 17 1 358 1 196 2 359 2 286 1 214 1 173 1 90 1 142 1 225 1 227 1 367 2 84 1 145 1 374 1 12 1 
101 1 25 1 284 1 196 2 198 1 73 1 47 1 227 1 151 1 176 1 153 1 155 1 52 1 95 1 359 1 297 1 214 1 124 1 300 1 234 1 364 1 142 1 367 2 304 1 341 1 84 1 374 1 375 1 
101 1 25 1 284 1 196 2 132 1 201 1 73 1 352 1 227 1 151 1 176 1 153 1 155 1 52 1 95 1 359 1 297 1 214 1 124 1 300 1 234 1 364 1 142 1 367 2 304 1 84 1 374 1 375 1 
52 1 17 1 358 1 196 2 359 2 286 1 214 1 173 1 90 1 142 1 225 1 367 2 227 1 93 1 84 1 145 1 374 1 12 1 
101 1 25 1 284 1 312 1 196 2 198 1 286 1 173 1 90 1 73 1 47 1 225 1 227 1 151 1 153 1 12 1 155 1 52 1 17 1 358 1 179 1 359 2 297 1 214 1 300 1 234 1 142 1 367 2 304 1 341 1 84 1 145 1 374 1 
196 2 286 1 173 1 90 1 225 1 227 1 93 1 153 1 155 1 12 1 210 1 116 1 52 1 33 1 17 1 358 1 359 2 360 1 214 1 278 1 142 1 367 2 84 1 145 1 374 1 39 1 
218 1 196 8 220 5 261 1 314 1 88 5 173 7 288 1 348 2 48 1 225 7 227 4 268 1 355 1 291 3 248 1 249 1 229 5 52 4 358 6 17 10 96 1 76 1 359 25 136 2 123 1 365 2 364 21 21 1 188 4 338 1 367 46 84 4 22 2 145 7 126 4 374 4 23 5 
218 1 196 8 220 2 261 1 314 1 88 4 173 4 288 1 348 2 48 1 225 4 227 4 268 1 355 1 291 2 248 1 249 1 229 4 52 4 358 3 17 5 96 1 359 16 123 1 365 1 364 17 21 1 188 4 338 1 367 33 84 4 22 1 145 4 126 2 374 4 23 3 
218 1 196 6 220 4 261 1 262 1 314 1 88 7 173 7 288 1 200 1 348 2 225 8 227 3 268 1 355 1 291 2 248 1 249 1 229 8 114 1 52 3 358 6 17 14 96 1 359 27 136 2 253 1 123 1 255 1 365 1 364 27 21 1 188 4 338 1 367 54 84 3 22 2 145 7 344 1 126 8 374 3 23 4 
102 1 218 1 196 8 220 2 314 1 88 4 173 4 288 1 348 2 48 1 225 4 227 4 268 1 355 1 291 2 248 1 249 1 229 4 52 4 358 3 17 6 96 1 359 15 123 1 365 1 364 16 21 1 188 3 338 1 367 31 84 4 22 1 145 4 126 3 374 4 23 3 
218 1 196 6 220 4 261 1 314 1 88 6 173 7 288 1 348 2 225 7 227 3 268 1 355 1 291 2 248 1 249 1 229 6 52 3 358 4 17 8 96 1 359 24 136 2 123 1 364 22 365 2 21 2 188 4 338 1 367 46 84 3 22 2 145 7 374 3 126 4 23 4 
319 1 303 1 368 1 6 1 269 1 207 1 11 1 138 1 259 1 112 1 
150 1 318 1 
319 1 226 1 159 1 368 1 83 1 6 1 269 1 11 1 138 1 
43 1 59 1 138 1 174 1 276 1 319 1 351 2 303 1 368 1 269 1 6 1 207 1 11 1 217 1 373 1 259 1 328 1 209 1 
43 1 59 1 138 1 174 1 276 1 319 1 351 2 303 1 368 1 269 1 6 1 207 1 11 1 217 1 373 1 259 1 328 1 209 1 
43 1 59 1 138 1 174 1 276 1 319 1 351 2 303 1 368 1 269 1 6 1 207 1 11 1 217 1 373 1 259 1 328 1 209 1 
178 1 366 1 316 1 
178 1 366 1 316 1 
353 1 143 1 
353 1 143 1 316 1 
236 1 5 1 
221 1 318 1 319 1 246 1 351 1 5 1 6 1 269 1 150 1 11 1 10 1 153 2 328 1 155 2 209 1 14 1 210 2 56 1 120 1 360 2 59 1 138 1 236 1 368 1 373 1 39 2 375 1 
178 1 366 1 
353 1 143 1 316 1 
101 2 284 2 196 2 197 1 73 2 149 1 227 1 151 1 93 1 175 1 323 1 176 1 153 2 155 2 52 1 359 1 184 2 214 1 124 1 300 1 234 1 364 1 142 1 237 1 367 2 304 1 84 1 369 1 165 1 374 1 39 2 
251 1 101 2 309 1 284 2 55 1 312 1 252 1 71 1 63 1 73 2 234 1 161 1 3 1 304 1 322 1 324 1 31 2 280 1 154 1 
251 1 101 1 309 1 284 1 55 1 252 1 63 1 73 1 81 1 234 1 3 1 322 1 304 1 324 1 31 2 280 1 154 1 
101 1 284 1 212 1 95 1 71 1 73 1 300 1 234 1 108 1 304 1 151 1 9 1 154 1 192 1 
251 1 101 1 309 1 284 1 55 1 252 1 71 1 63 1 73 1 234 1 161 1 3 1 322 1 304 1 324 1 31 2 280 1 154 1 
107 1 
20 1 43 1 122 1 78 1 275 1 127 1 140 1 
69 1 43 2 44 1 46 1 1 1 134 1 292 1 250 1 328 1 209 1 53 1 118 1 275 1 140 1 20 1 164 1 281 1 
168 1 101 1 25 1 284 1 95 1 287 1 73 1 300 1 234 2 1 1 134 1 304 1 151 1 292 1 163 1 164 1 191 1 
260 1 310 8 220 2 69 1 43 7 88 4 44 10 173 4 148 1 46 1 1 2 225 4 134 2 268 1 355 1 291 1 292 2 248 1 229 4 328 1 250 5 294 3 177 1 209 1 156 8 96 1 137 1 136 1 123 1 275 13 233 1 140 8 20 2 22 1 164 2 145 4 23 2 
194 1 262 1 1 1 105 1 225 2 134 1 292 1 205 1 153 1 229 1 294 2 328 1 177 1 155 1 357 1 209 1 114 1 210 1 57 1 183 1 360 1 255 1 125 1 275 2 140 2 278 1 164 1 39 1 
43 1 122 1 275 1 140 1 20 1 1 1 134 1 292 1 164 1 127 1 
310 5 43 5 88 2 44 10 173 2 275 5 140 5 225 2 235 1 145 2 229 2 294 2 250 5 177 1 156 5 
20 1 46 1 69 1 43 1 328 1 209 1 
169 1 101 4 284 4 260 2 311 1 69 4 72 2 73 4 46 2 1 2 134 2 108 1 151 1 292 1 9 1 293 1 328 3 209 3 95 2 275 2 300 1 233 2 140 2 301 1 234 1 336 1 304 1 164 2 238 1 
101 1 68 1 25 1 284 1 196 2 198 1 73 1 47 1 227 1 151 1 176 1 153 3 155 3 210 2 52 1 95 1 360 2 297 1 214 1 125 1 278 2 300 1 364 1 234 1 142 1 367 1 341 1 304 1 84 1 374 1 39 2 375 1 
260 1 310 2 43 4 44 4 253 1 275 1 140 2 233 1 20 2 1 1 134 1 292 1 164 1 250 2 156 2 
267 1 368 1 6 1 
267 1 368 1 6 1 
232 1 236 1 368 1 6 1 259 1 
267 1 368 1 6 1 
368 1 6 1 113 1 
368 1 6 1 113 1 
368 1 6 1 113 1 
368 1 6 1 
269 1 138 1 
196 4 220 1 262 2 88 1 173 2 200 1 348 1 225 5 227 2 355 1 268 1 291 1 248 1 229 4 357 1 114 2 52 2 358 4 17 9 96 1 359 14 253 1 123 1 255 2 364 10 338 1 367 24 84 2 145 2 344 1 374 2 126 5 23 1 
196 4 220 1 262 1 173 1 200 1 225 2 227 2 355 1 291 1 229 1 326 1 114 1 52 2 358 1 17 3 359 6 253 1 255 1 364 5 338 1 367 11 84 2 22 1 145 1 126 2 344 1 374 2 23 2 
196 6 220 2 262 1 88 4 173 4 200 1 348 1 225 5 227 3 268 1 355 1 291 1 248 1 326 1 229 5 114 1 52 3 17 6 358 2 96 1 359 14 136 1 253 1 123 1 255 1 364 15 338 1 367 29 84 3 22 1 145 4 344 1 374 3 126 4 23 2 
196 6 220 2 262 1 88 3 173 4 200 1 348 1 225 5 227 3 268 1 355 1 291 1 248 1 326 1 229 4 114 1 52 3 17 7 358 3 96 1 359 15 136 1 253 1 123 1 255 1 364 12 338 1 367 27 84 3 22 1 145 4 344 1 374 3 126 4 23 2 
196 4 220 1 262 2 88 1 173 2 200 1 348 1 225 5 227 2 355 1 268 1 291 1 248 1 229 4 357 1 114 2 52 2 358 4 17 9 96 1 359 14 253 1 123 1 255 2 364 10 338 1 367 24 84 2 145 2 344 1 374 2 126 5 23 1 
196 2 220 2 88 4 173 4 225 4 227 1 268 1 355 1 291 1 248 1 229 4 52 1 17 4 358 2 96 1 359 11 136 1 123 1 364 11 338 1 367 22 84 1 22 1 145 4 374 1 126 2 23 2 
196 8 220 2 262 1 88 3 173 4 200 1 348 2 225 5 227 4 268 1 355 1 291 1 248 1 326 1 229 4 114 1 52 4 17 7 358 3 96 1 359 15 136 1 253 1 123 1 255 1 364 13 338 1 367 28 84 4 22 1 145 4 344 1 374 4 126 4 23 2 
196 4 220 1 88 1 173 1 48 1 225 1 227 2 355 1 291 1 229 1 52 2 17 1 359 3 364 4 338 1 367 7 84 2 22 1 145 1 374 2 126 1 23 2 
17 6 358 3 262 1 359 3 200 1 255 3 364 4 225 1 367 7 229 1 344 2 126 3 114 3 
196 4 220 1 88 1 173 1 48 1 225 1 227 2 355 1 291 1 229 1 52 2 17 1 359 3 364 4 338 1 367 7 84 2 22 1 145 1 374 2 126 1 23 2 
52 2 358 1 17 3 196 4 262 1 359 4 253 1 200 1 255 1 364 4 348 1 225 1 367 8 227 2 84 2 229 1 126 2 374 2 344 1 114 1 
17 2 262 1 359 3 253 1 78 1 200 1 255 1 364 3 225 1 367 6 229 1 344 1 126 2 114 1 
52 1 17 2 358 1 196 2 359 2 88 1 173 1 364 2 225 1 227 1 367 4 84 1 145 1 229 1 326 1 126 1 374 1 
358 1 17 2 220 2 359 6 88 2 136 1 173 2 364 6 225 2 367 12 291 1 22 1 145 2 229 2 126 1 23 2 
196 4 220 2 262 1 88 2 173 2 200 1 348 2 225 3 227 2 229 3 114 2 52 2 17 9 358 4 18 1 359 11 136 1 253 1 255 2 364 12 367 23 84 2 22 1 145 2 305 1 344 1 126 5 374 2 23 2 
364 1 367 1 23 1 
367 1 220 1 359 1 
52 1 358 1 17 3 196 2 359 3 88 1 173 1 364 3 225 1 227 1 235 1 367 6 84 1 145 1 326 1 229 1 374 1 126 2 
196 2 220 2 88 4 173 4 225 4 227 1 268 1 355 1 291 1 248 1 229 4 52 1 17 4 358 2 96 1 359 11 136 1 123 1 364 11 338 1 367 22 84 1 22 1 145 4 374 1 126 2 23 2 
17 2 358 1 262 1 359 3 255 1 364 3 225 1 367 6 229 1 126 1 114 1 
52 1 358 1 17 2 18 1 196 2 359 1 255 1 200 1 364 2 348 1 367 3 227 1 84 1 126 1 344 1 374 1 114 1 
52 1 17 5 358 2 196 2 359 5 262 1 255 2 364 5 338 1 225 2 227 1 367 10 84 1 229 2 374 1 126 3 357 1 114 2 
52 1 358 1 17 1 196 2 359 2 338 1 225 1 227 1 367 2 84 1 145 1 374 1 
52 1 17 2 358 1 196 2 359 2 88 1 173 1 364 2 338 1 225 1 227 1 367 4 84 1 145 1 229 1 126 1 374 1 
52 3 17 2 358 1 18 1 196 6 359 1 255 1 348 1 364 2 48 1 338 1 367 3 227 3 84 3 374 3 126 1 114 1 
196 8 220 1 262 1 200 1 348 1 225 2 48 1 227 4 291 1 229 2 326 1 51 1 357 1 114 2 52 4 358 3 17 6 18 1 359 7 255 2 364 8 338 1 367 15 84 4 374 4 344 1 126 3 23 1 
117 1 222 1 370 1 153 1 155 1 39 1 375 1 
117 1 199 1 160 1 222 1 4 1 370 1 208 1 153 1 39 1 155 1 375 1 193 1 
234 1 101 1 284 1 108 1 95 1 304 1 151 1 9 1 78 1 73 1 300 1 
101 1 25 1 284 1 285 1 95 1 360 1 297 1 73 1 300 1 234 1 151 1 341 1 304 1 153 2 39 1 155 2 375 1 210 1 
194 1 101 1 25 2 284 1 285 1 72 1 73 1 92 1 151 3 7 1 153 2 155 2 210 1 360 2 297 1 300 2 234 1 256 1 304 1 341 1 282 1 39 2 375 1 
194 1 101 2 25 2 284 2 285 1 201 1 72 1 73 2 92 1 151 3 7 1 153 2 155 2 210 1 360 2 297 1 300 2 234 1 256 1 304 1 307 1 282 1 39 2 375 1 
101 3 25 1 284 3 69 1 43 1 287 1 72 1 73 3 151 4 152 1 7 1 8 1 328 2 209 2 95 1 64 1 300 1 234 1 20 1 304 1 189 1 307 1 282 1 
101 3 25 1 284 3 95 1 69 1 43 1 287 1 72 1 73 3 300 1 26 1 20 1 234 1 151 4 304 1 8 1 7 1 152 1 307 1 282 1 328 2 209 2 
234 1 74 1 101 1 284 1 304 1 73 1 
101 2 25 1 284 2 312 1 95 1 119 1 315 1 347 1 73 2 300 1 234 2 151 1 304 1 163 1 343 1 
101 1 25 1 284 1 196 4 312 1 285 1 198 1 262 1 200 1 73 1 47 1 225 1 227 2 151 1 93 1 229 1 153 2 155 2 114 2 210 1 52 2 17 2 179 1 296 1 359 2 360 1 297 1 214 2 255 2 300 1 364 3 234 1 142 2 367 5 237 1 304 1 84 2 341 1 126 2 344 1 374 2 39 1 375 2 
101 1 284 1 69 2 43 1 287 1 73 1 26 1 46 1 1 2 246 1 91 1 134 2 292 2 151 2 152 1 8 1 328 3 209 3 330 1 95 1 122 1 275 1 140 1 20 1 164 2 238 1 257 1 127 1 
101 1 25 1 284 1 73 1 300 1 74 1 234 2 350 1 151 1 304 1 152 1 163 1 191 1 
101 4 284 4 312 1 95 1 73 4 300 1 234 1 82 1 108 1 151 1 304 1 9 1 307 1 
101 2 158 1 25 1 284 2 119 1 272 1 347 1 72 1 73 2 300 1 234 2 203 1 151 1 304 1 
234 1 251 1 101 1 3 1 284 1 95 1 304 1 324 1 31 1 73 1 
101 2 284 2 312 1 55 1 197 1 73 2 300 1 234 1 151 1 304 1 165 1 
101 4 284 5 312 1 95 1 263 1 72 1 73 5 300 2 234 2 320 1 82 1 108 1 151 3 304 2 9 1 165 1 
101 4 284 5 312 1 95 1 335 1 72 1 73 5 300 2 234 2 320 1 82 1 108 1 151 3 304 2 9 1 165 1 
101 1 25 1 284 1 285 1 95 1 360 1 297 1 201 1 73 1 300 1 234 1 151 1 304 1 153 2 39 1 155 2 375 1 210 1 
101 1 25 1 284 1 119 1 315 1 347 1 72 1 73 1 300 1 234 2 151 1 304 1 163 1 
67 1 331 1 128 1 266 1 375 1 
15 1 246 1 279 1 299 1 328 1 209 1 266 1 
128 1 331 1 266 1 369 1 175 1 323 1 153 1 39 1 155 1 
15 1 128 1 331 1 67 1 194 1 299 1 266 1 256 1 92 1 204 1 8 1 308 1 
325 1 86 1 78 1 41 1 
202 1 216 1 129 1 34 1 325 1 86 1 41 1 
106 1 129 1 37 1 
202 3 216 1 129 3 54 2 34 1 356 1 325 1 86 1 45 1 41 1 240 1 345 1 
202 2 216 1 129 2 289 1 34 1 325 1 361 1 86 1 41 1 
129 1 34 1 0 1 63 1 216 1 202 1 66 1 31 1 324 1 325 1 345 1 
202 1 216 1 129 1 34 1 325 1 41 1 345 1 
202 1 216 1 129 1 34 1 86 1 41 2 345 1 
129 2 34 2 216 2 202 2 321 1 325 1 306 1 41 1 329 1 345 1 
129 3 34 1 172 1 361 2 245 1 0 1 277 1 216 1 202 3 325 2 86 1 41 1 345 1 
129 2 34 1 252 1 361 1 89 1 63 1 216 1 202 2 3 1 31 2 324 1 325 1 86 1 41 1 345 1 
129 4 34 2 172 1 361 2 79 1 0 1 216 2 202 4 289 1 325 2 86 1 41 1 345 1 
202 1 216 1 129 1 34 1 325 1 86 1 41 1 345 1 
129 4 54 1 34 1 172 1 361 2 0 1 202 4 216 1 356 1 325 3 86 2 75 1 240 1 41 2 
129 2 34 1 181 1 273 1 361 1 216 1 202 2 104 1 325 1 86 1 41 1 345 1 
202 3 216 1 129 3 54 2 34 1 356 1 325 1 86 1 190 1 41 1 240 2 345 1 
28 1 354 2 182 1 325 2 
202 1 216 1 129 1 34 1 85 1 345 1 
202 2 216 1 129 2 34 1 325 1 361 1 86 1 245 1 41 1 345 1 
58 1 
202 1 216 1 129 1 34 1 325 1 86 1 41 1 345 1 
129 3 54 1 34 1 361 1 245 1 216 1 202 3 325 1 86 1 345 1 41 1 
172 1 325 1 75 1 0 1 
325 1 41 1 

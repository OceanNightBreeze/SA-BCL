#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (69,111) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 140 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 209 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 217 181 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 232 (36,252) 341 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 109 131 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (69,111) (69,111) 86 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (69,111) (69,111) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 255 (144,287) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (69,111) (69,111) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 616 | return null
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
45 2 234 1 91 1 5 1 213 9 6 9 53 2 349 2 193 1 157 2 277 1 113 6 351 1 316 1 196 2 197 1 94 1 299 2 284 1 283 5 80 1 172 1 100 1 291 2 38 4 204 3 176 1 127 1 
45 2 234 1 91 1 5 1 213 9 6 9 53 2 349 2 193 1 157 2 277 1 113 6 351 1 316 1 196 2 197 1 94 1 299 2 284 1 283 5 80 1 172 1 100 1 291 2 38 4 204 3 176 1 127 1 
45 2 234 1 91 1 5 1 213 10 6 10 53 2 349 2 193 1 157 2 277 1 113 7 351 1 316 1 196 2 197 1 94 1 299 2 284 1 283 6 80 1 172 1 100 1 291 2 38 5 204 4 176 1 127 1 
45 2 234 1 91 1 5 1 213 7 6 7 53 2 349 2 193 1 157 2 277 1 113 4 351 1 316 1 196 2 197 1 299 1 284 1 283 4 80 1 172 1 100 1 291 2 38 3 204 2 176 1 127 1 
316 1 94 1 299 2 45 1 284 1 283 3 172 1 213 4 100 1 6 4 53 1 291 1 38 2 204 1 349 1 157 1 113 3 351 1 
316 1 196 1 283 1 45 1 33 1 168 1 5 1 213 2 100 1 6 2 291 1 53 1 262 1 349 1 127 1 351 1 
316 1 196 1 45 2 234 1 283 2 213 3 100 1 6 3 291 2 38 1 204 1 113 1 351 1 
234 1 45 2 213 9 6 9 53 1 193 1 349 1 157 1 113 7 244 1 351 1 316 1 196 1 299 2 94 1 283 5 284 1 98 1 80 1 172 1 100 1 38 4 291 2 204 3 
234 1 45 2 213 9 6 9 53 1 193 1 349 1 157 1 113 7 244 1 351 1 316 1 196 1 299 2 94 1 283 5 284 1 98 1 80 1 172 1 100 1 38 4 291 2 204 3 
43 1 20 1 133 1 
122 2 207 1 133 1 
253 2 1 2 346 2 115 2 235 2 158 2 128 1 58 1 
179 1 1 3 180 1 235 2 237 1 73 1 343 2 21 1 211 1 274 1 346 3 158 2 137 1 243 1 194 1 162 2 58 1 315 1 253 2 330 1 256 1 115 2 301 1 60 1 229 1 15 2 82 2 304 1 64 1 144 1 263 2 264 1 293 1 146 1 104 1 128 1 266 1 
111 1 
43 1 1 1 220 1 89 1 115 1 133 1 216 1 125 1 346 1 335 1 292 1 9 1 361 1 329 1 
43 1 253 1 1 1 220 1 89 2 235 1 115 1 133 1 216 1 125 1 346 1 335 1 158 1 361 2 9 1 
245 1 
245 1 
89 1 56 1 361 1 
245 1 
133 1 
245 1 
188 1 89 1 116 1 361 1 49 1 245 1 320 1 
20 1 128 1 
253 1 1 2 115 2 235 1 236 1 346 2 158 1 323 1 128 2 
310 1 132 1 280 1 
18 1 1 1 256 1 343 1 60 1 21 1 229 1 82 1 64 1 274 1 346 1 144 1 263 1 104 1 128 1 194 1 
1 2 318 1 256 1 235 1 115 1 343 1 60 1 21 1 186 1 229 1 132 1 82 1 274 1 64 1 144 1 346 2 263 1 158 1 104 1 194 1 
253 1 1 5 318 2 235 4 115 5 236 1 201 1 186 1 212 1 346 5 334 1 292 1 158 4 128 1 
1 2 125 1 11 1 346 2 115 2 235 2 158 2 81 1 
253 1 1 3 318 1 346 3 115 3 235 3 158 3 128 1 
1 1 125 1 346 1 115 1 235 1 158 1 81 1 
253 1 1 1 125 1 346 1 115 1 235 1 236 1 158 1 323 1 
179 1 1 4 180 1 89 1 235 3 237 1 71 1 236 1 73 1 343 1 21 1 186 1 274 1 216 1 346 4 158 3 137 1 9 1 243 1 194 1 57 1 162 2 58 1 253 2 220 1 318 1 256 1 115 3 301 1 60 1 229 1 15 1 82 1 304 1 64 1 125 1 144 1 335 1 263 1 361 1 146 1 104 1 128 1 266 1 
1 2 318 1 346 2 115 2 235 1 334 1 292 1 158 1 128 1 
253 1 1 3 220 1 89 1 318 2 235 3 115 3 236 1 71 1 186 1 133 1 216 1 125 1 346 3 335 1 158 3 361 1 9 1 265 1 
253 1 1 2 318 1 235 2 115 2 236 1 310 1 132 1 346 2 158 2 
1 1 256 1 343 1 60 1 21 1 229 1 82 1 64 1 274 1 346 1 144 1 263 1 104 1 128 1 194 1 
1 1 256 1 343 1 60 1 229 1 82 1 64 1 274 1 346 1 263 1 322 1 104 1 128 1 194 1 164 1 
179 1 180 1 47 1 272 1 73 1 74 1 310 2 132 2 192 1 313 1 243 2 162 2 280 2 224 1 301 1 355 1 356 1 258 1 358 1 15 4 304 1 230 1 264 2 146 1 
216 1 1 1 125 1 346 1 11 1 115 1 235 1 158 1 
208 1 61 1 
208 1 61 1 
41 1 22 1 
41 1 22 1 
41 1 22 1 
208 1 61 1 67 1 
208 1 314 1 61 1 
208 2 325 1 66 1 41 1 61 2 22 1 
208 1 61 1 67 1 
208 1 61 1 67 1 
31 1 208 1 61 1 
31 1 208 1 61 1 
31 1 208 1 61 1 
177 1 267 1 1 2 166 1 89 1 208 1 270 1 115 2 235 2 61 1 289 1 302 1 214 1 217 1 346 2 203 1 158 2 361 1 314 1 160 1 128 1 161 1 324 1 279 1 
178 1 267 2 177 1 166 2 89 2 208 2 12 1 325 1 14 2 61 2 133 1 214 2 203 3 338 1 361 2 40 1 279 2 163 1 294 1 
53 1 349 1 157 1 
53 1 349 1 262 1 
153 1 53 3 262 1 157 2 27 1 248 1 
53 2 262 1 157 1 27 1 105 1 248 1 
53 2 262 1 157 1 27 2 248 1 
140 1 245 1 
311 1 305 1 245 2 327 1 
206 1 89 1 270 1 74 1 308 2 183 1 49 1 50 1 188 1 192 1 275 1 112 1 245 2 29 1 116 1 228 1 320 1 174 1 85 1 361 1 
206 1 89 1 270 1 74 1 308 2 209 1 183 1 49 1 50 1 188 1 192 1 275 1 112 1 245 1 29 1 116 1 228 1 320 1 174 1 85 1 361 1 
20 1 104 1 108 1 
200 1 104 1 
99 1 
274 1 104 1 229 1 
250 1 104 1 
104 1 229 1 
274 1 102 1 271 1 104 3 108 2 229 1 
30 1 2 1 44 1 257 1 224 1 355 3 258 2 167 2 15 7 124 1 155 1 101 1 192 1 55 1 264 4 243 3 195 1 
30 1 2 1 44 1 257 1 224 1 355 3 258 2 167 2 15 7 124 1 155 1 101 1 192 1 55 1 264 4 243 3 195 1 
30 1 2 1 44 1 257 1 224 1 355 3 258 2 167 2 15 7 155 1 124 1 101 1 192 1 55 1 264 4 145 1 243 3 195 1 
206 3 179 1 2 1 44 1 180 1 107 1 47 3 73 1 74 3 109 1 191 1 192 3 55 4 139 3 243 11 162 2 77 1 95 4 257 2 198 1 224 3 355 7 167 1 258 3 15 22 120 1 304 1 124 1 101 1 264 11 87 1 
179 2 180 2 44 1 2 1 73 2 23 1 155 1 192 1 55 1 243 4 162 4 195 1 30 1 331 1 257 1 224 1 355 4 167 2 258 3 15 9 304 2 124 1 264 5 87 1 
269 1 233 1 45 1 3 1 343 1 185 1 213 2 215 1 153 1 6 2 53 2 349 1 157 1 328 1 113 1 194 1 351 1 278 1 316 1 196 1 283 1 114 1 256 1 226 1 82 1 100 1 291 1 263 1 262 1 336 1 
0 1 269 1 233 1 45 1 343 1 185 1 213 3 153 1 6 3 53 2 75 1 349 1 157 1 328 1 113 2 194 1 278 1 316 1 196 1 283 1 114 1 256 1 226 1 82 1 100 1 121 1 291 1 263 1 262 1 336 1 
0 1 269 1 233 1 343 1 185 1 213 2 153 1 6 2 53 2 75 1 349 1 157 1 113 2 194 1 316 1 196 1 283 1 114 1 256 1 226 1 82 1 100 1 263 1 262 1 336 1 
196 2 269 2 233 2 45 1 256 1 300 1 343 1 226 2 326 1 60 1 229 1 171 1 213 1 82 1 154 1 121 1 175 1 6 1 7 1 291 1 263 1 104 1 194 1 
269 1 233 1 45 1 3 1 343 1 185 1 213 1 153 1 6 1 53 2 75 1 349 1 157 1 328 1 194 1 351 1 278 1 196 1 114 1 256 1 226 1 82 1 291 1 263 1 262 1 336 1 
276 1 
43 1 1 1 89 5 90 1 46 1 49 1 133 2 54 1 241 2 56 6 9 1 138 2 194 1 329 1 332 1 300 1 256 1 141 1 60 2 259 1 63 1 263 2 335 1 104 1 207 2 307 3 72 1 308 2 343 2 342 1 154 1 216 1 346 1 275 2 159 2 218 2 26 4 29 1 220 1 115 1 116 1 285 1 225 1 117 2 229 1 320 1 82 2 122 2 123 1 84 2 125 1 292 1 39 2 361 5 295 1 
1 1 89 3 307 1 46 1 72 1 342 1 216 1 346 1 26 2 218 1 56 2 9 1 329 1 220 1 115 1 285 1 118 1 63 1 125 1 335 1 292 1 361 3 
43 1 1 1 89 3 307 1 46 1 72 1 342 1 133 1 216 1 346 1 56 1 26 3 159 1 9 1 329 1 220 1 115 1 285 1 118 1 63 1 125 1 335 1 292 1 361 3 
43 1 1 1 307 1 89 3 46 1 72 1 342 1 133 1 216 1 346 1 26 3 218 1 56 2 159 1 9 1 138 1 329 1 220 1 115 1 285 1 118 1 63 1 125 1 335 1 292 1 361 3 
43 5 1 1 89 5 46 1 49 1 133 5 54 1 8 1 56 7 241 2 9 1 138 4 329 1 251 1 141 1 63 1 335 1 337 1 307 3 207 2 72 1 342 1 308 1 216 1 346 1 275 1 218 4 26 6 159 4 281 1 220 1 115 1 116 1 285 1 320 1 117 2 118 1 125 1 84 2 292 1 361 5 39 2 129 1 295 1 
43 1 1 1 89 4 46 1 49 1 133 2 54 1 241 2 56 4 9 1 138 2 329 1 141 1 63 1 335 1 207 2 307 2 72 1 342 1 308 1 216 1 346 1 275 1 26 4 218 2 159 2 220 1 115 1 116 1 285 1 225 1 320 1 117 2 122 2 125 1 84 2 292 1 361 4 39 2 295 1 
43 1 1 1 307 2 207 2 89 4 46 1 72 1 308 1 342 1 49 1 133 1 216 1 54 1 346 1 8 1 275 1 159 2 218 2 56 4 241 2 26 4 9 1 138 2 329 1 220 1 115 1 116 1 285 1 141 1 117 2 320 1 63 1 84 2 125 1 335 1 292 1 39 2 361 4 337 1 129 1 295 1 
43 1 1 1 307 2 207 2 89 4 46 1 72 1 308 1 342 1 49 1 133 1 216 1 54 1 346 1 8 1 275 1 159 2 218 2 56 4 241 2 26 4 9 1 138 2 329 1 220 1 115 1 116 1 285 1 141 1 117 2 320 1 63 1 84 2 125 1 335 1 292 1 39 2 361 4 337 1 129 1 295 1 
43 1 1 1 88 1 307 2 89 4 46 1 72 1 308 1 342 1 49 1 133 1 216 1 54 1 346 1 275 1 159 2 218 2 56 4 26 4 9 1 138 2 329 1 220 1 115 1 199 1 116 1 285 1 141 1 169 2 117 2 320 1 16 1 63 1 122 2 125 1 335 1 306 2 292 1 39 2 361 4 129 1 
43 1 1 1 307 2 207 2 89 4 46 1 72 1 308 1 342 1 49 1 133 1 216 1 54 1 346 1 8 1 275 1 241 2 26 5 218 3 56 5 159 3 9 1 138 3 329 1 281 1 220 1 115 1 116 1 285 1 141 1 117 2 320 1 63 1 84 2 125 1 335 1 292 1 39 2 337 1 361 4 129 1 295 1 
43 1 1 1 307 2 207 2 89 4 46 1 72 1 308 1 342 1 49 1 133 1 216 1 54 1 346 1 8 1 275 1 241 2 26 5 218 3 56 5 159 3 9 1 138 3 329 1 281 1 220 1 115 1 116 1 285 1 141 1 117 2 320 1 63 1 84 2 125 1 335 1 292 1 39 2 337 1 361 4 129 1 295 1 
43 1 1 1 89 4 46 1 49 1 133 1 54 1 56 4 9 1 138 2 329 1 141 1 16 1 63 1 335 1 306 2 307 2 72 1 342 1 308 1 216 1 346 1 275 1 26 4 218 2 159 2 220 1 115 1 116 1 285 1 225 1 320 1 117 2 169 2 122 2 125 1 292 1 361 4 39 2 
179 1 44 1 180 1 2 1 272 1 73 1 20 1 310 1 132 1 155 1 192 1 243 3 162 2 195 1 280 1 30 1 224 1 301 1 355 2 258 2 167 1 15 6 304 1 264 3 146 1 128 2 
206 2 179 2 180 2 107 1 47 1 237 1 73 2 74 2 184 1 109 1 310 4 132 11 192 2 55 1 243 6 139 3 162 4 92 1 280 11 95 3 224 1 34 1 355 2 301 2 258 1 15 14 304 2 261 1 264 8 17 1 293 1 146 1 128 1 
18 1 1 2 179 1 180 1 235 1 237 1 73 1 343 1 238 1 21 1 186 1 310 1 52 1 274 1 296 1 346 2 158 1 194 1 243 1 162 2 92 1 318 1 256 1 115 1 301 1 60 1 229 1 15 2 82 1 64 1 304 1 144 1 263 1 264 1 104 1 146 1 293 1 128 1 
179 3 1 3 2 1 44 1 180 3 235 1 47 2 237 1 186 1 132 7 135 1 192 3 55 4 243 10 194 2 195 1 92 1 252 2 256 2 301 3 258 4 60 1 15 20 303 1 304 3 64 2 144 2 263 3 264 10 146 3 104 2 266 2 206 2 273 2 73 3 343 3 74 2 21 2 310 7 274 2 155 1 346 3 75 1 76 1 158 1 162 6 280 7 30 1 353 2 318 1 115 1 224 3 355 8 167 1 229 2 82 3 293 1 126 2 128 2 
1 1 179 2 340 1 180 2 272 1 235 1 237 1 73 2 343 8 211 2 215 1 154 1 346 1 75 1 158 1 194 2 243 1 162 4 10 1 318 1 256 2 300 1 115 1 227 1 301 2 35 1 60 2 229 2 15 2 82 8 304 2 65 1 103 1 263 7 264 1 104 3 146 2 293 1 148 1 
206 1 179 1 1 1 180 1 235 1 47 1 236 1 73 1 74 1 310 1 132 1 346 1 192 1 158 1 243 2 162 2 280 1 92 1 253 1 115 1 224 1 355 1 301 1 258 1 15 3 304 1 290 1 264 1 146 1 
179 1 180 1 272 1 73 1 74 1 355 1 301 1 310 1 132 1 15 2 304 1 230 1 192 1 55 1 264 2 146 1 162 2 280 1 
179 1 180 1 272 1 47 1 73 1 224 1 355 1 301 1 258 1 356 1 310 1 132 1 15 2 304 1 146 1 243 2 162 2 280 1 
206 1 179 1 180 1 272 1 47 1 73 1 74 1 310 2 132 2 192 1 55 1 243 2 162 2 280 2 224 1 301 1 355 2 258 1 15 4 304 1 264 2 146 1 
179 1 180 1 73 1 74 1 355 1 301 1 310 1 132 1 15 2 304 1 230 1 65 1 192 1 55 1 264 2 146 1 162 2 280 1 
179 1 180 1 47 1 73 1 224 1 355 1 301 1 258 1 356 1 310 1 132 1 15 2 304 1 65 1 146 1 243 2 162 2 280 1 
206 1 179 1 180 1 47 1 73 1 74 1 310 2 132 2 192 1 55 1 243 2 162 2 280 2 224 1 301 1 355 2 258 1 15 4 304 1 65 1 264 2 146 1 
206 1 179 1 180 1 47 1 224 1 73 1 74 1 355 2 301 1 258 1 310 2 132 2 15 4 304 1 192 1 55 1 264 2 146 1 243 2 162 2 280 2 
1 1 179 1 180 1 237 1 73 1 343 1 21 1 274 1 346 1 194 1 243 1 162 2 256 1 301 1 60 1 229 1 15 2 82 1 64 1 304 1 144 1 263 1 264 1 293 1 104 1 146 1 128 1 266 1 
1 1 179 1 180 1 237 1 73 1 343 1 274 1 346 1 194 1 243 1 162 2 164 1 93 1 256 1 301 1 60 1 229 1 15 2 82 1 64 1 304 1 263 1 264 1 293 1 322 1 104 1 146 1 128 1 
206 1 179 1 180 1 47 1 73 1 74 1 310 2 132 2 192 1 55 1 243 2 162 2 92 1 280 2 224 1 301 1 355 2 258 1 15 4 304 1 264 2 146 1 
206 1 1 1 179 1 180 1 47 1 273 1 73 1 74 1 343 1 21 1 310 2 132 2 215 1 274 1 192 1 346 1 55 1 243 2 194 1 162 2 280 2 256 1 224 1 355 2 301 1 258 1 229 1 15 4 82 1 64 1 304 1 144 1 263 1 264 2 104 1 146 1 266 1 
206 1 179 1 1 1 180 1 47 1 235 1 236 1 73 1 74 1 310 1 132 1 346 1 192 1 55 1 158 1 243 1 162 2 92 1 280 1 253 1 97 1 115 1 224 1 355 1 301 1 15 3 304 1 264 2 146 1 
206 1 130 1 19 1 179 2 180 2 107 1 47 1 73 2 74 1 109 1 136 1 156 1 192 1 55 1 243 5 139 1 162 4 331 1 95 2 224 1 355 2 258 1 142 1 143 1 15 9 83 1 304 2 37 1 264 4 
206 1 130 1 19 1 179 2 180 2 107 1 47 1 73 2 74 1 109 1 136 1 156 1 192 1 55 1 243 5 139 1 162 4 331 1 95 2 224 1 355 2 258 1 142 1 143 1 15 9 83 1 304 2 37 1 264 4 
206 6 130 1 19 3 179 2 2 1 44 1 180 2 107 2 131 1 47 6 73 2 74 6 109 2 136 1 155 1 192 7 55 6 219 1 243 22 139 4 162 4 195 1 30 1 331 1 95 4 224 7 34 2 355 12 167 1 258 6 142 1 202 1 62 1 143 1 15 46 173 1 83 1 304 2 37 1 264 24 87 1 149 1 
206 1 130 1 19 1 179 2 180 2 107 1 47 1 73 2 309 1 74 1 109 1 136 1 156 1 192 1 55 1 243 5 139 1 162 4 331 1 95 2 224 1 355 2 258 1 143 1 15 9 83 1 304 2 37 1 264 4 
206 2 130 1 19 3 179 3 180 3 131 1 47 1 73 3 74 2 109 2 136 2 192 2 55 1 219 1 243 9 139 2 162 6 331 1 95 2 224 1 355 2 258 1 142 1 202 1 62 1 143 1 15 20 173 1 83 1 304 3 37 2 264 11 87 2 149 1 
178 1 267 1 214 1 166 1 208 1 325 1 350 1 40 1 61 1 279 1 
314 1 161 1 
267 1 110 1 214 1 166 1 24 1 208 1 13 1 61 1 279 1 
151 1 67 1 
31 1 282 1 66 1 
178 1 177 1 267 1 166 1 89 1 208 1 12 1 325 1 14 1 61 1 133 1 214 1 203 2 361 1 40 1 279 1 163 1 294 1 
178 1 177 1 267 1 166 1 89 1 208 1 12 1 325 1 14 1 61 1 133 1 214 1 203 2 361 1 40 1 279 1 163 1 294 1 
178 1 177 1 267 1 166 1 89 1 208 1 12 1 325 1 14 1 61 1 133 1 214 1 203 2 361 1 40 1 279 1 163 1 294 1 
151 1 66 1 67 1 
151 1 66 1 67 1 
31 1 282 1 
31 1 282 1 66 1 
289 1 324 1 
267 1 214 1 166 1 217 1 181 1 208 1 203 1 14 1 245 1 61 1 163 1 279 1 
1 2 179 1 180 1 237 1 73 1 343 2 211 2 240 1 189 1 346 2 194 1 243 1 162 2 92 1 10 1 32 1 256 1 115 2 301 1 357 1 229 1 15 2 82 2 304 1 263 2 264 1 104 1 146 1 231 1 293 1 148 1 
269 1 256 1 114 1 343 2 286 1 185 1 82 2 153 1 215 1 359 1 53 2 75 1 25 1 349 1 262 1 263 2 157 1 194 1 278 1 
269 1 114 1 256 1 343 1 185 1 82 1 153 1 53 2 75 1 25 1 349 1 262 1 263 1 157 1 194 1 278 1 298 1 
269 1 256 1 300 1 152 1 343 1 60 1 229 1 82 1 154 1 359 1 7 1 263 1 104 1 194 1 
269 1 114 1 256 1 343 1 286 1 185 1 82 1 153 1 359 1 53 2 75 1 25 1 349 1 262 1 263 1 157 1 194 1 278 1 
254 1 
43 1 348 1 275 1 59 1 308 1 20 1 133 1 
84 1 275 1 116 1 308 1 141 1 49 1 320 1 295 1 
256 1 341 1 271 1 116 1 200 1 141 1 343 1 60 1 49 1 229 1 320 1 187 1 82 1 274 1 36 1 275 1 263 1 104 2 194 2 232 1 29 1 
95 1 131 1 275 1 116 1 308 1 141 1 139 1 49 1 109 1 320 1 
317 2 69 1 89 1 44 1 2 1 116 1 224 1 308 1 141 1 49 1 320 1 111 1 192 1 86 1 275 2 361 1 337 1 195 1 
43 1 348 1 116 1 308 1 141 1 49 1 320 1 133 1 
206 1 192 1 308 2 74 1 228 1 183 1 
82 1 263 1 343 1 60 1 
123 1 275 1 116 1 308 1 141 1 49 1 320 1 29 1 
267 1 214 1 360 1 
178 1 134 1 289 1 267 1 214 1 
267 1 214 1 360 1 
267 1 214 1 360 1 
267 1 214 1 352 1 
267 1 214 1 352 1 
267 1 214 1 352 1 
267 1 214 1 
208 1 61 1 
179 1 180 1 44 1 2 1 131 1 73 1 109 1 155 1 192 1 139 1 243 4 162 2 195 1 30 1 331 1 95 1 224 1 355 2 167 1 258 2 15 8 304 1 264 4 
206 1 179 2 2 1 44 1 180 2 107 1 131 1 73 2 74 1 109 1 155 1 192 2 55 1 243 5 139 1 162 4 246 1 195 1 30 1 331 1 95 2 224 1 355 3 167 1 258 2 15 11 304 2 264 6 
206 2 179 3 2 1 44 1 180 3 131 1 47 2 73 3 74 2 109 1 155 1 192 3 55 1 139 1 243 10 162 6 246 1 195 1 30 1 331 1 95 1 224 3 355 4 167 1 258 3 202 1 62 1 15 19 173 1 304 3 264 9 87 1 149 1 
206 2 179 3 2 1 44 1 180 3 131 1 47 1 73 3 74 2 109 1 155 1 192 3 55 2 139 1 243 7 162 6 246 1 195 1 30 1 331 1 95 1 224 2 355 5 167 1 258 3 202 1 62 1 15 17 173 1 304 3 264 10 87 1 149 1 
179 1 180 1 44 1 2 1 131 1 73 1 109 1 155 1 192 1 139 1 243 4 162 2 195 1 30 1 331 1 95 1 224 1 355 2 167 1 258 2 15 8 304 1 264 4 
206 2 179 1 180 1 131 1 47 2 73 1 74 2 109 1 192 2 55 1 139 1 243 6 162 2 331 1 95 1 224 2 355 2 258 1 202 1 62 1 15 12 173 1 304 1 264 6 149 1 
206 2 179 4 2 1 44 1 180 4 131 1 47 1 73 4 74 2 109 1 155 1 192 3 55 2 243 8 139 1 162 8 246 1 195 1 30 1 331 1 95 1 224 2 355 5 167 1 258 3 202 1 62 1 15 18 173 1 304 4 264 10 87 2 149 1 
206 3 179 4 180 4 131 1 47 2 73 4 74 3 109 1 156 1 192 3 55 3 243 7 139 1 162 8 331 1 95 1 224 2 355 6 258 3 202 1 62 1 15 16 173 1 304 4 264 9 87 2 149 1 
30 1 44 3 2 3 224 1 355 6 258 3 15 7 155 2 192 1 55 3 264 3 243 4 195 1 
206 2 179 4 2 1 44 1 180 4 131 1 47 1 73 4 74 2 109 1 155 1 156 1 192 3 55 1 243 8 139 1 162 8 195 1 30 1 331 1 95 1 224 2 355 4 167 1 258 3 202 1 62 1 15 18 173 1 304 4 264 10 87 2 149 1 
30 1 179 2 180 2 44 1 2 1 224 1 73 2 355 3 167 1 258 2 15 8 304 2 155 1 192 1 55 1 264 4 243 4 87 1 162 4 195 1 
30 1 44 1 2 1 224 1 20 1 355 2 167 1 258 2 15 6 155 1 192 1 264 3 243 3 195 1 
206 1 179 1 180 1 47 1 224 1 73 1 74 1 355 2 258 1 15 4 304 1 192 1 55 1 264 2 243 2 162 2 246 1 
206 1 95 2 107 1 47 1 224 1 74 1 355 2 258 1 109 1 15 7 192 1 55 1 264 3 243 4 139 1 
206 2 179 2 2 2 44 2 180 2 107 1 47 2 73 2 74 2 155 1 192 3 55 4 139 2 243 12 162 4 195 1 30 1 95 2 224 3 34 1 355 9 167 1 258 5 15 23 304 2 261 1 264 11 87 2 147 1 
95 1 243 1 15 1 
264 1 139 1 15 1 
206 1 179 1 180 1 47 1 73 1 224 1 74 1 355 3 258 2 15 6 304 1 192 1 55 1 264 3 126 1 243 3 162 2 246 1 
206 2 179 1 180 1 131 1 47 2 73 1 74 2 109 1 192 2 55 1 139 1 243 6 162 2 331 1 95 1 224 2 355 2 258 1 202 1 62 1 15 12 173 1 304 1 264 6 149 1 
44 1 2 1 224 1 355 2 258 1 15 6 192 1 55 1 264 3 243 3 195 1 
30 1 179 1 2 1 44 1 180 1 73 1 355 2 258 1 15 3 304 1 155 1 55 1 264 1 147 1 243 2 87 1 162 2 
331 1 179 1 180 1 44 2 2 2 73 1 224 2 355 5 258 3 15 10 304 1 192 2 86 1 55 2 264 5 243 5 162 2 195 1 
331 1 179 1 180 1 73 1 74 1 355 1 15 2 304 1 192 1 55 1 264 2 162 2 
331 1 206 1 179 1 180 1 47 1 224 1 73 1 74 1 355 2 258 1 15 4 304 1 192 1 55 1 264 2 243 2 162 2 
331 1 179 3 180 3 44 1 2 1 73 3 355 2 258 1 15 3 304 3 156 1 55 1 264 1 87 1 147 1 243 2 162 6 
206 3 179 5 2 3 44 3 180 5 107 1 47 3 73 5 74 3 109 1 155 1 156 1 191 1 192 5 55 5 243 18 139 3 162 10 246 1 195 2 77 1 30 1 331 1 95 4 224 5 355 12 167 1 258 7 15 34 120 1 304 5 264 16 147 1 87 2 
1 1 346 1 115 1 222 1 334 1 292 1 128 1 
1 1 221 1 222 1 115 1 48 1 239 1 210 1 346 1 334 1 292 1 128 1 68 1 
82 1 154 1 256 1 300 1 263 1 20 1 343 1 104 1 194 1 60 1 229 1 
1 2 318 1 256 1 235 1 115 1 343 1 60 1 229 1 82 1 274 1 64 1 346 2 144 1 263 1 158 1 104 1 128 1 194 1 
1 2 235 2 343 1 274 2 216 1 346 2 158 1 194 1 250 1 220 1 318 1 255 1 256 1 115 2 229 2 82 1 64 1 125 1 144 1 263 1 339 1 104 3 128 1 
1 2 235 2 343 2 274 2 216 1 346 2 158 1 194 1 28 1 250 1 220 1 318 1 255 1 256 1 115 2 229 2 82 2 64 1 125 1 263 2 322 1 339 1 104 3 128 1 
43 1 69 1 89 2 223 1 200 1 343 1 108 1 133 1 82 1 111 1 263 1 335 1 56 1 361 2 339 1 104 2 
250 1 89 1 255 1 256 1 200 1 343 1 287 1 229 1 108 1 82 1 274 1 263 1 361 1 339 1 104 4 194 1 
82 1 256 1 263 1 343 1 194 1 35 1 
340 1 78 1 96 1 256 2 271 1 343 7 227 1 35 1 60 2 211 1 229 2 82 7 215 1 274 1 75 1 347 1 103 1 263 6 104 3 194 3 148 1 
179 2 1 2 180 2 44 1 2 1 235 1 132 1 192 1 194 1 243 3 92 1 195 1 252 1 256 1 301 2 258 2 15 6 304 2 64 1 144 1 263 1 264 3 146 2 104 1 266 1 273 1 73 2 343 1 21 1 310 1 215 1 274 1 155 1 346 2 158 1 162 4 280 1 30 1 318 1 115 1 224 1 355 2 167 1 229 1 82 1 231 1 128 2 
245 1 
256 1 271 1 343 2 35 1 108 1 187 1 229 1 82 2 215 1 274 1 263 2 104 2 194 2 
300 1 256 1 343 4 60 1 229 1 82 4 215 1 154 1 263 4 242 1 104 1 194 1 28 1 
78 1 256 1 343 2 229 1 82 2 135 1 274 1 347 1 263 2 297 1 339 1 104 1 194 2 42 1 
82 1 53 1 256 1 349 1 262 1 263 1 343 1 194 1 60 1 185 1 
32 1 256 1 343 2 229 1 82 2 215 1 75 1 263 2 104 1 194 1 148 1 
300 1 256 2 343 5 227 1 60 1 229 2 82 5 154 1 215 1 103 1 263 4 242 1 339 1 104 3 194 2 148 1 
300 1 256 2 182 1 343 5 60 1 229 2 82 5 154 1 215 1 103 1 263 4 242 1 339 1 104 3 194 2 148 1 
1 2 318 1 256 1 235 1 115 1 343 1 60 1 229 1 82 1 274 1 64 1 346 2 263 1 158 1 104 1 322 1 128 1 194 1 
78 1 96 1 256 1 271 1 343 1 229 1 82 1 274 1 347 1 263 1 339 1 104 1 194 2 
333 1 128 1 205 1 170 1 249 1 
69 1 165 1 220 1 89 1 333 1 71 1 51 1 170 1 111 1 216 1 125 1 321 1 335 1 361 1 9 1 245 1 205 1 249 1 
1 1 240 1 189 1 346 1 115 1 357 1 205 1 170 1 249 1 
165 1 51 1 249 1 
316 1 100 1 283 1 20 1 
316 1 213 1 100 1 6 1 283 1 291 1 45 1 
196 1 213 1 226 1 
316 1 283 1 45 1 260 1 213 3 344 1 100 1 190 1 6 3 291 1 127 2 351 1 
316 1 213 2 100 1 299 1 6 2 283 1 291 1 45 1 113 1 
213 1 6 1 53 1 283 1 38 1 284 1 291 1 45 1 349 1 157 1 351 1 
316 1 213 1 6 1 283 1 291 1 45 1 351 1 
316 2 213 1 100 1 6 1 291 1 45 1 351 1 
316 1 319 1 283 1 45 2 70 1 213 2 6 2 291 2 351 1 247 1 
316 1 45 1 283 2 80 1 213 3 100 1 6 3 291 1 38 1 193 1 204 1 113 2 351 1 
316 1 268 1 283 1 45 1 213 2 100 1 153 1 6 2 53 2 291 1 262 1 349 1 157 1 113 1 351 1 
316 1 94 1 299 1 45 2 283 2 213 4 100 1 6 4 291 2 38 1 204 1 113 2 351 1 
316 1 213 1 100 1 6 1 283 1 291 1 45 1 351 1 
316 2 45 1 283 3 4 1 260 1 344 1 213 4 100 2 6 4 291 1 38 1 204 1 113 2 127 1 
316 1 283 1 45 1 98 1 213 2 100 1 6 2 312 1 291 1 345 1 113 1 351 1 
316 1 283 1 45 1 260 1 288 1 213 3 344 2 100 1 6 3 291 1 127 2 351 1 
106 1 150 1 283 2 79 2 
213 1 6 1 354 1 291 1 45 1 351 1 
316 1 213 2 100 1 6 2 283 1 291 1 45 1 193 1 113 1 351 1 
119 1 
316 1 213 1 100 1 6 1 283 1 291 1 45 1 351 1 
316 1 213 3 100 1 6 3 283 1 291 1 45 1 193 1 113 1 127 1 351 1 
283 1 38 1 204 1 4 1 
316 1 283 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 150 106 (221,278) (137,214) (137,214) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 150 106 (221,278) (137,214) (137,214) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 150 106 (221,278) (137,214) (137,214) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 150 106 (221,278) (137,214) (137,214) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 150 (89,104,198,309) 55 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 150 106 (221,278) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 150 106 (221,278) 206 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 150 106 (221,278) 206 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException 34 240 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 25 345 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 163 144 333 20 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (43,246) (43,246) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 25 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 344 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException 34 240 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException 34 240 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException 34 240 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 200 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 200 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 171 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 171 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 25 345 352 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 200 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 171 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 265 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 150 (89,104,198,309) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 150 106 235 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 150 106 290 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 150 106 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
208 1 341 1 150 1 49 3 278 1 106 1 92 1 137 1 120 2 179 1 221 1 203 3 249 1 320 1 252 1 214 1 371 2 100 2 372 1 358 1 
208 1 341 1 150 1 49 3 278 1 106 1 92 1 137 1 120 2 179 1 221 1 203 3 249 1 320 1 252 1 214 1 371 2 100 2 372 1 358 1 
208 1 341 1 150 1 49 3 278 1 106 1 92 1 137 1 120 2 179 1 221 1 203 3 249 1 320 1 252 1 214 1 371 2 100 2 372 1 358 1 
208 1 341 1 150 1 49 3 278 1 106 1 92 1 137 1 120 2 179 1 221 1 203 3 249 1 320 1 252 1 214 1 371 2 100 2 372 1 358 1 
198 1 72 1 55 1 341 1 150 1 57 1 49 2 120 1 371 1 203 2 372 1 249 1 
331 1 341 1 49 2 68 1 120 1 179 1 203 2 249 1 320 1 252 1 183 1 371 1 100 1 226 1 60 1 358 1 
341 1 150 1 49 2 278 1 106 1 120 2 100 1 371 2 203 2 372 1 249 1 
341 1 49 3 150 1 104 1 278 1 106 1 120 2 203 3 249 1 72 1 371 2 100 1 372 1 206 1 
341 1 49 3 150 1 104 1 278 1 106 1 120 2 203 3 249 1 72 1 371 2 100 1 372 1 206 1 
113 1 244 1 265 1 
163 2 260 1 244 1 
53 1 330 2 205 2 75 2 66 2 285 2 109 1 184 2 
330 2 47 1 168 2 85 1 152 1 109 1 189 1 53 1 131 1 190 1 56 1 338 1 299 1 301 2 196 1 274 2 134 1 63 1 304 1 136 1 66 2 35 1 280 1 180 2 181 1 182 1 205 2 75 3 284 1 166 1 327 1 40 1 369 1 285 3 17 2 328 1 184 2 
330 1 205 1 75 1 251 1 66 1 285 1 18 1 109 1 227 1 184 1 
124 1 46 1 330 1 24 1 351 1 247 1 27 1 75 1 113 1 244 1 285 1 215 1 18 1 374 1 
124 2 330 1 24 1 351 2 66 1 247 1 205 1 75 1 113 1 244 1 285 1 215 1 18 1 184 1 374 1 
124 1 112 1 351 1 119 1 13 1 
124 2 219 1 112 1 113 1 351 2 244 1 10 1 13 1 
124 1 112 1 351 1 
124 1 330 1 351 1 66 1 121 1 109 1 13 1 205 1 251 1 75 1 285 1 18 1 227 1 184 1 
244 1 
124 2 367 1 219 1 112 1 113 1 351 2 244 1 13 1 
124 5 45 1 330 1 22 1 149 1 351 5 128 4 263 2 264 1 109 1 52 2 236 1 355 2 172 2 112 2 113 1 244 1 158 1 61 1 197 1 218 1 135 2 219 1 64 1 66 1 220 1 121 1 122 2 13 2 205 1 75 1 251 1 285 1 18 1 99 4 348 1 227 1 184 1 
53 1 265 1 
330 2 66 1 169 1 53 2 205 1 75 2 370 1 285 2 184 1 
76 1 297 1 58 1 
304 1 47 1 136 1 168 1 181 1 53 1 319 1 131 1 75 1 190 1 166 1 56 1 338 1 285 1 17 1 274 1 
304 1 330 1 47 1 136 1 168 1 181 1 131 1 205 1 190 1 75 2 166 1 297 1 56 1 338 1 123 1 285 2 17 1 184 1 274 1 313 1 
53 1 330 3 205 3 75 3 66 1 123 1 285 3 184 3 
330 1 205 1 75 1 285 1 18 1 227 1 184 1 
330 1 205 1 75 1 66 1 370 1 285 1 18 1 169 1 184 1 
124 1 47 1 330 3 24 1 351 1 168 1 85 1 152 1 109 1 189 1 53 1 131 1 190 1 56 1 338 1 301 2 215 1 196 1 274 1 134 1 275 1 304 1 63 1 136 1 66 2 247 1 180 1 181 1 94 1 205 3 75 4 166 1 327 1 40 1 369 1 123 1 370 1 285 4 17 1 18 1 328 1 184 3 374 1 313 1 
53 1 46 1 330 2 205 1 75 2 187 1 123 1 285 2 184 1 
124 1 275 1 330 3 24 1 351 1 66 1 247 1 325 1 205 3 75 3 123 2 244 1 370 1 285 3 215 1 18 1 184 3 374 1 313 1 
330 2 66 1 205 2 75 2 297 1 123 1 58 1 370 1 285 2 184 2 
304 1 47 1 136 1 168 1 181 1 53 1 131 1 75 1 190 1 166 1 56 1 338 1 285 1 17 1 274 1 
304 1 168 1 201 1 181 1 53 1 88 1 131 1 75 1 190 1 166 1 56 1 338 1 285 1 17 1 274 1 
85 1 52 1 152 1 189 2 173 1 296 1 335 1 297 2 299 2 58 2 301 2 196 1 8 1 202 1 180 4 122 1 139 1 76 2 165 1 327 1 40 1 223 1 347 1 369 1 
330 1 205 1 75 1 285 1 18 1 138 1 374 1 184 1 
46 1 330 5 209 1 187 1 66 1 53 1 205 4 73 1 75 5 123 2 370 1 285 5 184 4 313 1 
330 2 205 2 75 2 285 2 18 1 138 1 227 1 184 2 
360 1 
360 1 
366 1 343 1 
366 1 343 1 
366 1 343 1 
360 1 
360 1 
366 1 360 2 343 1 
360 1 
360 1 
360 1 
360 1 
360 1 
124 2 330 1 351 2 316 1 318 2 109 1 3 2 155 2 154 2 240 1 159 2 34 1 118 1 360 2 66 1 121 1 162 1 205 1 75 1 251 1 285 1 16 1 18 1 253 1 227 1 184 1 
124 1 330 1 351 1 316 1 360 1 318 1 25 1 26 1 3 1 154 1 155 1 205 1 250 1 75 1 345 1 285 1 159 1 184 1 256 1 
320 1 92 1 358 1 
320 1 183 1 358 1 
276 1 92 2 183 1 79 1 86 1 358 3 
276 1 92 1 183 1 79 1 44 1 358 2 
276 1 92 1 183 1 79 2 358 2 
124 5 149 1 260 1 351 5 128 2 263 1 52 1 26 1 267 1 172 1 173 1 29 1 112 1 113 1 5 2 244 2 217 1 135 1 219 1 116 2 117 1 93 2 363 1 122 1 13 4 163 3 250 1 165 1 78 1 288 1 99 3 256 1 
103 1 330 1 149 1 233 1 52 1 109 1 112 4 113 1 337 1 5 2 244 3 66 1 119 3 121 1 13 5 122 1 163 3 205 1 75 1 251 1 165 1 78 1 18 1 124 6 260 1 351 6 128 2 263 1 354 3 26 2 172 1 173 1 217 1 135 1 219 1 93 2 363 1 285 1 99 3 288 1 184 1 227 1 
124 3 260 2 351 3 128 2 263 1 264 1 52 1 26 1 172 1 173 1 29 1 113 1 5 2 244 3 217 1 135 1 116 1 117 1 93 2 363 1 13 2 122 1 163 4 165 1 99 3 288 1 
124 4 260 3 351 4 128 4 263 1 264 1 188 1 52 2 26 2 172 1 173 2 29 1 113 1 5 4 244 4 339 1 217 1 135 1 116 2 117 1 93 4 363 1 13 3 122 2 163 7 165 2 99 5 288 2 255 1 
56 1 129 1 265 1 
56 1 59 1 
140 1 
56 1 338 1 
131 1 56 3 338 1 129 2 91 1 151 1 
131 1 56 1 338 1 
56 1 289 1 
45 1 90 2 322 1 22 1 64 1 202 2 51 1 52 1 180 7 122 1 139 3 189 3 299 4 15 1 286 1 312 1 291 1 
45 1 90 2 322 1 22 1 64 1 202 2 51 1 52 1 180 7 122 1 139 3 189 3 299 4 15 1 286 1 312 1 291 1 
45 1 90 2 322 1 22 1 64 1 178 1 202 2 51 1 52 1 180 7 122 1 139 3 189 3 299 4 15 1 286 1 312 1 291 1 
45 2 228 1 22 1 51 1 152 1 52 4 189 15 294 1 173 3 31 4 268 1 299 16 301 2 196 1 90 3 322 1 64 2 67 3 36 1 202 5 37 1 180 31 364 1 122 4 139 10 165 3 327 1 40 1 15 5 286 1 288 3 312 2 349 1 291 2 
45 1 22 1 51 1 52 1 152 2 28 1 189 4 299 5 301 4 196 2 90 2 322 1 64 1 359 1 202 3 37 1 180 9 122 1 139 4 327 2 40 2 15 1 312 1 291 1 
82 1 258 1 230 1 49 2 168 1 86 1 320 1 295 1 271 1 302 1 60 1 274 1 358 2 304 1 341 1 65 1 306 1 92 1 120 1 203 2 249 1 181 1 72 1 98 1 183 1 17 1 371 1 100 1 226 1 21 1 
82 1 258 1 230 1 49 3 168 1 86 1 153 1 320 1 271 1 302 1 60 1 274 1 273 1 358 2 304 1 341 1 65 1 306 1 92 1 120 1 203 3 181 1 72 2 183 1 17 1 371 1 146 1 100 1 226 1 21 1 
82 1 258 1 230 1 49 2 168 1 86 1 153 1 320 1 302 1 60 1 274 1 273 1 358 2 304 1 341 1 65 1 92 1 203 2 181 1 72 2 183 1 17 1 100 1 226 1 21 1 
304 1 258 2 48 1 230 2 49 1 65 2 168 1 50 1 120 1 107 1 203 1 181 1 132 1 141 1 166 1 56 1 338 1 157 1 17 1 100 2 146 1 371 1 274 1 
304 1 82 1 258 1 230 1 49 1 168 1 65 1 306 1 92 1 120 1 203 1 86 1 181 1 249 1 320 1 98 1 183 1 302 1 271 1 17 1 100 1 371 1 273 1 274 1 358 2 21 1 
340 1 
147 2 46 1 148 1 330 1 293 4 149 1 48 1 110 1 112 6 111 1 113 1 56 1 338 1 194 1 244 2 6 1 304 1 69 2 247 1 163 2 310 1 75 1 166 2 17 2 18 1 81 1 207 2 124 5 24 1 260 2 351 5 128 2 168 2 263 1 353 2 27 1 172 1 132 1 174 2 215 1 274 2 217 1 135 1 175 1 219 3 181 1 326 1 283 1 143 2 142 1 144 1 285 1 99 2 374 1 101 2 
124 3 46 1 330 1 293 2 24 1 351 3 27 1 110 1 112 2 194 1 215 1 6 1 219 1 247 1 69 1 326 1 367 1 75 1 142 1 285 1 18 1 374 1 
124 3 147 1 46 1 330 1 293 3 24 1 351 3 27 1 110 1 112 1 113 1 194 1 244 1 215 1 6 1 219 1 247 1 326 1 367 1 75 1 142 1 285 1 18 1 374 1 
124 3 147 1 46 1 330 1 293 3 24 1 351 3 27 1 110 1 112 2 113 1 194 1 244 1 215 1 6 1 219 1 247 1 69 1 326 1 367 1 75 1 142 1 143 1 285 1 18 1 374 1 
147 4 46 1 293 6 330 1 149 1 333 1 110 1 112 7 113 5 194 1 244 5 6 1 69 4 247 1 248 1 75 1 18 1 124 5 207 2 24 1 315 1 260 2 351 5 128 1 263 1 353 2 27 1 172 1 174 2 215 1 176 1 135 1 175 1 219 3 326 1 367 1 143 4 142 1 144 1 285 1 287 1 99 1 374 1 101 2 
147 2 207 2 124 4 46 1 148 1 330 1 293 4 149 1 24 1 260 2 351 4 128 1 263 1 353 2 27 1 110 1 172 1 112 4 113 1 194 1 244 2 174 2 215 1 6 1 135 1 175 1 219 2 69 2 247 1 326 1 163 2 75 1 143 2 142 1 144 1 285 1 99 1 18 1 374 1 101 2 
147 2 207 2 124 4 46 1 330 1 293 4 24 1 149 1 260 2 351 4 128 1 263 1 353 2 333 1 27 1 110 1 172 1 112 4 113 1 194 1 244 1 174 2 215 1 6 1 175 1 176 1 135 1 219 2 69 2 247 1 248 1 326 1 75 1 143 2 142 1 144 1 285 1 99 1 18 1 374 1 101 2 
147 2 207 2 124 4 46 1 330 1 293 4 24 1 149 1 260 2 351 4 128 1 263 1 353 2 333 1 27 1 110 1 172 1 112 4 113 1 194 1 244 1 174 2 215 1 6 1 175 1 176 1 135 1 219 2 69 2 247 1 248 1 326 1 75 1 143 2 142 1 144 1 285 1 99 1 18 1 374 1 101 2 
124 2 257 1 125 1 46 1 330 1 293 2 24 1 149 1 351 2 128 1 263 1 333 1 27 1 110 1 172 1 194 1 174 1 215 1 6 1 135 1 277 1 247 1 326 1 163 1 75 1 142 1 144 1 285 1 99 1 18 1 374 1 101 1 20 1 
207 2 124 4 147 3 46 1 330 1 293 5 149 1 24 1 260 2 315 1 351 4 128 1 263 1 353 2 333 1 27 1 110 1 172 1 112 5 113 1 194 1 244 1 174 2 215 1 6 1 175 1 135 1 176 1 219 2 247 1 69 3 248 1 326 1 75 1 142 1 143 3 144 1 285 1 99 1 18 1 374 1 101 2 
207 2 124 4 147 3 46 1 330 1 293 5 149 1 24 1 260 2 315 1 351 4 128 1 263 1 353 2 333 1 27 1 110 1 172 1 112 5 113 1 194 1 244 1 174 2 215 1 6 1 175 1 135 1 176 1 219 2 247 1 69 3 248 1 326 1 75 1 142 1 143 3 144 1 285 1 99 1 18 1 374 1 101 2 
147 2 124 4 125 2 46 1 148 1 330 1 293 4 149 1 24 1 351 4 128 1 263 1 27 1 110 1 172 1 112 4 113 1 30 2 194 1 244 1 174 2 215 1 6 1 135 1 219 2 277 1 69 2 247 1 326 1 163 2 75 1 143 2 142 1 144 1 285 1 99 1 18 1 374 1 101 2 
45 1 22 1 85 1 51 1 152 1 52 1 265 1 189 3 53 2 297 1 299 3 58 1 301 2 196 1 90 1 322 1 64 1 8 1 202 2 180 6 139 2 122 1 76 1 327 1 40 1 369 1 
102 1 85 1 152 2 52 1 189 6 53 1 238 1 173 1 191 1 268 1 31 3 297 11 299 8 58 4 301 4 196 2 134 1 67 3 202 1 280 1 180 14 307 1 364 1 139 2 122 2 76 11 165 2 327 2 40 2 346 1 369 2 15 1 288 2 
47 1 330 1 168 1 85 1 152 1 189 1 53 1 131 1 319 1 190 1 191 1 56 1 193 1 338 1 299 1 58 1 301 2 196 1 274 1 134 1 304 1 136 1 180 2 280 1 181 1 71 1 74 1 205 1 75 2 166 1 40 1 327 1 369 1 123 1 17 1 285 2 184 1 313 1 
45 1 330 1 47 2 51 1 52 3 152 3 189 10 53 2 191 1 190 2 56 2 297 7 338 2 299 10 58 7 301 6 196 3 63 2 304 2 64 1 202 4 342 2 70 1 122 3 205 1 75 3 76 7 165 2 166 1 123 1 15 4 17 3 313 1 22 1 168 3 85 3 213 2 131 2 173 2 269 1 273 1 274 3 90 1 134 1 322 1 136 2 280 1 180 20 181 2 139 8 95 2 97 2 327 3 40 3 369 3 285 3 225 1 288 2 184 1 
0 1 292 1 330 1 167 1 48 1 168 8 85 2 152 2 189 1 132 1 295 1 56 3 338 2 299 1 301 4 196 2 273 1 274 8 134 1 304 2 323 1 8 1 9 1 280 1 180 2 181 2 365 1 205 1 182 2 75 1 166 2 327 2 40 2 123 1 369 2 285 1 17 7 80 1 184 1 
330 1 85 1 152 1 52 1 189 2 173 1 191 1 297 1 242 1 299 1 58 1 301 2 196 1 66 1 202 1 180 3 139 1 122 1 205 1 76 1 75 1 165 1 327 1 40 1 369 1 370 1 285 1 288 1 184 1 
8 1 85 1 180 2 152 1 139 1 122 1 76 1 165 1 297 1 40 1 327 1 223 1 369 1 299 2 58 1 15 1 301 2 196 1 
8 1 85 1 202 1 180 2 152 1 52 1 139 1 189 2 173 1 76 1 297 1 40 1 327 1 369 1 347 1 58 1 301 2 196 1 
85 1 152 1 52 1 189 2 173 1 297 2 299 2 58 2 301 2 196 1 8 1 202 1 180 4 122 1 139 2 165 1 76 2 327 1 40 1 369 1 15 1 288 1 
9 1 85 1 180 2 152 1 139 1 122 1 76 1 165 1 297 1 40 1 327 1 223 1 369 1 299 2 58 1 15 1 301 2 196 1 
9 1 85 1 202 1 180 2 152 1 52 1 139 1 189 2 173 1 76 1 297 1 40 1 327 1 369 1 347 1 58 1 301 2 196 1 
85 1 152 1 52 1 189 2 173 1 297 2 299 2 58 2 301 2 196 1 9 1 202 1 180 4 122 1 139 2 165 1 76 2 327 1 40 1 369 1 15 1 288 1 
85 1 202 1 52 1 152 1 180 4 139 2 122 1 189 2 173 1 76 2 165 1 297 2 40 1 327 1 369 1 299 2 58 2 15 1 301 2 196 1 288 1 
47 1 168 1 85 1 152 1 189 1 53 1 131 1 190 1 56 1 338 1 299 1 301 2 196 1 274 1 134 1 304 1 63 1 136 1 280 1 180 2 181 1 75 1 166 1 40 1 327 1 369 1 17 1 285 1 
168 1 85 1 152 1 189 1 53 1 131 1 88 1 190 1 56 1 338 1 299 1 301 2 196 1 160 1 274 1 134 1 304 1 201 1 280 1 180 2 181 1 75 1 166 1 40 1 327 1 369 1 17 1 285 1 
85 1 152 1 52 1 189 2 173 1 191 1 297 2 299 2 58 2 301 2 196 1 202 1 180 4 122 1 139 2 165 1 76 2 327 1 40 1 369 1 15 1 288 1 
47 1 168 1 85 1 52 1 152 1 189 2 131 1 173 1 190 1 295 1 297 2 56 1 338 1 299 2 58 2 301 2 196 1 274 1 304 1 63 1 136 1 202 1 180 4 139 2 122 1 181 1 95 1 76 2 165 1 75 1 40 1 327 1 369 1 15 1 17 1 285 1 288 1 
330 1 85 1 52 1 152 1 189 1 173 1 191 1 297 1 299 2 58 1 301 2 196 1 177 1 66 1 180 3 139 1 122 1 205 1 75 1 165 1 76 1 327 1 40 1 369 1 15 1 370 1 285 1 288 1 184 1 
262 1 231 1 210 1 152 2 52 3 189 10 173 3 4 1 31 2 268 1 243 1 299 9 301 4 196 2 359 1 67 1 11 2 202 3 279 2 180 19 364 1 122 3 139 6 204 1 282 1 165 3 327 2 40 2 15 3 288 3 
84 1 262 2 231 2 210 1 52 2 152 3 189 12 173 2 4 1 268 2 31 2 299 14 357 1 301 6 196 3 216 1 359 1 67 2 11 1 37 2 202 2 279 4 180 26 139 4 122 3 282 1 96 1 165 3 368 1 327 3 40 3 42 1 15 2 288 3 
45 1 231 2 51 1 234 1 52 5 152 3 189 21 4 1 299 20 243 1 301 6 196 3 64 1 67 3 202 4 11 1 122 5 165 4 15 4 22 1 262 1 84 1 210 1 173 4 268 3 31 4 357 1 216 1 90 1 322 1 359 1 37 1 279 4 180 41 364 1 139 8 282 1 96 1 368 1 40 3 327 3 42 1 288 4 
45 1 22 1 84 1 262 1 231 2 51 1 234 1 210 1 152 4 52 4 189 18 173 3 4 1 31 4 268 3 243 1 357 1 299 20 301 8 196 4 216 1 90 1 322 1 64 1 359 1 67 3 11 1 37 2 202 4 279 4 180 38 364 1 122 5 139 7 96 1 282 1 165 4 368 1 327 4 40 4 42 1 15 3 288 4 
45 1 102 2 22 1 84 1 262 1 231 1 51 1 210 1 152 2 52 8 189 25 173 7 4 1 31 4 268 2 357 1 299 27 301 4 196 2 216 1 90 1 322 1 64 1 359 1 67 4 11 1 37 1 202 7 279 4 180 52 364 2 122 8 139 14 96 1 282 1 165 7 368 1 327 2 40 2 42 1 15 7 288 7 
360 1 43 1 246 1 159 1 318 1 3 1 154 1 
25 1 
344 1 360 1 159 1 318 1 3 1 154 1 
124 1 330 1 351 1 316 1 318 1 109 1 3 1 155 2 154 1 240 1 159 1 34 1 118 1 360 1 66 1 121 1 162 1 205 1 75 1 251 1 285 1 16 1 18 1 253 1 227 1 184 1 
124 1 330 1 351 1 316 1 318 1 109 1 3 1 155 2 154 1 240 1 159 1 34 1 118 1 360 1 66 1 121 1 162 1 205 1 75 1 251 1 285 1 16 1 18 1 253 1 227 1 184 1 
124 1 330 1 351 1 316 1 318 1 109 1 3 1 155 2 154 1 240 1 159 1 34 1 118 1 360 1 66 1 121 1 162 1 205 1 75 1 251 1 285 1 16 1 18 1 253 1 227 1 184 1 
200 1 
200 1 
171 1 
171 1 
350 1 2 1 
124 1 351 1 118 1 360 1 352 1 318 1 25 1 26 1 3 1 13 1 154 1 155 1 250 1 345 1 159 1 16 1 256 1 
200 1 
171 1 
292 1 330 2 127 1 168 2 85 1 105 1 152 1 266 1 189 1 191 1 56 1 338 1 299 1 301 2 196 1 274 2 134 1 304 1 323 1 33 1 362 1 280 1 180 2 181 1 182 2 75 2 40 1 327 1 369 1 285 2 17 2 
304 1 186 1 82 1 229 1 168 2 65 1 92 1 86 1 181 1 211 1 320 1 295 1 183 1 17 2 271 1 302 1 273 1 274 2 358 2 
82 1 304 1 168 1 65 1 92 1 86 1 212 1 211 1 181 1 320 1 183 1 17 1 271 1 302 1 273 1 274 1 358 2 
304 1 229 1 48 1 168 1 65 1 181 1 132 1 166 1 141 1 56 1 338 1 17 1 274 1 329 1 
186 1 82 1 304 1 229 1 168 1 65 1 92 1 86 1 181 1 211 1 320 1 183 1 17 1 271 1 302 1 273 1 274 1 358 2 
245 1 
220 1 348 1 265 1 
207 1 124 1 149 1 260 1 351 1 128 1 263 1 353 1 172 1 112 1 113 1 244 2 175 1 135 1 219 1 163 1 99 1 
45 1 1 2 330 1 149 4 109 1 52 4 334 1 112 5 113 2 56 6 338 1 5 6 244 8 59 3 197 3 304 1 64 1 66 1 121 1 122 4 163 12 205 1 75 1 251 1 310 1 165 2 166 1 14 1 17 1 18 1 348 1 124 5 22 1 24 2 260 6 351 5 168 1 128 11 317 2 129 2 263 4 130 1 87 1 355 4 131 1 172 4 173 2 274 1 217 2 218 1 135 4 219 3 91 1 220 1 93 6 181 2 39 2 97 2 41 2 285 1 99 12 288 2 227 1 184 1 373 2 
124 1 149 2 260 3 351 1 84 1 128 5 263 2 170 1 52 2 355 2 172 2 173 2 112 1 31 1 268 1 113 2 5 5 357 1 244 5 217 1 216 1 197 1 135 2 219 1 7 1 67 1 93 5 122 2 163 6 96 1 310 1 165 2 368 1 99 8 288 2 
45 1 124 1 330 1 149 1 22 1 351 1 128 2 263 1 52 1 109 1 355 2 172 1 197 1 218 1 135 1 64 1 66 1 248 1 121 1 122 2 205 1 75 1 251 1 285 1 18 1 99 2 227 1 184 1 
172 1 135 1 149 1 263 1 348 1 
197 1 260 5 128 5 93 5 52 2 355 2 122 2 163 10 173 2 97 1 165 2 5 5 244 5 288 2 99 5 
124 1 219 1 112 1 113 1 351 1 244 1 
124 3 149 1 48 1 351 3 168 4 128 2 232 2 264 1 263 2 87 1 172 2 132 1 112 4 56 1 338 1 300 1 274 4 217 2 304 1 135 2 219 2 181 1 283 1 310 2 166 2 224 1 17 4 99 2 81 1 
330 2 47 1 168 1 85 1 152 1 109 1 189 1 53 1 131 1 190 1 56 1 338 1 301 2 196 1 274 1 134 1 63 1 304 1 136 1 66 2 180 1 181 1 205 2 75 3 166 1 327 1 40 1 369 1 17 1 285 3 328 1 184 2 
90 1 135 1 149 1 260 2 128 2 263 1 93 2 163 4 172 1 310 1 113 2 5 2 244 4 99 1 217 1 
23 1 159 1 154 1 
321 1 83 1 350 1 159 1 154 1 
23 1 159 1 154 1 
23 1 159 1 154 1 
261 1 159 1 154 1 
261 1 159 1 154 1 
261 1 159 1 154 1 
159 1 154 1 
360 1 
90 1 45 1 322 1 22 1 64 1 202 2 37 1 51 1 52 1 180 8 152 2 122 1 139 3 189 4 40 2 327 2 299 4 15 1 301 4 196 2 
90 1 45 1 322 1 64 1 22 1 51 1 202 2 180 6 52 1 265 1 139 2 122 1 189 3 299 3 
115 1 202 1 52 1 152 1 180 4 139 2 122 1 189 2 173 1 165 1 40 1 327 1 299 2 15 1 301 2 196 1 288 1 
67 1 202 1 52 1 180 7 364 1 122 1 139 2 189 4 173 1 165 1 268 1 31 2 299 3 15 1 288 1 
45 2 102 1 22 1 51 1 52 3 152 2 189 12 173 2 31 2 299 11 301 4 196 2 90 1 322 1 64 2 67 2 202 5 37 2 180 23 38 1 364 1 139 9 122 3 165 2 40 2 327 2 346 1 15 4 288 2 
31 1 180 1 189 1 
299 1 67 1 180 1 
115 1 202 2 152 1 180 6 52 1 122 1 139 3 189 3 173 1 97 1 165 1 327 1 40 1 299 3 15 1 301 2 196 1 288 1 
84 1 152 1 52 2 189 6 173 2 31 1 268 1 357 1 299 6 301 2 196 1 216 1 359 1 67 1 202 1 180 12 122 2 139 2 96 1 165 2 368 1 327 1 40 1 15 1 288 2 
45 1 22 1 64 1 202 1 180 6 52 1 122 1 139 2 189 3 299 3 15 1 
45 1 322 1 64 1 202 1 51 1 37 1 38 1 180 3 152 1 139 2 189 2 40 1 327 1 299 1 15 1 301 2 196 1 
218 1 45 2 64 2 22 1 359 1 202 3 152 1 180 10 52 2 139 5 122 2 189 5 327 1 40 1 299 5 15 2 301 2 196 1 
359 1 152 1 180 2 122 1 139 1 165 1 40 1 327 1 299 2 15 1 301 2 196 1 
359 1 202 1 52 1 152 1 180 4 139 2 122 1 189 2 173 1 165 1 40 1 327 1 299 2 15 1 301 2 196 1 288 1 
45 1 64 1 359 1 37 1 202 1 38 1 180 3 152 3 139 2 189 2 40 3 327 3 243 1 299 1 15 1 301 6 196 3 
45 3 228 1 22 2 51 1 152 5 52 5 189 18 294 1 173 3 31 4 268 1 243 1 299 16 301 10 196 5 90 1 322 1 64 3 115 1 359 1 67 3 36 1 37 2 202 7 38 1 180 34 364 1 122 5 139 12 165 3 327 5 40 5 15 5 288 3 
45 1 22 1 51 1 52 1 152 1 189 4 31 1 268 1 357 1 299 4 301 2 196 1 90 1 322 1 64 1 359 1 67 1 202 2 180 8 122 1 139 2 327 1 40 1 
45 1 22 1 51 1 52 1 152 2 189 5 31 2 268 1 357 1 299 6 301 4 196 2 90 1 322 1 64 1 115 1 359 1 67 1 202 2 180 11 364 1 122 2 139 3 165 1 327 2 40 2 15 1 288 1 
45 1 22 1 84 1 51 1 152 3 52 3 189 10 173 2 31 1 268 1 357 1 299 9 301 6 196 3 216 1 90 1 322 1 64 1 115 1 359 1 67 1 202 3 37 1 180 19 122 3 139 4 96 1 165 2 368 1 327 3 40 3 15 1 288 2 
45 1 22 1 84 1 51 1 152 3 52 2 189 7 173 1 31 1 268 1 357 1 299 10 301 6 196 3 216 1 90 1 322 1 64 1 115 1 359 1 67 1 37 1 202 3 180 17 122 3 139 5 96 1 165 2 368 1 327 3 40 3 15 2 288 2 
45 1 22 1 51 1 52 1 152 1 189 4 31 1 268 1 357 1 299 4 301 2 196 1 90 1 322 1 64 1 359 1 67 1 202 2 180 8 122 1 139 2 327 1 40 1 
84 1 152 1 52 2 189 6 173 2 31 1 268 1 357 1 299 6 301 2 196 1 216 1 359 1 67 1 202 1 180 12 122 2 139 2 96 1 165 2 368 1 327 1 40 1 15 1 288 2 
45 1 22 1 84 1 51 1 152 4 52 2 189 8 173 1 31 1 268 1 357 1 299 10 301 8 196 4 216 1 90 1 322 1 64 1 115 1 359 1 67 1 202 3 37 2 180 18 122 3 139 5 96 1 165 2 368 1 327 4 40 4 15 2 288 2 
84 1 152 4 52 2 189 7 173 2 31 1 268 1 357 1 243 1 299 9 301 8 196 4 216 1 359 1 67 1 202 3 37 2 180 16 122 3 139 6 96 1 165 3 368 1 327 4 40 4 15 3 288 3 
45 3 322 1 64 3 22 1 51 2 202 3 52 1 180 7 139 6 122 1 189 4 299 3 15 3 
45 1 22 1 84 1 51 1 152 4 52 2 189 8 173 1 31 1 268 1 357 1 243 1 299 10 301 8 196 4 216 1 90 1 322 1 64 1 359 1 67 1 202 3 37 2 180 18 122 3 139 4 96 1 165 2 368 1 327 4 40 4 15 1 288 2 
53 1 46 1 330 1 75 1 187 1 361 1 285 1 
46 1 330 1 305 1 361 1 187 1 308 1 53 1 356 1 54 1 75 1 298 1 285 1 
304 1 132 1 48 1 166 1 56 1 338 1 168 1 17 1 274 1 181 1 265 1 
304 1 330 1 136 1 168 1 181 1 53 1 131 1 205 1 190 1 75 2 166 1 56 1 338 1 123 1 285 2 17 1 184 1 274 1 
330 2 168 1 232 1 53 1 131 2 190 1 56 3 338 2 215 1 272 1 274 1 304 1 136 1 181 1 205 1 75 2 123 1 17 1 285 2 18 1 289 1 184 2 374 1 
330 2 168 2 232 1 108 1 53 1 88 1 131 2 190 1 56 3 338 2 215 1 272 1 274 2 304 1 181 1 205 1 75 2 123 1 17 2 285 2 18 1 289 1 184 2 374 1 
124 2 24 1 351 2 168 3 129 1 232 1 108 1 131 1 112 1 56 4 113 1 156 1 338 1 244 1 59 1 272 1 274 3 304 1 181 1 166 1 311 1 17 3 289 1 
124 2 304 1 24 1 351 2 168 3 129 1 232 1 108 1 181 1 131 1 39 1 166 1 112 1 113 1 56 4 338 1 244 1 17 3 59 1 289 1 272 1 274 3 
304 1 168 1 17 1 80 1 274 1 181 1 
0 1 292 1 304 2 167 1 168 7 91 1 332 1 181 3 365 1 131 1 182 1 164 1 295 1 166 2 56 3 338 2 133 1 17 6 80 1 273 1 274 7 
45 1 330 1 47 1 22 1 168 1 85 2 105 1 51 1 52 1 152 2 189 3 213 1 53 2 131 1 190 1 191 1 295 1 297 1 56 1 338 1 299 3 58 1 301 4 196 2 274 1 90 1 304 1 63 1 322 1 64 1 136 1 202 2 180 6 122 1 139 2 181 1 95 1 205 1 76 1 75 2 40 2 327 2 369 2 123 1 285 2 17 1 184 1 
45 1 1 1 330 1 149 2 52 2 109 1 112 2 56 2 113 1 244 1 59 1 197 1 64 1 66 1 121 1 13 1 122 2 205 1 251 1 75 1 166 1 17 1 18 1 348 1 124 3 24 1 22 1 351 3 168 1 128 4 129 1 317 1 263 2 87 1 355 2 172 2 274 1 218 1 135 2 219 1 220 1 39 1 41 1 285 1 99 4 227 1 184 1 
304 1 168 2 129 1 91 1 334 1 181 2 131 1 295 1 56 2 338 1 17 2 80 1 274 2 
304 1 48 1 168 4 108 1 181 1 132 1 166 1 295 1 56 1 338 1 17 4 274 4 303 1 
304 1 168 2 232 1 324 1 181 2 131 1 164 1 56 1 338 1 133 1 17 2 225 1 19 1 274 2 
304 1 320 1 166 1 168 1 183 1 302 1 17 1 274 1 358 1 181 1 
304 1 292 1 295 1 56 1 127 1 338 1 168 2 17 2 273 1 274 2 181 1 
0 1 292 1 304 2 167 1 48 1 168 5 232 1 181 2 132 1 166 1 295 1 56 3 338 2 17 4 274 5 303 1 
292 1 304 2 199 1 167 1 48 1 168 5 232 1 181 2 132 1 166 1 295 1 56 3 338 2 17 4 274 5 303 1 
304 1 330 1 168 1 181 1 53 1 131 1 88 1 205 1 190 1 75 2 166 1 56 1 338 1 123 1 285 2 17 1 184 1 274 1 
304 1 168 1 91 1 232 1 332 1 181 2 131 1 164 1 56 1 338 1 133 1 17 1 274 1 
330 1 33 1 12 1 362 1 266 1 75 1 145 1 32 1 285 1 
12 1 281 1 237 1 
53 1 145 1 32 1 12 1 185 1 
124 2 275 1 24 1 351 2 12 1 247 1 281 1 13 1 237 1 53 1 239 1 113 1 145 2 244 1 215 1 32 2 18 1 374 1 185 2 
341 1 226 1 60 1 265 1 
341 1 49 1 120 1 371 1 226 1 203 1 60 1 
230 1 100 1 203 1 
341 1 49 3 120 1 203 3 249 1 192 1 252 2 195 1 371 1 226 1 60 1 314 1 
72 1 341 1 57 1 49 2 120 1 371 1 226 1 203 2 60 1 
198 1 341 1 150 1 49 1 120 1 371 1 203 1 372 1 249 1 
341 1 49 1 120 1 371 1 226 1 203 1 249 1 
49 1 120 1 371 1 226 2 203 1 60 1 249 1 
341 1 49 2 120 2 203 2 249 1 77 1 222 1 270 1 371 2 226 1 
72 1 341 1 150 1 336 1 49 2 106 1 120 1 235 1 371 1 203 2 372 1 249 1 
341 1 49 2 92 1 120 1 203 2 86 1 249 1 72 1 320 1 183 1 371 1 226 1 60 1 358 2 254 1 
72 1 341 1 150 1 57 1 49 2 106 1 120 1 371 1 203 2 372 1 290 1 249 1 
341 1 49 1 120 1 371 1 226 1 203 1 60 1 249 1 
72 1 341 1 150 1 49 2 106 1 120 1 371 1 203 2 372 2 
341 1 49 2 104 1 120 1 203 2 249 1 89 1 309 1 72 1 371 1 226 1 60 1 
341 1 49 3 120 1 203 3 249 1 192 2 252 2 371 1 226 1 114 1 60 1 314 1 
126 2 341 2 62 1 161 1 
259 1 49 1 120 1 371 1 203 1 249 1 
72 1 341 1 336 1 49 2 120 1 371 1 226 1 203 2 60 1 249 1 
241 1 
341 1 49 1 120 1 371 1 226 1 203 1 60 1 249 1 
72 1 341 1 336 1 49 3 252 1 120 1 371 1 226 1 203 3 60 1 249 1 
72 1 341 1 49 1 150 1 106 1 203 1 
341 1 226 1 

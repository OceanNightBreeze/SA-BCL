#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 202 292 85 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 202 292 85 296 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 202 292 85 (50,232) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 202 292 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 202 292 85 (50,232) (50,232) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 202 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 202 292 85 (50,232) (50,232) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 202 292 85 (50,232) (50,232) 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 202 292 85 (50,232) (50,232) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 202 292 85 (50,232) (50,232) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 202 292 85 (50,232) (50,232) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 202 292 85 (50,232) (50,232) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 202 110 81 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 202 292 85 (50,232) (50,232) 308 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 202 292 85 296 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 316 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 202 189 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 202 189 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 202 189 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 202 189 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 202 189 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 2 39 1 4 1 113 1 5 1 42 4 79 1 115 2 305 9 225 2 14 2 307 9 90 1 53 1 56 6 277 2 57 2 25 1 317 1 99 3 143 1 192 1 322 2 152 1 205 5 255 1 34 1 106 1 
0 2 39 1 4 1 113 1 5 1 42 4 79 1 115 2 305 9 225 2 14 2 307 9 90 1 53 1 56 6 57 2 277 2 25 1 317 1 99 3 143 1 192 1 322 2 152 1 205 5 255 1 34 1 106 1 
0 2 39 1 4 1 113 1 5 1 42 5 79 1 115 2 305 10 225 2 14 2 307 10 90 1 53 1 56 7 57 2 277 2 25 1 317 1 99 4 143 1 192 1 322 2 152 1 205 6 255 1 34 1 106 1 
0 2 39 1 4 1 5 1 42 3 79 1 115 2 305 7 225 2 14 2 307 7 90 1 53 1 56 4 57 2 277 1 25 1 317 1 99 2 143 1 192 1 322 2 152 1 205 4 255 1 34 1 106 1 
0 1 39 1 56 3 4 1 57 1 277 2 113 1 79 1 42 2 317 1 99 1 115 1 322 1 305 4 225 1 205 3 307 4 53 1 
0 1 160 1 238 1 39 1 4 1 57 1 25 1 317 1 322 1 305 2 225 1 14 1 205 1 82 1 307 2 90 1 
0 2 39 1 56 1 4 1 5 1 42 1 317 1 99 1 322 2 305 3 14 1 205 2 307 3 
0 2 39 1 4 1 42 4 5 1 79 1 113 1 115 1 305 9 225 1 14 1 229 1 307 9 53 1 56 7 277 2 57 1 317 1 99 3 61 1 192 1 322 2 205 5 255 1 
0 2 39 1 4 1 42 4 5 1 79 1 113 1 115 1 305 9 225 1 14 1 229 1 307 9 53 1 56 7 277 2 57 1 317 1 99 3 61 1 192 1 322 2 205 5 255 1 
316 1 157 1 261 1 
324 2 139 1 157 1 
202 1 85 1 292 1 
202 1 296 1 85 1 292 1 
202 1 50 1 85 1 292 1 
55 1 44 1 97 1 261 1 165 1 325 1 30 1 175 1 157 1 209 1 37 1 211 1 290 1 176 1 
202 1 292 1 
208 1 301 1 290 1 100 1 165 1 
331 1 208 1 157 1 261 1 268 1 301 1 290 2 165 2 
301 1 290 1 165 1 
202 1 50 1 232 1 208 1 85 1 290 1 165 1 292 1 
157 1 
228 1 331 1 208 1 157 1 261 1 301 1 290 2 165 2 
271 1 77 1 96 2 261 1 318 1 142 1 301 2 165 5 194 1 125 1 331 1 208 2 172 1 156 1 234 2 157 1 105 1 70 2 290 5 
249 1 282 1 
249 1 282 1 
309 1 135 1 
309 1 135 1 
309 1 135 1 
312 1 249 1 282 1 
312 1 249 1 282 1 
312 1 249 1 282 1 
133 1 249 1 282 1 
297 1 249 1 282 1 
309 1 135 1 58 1 249 2 91 1 282 2 
133 1 249 1 282 1 
133 1 249 1 282 1 
323 1 202 1 78 1 170 1 249 1 17 1 163 1 290 1 131 1 282 1 165 1 
310 1 93 1 274 1 78 2 313 2 58 1 249 2 163 2 282 2 165 2 323 1 328 1 170 2 157 1 17 3 86 1 290 2 212 1 131 2 
225 1 57 1 115 1 
225 1 82 1 57 1 
225 3 1 1 82 1 231 1 115 2 188 1 
225 2 136 1 82 1 231 1 115 1 188 1 
225 2 82 1 231 2 115 1 188 1 
294 1 109 1 45 1 118 1 261 1 301 1 165 5 120 2 83 1 126 1 172 3 234 1 88 1 129 1 241 1 243 2 96 1 139 1 190 1 191 1 194 2 201 1 324 3 327 1 331 1 208 4 33 2 157 2 70 1 105 1 290 5 108 1 
294 1 45 2 118 3 261 1 301 6 165 9 120 6 83 3 172 8 234 2 129 3 130 5 271 1 243 6 137 1 96 2 139 3 190 2 191 3 100 5 194 6 201 4 324 9 327 3 330 1 208 7 207 1 331 1 157 5 289 1 105 1 70 2 290 9 107 1 159 1 
109 1 45 1 261 1 118 1 165 3 120 2 83 1 172 3 234 1 129 1 271 1 243 2 96 1 139 2 190 1 191 1 194 2 201 1 324 4 327 1 208 2 157 3 33 1 70 1 290 3 108 1 
109 1 45 1 261 1 118 2 165 4 120 4 83 2 172 5 234 1 129 2 271 1 243 4 137 1 96 1 139 3 190 1 191 2 194 4 201 2 324 7 327 2 208 3 157 4 33 2 289 1 70 1 290 4 107 1 108 1 
124 1 103 1 316 1 266 1 36 1 
92 1 36 1 
62 1 
227 1 31 1 36 1 
169 1 36 1 
31 1 36 1 
252 1 227 1 124 2 216 1 31 1 36 3 
293 2 213 4 214 2 118 3 164 14 48 1 304 2 83 3 16 5 174 1 308 1 272 6 95 1 140 1 281 8 147 2 149 1 329 1 
293 2 213 4 214 2 118 3 164 14 48 1 304 2 83 3 16 7 174 3 308 1 272 6 95 1 140 1 281 8 147 2 149 1 329 1 
293 2 213 4 214 2 118 3 164 14 48 1 304 2 83 3 16 5 174 1 308 1 272 6 19 1 95 1 140 1 281 8 147 2 149 1 329 1 
293 3 257 2 75 1 214 2 213 7 3 1 218 1 260 3 118 6 221 1 164 40 48 2 302 1 304 3 11 1 226 1 12 1 83 6 16 14 174 7 308 1 129 3 272 19 95 1 314 1 140 2 281 21 191 3 147 3 196 1 149 1 200 1 327 3 329 1 288 4 
293 2 257 4 213 5 214 2 3 2 161 1 118 3 164 16 48 1 304 2 226 2 12 1 83 3 16 7 174 2 308 1 177 1 272 7 314 2 95 1 140 1 281 9 147 2 200 2 149 1 
0 1 1 1 39 1 4 1 115 1 220 1 9 2 80 1 305 2 225 2 14 1 230 1 15 1 82 1 307 2 237 1 179 1 56 1 94 1 57 1 138 2 186 2 317 1 322 1 101 1 198 1 203 1 205 1 66 1 65 1 285 1 
0 1 1 1 39 1 115 1 220 1 9 1 80 1 305 3 225 2 14 1 82 1 233 1 307 3 237 1 179 1 22 1 56 2 94 1 57 1 138 1 186 1 317 1 322 1 101 1 203 1 205 1 66 1 65 1 285 1 332 1 
1 1 39 1 115 1 220 1 9 1 305 2 225 2 14 1 82 1 233 1 307 2 237 1 179 1 56 2 138 1 57 1 186 1 317 1 101 1 203 1 205 1 66 1 65 1 285 1 332 1 
178 1 0 1 179 2 22 1 138 1 26 1 279 1 186 1 219 1 300 1 9 1 101 1 322 1 305 1 14 2 203 1 31 1 66 2 84 1 285 2 35 1 307 1 36 1 
0 1 1 1 4 1 115 1 220 1 9 1 80 1 305 1 225 2 14 1 15 1 82 1 233 1 307 1 237 1 179 1 94 1 57 1 138 1 186 1 322 1 101 1 203 1 66 1 65 1 285 1 
68 1 
74 1 2 1 261 1 165 5 9 2 10 1 167 2 168 2 264 1 172 2 175 1 176 1 270 1 275 1 24 1 96 1 279 2 186 2 97 1 187 1 280 1 190 1 194 2 101 1 203 1 30 1 31 1 35 1 105 1 209 1 290 5 36 1 37 1 211 1 38 2 44 1 300 1 301 6 121 1 49 1 235 2 234 1 236 2 240 2 239 4 55 1 138 2 139 2 141 1 324 2 325 1 64 2 331 3 157 2 70 1 
74 1 2 1 44 1 301 2 165 3 167 1 228 1 264 1 175 1 176 1 270 1 239 2 55 1 24 1 97 1 325 1 30 1 331 1 209 1 211 1 37 1 290 3 
74 1 38 1 2 1 44 1 261 1 301 1 165 3 228 1 264 1 175 1 176 1 270 1 239 3 55 1 24 1 97 1 325 1 30 1 331 1 157 1 209 1 211 1 37 1 290 3 
74 1 38 1 2 1 44 1 261 1 301 2 165 3 167 1 228 1 264 1 175 1 176 1 270 1 239 3 55 1 24 1 97 1 325 1 30 1 331 1 64 1 157 1 209 1 211 1 37 1 290 3 
74 1 2 1 261 1 165 4 167 3 168 1 264 1 172 1 85 1 175 1 267 1 176 1 270 1 275 1 24 1 96 1 97 1 280 1 194 1 202 1 30 1 209 1 105 1 211 1 290 4 37 1 292 1 38 1 44 1 301 5 50 1 228 1 232 1 234 1 235 1 236 1 311 1 239 3 240 1 55 1 246 1 139 1 250 1 148 1 325 1 64 3 331 2 157 1 70 1 
74 1 2 1 261 1 165 4 167 2 10 1 168 2 264 1 172 1 175 1 176 1 270 1 275 1 24 1 96 1 97 1 280 1 194 1 30 1 209 1 105 1 211 1 37 1 290 4 38 2 44 1 301 4 234 1 235 2 236 2 239 4 240 2 55 1 139 2 325 1 324 2 331 2 64 2 157 2 70 1 
74 1 2 1 261 1 165 3 167 1 168 1 264 1 172 1 85 1 175 1 267 1 176 1 270 1 275 1 24 1 96 1 97 1 280 1 194 1 202 1 30 1 105 1 209 1 290 3 37 1 211 1 292 1 38 1 44 1 301 2 50 1 232 1 234 1 235 1 236 1 239 3 240 1 55 1 246 1 139 1 250 1 325 1 331 1 64 1 157 1 70 1 
74 1 2 1 261 1 165 3 167 1 168 1 264 1 172 1 85 1 175 1 267 1 176 1 270 1 275 1 24 1 96 1 97 1 280 1 194 1 202 1 30 1 105 1 209 1 290 3 37 1 211 1 292 1 38 1 44 1 301 2 50 1 232 1 234 1 235 1 236 1 239 3 240 1 55 1 246 1 139 1 250 1 325 1 331 1 64 1 157 1 70 1 
74 1 2 1 261 1 262 1 165 3 167 1 264 1 172 1 85 1 175 1 176 1 270 1 24 1 96 1 97 1 280 1 194 1 102 1 202 1 30 1 105 1 209 1 290 3 37 1 211 1 292 1 38 1 217 1 44 1 299 1 301 2 50 1 232 1 234 1 235 1 132 1 239 3 240 1 55 1 246 1 325 1 324 1 331 1 64 1 157 1 70 1 
74 1 2 1 261 1 165 3 167 2 168 1 264 1 172 1 85 1 175 1 267 1 176 1 270 1 275 1 24 1 96 1 97 1 280 1 194 1 202 1 30 1 209 1 105 1 290 3 37 1 211 1 292 1 38 2 44 1 301 3 50 1 232 1 234 1 235 1 236 1 239 4 240 1 55 1 246 1 139 1 250 1 148 1 325 1 64 2 331 1 157 1 70 1 
74 1 2 1 261 1 165 3 167 2 168 1 264 1 172 1 85 1 175 1 267 1 176 1 270 1 275 1 24 1 96 1 97 1 280 1 194 1 202 1 30 1 209 1 105 1 290 3 37 1 211 1 292 1 38 2 44 1 301 3 50 1 232 1 234 1 235 1 236 1 239 4 240 1 55 1 246 1 139 1 250 1 148 1 325 1 64 2 331 1 157 1 70 1 
74 1 2 1 261 1 165 4 167 2 10 1 264 1 172 1 175 1 176 1 270 1 24 1 96 1 97 1 280 1 194 1 102 1 30 1 209 1 105 1 211 1 37 1 290 4 38 2 44 1 299 2 301 4 234 1 235 2 132 2 239 4 240 2 55 1 325 1 324 2 331 2 64 2 157 1 70 1 
257 6 75 3 161 1 3 3 260 3 8 1 7 1 164 41 11 1 12 1 83 5 16 8 174 4 89 4 272 21 182 1 23 2 95 1 184 1 191 4 281 20 283 1 200 3 287 1 286 1 288 4 293 1 213 4 214 1 111 1 43 1 114 1 118 5 224 1 304 1 226 3 129 4 314 3 147 1 149 1 327 4 154 1 69 1 
293 1 75 3 257 8 214 1 213 4 3 4 161 1 111 1 114 1 43 1 260 3 7 1 8 1 118 4 164 38 304 1 224 1 11 1 12 2 226 4 83 5 16 7 174 3 89 4 129 4 272 18 182 1 23 2 95 1 314 4 184 1 281 20 191 4 283 1 147 1 149 1 200 4 327 3 154 1 286 1 287 1 69 1 288 4 
293 1 75 2 257 4 214 1 213 7 3 2 161 1 111 1 114 1 43 1 260 4 8 1 118 8 164 52 304 1 224 1 11 2 12 1 226 2 83 8 16 14 174 7 89 4 129 7 272 25 182 1 23 1 95 1 314 2 184 1 281 27 191 7 283 1 147 1 149 1 200 2 327 7 284 2 154 1 287 1 69 1 288 4 
75 1 257 4 213 3 3 2 161 1 43 1 260 1 8 1 118 3 164 19 224 1 11 1 226 2 83 3 16 6 174 3 89 2 129 3 272 10 244 1 23 1 314 2 184 2 281 9 191 3 200 2 327 3 154 1 286 1 288 2 
257 6 75 2 213 2 3 3 161 1 111 1 114 1 43 1 260 2 8 2 118 2 164 26 224 1 12 2 226 3 83 3 16 4 174 2 89 4 129 3 272 12 182 1 23 2 314 3 184 1 281 14 191 3 283 1 200 3 327 2 154 1 69 1 287 1 288 2 
328 1 78 1 170 1 58 1 249 1 86 1 163 1 73 1 131 1 282 1 
297 1 6 1 
78 1 170 1 249 1 163 1 222 1 72 1 131 1 282 1 303 1 
166 1 312 1 
133 1 210 1 91 1 
310 1 93 1 78 1 313 1 58 1 249 1 163 1 165 1 282 1 323 1 328 1 170 1 157 1 17 2 86 1 290 1 212 1 131 1 
310 1 93 1 78 1 313 1 58 1 249 1 163 1 165 1 282 1 323 1 328 1 170 1 157 1 17 2 86 1 290 1 212 1 131 1 
310 1 93 1 78 1 313 1 58 1 249 1 163 1 165 1 282 1 323 1 328 1 170 1 157 1 17 2 86 1 290 1 212 1 131 1 
166 1 312 1 91 1 
166 1 312 1 91 1 
133 1 210 1 
133 1 210 1 91 1 
162 1 193 1 
93 1 241 1 110 1 78 1 313 1 297 1 162 1 249 1 6 1 163 1 282 1 165 1 193 1 81 1 201 1 202 1 170 1 208 1 17 1 88 1 290 1 131 1 
257 2 3 1 298 1 47 1 164 2 9 2 119 1 226 1 265 1 175 2 52 1 272 1 181 1 314 1 138 2 60 1 186 2 97 2 281 1 101 1 200 1 198 2 325 2 203 1 31 1 104 1 204 1 155 1 67 1 36 1 291 1 
1 1 180 1 94 1 57 1 138 2 186 2 115 1 9 2 101 1 122 1 225 2 199 1 203 1 230 1 82 1 233 1 66 1 65 1 237 1 
1 1 94 1 57 1 138 1 278 1 186 1 115 1 9 1 101 1 122 1 225 2 203 1 82 1 233 1 66 1 65 1 237 1 
178 1 256 1 199 1 203 1 31 1 66 1 138 1 279 1 35 1 186 1 300 1 36 1 9 1 101 1 
1 1 180 1 94 1 57 1 138 1 186 1 115 1 9 1 101 1 122 1 225 2 199 1 203 1 82 1 233 1 66 1 65 1 237 1 
76 1 
77 1 172 1 316 1 156 1 157 1 261 1 194 1 
261 1 301 1 165 1 168 1 172 1 234 1 236 1 275 1 96 1 139 1 194 1 324 1 331 1 157 2 70 1 105 1 290 1 
92 1 41 1 96 1 138 1 279 1 186 1 28 1 9 1 101 1 252 1 227 1 203 2 31 1 234 1 105 1 70 1 36 2 
75 1 111 1 260 1 118 2 261 2 301 1 165 1 120 5 83 2 172 8 234 2 18 1 129 2 242 1 182 1 243 5 96 2 139 3 141 1 190 1 191 2 283 1 194 5 150 1 324 6 327 2 331 1 153 2 69 1 287 1 288 1 157 5 70 2 105 2 290 1 
214 1 96 1 118 1 165 1 194 1 147 1 304 1 202 1 50 1 83 1 232 1 153 2 172 2 85 1 234 1 267 1 105 1 70 1 290 1 308 1 292 1 
77 1 96 1 261 1 194 1 172 1 156 1 234 1 157 1 105 1 70 1 
243 5 139 5 118 2 191 2 194 5 120 5 150 1 324 10 327 2 83 2 153 2 172 5 157 5 87 1 129 2 
331 1 157 1 261 1 290 1 301 1 165 1 
215 1 300 1 301 4 9 4 165 3 263 1 13 1 49 1 172 2 234 2 271 1 96 2 138 4 248 2 279 2 186 4 141 2 187 1 190 2 101 1 194 2 203 1 31 1 331 2 35 1 70 2 105 1 36 1 290 3 
202 1 296 1 85 1 292 1 
293 1 243 2 96 1 139 2 141 1 190 1 261 2 194 2 120 2 324 4 172 1 234 1 157 4 105 1 70 1 
78 1 171 1 131 1 
78 1 171 1 131 1 
78 1 171 1 131 1 
197 1 78 1 131 1 
328 1 78 1 206 1 131 1 193 1 
197 1 78 1 131 1 
197 1 78 1 131 1 
78 1 131 1 
249 1 282 1 
293 1 75 1 257 2 213 4 214 2 3 1 161 1 260 1 118 3 164 15 304 2 226 1 83 3 16 5 174 1 308 1 272 7 314 1 95 1 281 8 147 2 200 1 149 1 69 1 288 1 
293 1 75 1 257 4 214 2 213 4 161 1 3 2 260 1 118 3 164 18 304 2 11 1 226 2 123 1 83 4 16 6 174 2 308 1 129 1 272 8 95 1 314 2 281 10 191 1 147 2 149 1 200 2 69 1 288 2 
293 1 75 1 257 6 214 2 213 5 3 3 161 1 111 1 260 1 118 5 164 26 304 2 226 3 12 1 123 1 83 5 16 7 174 2 308 1 129 2 272 13 182 1 95 1 314 3 281 13 191 2 283 1 147 2 149 1 200 3 327 2 69 1 287 1 288 1 
293 1 75 1 257 6 214 2 213 5 3 3 161 1 111 1 260 1 118 4 164 24 304 2 12 1 226 3 123 1 83 5 16 9 174 4 308 1 129 2 272 10 182 1 95 1 314 3 281 14 191 2 283 1 147 2 149 1 200 3 327 1 69 1 287 1 288 1 
293 1 75 1 257 2 213 4 214 2 3 1 161 1 260 1 118 3 164 15 304 2 226 1 83 3 16 5 174 1 308 1 272 7 314 1 95 1 281 8 147 2 200 1 149 1 69 1 288 1 
75 1 257 2 213 1 3 1 161 1 111 1 260 1 118 2 164 12 226 1 83 2 16 2 174 1 129 2 272 6 182 1 314 1 281 6 191 2 283 1 200 1 327 2 69 1 287 1 288 1 
293 1 75 1 257 8 214 2 213 5 3 4 161 1 111 1 260 1 118 4 164 25 304 2 226 4 12 2 123 1 83 5 16 7 174 2 308 1 129 2 272 11 182 1 95 1 314 4 281 14 191 2 283 1 147 2 149 1 200 4 327 1 69 1 287 1 288 1 
75 1 257 8 213 3 161 1 3 4 111 1 260 1 118 2 164 16 226 4 12 2 83 3 16 6 174 3 129 3 272 7 182 1 314 4 281 9 191 3 283 1 200 4 327 2 69 1 286 1 287 1 288 1 
272 4 213 3 214 1 95 1 118 1 164 7 281 3 147 3 304 3 149 2 83 1 16 6 174 3 
293 1 75 1 257 8 214 2 213 5 161 1 3 4 111 1 260 1 118 4 164 25 304 2 226 4 12 2 83 5 16 7 174 2 308 1 129 2 272 11 182 1 95 1 314 4 281 14 191 2 283 1 147 2 149 1 200 4 327 1 69 1 286 1 287 1 288 1 
293 1 257 4 213 4 214 2 3 2 118 3 164 17 304 2 12 1 226 2 83 3 16 7 174 3 308 1 272 8 95 1 314 2 281 9 147 2 149 1 200 2 
293 1 272 2 213 2 214 1 95 1 316 1 118 1 281 3 164 5 147 1 304 1 149 1 83 1 16 2 
272 2 257 2 213 1 3 1 314 1 118 1 191 1 281 2 164 4 226 1 200 1 123 1 327 1 83 1 16 2 174 1 129 1 
75 1 272 4 213 1 260 1 118 1 164 7 281 3 191 1 11 1 327 1 83 1 16 2 174 1 288 2 129 1 
293 1 257 2 214 2 213 5 3 1 260 2 116 1 118 5 164 25 304 2 11 1 12 1 226 1 83 5 16 7 174 2 308 1 129 2 272 12 95 1 314 1 191 2 281 13 147 2 149 1 200 1 327 2 284 1 288 2 
272 1 288 1 164 1 
260 1 164 1 281 1 
257 2 272 3 213 2 3 1 314 1 118 1 164 6 191 1 281 3 200 1 226 1 123 1 327 1 83 1 16 3 174 1 87 1 129 1 
75 1 257 2 213 1 3 1 161 1 111 1 260 1 118 2 164 12 226 1 83 2 16 2 174 1 129 2 272 6 182 1 314 1 281 6 191 2 283 1 200 1 327 2 69 1 287 1 288 1 
272 3 214 1 213 1 118 1 281 3 164 6 147 1 304 1 83 1 16 2 174 1 
272 2 257 2 213 1 3 1 314 1 95 1 281 1 164 3 147 1 304 1 149 1 12 1 226 1 200 1 16 2 174 1 127 1 
257 2 272 5 213 3 214 1 3 1 161 1 314 1 118 2 281 5 164 10 147 2 304 2 200 1 226 1 83 2 16 5 174 2 308 1 
257 2 161 1 3 1 314 1 281 2 164 2 226 1 200 1 83 1 16 1 174 1 129 1 
272 2 257 2 213 1 161 1 3 1 314 1 118 1 191 1 281 2 164 4 226 1 200 1 327 1 83 1 16 2 174 1 129 1 
272 2 257 6 213 1 161 1 3 3 314 3 164 3 281 1 147 1 304 1 12 1 226 3 200 3 16 2 127 1 286 1 174 1 
293 1 75 1 257 8 214 2 213 5 3 4 161 1 218 1 260 3 118 5 221 1 164 31 304 2 12 1 226 4 123 1 83 5 16 9 174 4 308 1 129 2 272 15 95 1 314 4 281 16 191 2 147 2 196 1 149 1 200 4 327 2 286 1 288 3 
325 1 20 1 175 1 97 1 117 1 37 1 321 1 
295 1 20 1 259 1 97 1 27 1 117 1 321 1 325 1 326 1 151 1 175 1 37 1 
203 1 31 1 138 1 316 1 279 1 35 1 186 1 300 1 36 1 9 1 101 1 
202 1 189 1 
202 1 189 1 
202 1 189 1 
112 1 44 1 261 1 301 1 9 3 165 2 227 1 124 1 169 1 92 1 183 1 138 3 248 1 59 1 279 1 186 3 319 1 101 1 203 1 31 1 157 1 36 4 290 2 
92 1 183 1 112 1 138 3 44 1 279 1 248 1 186 3 261 1 301 1 165 2 9 3 101 1 227 1 203 1 124 1 169 1 31 1 157 1 158 1 290 2 36 4 
146 1 203 1 138 1 186 1 9 1 101 1 
276 1 315 1 138 7 298 1 279 2 186 7 144 1 9 6 320 1 145 1 101 2 146 1 252 1 198 1 227 1 230 1 203 3 31 2 233 1 71 1 36 3 
202 1 189 1 
77 1 44 1 261 1 46 1 301 2 9 1 165 3 263 1 124 1 172 1 173 1 234 2 92 1 138 1 96 2 279 1 186 1 194 1 29 1 208 1 331 1 156 1 157 1 158 1 70 2 105 2 290 3 36 2 
138 2 186 2 28 1 9 2 101 1 146 1 252 1 227 1 230 1 124 1 203 2 31 1 36 2 
112 1 138 4 279 1 186 4 300 1 9 4 101 1 203 1 230 1 254 1 31 1 35 1 36 1 
54 1 40 1 138 2 248 1 186 2 144 1 9 2 145 1 101 1 227 1 203 2 31 1 36 1 269 1 
225 1 203 1 82 1 57 1 65 1 138 1 279 1 186 1 9 1 101 1 
138 2 298 1 186 2 9 2 101 1 230 1 203 1 31 1 233 1 52 1 36 1 
315 1 138 5 248 1 279 1 298 1 186 5 300 1 9 4 101 2 230 1 203 2 254 1 31 2 35 1 36 3 71 1 
138 5 248 1 279 1 298 1 186 5 300 1 9 4 101 2 230 1 51 1 203 2 254 1 31 2 35 1 36 3 71 1 
202 1 189 1 
138 1 248 1 186 1 144 1 9 1 320 1 145 1 101 1 252 1 227 1 203 2 31 1 36 1 
39 1 205 1 316 1 317 1 
0 1 305 1 39 1 205 1 317 1 307 1 322 1 
14 1 285 1 307 1 
0 1 305 3 273 1 258 1 39 1 4 1 205 1 247 1 317 1 307 3 90 2 322 1 
0 1 305 2 39 1 56 1 205 1 277 1 317 1 307 2 322 1 
0 1 4 1 57 1 42 1 115 1 322 1 305 1 225 1 205 1 307 1 53 1 
0 1 305 1 39 1 4 1 205 1 307 1 322 1 
0 1 305 1 39 2 4 1 317 1 307 1 322 1 
0 2 195 1 305 2 134 1 39 1 4 1 205 1 306 1 307 2 322 2 
0 1 39 1 56 2 4 1 42 1 317 1 99 1 192 1 322 1 305 3 205 2 255 1 307 3 
0 1 1 1 39 1 56 1 4 1 57 1 317 1 115 1 322 1 305 2 225 2 205 1 82 1 128 1 307 2 
0 2 39 1 56 2 4 1 277 1 113 1 42 1 317 1 99 1 322 2 305 4 205 2 307 4 
0 1 305 1 39 1 4 1 205 1 317 1 307 1 322 1 
0 1 273 1 39 2 56 2 247 1 42 1 317 2 99 1 322 1 305 4 205 3 32 1 307 4 90 1 
0 1 39 1 56 1 4 1 317 1 61 1 322 1 251 1 305 2 253 1 205 1 307 2 
0 1 305 3 273 1 39 1 245 1 4 1 205 1 247 2 317 1 307 3 90 2 322 1 
63 1 21 1 205 2 185 2 
0 1 305 1 4 1 307 1 223 1 322 1 
0 1 305 2 39 1 56 1 4 1 205 1 317 1 307 2 192 1 322 1 
98 1 
0 1 305 1 39 1 4 1 205 1 317 1 307 1 322 1 
0 1 56 1 39 1 4 1 317 1 192 1 322 1 305 3 205 1 307 3 90 1 
205 1 32 1 42 1 99 1 
39 1 205 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 340 208 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 340 208 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 340 208 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 340 317 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 340 208 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 237 44 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1902 | = null
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
338 1 266 1 141 7 215 1 296 4 148 9 149 1 272 1 254 1 152 3 126 1 16 5 57 1 129 9 328 1 305 1 307 1 81 1 108 2 334 2 335 1 278 1 84 2 311 1 
338 1 266 1 141 7 215 1 296 4 148 9 149 1 272 1 254 1 152 3 126 1 16 5 57 1 129 9 328 1 305 1 307 1 81 1 108 2 334 2 335 1 278 1 84 2 311 1 
359 1 338 1 111 1 266 1 139 1 141 6 8 1 215 1 296 4 148 9 149 1 254 1 152 3 126 1 57 2 16 5 129 9 328 2 305 2 159 1 307 1 81 1 108 2 334 2 335 2 262 1 278 1 84 2 
359 1 338 1 111 1 266 1 139 1 141 6 8 1 215 1 296 4 148 9 149 1 254 1 152 3 126 1 57 2 16 5 129 9 328 2 305 2 159 1 307 1 81 1 108 2 334 2 335 2 262 1 278 1 84 2 
359 1 338 1 111 1 266 1 139 1 141 7 8 1 215 1 296 5 148 10 149 1 254 1 152 4 126 1 57 2 16 6 129 10 328 2 305 2 159 1 307 1 81 1 108 2 334 2 335 2 262 1 278 1 84 2 
359 1 338 1 111 1 266 1 139 1 141 4 8 1 215 1 296 3 148 7 149 1 254 1 152 2 57 2 16 4 129 7 328 2 305 2 159 1 307 1 81 1 108 2 334 1 335 2 262 1 278 1 84 2 
152 1 126 1 338 1 57 1 16 3 129 4 328 1 141 3 305 1 81 1 108 1 334 2 296 2 148 4 278 1 84 1 149 1 254 1 
338 1 16 1 57 1 129 2 328 1 190 1 214 1 159 1 8 1 230 1 108 1 335 1 148 2 278 1 84 1 254 1 
152 1 338 1 16 2 129 3 141 1 307 1 108 2 296 1 335 1 148 3 278 1 84 2 254 1 
46 1 1 1 166 1 
46 1 127 1 131 2 
185 2 277 2 306 1 103 2 21 2 337 2 281 2 352 1 
28 1 185 2 362 1 236 1 239 2 211 1 164 1 69 2 165 1 117 1 118 1 292 1 33 1 191 1 298 2 223 1 323 1 76 2 176 1 103 2 77 1 304 1 21 3 352 1 277 3 259 1 355 2 260 1 306 1 43 1 82 1 206 1 310 1 45 1 337 2 86 1 281 2 
185 1 189 1 277 1 204 1 325 1 103 1 21 1 337 1 281 1 352 1 
46 1 222 1 98 1 136 1 137 1 1 1 372 1 325 1 103 1 21 1 331 1 277 1 32 1 72 1 
185 1 46 1 98 1 136 2 137 1 1 1 325 1 103 1 21 1 331 1 277 1 32 2 72 1 337 1 281 1 
313 1 136 1 32 1 227 1 380 1 
313 1 46 1 207 1 136 2 32 2 377 1 1 1 227 1 
313 1 136 1 32 1 
314 1 185 1 136 1 325 1 227 1 103 1 21 1 352 1 189 1 277 1 32 1 204 1 337 1 281 1 
46 1 
313 1 46 1 207 1 99 1 136 2 32 2 1 1 227 1 
313 2 46 1 207 1 136 5 1 1 30 2 326 1 315 1 227 2 116 1 78 1 115 1 318 1 276 1 32 5 248 2 234 2 219 1 12 1 
306 1 166 1 
185 1 103 2 21 2 277 2 306 2 169 1 182 1 337 1 281 1 
74 1 31 1 336 1 
242 1 176 1 211 1 164 1 69 1 21 1 117 1 277 1 118 1 292 1 355 1 306 1 82 1 43 1 298 1 310 1 
185 1 74 1 211 1 176 1 103 1 164 1 69 1 21 2 117 1 118 1 277 2 292 1 355 1 43 1 82 1 183 1 298 1 310 1 41 1 281 1 
185 4 372 1 47 1 103 5 21 5 366 1 277 5 306 1 169 1 183 1 205 1 41 2 337 1 281 4 
151 1 185 2 189 1 277 2 325 1 103 2 21 2 281 2 
185 3 277 3 306 1 103 3 21 3 337 1 41 1 281 3 
185 1 189 1 277 1 325 1 103 1 21 1 281 1 
185 1 277 1 169 1 325 1 182 1 103 1 21 1 337 1 281 1 
185 3 136 1 362 1 137 1 236 1 90 1 239 2 211 1 164 1 69 1 165 1 117 1 118 1 292 1 32 1 72 1 169 1 298 1 41 1 98 1 323 1 174 1 76 1 325 1 176 1 103 3 77 1 304 1 21 4 331 1 352 1 277 4 355 1 260 1 306 1 43 1 82 1 183 1 206 1 310 1 45 1 337 2 86 1 281 3 
185 1 277 2 306 1 372 1 47 1 103 2 21 2 41 1 281 1 
185 3 46 1 98 1 136 1 137 1 162 1 90 1 325 1 103 3 21 3 331 1 277 3 32 1 72 1 169 1 183 1 337 1 41 2 281 3 
185 2 74 1 31 1 103 2 21 2 277 2 169 1 41 1 337 1 281 2 
176 1 211 1 164 1 69 1 21 1 117 1 277 1 118 1 292 1 355 1 306 1 82 1 43 1 298 1 310 1 
135 1 163 1 176 1 211 1 164 1 69 1 21 1 277 1 118 1 355 1 306 1 82 1 43 1 298 1 310 1 
362 1 239 2 31 2 140 1 316 1 165 1 212 1 70 1 33 2 342 1 345 1 196 1 74 2 100 1 76 4 77 1 156 1 60 1 260 1 106 1 206 1 336 2 45 1 86 2 
185 1 151 1 98 1 277 1 325 1 103 1 21 1 281 1 
375 1 42 1 
375 1 42 1 
121 1 279 1 
121 1 279 1 
121 1 279 1 
375 1 42 1 88 1 
375 1 209 1 42 1 
375 2 121 1 42 2 226 1 130 1 279 1 
375 1 42 1 88 1 
375 1 42 1 88 1 
375 1 0 1 42 1 
375 1 0 1 42 1 
375 1 0 1 42 1 
185 2 136 1 209 1 235 1 65 1 289 1 246 1 71 1 52 1 32 1 119 1 168 1 55 1 15 1 42 1 103 2 21 2 22 1 277 2 375 1 203 1 306 1 358 1 281 2 
46 1 136 2 15 1 42 2 17 1 226 1 246 3 71 2 375 2 32 2 203 2 145 1 168 2 295 1 38 1 269 2 134 1 109 1 358 2 
305 1 57 1 328 1 
57 1 230 1 328 1 
305 2 230 1 210 1 328 3 346 1 275 1 
305 1 154 1 230 1 210 1 328 2 346 1 
305 1 230 1 210 2 328 2 346 1 
313 1 207 1 46 2 136 5 29 1 30 1 1 1 287 2 140 1 212 1 116 3 70 1 318 2 52 1 248 1 32 5 119 1 293 1 9 1 219 1 55 1 127 1 303 2 155 1 227 4 131 3 156 1 24 2 333 1 379 1 234 1 62 1 
313 6 46 5 207 1 136 9 29 3 138 1 1 1 30 2 140 3 212 3 116 8 70 3 318 6 32 9 248 2 252 1 147 5 9 1 271 1 218 1 219 1 368 1 55 4 127 3 303 6 326 1 227 7 131 9 350 1 156 3 24 6 333 2 234 2 380 5 62 2 
46 3 136 3 29 1 1 1 30 1 287 1 116 3 212 1 140 1 70 1 318 2 248 1 32 3 55 1 127 2 303 2 155 1 326 1 227 2 131 4 156 1 24 2 333 1 379 1 234 1 62 1 
46 4 136 4 29 2 1 1 30 1 287 2 116 5 212 2 140 2 70 2 318 4 248 1 32 4 252 1 368 1 55 2 127 3 303 4 155 1 326 1 227 3 131 7 350 1 156 2 24 4 333 1 379 1 234 1 62 1 
310 1 166 1 125 1 
367 1 310 1 
357 1 
43 1 211 1 310 1 
238 1 310 1 
43 1 310 1 
43 1 309 1 211 1 310 3 280 1 125 2 
312 1 237 1 101 2 89 1 76 4 140 1 177 1 244 1 60 2 202 1 33 3 106 3 181 1 39 1 217 1 86 1 
312 1 237 1 101 2 89 1 76 4 140 1 177 1 244 1 60 2 202 1 33 3 106 3 181 1 39 1 217 1 86 1 
312 1 87 1 237 1 101 2 89 1 76 4 140 1 177 1 244 1 60 2 202 1 33 3 106 3 181 1 39 1 217 1 86 1 
312 1 29 3 237 1 89 1 239 2 165 1 212 3 140 4 244 2 70 3 319 3 33 15 250 4 192 1 39 2 217 1 11 1 13 1 172 1 224 1 101 3 76 28 77 1 177 5 156 3 353 1 202 2 60 5 158 1 106 10 181 2 206 1 45 1 86 13 
312 1 237 1 239 4 140 1 165 2 244 1 33 4 39 1 217 1 11 1 101 2 76 6 273 1 77 2 177 1 202 1 60 3 80 1 106 4 181 1 206 2 45 2 86 2 
338 1 69 1 141 1 343 1 297 1 298 1 299 1 148 2 270 1 40 1 254 1 347 1 175 1 16 1 57 1 129 2 176 1 328 2 330 1 275 1 105 1 61 1 355 1 305 1 230 1 108 1 82 1 335 1 278 1 84 1 
283 1 69 1 141 2 2 1 343 1 297 1 298 1 148 3 270 1 40 1 254 1 175 1 16 1 57 1 129 3 225 1 176 1 328 2 275 1 330 1 105 1 61 1 355 1 305 1 230 1 108 1 82 1 335 1 278 1 84 1 
69 1 141 2 2 1 297 1 298 1 148 2 40 1 254 1 175 1 16 1 57 1 129 2 225 1 176 1 328 2 330 1 275 1 105 1 61 1 355 1 305 1 230 1 82 1 335 1 278 1 
283 1 112 1 164 1 69 1 268 1 341 1 297 2 298 1 148 1 40 2 370 1 175 2 129 1 176 1 201 1 355 1 107 1 108 1 82 1 43 1 335 2 84 1 310 1 
338 1 175 1 57 1 176 1 129 1 69 1 328 2 275 1 330 1 2 1 105 1 61 1 355 1 305 1 230 1 343 1 108 1 82 1 298 1 297 1 299 1 335 1 148 1 270 1 84 1 40 1 
255 1 
282 1 46 1 186 1 136 4 137 1 1 1 286 1 288 3 49 1 143 2 248 1 93 3 249 2 96 5 98 1 153 2 103 1 21 1 356 1 264 1 313 5 207 2 30 1 116 1 318 1 32 4 72 1 120 3 219 1 171 1 222 1 127 2 128 1 325 1 372 1 79 2 331 1 277 1 332 1 229 1 233 1 234 1 
282 1 313 5 46 1 207 2 186 1 136 4 137 1 1 1 30 1 286 1 288 3 116 1 49 1 318 1 143 2 248 1 32 4 249 2 72 1 93 3 120 3 96 5 219 1 171 1 222 1 98 1 127 2 153 2 128 1 372 1 325 1 103 1 79 2 21 1 331 1 277 1 332 1 229 1 356 1 234 1 233 1 264 1 
313 4 46 1 207 2 186 1 136 4 360 2 137 1 1 1 30 1 288 2 116 1 49 1 318 1 143 2 248 1 32 4 93 2 72 1 120 2 96 4 294 1 300 1 219 1 171 1 222 1 98 1 153 2 128 1 372 1 325 1 58 2 103 1 131 2 21 1 331 1 277 1 229 1 234 1 264 1 
46 2 186 1 136 5 137 1 1 1 288 2 49 1 143 2 248 1 93 2 249 2 96 4 298 2 300 1 98 1 153 2 301 1 103 1 21 1 355 2 107 1 356 1 310 1 264 1 313 6 207 3 30 1 164 2 69 2 116 2 318 2 32 5 72 1 120 2 216 1 219 1 171 1 222 1 127 2 370 1 371 1 128 1 372 1 325 1 176 1 131 2 79 2 331 1 277 1 333 1 229 1 43 1 82 1 234 1 381 1 
313 2 207 1 98 1 186 1 222 1 99 1 136 3 137 1 128 1 325 1 372 1 103 1 49 1 21 1 331 1 277 1 32 3 72 1 120 1 229 1 96 2 264 1 
313 1 207 1 46 1 98 1 186 1 222 1 99 1 136 3 137 1 128 1 1 1 325 1 372 1 103 1 49 1 21 1 331 1 277 1 32 3 93 1 72 1 229 1 96 3 264 1 
313 2 207 1 186 1 46 1 136 3 137 1 1 1 288 1 49 1 32 3 72 1 93 1 120 1 96 3 222 1 98 1 99 1 128 1 372 1 325 1 103 1 21 1 331 1 277 1 229 1 264 1 
282 1 313 7 46 5 186 1 207 3 136 5 137 1 30 1 1 5 286 1 288 4 116 1 49 1 318 1 143 2 248 1 32 5 249 2 93 4 72 1 120 4 96 6 219 1 171 1 222 1 98 1 127 2 153 2 99 1 128 1 200 1 372 1 325 1 103 1 79 2 21 1 331 1 277 1 332 1 229 1 356 1 234 1 233 1 264 1 
186 1 46 2 136 4 137 1 1 1 288 2 49 1 143 2 248 1 249 2 93 2 96 4 300 1 98 1 153 2 103 1 21 1 356 1 264 1 313 4 207 2 30 1 116 1 318 1 32 4 72 1 120 2 219 1 171 1 222 1 127 2 128 1 325 1 372 1 79 2 131 2 331 1 277 1 229 1 234 1 
313 4 46 1 207 2 186 1 136 4 137 1 1 1 30 1 286 1 288 2 116 1 49 1 318 1 143 2 32 4 248 1 93 2 249 2 72 1 120 2 96 4 219 1 171 1 222 1 98 1 127 2 153 2 128 1 372 1 325 1 103 1 79 2 21 1 331 1 277 1 332 1 229 1 356 1 233 1 234 1 264 1 
313 4 46 1 207 2 186 1 136 4 137 1 1 1 30 1 286 1 288 2 116 1 49 1 318 1 143 2 32 4 248 1 93 2 249 2 72 1 120 2 96 4 219 1 171 1 222 1 98 1 127 2 153 2 128 1 372 1 325 1 103 1 79 2 21 1 331 1 277 1 332 1 229 1 356 1 233 1 234 1 264 1 
313 4 46 1 207 2 186 1 136 4 360 2 137 1 1 1 30 1 286 1 288 2 116 1 49 1 318 1 143 2 32 4 248 1 93 2 72 1 120 2 294 1 96 4 220 1 219 1 171 1 222 1 98 1 153 2 128 1 372 1 325 1 58 2 103 1 131 2 21 1 331 1 277 1 180 1 229 1 234 1 264 1 
312 1 362 1 237 1 31 1 239 2 165 1 140 1 166 1 33 2 342 1 39 1 217 1 74 1 101 1 76 3 77 1 60 2 260 1 306 1 106 2 181 1 206 1 336 1 45 1 86 1 
362 1 29 2 67 1 239 2 31 3 165 1 212 2 140 2 70 1 319 2 33 6 250 2 54 1 253 1 198 1 74 8 76 10 77 1 177 1 156 1 351 1 60 1 158 1 260 1 106 2 206 1 336 8 45 1 86 4 
185 1 28 1 362 1 31 1 239 2 211 1 242 1 164 1 69 1 165 1 117 1 118 1 292 1 33 1 298 1 54 1 41 1 199 1 76 2 176 1 103 1 77 1 21 2 304 1 374 1 179 1 277 2 355 1 260 1 306 1 43 1 82 1 183 1 310 1 206 1 45 1 281 1 86 1 
185 1 237 1 239 6 339 1 140 3 2 1 292 2 298 3 54 1 195 2 302 2 101 1 19 1 103 1 304 1 21 3 156 2 60 4 355 3 260 3 306 1 106 8 160 2 206 3 310 2 312 1 28 1 362 3 29 2 31 7 211 2 164 1 68 1 69 3 165 3 212 2 117 2 70 2 118 2 33 9 39 1 217 1 41 1 74 7 323 2 76 17 176 2 77 3 177 4 329 2 277 3 181 1 82 2 43 2 183 1 336 7 45 3 86 8 281 1 
185 1 28 1 362 2 239 4 91 1 164 2 69 7 165 2 2 1 33 1 35 1 191 2 342 1 193 1 298 8 41 1 221 1 347 1 369 1 97 1 370 1 76 2 176 2 103 1 77 2 21 1 304 1 277 1 355 8 260 2 107 1 82 2 43 2 184 1 310 3 206 2 45 2 281 1 86 1 
185 1 362 1 29 1 31 1 239 2 165 1 212 1 140 1 70 1 33 1 169 1 251 1 54 1 74 1 76 3 103 1 77 1 21 1 156 1 60 1 277 1 260 1 106 1 336 1 206 1 337 1 45 1 281 1 86 2 
74 1 362 1 100 1 76 2 31 1 239 2 77 1 177 1 165 1 212 1 140 1 33 2 260 1 106 1 342 1 336 1 206 1 45 1 
74 1 362 1 76 2 31 1 239 2 77 1 165 1 316 1 156 1 70 1 60 1 260 1 106 1 342 1 336 1 206 1 45 1 86 2 
29 1 362 1 239 2 31 2 140 1 212 1 165 1 70 1 33 2 342 1 74 2 76 4 77 1 177 1 156 1 60 1 260 1 106 2 206 1 336 2 45 1 86 2 
74 1 362 1 100 1 76 2 31 1 239 2 91 1 77 1 177 1 165 1 212 1 140 1 33 2 260 1 106 1 336 1 206 1 45 1 
74 1 362 1 76 2 31 1 239 2 91 1 77 1 165 1 316 1 156 1 70 1 60 1 260 1 106 1 336 1 206 1 45 1 86 2 
29 1 362 1 239 2 31 2 91 1 140 1 212 1 165 1 70 1 33 2 74 2 76 4 77 1 177 1 156 1 60 1 260 1 106 2 206 1 336 2 45 1 86 2 
74 2 362 1 29 1 76 4 31 2 239 2 77 1 177 1 165 1 212 1 140 1 156 1 70 1 60 1 33 2 260 1 106 2 336 2 206 1 45 1 86 2 
28 1 362 1 239 2 211 1 164 1 69 1 165 1 117 1 118 1 292 1 33 1 298 1 323 1 76 2 176 1 77 1 21 1 304 1 277 1 355 1 260 1 306 1 43 1 82 1 310 1 206 1 45 1 86 1 
28 1 135 1 362 1 113 1 163 1 239 2 211 1 164 1 69 1 165 1 118 1 33 1 298 1 76 2 176 1 77 1 21 1 304 1 277 1 355 1 260 1 306 1 43 1 82 1 310 1 206 1 45 1 86 1 
29 1 362 1 239 2 31 2 140 1 212 1 165 1 70 1 33 2 54 1 74 2 76 4 77 1 177 1 156 1 60 1 260 1 106 2 206 1 336 2 45 1 86 2 
362 1 29 1 31 2 239 2 211 1 69 1 140 1 212 1 165 1 117 1 70 1 118 1 292 1 33 2 298 1 195 1 347 1 74 2 323 1 76 4 176 1 77 1 177 1 21 1 156 1 60 1 277 1 355 1 260 1 106 2 82 1 43 1 336 2 310 1 206 1 45 1 86 2 
185 1 362 1 29 1 239 2 31 1 187 1 165 1 212 1 140 1 70 1 33 2 169 1 54 1 74 1 76 3 103 1 77 1 177 1 21 1 156 1 277 1 260 1 106 1 206 1 336 1 337 1 45 1 86 1 281 1 
208 1 64 1 29 2 239 4 165 2 212 2 140 2 340 1 70 2 319 2 33 9 250 4 6 1 194 1 123 1 124 1 73 1 172 2 324 1 76 20 273 1 274 3 77 2 177 1 156 2 60 2 158 2 106 3 206 2 45 2 86 11 
208 1 64 1 29 2 239 4 165 2 212 2 140 2 340 1 70 2 319 2 33 9 250 4 6 1 194 1 123 1 124 1 73 1 172 2 324 1 76 20 273 1 274 3 77 2 177 1 156 2 60 2 158 2 106 3 206 2 45 2 86 11 
312 3 208 1 29 2 237 3 239 2 165 1 212 2 140 5 340 1 70 2 319 3 33 16 250 3 6 1 39 3 194 1 123 1 217 3 124 1 73 1 172 2 101 3 324 1 76 26 273 1 274 3 77 1 177 2 156 2 351 1 60 5 158 1 106 7 181 3 206 1 45 1 86 10 
64 1 29 2 239 4 165 2 212 2 140 2 340 1 317 1 70 2 319 2 33 9 250 4 6 1 194 1 123 1 124 1 73 1 172 2 324 1 76 20 273 1 274 3 77 2 177 1 156 2 60 2 158 2 106 3 206 2 45 2 86 11 
208 1 172 1 324 2 76 4 273 1 239 2 274 1 77 1 165 1 340 1 319 1 33 2 250 1 6 2 194 1 123 1 206 1 45 1 86 2 
71 1 375 1 284 1 203 1 168 1 42 1 17 1 226 1 134 1 358 1 
209 1 289 1 
71 1 375 1 203 1 168 1 42 1 133 1 265 1 358 1 365 1 
157 1 88 1 
94 1 0 1 130 1 
46 1 136 1 15 1 42 1 17 1 226 1 246 2 71 1 32 1 375 1 203 1 145 1 168 1 38 1 269 1 134 1 109 1 358 1 
46 1 136 1 15 1 42 1 17 1 226 1 246 2 71 1 32 1 375 1 203 1 145 1 168 1 38 1 269 1 134 1 109 1 358 1 
46 1 136 1 15 1 42 1 17 1 226 1 246 2 71 1 32 1 375 1 203 1 145 1 168 1 38 1 269 1 134 1 109 1 358 1 
157 1 88 1 130 1 
157 1 88 1 130 1 
94 1 0 1 
94 1 0 1 130 1 
235 1 65 1 
185 2 136 1 209 1 235 1 65 1 289 1 246 1 71 1 52 1 32 1 119 1 168 1 269 1 38 1 55 1 42 1 20 1 227 1 103 2 21 2 22 1 277 2 375 1 203 1 306 1 358 1 281 2 
28 1 362 1 239 2 241 1 69 2 165 1 51 1 4 1 33 1 191 2 37 1 298 2 54 1 369 1 76 2 176 1 103 2 77 1 373 1 21 2 304 1 277 2 355 2 260 1 82 1 43 1 184 1 310 1 206 1 45 1 86 1 
14 1 175 1 57 1 176 1 69 2 328 2 256 1 275 1 330 1 2 1 376 1 61 1 355 2 305 1 230 1 82 1 298 2 270 1 347 1 
14 1 175 1 57 1 176 1 69 1 328 2 275 1 330 1 2 1 61 1 355 1 305 1 230 1 378 1 82 1 298 1 270 1 
370 1 175 1 176 1 240 1 164 1 69 1 256 1 268 1 355 1 107 1 82 1 43 1 298 1 310 1 
14 1 175 1 57 1 176 1 69 1 328 2 256 1 275 1 330 1 2 1 376 1 61 1 355 1 305 1 230 1 82 1 298 1 270 1 
257 1 
185 2 362 1 236 1 239 2 211 1 164 1 69 1 165 1 117 1 118 1 292 1 298 1 323 1 76 1 176 1 103 2 77 1 304 1 21 3 352 1 277 3 355 1 260 1 306 1 82 1 43 1 206 1 310 1 45 1 337 2 86 1 281 2 
46 4 127 2 303 2 101 1 30 1 1 2 131 4 116 1 318 2 24 2 248 1 333 1 234 1 381 1 219 1 
46 1 276 1 1 1 116 1 166 1 318 1 12 1 
313 1 46 2 207 1 136 1 30 1 1 1 116 1 318 1 248 1 32 1 249 1 219 1 127 1 79 1 131 1 356 1 234 1 
46 8 136 5 285 2 1 2 238 1 140 2 291 2 248 4 5 2 344 1 298 3 150 1 347 1 12 1 197 2 303 6 18 2 59 1 156 2 24 6 23 2 26 2 355 3 160 2 261 1 310 8 313 5 207 3 29 2 30 4 211 2 164 1 69 3 116 9 212 2 318 8 70 2 367 3 32 5 72 2 320 1 219 4 125 2 127 6 176 2 131 12 276 1 333 2 82 3 43 2 234 4 232 1 381 1 280 1 
313 1 207 1 46 5 136 1 29 2 30 2 1 2 92 1 116 8 212 2 140 2 318 5 70 2 319 1 32 1 248 2 167 1 250 1 146 1 53 1 73 1 219 2 127 3 172 1 303 5 131 6 156 2 23 1 24 5 258 1 26 2 333 1 234 2 381 1 85 1 
136 1 237 1 30 1 116 2 140 1 70 1 318 2 32 1 248 1 26 1 181 1 39 1 233 1 234 1 44 1 219 1 
46 1 30 1 1 1 116 1 318 1 276 1 248 1 234 1 219 1 12 1 
46 5 127 5 29 2 303 5 212 2 140 2 131 10 116 5 156 2 318 5 70 2 23 1 24 5 26 2 160 1 
313 1 46 1 207 1 136 1 32 1 1 1 
313 4 207 2 136 3 30 2 164 2 290 1 69 4 116 2 318 2 248 2 32 3 216 1 320 2 298 4 219 1 301 1 370 1 326 1 176 1 104 1 355 4 333 2 107 1 82 1 43 1 234 2 261 1 381 2 310 1 
168 1 10 1 358 1 
235 1 168 1 7 1 134 1 358 1 
168 1 10 1 358 1 
168 1 10 1 358 1 
63 1 168 1 358 1 
63 1 168 1 358 1 
63 1 168 1 358 1 
168 1 358 1 
375 1 42 1 
312 1 237 1 239 2 140 1 165 1 319 1 33 3 250 1 39 1 217 1 73 1 172 1 101 1 76 5 273 1 77 1 60 2 106 2 181 1 206 1 45 1 86 2 
312 1 29 1 237 1 239 4 165 2 212 1 140 2 319 1 33 5 250 2 36 1 39 1 217 1 73 1 172 1 101 1 76 8 273 1 77 2 177 1 60 2 158 1 106 3 181 1 206 2 45 2 86 3 
312 1 29 2 237 1 239 6 92 1 165 3 212 2 140 3 70 2 319 1 33 8 250 1 36 1 39 1 53 1 146 1 217 1 73 1 11 1 172 1 101 1 76 16 273 1 77 3 177 1 156 2 60 3 258 1 106 4 181 1 206 3 45 3 86 8 
312 1 29 2 237 1 239 6 92 1 165 3 212 2 140 3 70 1 319 1 33 9 250 1 36 1 39 1 53 1 146 1 217 1 73 1 11 1 172 1 101 1 76 14 273 1 77 3 177 2 156 1 60 3 258 1 106 5 181 1 206 3 45 3 86 5 
312 1 237 1 239 2 140 1 165 1 319 1 33 3 250 1 39 1 217 1 73 1 172 1 101 1 76 5 273 1 77 1 60 2 106 2 181 1 206 1 45 1 86 2 
29 2 239 2 92 1 165 1 212 2 140 2 70 2 319 1 33 6 250 1 53 1 146 1 73 1 172 1 76 12 273 1 77 1 177 1 156 2 60 1 258 1 106 2 206 1 45 1 86 6 
312 1 29 2 237 1 239 8 92 1 165 4 212 2 140 3 70 1 319 1 33 9 250 1 36 1 39 1 146 1 53 1 217 1 73 1 11 2 172 1 101 1 76 15 273 1 77 4 177 2 156 1 60 3 258 1 106 5 181 1 206 4 45 4 86 6 
64 1 29 3 239 8 92 1 165 4 212 3 140 3 70 2 319 1 33 9 250 1 146 1 53 1 73 1 11 2 172 1 76 16 273 1 77 4 177 3 156 2 60 3 258 1 106 6 206 4 45 4 86 7 
312 1 101 1 237 2 76 7 177 3 140 3 70 1 60 4 33 5 106 7 181 2 39 2 217 1 44 1 86 2 
312 1 64 1 29 2 237 1 239 8 92 1 165 4 212 2 140 3 70 1 319 1 33 9 250 1 39 1 146 1 53 1 217 1 73 1 11 2 172 1 101 1 76 15 273 1 77 4 177 1 156 1 60 3 258 1 106 4 181 1 206 4 45 4 86 6 
312 1 101 1 237 1 76 5 239 4 77 2 140 1 177 1 165 2 60 2 33 3 106 3 181 1 39 1 217 1 206 2 11 1 45 2 86 2 
60 2 312 1 33 2 101 1 237 1 106 2 76 3 181 1 39 1 217 1 140 1 166 1 86 1 
29 1 76 4 239 2 77 1 165 1 212 1 140 1 177 1 156 1 70 1 60 1 33 2 106 2 36 1 206 1 45 1 86 2 
172 1 29 1 76 7 212 1 140 1 177 1 156 1 70 1 60 1 319 1 33 3 158 1 250 2 106 2 86 4 
312 1 29 2 237 1 67 1 239 4 140 3 212 2 165 2 247 1 70 2 319 2 33 10 250 2 39 2 217 1 11 2 101 1 76 20 77 2 177 4 156 2 351 1 60 5 158 1 106 9 181 2 206 2 45 2 86 10 
250 1 76 1 86 1 
319 1 33 1 76 1 
29 1 76 6 239 2 77 1 165 1 212 1 140 1 177 1 156 1 70 1 60 2 33 3 36 1 106 3 160 1 206 1 45 1 86 3 
29 2 239 2 92 1 165 1 212 2 140 2 70 2 319 1 33 6 250 1 53 1 146 1 73 1 172 1 76 12 273 1 77 1 177 1 156 2 60 1 258 1 106 2 206 1 45 1 86 6 
33 1 237 1 76 1 140 1 
312 1 76 3 239 2 77 1 177 1 165 1 247 1 60 1 33 1 106 2 181 1 39 1 217 1 11 1 206 1 45 1 86 2 
237 1 76 7 177 2 140 2 70 1 60 2 33 4 106 4 181 1 39 1 44 1 86 3 
76 2 273 1 239 2 77 1 165 1 212 1 140 1 177 1 33 2 106 1 206 1 45 1 
29 1 76 4 273 1 239 2 77 1 165 1 212 1 140 1 177 1 156 1 70 1 60 1 33 2 106 2 206 1 45 1 86 2 
64 1 76 3 273 1 239 6 77 3 165 3 177 1 247 1 60 1 33 1 106 2 181 1 39 1 11 1 206 3 45 3 86 2 
312 1 64 1 29 3 237 2 239 10 165 5 212 3 140 5 247 1 70 3 319 3 33 14 250 4 192 1 36 1 39 2 217 1 11 2 13 1 172 1 101 1 76 28 273 1 77 5 177 5 156 3 353 1 60 6 158 1 106 11 181 2 206 5 45 5 86 14 
277 1 306 1 372 1 103 1 47 1 21 1 321 1 
372 1 47 1 103 1 228 1 349 1 21 1 245 1 277 1 144 1 306 1 321 1 322 1 
370 1 355 1 107 1 82 1 43 1 176 1 298 1 164 1 69 1 310 1 166 1 
185 1 211 1 176 1 103 1 164 1 69 1 21 2 118 1 277 2 292 1 355 1 306 1 43 1 82 1 298 1 310 1 41 1 281 1 
185 2 238 1 211 2 69 1 118 1 292 1 3 1 344 1 298 1 320 1 41 1 98 1 325 2 176 1 103 2 21 2 331 1 277 2 355 1 306 1 82 1 43 2 310 3 281 1 
185 2 135 1 238 1 211 2 69 1 118 1 3 1 344 1 298 1 320 1 41 1 98 1 325 2 176 1 103 2 21 2 331 1 277 2 355 1 306 1 82 1 43 2 310 3 281 1 
185 1 314 1 313 1 46 1 136 2 238 1 1 1 211 1 69 1 189 1 367 1 32 2 72 1 344 1 298 1 320 1 170 1 125 1 102 1 325 1 176 1 103 1 21 1 352 1 277 1 355 1 204 1 82 1 43 1 310 4 337 1 281 1 
185 1 314 1 313 1 46 1 136 2 238 1 1 1 211 1 69 1 291 1 189 1 367 1 32 2 72 1 344 1 298 1 320 1 125 1 325 1 176 1 103 1 21 1 352 1 277 1 355 1 204 1 82 1 43 1 310 4 337 1 281 1 
97 1 355 1 82 1 176 1 298 1 69 1 
369 1 97 1 211 1 176 2 164 2 327 1 69 6 2 1 355 7 191 1 35 1 193 1 43 2 82 3 298 7 83 1 161 1 280 1 310 3 221 1 347 1 
312 1 185 1 362 2 237 1 31 1 239 4 211 1 69 1 140 1 165 2 117 1 51 1 118 1 292 1 33 2 39 1 54 1 298 1 195 1 217 1 41 1 347 1 74 1 323 1 101 1 76 3 176 1 103 1 77 2 21 2 329 1 60 2 277 2 355 1 260 2 306 1 106 2 181 1 43 1 82 1 336 1 310 1 206 2 45 2 86 1 281 1 
313 2 46 1 207 1 136 3 285 1 1 1 30 2 164 1 69 1 116 1 318 1 291 1 367 1 248 2 32 3 72 1 5 1 298 1 219 2 12 1 125 1 18 1 227 1 276 1 355 1 234 2 261 1 310 2 
97 1 211 1 176 1 69 2 59 1 355 2 43 1 82 2 298 2 280 1 310 2 347 1 125 1 
370 1 361 1 176 1 164 1 69 4 178 1 355 4 107 1 82 1 43 1 298 4 310 1 347 1 
211 1 176 1 68 1 69 2 50 1 25 1 355 2 43 1 82 2 320 1 298 2 83 1 161 1 310 1 
61 1 355 1 57 1 230 1 82 1 176 1 298 1 164 1 69 1 328 1 
369 1 176 1 69 2 2 1 355 2 4 1 43 1 82 1 298 2 310 1 347 1 
369 1 370 1 176 2 164 1 69 4 178 1 355 5 35 1 107 1 43 2 82 2 320 1 298 5 310 3 347 1 221 1 
369 1 370 1 176 2 164 1 69 4 178 1 355 5 107 1 122 1 43 2 82 2 320 1 298 5 310 3 347 1 221 1 
185 1 135 1 211 1 176 1 103 1 164 1 69 1 21 2 118 1 277 2 355 1 306 1 43 1 82 1 298 1 310 1 41 1 281 1 
211 1 176 1 327 1 69 1 355 1 43 1 82 2 320 1 298 1 83 1 161 1 280 1 310 1 
277 1 34 1 95 1 37 1 241 1 243 1 103 1 21 1 373 1 
267 1 243 1 132 1 
34 1 173 1 306 1 95 1 243 1 
46 1 98 1 136 2 75 1 173 2 137 1 90 1 1 1 325 1 243 1 267 1 227 1 331 1 132 1 32 2 72 1 34 2 306 1 95 2 
338 1 16 1 266 1 129 3 141 1 8 1 108 1 148 3 84 1 278 1 254 1 
152 1 16 1 308 1 296 1 
16 1 254 1 
16 1 278 1 166 1 254 1 
16 1 108 1 129 1 148 1 278 1 84 1 254 1 
297 1 129 1 335 1 
338 1 16 1 129 3 348 1 48 1 8 2 108 1 27 1 148 3 84 1 278 1 254 1 
16 1 334 1 108 1 129 2 148 2 278 1 141 1 84 1 254 1 
338 1 16 1 57 1 129 1 328 1 305 1 108 1 296 1 148 1 84 1 149 1 
338 1 16 1 108 1 129 1 148 1 84 1 254 1 
338 1 108 1 129 1 148 1 278 1 84 1 254 2 
213 1 338 1 16 1 108 2 129 2 231 1 148 2 84 2 142 1 254 1 
152 1 338 1 16 2 266 1 129 3 141 2 108 1 215 1 296 1 148 3 278 1 84 1 254 1 
338 1 16 1 57 1 129 2 328 2 141 1 275 1 305 1 230 1 108 1 148 2 278 1 84 1 263 1 254 1 
152 1 126 1 338 1 16 2 129 4 141 2 108 2 334 1 296 1 148 4 278 1 84 2 254 1 
338 1 16 1 108 1 129 1 148 1 278 1 84 1 254 1 
152 1 16 3 129 4 348 1 141 2 8 1 308 1 108 1 296 1 27 1 148 4 278 2 84 1 254 2 
188 1 338 1 16 1 108 1 364 1 129 2 148 2 278 1 141 1 84 1 272 1 254 1 
338 1 16 1 363 1 129 3 348 1 8 2 108 1 27 2 148 3 84 1 278 1 254 1 
354 2 110 1 16 2 114 1 
338 1 66 1 108 1 129 1 148 1 84 1 
338 1 16 1 266 1 108 1 129 2 148 2 278 1 141 1 84 1 254 1 
56 1 
338 1 16 1 108 1 129 1 148 1 278 1 84 1 254 1 

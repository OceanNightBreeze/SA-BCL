#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 203 (176,292) (176,292) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 203 (176,292) (176,292) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 203 (176,292) (176,292) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 203 (176,292) (176,292) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 37 218 3 277 250 335 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (2,128) 118 37 218 3 94 7 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 37 218 3 277 49 269 91 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 88 269 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 37 218 3 277 49 269 91 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 37 218 3 277 49 269 91 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 37 218 3 277 49 269 91 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 37 218 3 277 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 37 218 3 94 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 37 218 3 277 250 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 37 218 3 277 278 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 206 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
332 1 188 1 324 1 203 1 320 1 176 1 292 1 209 1 276 1 72 1 349 1 
332 1 188 1 324 1 203 1 320 1 176 1 292 1 209 1 276 1 72 1 349 1 
332 1 188 1 324 1 203 1 320 1 176 1 292 1 209 1 276 1 72 1 349 1 
332 1 188 1 324 1 203 1 320 1 176 1 292 1 209 1 276 1 72 1 349 1 
145 2 271 1 146 1 39 1 202 1 104 1 246 3 123 2 75 3 32 1 276 4 332 4 98 1 314 1 82 1 209 1 349 1 72 1 
146 1 188 1 75 1 32 1 20 1 238 1 276 2 332 2 98 1 324 1 314 1 361 1 234 1 209 1 349 1 72 1 
145 1 188 1 104 1 246 1 75 2 274 1 276 3 332 3 98 1 314 1 209 2 349 1 72 2 
145 4 271 1 146 1 202 1 39 1 188 1 246 7 104 3 123 2 75 5 32 1 274 1 276 9 130 1 332 9 356 1 333 1 98 1 314 1 82 1 209 2 349 1 72 2 50 1 
145 4 271 1 146 1 202 1 39 1 188 1 246 7 104 3 123 2 75 5 32 1 274 1 276 9 130 1 332 9 356 1 333 1 98 1 314 1 82 1 209 2 349 1 72 2 50 1 
206 1 322 1 139 1 
237 1 297 2 139 1 
0 1 236 1 153 2 226 2 71 2 321 2 298 2 35 2 
0 1 31 1 136 1 189 1 236 1 351 1 159 1 193 1 164 1 195 1 35 2 334 1 10 1 171 1 170 1 196 1 243 1 200 2 245 1 340 2 224 1 124 1 288 1 226 2 321 3 343 1 344 2 107 2 294 1 68 1 153 2 24 1 92 1 71 2 298 3 154 1 372 2 
0 1 140 1 286 1 153 1 226 1 71 1 321 1 298 1 83 1 35 1 
352 1 322 1 321 1 160 1 194 1 139 1 249 1 140 1 153 1 336 1 13 1 260 1 298 1 270 1 
226 1 352 1 322 1 321 1 160 1 194 2 139 1 35 1 140 1 153 1 336 2 71 1 260 1 298 1 270 1 
199 1 263 1 336 1 194 1 275 1 
263 1 313 1 336 2 322 1 194 2 275 1 139 1 62 1 
263 1 336 1 194 1 
0 1 286 1 226 1 321 1 275 1 194 1 35 1 140 1 153 1 46 1 336 1 71 1 83 1 298 1 
139 1 
263 1 313 1 336 2 322 1 194 2 275 1 139 1 197 1 
0 1 211 2 215 2 76 1 194 5 275 2 139 2 35 1 9 2 355 2 167 1 140 1 242 4 313 1 100 1 336 5 83 1 261 5 244 1 263 2 265 1 286 1 41 2 342 1 226 1 178 1 321 1 322 2 150 2 109 1 132 1 227 1 180 1 153 1 46 1 70 1 71 1 298 1 
200 1 189 1 124 1 2 1 288 1 159 1 193 1 321 2 344 1 162 1 107 1 35 1 10 1 153 1 196 1 92 1 267 1 243 1 71 1 298 2 
206 1 236 1 
236 2 226 1 321 2 35 1 153 2 169 1 120 1 71 1 298 2 
118 1 2 1 8 1 
200 1 189 1 236 1 124 1 288 1 159 1 193 1 321 1 344 1 107 1 10 1 196 1 92 1 26 1 243 1 298 1 
236 1 153 3 226 1 71 3 321 3 162 1 298 3 35 3 
140 1 286 1 153 1 71 1 321 1 298 1 35 1 
140 1 153 1 169 1 120 1 226 1 71 1 321 1 298 1 35 1 
0 1 136 1 189 1 236 1 351 1 1 1 159 1 352 1 193 1 160 1 194 1 162 1 164 1 35 3 166 1 140 1 334 1 10 1 171 1 169 1 196 1 336 1 243 1 260 1 200 1 245 1 340 2 224 1 124 1 288 1 226 2 321 4 343 1 344 1 107 1 294 1 153 3 24 1 92 1 267 1 71 3 298 4 270 1 372 1 
198 1 249 1 236 1 153 2 71 1 321 2 298 2 162 1 35 1 
40 1 1 1 226 1 352 1 160 1 321 3 194 1 139 1 162 2 35 3 140 1 169 1 153 3 336 1 267 1 71 3 260 1 298 3 270 1 
2 1 226 1 321 2 162 1 8 1 35 2 169 1 153 2 71 2 298 2 
200 1 189 1 236 1 124 1 288 1 159 1 193 1 321 1 344 1 107 1 10 1 92 1 196 1 243 1 298 1 
200 1 319 1 189 1 114 1 236 1 124 1 288 1 159 1 321 1 344 1 107 1 92 1 196 1 243 1 298 1 
211 1 136 1 158 1 351 1 2 2 191 1 353 1 164 1 8 2 195 2 118 2 334 1 171 1 37 1 360 1 174 1 245 2 340 2 41 1 294 1 129 1 128 1 230 1 372 4 
140 1 153 1 71 1 321 1 81 1 298 1 270 1 35 1 
198 1 287 1 236 1 226 1 321 5 162 2 35 4 249 1 153 5 169 1 267 1 71 4 60 1 298 5 
140 1 286 1 153 2 71 2 321 2 81 1 298 2 35 2 
325 1 299 1 
325 1 299 1 
272 1 205 1 
272 1 205 1 
272 1 205 1 
105 1 325 1 299 1 
137 1 325 1 299 1 
325 2 272 1 121 1 205 1 95 1 299 2 
105 1 325 1 299 1 
105 1 325 1 299 1 
325 1 102 1 299 1 
325 1 102 1 299 1 
325 1 102 1 299 1 
86 1 147 1 190 1 329 2 291 2 293 2 194 2 139 1 216 3 279 1 280 2 168 2 266 1 325 2 336 2 110 1 121 1 252 1 299 2 
137 1 236 1 329 1 214 1 4 1 194 1 216 1 35 2 168 1 119 1 336 1 86 1 291 1 321 2 293 1 365 1 153 2 133 1 90 1 325 1 71 2 208 1 298 2 299 1 
146 1 202 1 32 1 
146 1 32 1 361 1 
202 2 327 1 146 3 19 1 303 1 361 1 
202 1 146 2 328 1 19 1 303 1 361 1 
202 1 146 2 19 2 303 1 361 1 
211 1 237 2 34 1 214 1 215 1 194 5 275 4 139 2 256 1 218 1 9 1 355 1 220 1 37 1 313 1 242 3 336 5 362 2 261 2 263 1 41 1 66 2 322 1 67 1 150 1 248 2 129 1 227 1 251 1 297 2 133 1 27 1 208 1 
237 6 273 1 275 7 194 9 5 1 139 5 9 2 242 8 336 9 59 5 199 5 66 6 150 2 248 6 297 6 70 1 211 3 34 2 215 2 256 1 218 3 355 3 79 1 220 2 313 1 37 3 261 6 263 6 41 3 322 1 323 1 129 3 227 1 132 1 231 1 133 4 135 1 
211 1 237 2 34 1 215 1 275 2 194 3 139 3 9 1 218 1 355 1 220 1 242 3 37 1 336 3 362 1 261 2 41 1 66 2 322 1 67 1 150 1 248 2 129 1 132 1 297 2 133 1 70 1 27 1 
211 2 237 4 34 1 215 1 273 1 194 4 275 3 5 1 139 4 9 1 218 2 355 2 220 1 242 5 37 2 336 4 362 2 261 4 41 2 66 4 322 1 67 1 150 1 248 4 323 1 129 2 132 1 297 4 133 2 70 1 27 1 
206 1 196 1 11 1 
196 1 284 1 
156 1 
196 1 243 1 
156 1 288 1 131 1 172 1 196 2 243 1 11 2 
288 1 196 1 243 1 
196 1 144 1 
245 3 244 1 211 1 339 1 223 1 158 2 41 1 178 1 179 1 195 4 257 1 165 1 167 1 366 1 282 2 360 3 372 7 
245 3 244 1 211 1 339 1 223 1 158 2 41 1 178 1 179 1 195 4 257 1 165 1 167 1 366 1 282 2 360 3 372 7 
300 1 245 3 244 1 211 1 339 1 223 1 158 2 41 1 178 1 179 1 195 4 257 1 165 1 167 1 366 1 282 2 360 3 372 7 
245 1 341 1 41 1 3 1 195 4 277 1 218 1 257 2 165 1 228 1 250 1 335 1 37 1 282 1 372 5 
211 1 136 2 158 3 164 2 195 5 165 1 257 1 167 1 171 2 282 2 360 4 318 1 245 4 244 1 64 1 340 4 223 1 41 1 178 1 179 1 294 2 366 1 348 1 372 9 
188 1 327 1 254 1 75 1 32 1 213 1 159 1 331 1 276 2 332 2 98 1 241 1 36 1 312 1 314 1 12 1 221 1 361 1 317 1 200 1 202 1 146 2 246 1 344 1 107 1 92 1 326 1 209 1 72 1 349 1 
327 1 188 1 254 1 75 1 32 1 213 1 354 1 159 1 276 3 332 3 98 1 241 1 36 1 312 1 314 1 12 1 221 1 361 1 317 1 63 1 200 1 16 1 202 1 146 2 246 2 344 1 107 1 92 1 209 1 72 1 
188 1 327 1 254 1 75 1 32 1 213 1 354 1 159 1 276 2 332 2 98 1 36 1 312 1 314 1 12 1 221 1 361 1 200 1 16 1 146 2 202 1 246 2 344 1 107 1 92 1 
30 1 188 2 155 1 189 1 159 1 330 1 306 1 217 1 276 1 307 1 116 1 332 1 78 1 312 2 196 1 173 1 243 1 12 2 221 2 63 1 200 1 288 1 106 1 344 1 107 1 296 1 92 2 209 1 72 1 
188 1 327 1 254 1 32 1 213 1 354 1 159 1 331 1 276 1 332 1 241 1 36 1 312 1 12 1 221 1 361 1 317 1 200 1 202 1 146 2 344 1 107 1 92 1 209 1 72 1 349 1 
15 1 
30 1 155 1 189 2 159 1 34 1 215 1 194 2 307 1 9 1 242 1 313 1 196 1 336 2 173 1 243 1 142 1 261 1 143 1 200 2 263 2 288 1 344 2 107 2 150 1 227 1 296 1 152 1 92 2 
73 1 352 1 160 1 194 3 140 1 310 2 313 1 336 3 13 1 260 1 197 1 263 2 321 1 22 1 44 1 249 1 89 1 153 1 183 1 207 1 298 1 270 1 
352 1 160 1 194 3 139 1 140 1 310 3 57 1 313 1 336 3 13 1 260 1 197 1 263 1 321 1 322 1 22 1 44 1 249 1 89 1 153 1 183 1 207 1 298 1 270 1 
73 1 352 1 160 1 194 3 139 1 140 1 310 3 358 1 57 1 313 1 336 3 13 1 260 1 197 1 263 2 321 1 322 1 22 1 44 1 249 1 89 1 153 1 183 1 207 1 298 1 270 1 
0 1 237 1 194 4 139 1 9 1 140 2 57 1 242 1 336 4 13 1 197 1 103 1 148 1 286 1 22 1 150 1 23 1 249 1 153 2 71 1 207 1 298 2 253 1 73 3 74 1 302 1 352 1 215 1 160 1 115 1 35 1 358 3 310 3 359 1 313 2 260 1 83 1 261 1 263 5 264 1 226 1 322 1 321 2 44 1 227 1 89 1 181 1 46 1 45 1 183 1 270 1 
237 2 194 4 139 2 9 1 140 1 57 2 242 1 336 4 13 1 103 2 22 1 150 1 249 1 153 1 297 2 207 1 298 1 253 2 73 2 74 2 302 1 352 1 215 1 160 1 310 4 358 2 313 2 260 1 261 1 264 1 263 4 127 1 321 1 322 1 44 1 227 1 89 1 181 2 183 1 270 1 
0 1 237 1 194 3 139 1 9 1 140 2 57 1 242 1 336 3 13 1 103 1 286 1 22 1 150 1 249 1 153 2 71 1 207 1 298 2 253 1 73 1 74 1 302 1 352 1 215 1 160 1 115 1 35 1 310 3 358 1 359 1 313 1 260 1 83 1 261 1 264 1 263 2 226 1 321 2 322 1 44 1 227 1 89 1 181 1 46 1 45 1 183 1 270 1 
0 1 237 1 194 3 139 1 9 1 140 2 57 1 242 1 336 3 13 1 103 1 286 1 22 1 150 1 249 1 153 2 71 1 207 1 298 2 253 1 73 1 74 1 302 1 352 1 215 1 160 1 115 1 35 1 310 3 358 1 359 1 313 1 260 1 83 1 261 1 264 1 263 2 226 1 321 2 322 1 44 1 227 1 89 1 181 1 46 1 45 1 183 1 270 1 
0 1 55 1 194 3 139 1 9 1 140 2 57 1 242 1 336 3 13 1 286 1 22 1 150 1 295 1 249 1 153 2 297 1 71 1 207 1 298 2 253 1 111 1 73 1 302 1 352 1 215 1 160 1 35 1 310 3 358 1 359 1 313 1 260 1 83 1 261 1 263 2 364 1 177 1 226 1 321 2 322 1 44 1 227 1 89 1 181 1 46 1 183 1 270 1 
0 1 237 1 194 3 139 1 9 1 140 2 57 2 242 1 336 3 13 1 103 1 286 1 22 1 150 1 23 1 249 1 153 2 71 1 207 1 298 2 253 1 73 2 74 1 302 1 352 1 215 1 160 1 115 1 35 1 358 2 310 4 359 1 313 1 260 1 83 1 261 1 263 3 264 1 226 1 321 2 322 1 44 1 227 1 89 1 181 1 46 1 45 1 183 1 270 1 
0 1 237 1 194 3 139 1 9 1 140 2 57 2 242 1 336 3 13 1 103 1 286 1 22 1 150 1 23 1 249 1 153 2 71 1 207 1 298 2 253 1 73 2 74 1 302 1 352 1 215 1 160 1 115 1 35 1 358 2 310 4 359 1 313 1 260 1 83 1 261 1 263 3 264 1 226 1 321 2 322 1 44 1 227 1 89 1 181 1 46 1 45 1 183 1 270 1 
55 1 194 4 139 1 9 1 140 1 57 2 242 1 336 4 13 1 22 1 150 1 295 2 249 1 153 1 297 2 207 1 298 1 253 2 73 2 302 1 352 1 215 1 160 1 310 4 358 2 313 2 260 1 261 1 263 4 364 2 127 1 321 1 322 1 44 1 227 1 89 1 181 2 183 1 270 1 
211 1 136 1 158 2 351 1 236 2 2 1 8 1 164 1 195 3 167 1 118 1 334 1 171 1 282 1 360 2 174 1 244 1 245 3 223 1 340 2 41 1 178 1 294 1 206 1 366 1 372 6 
245 1 340 2 136 1 341 1 41 1 204 1 351 1 2 4 3 1 7 1 164 1 294 1 195 3 218 1 228 1 118 4 334 1 171 1 37 1 94 1 372 4 
136 1 189 1 236 1 351 1 159 1 193 1 162 1 56 1 8 1 164 1 35 1 195 1 10 1 334 1 171 1 196 1 243 1 200 1 245 1 340 2 204 1 124 1 288 1 125 1 321 2 344 1 107 1 294 1 68 1 153 1 24 1 92 1 267 1 268 1 26 1 71 1 298 2 372 2 
136 3 189 1 236 2 2 7 192 1 193 2 240 1 8 7 195 10 334 3 10 2 282 1 196 2 243 2 14 1 200 3 244 1 245 10 340 6 204 1 288 2 344 3 107 3 294 3 68 1 347 2 153 1 24 1 71 1 298 3 211 3 158 4 351 3 354 1 159 2 162 1 163 2 164 3 35 1 218 2 167 1 118 7 171 3 80 2 37 2 360 8 122 2 223 1 224 2 41 3 124 2 178 1 321 3 179 4 129 2 366 1 267 1 92 2 372 20 
30 1 53 1 155 1 136 1 189 1 351 1 159 1 164 1 195 1 307 1 334 1 171 1 196 1 173 1 243 1 200 2 245 1 340 2 288 1 344 2 107 2 294 1 68 1 296 1 24 1 92 2 184 1 154 1 372 2 
211 1 136 1 158 1 351 1 2 1 8 1 164 1 35 1 195 1 218 1 118 1 334 1 169 1 171 1 58 1 37 1 360 1 245 2 340 2 204 1 41 1 226 1 321 1 294 1 129 1 153 1 71 1 298 1 372 3 
340 2 136 1 351 1 41 1 2 1 191 1 179 1 8 1 164 1 294 1 195 2 118 1 334 1 171 1 37 1 360 1 174 1 372 2 
245 2 211 1 340 2 136 1 158 1 351 1 2 1 8 1 164 1 294 1 129 1 118 1 334 1 230 1 171 1 360 1 174 1 372 2 
211 1 136 1 158 1 351 1 2 2 164 1 8 2 195 2 218 1 118 2 334 1 171 1 37 1 360 2 174 1 245 2 340 2 41 1 179 1 294 1 129 1 372 4 
340 2 136 1 351 1 41 1 2 1 191 1 179 1 8 1 164 1 294 1 195 2 118 1 334 1 171 1 37 1 360 1 184 1 372 2 
245 2 211 1 340 2 136 1 158 1 351 1 2 1 8 1 164 1 294 1 129 1 118 1 334 1 230 1 171 1 360 1 184 1 372 2 
245 2 211 1 340 2 136 1 158 1 351 1 41 1 2 2 179 1 8 2 164 1 294 1 129 1 195 2 218 1 118 2 334 1 171 1 37 1 360 2 184 1 372 4 
245 2 211 1 340 2 136 1 158 1 351 1 41 1 2 2 179 1 8 2 164 1 294 1 129 1 195 2 218 1 118 2 334 1 171 1 37 1 360 2 372 4 
136 1 189 1 236 1 351 1 159 1 193 1 164 1 195 1 10 1 334 1 171 1 196 1 243 1 200 1 245 1 340 2 224 1 124 1 288 1 321 1 344 1 107 1 294 1 68 1 24 1 92 1 298 1 372 2 
136 1 114 1 189 1 236 1 351 1 159 1 164 1 195 1 258 1 334 1 171 1 196 1 243 1 319 1 200 1 245 1 340 2 124 1 288 1 321 1 344 1 107 1 294 1 68 1 24 1 92 1 298 1 372 2 
245 2 211 1 340 2 136 1 158 1 204 1 351 1 41 1 2 2 179 1 8 2 164 1 294 1 129 1 195 2 218 1 118 2 334 1 171 1 37 1 360 2 372 4 
211 1 136 1 158 1 351 1 2 2 159 1 193 1 8 2 164 1 195 2 218 1 118 2 10 1 334 1 171 1 37 1 360 2 196 1 243 1 200 1 245 2 340 2 224 1 41 1 124 1 288 1 321 1 179 1 344 1 107 1 294 1 129 1 347 1 92 1 326 1 298 1 372 4 
211 1 136 1 351 1 2 1 164 1 8 1 35 1 195 2 218 1 118 1 334 1 169 1 171 1 37 1 360 1 245 1 340 2 204 1 41 1 87 1 226 1 321 1 179 1 294 1 129 1 153 1 71 1 298 1 372 3 
245 2 340 4 136 2 341 1 41 1 3 1 6 1 164 2 294 2 195 4 277 1 218 1 228 1 367 1 171 2 37 1 91 1 61 1 269 1 49 1 372 6 318 1 
211 1 136 3 158 1 161 1 164 3 195 10 277 2 278 1 218 2 309 1 171 3 37 2 360 2 61 1 318 1 245 8 64 2 340 6 341 2 41 2 88 1 179 1 294 3 345 1 129 1 228 2 367 2 91 1 185 1 49 2 269 2 372 18 
245 2 340 4 136 2 341 1 41 1 3 1 6 1 164 2 294 2 195 4 277 1 218 1 228 1 367 1 171 2 37 1 91 1 61 1 269 1 49 1 372 6 318 1 
245 2 340 4 136 2 341 1 41 1 3 1 6 1 164 2 294 2 195 4 277 1 218 1 228 1 367 1 171 2 37 1 91 1 61 1 269 1 49 1 372 6 318 1 
211 1 136 1 158 1 3 1 164 1 277 1 195 7 218 1 167 1 171 1 282 1 37 1 360 1 61 1 318 1 244 1 245 4 340 2 223 1 341 1 41 2 178 1 294 1 228 1 366 1 367 1 91 1 49 1 269 1 372 11 
279 1 168 1 266 1 325 1 329 1 121 1 291 1 369 1 293 1 299 1 
119 1 137 1 
187 1 168 1 219 1 325 1 329 1 291 1 21 1 293 1 299 1 
86 1 147 1 329 1 291 1 194 1 293 1 139 1 216 2 279 1 280 1 168 1 266 1 325 1 336 1 110 1 121 1 252 1 299 1 
86 1 147 1 329 1 291 1 194 1 293 1 139 1 216 2 279 1 280 1 168 1 266 1 325 1 336 1 110 1 121 1 252 1 299 1 
86 1 147 1 329 1 291 1 194 1 293 1 139 1 216 2 279 1 280 1 168 1 266 1 325 1 336 1 110 1 121 1 252 1 299 1 
105 1 259 1 95 1 
105 1 259 1 95 1 
225 1 102 1 
225 1 102 1 95 1 
90 1 365 1 
137 1 236 1 329 1 214 1 4 1 194 1 275 1 216 1 35 2 280 1 168 1 119 1 336 1 291 1 321 2 293 1 365 1 133 1 90 1 153 2 182 1 325 1 110 1 71 2 208 1 298 2 299 1 
105 1 259 1 
225 1 102 1 95 1 
53 1 136 1 351 1 159 1 239 1 164 1 195 1 308 1 334 1 171 1 196 1 243 1 200 2 262 1 245 1 340 2 204 1 321 2 344 2 107 2 294 1 68 1 229 1 153 2 24 1 92 1 93 1 298 2 154 2 51 1 372 2 
200 2 202 1 327 1 146 2 18 1 32 1 213 1 159 1 354 1 344 2 107 2 69 1 36 1 92 1 326 1 316 1 221 1 361 1 317 1 
200 1 202 1 327 1 146 2 32 1 213 1 354 1 159 1 344 1 107 1 117 1 69 1 36 1 92 1 221 1 361 1 317 1 
30 1 155 1 189 1 159 1 306 1 217 1 307 1 196 1 243 1 173 1 221 1 316 1 200 1 288 1 344 1 107 1 296 1 92 2 48 1 
200 1 202 1 327 1 146 2 18 1 32 1 213 1 354 1 159 1 344 1 107 1 69 1 36 1 92 1 316 1 221 1 361 1 317 1 
112 1 
206 1 242 1 100 1 322 1 76 1 139 1 261 1 
74 1 237 1 215 1 194 1 139 2 9 1 242 1 313 1 336 1 261 1 264 1 263 1 103 1 322 1 150 1 227 1 297 1 
189 1 237 6 194 5 139 7 9 3 242 8 196 6 336 5 284 3 243 1 11 2 200 1 17 2 65 2 288 1 66 6 344 1 150 3 107 1 248 6 346 1 152 1 297 6 70 2 29 2 211 2 34 2 159 1 215 3 160 2 163 2 218 2 355 2 357 2 172 1 313 3 37 2 261 7 263 5 41 2 322 1 129 2 227 3 92 2 47 1 186 1 52 2 
211 2 237 3 34 1 215 2 161 1 194 1 139 5 277 1 278 1 9 2 218 2 355 2 309 1 313 1 242 8 37 2 336 1 261 5 337 1 263 1 341 1 41 2 66 5 42 1 322 2 150 2 248 5 345 1 129 2 227 2 228 1 152 1 297 3 70 1 185 1 
0 1 211 1 215 1 194 1 35 1 9 1 355 2 167 1 140 1 242 2 336 1 83 1 261 2 244 1 286 1 41 2 178 1 226 1 321 1 150 1 227 1 180 1 153 1 45 1 46 1 70 1 71 1 298 1 
215 1 76 1 322 1 150 1 139 1 9 1 227 1 100 1 242 1 261 1 
211 1 41 1 237 2 66 2 139 2 248 2 129 1 218 1 355 1 297 2 242 2 37 1 70 1 261 2 
263 1 313 1 336 1 322 1 194 1 139 1 
30 1 155 1 189 2 159 1 34 1 215 1 194 1 307 1 9 1 242 1 313 1 196 1 336 1 173 1 243 1 142 1 261 1 143 1 200 2 263 2 288 1 344 2 150 1 107 2 227 1 296 1 152 1 92 2 28 1 
0 1 136 1 189 1 236 1 351 1 159 1 193 1 164 1 35 2 10 1 334 1 171 1 196 1 243 1 200 1 245 1 340 2 224 1 124 1 288 1 226 2 321 3 344 1 343 1 107 1 294 1 153 2 24 1 92 1 71 2 298 3 372 1 
237 2 66 2 34 1 215 1 322 2 150 1 139 4 248 2 9 1 227 1 152 1 297 2 282 1 242 1 261 2 
168 1 291 1 247 1 
279 1 168 1 90 1 289 1 291 1 
168 1 291 1 247 1 
168 1 291 1 247 1 
168 1 311 1 291 1 
168 1 311 1 291 1 
168 1 311 1 291 1 
168 1 291 1 
325 1 299 1 
245 4 244 1 211 1 64 1 340 4 136 2 223 1 158 2 41 1 178 1 179 1 164 2 294 2 195 4 366 1 167 1 171 2 282 1 360 3 372 8 
245 3 244 1 211 1 223 1 158 2 41 1 178 1 195 3 206 1 366 1 167 1 282 1 360 2 372 6 
245 2 211 1 340 2 136 1 158 1 41 1 179 1 164 1 294 1 129 1 195 2 218 1 171 1 37 1 360 2 285 1 372 4 
218 1 245 1 228 1 341 1 41 1 37 1 3 1 195 3 372 4 277 1 
218 1 245 1 228 1 341 1 41 1 37 1 3 1 94 1 195 3 372 4 
245 1 341 1 372 1 
228 1 372 1 195 1 
245 3 211 1 136 1 340 2 158 2 41 1 179 1 163 1 294 1 164 1 195 3 129 1 218 1 171 1 37 1 360 3 285 1 372 6 
211 2 136 1 158 1 161 1 164 1 277 1 195 6 278 1 218 2 309 1 171 1 37 2 360 2 318 1 245 6 340 2 341 1 41 2 179 1 294 1 129 2 345 1 228 1 185 1 372 12 
245 3 244 1 211 1 158 1 41 1 178 1 179 1 195 3 167 1 360 2 372 6 
244 1 245 2 64 1 340 2 136 1 223 1 158 1 179 1 164 1 294 1 195 1 167 1 366 1 171 1 360 2 315 1 372 3 
244 2 245 5 211 2 136 1 340 2 158 3 41 2 178 1 179 2 294 1 164 1 195 5 167 2 180 1 171 1 360 5 318 1 372 10 
340 2 136 1 41 1 179 1 164 1 294 1 195 2 171 1 37 1 360 1 318 1 372 2 
245 2 211 1 340 2 136 1 158 1 41 1 179 1 164 1 294 1 129 1 195 2 218 1 171 1 37 1 360 2 318 1 372 4 
245 2 244 1 64 1 340 6 136 3 158 1 179 1 6 1 164 3 294 3 195 1 167 1 171 3 360 2 315 1 372 3 318 1 
211 3 136 4 158 3 3 1 6 1 164 4 277 1 195 13 218 3 167 1 171 4 282 1 37 3 360 5 285 1 101 1 318 1 244 1 245 11 64 1 223 1 340 8 341 3 41 4 178 1 179 2 294 4 108 1 129 2 366 1 228 3 250 1 372 24 
244 1 245 4 211 1 223 1 340 2 136 1 158 2 341 1 41 1 178 1 164 1 294 1 195 4 277 1 278 1 167 1 366 1 228 1 171 1 282 1 360 2 318 1 372 8 
245 1 340 4 136 2 341 1 41 1 3 1 164 2 294 2 195 3 277 1 218 1 278 1 228 1 171 2 37 1 285 1 318 1 372 4 
211 3 136 3 158 3 161 1 164 3 277 1 195 9 278 1 218 2 167 1 309 1 171 3 282 1 37 2 360 4 285 1 318 1 244 1 245 10 64 1 223 1 340 6 341 1 41 3 178 1 179 1 294 3 129 2 345 1 366 1 228 1 185 1 372 19 
211 2 136 3 158 3 161 1 164 3 277 1 195 10 278 1 218 2 167 1 309 1 171 3 282 1 37 2 360 5 285 1 318 1 244 1 245 7 64 1 223 1 340 6 341 1 41 3 178 1 179 2 294 3 129 1 345 1 366 1 228 1 185 1 372 17 
244 1 245 4 211 1 223 1 340 2 136 1 158 2 341 1 41 1 178 1 164 1 294 1 195 4 277 1 278 1 167 1 366 1 228 1 171 1 282 1 360 2 318 1 372 8 
211 2 136 1 158 1 161 1 164 1 277 1 195 6 278 1 218 2 309 1 171 1 37 2 360 2 318 1 245 6 340 2 341 1 41 2 179 1 294 1 129 2 345 1 228 1 185 1 372 12 
211 2 136 4 158 3 161 1 164 4 277 1 195 10 278 1 218 2 167 1 309 1 171 4 282 1 37 2 360 5 285 1 318 1 244 1 245 8 64 2 223 1 340 8 341 1 41 3 178 1 179 2 294 4 345 1 129 1 366 1 228 1 185 1 372 18 
211 2 136 4 158 3 161 1 6 1 164 4 277 1 195 9 278 1 218 3 309 1 171 4 37 3 360 6 318 1 245 7 64 2 340 8 341 1 41 3 179 3 294 4 345 1 129 2 228 1 185 1 372 16 
245 4 244 3 211 1 223 1 158 3 41 1 178 1 179 3 195 3 366 2 167 3 360 6 372 7 
211 2 136 4 158 3 161 1 6 1 164 4 277 1 195 10 278 1 218 2 167 1 309 1 171 4 282 1 37 2 360 4 318 1 244 1 245 8 64 2 223 1 340 8 341 1 41 3 178 1 179 1 294 4 345 1 129 1 366 1 228 1 185 1 372 18 
198 1 249 1 236 1 153 1 33 1 321 1 298 1 
198 1 54 1 175 1 113 1 236 1 149 1 33 1 321 1 249 1 153 1 134 1 298 1 
200 1 206 1 155 1 189 1 344 1 107 1 
200 1 189 1 236 1 124 1 288 1 159 1 321 2 344 1 162 1 107 1 35 1 10 1 153 1 196 1 92 1 243 1 71 1 298 2 
236 1 212 1 159 1 162 1 35 1 140 1 10 1 38 1 196 3 243 2 260 1 144 1 200 1 124 1 288 2 321 2 344 1 107 1 153 2 92 1 71 2 298 2 270 1 
236 1 212 1 159 1 162 1 35 1 140 1 38 1 196 3 243 2 260 1 144 1 319 1 200 2 124 1 288 2 321 2 344 2 107 2 153 2 92 1 71 2 370 1 298 2 270 1 
200 3 235 1 263 1 189 1 212 1 288 1 159 1 322 1 160 1 96 1 194 2 344 3 139 1 107 3 92 1 336 2 38 1 196 4 243 1 284 1 11 1 370 1 144 1 
200 3 263 1 189 1 212 1 288 1 159 1 322 1 160 1 194 2 344 3 139 1 107 3 357 1 92 1 336 2 38 1 196 4 243 1 284 1 11 1 370 1 144 1 
200 1 201 1 92 1 159 1 344 1 107 1 
200 7 84 1 201 1 189 2 288 1 354 1 159 2 239 1 255 1 344 6 107 7 151 1 296 1 172 1 283 1 196 3 92 3 326 1 173 1 243 2 154 1 
136 2 236 2 2 1 193 1 8 1 195 3 10 1 334 2 282 1 196 1 243 1 200 1 244 1 245 3 340 4 204 1 288 1 344 1 107 1 294 2 347 1 153 1 71 1 298 2 211 1 158 2 351 2 159 1 162 1 164 2 35 1 308 1 167 1 118 1 171 2 360 2 122 1 223 1 224 1 41 1 124 1 178 1 321 2 366 1 92 1 326 1 372 6 
189 1 215 2 76 1 160 1 194 3 275 1 139 1 9 2 357 1 242 1 100 1 313 1 336 3 196 2 284 1 11 1 261 1 200 1 17 1 263 2 65 1 322 1 344 1 107 1 150 2 227 2 28 1 29 1 
200 2 201 1 288 1 159 1 344 2 107 2 172 1 47 1 196 2 92 2 326 1 11 1 243 1 
200 2 30 1 155 1 189 1 288 1 159 1 344 2 107 2 307 1 296 1 92 2 196 1 173 1 243 1 326 1 
200 2 30 1 288 1 159 1 344 2 107 2 307 1 296 1 38 1 196 1 92 2 173 1 243 1 14 1 
200 1 146 1 189 1 32 1 213 1 92 1 159 1 361 1 344 1 107 1 
200 2 92 1 159 1 196 1 354 1 243 1 326 1 239 1 344 2 107 2 51 1 
30 1 155 1 189 1 159 2 239 1 255 1 307 1 283 1 196 3 243 2 173 1 200 3 288 1 344 2 107 3 296 1 92 3 326 1 
30 1 155 1 189 1 159 2 239 1 307 1 283 1 196 3 243 2 173 1 200 3 363 1 288 1 344 2 107 3 296 1 92 3 326 1 
200 1 319 1 189 1 236 1 124 1 288 1 159 1 321 2 344 1 162 1 107 1 35 1 153 1 196 1 92 1 243 1 71 1 298 2 
200 1 84 1 288 1 159 1 344 1 107 1 296 1 172 1 38 1 196 1 92 2 173 1 243 1 
262 1 321 1 97 1 229 1 153 1 368 1 93 1 298 1 222 1 
350 1 43 1 97 1 
236 1 368 1 304 1 97 1 222 1 
236 1 350 1 1 1 304 2 352 1 43 1 322 1 160 1 275 1 194 2 139 1 97 1 140 1 368 2 336 2 260 1 232 1 270 1 222 2 
206 1 98 1 75 1 314 1 
332 1 98 1 75 1 314 1 209 1 276 1 72 1 
332 1 188 1 12 1 
75 1 276 3 332 3 98 1 141 1 99 1 314 1 209 1 234 2 349 1 72 1 338 1 
332 2 98 1 246 1 75 1 123 1 314 1 209 1 276 2 72 1 
145 1 39 1 202 1 146 1 75 1 32 1 276 1 332 1 209 1 349 1 72 1 
332 1 98 1 75 1 209 1 276 1 72 1 349 1 
332 1 98 2 314 1 209 1 276 1 72 1 349 1 
75 1 157 1 276 2 332 2 98 1 281 1 233 1 209 2 349 1 72 2 
145 1 246 2 104 1 75 2 276 3 332 3 333 1 356 1 98 1 314 1 209 1 349 1 72 1 
146 2 327 1 202 1 246 1 75 1 138 1 32 1 276 2 332 2 98 1 314 1 361 1 209 1 349 1 72 1 
145 1 246 2 104 1 123 1 75 2 276 4 332 4 98 1 314 1 82 1 209 2 349 1 72 2 
332 1 98 1 75 1 314 1 209 1 276 1 72 1 349 1 
145 1 246 2 104 1 75 3 276 4 77 1 332 4 98 2 99 1 314 2 234 1 209 1 72 1 338 1 
85 1 210 1 246 1 75 1 276 2 332 2 98 1 314 1 209 1 349 1 72 1 50 1 
332 3 98 1 75 1 99 1 314 1 371 1 234 2 209 1 276 3 72 1 349 1 338 2 
75 2 290 1 25 2 305 1 
332 1 126 1 209 1 276 1 72 1 349 1 
332 2 356 1 98 1 246 1 75 1 314 1 209 1 276 2 72 1 349 1 
301 1 
332 1 98 1 75 1 314 1 209 1 276 1 72 1 349 1 
246 1 75 1 276 3 332 3 356 1 98 1 314 1 209 1 234 1 349 1 72 1 
77 1 145 1 104 1 75 1 
98 1 75 1 

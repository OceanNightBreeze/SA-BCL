#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (42,185,255,317) (42,185,255,317) (42,185,255,317) 84 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (42,185,255,317) (42,185,255,317) (42,185,255,317) 84 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (42,185,255,317) (42,185,255,317) (42,185,255,317) 84 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (42,185,255,317) (42,185,255,317) (42,185,255,317) 84 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (42,185,255,317) (42,185,255,317) (42,185,255,317) 84 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (42,185,255,317) (42,185,255,317) (42,185,255,317) 84 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (42,185,255,317) (42,185,255,317) (42,185,255,317) 84 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (42,185,255,317) (42,185,255,317) (42,185,255,317) 84 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (42,185,255,317) (42,185,255,317) (42,185,255,317) 84 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 250 (45,151,159) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (42,185,255,317) (42,185,255,317) (42,185,255,317) (37,304) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (42,185,255,317) (42,185,255,317) (42,185,255,317) 84 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (42,185,255,317) (42,185,255,317) (42,185,255,317) 84 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (42,185,255,317) (42,185,255,317) (42,185,255,317) (37,304) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (42,185,255,317) (42,185,255,317) (37,304) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 323 251 278 167 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 323 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 323 251 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 323 251 331 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 323 251 278 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 323 251 278 308 87 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 323 251 278 308 87 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 323 251 278 308 248 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 323 251 148 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 323 251 148 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 323 251 278 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 75 142 99 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
42 1 18 1 317 1 185 1 84 1 
42 1 18 1 317 1 185 1 84 1 
42 1 18 1 317 1 185 1 84 1 
42 1 18 1 317 1 185 1 84 1 
42 1 18 1 317 1 185 1 84 1 
42 1 18 1 317 1 185 1 84 1 
42 1 18 1 317 1 185 1 84 1 
42 1 18 1 317 1 185 1 84 1 
42 1 18 1 317 1 185 1 84 1 
314 1 110 1 208 1 61 1 114 1 214 1 29 1 94 1 218 1 326 1 71 1 244 1 36 1 53 1 
12 1 
174 1 110 2 314 1 61 2 12 1 200 1 228 1 252 1 
165 1 205 1 314 2 110 5 44 1 61 5 236 2 212 1 213 2 68 1 174 1 324 1 12 1 54 2 200 2 228 1 203 1 57 1 164 1 
80 1 174 1 12 1 
70 2 307 1 12 1 
218 2 257 1 208 2 244 2 114 2 53 2 214 2 29 1 
257 1 125 1 208 2 296 1 83 1 258 1 85 1 214 2 261 1 96 1 8 1 98 1 218 3 263 1 220 1 53 3 227 1 179 2 181 2 15 2 271 2 182 1 111 1 114 2 279 2 150 1 280 1 190 1 29 1 327 1 286 1 34 1 244 2 243 1 329 1 291 1 124 1 
94 1 218 1 326 1 208 1 244 1 36 1 114 1 53 1 214 1 29 1 
1 1 206 1 2 1 110 1 184 1 61 1 174 1 218 1 326 1 244 1 12 1 53 1 13 1 223 1 
1 1 206 1 110 2 208 1 114 1 61 2 214 1 174 1 218 1 326 1 244 1 12 1 53 1 13 1 223 1 
110 1 314 1 74 1 61 1 200 1 
174 1 110 2 314 1 61 2 12 1 200 1 228 1 180 1 
110 1 61 1 200 1 
208 1 257 2 60 1 114 1 214 1 218 2 244 2 53 2 226 1 
270 1 128 1 90 1 
182 1 257 1 111 1 296 1 83 1 258 1 85 1 279 1 218 1 286 1 327 1 53 1 177 1 179 1 329 1 15 1 
270 1 182 1 208 1 111 1 296 1 114 1 83 1 258 1 85 1 279 1 134 1 218 2 327 1 286 1 244 1 53 2 329 1 77 1 179 1 15 1 
80 1 257 1 
2 1 208 4 257 1 114 4 60 1 298 1 214 1 134 2 218 5 244 5 53 5 76 1 158 1 77 1 
218 2 326 1 208 2 244 2 36 1 114 2 53 2 231 1 
134 1 218 3 257 1 208 3 244 3 114 3 53 3 214 1 
218 1 326 1 208 1 244 1 36 1 114 1 53 1 
218 1 326 1 208 1 244 1 114 1 60 1 53 1 226 1 214 1 
1 1 206 1 257 1 125 1 208 3 296 1 83 1 258 1 85 1 214 2 261 1 134 1 98 1 218 4 263 1 53 4 13 1 223 1 227 1 179 1 181 1 15 1 271 2 110 1 182 1 315 1 111 1 60 1 114 3 61 1 320 1 279 1 150 1 280 1 190 1 29 1 327 1 286 1 326 1 244 3 329 1 77 1 291 1 124 1 
134 1 2 1 218 2 257 1 208 1 244 2 114 1 53 2 76 1 
206 1 1 1 110 1 208 3 60 1 61 1 114 3 320 1 214 1 134 2 218 3 326 1 244 3 12 1 53 3 13 1 223 1 77 1 123 1 
270 1 208 2 60 1 114 2 128 1 214 1 134 1 218 2 244 2 53 2 
182 1 257 1 111 1 296 1 83 1 258 1 85 1 279 1 218 1 286 1 327 1 53 1 179 1 329 1 15 1 
182 1 256 1 257 1 111 1 296 1 258 1 279 1 218 1 286 1 327 1 53 1 197 1 179 1 329 1 15 1 
125 1 128 2 91 1 90 2 95 1 8 2 98 2 263 1 176 1 9 1 264 1 312 1 227 1 181 4 270 2 271 2 112 1 318 1 238 1 280 1 190 1 201 1 204 1 124 1 
1 1 218 1 326 1 208 1 244 1 114 1 53 1 231 1 
0 1 45 1 250 1 151 1 
0 1 45 1 159 1 
0 1 45 1 
0 1 45 1 
250 1 151 1 
250 1 151 1 
250 1 151 1 
0 1 45 1 168 1 
0 1 45 1 168 1 
0 1 45 1 168 1 
152 1 0 1 45 1 
152 1 0 1 45 1 
152 1 0 1 45 1 
0 1 43 1 257 1 208 2 45 1 218 2 137 1 222 1 53 2 104 1 178 1 143 1 110 1 146 1 114 2 61 1 149 1 189 1 191 1 244 2 194 1 198 1 159 1 290 1 
0 2 143 1 232 1 110 2 294 1 209 2 45 2 61 2 149 2 189 2 191 2 7 1 135 1 328 1 12 1 198 3 102 1 289 1 290 2 
273 1 52 1 120 2 169 1 292 2 
120 1 169 1 26 1 
273 1 120 1 26 1 
273 1 52 1 120 3 169 2 133 1 292 1 
273 1 52 1 120 2 169 1 292 1 122 1 
165 1 293 2 211 1 213 1 262 2 50 1 91 1 95 1 174 1 219 1 307 1 264 1 137 1 101 2 12 2 54 1 104 1 178 1 228 1 57 2 110 5 314 4 61 5 236 1 30 1 70 3 73 1 193 1 200 1 121 1 203 3 204 1 
165 1 211 3 213 2 262 6 50 2 91 3 95 3 174 1 219 2 307 3 264 3 137 4 101 6 12 5 54 2 228 1 16 1 57 6 230 1 110 9 314 7 61 9 236 2 284 1 283 1 31 5 324 1 72 1 241 1 70 9 74 5 200 6 121 1 203 8 204 3 
293 1 211 1 213 1 262 2 50 1 91 1 95 1 174 1 219 1 307 2 264 1 137 1 12 3 101 2 54 1 57 2 314 2 110 3 61 3 236 1 30 1 324 1 70 4 193 1 203 3 204 1 
293 2 211 2 213 1 262 4 50 1 91 2 95 2 174 1 219 1 307 3 264 2 137 2 12 4 101 4 54 1 16 1 57 4 110 4 314 3 61 4 236 1 284 1 30 1 324 1 70 7 72 1 193 1 203 5 204 2 
153 1 
80 1 296 1 130 1 
118 1 296 1 
327 1 111 1 296 1 
296 1 309 1 
111 1 296 1 
327 1 111 1 296 3 127 1 130 2 160 1 
183 1 82 1 117 2 322 1 91 1 4 1 98 3 8 4 176 3 136 1 196 1 199 1 312 2 39 1 140 1 56 1 204 1 181 7 
82 2 211 3 297 1 216 1 4 1 91 4 6 1 95 3 98 15 8 16 263 1 136 2 176 10 264 3 312 5 140 2 227 1 56 5 181 31 108 4 142 1 271 2 183 1 23 1 235 1 117 3 322 2 280 1 240 1 75 3 196 1 199 1 124 1 204 4 
82 1 131 1 91 1 4 1 8 5 98 4 263 2 136 1 176 4 312 3 227 2 140 1 56 1 181 9 17 1 271 4 235 1 117 2 280 2 322 1 196 1 199 1 204 1 124 2 
183 1 82 1 117 2 322 1 91 1 4 1 98 3 8 4 176 3 136 1 196 1 199 1 312 2 140 1 56 1 204 1 181 7 
183 1 82 1 117 2 322 1 91 1 4 1 98 3 8 4 176 3 136 1 196 1 199 1 312 2 140 1 56 1 204 1 181 7 
42 1 18 1 317 1 185 1 37 1 
42 1 18 1 317 1 185 1 84 1 
42 1 18 1 317 1 185 1 84 1 
42 1 18 1 317 1 185 1 37 1 
18 1 255 1 185 1 304 1 
266 1 
165 1 253 1 1 1 2 1 167 1 258 1 86 1 171 1 172 1 175 1 13 1 179 2 15 2 110 4 182 2 111 1 184 1 278 1 25 1 279 2 115 1 200 3 203 2 206 1 210 1 126 1 296 1 46 1 213 1 50 1 218 1 307 1 53 1 139 1 54 1 223 1 224 2 228 2 57 2 144 1 147 1 61 4 64 1 236 1 323 1 70 1 326 1 244 1 157 1 251 1 329 1 
206 1 1 1 253 1 110 2 2 1 210 1 147 1 184 1 61 2 25 1 115 1 323 1 218 1 326 1 244 1 53 1 224 2 223 1 13 1 
253 1 1 1 206 1 2 1 210 1 218 1 174 1 53 1 12 1 13 1 223 1 224 3 228 1 268 1 110 3 147 1 184 1 61 3 25 1 115 1 326 1 244 1 200 1 252 1 
206 1 1 1 253 1 110 2 2 1 210 1 147 1 184 1 61 2 25 1 115 1 323 1 218 1 326 1 244 1 53 1 224 2 223 1 13 1 251 1 
206 1 1 1 253 1 110 3 2 1 210 1 147 1 184 1 61 3 25 1 115 1 323 1 218 1 326 1 244 1 53 1 224 2 223 1 13 1 200 1 251 1 228 1 252 1 331 1 
165 1 253 1 1 1 206 1 2 1 210 1 126 1 213 1 171 1 175 1 218 1 307 1 53 1 54 1 13 1 223 1 224 2 228 1 57 1 110 3 147 1 184 1 61 3 64 1 278 1 236 1 25 1 115 1 323 1 70 1 326 1 244 1 157 1 200 1 251 1 203 1 
165 1 253 1 1 1 206 1 2 1 210 1 126 1 213 1 171 1 87 1 89 1 175 1 218 1 307 1 308 1 53 1 54 1 13 1 223 1 224 2 228 1 57 1 110 3 147 1 184 1 61 3 64 1 278 1 25 1 236 1 115 1 323 1 326 1 244 1 157 1 200 1 251 1 203 1 
165 1 253 1 1 1 206 1 2 1 210 1 126 1 213 1 171 1 87 1 89 1 175 1 218 1 307 1 308 1 53 1 54 1 13 1 223 1 224 2 228 1 57 1 110 3 147 1 184 1 61 3 64 1 278 1 25 1 236 1 115 1 323 1 326 1 244 1 157 1 200 1 251 1 203 1 
165 1 253 1 1 1 206 1 2 1 210 1 126 1 213 1 88 1 218 1 308 1 53 1 54 1 225 1 13 1 223 1 224 2 228 1 14 1 57 1 110 3 147 1 184 1 61 3 64 1 278 1 25 1 236 1 115 1 282 1 323 1 70 1 326 1 244 1 248 1 200 1 251 1 203 1 
206 1 1 1 253 1 110 2 2 1 210 1 147 1 184 1 148 1 61 2 25 1 115 1 323 1 218 1 326 1 244 1 53 1 224 2 223 1 13 1 251 1 
206 1 1 1 253 1 110 2 2 1 210 1 147 1 184 1 148 1 61 2 25 1 115 1 323 1 218 1 326 1 244 1 53 1 224 2 223 1 13 1 251 1 
165 1 253 1 1 1 206 1 2 1 210 1 126 1 213 1 88 1 218 1 53 1 54 1 225 1 13 1 223 1 224 2 228 1 57 1 110 3 147 1 184 1 61 3 64 1 278 1 236 1 25 1 115 1 282 1 323 1 70 1 326 1 244 1 200 1 251 1 203 1 
258 4 261 1 172 1 92 1 96 1 98 1 8 1 263 2 179 7 106 1 181 2 15 6 271 4 182 2 111 3 114 1 279 7 280 2 190 2 34 2 35 1 287 1 119 1 202 1 124 2 125 2 208 1 296 4 295 1 299 1 301 1 134 1 218 1 53 1 139 1 227 2 238 1 325 1 327 1 244 1 245 1 329 3 163 1 
208 1 125 1 211 1 128 1 214 1 90 1 91 1 95 1 218 1 8 1 98 2 263 1 176 1 264 1 53 1 312 1 227 1 181 3 270 1 271 2 60 1 114 1 66 1 280 1 190 1 244 1 41 1 124 1 204 1 
270 1 271 2 80 1 257 2 125 1 128 1 117 1 238 1 280 1 322 1 90 1 91 1 190 1 4 1 98 3 8 3 263 1 176 2 196 1 199 1 312 2 140 1 227 1 181 6 204 1 124 1 
257 1 125 2 211 2 128 4 261 1 90 11 91 1 96 1 95 2 98 6 8 8 263 2 176 2 100 1 264 1 312 1 227 2 56 1 181 14 142 1 108 3 270 11 271 4 22 1 62 1 280 2 190 1 240 1 33 1 75 3 41 1 124 2 204 2 
257 1 125 1 208 1 296 1 83 1 258 1 85 1 128 1 261 1 5 1 134 1 96 1 218 2 98 1 8 1 263 1 53 2 310 1 177 1 227 1 179 1 15 1 181 2 271 2 182 1 111 1 114 1 279 1 280 1 190 1 327 1 286 1 156 1 244 1 329 1 77 1 41 1 124 1 
257 2 83 2 258 2 85 2 261 1 4 1 91 3 90 7 96 1 95 2 98 10 8 10 263 3 176 8 264 2 179 3 107 1 15 3 181 20 270 7 271 6 182 1 111 2 114 1 276 2 279 3 117 1 280 3 190 3 285 1 286 2 195 2 196 1 199 1 41 1 124 3 204 3 208 1 125 3 296 2 211 2 128 7 301 1 134 1 218 3 53 3 312 4 140 1 227 3 56 4 59 2 316 1 150 2 322 1 327 2 244 1 161 2 77 1 329 2 
270 1 271 2 125 1 128 1 238 1 280 1 90 1 190 1 95 1 8 2 263 1 176 1 9 1 227 1 56 1 181 2 124 1 204 1 
270 1 271 2 125 1 128 1 238 1 280 1 90 1 190 1 91 1 98 2 263 1 176 1 264 1 312 1 227 1 201 1 181 2 124 1 
270 2 271 2 125 1 211 1 128 2 238 1 280 1 91 1 90 2 190 1 95 1 98 2 8 2 263 1 176 2 264 1 312 1 227 1 56 1 181 4 124 1 204 1 
270 1 271 2 125 1 128 1 280 1 90 1 190 1 95 1 8 2 325 1 263 1 176 1 9 1 227 1 56 1 181 2 124 1 204 1 
270 1 271 2 125 1 128 1 280 1 90 1 190 1 91 1 98 2 325 1 263 1 176 1 264 1 312 1 227 1 201 1 181 2 124 1 
270 2 271 2 125 1 211 1 128 2 280 1 91 1 90 2 190 1 95 1 98 2 8 2 325 1 263 1 176 2 264 1 312 1 227 1 56 1 181 4 124 1 204 1 
270 2 271 2 125 1 211 1 128 2 280 1 91 1 90 2 190 1 95 1 98 2 8 2 263 1 176 2 264 1 312 1 227 1 56 1 124 1 204 1 181 4 
257 1 125 1 296 1 83 1 258 1 85 1 261 1 96 1 8 1 218 1 98 1 263 1 53 1 227 1 179 1 181 2 15 1 271 2 182 1 111 1 279 1 150 1 280 1 190 1 327 1 286 1 329 1 124 1 
256 1 257 1 125 1 296 1 258 1 261 1 96 1 8 1 218 1 98 1 263 1 53 1 227 1 179 1 181 2 15 1 271 2 182 1 111 1 279 1 280 1 28 1 190 1 327 1 286 1 197 1 329 1 124 1 
270 2 271 2 125 1 211 1 128 2 280 1 91 1 90 2 190 1 95 1 98 2 8 2 263 1 176 2 264 1 312 1 227 1 56 1 41 1 181 4 124 1 204 1 
125 1 296 1 211 1 83 1 258 1 128 2 85 1 91 1 90 2 92 1 95 1 98 2 8 2 218 1 263 1 176 2 264 1 53 1 312 1 227 1 179 1 56 1 181 4 15 1 270 2 271 2 111 1 276 1 279 1 150 1 280 1 190 1 327 1 286 1 329 1 204 1 124 1 
208 1 125 1 211 1 128 1 214 1 91 1 90 1 95 1 98 1 218 1 8 2 263 1 176 1 264 1 53 1 103 1 227 1 56 1 181 3 270 1 271 2 60 1 114 1 280 1 190 1 244 1 41 1 124 1 204 1 
211 3 131 1 49 1 91 3 217 1 95 3 98 10 8 9 263 2 176 6 10 2 264 3 11 1 312 3 227 2 56 3 181 19 108 2 142 1 271 4 272 2 233 1 237 1 280 2 188 1 281 1 240 1 75 1 124 2 204 3 
254 1 211 3 131 1 303 1 91 2 217 1 95 3 98 12 8 14 263 3 176 4 99 1 10 1 264 2 11 1 312 2 227 3 56 2 269 1 181 26 142 2 108 2 271 6 272 4 235 2 237 1 280 3 188 2 281 2 75 2 246 1 78 1 124 3 204 3 
254 1 211 4 131 1 303 1 4 1 91 5 217 1 95 4 98 21 8 20 263 3 99 1 176 8 10 1 264 4 11 1 312 4 140 1 227 3 56 4 269 1 181 41 108 4 142 3 271 6 272 4 233 1 235 1 117 1 237 1 322 1 280 3 188 2 281 1 240 1 154 1 75 3 196 1 246 1 199 1 78 1 124 3 204 5 
254 1 211 4 131 1 303 1 4 1 91 4 217 1 95 4 98 18 8 20 263 4 99 1 176 7 10 1 264 3 11 1 312 4 140 1 227 4 56 3 269 1 181 38 108 4 142 3 271 8 272 4 233 1 235 2 117 1 237 1 322 1 280 4 188 2 281 1 240 1 154 1 75 3 196 1 246 1 199 1 78 1 124 4 204 5 
254 1 211 7 131 1 303 1 4 1 91 8 217 1 95 7 98 25 8 27 263 2 99 1 176 14 10 1 264 7 11 1 312 7 140 1 227 2 56 7 269 1 181 52 108 4 142 2 271 4 272 4 235 1 117 1 237 1 322 1 280 2 188 1 281 1 240 2 33 2 75 4 196 1 246 1 199 1 78 1 124 2 204 8 
0 1 191 1 7 1 328 1 45 1 149 1 249 1 289 1 290 1 189 1 
194 1 159 1 
0 1 191 1 145 1 45 1 149 1 55 1 215 1 290 1 189 1 
168 1 302 1 
152 1 192 1 51 1 
0 1 143 1 110 1 294 1 209 1 45 1 61 1 149 1 189 1 191 1 7 1 135 1 328 1 12 1 198 2 102 1 289 1 290 1 
0 1 143 1 110 1 294 1 209 1 45 1 61 1 149 1 189 1 191 1 7 1 135 1 328 1 12 1 198 2 102 1 289 1 290 1 
0 1 143 1 110 1 294 1 209 1 45 1 61 1 149 1 189 1 191 1 7 1 135 1 328 1 12 1 198 2 102 1 289 1 290 1 
192 1 168 1 302 1 
192 1 168 1 302 1 
152 1 51 1 
152 1 192 1 51 1 
146 1 222 1 
0 1 43 1 257 1 208 2 209 1 45 1 218 2 137 1 222 1 53 2 102 1 104 1 178 1 110 1 314 1 146 1 61 1 114 2 149 1 321 1 189 1 191 1 194 1 244 2 198 1 159 1 290 1 
125 1 296 1 258 1 261 1 96 1 218 2 8 1 98 1 263 1 53 2 227 1 267 1 179 2 181 2 15 2 271 2 111 1 274 1 279 2 116 1 239 1 280 1 67 1 190 1 34 2 244 2 119 1 35 1 329 1 41 1 124 1 
182 1 111 1 296 1 258 1 279 1 48 1 170 1 172 1 138 1 139 1 329 1 179 1 79 1 15 1 
273 1 186 1 169 1 258 1 26 1 301 1 279 1 48 1 132 1 133 1 306 1 120 2 138 1 179 1 329 1 330 1 15 1 229 1 
273 1 186 1 169 1 258 1 26 1 301 1 279 2 48 1 132 1 133 1 92 1 306 1 120 2 138 1 329 1 179 2 330 1 15 2 229 1 
19 1 273 1 186 1 169 1 258 1 26 1 301 1 279 1 48 1 132 1 133 1 306 1 120 2 179 1 329 1 330 1 15 1 
63 1 
165 1 44 1 236 1 213 1 68 1 174 1 12 1 54 1 203 1 57 1 
211 2 319 1 262 5 91 2 95 2 97 2 70 10 307 5 264 2 101 5 12 5 161 1 203 5 204 2 57 5 
174 1 110 1 61 1 12 1 200 1 228 1 
165 1 296 1 258 1 46 2 129 1 86 1 213 2 3 1 50 2 172 1 54 2 139 1 228 2 179 4 15 4 57 2 110 3 182 2 144 1 111 1 61 3 236 2 279 4 187 1 324 1 200 4 288 2 329 1 203 2 
80 1 174 1 44 1 12 1 203 1 57 1 68 1 
165 1 110 1 61 1 236 1 213 1 171 1 174 1 175 1 70 1 307 1 12 2 54 1 157 1 200 1 228 1 203 1 57 1 
165 4 258 4 262 6 91 2 92 1 95 2 174 2 97 2 264 2 265 2 101 6 12 8 105 2 179 3 15 3 110 5 182 1 111 3 21 2 279 3 27 1 32 1 118 3 200 5 288 1 203 9 204 2 206 2 44 1 296 10 127 1 211 2 46 1 129 1 130 2 213 4 300 2 50 2 307 6 309 2 54 4 228 3 57 8 61 5 319 2 236 4 68 1 69 2 155 2 327 3 70 12 242 1 161 2 329 3 
165 1 142 1 108 1 236 1 213 1 262 1 70 2 307 1 75 1 99 1 12 1 101 1 54 1 203 1 57 1 
165 1 81 1 208 1 213 1 214 1 89 1 91 1 94 1 218 1 97 2 53 1 54 1 140 1 57 2 110 1 61 1 114 1 319 1 236 1 322 1 29 1 326 1 71 1 244 1 196 1 36 1 203 2 204 2 
257 1 208 2 125 1 296 1 83 1 258 1 85 1 214 2 261 1 98 1 218 3 263 1 53 3 227 1 179 1 181 1 15 1 271 2 182 1 111 1 114 2 279 1 150 1 280 1 29 1 190 1 286 1 327 1 244 2 329 1 291 1 124 1 
165 1 46 1 236 1 213 1 117 1 262 2 50 1 174 2 70 4 307 2 101 2 12 4 54 1 203 1 57 2 
7 1 173 1 146 1 149 1 189 1 
166 1 149 1 189 1 
166 1 149 1 189 1 
166 1 149 1 189 1 
149 1 47 1 189 1 
149 1 47 1 189 1 
149 1 47 1 189 1 
149 1 189 1 
0 1 45 1 
271 2 81 1 131 1 280 1 322 2 91 2 8 5 98 5 263 1 176 5 196 1 312 3 227 1 140 2 56 2 124 1 181 10 204 2 
271 2 131 1 280 1 95 1 8 2 263 1 176 1 227 1 56 1 124 1 204 1 181 2 
271 2 211 1 131 1 280 1 91 1 95 1 98 2 8 2 263 1 176 2 264 1 312 1 227 1 56 1 124 1 204 1 181 4 
271 6 234 1 233 1 235 1 131 1 280 3 322 1 98 2 8 1 263 3 176 2 312 1 227 3 140 1 56 1 181 3 124 3 
297 1 211 3 131 1 4 1 91 5 6 1 95 3 98 18 8 16 263 5 176 12 264 3 312 7 140 3 227 5 56 5 181 34 108 4 142 1 271 10 23 1 234 1 233 1 235 2 277 1 117 1 322 3 280 5 240 1 75 3 196 2 199 1 124 5 204 5 
271 4 235 1 117 1 280 2 322 1 91 1 4 1 98 4 8 4 263 2 176 3 196 1 199 1 312 2 227 2 140 1 56 1 204 1 181 8 124 2 
80 1 117 1 322 1 4 1 91 1 98 3 8 3 176 2 196 1 199 1 312 2 140 1 204 1 181 6 
271 2 211 1 277 1 280 1 91 1 95 1 98 2 8 2 263 1 176 2 264 1 312 1 227 1 56 1 124 1 204 1 181 4 
142 1 108 2 211 1 91 1 240 1 95 1 98 4 8 3 75 1 176 2 264 1 312 1 56 1 181 7 204 1 
211 2 4 1 91 3 95 2 8 11 98 12 263 2 176 9 264 2 312 5 140 2 227 2 56 4 181 23 108 2 271 4 62 1 234 1 235 2 117 1 322 2 280 2 240 1 33 1 75 2 196 1 199 1 204 3 124 2 
108 1 98 1 181 1 
8 1 75 1 181 1 
271 2 211 1 277 1 280 1 91 1 95 1 98 3 8 3 263 1 176 3 264 1 312 2 227 1 161 1 56 1 124 1 181 6 204 1 
254 1 211 2 131 1 303 1 91 2 95 2 98 6 8 6 263 1 99 1 176 2 264 2 312 1 227 1 56 1 269 1 181 12 108 1 142 1 271 2 280 1 75 1 78 1 124 1 204 2 
322 1 91 1 8 3 98 3 176 2 196 1 312 1 140 1 56 1 204 1 181 6 
271 2 234 1 235 1 322 1 280 1 4 1 8 1 98 2 263 1 176 2 199 1 312 1 140 1 227 1 56 1 181 3 124 1 
131 1 91 1 4 1 98 4 8 4 263 1 99 1 176 2 312 2 227 1 140 1 181 8 108 1 142 1 271 2 117 1 280 1 322 1 75 1 196 1 199 1 204 1 124 1 
211 1 131 1 91 1 4 1 95 1 98 5 8 6 263 2 99 1 176 3 312 2 140 1 227 2 56 1 181 11 108 2 142 1 271 4 277 1 117 1 322 1 280 2 240 1 75 1 196 1 199 1 124 2 204 2 
254 1 211 2 131 1 303 1 4 1 91 3 95 2 98 10 8 9 263 3 99 1 176 4 264 2 312 3 140 1 227 3 56 1 269 1 181 19 108 1 142 1 271 6 235 1 277 1 117 1 322 1 280 3 75 1 196 1 199 1 78 1 124 3 204 3 
254 1 211 2 131 1 303 1 4 1 91 2 95 2 98 7 8 10 263 3 99 1 176 5 264 1 312 3 140 1 227 3 56 2 269 1 181 17 108 1 142 1 271 6 235 1 277 1 117 1 322 1 280 3 75 1 196 1 199 1 78 1 124 3 204 3 
131 1 91 1 4 1 98 4 8 4 263 1 99 1 176 2 312 2 227 1 140 1 181 8 108 1 142 1 271 2 117 1 280 1 322 1 75 1 196 1 199 1 204 1 124 1 
254 1 211 2 131 1 303 1 91 2 95 2 98 6 8 6 263 1 99 1 176 2 264 2 312 1 227 1 56 1 269 1 181 12 108 1 142 1 271 2 280 1 75 1 78 1 124 1 204 2 
254 1 211 2 131 1 303 1 4 1 91 2 95 2 98 8 8 10 263 4 99 1 176 5 264 1 312 3 140 1 227 4 56 2 269 1 181 18 108 1 142 1 271 8 235 2 277 1 117 1 322 1 280 4 75 1 196 1 199 1 78 1 124 4 204 3 
254 1 211 3 131 1 303 1 91 2 95 3 98 7 8 9 263 4 99 1 176 6 264 2 312 3 227 4 56 3 269 1 181 16 108 1 142 1 271 8 233 1 235 2 280 4 75 1 78 1 124 4 204 3 
322 3 91 1 4 2 98 4 8 3 176 6 196 1 199 1 312 3 140 3 56 3 181 7 204 1 
254 1 211 2 131 1 303 1 4 1 91 2 95 2 98 8 8 10 263 4 99 1 176 4 264 1 312 3 140 1 227 4 56 1 269 1 181 18 108 1 142 1 271 8 233 1 235 2 117 1 322 1 280 4 75 1 196 1 199 1 78 1 124 4 204 3 
218 1 2 1 257 1 244 1 53 1 76 1 313 1 
109 1 2 1 257 1 275 1 260 1 259 1 218 1 244 1 38 1 53 1 76 1 313 1 
182 1 111 1 296 1 258 1 279 4 172 1 92 1 221 1 139 1 40 1 179 4 329 1 15 4 
111 1 316 1 295 1 296 1 258 2 299 1 279 2 327 1 287 1 288 1 179 2 106 1 329 1 15 2 
306 1 182 1 273 1 120 1 258 1 26 1 279 1 329 1 179 1 15 1 
111 1 296 1 258 1 279 2 301 1 92 1 119 1 179 2 267 1 329 1 15 2 
182 1 111 2 296 3 258 2 279 5 172 1 92 1 119 1 245 1 139 1 40 1 288 1 202 1 179 5 329 2 15 4 
58 1 182 1 111 2 296 3 258 2 279 5 172 1 92 1 119 1 245 1 139 1 40 1 288 1 179 5 329 2 15 4 
80 1 182 1 111 1 296 1 258 1 139 1 279 1 329 1 179 1 172 1 15 1 
182 1 257 1 208 1 111 1 296 1 114 1 83 1 258 1 279 1 134 1 218 2 327 1 286 1 244 1 53 2 179 1 329 1 15 1 
1 1 257 1 208 1 296 3 83 1 258 1 300 1 134 1 218 2 309 1 53 2 223 1 179 1 15 1 111 2 114 2 279 1 286 1 327 2 326 1 244 2 288 1 329 1 
1 1 256 1 257 1 208 1 296 3 258 1 300 1 134 1 218 2 221 1 309 1 53 2 223 1 179 2 15 2 111 2 114 2 279 2 286 1 327 2 326 1 244 2 288 1 329 1 
206 1 296 4 258 1 130 1 300 1 174 1 221 1 309 1 12 1 179 3 141 1 15 3 110 2 182 1 111 1 61 2 24 1 279 3 118 1 327 1 200 1 288 1 329 1 
206 1 110 2 182 1 111 1 21 1 296 4 61 2 258 1 130 1 300 1 279 3 174 1 327 1 118 1 221 1 309 1 12 1 200 1 288 1 179 3 329 1 15 3 
113 1 258 1 279 1 329 1 179 1 15 1 
182 2 20 1 111 2 296 3 127 1 258 3 301 1 279 6 92 1 327 1 34 1 245 1 119 1 287 1 202 1 179 6 106 1 329 2 163 1 15 5 
257 2 83 1 258 1 85 1 4 1 91 1 90 1 92 1 8 3 98 3 263 2 176 2 179 1 15 1 181 6 270 1 271 4 111 1 114 1 276 1 279 1 117 1 280 2 190 2 286 1 196 1 199 1 41 1 124 2 204 1 208 1 125 2 296 1 128 1 134 1 218 2 53 2 312 2 227 2 140 1 59 1 150 1 239 1 322 1 327 1 244 1 329 1 
165 2 206 1 44 1 296 2 129 1 130 1 213 2 174 1 265 1 12 1 54 2 228 1 179 1 105 1 57 1 15 1 110 3 314 1 182 1 21 1 61 3 236 2 279 1 68 1 155 1 118 1 200 2 203 1 
111 1 296 2 113 1 127 1 258 2 130 1 279 2 92 1 327 1 242 1 179 2 329 1 15 2 
182 1 256 1 257 1 208 1 111 1 296 1 114 1 258 1 279 1 134 1 218 2 327 1 286 1 244 1 53 2 179 1 329 1 15 1 
20 1 111 1 296 1 127 1 258 2 279 1 327 1 287 1 288 1 179 1 106 1 329 1 15 1 
305 1 257 1 247 1 311 1 65 1 
206 1 1 1 207 1 314 1 110 2 257 1 61 2 320 1 65 2 93 1 174 1 305 2 326 1 12 1 247 2 223 1 311 1 13 1 162 1 
218 1 244 1 274 1 53 1 247 1 311 1 116 1 65 1 67 1 
207 1 311 1 162 1 

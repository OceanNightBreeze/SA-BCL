#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 67 171 252 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 67 171 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (257,315) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 67 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 67 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 67 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 67 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 67 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 67 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 67 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint; | RETURN | 4885 | return null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 3 218 2 48 1 183 2 156 4 184 1 186 2 322 1 135 1 324 2 326 1 347 1 119 2 139 9 268 1 332 6 351 9 281 1 284 2 205 1 63 1 231 1 88 1 145 1 177 2 69 1 180 1 70 5 
0 3 218 2 48 1 183 2 156 4 184 1 186 2 322 1 135 1 324 2 326 1 347 1 119 2 139 9 268 1 332 6 351 9 281 1 284 2 205 1 63 1 231 1 88 1 145 1 177 2 69 1 180 1 70 5 
0 4 218 2 48 1 183 2 156 5 184 1 186 2 322 1 135 1 324 2 326 1 347 1 119 2 139 10 268 1 332 7 351 10 281 1 284 2 205 1 63 1 231 1 88 1 145 1 177 2 69 1 180 1 70 6 
0 2 218 2 48 1 183 2 156 3 184 1 186 1 322 1 324 2 326 1 347 1 119 2 139 7 268 1 332 4 351 7 281 1 284 2 205 1 63 1 231 1 88 1 145 1 177 2 69 1 180 1 70 4 
0 1 139 4 218 1 332 3 351 4 281 1 48 1 183 1 156 2 184 1 284 1 186 2 135 1 347 1 177 1 119 1 69 1 70 3 
139 2 22 1 218 1 351 2 48 1 238 1 183 1 184 1 284 1 205 1 109 1 324 1 347 1 177 1 70 1 180 1 
0 3 218 1 48 1 156 4 183 2 184 1 186 2 73 1 324 1 135 1 347 1 119 1 139 9 332 7 83 1 351 9 281 1 284 2 231 1 88 1 145 1 177 1 69 1 70 5 
0 3 218 1 48 1 156 4 183 2 184 1 186 2 73 1 324 1 135 1 347 1 119 1 139 9 332 7 83 1 351 9 281 1 284 2 231 1 88 1 145 1 177 1 69 1 70 5 
231 1 324 1 0 1 139 3 332 1 351 3 48 1 347 1 156 1 183 2 284 2 184 1 70 2 
306 1 147 1 233 1 
122 1 
287 2 140 2 1 2 112 2 164 1 27 2 43 2 93 1 
97 1 24 1 1 2 27 2 154 1 155 1 6 1 342 1 187 1 295 1 133 1 53 1 220 1 164 1 33 1 166 1 327 2 245 1 9 2 10 2 300 1 278 1 121 1 60 1 140 3 280 1 38 1 202 2 61 2 353 1 335 1 338 1 287 2 112 2 43 3 93 1 316 1 
98 1 287 1 140 1 1 1 112 1 114 1 27 1 43 1 93 1 259 1 
290 1 330 1 98 1 140 1 198 1 111 1 112 1 41 1 223 1 147 1 43 1 255 1 233 1 59 1 
290 1 330 1 98 1 1 1 140 1 198 1 27 1 287 1 111 2 112 1 41 1 147 1 43 1 255 2 233 1 
286 1 111 1 265 1 255 1 313 1 
111 2 147 1 265 1 255 2 233 1 58 1 313 1 256 1 
111 1 255 1 313 1 
98 1 196 1 1 1 140 1 27 1 259 1 287 1 111 1 112 1 114 1 93 1 43 1 265 1 255 1 
147 1 
64 1 111 2 147 1 265 1 255 2 233 1 58 1 313 1 
128 1 225 1 50 1 37 1 240 1 175 1 333 2 313 2 32 1 111 5 80 1 147 1 265 2 255 5 44 2 233 1 192 2 58 1 302 1 
306 1 164 1 
140 2 1 1 142 1 27 1 108 1 287 1 112 2 164 2 43 2 
350 1 315 1 68 1 
19 1 297 1 98 1 164 1 
123 1 1 1 140 2 155 1 202 1 187 1 295 1 335 1 53 1 133 1 338 1 220 1 287 1 112 1 33 1 68 1 43 2 9 1 10 1 356 1 
123 2 1 4 140 5 26 1 142 1 27 1 174 1 100 1 287 4 112 5 164 1 223 1 43 5 356 1 
98 1 287 2 140 2 1 2 112 2 114 1 258 1 43 2 
123 1 287 3 140 3 1 3 112 3 164 1 27 1 43 3 
98 1 287 1 140 1 1 1 112 1 114 1 43 1 
98 1 287 1 140 1 1 1 112 1 27 1 142 1 43 1 108 1 
290 1 97 1 98 1 1 3 27 2 155 1 187 1 295 1 53 1 133 1 220 1 164 1 33 1 166 1 327 2 245 1 9 1 10 1 300 1 121 1 330 1 123 1 60 1 280 1 140 4 198 1 142 1 38 1 202 1 61 1 353 1 335 1 338 1 287 3 111 1 112 3 41 1 213 1 43 4 93 1 316 1 215 1 356 1 255 1 
123 1 287 1 140 2 1 1 112 2 164 1 223 1 43 2 100 1 
290 1 330 1 98 1 123 2 1 3 140 3 198 1 27 1 142 1 287 3 111 1 112 3 41 1 147 1 43 3 255 1 356 1 34 1 215 1 
123 1 287 2 140 2 1 2 112 2 315 1 27 1 142 1 68 1 43 2 
140 1 202 1 155 1 295 1 187 1 133 1 53 1 335 1 338 1 220 1 164 1 33 1 43 1 9 1 10 1 
140 1 202 1 155 1 295 1 187 1 133 1 53 1 335 1 164 1 33 1 43 1 92 1 9 1 10 1 137 1 
24 2 257 1 235 1 132 1 319 1 222 1 166 1 327 2 328 1 300 1 12 1 121 1 60 1 350 2 282 1 38 1 61 4 353 2 354 1 207 1 315 2 68 2 178 1 316 1 
98 1 287 1 140 1 1 1 41 1 112 1 258 1 43 1 
323 1 107 1 
323 1 107 1 
94 1 104 1 
94 1 104 1 
94 1 104 1 
323 1 107 1 144 1 
323 1 107 1 179 1 
323 2 107 2 131 1 293 1 94 1 104 1 
323 1 107 1 144 1 
323 1 107 1 144 1 
323 1 107 1 130 1 
323 1 107 1 130 1 
323 1 107 1 130 1 
323 1 252 1 117 1 107 1 111 1 171 1 67 1 255 1 181 1 
323 1 117 1 107 1 171 1 67 1 181 1 
218 1 177 1 119 1 
218 1 177 1 238 1 
96 1 102 1 218 3 119 2 238 1 343 1 
289 1 96 1 102 1 218 2 119 1 238 1 
96 1 102 2 218 2 119 1 238 1 
150 2 21 1 46 2 50 2 132 1 52 1 134 1 32 1 161 1 222 1 79 1 328 1 265 4 192 1 58 1 302 3 193 1 82 1 122 3 206 2 333 1 354 1 313 1 355 1 209 1 111 5 147 2 44 1 255 5 115 1 45 1 233 1 
128 1 150 6 21 3 50 6 51 1 132 3 157 1 52 2 294 1 134 2 32 1 54 1 222 3 79 4 328 3 265 7 192 2 58 1 302 8 169 1 82 3 122 9 250 1 206 6 333 2 354 3 313 6 334 5 286 5 111 9 147 5 255 9 44 2 233 1 45 1 
128 1 98 1 46 1 21 1 150 2 1 1 50 2 27 1 259 1 132 1 52 1 134 1 222 1 79 1 265 2 328 1 192 1 302 3 82 1 122 3 196 1 140 1 206 2 333 1 354 1 287 1 355 1 111 3 112 1 114 1 43 1 93 1 147 2 115 1 44 1 255 3 233 1 
128 1 98 1 46 2 1 1 50 4 132 2 52 1 134 1 328 2 192 1 196 1 140 1 250 1 206 4 333 1 287 1 111 4 112 1 114 1 147 3 115 1 255 4 21 2 150 4 27 1 259 1 157 1 79 2 222 2 265 3 302 5 169 1 122 6 82 2 354 2 355 1 43 1 93 1 44 1 233 1 
120 1 306 1 33 1 
219 1 33 1 
261 1 
33 1 187 1 335 1 
33 1 165 1 
33 1 335 1 
120 2 13 1 33 3 30 1 187 1 335 1 
81 1 129 1 24 4 182 1 227 1 2 1 118 2 132 1 61 7 29 1 353 3 354 1 229 1 40 1 269 1 178 2 12 3 
81 1 129 1 24 4 182 1 227 1 2 1 118 2 132 1 61 7 29 1 353 3 354 1 229 1 40 1 269 1 178 2 12 3 
81 1 129 1 24 4 182 1 2 1 227 1 118 2 132 1 241 1 61 7 29 1 353 3 354 1 229 1 40 1 269 1 178 2 12 3 
21 2 129 2 24 14 23 1 182 1 2 1 118 3 132 3 29 1 320 3 159 1 222 2 327 4 166 2 328 2 12 7 81 3 60 2 197 1 227 2 200 1 172 1 308 2 38 2 61 27 312 1 353 13 229 2 354 3 208 3 40 1 269 2 178 4 316 2 
129 1 24 5 2 1 182 1 118 2 132 1 166 2 327 4 57 1 12 4 81 1 60 2 227 1 308 1 38 2 61 9 353 4 354 1 229 1 40 1 314 1 269 1 178 3 316 2 
152 1 218 2 48 1 237 1 239 1 155 1 238 1 183 1 184 1 343 1 262 1 133 1 324 1 325 1 347 1 55 1 119 1 10 1 9 1 224 1 139 2 332 1 351 2 202 1 284 1 336 1 211 1 90 1 177 1 70 1 
152 1 218 2 236 1 48 1 237 1 239 1 155 1 238 1 183 1 7 1 343 1 133 1 324 1 325 1 347 1 55 1 119 1 10 1 9 1 224 1 139 3 332 2 351 3 202 1 284 1 211 1 90 1 177 1 270 1 70 1 
218 2 236 1 48 1 237 1 239 1 155 1 238 1 7 1 343 1 133 1 324 1 325 1 347 1 55 1 119 1 10 1 9 1 224 1 139 2 332 2 351 2 202 1 90 1 177 1 70 1 
288 1 72 1 155 1 239 2 183 1 295 1 133 1 324 2 33 1 55 2 277 1 10 1 9 1 139 1 199 1 351 1 202 1 284 1 335 1 87 1 90 2 270 1 271 1 
152 1 218 2 236 1 237 1 239 1 155 1 238 1 183 1 184 1 343 1 262 1 133 1 324 1 325 1 55 1 119 1 10 1 9 1 224 1 139 1 351 1 202 1 284 1 211 1 90 1 177 1 
217 1 
234 1 98 1 50 2 52 1 133 1 136 1 191 1 276 1 277 1 9 2 10 2 105 1 192 1 58 1 59 1 330 1 140 1 198 1 201 1 202 2 17 1 333 1 335 1 111 3 112 1 254 1 20 1 147 1 255 3 216 1 290 1 155 1 295 2 32 1 33 1 264 1 223 1 348 1 301 2 302 2 122 1 82 1 36 1 310 1 311 1 313 2 87 1 41 1 43 1 44 1 
290 1 330 1 98 1 140 1 198 1 201 1 203 1 310 1 313 2 191 1 64 1 111 3 41 1 112 1 276 1 264 1 223 1 43 1 255 3 301 2 58 1 59 1 
290 1 330 1 98 1 140 1 198 1 201 1 310 1 313 1 74 1 191 1 64 1 111 3 41 1 112 1 276 1 264 1 223 1 147 1 43 1 255 3 233 1 301 3 58 1 59 1 
290 1 98 1 74 1 189 1 191 1 276 1 264 1 223 1 301 3 58 1 59 1 330 1 140 1 198 1 201 1 203 1 310 1 313 2 64 1 111 3 112 1 41 1 43 1 147 1 255 3 233 1 
290 1 98 1 25 2 50 1 341 1 74 4 136 2 32 1 189 4 191 1 299 1 276 1 264 1 223 1 105 1 192 1 301 6 58 3 302 1 59 1 330 1 82 2 140 1 198 1 201 1 249 1 17 2 203 4 310 1 333 1 313 7 64 1 111 5 210 1 112 1 41 1 254 2 113 1 20 1 147 5 43 1 44 1 255 5 233 5 
290 1 98 1 50 1 136 1 32 1 191 1 276 1 264 1 223 1 105 1 192 1 301 2 302 1 59 1 330 1 122 1 82 1 140 1 198 1 201 1 17 1 310 1 311 1 333 1 111 2 112 1 41 1 254 1 20 1 147 1 43 1 44 1 255 2 
290 1 98 1 25 2 50 1 74 2 136 2 189 2 32 1 191 1 299 1 276 1 264 1 223 1 105 1 192 1 301 4 58 2 302 1 59 1 330 1 82 2 140 1 198 1 201 1 203 2 17 2 310 1 333 1 313 4 111 4 112 1 41 1 210 1 254 2 113 1 20 1 147 1 43 1 255 4 44 1 233 1 
290 1 98 1 25 2 50 1 74 2 136 2 189 2 32 1 191 1 299 1 276 1 264 1 223 1 105 1 192 1 301 4 58 2 302 1 59 1 330 1 82 2 140 1 198 1 201 1 203 2 17 2 310 1 333 1 313 4 111 4 112 1 41 1 210 1 254 2 113 1 20 1 147 1 43 1 255 4 44 1 233 1 
290 1 98 1 318 2 50 1 74 2 158 2 136 2 189 2 32 1 191 1 276 1 264 1 223 1 105 1 192 1 301 4 58 2 302 1 59 1 330 1 122 2 140 1 198 1 201 1 203 2 204 1 310 1 333 1 313 4 111 4 65 1 112 1 41 1 254 2 113 1 232 1 147 1 43 1 255 4 44 1 233 1 
290 1 98 1 25 2 50 1 341 1 74 3 136 2 32 1 189 3 191 1 299 1 276 1 264 1 223 1 105 1 192 1 301 5 58 2 302 1 59 1 330 1 82 2 140 1 198 1 201 1 17 2 203 3 310 1 333 1 313 5 111 4 210 1 112 1 41 1 254 2 113 1 20 1 147 1 43 1 44 1 255 4 233 1 
290 1 98 1 25 2 50 1 341 1 74 3 136 2 32 1 189 3 191 1 299 1 276 1 264 1 223 1 105 1 192 1 301 5 58 2 302 1 59 1 330 1 82 2 140 1 198 1 201 1 17 2 203 3 310 1 333 1 313 5 111 4 210 1 112 1 41 1 254 2 113 1 20 1 147 1 43 1 44 1 255 4 233 1 
98 1 50 1 318 2 136 2 189 2 191 1 276 1 105 1 192 1 58 2 59 1 330 1 140 1 198 1 201 1 204 1 203 2 333 1 111 4 112 1 254 2 147 1 255 4 290 1 74 2 158 2 32 1 264 1 223 1 301 4 302 1 122 2 310 1 311 1 313 4 41 1 43 1 44 1 233 1 
24 3 2 1 182 1 118 1 132 1 164 2 166 1 327 2 300 1 12 2 121 1 306 1 60 1 350 1 282 1 38 1 61 6 353 3 229 1 354 1 40 1 315 1 269 1 68 1 178 2 316 1 
97 1 21 2 24 8 4 1 132 1 274 1 320 3 342 1 321 1 159 1 160 1 164 1 222 1 166 2 327 4 328 2 12 2 300 1 81 1 121 2 60 2 350 11 38 2 61 14 353 6 354 2 208 3 315 4 178 1 68 11 316 2 148 1 358 1 
97 1 1 1 24 1 4 1 342 1 243 1 164 1 327 2 166 1 300 1 121 1 123 1 60 1 140 1 38 1 61 2 353 1 337 1 19 1 287 1 176 1 112 1 315 1 43 1 316 1 356 1 
97 1 1 1 236 1 182 1 2 1 4 1 132 3 187 2 133 2 53 2 188 2 327 6 10 3 9 3 328 2 12 8 138 1 60 3 140 3 280 2 202 3 61 20 335 2 338 2 251 2 287 1 112 1 68 7 21 2 24 10 118 1 155 2 342 1 295 1 220 2 164 2 33 2 222 2 166 3 300 3 303 1 81 4 121 3 123 1 226 1 350 7 38 3 353 10 229 1 354 3 125 2 40 1 126 2 315 7 269 1 178 4 43 3 316 3 356 1 
97 1 1 1 24 1 236 1 47 1 49 1 155 2 6 2 295 2 342 1 133 2 275 1 33 3 277 1 166 2 327 4 10 8 9 8 300 2 246 1 121 2 123 1 279 1 60 2 140 1 282 1 15 1 16 1 202 7 38 2 61 2 353 1 336 1 335 2 87 1 287 1 112 1 43 1 316 2 
21 1 1 1 24 1 27 1 4 1 132 1 222 1 166 1 327 2 328 1 12 1 300 1 168 1 121 1 60 1 140 1 350 1 142 1 38 1 61 3 353 2 354 1 287 1 112 1 315 1 178 1 68 1 43 1 316 1 
81 1 121 1 60 1 24 2 350 1 235 1 282 1 38 1 61 2 354 1 315 1 68 1 327 2 166 1 316 1 328 1 12 1 300 1 
121 1 60 1 350 1 282 1 38 1 132 1 319 1 61 2 353 2 315 1 222 1 178 1 68 1 327 2 166 1 316 1 12 1 300 1 
21 1 24 2 132 1 222 1 166 1 327 2 328 1 300 1 12 2 81 1 121 1 60 1 350 2 282 1 38 1 61 4 353 2 354 1 315 2 68 2 178 1 316 1 
81 1 246 1 121 1 60 1 24 2 350 1 235 1 38 1 61 2 354 1 315 1 68 1 327 2 166 1 316 1 328 1 12 1 300 1 
246 1 121 1 60 1 350 1 38 1 132 1 319 1 61 2 353 2 315 1 222 1 178 1 68 1 327 2 166 1 316 1 12 1 300 1 
21 1 24 2 132 1 222 1 166 1 327 2 328 1 300 1 12 2 246 1 81 1 121 1 60 1 350 2 38 1 61 4 353 2 354 1 315 2 68 2 178 1 316 1 
81 1 121 1 21 1 60 1 24 2 350 2 38 1 132 1 61 4 353 2 354 1 315 2 222 1 178 1 68 2 327 2 166 1 316 1 328 1 12 2 300 1 
97 1 24 1 155 1 342 1 187 1 295 1 53 1 133 1 220 1 164 1 33 1 327 2 166 1 10 1 9 1 300 1 121 1 60 1 280 1 140 1 202 1 38 1 61 2 353 1 335 1 338 1 43 1 316 1 
97 1 24 1 155 1 342 1 187 1 295 1 53 1 133 1 164 1 33 1 327 2 166 1 137 1 10 1 9 1 300 1 121 1 60 1 140 1 202 1 38 1 61 2 353 1 335 1 92 1 43 1 316 1 116 1 
21 1 24 2 4 1 132 1 222 1 166 1 327 2 328 1 300 1 12 2 81 1 121 1 60 1 350 2 38 1 61 4 353 2 354 1 315 2 68 2 178 1 316 1 
21 1 24 2 155 1 132 1 187 1 53 1 133 1 188 1 220 1 33 1 222 1 327 2 166 1 328 1 10 1 9 1 12 2 300 1 81 1 121 1 60 1 280 1 140 1 350 2 202 1 38 1 61 4 353 2 354 1 336 1 335 1 338 1 315 2 178 1 68 2 43 1 316 1 
21 1 1 1 24 2 27 1 4 1 132 1 222 1 166 1 327 2 328 1 12 1 300 1 81 1 121 1 60 1 140 1 350 1 142 1 38 1 61 3 353 1 354 1 287 1 112 1 315 1 212 1 43 1 68 1 316 1 
2 1 182 1 132 4 320 3 327 8 328 3 57 1 12 7 331 1 60 4 248 1 141 1 61 37 208 3 146 1 214 1 149 2 21 3 24 19 153 1 118 1 260 1 296 1 159 3 263 1 222 3 166 4 81 4 35 4 308 2 38 4 84 1 352 1 353 18 354 4 229 1 89 1 40 1 269 1 178 3 316 4 95 1 
2 1 182 1 132 3 320 3 327 8 328 3 57 1 12 8 331 1 60 4 248 1 141 1 61 35 208 3 146 1 214 1 149 2 21 3 24 19 153 1 118 1 260 1 296 1 159 3 263 1 222 2 166 4 81 4 35 4 308 2 38 4 84 1 352 1 353 16 354 4 229 1 89 1 40 1 269 1 178 4 316 4 95 1 
149 1 21 3 24 17 182 1 2 1 153 1 118 1 132 4 260 1 320 2 296 1 159 2 263 1 222 3 166 2 327 4 57 1 328 3 12 7 81 4 331 1 35 4 60 2 248 1 141 1 308 1 38 2 84 1 61 32 352 1 353 15 229 1 354 4 208 2 89 1 40 1 269 1 178 3 214 1 316 2 
2 1 182 1 132 4 320 2 327 8 328 4 57 1 12 10 331 1 60 4 248 1 141 2 61 37 208 2 146 1 214 1 149 1 21 4 24 20 153 1 118 1 260 1 296 1 77 1 159 2 263 1 222 3 166 4 81 5 35 4 308 2 38 4 84 1 352 1 353 17 354 5 229 1 89 1 40 1 269 1 178 5 316 4 
149 2 21 3 24 13 153 1 132 2 260 1 320 2 296 1 159 2 263 1 222 2 166 2 327 4 57 1 328 3 12 2 81 1 35 3 331 1 60 2 248 1 141 1 308 1 38 2 84 1 61 23 352 1 353 10 354 3 208 2 89 2 178 1 214 1 316 2 
97 1 24 1 47 1 49 1 4 1 155 1 6 2 342 1 133 1 76 1 33 1 244 1 327 2 166 1 10 2 9 2 300 1 329 1 121 1 60 1 140 2 38 1 202 2 124 1 61 2 86 1 353 1 335 1 112 2 43 2 316 1 
218 2 273 1 152 1 236 1 237 1 238 1 155 1 202 2 242 1 343 1 133 1 336 1 253 1 177 1 55 1 119 1 9 2 10 2 224 1 
218 2 273 1 152 1 236 1 237 1 238 1 202 1 155 1 18 1 343 1 133 1 177 1 55 1 119 1 9 1 10 1 224 1 
288 1 155 1 202 1 85 1 295 1 133 1 335 1 87 1 253 1 33 1 55 1 277 1 9 1 10 1 
218 2 273 1 152 1 236 1 237 1 238 1 155 1 202 1 242 1 343 1 133 1 253 1 177 1 55 1 119 1 9 1 10 1 224 1 
71 1 
306 1 50 1 80 1 147 1 233 1 175 1 302 1 
122 1 82 1 50 1 17 1 333 1 32 1 20 1 147 1 44 1 192 1 302 1 
234 1 317 2 3 2 50 7 132 2 52 2 187 1 133 1 56 1 9 1 10 1 328 2 192 3 58 3 330 2 13 1 283 2 202 1 206 6 333 3 335 1 111 5 147 7 255 5 340 2 150 6 21 2 28 1 155 2 295 1 219 3 32 3 162 1 33 6 222 2 302 8 120 2 122 12 82 6 173 2 313 5 354 2 126 2 42 2 44 3 233 1 
150 5 21 2 317 1 153 1 50 4 132 2 260 1 320 1 296 1 159 1 32 1 222 2 328 2 192 1 302 6 122 6 82 3 84 1 352 1 206 5 333 1 354 2 208 1 147 3 44 1 
98 1 317 2 1 1 182 1 50 2 27 1 132 1 259 1 32 1 345 1 192 1 302 2 196 1 140 1 333 1 229 1 354 2 110 1 287 1 111 1 210 1 112 1 114 1 269 1 43 1 93 1 44 1 255 1 
97 1 1 2 27 2 155 1 295 1 187 1 133 1 53 1 220 1 164 1 33 1 166 1 327 2 10 1 9 1 245 1 300 1 121 1 60 1 140 3 280 1 38 1 202 1 61 1 353 1 335 1 338 1 287 2 112 2 43 3 93 1 316 1 
234 1 82 2 122 4 150 2 50 2 118 1 52 1 206 2 333 1 32 1 147 4 44 1 192 1 233 2 302 1 
50 1 175 1 333 1 32 1 80 1 147 1 44 1 192 1 233 1 302 1 
21 1 150 2 122 3 82 1 50 2 132 1 206 2 354 1 222 1 147 1 328 1 302 2 
111 1 147 1 255 1 233 1 58 1 313 1 
128 1 234 2 50 2 155 1 52 2 344 1 295 2 133 1 298 2 32 1 78 1 33 1 277 1 10 4 9 4 348 1 192 2 58 2 302 2 305 1 202 4 333 2 313 4 335 1 87 1 111 3 44 2 255 3 216 1 
67 1 181 1 
67 1 181 1 
67 1 181 1 
67 1 181 1 
67 1 181 1 
67 1 181 1 
67 1 181 1 
67 1 181 1 
323 1 107 1 
81 1 60 2 24 4 182 1 2 1 308 1 118 1 38 2 132 1 61 8 353 4 354 1 229 1 40 1 269 1 178 2 327 4 166 2 316 2 12 3 
40 1 306 1 24 3 182 1 2 1 118 1 269 1 132 1 178 2 61 6 12 2 353 3 354 1 229 1 
81 1 21 1 60 1 24 2 38 1 132 1 61 4 353 2 354 1 101 1 222 1 178 1 327 2 166 1 316 1 328 1 12 2 
208 1 159 1 24 1 61 2 320 1 353 1 
21 2 24 11 182 1 2 1 118 1 132 3 274 1 320 2 321 1 222 2 327 4 166 2 328 2 12 9 81 4 60 2 308 2 38 2 61 23 353 12 312 1 229 2 354 3 208 2 40 1 269 2 178 5 316 2 358 1 
61 1 320 1 353 1 
208 1 24 1 61 1 
81 1 21 1 60 1 24 3 38 1 132 1 61 6 353 3 354 1 101 1 126 1 222 1 166 1 327 2 178 2 316 1 328 1 12 3 
21 2 24 6 153 1 132 2 260 1 320 1 296 1 159 1 222 2 166 1 327 2 57 1 328 2 12 2 81 1 60 1 38 1 84 1 61 12 352 1 353 6 354 2 208 1 178 1 316 1 
81 1 24 3 182 1 132 1 61 6 353 3 354 1 229 1 269 1 178 1 12 2 
81 1 60 1 24 1 2 1 308 1 38 1 61 3 312 1 353 2 229 1 40 1 269 1 178 1 327 2 166 1 316 1 12 2 
24 4 2 1 182 1 118 1 132 1 320 1 296 1 159 1 166 1 327 2 57 1 12 2 60 1 38 1 61 8 353 4 354 1 229 1 208 1 40 1 269 1 178 2 316 1 
21 2 24 7 153 1 260 1 320 1 296 1 159 1 101 1 166 4 327 8 57 1 328 2 12 3 81 2 60 4 308 2 38 4 84 1 61 10 352 1 353 3 354 2 208 1 178 1 316 4 
21 2 24 6 153 1 132 2 260 1 320 1 296 1 159 1 101 1 222 2 166 2 327 4 57 1 328 2 12 2 81 1 60 2 38 2 84 1 61 12 352 1 353 6 354 2 208 1 178 1 316 2 
21 2 24 10 182 1 2 1 153 1 118 1 132 2 260 1 320 1 296 1 159 1 101 1 222 1 166 3 327 6 57 1 328 2 12 4 81 2 60 3 308 1 38 3 84 1 61 17 352 1 353 7 229 1 354 3 208 1 40 1 269 1 178 2 316 3 
24 4 2 1 182 1 118 1 132 1 320 1 296 1 159 1 166 1 327 2 57 1 12 2 60 1 38 1 61 8 353 4 354 1 229 1 208 1 40 1 269 1 178 2 316 1 
21 2 24 6 153 1 132 2 260 1 320 1 296 1 159 1 222 2 166 1 327 2 57 1 328 2 12 1 81 1 60 1 38 1 84 1 61 12 352 1 353 6 354 2 208 1 316 1 
21 2 24 7 153 1 132 1 260 1 320 1 296 1 159 1 101 1 222 1 166 3 327 6 57 1 328 2 12 2 81 1 60 3 308 1 38 3 84 1 61 11 352 1 353 4 354 2 208 1 178 1 316 3 
21 3 24 9 153 1 132 2 260 1 320 1 296 1 159 1 222 2 166 4 327 8 57 1 328 3 12 6 81 3 60 4 308 2 38 4 84 1 61 16 352 1 353 7 354 3 208 1 146 1 178 3 316 4 
81 3 24 3 2 2 182 1 132 1 61 7 353 4 229 3 354 1 40 1 269 3 178 3 12 6 
21 2 24 10 182 1 2 1 153 1 118 1 132 2 260 1 320 1 296 1 159 1 222 1 166 4 327 8 57 1 328 2 12 5 81 1 60 4 308 2 38 4 84 1 61 18 352 1 353 8 229 1 354 3 208 1 40 1 269 1 146 1 178 4 316 4 
81 2 60 1 24 5 182 1 38 1 132 2 61 10 353 5 229 2 354 2 345 1 269 2 166 1 327 2 178 3 316 1 57 1 12 5 
81 1 60 1 24 2 38 1 61 2 354 1 327 2 166 1 57 1 316 1 328 1 12 1 
81 1 21 1 60 1 24 2 38 1 132 1 61 4 353 2 354 1 222 1 178 1 327 2 166 1 57 1 316 1 328 1 12 2 
81 1 60 3 24 1 308 1 38 3 61 3 312 1 353 2 229 1 269 1 146 1 327 6 166 3 178 1 57 1 316 3 12 2 
21 2 24 15 23 1 182 2 2 1 118 1 132 4 320 3 159 1 101 1 222 2 166 5 327 10 57 1 328 2 12 9 81 4 60 5 308 2 172 1 200 1 38 5 61 31 312 1 353 16 229 3 354 4 208 3 40 1 269 3 178 5 146 1 316 5 
190 1 140 1 112 1 164 1 223 1 43 1 100 1 
291 1 267 1 140 1 143 1 185 1 100 1 190 1 66 1 112 1 164 1 223 1 43 1 
87 1 306 1 33 1 277 1 155 1 202 1 10 1 9 1 295 1 133 1 335 1 
123 1 1 1 140 2 155 1 202 1 187 1 295 1 335 1 53 1 133 1 287 1 220 1 112 1 164 1 33 1 43 2 9 1 10 1 
290 1 98 1 1 1 155 1 187 2 133 1 53 1 298 1 220 1 164 1 33 3 165 1 10 1 9 1 170 1 123 1 140 2 202 1 335 2 287 2 112 2 41 1 43 2 
290 1 98 1 1 1 155 1 187 2 133 1 53 1 298 1 164 1 33 3 346 1 165 1 137 1 10 2 9 2 170 1 123 1 140 2 202 2 335 2 287 2 112 2 41 1 43 2 
155 1 187 1 295 1 133 1 219 1 298 1 33 4 346 1 221 1 165 1 10 3 9 3 170 1 120 1 330 1 202 3 313 1 335 1 111 2 339 1 147 1 255 2 233 1 
170 1 330 1 120 1 3 1 155 1 202 3 295 1 187 1 313 1 335 1 133 1 219 1 298 1 111 2 33 4 346 1 147 1 165 1 9 3 10 3 255 2 233 1 
275 1 155 1 202 1 10 1 9 1 133 1 
195 1 272 1 279 1 236 1 13 1 49 1 15 1 16 1 202 6 155 3 6 1 295 2 187 1 336 1 335 2 133 2 275 1 33 3 91 1 9 7 10 7 
24 3 1 1 182 1 2 1 118 1 4 1 155 1 132 1 187 1 53 1 133 1 188 1 220 1 164 2 33 1 327 4 166 2 9 1 10 1 12 2 300 2 329 1 121 2 123 1 60 2 140 2 280 1 350 1 38 2 202 1 61 6 353 3 354 1 229 1 335 1 336 1 125 1 338 1 40 1 287 1 112 1 315 1 269 1 68 1 178 2 43 2 316 2 
50 1 3 1 295 1 219 1 32 2 78 1 33 2 80 1 9 1 265 1 10 1 192 2 58 1 302 1 120 1 330 1 283 1 202 1 173 1 175 1 333 2 313 2 111 3 147 1 44 2 255 3 233 1 340 1 
120 1 13 1 202 2 155 2 187 1 336 1 335 1 133 1 275 1 33 2 56 1 9 2 10 2 
155 1 202 4 295 1 62 1 336 1 335 1 133 1 87 1 33 1 346 1 277 1 9 4 10 4 
272 1 226 1 309 1 202 2 155 2 187 1 335 1 133 1 298 1 163 1 33 1 91 1 9 2 10 2 
218 1 177 1 238 1 155 1 202 1 10 1 9 1 224 1 295 1 133 1 
236 1 33 1 49 1 244 1 155 1 202 2 10 2 9 2 133 1 335 1 336 1 
279 1 49 1 202 4 155 2 16 1 295 1 62 1 336 1 335 2 133 2 87 1 298 1 33 3 277 1 9 5 10 5 
49 1 202 4 228 1 155 2 16 1 295 1 62 1 336 1 335 2 133 2 87 1 298 1 33 3 277 1 9 5 10 5 
123 1 1 1 140 2 155 1 202 1 187 1 295 1 335 1 53 1 133 1 287 1 112 1 164 1 33 1 43 2 9 1 10 1 137 1 
195 1 272 1 13 1 202 1 155 2 187 1 335 1 133 1 298 1 33 1 91 1 9 1 10 1 
39 1 151 1 164 1 103 1 75 1 
290 1 330 1 98 1 349 1 247 1 151 2 198 1 75 1 39 2 111 2 41 1 164 1 147 1 265 1 103 2 255 2 266 1 215 1 233 1 
151 1 140 1 124 1 86 1 75 1 76 1 112 1 43 1 103 1 
247 1 266 1 75 1 
306 1 48 1 347 1 70 1 
139 1 351 1 48 1 347 1 183 1 284 1 70 1 
324 1 139 1 239 1 
139 3 351 3 48 1 183 1 184 1 284 1 285 1 347 1 8 1 70 1 180 2 357 1 
139 2 332 1 351 2 48 1 347 1 183 1 284 1 70 1 186 1 
139 1 218 1 351 1 177 1 119 1 156 1 183 1 69 1 284 1 184 1 70 1 
139 1 351 1 48 1 183 1 284 1 184 1 70 1 
139 1 351 1 48 2 347 1 183 1 284 1 184 1 
139 2 351 2 48 1 183 2 184 1 284 2 31 1 127 1 70 1 167 1 
88 1 0 1 139 3 332 2 145 1 351 3 48 1 347 1 156 1 183 1 284 1 184 1 70 2 
304 1 139 2 218 2 332 1 351 2 48 1 238 1 183 1 184 1 284 1 343 1 347 1 177 1 119 1 70 1 
135 1 0 1 139 4 332 2 351 4 48 1 347 1 156 1 183 2 284 2 184 1 70 2 186 1 
88 1 139 3 332 1 351 3 48 1 347 1 183 1 284 1 184 1 70 1 180 1 
0 1 156 1 70 1 106 1 
48 1 70 1 
139 1 351 1 48 1 347 1 183 1 284 1 184 1 70 1 
139 4 0 1 332 2 351 4 48 2 183 1 156 1 284 1 285 1 347 2 180 1 70 3 357 1 106 1 
139 2 332 1 351 2 292 1 48 1 183 1 184 1 284 1 73 1 347 1 70 1 11 1 
139 3 351 3 48 1 99 1 183 1 184 1 284 1 285 1 347 1 70 1 180 2 357 2 
14 1 307 2 5 1 70 2 
194 1 139 1 351 1 183 1 284 1 184 1 
88 1 139 2 332 1 351 2 48 1 347 1 183 1 284 1 184 1 70 1 
230 1 
139 1 351 1 48 1 347 1 183 1 284 1 184 1 70 1 

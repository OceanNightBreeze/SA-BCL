#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (41,53,140) (41,53,140) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 292 212 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 319 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 292 212 227 186 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 294 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 294 233 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 30 320 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
339 3 92 1 282 2 188 4 147 1 148 1 94 1 40 1 118 1 219 1 328 1 351 2 75 1 269 2 27 2 7 1 159 9 228 5 232 2 306 1 60 1 139 2 163 1 314 1 362 2 125 9 210 6 365 1 
339 3 92 1 282 2 188 4 147 1 148 1 94 1 40 1 118 1 219 1 328 1 351 2 75 1 269 2 27 2 7 1 159 9 228 5 232 2 306 1 60 1 139 2 163 1 314 1 362 2 125 9 210 6 365 1 
339 4 92 1 282 2 188 5 147 1 148 1 94 1 40 1 118 1 219 1 328 1 351 2 75 1 269 2 27 2 7 1 159 10 228 6 232 2 306 1 60 1 139 2 163 1 314 1 362 2 125 10 210 7 365 1 
339 2 92 1 282 2 188 3 147 1 148 1 94 1 40 1 118 1 328 1 351 2 75 1 269 2 27 2 7 1 159 7 228 4 232 2 306 1 60 1 139 1 163 1 314 1 362 2 125 7 210 4 365 1 
339 1 282 1 92 1 188 2 147 1 148 1 159 4 228 3 232 1 139 2 219 1 362 1 125 4 269 1 75 1 210 3 27 1 365 1 
92 1 282 1 147 1 228 1 159 2 83 1 306 1 362 1 361 1 328 1 125 2 351 1 269 1 187 1 27 1 365 1 
339 1 92 1 188 1 147 1 159 3 228 2 163 1 362 2 125 3 351 1 210 1 27 2 365 1 
339 3 188 4 92 1 282 1 147 1 148 1 118 1 349 1 219 1 351 1 75 1 269 1 27 2 7 1 274 1 159 9 228 5 232 1 139 2 163 1 362 2 125 9 210 7 365 1 
339 3 188 4 92 1 282 1 147 1 148 1 118 1 349 1 219 1 351 1 75 1 269 1 27 2 7 1 274 1 159 9 228 5 232 1 139 2 163 1 362 2 125 9 210 7 365 1 
318 1 58 1 276 1 
207 2 242 1 276 1 
194 2 238 2 10 1 180 2 12 1 68 2 123 2 3 2 
93 1 170 1 150 1 130 2 72 1 191 2 173 1 132 1 3 2 217 1 265 1 194 3 155 1 73 1 119 2 156 1 251 1 300 2 330 1 10 1 230 1 180 3 12 1 331 1 123 2 258 2 84 1 333 1 234 1 236 1 238 2 165 1 315 1 337 1 68 2 209 1 69 1 
154 1 308 1 194 1 238 1 180 1 12 1 298 1 68 1 123 1 3 1 
256 1 344 1 180 1 276 1 3 1 61 1 62 1 194 1 312 1 100 1 318 1 298 1 177 1 50 1 
344 2 180 1 123 1 276 1 3 1 61 1 62 1 194 1 100 2 312 1 238 1 318 1 68 1 298 1 50 1 
100 1 293 1 344 1 66 1 55 1 
100 2 106 1 293 1 344 2 318 1 66 1 272 1 276 1 
100 1 344 1 66 1 
127 1 344 1 12 1 180 1 123 1 3 1 154 1 308 1 194 1 100 1 238 1 293 1 298 1 68 1 
276 1 
100 2 313 1 106 1 293 1 344 2 318 1 66 1 276 1 
178 2 199 1 213 2 106 1 344 5 11 2 303 1 2 1 276 1 310 1 100 5 346 1 293 2 110 1 166 1 318 1 66 2 354 1 198 1 
10 1 58 1 
169 1 10 2 180 2 123 1 3 2 194 2 238 1 68 1 223 1 
235 1 325 1 43 1 
93 1 150 1 10 1 130 1 72 1 180 1 331 1 230 1 173 1 258 1 236 1 194 1 73 1 119 1 315 1 90 1 
93 1 283 1 150 1 72 1 130 1 230 1 180 2 331 1 173 1 123 1 258 1 3 1 235 1 236 1 194 2 73 1 119 1 238 1 278 1 315 1 
194 3 283 1 238 3 10 1 180 3 68 1 123 3 3 3 
308 1 194 1 238 1 180 1 298 1 123 1 3 1 
194 1 169 1 238 1 180 1 298 1 68 1 123 1 223 1 3 1 
93 1 283 1 170 1 150 1 72 1 344 1 130 1 191 2 173 1 132 1 3 3 217 1 265 1 44 1 194 4 73 1 100 1 119 1 298 1 251 1 300 1 50 1 223 1 330 1 10 1 230 1 331 1 180 4 12 1 123 3 258 1 61 1 236 1 62 1 312 1 238 3 278 1 165 1 315 1 337 1 68 2 209 1 145 1 69 1 
194 2 283 1 238 1 10 1 180 2 123 1 177 1 357 1 3 2 
283 2 344 1 180 3 123 3 276 1 3 3 61 1 62 1 194 3 100 1 312 1 238 3 278 1 68 1 298 1 157 1 223 1 50 1 145 1 
283 1 180 2 325 1 123 2 3 2 235 1 194 2 238 2 68 1 223 1 
93 1 150 1 10 1 130 1 72 1 180 1 331 1 230 1 173 1 258 1 236 1 194 1 73 1 119 1 315 1 
93 1 150 1 10 1 130 1 180 1 230 1 173 1 258 1 236 1 194 1 73 1 119 1 35 1 315 1 49 1 
170 1 129 1 191 2 132 1 325 1 43 1 25 1 292 1 221 1 251 1 300 3 356 1 6 1 330 1 78 1 302 1 203 1 84 1 235 1 65 1 165 1 337 2 143 1 209 1 
194 1 238 1 343 1 180 1 298 1 123 1 61 1 3 1 
283 2 10 1 180 5 123 4 3 5 194 5 238 4 278 1 68 1 355 1 177 1 144 1 357 1 223 1 
308 1 194 2 238 2 343 1 180 2 298 1 123 2 3 2 
53 1 116 1 
53 1 116 1 
41 1 192 1 
41 1 192 1 
41 1 192 1 
149 1 53 1 116 1 
140 1 53 1 116 1 
41 1 53 2 116 2 192 1 
149 1 53 1 116 1 
149 1 53 1 116 1 
14 1 53 1 116 1 
14 1 53 1 116 1 
14 1 53 1 116 1 
301 3 51 2 260 1 341 1 71 1 80 1 344 2 345 2 53 2 116 2 42 1 324 2 289 1 276 1 124 1 32 2 117 2 100 2 46 1 
344 1 345 1 116 1 324 1 288 1 289 1 3 2 194 2 100 1 196 1 5 1 352 1 301 1 51 1 9 1 10 1 53 1 180 2 123 2 305 1 182 1 140 1 32 1 238 2 
282 1 269 1 232 1 
282 1 361 1 269 1 
282 3 347 1 361 1 296 1 142 1 232 2 
282 2 347 1 34 1 361 1 296 1 232 1 
282 2 347 2 361 1 296 1 232 1 
212 1 213 1 129 1 344 5 249 1 2 1 100 5 292 1 293 4 5 1 352 1 354 3 198 1 101 1 178 1 106 1 160 1 11 1 29 1 203 1 276 1 182 1 207 1 316 1 208 2 143 1 66 1 318 1 89 1 111 1 126 1 
212 3 213 2 129 3 344 9 171 5 249 1 2 1 327 1 346 1 100 9 292 3 293 7 222 1 354 8 198 3 101 2 253 1 178 2 106 1 160 3 11 2 107 1 81 1 55 5 29 2 203 3 182 4 276 2 15 1 207 3 143 3 66 6 318 1 89 3 
212 1 213 1 129 1 344 3 100 3 346 1 293 2 292 1 354 3 101 1 198 1 178 1 160 1 11 1 29 1 203 1 276 2 182 1 207 2 316 1 208 1 318 1 143 1 242 1 89 1 126 1 
212 2 213 1 129 2 344 4 100 4 346 1 293 3 292 2 354 5 101 1 198 2 178 1 160 2 11 1 107 1 81 1 29 1 203 2 276 2 182 2 15 1 207 3 316 1 208 2 318 1 143 2 242 1 89 2 126 1 
85 1 315 1 58 1 
204 1 315 1 
134 1 
315 1 230 1 
85 2 150 1 315 3 230 1 152 1 326 1 
150 1 315 1 230 1 
315 1 56 1 
273 1 129 1 287 1 84 4 218 1 266 1 45 2 74 1 277 1 348 1 337 3 143 1 16 1 281 1 6 3 356 2 300 7 
273 1 129 1 287 1 84 4 218 1 266 1 45 2 74 1 277 1 348 1 337 3 143 1 16 1 281 1 6 3 356 2 300 7 
273 1 129 1 287 1 84 4 218 1 266 1 45 2 74 1 348 1 277 1 337 3 143 1 16 1 281 1 353 1 6 3 356 2 300 7 
212 3 170 1 129 4 0 1 191 2 287 2 218 1 193 1 266 2 45 3 74 2 348 1 292 3 251 1 176 1 76 1 300 28 356 4 6 6 273 2 330 1 231 1 203 3 84 13 334 4 277 2 205 1 164 3 165 1 337 15 16 1 143 4 281 1 18 1 
170 2 129 1 191 4 287 1 45 2 266 1 74 1 348 1 251 2 300 9 356 3 6 4 273 1 200 1 330 2 84 5 87 1 277 1 165 2 337 4 143 1 16 1 281 1 18 1 
92 1 340 1 282 2 147 1 130 1 172 1 22 1 247 1 173 1 23 1 119 1 268 1 351 1 269 1 27 1 228 1 159 2 232 1 258 1 304 1 236 1 362 1 361 1 125 2 363 1 142 1 240 1 67 1 210 1 365 1 
340 1 282 2 147 1 115 1 130 1 172 1 173 1 23 1 119 1 268 1 351 1 269 1 26 1 27 1 358 1 228 1 159 3 232 1 258 1 304 1 236 1 362 1 361 1 125 3 142 1 363 1 240 1 67 1 210 2 365 1 
340 1 282 2 147 1 130 1 172 1 173 1 119 1 268 1 351 1 269 1 26 1 358 1 228 1 159 2 232 1 258 1 304 1 236 1 361 1 125 2 142 1 240 1 67 1 210 2 365 1 
93 1 115 1 130 1 172 2 248 1 173 1 24 1 133 1 119 1 268 2 351 2 220 1 27 1 159 1 230 1 258 1 236 1 108 1 335 1 362 1 125 1 315 1 240 2 
92 1 340 1 282 2 130 1 172 1 247 1 173 1 23 1 119 1 268 1 351 1 269 1 26 1 27 1 159 1 232 1 258 1 304 1 236 1 362 1 361 1 125 1 363 1 142 1 240 1 67 1 
63 1 
93 2 321 1 213 1 130 2 173 1 2 1 3 1 100 5 47 1 177 1 50 1 103 2 226 1 178 1 52 2 8 2 106 3 11 1 54 1 230 1 180 1 276 2 61 1 236 1 62 1 335 1 66 6 242 2 112 1 146 2 20 1 70 2 342 1 344 5 190 1 248 1 153 1 194 1 119 2 298 1 354 2 198 2 257 1 256 1 82 2 29 1 258 2 161 1 312 1 207 2 315 1 364 4 318 1 167 2 317 1 
20 1 321 1 342 1 257 1 256 1 106 1 344 3 180 1 82 1 61 1 3 1 62 1 194 1 312 1 100 3 313 1 364 2 66 2 47 1 298 1 177 1 50 1 
20 1 146 1 342 1 321 1 344 3 3 1 194 1 100 3 298 1 47 1 177 1 50 1 256 1 257 1 106 1 180 1 61 1 276 1 62 1 312 1 313 1 364 3 66 1 318 1 
146 1 52 1 20 1 321 1 342 1 257 1 256 1 106 1 344 3 180 1 82 1 276 1 61 1 3 1 62 1 194 1 312 1 100 3 313 1 364 3 318 1 66 2 47 1 298 1 177 1 50 1 
146 4 20 1 70 2 342 1 321 1 213 1 344 5 2 1 3 1 194 1 4 1 100 5 270 1 298 1 47 1 354 1 120 1 198 1 177 1 50 1 225 1 103 2 178 1 8 2 52 4 256 1 257 1 106 3 11 1 54 1 180 1 82 4 161 1 276 5 61 1 62 1 312 1 313 1 364 6 167 2 241 1 318 5 66 7 242 2 
321 1 213 1 2 1 3 1 100 4 47 1 177 1 50 1 178 1 103 2 8 2 52 2 106 2 11 1 180 1 54 1 61 1 276 2 62 1 66 4 242 2 20 1 146 2 342 1 70 2 344 4 190 1 194 1 298 1 354 1 198 1 257 1 256 1 82 2 161 1 312 1 207 2 364 4 167 2 318 1 
146 2 20 1 70 2 342 1 321 1 213 1 344 4 2 1 3 1 194 1 100 4 270 1 298 1 47 1 354 1 198 1 177 1 50 1 225 1 103 2 178 1 52 2 8 2 256 1 257 1 106 2 11 1 54 1 180 1 82 2 161 1 276 1 61 1 62 1 312 1 364 4 318 1 66 4 167 2 241 1 242 2 
146 2 20 1 70 2 342 1 321 1 213 1 344 4 2 1 3 1 194 1 100 4 270 1 298 1 47 1 354 1 198 1 177 1 50 1 225 1 103 2 178 1 52 2 8 2 256 1 257 1 106 2 11 1 54 1 180 1 82 2 161 1 276 1 61 1 62 1 312 1 364 4 318 1 66 4 167 2 241 1 242 2 
146 2 20 1 70 2 342 1 321 1 213 1 344 4 1 1 214 2 2 1 3 1 194 1 100 4 298 1 47 1 354 1 198 1 177 1 50 1 178 1 52 2 256 1 257 1 106 2 11 1 54 1 180 1 82 2 276 1 61 1 31 1 62 1 64 1 312 1 207 2 364 4 318 1 66 4 167 2 241 1 91 2 
20 1 146 3 70 2 342 1 321 1 213 1 344 4 2 1 3 1 194 1 100 4 270 1 298 1 47 1 354 1 120 1 198 1 177 1 50 1 225 1 103 2 178 1 8 2 52 3 256 1 257 1 106 2 11 1 54 1 180 1 82 3 161 1 276 1 61 1 62 1 312 1 364 5 318 1 167 2 241 1 66 5 242 2 
20 1 146 3 70 2 342 1 321 1 213 1 344 4 2 1 3 1 194 1 100 4 270 1 298 1 47 1 354 1 120 1 198 1 177 1 50 1 225 1 103 2 178 1 8 2 52 3 256 1 257 1 106 2 11 1 54 1 180 1 82 3 161 1 276 1 61 1 62 1 312 1 364 5 318 1 167 2 241 1 66 5 242 2 
321 1 213 1 1 1 214 2 2 1 3 1 100 4 47 1 177 1 50 1 178 1 52 2 106 2 11 1 180 1 54 1 61 1 276 1 62 1 66 4 20 1 146 2 342 1 70 2 344 4 190 1 194 1 298 1 354 1 198 1 257 1 256 1 82 2 312 1 207 2 364 4 167 2 318 1 91 2 
170 1 129 1 191 2 325 1 132 1 43 1 266 1 45 1 74 1 348 1 251 1 356 2 6 2 300 6 330 1 10 2 302 1 58 1 84 3 235 1 165 1 337 3 16 1 143 1 209 1 281 1 
212 2 170 2 129 2 191 4 132 1 325 2 43 10 217 1 292 2 251 2 176 1 6 1 356 1 300 14 330 2 10 1 231 1 202 1 13 1 332 1 203 2 84 6 234 1 334 3 235 10 360 1 164 3 165 2 337 8 143 2 259 1 209 2 
93 1 283 1 150 1 170 1 72 1 130 1 131 1 191 2 173 1 325 1 132 1 3 1 217 1 194 2 73 1 119 1 295 1 251 1 300 2 330 1 10 1 230 1 331 1 180 2 181 1 258 1 123 1 332 1 84 1 236 1 234 1 238 1 278 1 315 1 165 1 337 1 209 1 90 1 
93 1 212 2 170 3 129 3 130 1 173 2 132 3 325 5 43 5 3 1 174 1 217 1 265 2 45 1 266 1 135 2 6 4 330 3 105 1 10 2 180 3 331 2 230 2 332 1 234 1 236 2 235 5 238 1 278 1 337 10 16 1 143 3 281 1 283 1 150 2 285 2 72 2 191 6 194 3 73 2 74 1 348 1 119 1 292 2 251 3 300 18 356 4 258 1 123 1 203 2 84 8 165 3 206 2 315 2 209 3 319 2 
93 2 283 1 170 2 114 1 286 1 130 8 22 1 191 4 173 2 248 1 132 2 3 1 217 1 194 1 119 7 251 2 26 1 271 1 300 2 330 2 121 1 302 1 180 1 230 2 57 1 123 1 258 8 30 1 84 1 333 2 236 2 234 1 335 1 238 1 185 1 315 3 165 2 337 1 209 2 
212 1 330 1 170 1 180 1 191 2 132 1 123 1 332 1 84 2 3 1 194 1 250 1 238 1 292 1 165 1 143 1 68 1 209 1 251 1 300 2 223 1 
330 1 170 1 78 1 302 1 191 2 132 1 84 1 292 1 165 1 143 1 209 1 251 1 300 1 
330 1 170 1 129 1 302 1 191 2 325 1 132 1 203 1 43 1 235 1 25 1 165 1 337 2 209 1 251 1 6 1 356 1 300 2 
212 1 170 1 129 1 191 2 132 1 325 1 43 1 292 1 251 1 300 3 356 1 6 1 330 1 302 1 203 1 84 1 235 1 165 1 337 2 143 1 209 1 
330 1 170 1 78 1 286 1 191 2 132 1 84 1 292 1 165 1 143 1 209 1 251 1 300 1 
330 1 170 1 286 1 129 1 191 2 325 1 132 1 203 1 43 1 235 1 25 1 165 1 337 2 209 1 251 1 6 1 356 1 300 2 
212 1 170 1 286 1 129 1 191 2 132 1 325 1 43 1 292 1 251 1 300 3 356 1 6 1 330 1 203 1 84 1 235 1 165 1 337 2 143 1 209 1 
212 1 170 1 129 1 191 2 132 1 325 1 43 1 292 1 251 1 300 3 356 1 6 1 330 1 203 1 84 1 235 1 165 1 337 2 143 1 209 1 
93 1 150 1 170 1 72 1 130 1 191 2 173 1 132 1 265 1 217 1 194 1 73 1 119 1 251 1 300 2 330 1 10 1 230 1 331 1 180 1 258 1 84 1 234 1 236 1 315 1 165 1 337 1 209 1 
93 1 150 1 170 1 130 1 191 2 173 1 132 1 217 1 194 1 73 1 119 1 350 1 251 1 49 1 300 2 330 1 10 1 230 1 180 1 258 1 84 1 234 1 236 1 35 1 315 1 165 1 337 1 209 1 
212 1 170 1 129 1 191 2 132 1 325 1 43 1 292 1 251 1 300 3 356 1 6 1 330 1 332 1 203 1 84 1 235 1 165 1 337 2 143 1 209 1 
212 1 150 1 170 1 129 1 72 1 130 1 22 1 191 2 173 1 325 1 132 1 43 1 265 1 194 1 73 1 119 1 292 1 251 1 6 1 356 1 300 3 330 1 331 1 230 1 180 1 258 1 203 1 84 1 235 1 236 1 206 1 315 1 165 1 337 2 143 1 209 1 
212 1 170 1 129 1 191 2 132 1 3 1 194 1 292 1 251 1 300 2 223 1 330 1 180 1 123 1 332 1 203 1 84 1 184 1 238 1 165 1 337 1 68 1 143 1 209 1 
212 2 170 2 95 1 129 2 151 1 322 1 191 4 292 2 136 1 137 1 158 1 251 2 252 1 176 1 300 11 356 2 6 2 330 2 231 1 203 2 84 4 334 2 87 1 164 1 165 2 337 7 143 2 37 1 
113 1 212 2 170 2 95 1 129 2 191 4 97 1 215 1 292 2 137 2 158 1 251 2 252 3 6 1 356 1 300 19 176 2 224 1 227 1 330 2 203 2 59 1 84 8 334 2 87 1 164 2 165 2 337 11 186 1 143 2 37 2 18 1 
113 1 212 1 170 2 95 1 129 1 322 1 191 4 292 1 137 1 158 1 251 2 252 1 176 1 300 8 356 1 6 1 330 2 231 1 203 1 84 3 334 2 87 1 164 1 165 2 337 5 143 1 37 1 
113 1 212 1 170 2 95 1 129 1 322 1 191 4 292 1 137 1 158 1 251 2 252 1 176 1 300 8 356 1 6 1 330 2 231 1 203 1 84 3 334 2 87 1 164 1 165 2 337 5 143 1 37 1 
113 1 212 6 170 1 95 1 129 7 191 2 97 1 215 1 45 1 266 1 74 1 348 1 292 6 137 1 158 1 251 1 252 2 176 2 300 37 356 6 6 6 224 1 227 1 330 1 231 2 203 6 59 1 84 16 334 4 87 1 360 2 164 4 165 1 337 21 16 1 186 1 143 7 281 1 37 1 
170 1 114 1 130 2 191 2 173 1 132 1 3 2 290 1 217 1 194 2 119 2 175 1 251 1 300 2 255 1 330 1 230 1 180 2 258 2 332 1 30 1 84 1 333 2 236 1 234 1 33 1 315 1 165 1 337 1 209 1 243 1 
282 2 254 1 340 1 79 1 130 2 22 1 232 1 173 1 258 2 23 1 236 1 119 2 237 1 361 1 268 1 142 1 269 1 67 1 26 1 
282 2 340 1 79 1 130 1 96 1 232 1 173 1 258 1 23 1 236 1 119 1 361 1 268 1 142 1 269 1 67 1 26 1 
254 1 93 1 130 1 263 1 230 1 173 1 248 1 258 1 236 1 335 1 119 1 268 1 315 1 220 1 
282 2 254 1 340 1 79 1 130 1 232 1 173 1 258 1 23 1 236 1 119 1 237 1 361 1 268 1 142 1 269 1 67 1 26 1 
98 1 
110 1 318 1 354 1 198 1 303 1 58 1 276 1 
178 1 103 1 8 1 213 1 106 1 344 1 11 1 2 1 161 1 276 2 100 1 207 1 318 1 66 1 354 1 242 1 198 1 
178 1 93 1 329 1 150 1 213 1 11 1 130 1 230 1 173 1 258 1 2 1 326 1 236 2 204 1 99 1 119 1 315 2 354 1 17 1 319 1 
178 1 212 1 227 1 213 1 11 1 160 3 215 1 2 1 276 2 334 1 292 1 164 1 207 4 143 1 186 1 242 2 354 2 89 3 198 3 176 1 
127 1 213 1 129 1 344 1 2 1 3 1 154 1 194 1 266 1 74 1 100 1 270 1 298 1 299 1 354 2 198 2 178 1 77 2 11 1 180 1 12 1 123 1 308 1 238 1 143 2 68 1 281 1 211 1 
178 1 213 1 11 1 303 1 2 1 276 1 110 1 318 1 354 1 198 1 
77 1 212 1 129 1 160 1 203 1 276 1 292 1 207 2 143 1 354 2 89 1 242 1 198 1 
100 1 106 1 344 1 318 1 66 1 276 1 
93 2 213 2 130 2 344 3 173 1 248 1 264 1 2 1 153 1 195 2 346 1 119 2 100 3 354 2 198 2 178 2 226 2 106 2 229 1 11 2 230 1 258 2 29 2 236 1 335 1 315 1 66 4 338 1 112 1 
93 1 170 1 150 1 130 1 72 1 191 2 173 1 132 1 3 2 217 1 265 1 194 3 73 1 119 1 251 1 300 1 330 1 10 1 180 3 12 1 331 1 230 1 258 1 123 2 236 1 238 2 315 1 165 1 337 1 68 2 209 1 69 1 
178 1 226 1 213 1 160 2 11 1 29 1 2 1 276 4 45 1 207 4 318 2 89 2 242 2 354 1 198 2 
32 1 179 1 324 1 
124 1 32 1 245 1 324 1 305 1 
32 1 179 1 324 1 
32 1 179 1 324 1 
32 1 122 1 324 1 
32 1 122 1 324 1 
32 1 122 1 324 1 
32 1 324 1 
53 1 116 1 
330 2 170 2 129 1 191 4 287 1 84 4 45 1 266 1 74 1 348 1 165 2 337 4 143 1 16 1 281 1 251 2 300 8 6 3 356 2 18 1 
129 1 58 1 84 3 45 1 266 1 74 1 348 1 337 3 16 1 143 1 281 1 356 2 6 2 300 6 
212 1 330 1 170 1 129 1 191 2 203 1 84 1 292 1 165 1 337 2 143 1 251 1 6 1 356 1 300 3 366 1 
212 1 129 1 231 1 203 1 84 2 334 2 292 1 164 1 337 4 143 1 6 1 356 1 176 1 300 6 
212 2 170 2 129 3 191 4 287 2 45 1 266 2 74 2 348 1 292 2 251 2 300 21 356 5 6 7 330 2 231 1 202 1 203 2 84 9 334 2 360 1 164 2 165 2 337 12 239 1 16 1 143 3 281 1 18 2 
334 1 337 1 300 1 
164 1 300 1 84 1 
212 1 330 1 170 1 129 1 191 2 203 1 84 2 292 1 165 1 337 3 143 1 251 1 319 1 300 5 356 2 6 2 366 1 
212 2 170 1 129 2 191 2 215 1 292 2 251 1 300 10 176 1 356 1 6 1 224 1 227 1 330 1 203 2 59 1 84 4 334 1 87 1 164 1 165 1 337 6 186 1 143 2 
129 1 287 1 84 3 266 1 74 1 337 3 143 1 281 1 300 6 356 1 6 2 
330 1 170 1 191 2 287 1 84 1 266 1 74 1 348 1 165 1 239 1 337 2 16 1 251 1 6 2 356 1 300 3 18 1 
330 1 170 1 129 2 191 2 287 2 84 5 87 1 266 2 74 2 165 1 337 5 143 2 251 1 281 1 211 1 356 3 6 5 300 10 
330 1 170 1 191 2 84 1 87 1 292 1 165 1 143 1 251 1 300 1 
212 1 330 1 170 1 129 1 191 2 203 1 84 1 87 1 292 1 165 1 337 2 143 1 251 1 6 1 356 1 300 3 
330 3 170 3 322 1 191 6 287 1 84 1 87 1 266 1 74 1 165 3 239 1 337 2 251 3 300 3 356 1 6 2 18 1 
212 3 170 5 129 5 322 1 191 10 287 3 193 1 45 1 266 3 74 3 348 1 292 3 251 5 176 1 76 1 300 33 356 5 6 8 330 5 231 1 203 3 84 14 334 4 87 1 205 1 164 3 165 5 239 1 337 19 16 1 143 5 281 2 18 2 366 1 
170 1 129 1 191 2 45 1 266 1 74 1 348 1 251 1 300 8 176 1 356 2 6 2 330 1 84 4 334 1 87 1 164 1 165 1 337 4 143 1 186 1 16 1 281 1 
212 4 170 2 129 4 191 4 215 1 292 4 251 2 300 18 176 1 356 3 6 3 224 1 227 1 330 2 231 1 203 4 59 1 84 7 334 2 87 1 360 1 164 2 165 2 337 11 186 1 143 4 366 1 
212 2 170 3 129 3 191 6 215 1 45 1 266 1 74 1 348 1 292 2 251 3 300 17 176 1 356 3 6 3 224 1 227 1 330 3 203 2 59 1 84 7 334 1 87 1 164 1 165 3 337 10 16 1 186 1 143 3 281 1 366 1 18 1 
212 2 170 2 129 2 191 4 215 1 292 2 251 2 300 10 176 1 356 1 6 1 224 1 227 1 330 2 203 2 59 1 84 4 334 1 87 1 164 1 165 2 337 6 186 1 143 2 366 1 
170 1 129 1 191 2 45 1 266 1 74 1 348 1 251 1 300 8 176 1 356 2 6 2 330 1 84 4 334 1 87 1 164 1 165 1 337 4 143 1 186 1 16 1 281 1 
212 2 170 1 129 2 191 2 215 1 292 2 251 1 300 10 176 1 356 1 6 1 224 1 227 1 330 1 203 2 59 1 84 4 334 1 87 1 164 1 165 1 337 6 186 1 143 2 
212 2 170 3 129 2 191 6 215 1 292 2 251 3 300 11 176 1 356 1 6 1 224 1 227 1 330 3 203 2 59 1 84 4 334 1 87 1 164 1 165 3 337 7 186 1 143 2 366 1 18 1 
212 2 170 3 129 2 191 6 322 1 215 1 292 2 251 3 300 11 176 1 356 2 6 2 224 1 227 1 330 3 203 2 59 1 84 4 334 1 87 1 164 1 165 3 337 7 186 1 143 2 18 1 
129 1 287 3 84 3 266 3 74 3 348 2 337 4 16 1 143 1 281 1 300 7 356 3 6 6 
212 2 170 3 129 2 191 6 322 1 215 1 292 2 251 3 300 11 176 1 356 1 6 1 224 1 227 1 330 3 203 2 59 1 84 4 334 1 87 1 164 1 165 3 337 7 186 1 143 2 18 1 
294 1 
102 1 141 1 109 1 294 1 88 1 233 1 
236 1 335 1 93 1 119 1 130 1 315 1 230 1 173 1 248 1 258 1 58 1 
93 1 283 1 150 1 10 1 130 1 72 1 230 1 180 2 173 1 123 1 258 1 3 1 236 1 194 2 73 1 119 1 238 1 315 1 
194 1 195 1 283 1 238 1 180 1 123 1 3 1 
194 1 195 1 283 1 238 1 180 1 123 1 3 1 
195 1 100 1 344 1 
195 1 100 1 344 1 
236 1 119 1 130 1 185 1 173 1 258 1 
93 2 104 1 150 1 121 1 130 7 22 1 230 2 57 1 173 2 258 7 30 1 326 1 333 1 236 3 311 1 119 6 185 1 315 3 297 1 26 1 271 1 
170 2 129 1 130 1 173 1 325 1 132 2 43 1 3 1 265 1 266 1 45 1 135 1 6 2 330 2 10 2 331 1 180 2 230 1 332 1 236 1 235 1 238 1 337 3 16 1 143 1 281 1 283 1 150 1 72 1 22 1 191 4 194 2 73 1 74 1 119 1 348 1 251 2 356 2 300 6 258 1 123 1 84 3 33 1 206 1 165 2 315 1 209 2 
93 1 213 2 130 1 344 3 39 1 246 1 264 1 2 2 119 1 100 3 293 1 354 1 198 1 178 2 106 1 11 2 258 1 303 1 276 1 85 1 204 1 183 1 312 1 336 1 315 2 110 1 318 1 66 2 
329 1 150 1 130 2 22 1 230 1 173 1 258 2 326 1 85 1 236 2 119 2 185 1 315 2 
93 1 130 4 22 1 230 1 248 1 173 1 201 1 258 4 216 1 236 1 335 1 119 4 315 1 
168 1 150 1 130 1 230 1 173 1 258 1 307 1 236 2 195 1 311 1 119 1 267 1 315 1 297 1 
236 1 282 1 340 1 93 1 119 1 361 1 130 1 269 1 173 1 258 1 
130 2 22 1 230 1 173 1 258 2 30 1 290 1 236 1 119 2 315 1 26 1 
93 1 130 4 121 1 22 1 230 2 248 1 173 2 201 1 258 4 30 1 236 2 335 1 195 1 119 3 315 3 271 1 
320 1 93 1 130 4 22 1 230 2 248 1 173 2 201 1 258 4 30 1 236 2 335 1 195 1 119 3 315 3 271 1 
93 1 283 1 150 1 10 1 130 1 230 1 180 2 173 1 123 1 258 1 3 1 236 1 194 2 73 1 119 1 238 1 315 1 49 1 
195 1 
359 1 244 1 138 1 10 1 197 1 
262 1 38 1 138 1 244 2 10 1 344 2 323 1 276 1 61 1 62 1 359 2 312 1 100 2 293 1 318 1 298 1 197 2 50 1 145 1 
194 1 255 1 359 1 138 1 244 1 180 1 175 1 243 1 3 1 
38 1 138 1 323 1 
147 1 228 1 58 1 365 1 
147 1 228 1 159 1 362 1 125 1 27 1 365 1 
159 1 351 1 240 1 
92 1 19 1 147 1 128 1 228 1 159 3 21 1 362 1 125 3 328 2 27 1 365 1 
139 1 147 1 228 1 159 2 362 1 125 2 210 1 27 1 365 1 
92 1 188 1 282 1 159 1 228 1 232 1 362 1 125 1 75 1 269 1 27 1 
92 1 228 1 159 1 362 1 125 1 27 1 365 1 
92 1 147 1 159 1 362 1 125 1 27 1 365 2 
92 1 261 1 228 1 159 2 28 1 309 1 362 2 125 2 27 2 365 1 
339 1 92 1 188 1 147 1 159 3 228 2 118 1 362 1 125 3 210 2 27 1 7 1 365 1 
282 2 92 1 284 1 147 1 228 1 159 2 232 1 361 1 362 1 125 2 142 1 269 1 210 1 27 1 365 1 
339 1 92 1 188 1 147 1 159 4 228 2 139 1 362 2 219 1 125 4 210 2 27 2 365 1 
92 1 147 1 228 1 159 1 362 1 125 1 27 1 365 1 
339 1 19 1 188 1 147 2 128 1 159 4 228 3 86 1 362 1 328 1 125 4 210 2 27 1 365 2 
92 1 147 1 228 1 159 2 291 1 349 1 362 1 125 2 36 1 210 1 27 1 365 1 
19 1 92 1 189 1 147 1 128 2 228 1 159 3 362 1 125 3 328 2 27 1 365 1 
162 2 228 2 279 1 275 1 
92 1 159 1 362 1 125 1 48 1 27 1 
92 1 118 1 147 1 228 1 159 2 362 1 125 2 210 1 27 1 365 1 
280 1 
92 1 147 1 228 1 159 1 362 1 125 1 27 1 365 1 
92 1 118 1 147 1 228 1 159 3 362 1 328 1 125 3 210 1 27 1 365 1 
86 1 339 1 188 1 228 1 
228 1 365 1 

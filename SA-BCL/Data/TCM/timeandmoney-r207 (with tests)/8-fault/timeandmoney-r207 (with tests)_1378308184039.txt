#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 256 262 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 256 18 269 0 (134,207) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 256 98 165 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 256 98 165 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 256 98 165 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 256 98 165 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 256 98 165 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 59 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 256 95 189 182 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 256 262 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 256 18 269 126 151 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 256 262 346 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 256 18 269 126 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 256 18 269 0 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 256 18 269 126 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 256 18 269 0 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 256 18 269 126 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 256 18 269 126 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 256 262 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 256 18 269 126 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 256 18 269 126 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 256 18 269 126 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 256 338 65 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 256 338 65 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 256 338 65 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 256 338 65 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 256 338 65 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 256 262 346 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 269 126 64 109 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 233 45 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 83 57 152 (79,148) (79,148) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 59 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 256 18 269 126 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 256 95 268 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 256 95 189 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 256 95 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 256 18 269 126 151 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 256 95 268 109 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 256 18 233 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 83 57 152 (79,148) (79,148) 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 256 18 233 45 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 256 18 269 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 256 18 269 126 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 83 57 152 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 256 95 268 277 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 256 95 268 109 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 256 95 268 109 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 256 95 268 109 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 256 95 268 109 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 256 95 268 109 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 256 95 268 109 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 256 95 268 109 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 256 95 268 109 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 83 57 152 (79,148) (79,148) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 256 95 268 109 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 256 18 233 (79,148) (79,148) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 30 2 168 1 147 1 94 9 58 2 96 6 5 2 187 2 208 1 174 1 320 2 129 1 231 1 322 1 176 4 131 2 235 9 354 1 270 3 219 2 356 1 274 5 247 1 90 1 222 1 309 1 310 1 
1 1 30 2 168 1 147 1 94 9 58 2 96 6 5 2 187 2 208 1 174 1 320 2 129 1 231 1 322 1 176 4 131 2 235 9 354 1 270 3 219 2 356 1 274 5 247 1 90 1 222 1 309 1 310 1 
1 1 30 2 168 1 147 1 94 10 58 2 96 7 5 2 187 2 208 1 174 1 320 2 129 1 231 1 322 1 176 5 131 2 235 10 354 1 270 4 219 2 356 1 274 6 247 1 90 1 222 1 309 1 310 1 
1 1 30 2 168 1 147 1 94 7 58 2 96 4 5 2 187 2 208 1 174 1 320 2 129 1 231 1 176 3 131 2 235 7 354 1 270 2 219 1 356 1 274 4 247 1 90 1 222 1 309 1 310 1 
235 4 30 1 270 1 94 4 219 2 58 1 96 3 187 1 274 3 208 1 247 1 320 1 174 1 322 1 309 1 176 2 131 1 310 1 
235 2 1 1 14 1 94 2 58 1 356 1 187 1 5 1 99 1 274 1 208 1 247 1 198 1 320 1 309 1 131 1 
235 3 94 3 354 1 270 1 96 1 187 2 5 1 274 2 208 1 247 1 309 1 176 1 131 2 
30 1 94 9 58 1 96 7 5 1 187 2 208 1 129 1 174 1 320 1 322 1 176 4 131 2 235 9 270 3 354 1 219 2 274 5 247 1 22 1 161 1 90 1 309 1 310 1 
30 1 94 9 58 1 96 7 5 1 187 2 208 1 129 1 174 1 320 1 322 1 176 4 131 2 235 9 270 3 354 1 219 2 274 5 247 1 22 1 161 1 90 1 309 1 310 1 
59 1 93 1 237 1 
132 2 288 1 237 1 
139 1 51 2 281 1 282 2 276 2 128 2 8 2 226 2 
311 1 117 1 51 2 281 1 282 3 341 1 31 1 205 1 55 1 298 2 2 1 206 2 226 2 256 1 255 1 345 1 171 1 61 1 128 2 37 1 7 2 8 2 130 1 262 1 351 1 193 1 80 1 63 1 194 1 44 1 327 1 241 1 183 1 139 1 141 1 276 3 224 1 
234 1 51 1 281 1 282 1 49 1 276 1 128 1 8 1 226 1 250 1 
213 1 93 1 282 1 237 1 226 1 123 1 97 1 170 1 88 1 335 1 276 1 202 1 92 1 250 1 
51 1 93 1 282 1 237 1 226 1 123 2 97 1 170 1 88 1 335 2 128 1 276 1 8 1 92 1 250 1 
203 1 335 1 191 1 249 1 123 1 
234 1 51 1 203 1 281 1 93 1 282 1 237 1 226 1 123 2 49 1 335 2 276 1 128 1 8 1 190 1 191 1 200 1 115 1 250 1 
335 1 191 1 123 1 
234 1 51 1 203 1 281 1 282 1 226 1 123 1 335 1 49 1 128 1 276 1 190 1 8 1 250 1 
237 1 
203 1 93 1 66 1 335 2 237 1 191 1 115 1 123 2 
51 1 203 2 281 1 93 1 282 1 317 3 226 1 57 1 185 2 123 5 3 1 228 1 286 1 152 1 128 1 8 1 190 1 191 2 233 1 302 1 234 1 41 1 13 2 159 2 107 1 237 1 45 1 18 2 330 2 242 1 20 2 49 1 244 1 335 5 276 1 115 1 278 1 250 1 
59 1 139 1 
139 2 51 1 48 1 282 2 128 1 276 2 253 1 8 1 226 2 
207 1 260 1 307 1 
282 1 297 1 298 1 206 1 241 1 345 1 139 1 61 1 141 1 276 1 7 1 37 1 130 1 351 1 193 1 224 1 
51 1 282 2 298 1 206 1 226 1 241 1 345 1 227 1 260 1 61 1 141 1 101 1 276 2 37 1 7 1 130 1 8 1 193 1 351 1 224 1 
51 4 213 1 282 5 329 1 226 5 139 1 48 1 227 1 101 2 209 1 276 5 128 1 8 4 261 1 
234 1 51 2 282 2 6 1 276 2 8 2 226 2 250 1 
139 1 51 3 101 1 282 3 128 1 276 3 8 3 226 3 
234 1 51 1 282 1 276 1 8 1 226 1 250 1 
51 1 48 1 282 1 253 1 276 1 128 1 8 1 226 1 250 1 
51 3 281 1 282 4 341 1 31 1 205 1 55 1 2 1 298 1 206 1 226 3 123 1 255 1 345 1 97 1 227 1 170 1 61 1 101 1 128 2 37 1 7 1 130 1 8 3 193 1 351 1 80 1 11 1 63 1 194 1 44 1 327 1 304 1 241 1 183 1 139 1 48 1 88 1 141 1 335 1 276 4 224 1 92 1 250 1 
139 1 51 1 213 1 282 2 101 1 209 1 276 2 8 1 226 2 
51 3 282 3 237 1 304 1 226 3 123 1 273 1 48 1 170 1 227 1 97 1 88 1 101 2 335 1 128 1 276 3 8 3 250 1 92 1 
51 2 282 2 226 2 207 1 48 1 260 1 101 1 128 1 276 2 8 2 
282 1 298 1 206 1 241 1 345 1 139 1 141 1 61 1 276 1 7 1 37 1 130 1 351 1 193 1 224 1 
298 1 206 1 345 1 19 1 139 1 7 1 294 1 250 1 
80 1 194 1 63 1 0 1 44 2 341 2 134 1 205 1 269 1 327 1 18 1 256 1 207 1 255 1 183 1 305 1 111 1 260 1 245 1 248 1 307 1 278 1 
51 1 88 1 282 1 6 1 276 1 8 1 226 1 250 1 
16 1 50 1 
16 1 50 1 
42 1 17 1 
42 1 17 1 
42 1 17 1 
16 1 50 1 211 1 
306 1 16 1 50 1 
42 1 143 1 271 1 16 2 17 1 50 2 
16 1 50 1 211 1 
16 1 50 1 211 1 
287 1 16 1 50 1 
287 1 16 1 50 1 
287 1 16 1 50 1 
51 2 12 1 216 1 282 2 195 1 56 1 16 1 226 2 123 1 124 1 139 1 258 1 220 1 229 1 335 1 103 1 306 1 276 2 62 1 38 1 8 2 50 1 324 1 26 1 
104 1 12 3 216 1 252 1 237 1 271 1 16 2 123 2 112 1 258 2 229 2 275 1 34 2 103 2 335 2 62 2 24 1 50 2 40 1 
58 1 30 1 320 1 
58 1 14 1 320 1 
58 3 33 1 316 1 30 2 14 1 290 1 
58 2 33 1 30 1 14 1 295 1 290 1 
58 2 33 1 30 1 14 1 290 2 
339 1 203 4 315 1 93 1 317 1 56 1 185 1 123 5 257 1 126 1 286 1 192 1 191 1 132 1 13 3 237 1 269 1 292 1 18 1 330 1 20 1 220 1 113 1 335 5 245 1 25 1 308 2 115 1 278 1 337 1 26 1 
339 3 203 7 93 1 71 1 317 3 123 9 185 2 257 2 126 3 286 1 191 6 177 1 132 3 13 8 106 1 15 1 237 2 269 3 292 3 18 3 330 2 20 2 334 5 113 1 244 1 335 9 245 3 246 1 249 5 115 1 278 3 362 1 26 4 337 2 
339 1 203 2 93 1 315 1 317 1 185 1 123 3 257 1 126 1 288 1 132 2 13 3 237 2 269 1 292 1 18 1 330 1 20 1 335 3 244 1 245 1 25 1 308 1 278 1 337 1 26 1 
339 2 203 3 93 1 315 1 71 1 317 2 185 1 123 4 257 1 126 2 288 1 177 1 132 3 13 5 106 1 237 2 269 2 292 2 18 2 330 1 20 1 335 4 244 1 245 2 25 1 308 2 278 2 337 1 26 2 
59 1 61 1 178 1 
118 1 61 1 
108 1 
61 1 37 1 241 1 
61 1 179 1 
61 1 37 1 
267 1 61 3 178 2 37 1 155 1 241 1 
256 1 98 1 167 1 165 1 
256 1 98 1 167 1 165 1 
256 1 98 1 167 1 230 1 165 1 
256 1 98 1 167 1 165 1 
256 1 98 1 167 1 165 1 
166 1 53 1 314 1 316 1 30 1 298 1 94 2 206 1 32 1 284 1 149 1 58 2 96 1 187 1 5 1 208 1 7 1 320 1 175 1 193 1 131 1 263 1 156 1 235 2 14 1 140 1 274 1 247 1 309 1 224 1 
69 1 166 1 53 1 314 1 204 1 316 1 30 1 298 1 94 3 206 1 32 1 284 1 149 1 58 2 96 2 187 1 5 1 7 1 320 1 175 1 193 1 131 1 263 1 235 3 14 1 87 1 274 1 247 1 309 1 224 1 
314 1 204 1 316 1 30 1 298 1 94 2 206 1 32 1 284 1 149 1 58 2 96 2 5 1 7 1 320 1 175 1 193 1 263 1 235 2 14 1 87 1 274 1 247 1 309 1 224 1 
280 1 69 1 313 1 251 1 29 1 298 1 94 1 206 1 32 2 345 1 187 1 5 2 61 1 7 1 37 1 175 2 210 1 193 1 131 1 263 2 235 1 240 1 224 1 
166 1 53 1 314 1 316 1 30 1 298 1 94 1 206 1 32 1 284 1 149 1 58 2 187 1 5 1 208 1 7 1 320 1 175 1 193 1 131 1 263 1 235 1 14 1 140 1 87 1 224 1 
328 1 
313 1 93 1 282 1 317 2 226 1 185 1 186 1 285 1 286 1 97 1 61 1 318 1 288 2 7 2 319 1 191 6 193 1 13 2 160 4 237 2 110 2 330 1 20 1 243 2 335 5 67 1 115 3 164 1 202 1 250 1 27 2 119 1 120 1 298 2 299 1 206 2 344 2 123 5 73 2 345 2 257 1 170 1 259 2 37 1 210 1 39 2 266 1 132 2 213 1 88 1 276 1 359 1 223 1 224 1 92 1 
120 1 282 1 226 1 344 1 123 3 97 1 170 1 318 1 191 2 266 1 213 1 160 2 88 1 66 1 335 3 276 1 359 1 67 1 115 1 202 1 92 1 250 1 
120 1 93 1 282 1 226 1 123 3 97 1 170 1 318 1 191 1 39 1 266 1 213 1 160 3 237 1 88 1 66 1 335 3 276 1 359 1 67 1 115 1 202 1 92 1 250 1 
120 1 93 1 282 1 226 1 344 1 123 3 97 1 170 1 318 1 191 2 39 1 266 1 213 1 160 3 237 1 88 1 66 1 243 1 335 3 276 1 359 1 67 1 115 1 202 1 92 1 250 1 
312 1 93 5 282 1 317 1 226 1 185 1 150 1 97 1 286 1 318 1 288 2 191 7 13 1 160 6 237 5 110 2 330 1 20 1 243 4 66 1 335 5 67 1 115 3 116 1 250 1 202 1 27 2 120 1 299 1 344 4 123 5 73 2 170 1 259 2 347 1 39 4 266 1 213 1 180 1 88 1 276 1 359 1 223 1 92 1 
93 1 282 1 317 1 226 1 185 1 97 1 286 1 318 1 288 2 319 1 191 4 13 1 160 4 237 2 110 2 330 1 20 1 243 2 335 4 67 1 115 2 250 1 202 1 27 2 120 1 299 1 344 2 123 4 73 2 170 1 259 2 39 2 266 1 132 2 213 1 88 1 276 1 359 1 223 1 92 1 
27 2 312 1 93 1 120 1 282 1 317 1 299 1 344 2 226 1 123 4 185 1 73 2 97 1 170 1 286 1 259 2 318 1 288 2 191 4 39 2 266 1 213 1 13 1 160 4 237 1 180 1 110 2 330 1 88 1 20 1 243 2 335 4 276 1 359 1 67 1 115 2 116 1 223 1 202 1 92 1 250 1 
27 2 312 1 93 1 120 1 282 1 317 1 299 1 344 2 226 1 123 4 185 1 73 2 97 1 170 1 286 1 259 2 318 1 288 2 191 4 39 2 266 1 213 1 13 1 160 4 237 1 180 1 110 2 330 1 88 1 20 1 243 2 335 4 276 1 359 1 67 1 115 2 116 1 223 1 202 1 92 1 250 1 
145 2 93 1 120 1 340 1 282 1 317 1 299 1 344 2 226 1 123 4 185 1 73 2 97 1 170 1 286 1 100 1 318 1 191 4 39 2 266 1 132 2 213 1 13 1 217 1 160 4 237 1 136 2 110 2 330 1 88 1 20 1 243 2 335 4 276 1 359 1 67 1 115 2 116 1 202 1 92 1 250 1 
51 1 312 1 281 1 93 1 282 2 317 1 226 2 185 1 150 1 97 1 286 1 318 1 288 2 8 1 190 1 191 5 234 1 13 1 160 5 237 1 110 2 330 1 20 1 243 3 335 4 67 1 115 2 116 1 250 2 202 1 27 2 120 1 299 1 344 3 123 4 73 2 170 1 259 2 128 1 39 3 266 1 213 1 180 1 88 1 49 1 276 2 359 1 223 1 92 1 
51 1 312 1 281 1 93 1 282 2 317 1 226 2 185 1 150 1 97 1 286 1 318 1 288 2 8 1 190 1 191 5 234 1 13 1 160 5 237 1 110 2 330 1 20 1 243 3 335 4 67 1 115 2 116 1 250 2 202 1 27 2 120 1 299 1 344 3 123 4 73 2 170 1 259 2 128 1 39 3 266 1 213 1 180 1 88 1 49 1 276 2 359 1 223 1 92 1 
145 2 93 1 282 1 317 1 226 1 185 1 97 1 286 1 318 1 319 1 191 4 13 1 160 4 237 1 110 2 330 1 20 1 243 2 335 4 67 1 115 2 250 1 202 1 120 1 299 1 344 2 123 4 73 2 170 1 39 2 266 1 132 2 213 1 217 1 136 2 88 1 276 1 359 1 92 1 
80 1 194 1 63 1 205 1 327 1 239 1 57 1 148 1 18 1 256 1 255 1 183 1 59 1 138 1 305 1 152 1 233 1 79 1 
80 1 194 1 63 1 44 1 341 1 205 1 218 1 327 1 95 1 182 1 256 1 255 1 183 1 260 1 153 1 189 1 307 1 
80 1 51 1 194 1 63 1 44 1 282 1 54 1 341 1 31 1 205 1 218 1 327 1 226 1 256 1 183 1 255 1 227 1 101 1 276 1 221 1 8 1 262 1 
51 1 282 2 341 2 31 1 205 2 2 1 298 1 206 1 72 1 226 1 256 1 207 1 255 2 345 1 126 1 151 1 227 1 260 1 61 1 101 1 37 1 7 1 130 1 8 1 193 1 351 1 10 1 80 2 63 2 194 2 105 1 44 2 269 1 327 2 218 1 241 1 18 1 183 2 141 1 276 2 307 1 360 1 224 1 
80 1 194 1 63 1 205 1 298 1 327 1 169 1 206 1 256 1 255 1 183 1 345 1 346 1 7 1 262 1 
80 1 51 1 236 1 194 1 63 1 282 1 205 1 269 1 218 1 327 1 226 1 18 1 256 1 255 1 183 1 126 1 48 1 276 1 128 1 8 1 
18 1 80 1 256 1 183 1 255 1 305 1 63 1 194 1 0 1 205 1 269 1 327 1 
80 1 194 1 63 1 44 2 341 2 205 1 327 1 239 1 207 1 255 1 183 1 138 1 305 1 260 1 245 1 248 1 307 1 278 1 
18 1 80 1 256 1 183 1 255 1 126 1 305 1 63 1 194 1 205 1 269 1 327 1 
18 1 80 1 256 1 183 1 255 1 63 1 194 1 0 1 205 1 269 1 327 1 169 1 
80 1 194 1 63 1 44 2 341 2 205 1 327 1 239 1 169 1 207 1 255 1 183 1 138 1 260 1 245 1 248 1 307 1 278 1 
18 1 80 1 256 1 183 1 255 1 126 1 63 1 194 1 205 1 269 1 327 1 169 1 
18 1 80 1 256 1 183 1 255 1 126 1 63 1 194 1 205 1 269 1 327 1 
282 1 341 1 31 1 205 1 2 1 298 1 206 1 256 1 345 1 255 1 61 1 37 1 7 1 130 1 262 1 193 1 351 1 80 1 194 1 63 1 44 1 327 1 241 1 183 1 139 1 141 1 276 1 224 1 
80 1 194 1 63 1 44 1 341 1 31 1 205 1 298 1 327 1 206 1 345 1 19 1 255 1 183 1 139 1 7 1 23 1 294 1 250 1 
18 1 80 1 256 1 183 1 255 1 126 1 63 1 194 1 205 1 269 1 327 1 218 1 
282 1 205 1 2 1 298 1 206 1 72 1 256 1 255 1 126 1 61 1 7 1 37 1 130 1 193 1 351 1 80 1 156 1 194 1 63 1 269 1 327 1 241 1 18 1 183 1 141 1 276 1 224 1 
80 1 51 1 194 1 63 1 282 1 205 1 269 1 218 1 327 1 226 1 18 1 256 1 255 1 183 1 126 1 48 1 276 1 128 1 8 1 9 1 
80 1 338 1 81 1 52 1 63 1 44 1 341 1 327 1 256 1 255 1 183 1 75 1 65 1 358 1 
80 1 338 1 81 1 52 1 63 1 44 1 341 1 327 1 256 1 255 1 183 1 75 1 65 1 358 1 
80 1 338 1 81 1 52 1 63 1 44 1 341 1 327 1 256 1 255 1 183 1 75 1 65 1 358 1 
80 1 338 1 81 1 52 1 63 1 44 1 341 1 327 1 256 1 255 1 183 1 75 1 65 1 358 1 
80 1 338 1 81 1 52 1 63 1 44 1 341 1 327 1 256 1 255 1 183 1 75 1 65 1 358 1 
112 1 258 1 229 1 103 1 35 1 62 1 271 1 16 1 50 1 40 1 
306 1 195 1 
258 1 28 1 229 1 103 1 62 1 343 1 122 1 16 1 50 1 
355 1 211 1 
287 1 143 1 46 1 
12 2 216 1 252 1 237 1 271 1 16 1 123 1 112 1 258 1 229 1 275 1 34 1 335 1 103 1 62 1 24 1 50 1 40 1 
12 2 216 1 252 1 237 1 271 1 16 1 123 1 112 1 258 1 229 1 275 1 34 1 335 1 103 1 62 1 24 1 50 1 40 1 
12 2 216 1 252 1 237 1 271 1 16 1 123 1 112 1 258 1 229 1 275 1 34 1 335 1 103 1 62 1 24 1 50 1 40 1 
143 1 355 1 211 1 
143 1 355 1 211 1 
287 1 46 1 
287 1 143 1 46 1 
124 1 38 1 
51 2 203 1 252 1 282 2 56 1 226 2 123 1 124 1 258 1 229 1 34 1 103 1 62 1 38 1 8 2 324 1 12 1 16 1 195 1 139 1 220 1 335 1 276 2 306 1 199 1 50 1 26 1 
80 1 194 1 63 1 184 1 282 2 205 1 327 1 218 1 226 2 256 1 183 1 255 1 346 1 332 1 102 1 276 2 321 1 262 1 
265 1 156 1 53 1 314 1 316 1 30 1 14 1 298 2 206 2 149 1 58 2 87 1 7 2 320 1 175 1 163 1 201 1 193 1 224 1 
53 1 314 1 316 1 30 1 14 1 298 1 206 1 149 1 85 1 58 2 87 1 7 1 320 1 175 1 201 1 193 1 224 1 
265 1 313 1 29 1 298 1 206 1 345 1 61 1 37 1 7 1 175 1 210 1 193 1 224 1 279 1 
265 1 53 1 314 1 316 1 30 1 14 1 298 1 206 1 149 1 58 2 87 1 7 1 320 1 175 1 163 1 201 1 193 1 224 1 
172 1 
59 1 242 1 13 1 93 1 237 1 317 1 302 1 
27 1 93 1 317 1 185 1 123 1 286 1 259 1 288 1 191 1 132 1 13 1 237 2 330 1 20 1 335 1 115 1 223 1 
93 1 317 5 185 3 186 1 286 3 151 2 61 6 288 4 7 1 191 5 155 1 193 1 291 1 13 8 159 2 237 5 292 4 241 1 18 2 330 3 20 3 335 5 245 2 114 2 115 3 118 3 339 4 298 1 206 1 123 5 345 1 257 2 170 2 126 2 76 2 37 1 348 1 349 2 78 2 132 8 43 1 178 2 269 2 142 2 278 2 224 2 
132 4 339 3 268 1 13 2 237 2 269 1 317 3 109 1 292 3 185 1 95 1 18 1 330 1 126 1 286 1 64 1 20 1 288 2 153 1 336 1 
13 2 159 1 180 1 317 2 45 1 57 1 123 1 185 1 18 1 330 1 286 1 20 1 152 1 335 1 278 1 233 1 
93 1 13 1 237 1 317 1 185 1 330 1 242 1 286 1 20 1 302 1 
132 2 339 1 13 2 159 1 237 1 269 1 317 1 292 1 18 1 126 1 288 1 245 1 278 1 
93 1 335 1 237 1 191 1 115 1 123 1 
313 1 119 1 283 1 298 4 317 2 206 4 185 2 123 3 186 2 4 2 345 2 257 2 285 1 286 1 61 1 37 1 7 4 191 4 210 1 193 1 157 1 13 2 84 1 330 2 20 2 244 1 335 3 115 2 224 1 
51 2 281 1 282 3 341 1 31 1 55 1 205 1 298 1 2 1 206 1 226 2 255 1 345 1 61 1 128 2 7 1 37 1 8 2 130 1 351 1 193 1 80 1 194 1 63 1 44 1 327 1 241 1 183 1 139 1 141 1 276 3 224 1 
132 4 339 2 13 1 93 2 237 4 317 2 292 2 185 1 186 1 330 1 257 1 98 1 286 1 20 1 288 2 
357 1 103 1 62 1 
124 1 112 1 103 1 62 1 154 1 
357 1 103 1 62 1 
357 1 103 1 62 1 
103 1 36 1 62 1 
103 1 36 1 62 1 
103 1 36 1 62 1 
103 1 62 1 
16 1 50 1 
80 2 63 2 327 2 239 1 83 1 148 1 57 1 254 1 255 2 183 2 138 1 152 1 79 1 
18 1 256 1 59 1 138 1 152 1 239 1 57 1 148 1 233 1 79 1 
18 1 80 1 212 1 256 1 183 1 255 1 126 1 63 1 269 1 327 1 
256 1 268 1 44 1 341 1 153 1 95 1 
256 1 44 1 341 1 153 1 189 1 95 1 
44 1 341 1 153 1 
256 1 95 1 
18 1 256 1 126 1 151 1 44 1 341 1 269 1 
80 1 268 1 63 1 44 1 341 1 327 1 109 1 95 1 256 1 255 1 183 1 75 1 153 1 
18 1 256 1 233 1 
80 1 215 1 63 1 44 1 341 1 327 1 239 1 83 1 57 1 148 1 254 1 255 1 183 1 138 1 152 1 79 1 
18 1 256 1 138 1 152 1 45 1 239 1 57 1 233 1 
18 1 80 1 256 1 183 1 255 1 75 1 63 1 269 1 327 1 
18 1 80 1 256 1 183 1 255 1 126 1 75 1 63 1 269 1 327 1 
80 2 63 2 342 1 327 2 239 1 57 1 83 1 255 2 183 2 138 1 75 1 152 1 
80 3 212 1 268 1 63 3 44 1 341 1 342 1 327 3 95 1 256 1 255 3 183 3 75 1 153 1 277 1 
80 1 268 1 63 1 44 1 341 1 327 1 109 1 95 1 256 1 255 1 183 1 75 1 153 1 
212 1 80 2 268 1 63 2 44 1 341 1 327 2 109 1 95 1 256 1 255 2 183 2 75 1 153 1 
80 1 268 1 63 1 44 1 341 1 327 1 109 1 95 1 256 1 255 1 183 1 75 1 153 1 
80 1 268 1 63 1 44 1 341 1 327 1 109 1 95 1 256 1 255 1 183 1 75 1 153 1 
80 1 268 1 63 1 44 1 341 1 327 1 109 1 95 1 256 1 255 1 183 1 75 1 153 1 
80 1 268 1 63 1 44 1 341 1 327 1 109 1 95 1 256 1 255 1 183 1 75 1 153 1 
80 2 212 1 268 1 63 2 44 1 341 1 327 2 109 1 95 1 256 1 255 2 183 2 75 1 153 1 
80 2 268 1 63 2 44 1 341 1 342 1 327 2 109 1 95 1 256 1 255 2 183 2 75 1 153 1 
138 1 152 1 239 1 83 1 57 1 148 1 79 1 
80 2 268 1 63 2 44 1 341 1 342 1 327 2 109 1 95 1 256 1 255 2 183 2 75 1 153 1 
139 1 158 1 213 1 282 1 276 1 209 1 226 1 
158 1 213 1 296 1 282 1 226 1 139 1 60 1 127 1 21 1 209 1 276 1 68 1 
59 1 345 1 313 1 61 1 37 1 7 1 298 1 210 1 206 1 193 1 224 1 
51 1 282 2 298 1 206 1 226 1 241 1 345 1 139 1 61 1 141 1 101 1 276 2 37 1 7 1 130 1 8 1 193 1 224 1 
51 2 282 2 179 1 298 1 206 1 226 2 241 2 4 1 139 1 88 1 61 3 141 1 101 1 276 2 37 2 7 1 130 1 8 1 162 1 193 1 250 1 92 1 224 1 
51 2 282 2 179 1 298 2 206 2 226 2 241 2 4 1 139 1 47 1 88 1 188 1 61 3 101 1 276 2 37 2 7 2 130 1 8 1 162 1 193 1 250 1 92 1 224 1 
118 1 93 1 298 3 206 3 123 2 4 1 345 1 170 1 61 4 7 3 37 1 191 1 193 1 214 1 178 1 179 1 237 1 181 1 241 1 47 1 335 2 162 1 224 1 
118 1 93 1 179 1 178 1 237 1 298 3 206 3 241 1 123 2 345 1 4 1 47 1 170 1 61 4 335 2 37 1 7 3 162 1 191 1 78 1 193 1 224 1 
7 1 298 1 206 1 350 1 193 1 224 1 
298 1 225 1 206 1 241 1 300 1 345 1 61 1 7 1 37 1 155 1 193 1 232 1 224 2 
51 1 282 2 205 2 298 1 2 1 206 1 57 1 148 1 226 1 72 1 256 1 255 2 152 1 61 1 101 1 37 1 7 1 130 1 8 1 193 1 351 1 233 1 79 1 80 2 156 1 63 2 194 2 105 1 327 2 218 1 239 1 241 1 18 1 183 2 138 1 332 1 141 1 276 2 224 1 
203 1 118 1 93 1 317 1 298 1 206 1 185 2 123 3 345 1 286 2 170 1 61 2 76 1 7 1 349 1 191 2 78 1 302 1 13 1 178 1 237 1 84 1 242 1 330 2 20 2 142 1 335 3 115 1 
156 1 61 2 43 1 178 1 37 1 7 2 298 2 155 1 206 2 350 1 193 1 241 1 224 2 
156 1 313 1 238 1 298 4 206 4 345 1 47 1 61 1 7 4 37 1 210 1 193 1 224 1 
353 1 121 1 298 1 225 1 206 1 241 1 301 1 61 1 7 1 37 1 193 1 232 1 224 2 
58 1 345 1 314 1 14 1 7 1 320 1 298 1 206 1 193 1 224 1 
156 1 298 2 206 2 87 1 61 1 89 1 289 1 7 2 37 1 193 1 224 1 
352 1 156 1 313 1 238 1 326 1 298 5 206 4 4 1 345 1 61 3 289 1 7 5 37 2 210 1 193 2 224 2 
156 1 313 1 238 1 326 1 298 5 206 4 4 1 345 1 86 1 61 3 289 1 7 5 37 2 210 1 193 2 224 2 
51 1 282 2 298 1 206 1 226 1 241 1 345 1 139 1 188 1 61 1 101 1 276 2 37 1 7 1 130 1 8 1 193 1 224 1 
298 1 225 1 206 1 241 1 300 1 4 1 61 1 7 1 37 1 155 1 193 1 232 1 224 2 
139 1 196 1 82 1 333 1 293 1 
203 1 93 1 82 2 237 1 304 1 123 2 272 1 139 1 170 1 196 2 97 1 88 1 197 1 333 2 335 2 293 1 91 1 250 1 92 1 
82 1 184 1 282 1 226 1 333 1 102 1 276 1 293 1 321 1 
272 1 197 1 293 1 
59 1 274 1 247 1 309 1 
235 1 187 1 274 1 247 1 94 1 309 1 131 1 
5 1 94 1 32 1 
235 3 70 1 133 1 303 1 94 3 356 2 187 1 274 1 208 1 247 1 309 1 131 1 
96 1 235 2 187 1 274 1 247 1 94 2 309 1 219 1 131 1 
235 1 30 1 94 1 58 1 187 1 274 1 208 1 174 1 320 1 176 1 131 1 
235 1 187 1 274 1 208 1 247 1 94 1 131 1 
235 1 187 1 208 1 247 2 94 1 309 1 131 1 
264 1 235 2 94 2 137 1 187 2 274 1 208 1 247 1 144 1 131 2 
235 3 94 3 270 1 96 2 187 1 274 2 208 1 247 1 90 1 129 1 309 1 176 1 131 1 
235 2 316 1 14 1 30 1 94 2 58 2 74 1 96 1 187 1 274 1 208 1 247 1 320 1 309 1 131 1 
235 4 94 4 270 1 219 1 96 2 187 2 274 2 208 1 247 1 322 1 309 1 176 1 131 2 
235 1 187 1 274 1 208 1 247 1 94 1 309 1 131 1 
235 4 303 1 133 1 94 4 270 1 356 1 96 2 187 1 274 3 247 2 309 2 176 1 361 1 131 1 
96 1 235 2 187 1 274 1 208 1 247 1 161 1 135 1 94 2 77 1 309 1 131 1 
235 3 133 1 303 2 146 1 94 3 356 2 187 1 274 1 208 1 247 1 309 1 131 1 
125 1 331 2 274 2 323 1 
235 1 187 1 208 1 325 1 94 1 131 1 
96 1 235 2 187 1 274 1 208 1 247 1 90 1 94 2 309 1 131 1 
173 1 
235 1 187 1 274 1 208 1 247 1 94 1 309 1 131 1 
235 3 94 3 96 1 356 1 187 1 274 1 208 1 247 1 90 1 309 1 131 1 
274 1 270 1 176 1 361 1 
274 1 247 1 

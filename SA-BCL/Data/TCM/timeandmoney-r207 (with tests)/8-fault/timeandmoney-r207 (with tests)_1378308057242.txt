#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (229,337) 34 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (229,337) 34 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (156,178,306) (156,178,306) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (156,178,306) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (156,178,306) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (179,319) (179,319) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (156,178,306) (156,178,306) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 320 130 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 320 5 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 320 5 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 320 5 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 320 5 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration; | RETURN | 3400 | return null
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> %=
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
310 2 83 9 252 1 360 2 169 1 330 1 286 1 106 4 192 3 195 1 221 1 17 1 199 2 239 1 337 1 63 6 151 2 133 2 316 1 206 1 229 1 90 1 301 2 70 1 371 2 372 9 373 1 377 5 
310 2 83 9 252 1 360 2 169 1 330 1 286 1 106 4 192 3 195 1 221 1 17 1 199 2 239 1 337 1 63 6 151 2 133 2 316 1 206 1 229 1 90 1 301 2 70 1 371 2 372 9 373 1 377 5 
310 2 83 10 252 1 360 2 169 1 330 1 286 1 106 5 192 4 195 1 221 1 17 1 199 2 239 1 337 1 63 7 151 2 133 2 316 1 206 1 229 1 90 1 301 2 70 1 371 2 372 10 373 1 377 6 
310 2 83 7 252 1 360 2 330 1 286 1 106 3 192 2 195 1 221 1 17 1 199 2 239 1 337 1 63 4 151 1 133 2 316 1 206 1 229 1 90 1 301 2 70 1 371 2 372 7 373 1 377 4 
199 1 63 3 151 2 133 1 310 1 83 4 90 1 301 1 360 1 169 1 330 1 372 4 373 1 106 2 192 1 221 1 17 1 377 3 
199 1 212 1 133 1 309 1 310 1 83 2 252 1 301 1 330 1 372 2 371 1 286 1 149 1 221 1 377 1 17 1 
199 2 337 1 63 1 83 3 301 2 330 1 372 3 371 1 106 1 192 1 221 1 17 1 377 2 
199 1 337 1 83 1 301 1 34 1 372 1 134 1 17 1 
199 1 337 1 83 1 301 1 34 1 372 1 134 1 17 1 
88 1 109 1 52 1 
263 2 268 1 52 1 
67 1 71 2 219 1 304 2 186 2 128 2 375 2 228 2 
0 1 231 2 353 1 147 1 215 1 185 1 186 3 148 1 81 1 167 1 168 1 56 1 12 2 219 1 193 1 128 2 194 1 362 1 256 1 257 1 39 2 298 1 262 1 228 2 67 1 138 2 91 1 116 1 318 1 157 1 302 1 71 2 180 1 304 3 350 1 27 2 375 2 
293 1 84 1 71 1 219 1 304 1 186 1 128 1 296 1 375 1 228 1 
292 1 293 1 247 1 342 1 271 1 186 1 52 1 69 1 140 1 88 1 128 1 304 1 142 1 48 1 
292 1 293 1 247 2 342 1 186 1 52 1 228 1 71 1 140 1 88 1 128 1 304 1 142 1 375 1 48 2 
247 1 295 1 322 1 96 1 48 1 
189 1 11 1 247 2 88 1 295 1 96 1 52 1 48 2 
247 1 295 1 48 1 
293 1 247 1 324 1 186 1 296 1 228 1 84 1 71 1 219 1 128 1 304 1 96 1 375 1 48 1 
52 1 
189 1 173 1 247 2 88 1 295 1 96 1 52 1 48 2 
247 5 326 1 294 2 224 1 295 2 367 1 175 1 52 1 276 1 189 1 277 2 24 1 87 2 88 1 108 1 96 2 196 1 305 1 48 5 
67 1 109 1 
351 1 182 1 186 2 228 1 67 2 71 1 128 2 304 2 375 1 
312 1 341 1 73 1 
0 1 231 1 184 1 185 1 186 1 298 1 262 1 81 1 67 1 138 1 318 1 116 1 302 1 12 1 304 1 362 1 
0 1 231 1 185 1 186 2 298 1 81 1 262 1 138 1 116 1 318 1 302 1 71 1 12 1 73 1 128 1 304 2 334 1 95 1 362 1 375 1 
67 1 71 3 304 3 186 3 128 3 95 1 375 3 228 1 
293 1 71 1 304 1 186 1 128 1 296 1 375 1 
351 1 182 1 293 1 71 1 304 1 186 1 128 1 375 1 228 1 
0 1 182 1 231 1 353 1 147 1 215 1 247 1 185 1 162 1 186 4 148 1 81 1 56 1 12 1 219 1 128 3 194 1 334 1 362 1 292 1 257 1 293 1 342 1 39 1 298 1 262 1 228 2 67 1 138 1 91 1 116 1 318 1 157 1 302 1 71 3 303 1 140 1 180 1 304 4 142 1 95 1 27 2 375 3 48 1 
67 1 69 1 161 1 71 1 304 2 186 2 128 2 95 1 375 1 
292 1 182 1 293 1 247 1 342 1 186 3 273 1 228 1 52 1 71 3 140 1 303 1 128 3 304 3 142 1 334 1 95 2 375 3 48 1 
182 1 312 1 71 2 73 1 304 2 186 2 128 2 95 1 375 2 228 1 
0 1 231 1 185 1 186 1 262 1 81 1 298 1 67 1 138 1 318 1 116 1 302 1 12 1 304 1 362 1 
0 1 231 1 186 1 262 1 81 1 298 1 67 1 138 1 116 1 302 1 12 1 285 1 304 1 129 1 362 1 
160 1 213 1 215 1 327 1 148 1 254 1 253 1 312 2 193 2 287 1 255 1 194 1 257 1 341 2 39 4 227 1 91 1 157 1 158 1 73 2 180 2 94 1 27 2 74 1 
293 1 71 1 142 1 304 1 186 1 128 1 375 1 66 1 
67 1 182 1 69 1 161 1 71 4 174 1 40 1 304 5 186 5 128 5 334 1 95 2 375 4 228 1 
293 1 71 2 304 2 186 2 128 2 296 1 66 1 375 2 
205 1 176 1 
205 1 176 1 
183 1 246 1 
183 1 246 1 
183 1 246 1 
159 1 205 1 176 1 
159 1 205 1 176 1 
159 1 205 1 176 1 
290 1 205 1 176 1 
183 1 246 1 100 1 38 1 205 2 176 2 
311 1 205 1 176 1 
311 1 205 1 176 1 
311 1 205 1 176 1 
144 1 100 1 214 1 29 2 247 2 259 1 344 2 104 1 164 2 9 2 205 2 346 1 52 1 176 2 208 1 43 1 119 3 125 2 48 2 
214 1 120 1 247 1 29 1 216 1 186 2 344 1 274 1 9 1 205 1 176 1 67 1 123 1 119 1 71 2 220 1 267 1 125 1 304 2 128 2 290 1 289 1 375 2 48 1 
310 1 360 1 133 1 
310 1 133 1 149 1 
275 1 310 3 201 1 360 2 149 1 8 1 
275 1 310 2 360 1 321 1 149 1 8 1 
275 2 310 2 360 1 149 1 8 1 
145 1 120 1 247 5 163 1 52 2 276 1 189 1 277 1 254 1 87 1 14 1 287 1 127 2 88 1 289 1 363 1 294 1 295 1 115 2 227 1 207 1 263 3 348 2 24 3 158 1 267 1 268 1 143 1 376 1 96 4 305 2 48 5 
145 1 247 9 163 2 7 1 52 5 189 1 276 1 277 2 254 3 35 5 87 2 14 2 287 3 127 6 88 1 196 1 338 1 294 2 295 6 153 1 227 3 263 9 265 1 348 6 24 8 158 3 374 1 266 1 267 4 268 3 143 3 322 5 96 7 305 6 48 9 
247 3 163 1 52 3 277 1 254 1 87 1 14 1 88 1 287 1 127 2 196 1 363 1 294 1 115 1 227 1 263 4 348 2 24 3 158 1 267 1 268 2 96 2 376 1 143 1 48 3 305 2 
247 4 163 1 7 1 52 4 277 1 254 2 87 1 14 1 88 1 287 2 127 4 196 1 363 1 338 1 294 1 153 1 115 2 227 2 263 7 348 4 24 5 158 2 267 2 268 3 376 1 96 3 143 2 48 4 305 4 
117 1 109 1 298 1 
60 1 298 1 
340 1 
116 1 298 1 
223 1 112 1 116 1 117 2 298 3 81 1 
116 1 298 1 81 1 
114 1 298 1 
2 1 160 3 352 1 356 1 39 7 68 2 177 1 254 1 370 1 10 1 158 1 180 3 193 4 74 2 314 1 59 1 315 1 
2 1 160 3 352 1 356 1 39 7 68 2 177 1 254 1 370 1 10 1 158 1 180 3 193 4 74 2 314 1 59 1 315 1 
2 1 160 3 352 1 356 1 39 7 68 2 177 1 136 1 254 1 370 1 10 1 158 1 180 3 193 4 74 2 314 1 59 1 315 1 
1 1 2 2 352 2 160 10 356 1 272 1 148 1 328 1 254 4 53 1 10 2 193 16 287 3 194 1 314 2 315 1 59 5 61 1 257 1 113 4 39 31 297 3 226 1 227 3 177 1 68 3 370 1 91 1 158 4 211 1 180 15 27 2 143 3 74 5 
2 1 257 2 160 4 352 1 356 1 272 1 39 9 148 2 177 1 68 2 166 1 137 1 254 1 91 2 10 1 158 1 180 4 193 5 194 2 314 1 74 3 27 4 315 1 59 1 
199 1 231 1 83 1 156 1 138 1 279 1 301 1 371 1 172 1 372 1 12 1 178 1 17 1 
199 1 231 1 63 1 339 1 204 1 83 2 156 1 301 1 138 1 372 2 172 1 371 1 190 1 12 1 
231 1 83 1 138 1 306 1 63 1 339 1 371 1 172 1 372 1 12 1 190 1 
199 1 231 1 364 1 204 1 262 1 83 1 301 1 138 1 319 1 372 1 172 2 371 2 12 1 179 1 
199 1 231 1 83 1 156 1 138 1 301 1 371 1 172 1 372 1 12 1 190 1 178 1 17 1 
209 1 
97 1 231 2 4 1 146 1 101 2 270 1 271 1 186 1 187 1 52 2 189 3 276 1 277 1 280 1 329 2 105 2 12 2 14 1 292 1 293 1 150 1 342 1 294 1 343 2 295 6 298 1 69 1 116 1 24 2 302 1 304 1 305 2 355 1 76 1 247 5 78 1 79 1 251 2 313 4 86 1 87 1 88 1 128 1 362 1 37 1 262 2 263 2 138 2 42 1 92 2 140 1 142 1 268 2 378 2 48 5 
146 1 247 3 271 1 186 1 78 1 79 1 189 1 313 2 329 1 86 1 128 1 292 1 293 1 173 1 37 1 342 1 295 2 69 1 140 1 304 1 142 1 48 3 
146 1 247 3 271 1 186 1 78 1 79 1 52 1 189 1 251 1 313 3 86 1 128 1 88 1 292 1 293 1 173 1 37 1 342 1 295 1 69 1 140 1 304 1 142 1 48 3 
146 1 101 1 247 3 271 1 186 1 78 1 79 1 52 1 189 1 251 1 313 3 329 1 86 1 128 1 88 1 292 1 173 1 293 1 37 1 342 1 295 2 69 1 140 1 304 1 142 1 48 3 
146 1 101 4 271 1 186 1 52 5 189 3 276 1 277 1 280 1 283 1 329 4 105 2 18 1 292 1 293 1 342 1 294 1 295 7 343 2 69 1 24 1 304 1 305 1 247 5 78 1 79 1 251 4 313 6 86 1 87 1 128 1 88 5 173 1 37 1 132 1 42 1 92 2 140 1 142 1 46 1 268 2 47 1 48 5 378 2 
355 1 146 1 101 2 247 4 271 1 78 1 186 1 79 1 52 2 189 2 276 1 277 1 251 2 280 1 329 2 313 4 105 2 86 1 87 1 88 1 128 1 292 1 293 1 37 1 342 1 294 1 295 4 343 2 263 2 69 1 42 1 92 2 24 1 140 1 304 1 142 1 268 2 378 2 305 1 48 4 
146 1 101 2 247 4 271 1 186 1 78 1 79 1 52 1 189 2 276 1 277 1 251 2 280 1 329 2 313 4 105 2 86 1 87 1 88 1 128 1 18 1 292 1 293 1 37 1 342 1 132 1 294 1 295 4 343 2 69 1 42 1 92 2 24 1 140 1 46 1 304 1 142 1 268 2 378 2 305 1 48 4 
146 1 101 2 247 4 271 1 186 1 78 1 79 1 52 1 189 2 276 1 277 1 251 2 280 1 329 2 313 4 105 2 86 1 87 1 88 1 128 1 18 1 292 1 293 1 37 1 342 1 132 1 294 1 295 4 343 2 69 1 42 1 92 2 24 1 140 1 46 1 304 1 142 1 268 2 378 2 305 1 48 4 
146 1 101 2 247 4 102 1 271 1 186 1 78 1 79 1 52 1 189 2 276 1 277 1 251 2 280 1 329 2 313 4 236 2 86 1 87 1 88 1 128 1 361 1 292 1 293 1 37 1 21 1 342 1 294 1 295 4 263 2 69 1 92 2 24 1 26 2 140 1 46 1 304 1 142 1 378 2 305 1 48 4 
146 1 101 3 247 4 271 1 186 1 78 1 79 1 52 1 189 2 276 1 277 1 251 3 280 1 283 1 313 5 329 3 105 2 86 1 87 1 88 1 128 1 18 1 292 1 293 1 37 1 342 1 132 1 294 1 343 2 295 5 69 1 42 1 92 2 24 1 140 1 46 1 304 1 142 1 268 2 378 2 305 1 48 4 
146 1 101 3 247 4 271 1 186 1 78 1 79 1 52 1 189 2 276 1 277 1 251 3 280 1 283 1 313 5 329 3 105 2 86 1 87 1 88 1 128 1 18 1 292 1 293 1 37 1 342 1 132 1 294 1 343 2 295 5 69 1 42 1 92 2 24 1 140 1 46 1 304 1 142 1 268 2 378 2 305 1 48 4 
355 1 146 1 101 2 247 4 271 1 78 1 186 1 79 1 52 1 189 2 276 1 277 1 251 2 280 1 329 2 313 4 236 2 86 1 87 1 88 1 128 1 292 1 293 1 37 1 21 1 342 1 294 1 295 4 263 2 69 1 92 2 24 1 26 2 140 1 304 1 142 1 378 2 305 1 48 4 
160 2 215 1 356 1 148 1 253 1 254 1 312 1 10 1 193 3 109 1 194 1 314 1 315 1 257 1 341 1 39 6 67 2 177 1 68 1 91 1 157 1 158 1 73 1 180 3 27 2 74 2 
353 1 160 2 215 1 357 1 328 1 148 2 249 1 254 1 168 1 312 4 193 8 287 1 194 2 59 1 257 2 258 1 62 1 113 3 341 11 39 14 366 1 297 3 227 2 67 1 91 2 157 2 158 2 73 11 211 1 180 6 74 1 27 4 143 2 
0 1 231 1 353 1 184 1 215 1 185 1 186 2 81 1 148 1 359 1 312 1 168 1 171 1 12 1 128 1 193 1 194 1 334 1 362 1 258 1 257 1 39 2 345 1 298 1 262 1 67 1 138 1 116 1 318 1 91 1 302 1 157 1 71 1 304 2 180 1 95 1 375 1 27 2 
0 2 231 3 185 2 233 1 186 3 148 3 10 1 56 2 190 1 12 3 333 2 193 10 287 2 194 3 334 1 59 4 19 2 341 7 298 2 67 2 68 1 116 2 157 3 302 2 71 1 158 3 73 7 304 3 74 4 27 6 353 1 160 8 215 3 77 1 30 2 356 1 81 2 250 2 254 3 168 1 312 7 128 1 314 1 362 2 315 1 257 3 258 1 39 20 262 1 227 2 177 1 41 1 138 3 91 3 318 2 180 10 95 1 375 1 143 2 
231 8 97 1 353 1 215 2 270 1 186 1 148 2 278 1 279 1 253 1 168 1 190 1 12 8 128 1 193 1 194 2 335 1 237 1 362 2 200 1 257 2 365 1 39 2 65 1 298 3 262 2 138 7 91 2 116 2 302 2 157 2 71 1 304 1 180 1 230 1 95 1 350 2 375 1 27 4 
182 1 160 1 269 1 215 1 186 1 148 1 254 1 312 1 128 1 193 1 287 1 194 1 257 1 258 1 341 1 39 3 228 1 227 1 91 1 157 1 71 1 158 1 73 1 304 1 180 2 74 1 27 2 375 1 143 1 
257 1 160 1 215 1 341 1 39 2 148 1 227 1 253 1 312 1 91 1 157 1 158 1 73 1 255 1 193 2 194 1 27 2 59 1 
257 1 160 1 215 1 341 1 39 2 327 1 148 1 253 1 254 1 312 1 91 1 157 1 73 1 287 1 180 2 194 1 74 1 27 2 
160 2 215 1 148 1 253 1 254 1 312 2 193 2 287 1 194 1 59 1 257 1 341 2 39 4 227 1 91 1 157 1 158 1 73 2 180 2 143 1 27 2 74 1 
257 1 160 1 215 1 341 1 39 2 148 1 227 1 278 1 312 1 91 1 157 1 158 1 73 1 255 1 193 2 194 1 27 2 59 1 
257 1 160 1 215 1 341 1 39 2 327 1 148 1 278 1 254 1 312 1 91 1 157 1 73 1 287 1 180 2 194 1 74 1 27 2 
160 2 215 1 148 1 278 1 254 1 312 2 193 2 287 1 194 1 59 1 257 1 341 2 39 4 227 1 91 1 157 1 158 1 73 2 180 2 143 1 27 2 74 1 
160 2 215 1 148 1 254 1 312 2 193 2 287 1 194 1 59 1 257 1 341 2 39 4 227 1 91 1 157 1 158 1 73 2 180 2 143 1 27 2 74 1 
0 1 231 1 353 1 215 1 185 1 186 1 81 1 148 1 168 1 56 1 12 1 193 1 194 1 362 1 257 1 39 2 262 1 298 1 67 1 138 1 116 1 318 1 91 1 302 1 157 1 304 1 180 1 27 2 
0 1 231 1 353 1 215 1 186 1 80 1 81 1 148 1 168 1 12 1 285 1 193 1 194 1 129 1 362 1 257 1 39 2 262 1 298 1 67 1 138 1 116 1 91 1 302 1 157 1 304 1 180 1 27 2 
160 2 215 1 148 1 254 1 312 2 193 2 287 1 194 1 59 1 257 1 258 1 341 2 39 4 227 1 91 1 157 1 158 1 73 2 180 2 143 1 27 2 74 1 
0 1 231 1 160 2 215 1 185 1 186 1 81 1 148 1 250 1 254 1 279 1 312 2 56 1 12 1 287 1 193 2 194 1 362 1 59 1 257 1 341 2 39 4 298 1 227 1 138 1 318 1 116 1 91 1 302 1 157 1 158 1 73 2 180 2 304 1 74 1 27 2 143 1 
182 1 160 1 215 1 186 1 148 1 254 1 281 1 312 1 287 1 128 1 193 2 194 1 59 1 257 1 258 1 341 1 39 3 228 1 227 1 91 1 157 1 71 1 158 1 73 1 180 1 304 1 27 2 375 1 143 1 
160 2 354 1 325 1 328 1 148 2 166 1 254 1 235 1 193 4 287 1 194 2 222 1 59 1 198 1 130 1 257 2 113 2 39 9 297 1 299 1 227 1 91 2 320 1 158 1 211 1 180 5 74 1 27 4 143 1 
5 1 160 2 354 2 28 1 325 3 272 2 51 1 148 3 328 2 166 1 254 1 85 1 235 2 126 1 193 11 287 1 194 3 222 1 59 1 257 3 113 2 39 20 225 1 297 2 299 1 243 1 227 2 91 3 320 1 158 2 180 9 74 1 27 6 143 2 
5 1 160 2 354 1 325 1 328 1 148 2 166 1 254 1 235 1 193 4 287 1 194 2 222 1 59 1 198 1 257 2 113 2 39 9 297 1 299 1 227 1 91 2 320 1 158 1 211 1 180 5 74 1 27 4 143 1 
5 1 160 2 354 1 325 1 328 1 148 2 166 1 254 1 235 1 193 4 287 1 194 2 222 1 59 1 198 1 257 2 113 2 39 9 297 1 299 1 227 1 91 2 320 1 158 1 211 1 180 5 74 1 27 4 143 1 
5 1 160 12 28 1 354 1 325 3 356 1 272 1 51 1 328 2 148 2 249 2 166 1 254 7 85 1 10 1 235 1 126 1 193 24 287 6 194 2 314 1 222 1 315 1 59 6 257 2 113 4 39 46 225 1 297 4 243 1 299 1 227 6 68 1 177 1 91 2 320 1 158 7 211 2 180 22 74 6 27 4 143 6 
100 1 43 1 29 1 125 1 141 1 344 1 205 1 9 1 346 1 176 1 
220 1 290 1 
118 1 218 1 29 1 125 1 344 1 245 1 205 1 9 1 176 1 
144 1 100 1 214 1 247 1 29 1 259 1 344 1 104 1 164 1 9 1 205 1 346 1 52 1 176 1 43 1 119 2 125 1 48 1 
144 1 100 1 214 1 247 1 29 1 259 1 344 1 104 1 164 1 9 1 205 1 346 1 52 1 176 1 43 1 119 2 125 1 48 1 
144 1 100 1 214 1 247 1 29 1 259 1 344 1 104 1 164 1 9 1 205 1 346 1 52 1 176 1 43 1 119 2 125 1 48 1 
38 1 159 1 82 1 
38 1 159 1 82 1 
311 1 33 1 
311 1 38 1 33 1 
216 1 274 1 
247 1 29 1 120 1 216 1 186 2 164 1 9 1 274 1 123 1 125 1 220 1 128 2 289 1 290 1 336 1 259 1 344 1 205 1 176 1 67 1 119 1 71 2 267 1 304 2 96 1 375 2 48 1 
159 1 82 1 
311 1 38 1 33 1 
231 2 353 1 99 1 215 1 186 2 148 1 168 1 12 2 128 2 193 1 194 1 335 1 362 1 291 1 258 1 257 1 202 1 39 2 65 1 298 1 300 1 138 2 116 1 91 1 44 1 302 1 157 1 304 2 180 1 350 2 27 2 
240 1 201 1 231 2 323 1 241 1 133 1 165 1 135 1 310 2 369 1 138 2 279 1 360 1 302 1 190 1 12 2 149 1 16 1 362 1 
240 1 201 1 231 1 3 1 323 1 133 1 165 1 135 1 310 2 138 1 360 1 302 1 190 1 12 1 149 1 16 1 362 1 
231 1 97 1 241 1 270 1 298 1 262 1 368 1 138 1 116 1 302 1 12 1 244 1 16 1 362 1 
240 1 201 1 231 1 323 1 241 1 133 1 165 1 135 1 310 2 369 1 138 1 360 1 302 1 190 1 12 1 149 1 16 1 362 1 
332 1 
24 1 88 1 108 1 109 1 367 1 52 1 305 1 
247 1 52 2 276 1 189 1 277 1 105 1 87 1 88 1 294 1 343 1 295 1 263 1 42 1 24 1 268 1 305 1 48 1 
231 1 6 1 247 2 30 1 50 1 248 1 81 1 52 3 189 1 276 2 277 2 254 1 12 1 87 2 14 1 107 1 287 1 127 3 110 1 362 1 60 2 223 1 152 1 294 2 295 2 262 1 298 4 227 1 263 6 138 1 348 3 116 1 117 1 24 4 302 2 158 1 140 1 143 1 268 3 305 3 48 2 181 1 
28 1 76 1 247 1 31 1 358 1 328 1 52 5 189 1 276 2 277 2 254 2 85 1 14 1 87 2 15 1 126 1 127 5 287 2 88 2 113 1 294 2 295 1 225 1 297 1 243 1 227 2 263 6 348 5 24 8 158 2 72 2 268 3 143 2 48 1 305 5 
247 1 121 1 324 1 31 1 356 1 186 1 276 1 277 1 254 1 84 1 10 1 219 1 87 1 128 1 314 1 18 1 293 1 294 1 296 1 228 1 24 2 158 2 71 1 72 2 304 1 375 1 48 1 305 2 
294 1 367 1 52 1 276 1 277 1 24 1 87 1 108 1 88 1 305 1 
227 1 52 2 263 4 254 1 348 2 24 2 158 1 127 2 287 1 143 1 268 2 305 2 
189 1 247 1 88 1 295 1 52 1 48 1 
231 3 97 1 4 1 232 1 49 1 76 1 247 2 270 1 308 1 81 1 276 1 189 1 277 2 57 1 12 3 87 2 14 1 196 1 362 2 203 1 150 1 294 2 295 2 154 1 298 2 262 2 264 1 138 3 116 2 24 1 302 3 305 1 48 2 
0 1 231 1 353 1 147 1 215 1 185 1 186 3 148 1 81 1 56 1 12 1 219 1 128 2 194 1 362 1 257 1 39 1 262 1 298 1 228 2 67 1 138 1 91 1 318 1 116 1 302 1 157 1 71 2 180 1 304 3 27 2 375 2 
76 1 294 1 52 2 276 1 277 1 263 2 24 1 87 1 14 1 127 1 88 1 268 1 305 1 
98 1 125 1 344 1 
98 1 125 1 344 1 
98 1 125 1 344 1 
307 1 216 1 125 1 344 1 346 1 
139 1 125 1 344 1 
139 1 125 1 344 1 
139 1 125 1 344 1 
125 1 344 1 
205 1 176 1 
257 2 160 3 356 1 39 8 272 1 148 2 68 1 177 1 254 1 91 2 10 1 158 1 180 4 193 4 194 2 74 2 27 4 314 1 59 1 315 1 
160 2 356 1 39 6 68 1 177 1 254 1 10 1 158 1 180 3 193 3 109 1 314 1 74 2 315 1 
257 1 160 2 39 4 261 1 148 1 227 1 254 1 91 1 158 1 180 2 287 1 193 2 194 1 74 1 27 2 143 1 59 1 
160 2 113 2 39 7 297 1 328 1 227 1 254 1 158 1 211 1 287 1 180 4 193 3 74 1 143 1 59 1 
160 9 356 1 272 2 148 2 249 1 254 3 10 2 193 11 287 2 194 2 314 2 315 1 59 4 257 2 113 2 39 23 366 1 297 2 155 1 227 2 68 1 177 1 91 2 158 3 211 1 180 12 143 2 74 5 27 4 
113 1 39 1 180 1 
39 1 193 1 297 1 
257 1 160 3 30 1 39 6 148 1 261 1 227 1 254 1 91 1 158 1 180 3 193 3 287 1 194 1 27 2 143 1 74 2 59 1 
160 2 28 1 328 1 148 1 166 1 254 2 85 1 126 1 193 6 287 2 194 1 59 1 257 1 113 1 39 12 225 1 297 1 243 1 227 2 91 1 158 2 180 6 27 2 143 2 74 1 
160 2 356 1 39 6 254 1 10 1 158 1 193 3 180 3 314 1 74 1 59 1 
257 1 160 2 39 3 272 1 155 1 148 1 177 1 91 1 10 1 193 1 180 2 194 1 74 1 314 1 27 2 59 1 315 1 
257 1 160 5 121 1 39 10 356 1 148 1 166 1 254 2 91 1 10 2 158 2 193 5 180 5 194 1 27 2 314 2 74 3 59 2 
257 1 160 1 39 2 148 1 227 1 166 1 91 1 158 1 193 2 194 1 27 2 59 1 
257 1 160 2 39 4 148 1 227 1 166 1 254 1 91 1 158 1 180 2 287 1 193 2 194 1 74 1 27 2 143 1 59 1 
198 1 257 3 160 2 272 1 39 3 155 1 148 3 166 1 91 3 10 1 180 2 193 1 194 3 27 6 314 1 74 1 59 1 
1 1 160 12 356 2 272 2 328 1 148 5 166 1 53 1 254 5 10 3 193 16 287 3 194 5 314 3 315 1 59 5 198 1 61 1 257 5 113 4 39 34 297 3 155 1 261 1 227 3 68 1 177 1 91 5 158 5 211 1 180 18 27 10 143 3 74 7 
160 2 356 1 328 1 148 1 166 1 254 1 10 1 193 4 194 1 314 1 315 1 257 1 113 1 39 8 225 1 297 1 68 1 177 1 91 1 158 1 180 4 27 2 74 2 
160 3 356 1 328 1 148 2 166 1 254 1 10 1 193 6 194 2 314 1 315 1 59 1 257 2 113 2 39 11 225 1 297 1 261 1 227 1 68 1 177 1 91 2 158 2 211 1 180 5 74 2 27 4 143 1 
160 4 28 1 356 1 272 1 328 1 148 3 166 1 254 3 85 1 10 1 126 1 193 9 287 2 194 3 314 1 315 1 59 1 257 3 113 1 39 19 225 1 297 1 261 1 243 1 227 2 68 1 177 1 91 3 158 3 180 10 27 6 143 2 74 3 
160 5 28 1 356 1 272 1 328 1 148 3 166 1 254 2 85 1 10 1 126 1 193 10 287 1 194 3 314 1 315 1 59 2 257 3 113 1 39 17 225 1 297 1 261 1 243 1 227 2 68 1 177 1 91 3 158 3 180 7 27 6 143 2 74 3 
160 2 356 1 328 1 148 1 166 1 254 1 10 1 193 4 194 1 314 1 315 1 257 1 113 1 39 8 225 1 297 1 68 1 177 1 91 1 158 1 180 4 27 2 74 2 
160 2 28 1 328 1 148 1 166 1 254 2 85 1 126 1 193 6 287 2 194 1 59 1 257 1 113 1 39 12 225 1 297 1 243 1 227 2 91 1 158 2 180 6 27 2 143 2 74 1 
160 5 28 1 356 1 272 2 328 1 148 4 166 1 254 2 85 1 10 1 126 1 193 10 287 1 194 4 314 1 315 1 59 2 257 4 113 1 39 18 225 1 297 1 261 1 243 1 227 2 68 1 177 1 91 4 158 3 180 8 27 8 143 2 74 3 
160 6 28 1 272 2 328 1 148 4 166 1 254 2 85 1 126 1 193 9 287 2 194 4 59 3 198 1 257 4 113 1 39 16 225 1 297 1 243 1 227 3 91 4 158 3 180 7 27 8 143 3 74 3 
160 6 39 7 356 1 177 1 254 1 10 3 158 1 180 4 193 3 314 3 74 3 315 2 59 3 
160 4 28 1 356 1 272 2 328 1 148 4 166 1 254 2 85 1 10 1 126 1 193 10 287 1 194 4 314 1 315 1 59 1 198 1 257 4 113 1 39 18 225 1 297 1 243 1 227 2 68 1 177 1 91 4 158 3 180 8 27 8 143 2 74 3 
67 1 69 1 161 1 284 1 304 1 186 1 128 1 
161 1 131 1 186 1 32 1 188 1 67 1 69 1 210 1 170 1 284 1 128 1 304 1 
97 1 231 1 138 1 116 1 302 1 12 1 270 1 109 1 362 1 298 1 262 1 
0 1 231 1 186 2 298 1 81 1 262 1 67 1 138 1 116 1 318 1 302 1 71 1 12 1 128 1 304 2 95 1 375 1 362 1 
292 1 0 1 231 1 293 1 49 1 114 1 64 1 186 2 298 3 81 2 67 1 138 1 116 2 318 1 302 1 71 1 12 1 142 1 128 2 304 2 95 1 375 2 362 1 
0 1 231 2 49 1 186 2 81 2 12 2 285 1 58 1 128 2 362 1 292 1 293 1 64 1 114 1 298 3 67 1 138 2 116 2 302 1 71 1 304 2 142 1 95 1 375 2 
231 3 49 1 247 2 81 1 52 1 12 3 58 1 88 1 362 1 60 1 64 1 114 1 295 1 298 4 262 1 317 1 138 3 23 1 116 1 117 1 302 1 140 1 48 2 
60 1 231 3 49 1 247 2 114 1 64 1 295 1 248 1 262 1 81 1 298 4 52 1 138 3 116 1 117 1 302 1 12 3 140 1 58 1 88 1 362 1 48 2 
231 1 138 1 365 1 302 1 12 1 362 1 
200 1 231 7 223 1 365 1 203 1 122 1 308 1 262 2 81 1 298 3 279 1 138 6 116 2 302 3 190 1 12 7 230 1 350 1 335 1 237 1 362 2 
0 1 231 1 160 2 215 2 185 1 356 1 186 2 81 1 148 2 250 1 254 1 279 1 312 1 10 1 56 1 12 1 193 3 128 1 333 1 194 2 314 1 362 1 315 1 258 1 257 2 341 1 39 6 298 1 67 2 68 1 177 1 138 1 116 1 91 2 318 1 44 1 302 1 157 2 158 1 71 1 73 1 180 3 304 2 95 1 74 2 375 1 27 4 
231 1 6 1 232 1 247 3 248 1 52 1 276 2 189 1 277 2 12 1 87 2 107 1 88 1 108 1 110 1 60 1 294 2 295 2 367 1 262 1 298 2 138 1 24 1 117 1 140 1 96 1 305 1 48 3 
231 2 223 1 365 1 152 1 81 1 298 2 279 1 138 2 116 1 117 1 302 2 12 2 362 1 
231 4 97 1 270 1 262 1 298 1 138 4 279 1 116 1 55 1 302 1 12 4 58 1 362 1 
231 2 203 1 49 1 233 1 308 1 81 1 298 1 138 2 264 1 116 1 302 2 12 2 57 1 362 1 
310 1 231 1 138 1 323 1 302 1 12 1 133 1 149 1 362 1 262 1 
231 2 202 1 298 1 279 1 138 2 116 1 302 1 12 2 190 1 335 1 362 1 
97 1 231 5 49 1 270 1 262 1 298 3 138 4 279 1 116 2 55 1 302 2 12 5 230 1 335 1 362 2 237 1 
97 1 231 5 49 1 270 1 262 1 298 3 138 4 279 1 116 2 55 1 302 2 12 5 335 1 362 2 237 1 238 1 
0 1 231 1 186 2 298 1 81 1 262 1 67 1 138 1 116 1 302 1 71 1 12 1 285 1 128 1 304 2 95 1 375 1 362 1 
231 1 223 1 203 1 49 1 122 1 308 1 81 1 298 1 138 1 116 1 302 2 12 1 362 1 
300 1 99 1 54 1 25 1 304 1 186 1 128 1 45 1 291 1 
197 1 36 1 45 1 
67 1 54 1 25 1 45 1 288 1 
292 1 197 1 293 1 20 1 247 2 342 1 52 1 67 1 54 2 25 2 140 1 303 1 88 1 142 1 45 1 36 1 288 2 96 1 48 2 
330 1 109 1 221 1 377 1 
199 1 83 1 301 1 330 1 372 1 221 1 377 1 
371 1 372 1 93 1 
199 1 22 1 83 3 234 1 301 1 372 3 330 1 13 1 286 2 221 1 377 1 17 1 
199 1 83 2 301 1 63 1 330 1 372 2 151 1 221 1 377 1 
310 1 199 1 90 1 83 1 301 1 360 1 372 1 133 1 106 1 377 1 17 1 
199 1 83 1 301 1 330 1 372 1 377 1 17 1 
199 1 83 1 301 1 330 2 372 1 221 1 17 1 
199 2 260 1 83 2 301 2 282 1 217 1 330 1 372 2 377 1 17 1 
199 1 239 1 63 2 83 3 301 1 70 1 330 1 372 3 106 1 192 1 221 1 17 1 377 2 
199 1 201 1 75 1 63 1 133 1 310 2 83 2 301 1 360 1 330 1 372 2 149 1 221 1 377 1 17 1 
199 2 63 2 151 1 83 4 301 2 169 1 330 1 372 4 106 1 192 1 221 1 17 1 377 2 
199 1 83 1 301 1 330 1 372 1 221 1 377 1 17 1 
199 1 63 2 89 1 22 1 83 4 301 1 330 2 372 4 286 1 13 1 106 1 192 1 221 2 377 3 
199 1 89 1 103 1 134 1 83 1 301 1 372 1 330 1 331 1 221 1 17 1 
199 1 22 1 83 3 301 1 372 3 330 1 191 1 13 2 286 2 221 1 377 1 17 1 
347 1 124 2 111 1 377 2 
199 1 83 1 301 1 372 1 349 1 17 1 
199 1 83 2 70 1 301 1 63 1 330 1 372 2 221 1 377 1 17 1 
242 1 
199 1 83 1 301 1 330 1 372 1 221 1 377 1 17 1 
199 1 83 3 70 1 301 1 63 1 330 1 372 3 286 1 221 1 377 1 17 1 
83 1 63 1 372 1 106 1 192 1 377 1 
330 1 377 1 

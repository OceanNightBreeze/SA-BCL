#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 19 198 333 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
151 4 281 2 0 1 16 9 236 2 283 1 314 2 157 6 287 1 18 1 213 1 133 1 320 1 135 1 74 9 191 5 137 1 246 2 170 3 222 2 172 1 140 1 122 1 374 1 196 2 103 2 278 1 179 1 
151 4 281 2 0 1 16 9 236 2 283 1 314 2 157 6 287 1 18 1 213 1 133 1 320 1 135 1 74 9 191 5 137 1 246 2 170 3 222 2 172 1 140 1 122 1 374 1 196 2 103 2 278 1 179 1 
151 5 281 2 0 1 16 10 236 2 283 1 314 2 157 7 287 1 18 1 213 1 133 1 320 1 135 1 74 10 191 6 137 1 246 2 170 4 222 2 172 1 140 1 122 1 374 1 196 2 103 2 278 1 179 1 
151 3 281 1 0 1 16 7 236 2 283 1 314 2 157 4 287 1 18 1 213 1 133 1 320 1 135 1 74 7 191 4 137 1 246 2 170 2 222 2 172 1 140 1 122 1 374 1 196 2 103 2 179 1 
135 1 74 4 191 3 151 2 137 1 246 1 281 2 0 1 170 1 16 4 222 1 236 1 157 3 374 1 18 1 196 1 103 1 278 1 
135 1 40 1 191 1 74 2 137 1 246 1 16 2 222 1 224 1 314 1 374 1 317 1 196 1 103 1 213 1 179 1 
135 1 374 1 191 2 74 3 151 1 137 1 103 2 170 1 16 3 222 2 314 1 157 1 133 1 
151 4 281 2 0 1 16 9 236 1 314 1 157 7 257 1 18 1 214 1 133 1 320 1 135 1 74 9 191 5 137 1 246 1 170 3 222 2 140 1 374 1 196 1 103 2 278 1 
151 4 281 2 0 1 16 9 236 1 314 1 157 7 257 1 18 1 214 1 133 1 320 1 135 1 74 9 191 5 137 1 246 1 170 3 222 2 140 1 374 1 196 1 103 2 278 1 
342 1 277 1 376 1 
270 1 169 2 376 1 
248 2 76 2 160 2 30 2 251 1 233 1 50 2 247 2 
148 1 306 1 62 2 204 1 312 1 128 1 360 1 238 1 240 1 160 3 209 1 4 1 267 1 110 1 166 1 95 1 96 2 50 3 20 1 76 2 293 1 139 1 24 1 247 2 176 1 28 1 248 2 30 2 33 1 56 2 37 1 251 1 58 2 353 1 85 2 233 1 201 1 
76 1 323 1 247 1 248 1 30 1 160 1 210 1 187 1 251 1 50 1 
47 1 248 1 342 1 364 1 77 1 323 1 288 1 160 1 376 1 125 1 302 1 232 1 50 1 208 1 
47 2 342 1 364 1 288 1 160 2 210 1 187 1 50 2 76 2 323 2 77 2 247 2 175 1 248 2 30 2 376 1 125 1 302 1 251 1 
47 1 27 1 77 1 324 1 184 1 
47 2 27 1 342 1 11 1 77 2 376 1 324 1 162 1 
47 1 77 1 324 1 
76 1 323 1 77 1 247 1 47 1 175 1 27 1 248 1 30 1 160 1 187 1 210 1 251 1 50 1 
376 1 
47 2 27 1 342 1 11 1 77 2 376 1 324 1 237 1 
106 2 77 5 138 1 324 2 66 1 47 5 121 1 27 2 130 1 158 1 342 1 10 1 11 1 376 1 104 1 365 2 231 1 145 1 243 2 
277 1 233 1 
76 1 323 1 182 1 247 1 248 2 229 1 144 1 160 2 30 1 50 2 233 1 
341 1 255 1 129 1 
148 1 204 1 62 1 139 1 28 1 238 1 160 1 290 1 56 1 4 1 267 1 110 1 85 1 233 1 50 1 201 1 
21 1 148 1 76 1 204 1 62 1 139 1 247 1 341 1 28 1 238 1 248 1 160 2 56 1 267 1 4 1 110 1 7 1 85 1 201 1 50 2 
76 2 323 1 182 1 247 2 248 2 160 2 7 1 50 2 233 1 
248 1 76 1 323 1 160 1 187 1 50 1 247 1 
76 1 323 1 247 1 248 1 144 1 229 1 30 1 160 1 50 1 
148 1 306 1 204 1 62 1 64 1 312 1 128 1 360 1 47 1 238 1 364 1 160 4 288 1 209 1 267 1 4 1 110 1 95 1 7 1 96 1 50 4 20 1 21 1 76 3 323 1 77 1 139 1 247 3 176 1 28 1 248 3 144 1 30 2 12 1 125 1 56 1 302 1 37 1 251 1 58 2 353 1 85 1 233 1 201 1 
349 1 76 1 323 1 182 1 247 1 208 1 248 2 160 2 7 1 50 2 233 1 
21 1 76 3 168 1 77 1 323 1 247 3 47 1 248 3 144 1 364 1 30 1 160 3 288 1 376 1 12 1 125 1 302 1 7 2 50 3 
76 2 129 1 247 2 248 2 341 1 144 1 30 1 160 2 7 1 50 2 
148 1 204 1 62 1 139 1 238 1 28 1 160 1 56 1 4 1 267 1 110 1 85 1 233 1 50 1 201 1 
148 1 204 1 62 1 371 1 79 1 238 1 28 1 160 1 56 1 4 1 267 1 85 1 233 1 50 1 201 1 
255 2 310 1 357 1 312 1 128 2 129 2 156 1 207 1 360 1 341 2 318 1 96 4 20 1 117 1 24 2 296 1 194 1 176 1 142 1 143 1 303 1 37 1 58 2 353 1 
76 1 323 1 286 1 247 1 248 1 160 1 302 1 50 1 
21 1 349 1 76 4 78 1 323 1 182 1 208 1 247 4 228 1 248 5 144 1 160 5 30 1 7 2 50 5 233 1 
248 1 76 1 323 1 160 1 187 1 50 1 247 1 
336 1 206 1 
336 1 206 1 
253 1 80 1 
253 1 80 1 
253 1 80 1 
36 1 336 1 206 1 
178 1 336 1 206 1 
253 1 22 1 336 2 80 1 206 2 362 1 
36 1 336 1 206 1 
36 1 336 1 206 1 
274 1 336 1 206 1 
274 1 336 1 206 1 
274 1 336 1 206 1 
292 1 114 1 115 2 279 1 22 1 322 1 77 2 100 1 282 2 336 2 338 2 206 2 284 3 316 2 47 2 186 1 376 1 32 1 73 2 
252 1 279 1 153 1 282 1 336 1 235 1 44 1 206 1 338 1 284 1 47 1 160 2 90 1 73 1 50 2 115 1 76 2 77 1 118 1 247 2 248 2 178 1 197 1 233 1 
196 1 246 1 236 1 
40 1 196 1 246 1 
40 1 116 1 246 3 300 1 200 1 236 2 
203 1 40 1 246 2 300 1 200 1 236 1 
40 1 246 2 300 1 200 2 236 1 
106 1 357 1 154 1 335 1 47 5 342 1 185 1 160 1 187 1 210 1 365 1 319 2 243 1 50 1 53 1 76 1 169 1 323 1 77 5 138 2 324 1 101 1 25 1 296 1 373 1 247 1 175 1 121 1 27 4 248 1 249 1 11 1 30 1 197 1 376 1 104 1 251 1 
106 1 357 1 154 1 335 1 184 2 47 5 88 1 342 1 160 1 187 1 210 1 365 1 132 2 243 1 50 1 219 1 53 1 76 1 169 1 323 1 77 5 138 2 324 3 101 1 25 1 296 1 247 1 175 1 121 1 27 4 248 1 249 1 11 1 30 1 197 1 376 1 104 1 251 1 
106 1 357 1 335 1 154 1 47 3 342 1 185 1 365 1 319 1 243 1 270 2 53 2 77 3 169 4 138 2 101 1 296 1 373 1 27 2 142 1 249 2 376 3 197 1 104 3 303 1 145 1 
106 1 357 2 335 1 154 2 47 4 342 1 185 1 365 1 319 2 243 1 270 3 53 4 169 7 77 4 138 4 101 1 296 2 373 1 27 3 142 2 276 1 249 4 376 4 197 2 104 5 303 2 145 1 59 1 146 1 
28 1 277 1 152 1 
28 1 344 1 
98 1 
28 1 148 1 
28 3 148 1 152 2 107 1 91 1 201 1 
28 1 148 1 201 1 
28 1 361 1 
254 1 63 1 294 1 24 4 128 3 296 1 194 3 142 1 143 2 259 1 260 1 230 1 29 1 262 1 301 1 218 2 96 7 
254 1 63 1 294 1 24 4 128 3 296 1 194 3 142 1 143 2 259 1 260 1 230 1 29 1 262 1 301 1 218 2 96 7 
254 1 294 1 63 1 24 4 128 3 296 1 194 3 142 1 143 2 259 1 260 1 230 1 29 1 262 1 301 1 212 1 218 2 96 7 
254 1 60 1 309 1 63 2 128 3 360 1 340 1 259 1 108 1 262 1 211 1 93 1 96 6 218 1 20 1 24 3 194 2 176 1 143 1 230 1 29 1 37 1 58 2 352 1 
330 1 254 1 63 1 128 4 360 2 259 1 260 1 262 1 96 9 218 2 20 2 294 1 24 5 296 1 194 4 176 2 142 1 143 3 230 1 301 1 37 2 58 4 14 1 352 1 
40 1 354 1 62 1 16 2 236 1 314 1 157 1 238 1 89 1 70 1 109 1 4 1 366 1 94 1 111 1 135 1 191 1 74 2 116 1 137 1 246 2 222 1 350 1 82 1 374 1 196 1 31 1 103 1 56 1 85 1 
147 1 40 1 354 1 62 1 16 3 236 1 314 1 157 2 238 1 89 1 70 1 109 1 4 1 366 1 94 1 291 1 135 1 191 1 74 3 116 1 137 1 246 2 222 1 8 1 82 1 196 1 31 1 103 1 56 1 85 1 
147 1 40 1 62 1 16 2 236 1 314 1 157 2 238 1 89 1 109 1 4 1 366 1 94 1 135 1 191 1 74 2 116 1 137 1 246 2 8 1 82 1 196 1 31 1 56 1 85 1 
148 1 62 1 204 1 311 1 16 1 314 2 238 1 48 1 109 2 4 1 366 2 94 2 291 1 74 1 222 1 173 1 119 1 55 1 28 1 103 1 56 1 35 1 85 1 
40 1 354 1 62 1 16 1 236 1 314 1 238 1 89 1 70 1 109 1 4 1 366 1 94 1 111 1 74 1 116 1 246 2 222 1 8 1 82 1 374 1 196 1 31 1 103 1 56 1 85 1 
280 1 
87 1 183 2 47 5 238 1 342 1 131 2 288 1 3 1 4 1 241 1 346 1 92 1 243 1 50 1 189 4 245 2 138 2 101 1 55 1 248 1 11 3 56 2 104 2 302 1 148 1 106 1 204 2 62 2 155 2 67 2 315 2 208 1 69 1 364 1 161 1 160 1 365 1 217 2 270 2 271 1 169 2 77 5 323 1 324 6 81 1 121 1 26 1 326 1 28 1 376 2 125 1 124 1 35 1 232 1 85 2 
183 1 237 1 208 1 47 3 364 1 160 1 161 1 288 1 3 1 92 1 50 1 189 2 271 1 77 3 323 1 324 2 26 1 248 1 11 1 125 1 302 1 232 1 
237 1 208 1 47 3 131 1 342 1 364 1 160 1 161 1 288 1 3 1 92 1 50 1 189 3 271 1 77 3 323 1 324 1 26 1 248 1 11 1 376 1 125 1 302 1 232 1 
183 1 237 1 155 1 208 1 47 3 131 1 342 1 364 1 160 1 161 1 288 1 3 1 92 1 50 1 189 3 271 1 77 3 323 1 324 2 26 1 248 1 11 1 376 1 125 1 302 1 232 1 
333 1 183 2 237 1 155 2 208 1 47 3 364 1 161 1 160 1 288 1 3 1 92 1 19 1 50 1 189 2 271 1 77 3 323 1 324 3 26 1 248 1 11 1 198 1 125 1 302 1 232 1 
106 1 87 1 183 2 155 2 67 2 315 2 208 1 47 4 342 1 131 2 364 1 161 1 160 1 288 1 3 1 365 1 241 1 92 1 217 2 243 1 50 1 270 2 189 4 245 2 271 1 169 2 77 4 323 1 324 4 138 1 26 1 121 1 326 1 248 1 11 2 376 2 125 1 104 1 302 1 232 1 
106 1 87 1 183 2 234 1 155 2 67 2 315 2 208 1 47 4 342 1 131 2 364 1 160 1 161 1 288 1 3 1 365 1 92 1 217 2 243 1 50 1 19 1 270 2 189 4 245 2 271 1 77 4 323 1 324 4 138 1 193 1 26 1 121 1 326 1 248 1 11 2 376 1 125 1 104 1 302 1 232 1 
106 1 87 1 183 2 234 1 155 2 67 2 315 2 208 1 47 4 342 1 131 2 364 1 160 1 161 1 288 1 3 1 365 1 92 1 217 2 243 1 50 1 19 1 270 2 189 4 245 2 271 1 77 4 323 1 324 4 138 1 193 1 26 1 121 1 326 1 248 1 11 2 376 1 125 1 104 1 302 1 232 1 
106 1 183 2 337 2 155 2 68 2 315 2 208 1 47 4 363 1 342 1 131 2 364 1 160 1 161 1 288 1 3 1 365 1 92 1 243 1 50 1 189 4 52 1 245 2 271 1 169 2 77 4 323 1 324 4 138 1 193 1 26 1 121 1 326 1 248 1 11 2 376 1 125 1 104 1 302 1 377 1 232 1 
106 1 87 1 234 1 183 3 67 2 155 3 315 2 208 1 47 4 342 1 131 3 364 1 160 1 161 1 288 1 3 1 365 1 92 1 217 2 243 1 50 1 19 1 270 2 189 5 245 2 271 1 77 4 323 1 138 1 324 5 193 1 121 1 26 1 326 1 248 1 11 2 376 1 125 1 198 1 104 1 302 1 232 1 
106 1 87 1 234 1 183 3 67 2 155 3 315 2 208 1 47 4 342 1 131 3 364 1 160 1 161 1 288 1 3 1 365 1 92 1 217 2 243 1 50 1 19 1 270 2 189 5 245 2 271 1 77 4 323 1 138 1 324 5 193 1 121 1 26 1 326 1 248 1 11 2 376 1 125 1 198 1 104 1 302 1 232 1 
106 1 183 2 337 2 155 2 68 2 315 2 208 1 47 4 363 1 342 1 131 2 364 1 161 1 160 1 288 1 3 1 365 1 241 1 92 1 243 1 50 1 189 4 245 2 271 1 169 2 77 4 323 1 324 4 138 1 26 1 121 1 326 1 248 1 11 2 376 1 125 1 104 1 302 1 232 1 
254 1 255 1 312 1 129 1 128 3 360 1 341 1 259 1 260 1 96 6 218 1 20 1 117 1 294 1 24 3 296 1 194 2 176 1 143 2 142 1 277 1 301 1 37 1 58 2 353 1 233 2 
255 16 357 4 154 4 312 1 128 9 129 6 360 2 340 4 2 1 341 16 108 1 262 2 163 1 242 2 93 4 95 1 96 22 20 2 24 13 296 4 297 1 275 1 194 4 176 2 195 2 143 2 142 2 33 1 303 2 37 2 58 4 353 2 233 1 
148 1 62 1 204 1 312 1 129 1 128 1 360 1 238 1 2 1 239 1 160 2 290 1 267 1 4 1 110 1 7 1 95 1 50 2 96 2 20 1 21 1 76 1 139 1 24 1 120 1 247 1 176 1 28 1 248 1 33 1 56 1 37 1 58 2 85 1 353 1 233 1 201 1 39 1 
128 10 129 7 2 1 238 2 341 7 4 2 5 1 95 1 7 1 50 3 96 20 51 2 347 2 294 1 139 2 8 1 296 3 9 2 247 1 194 8 143 4 142 3 248 1 301 1 56 3 303 2 58 6 353 3 201 2 254 1 306 2 148 2 255 7 62 3 204 1 357 2 154 2 312 3 360 3 259 1 260 1 160 3 262 4 267 2 110 2 218 1 369 1 20 3 21 1 76 1 24 10 226 2 176 3 28 2 33 1 83 1 37 3 85 3 233 2 
86 1 334 1 128 1 1 1 238 3 289 1 4 4 95 1 7 1 96 2 50 1 293 2 99 1 8 1 350 1 247 1 141 1 55 1 248 1 56 7 58 4 353 2 201 1 148 3 204 2 62 6 312 2 358 1 359 1 360 2 160 1 72 1 20 2 76 1 117 1 24 1 171 1 176 2 28 4 33 1 35 1 37 2 85 7 
255 1 357 1 154 1 312 1 129 1 128 2 360 1 341 1 2 1 343 1 160 1 50 1 96 3 20 1 76 1 24 1 296 1 194 1 247 1 176 1 143 1 248 1 142 1 144 1 30 1 303 1 37 1 58 2 353 1 
20 1 255 1 117 1 310 1 357 1 24 2 312 1 129 1 296 1 360 1 194 1 176 1 341 1 262 1 37 1 58 2 353 1 96 2 
20 1 255 1 117 1 312 1 129 1 128 2 156 1 360 1 194 1 176 1 143 1 341 1 142 1 303 1 37 1 58 2 353 1 96 2 
255 2 357 1 154 1 312 1 129 2 128 2 360 1 341 2 262 1 96 4 20 1 117 1 24 2 296 1 194 2 176 1 142 1 143 1 303 1 37 1 58 2 353 1 
20 1 255 1 310 1 357 1 334 1 24 2 312 1 129 1 296 1 360 1 194 1 176 1 341 1 262 1 37 1 58 2 353 1 96 2 
20 1 255 1 334 1 312 1 129 1 128 2 156 1 360 1 194 1 176 1 143 1 341 1 142 1 303 1 37 1 58 2 353 1 96 2 
255 2 357 1 154 1 334 1 312 1 129 2 128 2 360 1 341 2 262 1 96 4 20 1 24 2 296 1 194 2 176 1 142 1 143 1 303 1 37 1 58 2 353 1 
255 2 357 1 154 1 312 1 129 2 128 2 360 1 341 2 262 1 96 4 20 1 24 2 296 1 194 2 176 1 142 1 143 1 303 1 37 1 58 2 353 1 
148 1 306 1 62 1 204 1 312 1 128 1 360 1 238 1 160 1 267 1 4 1 110 1 95 1 96 2 50 1 20 1 139 1 24 1 176 1 28 1 33 1 56 1 37 1 58 2 85 1 353 1 233 1 201 1 
148 1 62 1 204 1 312 1 128 1 360 1 238 1 160 1 267 1 4 1 215 1 95 1 96 2 50 1 20 1 371 1 79 1 24 1 176 1 28 1 33 1 56 1 37 1 58 2 85 1 353 1 233 1 201 1 
255 2 357 1 154 1 312 1 129 2 128 2 360 1 2 1 341 2 262 1 96 4 20 1 24 2 296 1 194 2 176 1 142 1 143 1 303 1 37 1 58 2 353 1 
306 1 148 1 255 2 62 1 357 1 154 1 312 1 128 2 129 2 360 1 341 2 238 1 160 1 262 1 267 1 4 1 110 1 96 4 50 1 51 1 20 1 139 1 24 2 296 1 350 1 194 2 176 1 143 1 142 1 28 1 56 1 303 1 37 1 58 2 85 1 353 1 201 1 
255 1 357 1 154 1 312 1 128 1 129 1 360 1 2 1 341 1 160 1 262 1 50 1 96 3 20 1 76 1 24 2 296 1 194 1 247 1 176 1 142 1 248 1 144 1 30 1 303 1 84 1 37 1 58 2 353 1 
15 2 41 1 308 1 331 1 357 2 154 2 128 7 360 2 256 1 340 1 108 1 262 2 188 1 93 1 96 14 167 2 20 2 112 1 24 7 296 2 194 4 176 2 143 2 142 2 303 2 304 1 37 2 58 4 14 1 
15 1 41 1 308 1 357 3 154 3 128 10 360 1 340 2 262 1 108 1 188 2 242 1 93 2 167 2 96 20 20 1 112 2 24 10 296 3 194 2 176 1 195 1 142 3 143 1 304 1 303 3 37 1 58 2 14 1 
15 1 41 1 308 1 357 7 154 7 128 20 256 1 360 2 340 6 262 4 108 3 188 1 242 3 367 1 93 6 167 4 96 44 20 2 112 2 24 24 296 7 194 7 176 2 195 3 142 5 143 3 299 1 304 1 303 5 328 1 37 2 58 4 14 1 
15 1 41 1 308 1 357 3 154 3 128 11 360 2 256 1 340 3 108 2 262 2 188 1 242 1 93 3 96 22 167 2 20 2 112 2 24 11 296 3 194 4 195 1 176 2 143 2 142 3 303 3 304 1 328 1 37 2 58 4 14 1 
15 1 254 2 41 1 308 1 357 3 154 3 128 14 360 1 259 2 340 2 260 2 262 2 108 1 188 1 242 1 93 2 218 2 167 2 96 30 20 1 112 1 294 2 24 16 296 5 194 6 176 1 195 1 142 5 143 4 301 2 304 1 303 3 37 1 58 2 14 1 
292 1 115 1 22 1 100 1 282 1 336 1 164 1 206 1 338 1 73 1 
178 1 118 1 
115 1 264 1 282 1 336 1 165 1 206 1 338 1 73 1 38 1 
292 1 114 1 279 1 115 1 22 1 77 1 100 1 282 1 336 1 338 1 206 1 284 2 316 1 47 1 186 1 376 1 32 1 73 1 
292 1 114 1 279 1 115 1 22 1 77 1 100 1 282 1 336 1 338 1 206 1 284 2 316 1 47 1 186 1 376 1 32 1 73 1 
292 1 114 1 279 1 115 1 22 1 77 1 100 1 282 1 336 1 338 1 206 1 284 2 316 1 47 1 186 1 376 1 32 1 73 1 
177 1 36 1 362 1 
177 1 36 1 362 1 
274 1 45 1 
274 1 45 1 362 1 
44 1 235 1 
252 1 307 1 153 1 282 1 336 1 235 1 44 1 206 1 338 1 284 1 316 1 47 1 160 2 90 1 73 1 50 2 115 1 76 2 77 1 118 1 247 2 27 1 178 1 248 2 32 1 197 1 233 1 
177 1 36 1 
274 1 45 1 362 1 
148 1 62 2 181 1 312 1 313 1 128 1 360 1 238 1 2 1 160 2 4 1 95 1 50 2 96 2 20 1 99 1 293 2 24 1 171 1 225 1 227 1 176 1 28 1 248 2 250 1 33 1 56 2 37 1 58 2 85 2 353 1 
40 1 354 1 116 1 246 2 62 2 236 1 372 1 8 1 350 1 46 1 238 1 89 1 196 1 31 1 56 2 4 1 94 1 85 2 202 1 
40 1 354 1 116 1 246 2 62 1 236 1 8 1 46 1 238 1 89 1 196 1 31 1 56 1 4 1 180 1 94 1 85 1 
148 1 204 1 62 1 285 1 119 1 55 1 238 1 28 1 56 1 4 1 35 1 94 1 85 1 202 1 
40 1 354 1 116 1 246 2 62 1 236 1 372 1 8 1 46 1 238 1 89 1 196 1 31 1 56 1 4 1 94 1 85 1 202 1 
216 1 
130 1 342 1 277 1 376 1 138 1 104 1 66 1 
106 1 87 1 67 1 47 1 342 1 365 1 243 1 217 1 270 1 169 1 77 1 138 1 324 1 121 1 11 1 376 2 104 1 
126 2 43 1 47 5 130 1 238 3 342 2 344 3 4 4 345 2 91 1 346 1 243 4 53 6 138 8 101 2 296 2 350 1 298 2 142 2 249 6 11 3 56 3 104 9 303 2 57 1 13 1 201 3 148 3 106 4 105 2 204 1 62 3 152 2 357 2 154 2 66 1 361 2 365 4 220 2 270 6 321 1 23 2 77 5 169 12 324 5 226 2 325 2 121 4 28 10 376 8 125 2 327 2 378 1 85 3 
106 2 357 4 127 1 154 4 47 1 340 2 342 2 108 1 263 1 365 2 346 1 6 1 242 1 367 1 93 2 243 2 244 1 270 5 53 8 136 1 77 1 169 10 324 1 138 8 101 1 295 1 296 4 298 1 195 1 325 3 121 2 142 4 249 8 11 1 376 7 104 13 303 4 
254 1 106 1 234 1 47 1 259 1 160 1 187 1 210 1 365 1 243 1 50 1 76 1 323 1 77 1 138 2 54 1 296 2 298 1 247 1 325 2 175 1 121 1 142 1 248 1 30 1 301 1 104 2 251 1 
106 1 138 1 66 1 121 1 130 1 342 1 376 1 104 1 365 1 243 1 
270 5 53 5 169 10 138 5 357 2 154 2 296 2 298 1 226 1 325 2 142 2 249 5 376 5 104 5 303 2 
47 1 342 1 11 1 77 1 376 1 324 1 
86 1 148 2 106 2 62 4 204 2 358 1 1 1 47 3 238 2 69 1 289 1 4 3 365 2 346 2 368 1 243 2 77 3 324 4 138 2 101 2 223 1 81 1 121 1 55 1 28 2 11 2 56 4 104 2 35 1 57 2 145 1 378 1 85 4 201 1 
306 1 148 1 62 1 204 1 312 1 128 1 360 1 238 1 160 3 209 1 4 1 267 1 110 1 95 1 96 1 50 3 20 1 76 2 139 1 247 2 176 1 248 2 28 1 30 2 56 1 37 1 251 1 58 2 85 1 353 1 233 1 201 1 
270 2 53 2 106 1 169 4 138 2 101 1 121 1 249 2 342 2 376 4 104 1 365 1 346 1 243 1 218 1 
115 1 282 1 205 1 
292 1 115 1 61 1 282 1 44 1 
115 1 282 1 205 1 
115 1 282 1 205 1 
115 1 42 1 282 1 
115 1 42 1 282 1 
115 1 42 1 282 1 
115 1 282 1 
336 1 206 1 
20 2 254 1 294 1 24 4 296 1 128 4 360 2 194 3 176 2 142 1 143 2 259 1 260 1 262 1 301 1 37 2 58 4 352 1 218 1 96 8 
254 1 294 1 24 3 128 3 296 1 194 2 259 1 143 2 142 1 260 1 277 1 301 1 218 1 96 6 
20 1 357 1 154 1 24 2 128 2 296 1 339 1 360 1 194 2 176 1 143 1 142 1 262 1 303 1 37 1 58 2 96 4 
357 2 154 2 24 6 128 6 296 2 194 2 195 1 143 1 340 2 142 2 262 1 108 1 303 2 242 1 93 2 96 12 
254 2 357 2 154 2 128 12 360 2 259 2 340 2 260 1 262 4 211 1 242 1 93 2 218 1 96 23 20 2 294 1 24 11 296 3 297 1 194 9 195 1 176 2 142 3 143 5 301 1 303 2 37 2 58 4 352 2 
340 1 128 1 96 1 
24 1 93 1 96 1 
20 1 357 1 154 1 24 3 128 3 296 1 339 1 360 1 226 1 194 3 176 1 142 1 143 2 262 1 303 1 37 1 58 2 96 6 
357 4 127 1 154 4 128 11 360 1 340 2 108 1 262 2 263 1 242 1 93 2 367 1 96 22 244 1 20 1 295 1 24 11 296 4 194 4 176 1 195 1 142 4 143 2 303 4 37 1 58 2 14 1 
254 1 24 3 296 1 128 3 194 2 142 1 259 1 143 1 262 1 301 1 96 6 
20 1 254 1 294 1 24 1 128 2 360 1 194 2 176 1 143 1 259 1 260 1 262 1 211 1 37 1 58 2 352 1 96 3 
20 1 254 2 24 5 54 1 128 5 296 2 360 1 194 5 176 1 259 2 143 3 142 2 262 2 301 1 37 1 58 2 14 1 96 10 
20 1 357 1 24 2 296 1 360 1 194 1 176 1 262 1 37 1 14 1 58 2 96 2 
20 1 357 1 154 1 24 2 128 2 296 1 360 1 194 2 176 1 143 1 142 1 262 1 303 1 37 1 14 1 58 2 96 4 
20 3 254 1 24 1 128 2 256 1 360 3 194 2 176 3 259 1 143 1 262 1 211 1 37 3 14 1 58 6 352 1 96 3 
254 2 60 1 128 8 339 1 256 1 360 4 340 1 259 2 260 1 262 3 108 1 211 1 93 1 96 15 20 4 294 1 24 7 54 1 296 2 194 6 176 4 142 2 143 3 301 1 37 4 58 8 14 1 352 1 
254 2 357 2 154 2 127 1 128 10 360 2 259 2 340 1 260 1 262 4 108 1 263 1 93 1 367 1 218 1 96 24 244 1 20 2 294 1 295 1 24 14 54 1 296 5 194 9 176 2 142 4 143 5 301 2 303 1 37 2 58 4 14 1 352 1 
254 1 357 2 154 2 127 1 128 7 339 1 360 3 259 1 340 1 260 1 262 1 108 1 263 1 367 1 93 1 218 1 96 17 244 1 20 3 294 1 295 1 24 10 296 3 194 4 176 3 142 2 143 3 301 1 303 1 37 3 14 1 58 6 352 1 
254 1 357 4 127 1 154 4 128 15 339 1 360 3 259 1 340 2 260 1 108 1 262 2 263 1 242 1 93 2 367 1 218 1 96 29 244 1 20 3 294 1 295 1 24 14 296 5 194 6 176 3 195 1 142 5 143 4 301 1 303 4 37 3 58 6 14 1 352 1 
254 1 357 4 127 1 154 4 128 12 339 1 360 3 259 1 340 2 260 1 108 1 262 3 263 1 242 1 93 2 367 1 218 1 96 27 244 1 20 3 294 1 295 1 24 15 296 5 194 7 176 3 195 1 142 4 143 4 301 1 303 3 37 3 58 6 14 1 352 1 
254 2 357 2 154 2 127 1 128 10 360 2 259 2 340 1 260 1 262 4 108 1 263 1 93 1 367 1 218 1 96 24 244 1 20 2 294 1 295 1 24 14 54 1 296 5 194 9 176 2 142 4 143 5 301 2 303 1 37 2 58 4 14 1 352 1 
357 4 127 1 154 4 128 11 360 1 340 2 108 1 262 2 263 1 242 1 93 2 367 1 96 22 244 1 20 1 295 1 24 11 296 4 194 4 176 1 195 1 142 4 143 2 303 4 37 1 58 2 14 1 
254 1 357 4 127 1 154 4 128 13 339 1 360 4 259 1 340 2 260 1 108 1 262 3 263 1 242 1 367 1 93 2 218 1 96 28 244 1 20 4 294 1 295 1 24 15 296 5 194 7 176 4 195 1 142 4 143 4 301 1 303 3 37 4 58 8 14 1 352 2 
357 1 154 1 128 4 360 2 256 1 340 2 108 1 367 1 93 1 96 7 20 2 24 3 296 1 194 1 176 2 195 1 142 1 143 1 303 1 37 2 14 1 58 4 
254 3 294 2 24 3 128 4 296 1 194 6 142 1 259 3 143 3 260 1 262 3 301 1 96 7 
357 1 154 1 128 4 360 2 256 1 340 2 108 1 367 1 93 1 96 7 20 2 24 3 296 1 194 1 176 2 195 1 142 1 143 1 303 1 37 2 14 1 58 4 
248 1 349 1 160 1 49 1 233 1 50 1 208 1 
348 1 349 1 17 1 351 1 208 1 248 1 160 1 268 1 305 1 49 1 233 1 50 1 
55 1 238 1 28 1 148 1 277 1 62 1 204 1 56 1 4 1 35 1 85 1 
148 1 76 1 204 1 62 1 247 1 28 1 248 1 238 1 160 2 56 1 267 1 4 1 110 1 7 1 85 1 233 1 201 1 50 2 
148 2 126 1 62 1 182 1 361 1 238 1 160 2 288 1 4 1 267 1 110 1 7 1 50 2 76 2 323 2 247 1 248 2 28 3 56 1 302 1 57 1 85 1 233 1 201 2 
148 2 126 1 62 1 182 1 361 1 238 1 160 2 288 1 4 1 267 1 7 1 50 2 76 2 323 2 371 1 247 1 248 2 28 3 56 1 302 1 57 1 85 1 233 1 201 2 
148 1 126 1 152 1 62 3 204 1 65 1 361 1 47 2 258 1 238 1 342 1 344 1 4 1 97 1 77 2 324 1 28 4 376 1 56 3 125 1 57 1 85 3 201 1 
148 1 126 1 77 2 204 1 62 3 324 1 152 1 361 1 47 2 258 1 28 4 238 1 342 1 376 1 125 1 56 3 344 1 4 1 345 1 57 1 85 3 201 1 
238 1 62 1 56 1 4 1 85 1 174 1 
86 1 148 2 355 1 62 5 204 2 359 1 1 1 238 2 4 3 72 1 91 1 293 1 171 1 8 1 350 1 141 1 28 3 56 6 85 6 201 1 
129 1 128 3 2 1 238 1 341 1 4 1 7 1 50 2 96 6 51 1 347 1 294 1 139 1 296 1 350 1 247 1 194 2 248 1 143 2 142 1 56 1 301 1 58 4 353 2 201 1 306 1 148 1 254 1 255 1 62 1 313 1 312 2 360 2 259 1 260 1 160 2 267 1 110 1 218 1 20 2 76 1 24 3 176 2 28 1 37 2 85 1 233 2 
106 2 62 1 204 1 152 1 66 1 47 3 130 1 342 1 344 1 365 2 345 1 243 2 220 1 23 1 77 3 138 1 324 2 121 2 27 1 28 2 11 1 376 1 56 1 125 1 104 1 327 1 378 1 85 1 
148 1 43 1 152 1 62 2 350 1 174 1 28 2 238 1 56 2 4 2 91 1 85 2 201 1 
148 1 272 1 204 1 62 4 350 1 258 1 55 1 28 1 238 1 56 4 4 1 35 1 85 4 
86 1 148 1 62 2 358 1 1 1 28 1 238 1 289 1 83 1 56 2 4 2 57 1 85 2 201 1 
40 1 238 1 89 1 196 1 246 1 62 1 204 1 56 1 4 1 85 1 
238 1 28 1 148 1 62 2 181 1 56 2 4 1 171 1 8 1 85 2 350 1 
148 2 272 1 204 1 62 4 171 1 359 1 350 1 55 1 141 1 28 3 238 2 56 5 35 1 4 2 57 1 85 5 
149 1 148 2 272 1 204 1 62 4 171 1 350 1 55 1 141 1 28 3 238 2 56 5 35 1 4 2 57 1 85 5 
148 1 76 1 204 1 62 1 371 1 247 1 28 1 248 1 238 1 160 2 56 1 267 1 4 1 7 1 85 1 233 1 201 1 50 2 
86 1 148 1 355 1 62 1 1 1 28 1 238 1 56 1 4 2 57 1 91 1 85 1 201 1 
329 1 113 1 261 1 273 1 233 1 
329 1 332 1 47 2 342 1 364 1 160 1 288 1 187 1 261 1 210 1 266 1 50 1 113 1 76 1 77 2 323 2 273 1 192 1 247 1 175 1 27 1 248 1 30 1 12 1 376 1 125 1 302 1 251 1 
329 1 227 1 248 1 113 1 160 1 250 1 261 1 225 1 50 1 
329 1 332 1 266 1 
135 1 191 1 277 1 137 1 
135 1 191 1 74 1 137 1 103 1 16 1 222 1 
109 1 16 1 314 1 
134 1 135 1 191 1 74 3 137 1 356 1 16 3 222 1 374 1 103 1 71 1 179 2 
135 1 191 1 74 2 137 1 281 1 103 1 16 2 222 1 157 1 
374 1 191 1 74 1 196 1 151 1 246 1 103 1 0 1 16 1 236 1 222 1 
374 1 191 1 74 1 137 1 103 1 16 1 222 1 
135 1 374 1 74 1 137 2 103 1 16 1 222 1 
191 1 74 2 370 1 137 1 16 2 222 2 374 1 159 1 103 2 375 1 
320 1 135 1 374 1 191 2 74 3 151 1 137 1 103 1 170 1 16 3 222 1 140 1 157 2 
135 1 40 1 191 1 74 2 150 1 116 1 137 1 246 2 16 2 222 1 236 1 157 1 374 1 196 1 103 1 
135 1 374 1 191 2 74 4 151 1 137 1 281 1 103 2 278 1 170 1 16 4 222 2 157 2 
135 1 374 1 191 1 74 1 137 1 103 1 16 1 222 1 
134 1 135 2 74 4 191 3 151 1 137 2 16 4 170 1 222 1 157 2 103 1 265 1 71 1 179 1 
135 1 191 1 74 2 75 1 137 1 102 1 16 2 222 1 257 1 157 1 374 1 103 1 
134 2 135 1 190 1 191 1 74 3 137 1 16 3 222 1 374 1 103 1 71 1 179 2 
123 1 191 2 34 1 269 2 
374 1 74 1 221 1 103 1 16 1 222 1 
135 1 374 1 191 1 74 2 137 1 103 1 16 2 222 1 140 1 157 1 
199 1 
135 1 374 1 191 1 74 1 137 1 103 1 16 1 222 1 
135 1 374 1 191 1 74 3 137 1 103 1 16 3 222 1 140 1 179 1 157 1 
191 1 151 1 265 1 170 1 
191 1 137 1 

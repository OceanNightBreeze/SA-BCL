#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 258 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 107 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 200 87 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 258 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 160 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
31 1 315 2 226 6 151 2 267 3 290 1 130 1 271 1 342 9 135 5 154 2 136 1 214 2 250 1 177 9 70 1 114 1 234 2 140 1 374 4 159 1 44 2 280 2 377 1 240 1 305 1 285 1 199 1 
31 1 315 2 226 6 151 2 267 3 290 1 130 1 271 1 342 9 135 5 154 2 136 1 214 2 250 1 177 9 70 1 114 1 234 2 140 1 374 4 159 1 44 2 280 2 377 1 240 1 305 1 285 1 199 1 
31 1 315 2 226 7 151 2 267 4 290 1 130 1 271 1 342 10 135 6 154 2 136 1 214 2 250 1 177 10 70 1 114 1 234 2 140 1 374 5 159 1 44 2 280 2 377 1 240 1 305 1 285 1 199 1 
31 1 315 2 226 4 151 1 267 2 290 1 130 1 271 1 342 7 135 4 154 2 136 1 214 2 250 1 177 7 70 1 234 2 140 1 374 3 159 1 44 2 280 2 377 1 240 1 305 1 285 1 199 1 
250 1 214 1 177 4 114 1 140 1 315 1 374 2 159 1 44 1 226 3 151 2 267 1 280 1 290 1 271 1 342 4 135 3 154 1 
250 1 214 1 31 1 177 2 70 1 314 1 234 1 315 1 159 1 44 1 90 1 278 1 280 1 271 1 342 2 135 1 
250 1 214 2 177 3 234 1 374 1 159 1 226 1 267 1 280 2 240 1 271 1 342 3 135 2 
315 1 226 7 151 2 267 3 290 1 271 1 342 9 135 5 154 1 214 2 250 1 177 9 114 1 234 1 140 1 374 4 159 1 44 1 45 1 280 2 240 1 192 1 305 1 199 1 
315 1 226 7 151 2 267 3 290 1 271 1 342 9 135 5 154 1 214 2 250 1 177 9 114 1 234 1 140 1 374 4 159 1 44 1 45 1 280 2 240 1 192 1 305 1 199 1 
258 1 369 1 16 1 
362 1 289 2 16 1 
228 2 370 2 89 2 243 2 142 2 367 2 184 1 224 1 
201 2 145 1 243 3 357 2 32 1 129 1 60 1 8 2 34 1 228 3 9 1 361 1 287 2 230 1 170 1 364 1 317 1 367 2 370 2 42 1 89 2 155 1 20 1 373 1 184 1 158 1 324 1 297 1 91 1 298 1 93 1 256 1 142 2 25 2 53 1 224 1 328 1 
228 1 370 1 5 1 89 1 243 1 149 1 142 1 367 1 184 1 98 1 
309 1 89 1 243 1 294 1 149 1 350 1 262 1 228 1 220 1 318 1 171 1 369 1 241 1 16 1 
370 1 309 1 89 1 243 1 294 1 149 1 262 1 228 1 220 2 318 1 142 1 367 1 369 1 241 2 16 1 
220 1 348 1 241 1 244 1 277 1 
206 1 220 2 215 1 369 1 241 2 244 1 16 1 277 1 
220 1 241 1 277 1 
344 1 370 1 5 1 89 1 243 1 149 1 184 1 244 1 228 1 220 1 142 1 367 1 241 1 98 1 
16 1 
206 1 220 2 147 1 369 1 241 2 244 1 16 1 277 1 
174 1 331 2 372 1 244 2 277 2 206 1 376 1 220 5 141 1 47 1 74 2 304 1 369 1 241 5 211 2 196 1 16 1 165 1 379 1 
258 1 224 1 
370 1 89 2 243 2 313 1 228 2 142 1 367 1 248 1 224 2 
308 1 186 1 334 1 
201 1 145 1 243 1 357 1 158 1 324 1 373 1 91 1 228 1 170 1 256 1 317 1 25 1 281 1 224 1 328 1 
145 1 201 1 89 1 243 2 357 1 373 1 324 1 295 1 158 1 334 1 91 1 228 2 336 1 170 1 256 1 317 1 142 1 25 1 367 1 328 1 
370 1 228 3 89 3 243 3 142 3 367 3 295 1 224 1 
228 1 5 1 89 1 243 1 149 1 142 1 367 1 
228 1 370 1 89 1 243 1 149 1 142 1 313 1 367 1 248 1 
145 1 201 1 309 1 243 4 149 1 357 1 32 1 262 1 8 2 34 1 228 4 9 1 287 1 230 1 336 1 170 1 318 1 317 1 367 3 248 1 213 1 370 2 42 1 89 3 294 1 155 1 373 1 324 1 158 1 295 1 184 1 297 1 91 1 298 1 93 1 220 1 256 1 142 3 25 1 53 1 241 1 224 1 352 1 328 1 
228 2 89 2 243 2 142 1 171 1 367 1 260 1 295 1 224 1 
370 1 309 1 89 3 294 1 243 3 149 1 295 2 262 1 228 3 80 1 336 1 220 1 318 1 142 3 367 3 248 1 241 1 16 1 213 1 
370 1 89 2 243 2 295 1 186 1 334 1 228 2 142 2 367 2 248 1 
201 1 145 1 243 1 357 1 158 1 324 1 373 1 91 1 228 1 170 1 256 1 317 1 25 1 224 1 328 1 
201 1 145 1 243 1 357 1 333 1 324 1 373 1 77 1 228 1 170 1 256 1 317 1 25 1 224 1 328 1 
308 2 2 1 127 1 312 1 32 1 334 2 129 2 8 2 34 1 9 1 287 4 368 1 270 1 322 1 155 1 185 1 186 2 297 1 298 1 254 1 237 1 279 1 191 1 53 2 
228 1 89 1 243 1 149 1 142 1 367 1 262 1 78 1 
370 1 89 5 243 5 260 1 295 2 359 1 228 5 336 1 142 4 171 1 367 4 248 1 224 1 173 1 
228 2 5 1 89 2 243 2 149 1 142 2 367 2 78 1 
30 1 164 1 
30 1 164 1 
273 1 274 1 
273 1 274 1 
273 1 274 1 
30 1 69 1 164 1 
30 1 242 1 164 1 
273 1 30 2 274 1 162 1 182 1 164 2 
30 1 69 1 164 1 
30 1 69 1 164 1 
30 1 365 1 164 1 
30 1 365 1 164 1 
30 1 365 1 164 1 
30 2 346 2 182 1 33 1 7 2 299 1 325 2 219 1 220 2 36 1 11 1 122 1 131 3 143 2 241 2 85 2 353 1 16 1 164 2 
30 1 242 1 243 2 7 1 228 2 10 1 131 1 367 2 85 1 89 2 138 1 117 1 325 1 255 1 46 1 220 1 142 2 222 1 143 1 241 1 224 1 353 1 164 1 125 1 
315 1 44 1 154 1 
314 1 315 1 44 1 
307 1 319 1 314 1 315 3 144 1 154 2 
307 1 291 1 314 1 315 2 144 1 154 1 
307 1 314 1 315 2 144 2 154 1 
166 2 127 1 331 1 244 4 206 1 362 1 109 1 289 3 368 1 211 1 369 1 132 1 270 1 16 2 322 1 293 1 138 1 181 2 115 1 117 1 71 1 277 1 255 1 220 5 47 2 74 1 326 2 163 1 194 1 241 5 379 1 165 3 
127 3 331 2 244 7 358 1 245 5 206 1 231 1 362 3 109 3 289 9 268 1 210 1 368 3 369 1 211 2 132 2 270 3 16 5 174 1 249 1 322 3 348 5 181 6 92 1 277 6 255 4 220 9 47 6 74 2 326 6 163 1 194 2 241 9 379 1 165 8 
166 1 127 1 331 1 244 2 362 2 109 1 289 4 368 1 369 1 211 1 132 1 270 1 16 3 174 1 322 1 293 1 181 2 115 1 255 1 220 3 74 1 47 2 326 2 194 1 241 3 165 3 
166 2 127 2 331 1 244 3 362 3 109 2 289 7 268 1 210 1 368 2 369 1 211 1 132 1 270 2 16 4 174 1 322 2 293 1 181 4 115 1 92 1 255 2 220 4 74 1 47 4 326 4 194 1 241 4 165 5 
170 1 258 1 283 1 
39 1 170 1 
343 1 
170 1 373 1 
170 3 207 1 256 1 373 1 283 2 28 1 
170 1 256 1 373 1 
170 1 257 1 
0 1 200 1 322 1 2 2 87 1 68 1 311 1 156 1 253 1 129 4 279 3 218 1 300 1 287 6 221 1 53 2 368 2 193 1 
200 1 0 2 322 1 2 2 87 1 68 1 311 1 156 1 253 1 129 4 279 4 218 1 300 1 287 6 221 1 53 2 368 2 193 1 
0 1 200 1 2 2 311 1 129 4 287 6 368 2 322 1 87 1 68 1 156 1 276 1 253 1 300 1 218 1 279 3 221 1 193 1 53 2 
17 1 287 1 300 1 68 1 221 2 156 1 129 1 
200 1 0 2 2 3 29 1 311 1 129 5 8 4 34 2 287 8 368 2 322 1 87 1 155 2 156 1 253 1 297 2 298 2 218 1 300 1 279 5 24 1 221 1 259 1 53 3 193 1 
201 1 145 1 167 1 357 1 314 1 76 1 315 2 226 1 319 1 292 1 271 1 342 2 135 1 233 1 154 1 214 1 250 1 176 1 177 2 234 1 324 1 236 1 159 1 44 1 238 1 375 1 280 1 303 1 25 1 284 1 
201 1 145 1 167 1 357 1 314 1 315 2 226 2 81 1 319 1 292 1 83 1 271 1 342 3 135 1 233 1 154 1 214 1 176 1 177 3 234 1 324 1 236 1 159 1 44 1 238 1 375 1 280 1 75 1 25 1 284 1 
201 1 145 1 167 1 357 1 314 1 315 2 226 2 81 1 319 1 292 1 83 1 271 1 342 2 135 1 233 1 154 1 176 1 177 2 234 1 324 1 159 1 44 1 375 1 25 1 284 1 
145 1 201 1 55 1 357 1 169 1 266 1 170 1 317 1 110 1 292 2 342 1 233 2 113 1 214 1 177 1 234 2 373 1 324 1 375 2 280 1 75 1 25 1 100 1 
145 1 201 1 250 1 214 1 176 1 177 1 167 1 314 1 357 1 324 1 234 1 315 2 236 1 44 1 238 1 81 1 375 1 303 1 280 1 319 1 25 1 292 1 284 1 342 1 233 1 154 1 
52 1 
201 2 145 1 330 1 55 1 3 1 331 1 243 1 149 1 335 1 206 3 289 2 340 1 211 1 341 1 15 1 61 1 16 2 64 2 294 1 116 2 350 1 23 2 220 5 121 1 74 1 25 2 165 2 309 1 357 2 168 1 261 2 262 1 228 1 265 2 266 1 362 2 170 1 317 2 318 1 171 1 366 4 369 1 132 1 38 2 88 2 89 1 275 1 373 1 324 1 277 6 47 2 241 5 282 1 197 1 379 1 
309 1 3 1 89 1 147 1 294 1 243 1 149 1 275 1 277 2 262 1 350 1 335 1 228 1 206 1 23 1 220 3 318 1 366 2 171 1 241 3 197 1 15 1 
309 1 3 1 243 1 147 1 149 1 261 1 262 1 228 1 335 1 206 1 318 1 171 1 366 3 369 1 15 1 16 1 89 1 294 1 275 1 277 1 350 1 220 3 241 3 197 1 
309 1 3 1 147 1 243 1 149 1 261 1 262 1 228 1 335 1 206 1 265 1 318 1 171 1 366 3 369 1 15 1 16 1 89 1 294 1 275 1 350 1 277 2 23 1 220 3 241 3 197 1 
309 1 3 1 310 1 331 1 147 1 243 1 149 1 261 4 128 1 262 1 335 1 228 1 206 3 265 4 362 2 318 1 340 1 171 1 366 6 211 1 369 5 133 1 61 1 15 1 16 5 38 2 64 2 371 1 88 2 89 1 294 1 275 1 116 2 350 1 277 7 23 4 301 1 220 5 47 1 74 1 241 5 197 1 165 1 379 1 
309 1 3 1 331 1 243 1 149 1 261 2 262 1 335 1 228 1 206 2 265 2 362 2 289 2 318 1 340 1 171 1 366 4 369 1 211 1 15 1 61 1 16 2 38 2 64 2 88 2 89 1 294 1 275 1 116 2 277 4 350 1 23 2 220 4 47 1 74 1 241 4 282 1 197 1 165 1 379 1 
309 1 3 1 310 1 243 1 331 1 149 1 261 2 128 1 262 1 228 1 335 1 206 2 265 2 362 2 318 1 340 1 171 1 366 4 369 1 211 1 61 1 15 1 16 1 38 2 64 2 371 1 88 2 89 1 294 1 275 1 116 2 277 4 350 1 23 2 220 4 47 1 74 1 241 4 197 1 165 1 379 1 
309 1 3 1 310 1 243 1 331 1 149 1 261 2 128 1 262 1 228 1 335 1 206 2 265 2 362 2 318 1 340 1 171 1 366 4 369 1 211 1 61 1 15 1 16 1 38 2 64 2 371 1 88 2 89 1 294 1 275 1 116 2 277 4 350 1 23 2 220 4 47 1 74 1 241 4 197 1 165 1 379 1 
309 1 126 2 3 1 310 1 243 1 331 1 149 1 57 1 261 2 262 1 228 1 335 1 206 2 265 2 289 2 318 1 340 1 209 1 171 1 366 4 369 1 211 1 172 1 15 1 16 1 38 2 88 2 89 1 294 1 275 1 277 4 350 1 23 2 220 4 351 2 47 1 74 1 241 4 197 1 165 1 379 1 
309 1 3 1 310 1 331 1 243 1 149 1 261 3 128 1 262 1 228 1 335 1 206 2 265 3 362 2 318 1 340 1 171 1 366 5 369 1 211 1 61 1 15 1 16 1 38 2 64 2 371 1 88 2 89 1 294 1 275 1 116 2 350 1 277 5 23 3 301 1 220 4 47 1 74 1 241 4 197 1 165 1 379 1 
309 1 3 1 310 1 331 1 243 1 149 1 261 3 128 1 262 1 228 1 335 1 206 2 265 3 362 2 318 1 340 1 171 1 366 5 369 1 211 1 61 1 15 1 16 1 38 2 64 2 371 1 88 2 89 1 294 1 275 1 116 2 350 1 277 5 23 3 301 1 220 4 47 1 74 1 241 4 197 1 165 1 379 1 
309 1 126 2 3 1 331 1 243 1 149 1 261 2 262 1 335 1 228 1 206 2 265 2 289 2 318 1 340 1 171 1 366 4 369 1 211 1 15 1 172 1 16 1 38 2 88 2 89 1 294 1 275 1 277 4 350 1 23 2 220 4 351 2 47 1 74 1 241 4 282 1 197 1 165 1 379 1 
8 2 298 1 34 1 254 1 9 1 155 1 193 1 258 1 32 1 253 1 297 1 
0 1 2 1 308 11 4 1 127 2 32 2 334 11 129 8 59 1 60 1 8 4 34 2 9 1 230 1 287 14 109 2 338 1 368 2 270 1 322 1 251 3 178 3 155 2 235 1 186 4 119 1 296 1 297 2 298 2 279 2 51 1 53 6 224 1 
145 1 201 1 54 1 4 1 243 2 357 1 32 1 129 1 34 1 228 2 8 2 60 1 9 1 336 1 230 1 287 2 170 1 317 1 367 1 89 1 155 1 373 1 324 1 158 1 295 1 186 1 91 1 297 1 298 1 187 1 256 1 142 1 25 1 281 1 53 1 123 1 224 1 328 1 
0 1 200 1 201 1 145 2 329 2 2 4 146 1 4 1 243 3 149 1 334 6 107 2 60 1 8 6 9 3 336 1 287 19 109 2 63 1 155 3 295 1 158 2 118 2 253 1 297 3 298 3 218 1 73 1 256 2 25 1 308 6 127 2 311 1 357 1 32 3 225 2 129 10 228 3 34 3 230 1 170 2 317 1 367 1 368 4 270 2 322 3 87 1 42 2 89 1 324 2 373 2 186 6 91 2 279 5 142 1 193 1 53 9 328 2 
145 2 201 7 55 1 243 1 6 1 357 8 32 2 76 1 129 1 263 1 228 1 8 4 34 2 60 1 9 2 81 1 287 2 230 1 288 1 266 1 170 3 317 2 367 1 37 1 321 1 89 1 155 2 179 1 20 2 295 1 324 2 373 2 297 2 254 1 298 2 49 1 142 1 25 8 53 1 
2 1 308 1 4 1 127 1 243 1 32 1 334 1 129 1 8 2 34 1 228 1 9 1 287 3 109 1 367 1 368 1 248 1 270 1 370 1 322 1 89 1 155 1 186 1 297 1 298 1 279 1 142 1 327 1 53 2 
0 1 308 1 127 1 155 1 32 1 186 1 334 1 297 1 129 2 254 1 34 1 298 1 8 2 9 1 279 1 287 2 191 1 368 1 
2 1 308 1 322 1 155 1 32 1 185 1 186 1 334 1 297 1 254 1 34 1 298 1 8 2 9 1 279 1 287 2 53 2 270 1 
0 1 2 1 322 1 308 2 127 1 155 1 32 1 186 2 334 2 297 1 129 2 254 1 34 1 298 1 8 2 9 1 279 2 287 4 109 1 53 2 368 1 270 1 
0 1 308 1 127 1 155 1 32 1 186 1 334 1 297 1 129 2 34 1 298 1 8 2 9 1 279 1 287 2 191 1 368 1 321 1 
2 1 308 1 322 1 155 1 32 1 185 1 186 1 334 1 297 1 34 1 298 1 8 2 9 1 279 1 287 2 53 2 321 1 270 1 
0 1 2 1 322 1 308 2 127 1 155 1 32 1 186 2 334 2 297 1 129 2 34 1 298 1 8 2 9 1 279 2 287 4 109 1 53 2 368 1 321 1 270 1 
0 1 2 1 322 1 308 2 127 1 155 1 32 1 186 2 334 2 297 1 129 2 34 1 298 1 8 2 9 1 279 2 287 4 109 1 53 2 368 1 270 1 
145 1 201 1 243 1 357 1 32 1 129 1 60 1 228 1 34 1 8 2 9 1 287 2 230 1 170 1 317 1 42 1 155 1 373 1 324 1 158 1 91 1 297 1 298 1 256 1 25 1 53 1 224 1 328 1 
145 1 201 1 243 1 357 1 333 1 32 1 129 1 77 1 60 1 228 1 34 1 8 2 9 1 287 2 230 1 170 1 317 1 65 1 155 1 373 1 324 1 297 1 298 1 256 1 25 1 53 1 224 1 328 1 
0 1 2 1 322 1 308 2 4 1 127 1 155 1 32 1 186 2 334 2 297 1 129 2 34 1 298 1 8 2 9 1 279 2 287 4 109 1 53 2 368 1 270 1 
0 1 145 1 201 1 2 1 308 2 127 1 243 1 357 1 32 1 334 2 76 1 129 2 228 1 34 1 8 2 9 1 287 4 170 1 109 1 368 1 270 1 322 1 42 1 155 1 324 1 158 1 373 1 186 2 118 1 91 1 297 1 298 1 279 2 256 1 25 1 53 2 328 1 
0 1 308 1 4 1 127 1 243 1 32 1 58 1 334 1 129 2 8 2 34 1 228 1 9 1 287 3 109 1 367 1 368 1 248 1 270 1 370 1 322 1 89 1 155 1 186 1 297 1 298 1 279 1 142 1 53 1 
0 3 29 1 2 3 355 1 203 1 127 4 129 16 8 6 34 3 287 34 109 4 232 1 368 4 270 4 111 4 86 1 322 4 251 4 178 3 155 3 347 1 235 3 253 1 297 3 298 3 279 6 188 1 189 1 24 1 50 1 378 1 96 1 51 1 193 1 53 18 195 1 124 2 306 1 101 1 
0 3 29 2 2 3 355 1 203 1 127 4 129 17 8 8 34 4 287 33 109 4 232 1 368 4 270 3 111 4 86 1 322 3 251 4 178 3 155 4 347 1 235 3 253 1 297 4 298 4 279 6 188 1 189 1 24 1 50 1 378 1 96 1 51 1 193 1 53 16 195 1 124 2 306 1 101 1 
0 7 29 1 2 6 203 1 127 7 129 24 8 4 34 2 287 47 109 7 338 2 232 1 368 7 270 7 111 4 86 1 322 7 251 4 178 4 155 2 347 1 235 2 253 1 297 2 298 2 279 13 188 1 189 1 24 1 50 1 378 1 96 1 51 2 193 1 53 23 124 1 306 1 101 1 
0 3 2 3 127 3 129 9 8 4 34 2 287 19 109 3 368 3 270 3 111 2 86 1 322 3 251 2 178 1 155 2 347 1 235 1 297 2 298 2 279 6 189 1 24 1 50 2 51 1 27 1 53 10 195 1 124 1 101 1 
0 2 29 2 2 2 203 1 127 3 129 14 8 6 34 3 287 26 109 3 232 1 368 3 270 2 111 4 86 2 322 2 251 2 178 2 155 3 347 1 235 2 297 3 298 3 279 4 189 1 188 1 24 1 50 1 378 1 96 1 53 12 124 2 306 1 101 1 
299 1 325 1 40 1 30 1 219 1 182 1 143 1 85 1 7 1 164 1 
242 1 222 1 
325 1 108 1 30 1 349 1 143 1 85 1 7 1 164 1 246 1 
30 1 346 1 182 1 7 1 299 1 325 1 219 1 220 1 36 1 11 1 122 1 131 2 143 1 241 1 353 1 85 1 16 1 164 1 
30 1 346 1 182 1 7 1 299 1 325 1 219 1 220 1 36 1 11 1 122 1 131 2 143 1 241 1 353 1 85 1 16 1 164 1 
30 1 346 1 182 1 7 1 299 1 325 1 219 1 220 1 36 1 11 1 122 1 131 2 143 1 241 1 353 1 85 1 16 1 164 1 
69 1 162 1 134 1 
69 1 162 1 134 1 
153 1 365 1 
153 1 365 1 162 1 
46 1 125 1 
30 1 242 1 243 2 244 1 7 1 228 2 10 1 131 1 367 2 85 1 346 1 89 2 138 1 117 1 325 1 255 1 46 1 220 1 122 1 222 1 142 2 143 1 241 1 224 1 99 1 164 1 125 1 
69 1 134 1 
153 1 365 1 162 1 
145 1 201 2 4 1 243 2 148 1 357 2 32 1 129 1 34 1 228 2 8 2 60 1 9 1 287 2 230 1 288 1 170 1 37 1 320 1 272 1 89 2 155 1 20 2 324 1 373 1 297 1 298 1 95 1 48 1 25 2 53 1 
145 1 201 2 1 1 176 1 314 1 357 2 150 1 324 1 315 2 76 1 236 1 44 1 81 1 319 1 25 2 292 1 223 1 284 1 154 1 
201 1 145 1 176 1 314 1 357 1 183 1 324 1 315 2 236 1 44 1 81 1 319 1 25 1 292 1 223 1 284 1 154 1 
145 1 201 1 1 1 55 1 357 1 324 1 373 1 169 1 266 1 170 1 317 1 208 1 25 1 292 1 
145 1 201 1 1 1 176 1 314 1 357 1 150 1 324 1 315 2 236 1 44 1 81 1 319 1 25 1 292 1 223 1 284 1 154 1 
102 1 
376 1 47 1 304 1 258 1 369 1 16 1 165 1 
331 1 116 1 277 1 206 1 220 1 362 1 289 1 74 1 47 1 369 1 241 1 211 1 61 1 16 2 379 1 165 1 64 1 
39 1 145 2 201 1 331 1 43 1 357 1 21 1 324 1 373 1 107 1 227 1 170 2 256 1 74 1 317 1 12 1 25 1 14 1 132 1 211 1 28 1 165 2 379 1 
203 1 330 1 127 2 331 2 205 1 206 1 362 3 109 2 289 6 339 1 232 1 368 2 132 1 211 2 369 2 16 5 270 2 322 2 251 1 178 1 139 1 181 5 235 1 277 1 188 1 220 1 74 2 47 5 190 2 378 1 326 5 96 1 241 1 165 8 379 2 
200 1 371 1 322 1 87 1 331 1 311 1 218 1 220 1 47 2 74 1 190 1 368 1 241 1 211 1 165 2 379 1 
331 1 376 1 74 1 47 1 304 1 211 1 369 1 16 1 379 1 165 1 
322 2 127 2 181 5 107 1 205 1 109 2 362 5 289 10 47 5 190 2 326 5 368 2 16 5 270 2 165 5 
206 1 220 1 369 1 241 1 16 1 277 1 
145 1 201 4 103 2 330 2 55 1 331 2 168 1 357 4 206 2 247 1 266 1 170 1 317 2 211 2 132 2 341 1 174 1 19 1 324 1 373 1 277 4 94 1 220 3 74 2 47 2 25 4 241 3 379 1 165 2 
201 1 145 1 243 3 357 1 32 1 8 2 228 3 34 1 9 1 287 1 230 1 170 1 317 1 367 2 370 2 42 1 89 2 155 1 184 1 158 1 324 1 373 1 297 1 91 1 298 1 93 1 256 1 142 2 25 1 53 1 224 1 328 1 
330 1 331 1 156 1 181 2 362 2 289 4 47 2 74 1 326 2 211 1 132 1 369 2 16 4 379 1 165 1 
325 1 82 1 85 1 
299 1 325 1 67 1 46 1 85 1 
325 1 82 1 85 1 
325 1 82 1 85 1 
325 1 217 1 85 1 
325 1 217 1 85 1 
325 1 217 1 85 1 
325 1 85 1 
30 1 164 1 
0 1 200 1 2 2 311 1 129 4 8 2 34 1 287 7 368 2 322 1 251 1 87 1 178 1 155 1 235 1 253 1 297 1 298 1 279 3 218 1 24 1 96 1 53 3 193 1 
200 1 0 2 2 2 204 1 127 1 311 1 129 6 8 4 34 2 287 10 109 1 368 3 322 1 251 2 87 1 178 1 155 2 235 1 253 1 297 2 298 2 218 1 279 4 24 1 96 1 51 1 193 1 53 4 
200 1 0 2 2 3 29 1 203 1 204 1 127 2 311 1 129 9 8 6 34 3 287 18 109 2 232 1 368 4 270 2 322 3 251 1 87 1 178 1 155 3 235 1 253 1 297 3 298 3 218 1 279 5 188 1 24 1 96 1 378 1 193 1 53 9 
200 1 0 3 29 1 2 3 203 1 204 1 127 2 311 1 129 10 8 6 34 3 287 16 109 2 232 1 368 4 270 1 322 2 251 1 87 1 178 1 155 3 235 1 253 1 297 3 298 3 218 1 279 6 188 1 24 1 96 1 378 1 193 1 53 6 
0 1 200 1 2 2 311 1 129 4 8 2 34 1 287 7 368 2 322 1 251 1 87 1 178 1 155 1 235 1 253 1 297 1 298 1 279 3 218 1 24 1 96 1 53 3 193 1 
0 1 2 1 322 2 203 1 251 1 127 2 178 1 155 1 235 1 129 6 297 1 34 1 298 1 8 2 279 2 287 12 188 1 109 2 24 1 232 1 378 1 96 1 368 2 53 6 270 2 
200 1 0 2 2 3 29 2 203 1 204 1 127 2 311 1 129 10 8 8 34 4 287 17 109 2 232 1 368 4 270 1 322 2 251 1 87 1 178 1 155 4 235 1 253 1 297 4 298 4 218 1 279 5 188 1 24 1 378 1 96 1 193 1 53 7 
0 3 2 3 29 2 203 1 127 3 129 9 8 8 34 4 287 16 109 3 232 1 368 3 270 2 322 2 251 1 178 1 155 4 235 1 297 4 298 4 279 6 188 1 24 1 378 1 96 1 53 7 195 1 
200 1 0 2 322 1 2 2 87 1 311 1 253 1 129 3 287 5 218 1 279 4 53 2 368 2 193 1 
200 1 0 2 2 3 29 2 203 1 127 2 311 1 129 10 8 8 34 4 287 17 109 2 232 1 368 4 270 1 322 2 251 1 87 1 178 1 155 4 235 1 253 1 297 4 298 4 218 1 279 5 188 1 24 1 378 1 96 1 193 1 53 7 195 1 
200 1 0 2 322 1 2 2 29 1 87 1 311 1 155 2 253 1 129 4 297 2 34 2 298 2 8 4 287 7 279 4 218 1 368 2 53 3 193 1 
193 1 258 1 253 1 
0 1 2 1 322 1 204 1 127 1 155 1 297 1 129 2 34 1 298 1 8 2 279 2 287 4 109 1 53 2 368 1 270 1 
0 1 2 1 322 1 251 2 127 1 178 1 235 1 129 3 287 7 279 2 109 1 51 1 53 4 368 1 270 1 
200 1 0 2 2 3 29 1 127 2 311 1 129 9 59 1 34 1 8 2 287 17 109 2 338 1 368 4 270 2 322 3 251 2 87 1 178 2 155 1 253 1 297 1 298 1 218 1 279 5 51 1 193 1 53 8 
287 1 251 1 53 1 
287 1 178 1 129 1 
0 1 322 1 2 2 204 1 127 1 155 1 297 1 107 1 129 3 8 2 298 1 34 1 287 6 279 3 109 1 53 3 368 1 270 1 
0 1 2 1 322 2 203 1 251 1 127 2 178 1 155 1 235 1 129 6 297 1 34 1 298 1 8 2 279 2 287 12 188 1 109 2 24 1 232 1 378 1 96 1 368 2 53 6 270 2 
200 1 287 1 368 1 129 1 
0 1 2 1 29 1 87 1 311 1 155 1 22 1 253 1 129 1 297 1 34 1 298 1 8 2 279 2 218 1 287 3 193 1 53 2 
0 2 200 1 2 2 322 1 87 1 155 1 311 1 297 1 129 4 8 2 298 1 34 1 218 1 279 4 287 7 24 1 53 3 368 2 
0 1 127 1 155 1 297 1 129 2 34 1 298 1 8 2 287 2 279 1 24 1 368 1 
0 1 2 1 322 1 127 1 155 1 297 1 129 2 34 1 298 1 8 2 279 2 287 4 24 1 109 1 53 2 368 1 270 1 
0 1 29 1 2 1 155 3 311 1 22 1 297 3 129 1 34 3 298 3 8 6 287 3 218 1 279 2 24 1 53 2 195 1 
200 1 0 3 29 1 2 3 204 1 127 2 311 1 129 11 8 8 34 4 287 21 109 2 368 4 62 1 270 2 112 1 322 3 251 3 87 1 252 1 178 3 155 4 235 1 253 1 297 4 298 4 218 1 279 6 24 1 193 1 53 10 195 1 
228 1 89 1 243 1 26 1 171 1 260 1 224 1 
89 1 243 1 56 1 260 1 228 1 35 1 161 1 26 1 171 1 224 1 212 1 198 1 
145 1 201 1 266 1 55 1 170 1 317 1 357 1 25 1 258 1 324 1 373 1 
145 1 201 1 89 1 243 2 357 1 373 1 295 1 324 1 91 1 228 2 170 1 256 1 317 1 142 1 25 1 367 1 224 1 328 1 
145 1 201 1 309 1 103 1 89 2 243 2 149 1 332 1 357 1 373 2 295 1 324 1 91 1 262 1 228 2 170 3 257 1 256 2 142 1 25 1 367 2 224 1 328 1 
145 1 201 2 309 1 103 1 89 2 243 2 149 1 332 1 357 2 333 1 373 2 295 1 324 1 262 1 228 2 316 1 170 3 257 1 256 2 142 1 25 2 367 2 224 1 328 1 
145 1 201 3 39 1 66 1 103 1 294 1 332 1 357 3 373 1 324 1 277 1 316 1 220 2 170 4 257 1 256 1 302 1 317 1 25 3 369 1 241 2 283 1 16 1 
145 1 201 3 39 1 103 1 294 1 332 1 357 3 373 1 324 1 277 1 316 1 220 2 170 4 257 1 256 1 317 1 25 3 369 1 241 2 97 1 283 1 16 1 
145 1 201 1 357 1 25 1 6 1 324 1 
201 6 145 3 18 1 286 1 20 1 6 1 179 1 357 7 373 2 324 2 76 1 263 1 81 1 288 1 170 3 256 1 49 1 317 2 13 1 25 7 28 1 
0 1 201 1 145 1 200 1 2 2 4 1 243 2 149 1 8 4 9 2 287 5 155 2 158 1 295 1 118 1 253 1 297 2 298 2 218 1 256 1 73 1 25 1 311 1 357 1 32 2 76 1 225 1 129 3 228 2 34 2 170 1 367 1 368 2 322 1 87 1 42 1 89 1 324 1 373 1 91 1 279 3 48 1 142 1 193 1 53 2 328 1 
200 1 201 1 5 1 243 1 331 1 149 1 311 1 357 1 244 1 228 1 205 1 247 1 317 1 367 1 368 2 211 1 14 1 370 1 344 1 322 1 87 1 89 1 43 1 184 1 218 1 220 1 376 1 47 3 74 1 142 1 190 2 304 1 25 1 241 1 98 1 165 2 379 1 
201 2 145 2 6 1 357 2 373 1 324 1 76 1 170 2 256 1 12 1 25 2 283 1 28 1 
145 1 201 4 55 1 357 4 373 1 324 1 106 1 76 1 316 1 266 1 170 1 317 1 25 4 
201 2 145 2 137 1 103 1 286 1 357 2 373 1 324 1 264 1 239 1 170 1 256 1 13 1 25 2 
145 1 201 1 176 1 317 1 314 1 357 1 25 1 324 1 315 1 44 1 
145 1 201 2 81 1 288 1 170 1 357 2 25 2 324 1 373 1 320 1 76 1 
201 4 145 2 103 1 55 1 357 5 179 1 373 2 324 2 106 1 76 1 263 1 266 1 288 1 170 3 317 1 25 5 
201 4 145 2 103 1 55 1 357 5 179 1 373 2 324 2 106 1 76 1 266 1 152 1 288 1 170 3 317 1 25 5 
145 1 201 1 89 1 243 2 357 1 333 1 373 1 295 1 324 1 228 2 170 1 256 1 317 1 142 1 25 1 367 1 224 1 328 1 
201 1 145 2 103 1 18 1 286 1 357 1 373 1 324 1 170 1 256 1 13 1 25 1 28 1 
89 1 243 1 356 1 148 1 180 1 104 1 228 1 95 1 272 1 
309 1 294 1 356 1 149 1 104 1 180 1 105 1 262 1 160 1 363 1 318 1 213 1 
356 1 180 1 104 1 105 1 224 1 
160 1 220 1 363 1 104 1 241 1 216 1 244 1 
258 1 159 1 271 1 135 1 
214 1 177 1 280 1 159 1 271 1 342 1 135 1 
234 1 342 1 233 1 
250 1 214 1 31 2 177 3 323 1 157 1 159 1 280 1 269 1 342 3 271 1 135 1 
151 1 214 1 177 2 280 1 159 1 271 1 342 2 135 1 226 1 
214 1 250 1 177 1 280 1 290 1 315 1 374 1 44 1 342 1 135 1 154 1 
214 1 250 1 177 1 280 1 159 1 342 1 135 1 
214 1 250 1 177 1 280 1 159 2 271 1 342 1 
250 1 214 1 177 1 79 1 280 1 84 1 342 1 
250 1 214 1 177 3 374 1 159 1 226 2 267 1 280 1 305 1 271 1 342 3 135 2 199 1 
250 1 214 1 177 2 314 1 315 2 159 1 44 1 226 1 337 1 280 1 319 1 271 1 342 2 135 1 154 1 
250 1 214 2 177 4 114 1 374 1 159 1 226 2 151 1 267 1 280 2 271 1 342 4 135 2 
214 1 250 1 177 1 280 1 159 1 271 1 342 1 135 1 
214 1 31 1 177 4 323 1 157 1 374 1 159 2 226 2 267 1 280 1 271 2 342 4 135 3 354 1 
41 1 250 1 214 1 177 2 159 1 226 1 360 1 280 1 192 1 342 2 271 1 135 1 
202 1 214 1 250 1 31 2 177 3 280 1 323 2 157 1 159 1 271 1 342 3 135 1 
229 2 345 1 120 1 135 2 
72 1 214 1 250 1 177 1 280 1 342 1 
214 1 250 1 177 2 280 1 305 1 159 1 271 1 342 2 135 1 226 1 
175 1 
214 1 250 1 177 1 280 1 159 1 271 1 342 1 135 1 
250 1 214 1 31 1 177 3 159 1 226 1 280 1 305 1 342 3 271 1 135 1 
267 1 374 1 135 1 354 1 
159 1 135 1 

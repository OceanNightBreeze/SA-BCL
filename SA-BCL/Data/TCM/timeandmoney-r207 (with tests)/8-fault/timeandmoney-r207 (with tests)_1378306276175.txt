#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 54 222 278 (47,84) (47,84) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 54 222 278 (47,84) (47,84) 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 54 222 278 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 54 222 278 115 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 54 222 278 (47,84) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 54 222 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 54 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 54 222 278 (47,84) (47,84) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 54 222 278 (47,84) (47,84) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 54 222 278 (47,84) (47,84) 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 54 222 278 (47,84) (47,84) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 54 325 236 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 54 222 278 115 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 54 222 278 (47,84) (47,84) 274 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 151 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 54 232 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 54 232 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 54 232 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 54 232 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 54 232 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
167 1 202 1 90 1 133 1 41 1 254 1 211 9 213 4 215 1 101 7 62 2 152 9 114 2 21 5 69 3 319 1 118 1 70 1 279 2 196 1 122 1 78 1 29 1 283 1 
167 1 202 1 90 1 133 1 41 1 254 1 211 9 213 4 215 1 101 7 62 2 152 9 114 2 21 5 69 3 319 1 118 1 70 1 279 2 196 1 122 1 78 1 29 1 283 1 
114 2 152 3 90 1 21 2 69 1 319 1 279 2 211 3 213 1 78 1 101 1 29 1 283 1 
167 1 170 1 202 1 249 1 90 1 133 1 41 1 293 1 254 2 211 9 213 4 215 1 101 6 223 1 310 1 62 2 152 9 114 2 21 5 69 3 319 2 70 2 196 2 279 2 78 1 29 1 329 1 283 1 
167 1 170 1 202 1 249 1 90 1 133 1 41 1 293 1 254 2 211 9 213 4 215 1 101 6 223 1 310 1 62 2 152 9 114 2 21 5 69 3 319 2 70 2 196 2 279 2 78 1 29 1 329 1 283 1 
167 1 170 1 202 1 249 1 90 1 133 1 41 1 293 1 254 2 211 10 213 5 215 1 101 7 223 1 310 1 62 2 152 10 114 2 21 6 69 4 319 2 70 2 196 2 279 2 78 1 29 1 329 1 283 1 
167 1 170 1 202 1 249 1 90 1 133 1 293 1 254 2 211 7 213 3 215 1 101 4 223 1 310 1 62 1 152 7 114 2 21 4 69 2 319 2 70 2 196 2 279 2 78 1 29 1 329 1 283 1 
62 2 114 1 152 4 90 1 133 1 41 1 21 3 69 1 254 1 70 1 279 1 211 4 196 1 213 2 215 1 78 1 101 3 29 1 
310 1 248 1 249 1 114 1 152 2 90 1 21 1 254 1 319 1 70 1 279 1 211 2 242 1 78 1 263 1 29 1 
84 1 156 1 278 1 47 1 142 1 54 1 222 1 13 1 
295 1 
165 1 84 1 230 1 295 1 156 2 278 1 47 1 217 1 142 2 54 1 222 1 13 1 143 1 
165 1 59 1 146 1 129 1 295 1 230 2 94 1 5 2 97 2 156 5 214 1 217 1 162 1 142 5 123 1 243 2 199 1 13 2 164 1 
151 1 217 1 295 1 
288 1 
278 1 54 1 222 1 
278 1 115 1 54 1 222 1 
278 1 47 1 54 1 222 1 
58 1 63 1 316 1 295 1 156 1 6 1 262 1 7 1 217 1 142 1 220 1 82 1 305 1 144 1 
54 1 222 1 
175 1 156 1 142 1 230 1 13 1 
165 1 3 1 156 2 217 1 142 2 295 1 230 1 13 1 
156 1 142 1 230 1 
180 1 87 1 30 1 
260 1 180 2 36 1 301 1 30 2 81 1 
180 1 30 1 
180 1 30 1 
36 1 81 1 
36 1 81 1 
36 1 81 1 
180 1 160 1 30 1 
180 1 160 1 30 1 
180 1 160 1 30 1 
180 1 290 1 30 1 
180 1 290 1 30 1 
180 1 290 1 30 1 
34 2 180 2 313 1 134 3 295 1 321 1 276 2 260 1 277 2 156 2 120 2 99 1 9 1 241 1 304 1 142 2 284 2 30 2 104 1 
276 1 34 1 180 1 277 1 156 1 134 1 142 1 30 1 284 1 54 1 104 1 
196 1 212 1 248 1 38 2 254 2 
196 1 254 1 70 1 
248 1 254 1 70 1 
196 2 212 1 72 1 248 1 38 1 254 3 
196 1 212 1 248 1 38 1 253 1 254 2 
165 1 286 1 288 3 132 1 39 1 295 2 95 1 136 1 96 1 97 1 5 1 299 1 138 1 303 2 217 1 142 5 219 1 13 4 59 2 272 1 230 1 23 1 194 2 155 1 156 5 326 1 240 1 123 3 333 2 243 1 332 1 164 1 
84 1 86 1 295 1 230 1 175 1 156 2 158 1 278 1 47 1 217 1 142 2 11 1 54 1 222 1 13 2 
84 1 286 1 288 3 39 1 132 1 295 2 95 1 94 1 136 1 96 1 97 1 5 1 138 1 47 1 303 1 217 1 142 3 54 1 222 1 13 2 59 2 272 1 23 1 155 1 194 2 156 3 278 1 240 1 123 3 243 1 333 2 
84 1 286 2 288 6 39 1 132 2 295 3 95 2 94 1 136 2 96 1 97 1 5 1 138 2 47 1 303 2 217 1 268 1 142 4 54 1 222 1 13 3 106 1 107 1 59 4 272 2 23 1 194 4 155 1 156 4 278 1 240 2 123 5 333 4 243 1 
110 1 169 1 280 1 
193 1 271 1 151 1 
271 1 251 1 
271 1 50 1 
271 3 169 1 131 1 296 1 193 2 50 1 57 1 
271 1 50 1 57 1 
271 1 189 1 
132 3 1 8 256 14 258 1 10 2 218 2 14 1 181 1 272 3 149 1 64 5 314 2 228 4 116 1 274 1 324 1 76 1 197 2 285 6 
130 2 132 6 1 21 294 3 136 3 137 1 256 38 138 2 8 1 10 3 51 1 218 3 14 2 308 1 15 1 181 1 272 5 314 2 149 2 64 12 66 1 228 6 274 1 116 1 22 1 119 4 324 1 323 1 157 1 237 1 327 1 197 3 240 3 76 6 285 17 
130 4 132 3 1 9 256 16 10 2 218 2 14 1 15 2 109 1 18 1 181 1 272 3 149 1 64 7 314 2 228 5 274 1 116 1 22 1 323 2 157 2 327 2 197 2 76 2 285 7 
132 3 1 8 256 14 10 2 218 2 14 1 181 1 272 3 149 1 64 5 314 2 228 4 116 1 274 1 324 1 197 2 76 1 285 6 
132 3 1 8 256 14 10 2 218 2 14 1 181 1 272 3 149 1 64 7 314 2 228 4 116 1 274 1 324 1 197 2 76 3 285 6 
83 1 250 1 88 1 89 1 252 1 42 1 211 1 300 1 178 1 266 2 50 1 267 2 16 2 271 1 185 1 112 2 67 1 68 2 152 1 114 1 231 1 319 2 279 1 28 2 
166 1 168 1 201 1 248 1 89 1 254 2 211 1 300 1 265 1 266 1 267 1 16 1 182 1 147 1 112 1 68 1 152 1 114 1 319 1 70 1 320 1 196 1 279 1 72 1 28 1 29 1 
166 1 168 1 201 1 248 1 90 1 89 1 254 2 211 2 300 1 101 1 266 1 267 1 16 1 182 1 147 1 183 1 112 1 68 1 152 2 114 1 21 1 319 1 70 1 320 1 196 1 279 1 72 1 78 1 28 1 29 1 
166 1 168 1 201 1 248 1 90 1 89 1 254 2 211 3 300 1 265 1 101 2 266 1 267 1 16 1 182 1 147 1 112 1 68 1 152 3 114 1 21 1 231 1 319 1 70 1 196 1 279 1 72 1 78 1 77 1 28 1 
166 1 248 1 90 1 89 1 254 2 211 2 300 1 265 1 101 2 266 1 267 1 16 1 182 1 147 1 112 1 68 1 152 2 21 1 319 1 70 1 196 1 72 1 78 1 77 1 28 1 
150 1 
165 2 32 1 85 1 247 2 289 3 91 1 295 1 95 2 208 1 97 1 5 1 6 1 262 1 7 1 217 1 52 1 142 4 220 1 179 1 305 1 144 1 58 1 59 1 63 1 111 3 19 2 316 1 190 1 117 5 230 5 192 1 322 1 154 2 156 4 71 3 73 1 79 2 123 1 243 1 31 1 82 1 164 1 
165 2 32 1 85 1 247 2 289 3 91 1 295 1 95 2 208 1 97 1 5 1 6 1 262 1 7 1 217 1 52 1 142 4 220 1 179 1 305 1 144 1 58 1 59 1 63 1 111 3 19 2 316 1 190 1 117 5 230 5 192 1 322 1 154 2 156 4 71 3 73 1 79 2 123 1 243 1 31 1 82 1 164 1 
165 2 255 2 5 1 97 1 6 1 262 1 7 1 103 1 111 2 117 4 190 1 192 1 198 1 123 1 126 2 32 1 288 2 289 2 295 1 208 1 52 1 217 1 142 4 220 1 144 1 305 1 58 1 59 1 63 1 316 1 230 4 154 2 156 4 71 2 73 1 79 2 82 1 243 1 164 1 
165 1 83 2 88 1 89 1 95 1 5 1 97 1 6 1 262 1 7 1 266 2 102 1 103 1 179 1 271 1 19 1 112 2 190 1 117 2 23 1 192 1 27 1 123 2 33 1 32 1 288 1 295 1 208 1 42 1 300 1 50 1 52 1 142 3 220 1 305 1 144 1 58 1 59 2 309 1 63 1 68 2 316 1 230 2 154 1 156 3 73 1 79 1 243 1 82 1 164 1 
165 1 32 1 208 1 6 1 262 1 7 1 52 1 142 3 220 1 143 1 305 1 144 1 58 1 63 1 111 1 316 1 190 1 117 2 230 2 192 1 156 3 82 1 
32 1 165 1 295 1 208 1 6 1 262 1 7 1 52 1 217 1 142 3 220 1 143 1 305 1 144 1 58 1 63 1 316 1 190 1 117 3 230 1 192 1 156 3 71 1 82 1 
165 1 32 1 289 1 208 1 6 1 262 1 7 1 52 1 142 3 220 1 143 1 305 1 144 1 58 1 63 1 111 1 316 1 190 1 117 3 230 2 192 1 156 3 71 1 82 1 
165 3 84 1 85 1 247 2 91 1 95 2 5 1 97 1 6 1 262 1 7 1 179 1 111 4 19 2 117 4 190 1 192 1 278 1 123 1 31 1 32 1 289 4 295 1 208 1 47 1 217 1 52 1 142 5 220 1 54 1 222 1 143 1 144 1 305 1 58 1 59 1 63 1 312 1 316 1 230 7 322 1 154 2 156 5 71 2 73 1 79 2 82 1 243 1 164 1 
32 1 288 1 295 1 95 1 208 1 97 1 5 1 6 1 262 1 7 1 52 1 142 2 103 1 220 1 305 1 144 1 179 1 58 1 59 1 63 1 19 1 316 1 190 1 117 2 192 1 154 1 156 2 73 1 79 1 123 1 243 1 82 1 164 1 
165 2 32 1 85 1 247 2 289 2 295 1 95 2 208 1 97 1 5 1 6 1 262 1 7 1 217 1 52 1 142 4 220 1 179 1 305 1 144 1 58 1 59 1 63 1 111 2 19 2 316 1 190 1 117 4 230 4 192 1 322 1 154 2 156 4 71 2 73 1 79 2 123 1 82 1 31 1 243 1 164 1 
165 2 32 1 85 1 247 2 289 2 295 1 95 2 208 1 97 1 5 1 6 1 262 1 7 1 217 1 52 1 142 4 220 1 179 1 305 1 144 1 58 1 59 1 63 1 111 2 19 2 316 1 190 1 117 4 230 4 192 1 322 1 154 2 156 4 71 2 73 1 79 2 123 1 82 1 31 1 243 1 164 1 
165 2 32 1 85 1 288 2 289 2 295 1 255 2 208 1 257 1 97 1 5 1 6 1 262 1 7 1 217 1 52 1 142 4 220 1 305 1 144 1 58 1 59 1 63 1 111 2 316 1 190 1 117 4 230 4 191 1 192 1 154 2 156 4 71 2 73 1 79 2 123 1 198 1 82 1 243 1 126 2 164 1 
130 4 246 1 203 1 132 3 135 1 1 9 294 1 136 3 137 1 2 1 256 17 4 2 138 2 221 1 15 2 109 1 272 2 227 2 64 4 65 1 66 1 186 1 228 2 119 2 323 2 157 2 76 2 327 2 240 3 285 8 
245 1 130 6 203 1 132 3 135 2 1 14 92 1 294 2 136 3 2 1 256 26 137 2 298 1 4 4 138 2 49 1 221 2 15 3 109 1 227 1 273 1 272 2 64 4 65 1 228 2 22 2 119 2 323 3 157 3 76 2 327 3 240 3 80 1 285 12 
245 1 246 1 92 1 1 22 256 42 2 1 4 4 10 1 15 3 109 1 181 1 272 4 273 1 116 1 22 1 119 5 195 1 197 1 285 20 130 6 203 1 132 6 135 2 294 3 136 5 137 3 298 1 138 3 49 1 218 1 221 1 227 1 64 6 314 1 66 2 65 1 228 3 157 3 323 3 240 5 327 3 76 3 80 1 
245 1 246 1 130 8 203 1 132 6 92 1 135 2 1 22 294 3 136 5 137 3 2 1 256 43 298 1 4 4 138 4 10 1 49 1 218 1 221 1 15 4 109 1 181 1 227 1 273 1 272 5 314 1 64 7 65 1 66 2 228 5 116 1 22 2 119 5 323 4 157 4 195 1 197 1 76 2 327 4 240 5 80 1 285 21 
245 1 130 2 203 1 132 5 135 1 1 17 92 1 294 2 136 4 137 2 2 1 256 32 298 1 4 3 138 3 10 1 49 1 218 1 221 1 15 1 109 1 181 1 227 1 273 1 272 4 314 1 64 5 65 1 66 1 228 3 116 1 119 3 323 1 157 1 197 1 76 2 327 1 240 4 80 1 285 15 
276 1 34 1 260 1 180 1 277 1 9 1 241 1 216 1 30 1 284 1 
87 1 56 1 
276 1 34 1 180 1 277 1 140 1 173 1 282 1 30 1 284 1 
34 1 180 1 313 1 134 2 295 1 321 1 276 1 260 1 156 1 277 1 120 1 99 1 9 1 241 1 142 1 284 1 30 1 104 1 
34 1 180 1 313 1 134 2 295 1 321 1 276 1 260 1 156 1 277 1 120 1 99 1 9 1 241 1 142 1 284 1 30 1 104 1 
34 1 180 1 313 1 134 2 295 1 321 1 276 1 260 1 156 1 277 1 120 1 99 1 9 1 241 1 142 1 284 1 30 1 104 1 
160 1 301 1 53 1 
160 1 301 1 53 1 
290 1 291 1 
301 1 290 1 291 1 
17 1 315 1 
286 1 34 1 17 1 180 1 313 1 315 1 87 1 134 1 276 1 277 1 156 1 120 1 325 1 236 1 326 1 142 1 219 1 284 1 30 1 54 1 13 1 56 1 
160 1 53 1 
301 1 290 1 291 1 
130 2 89 1 1 1 252 2 256 2 176 1 6 2 300 1 43 1 7 2 50 1 266 2 220 2 55 1 105 1 224 1 15 1 61 1 271 1 145 1 112 2 68 2 113 1 20 1 275 1 157 1 323 1 327 1 26 1 328 1 285 1 
83 1 271 1 311 1 185 1 112 1 68 1 88 1 89 1 42 1 300 1 50 1 266 1 28 1 124 1 
166 1 168 1 182 1 311 1 112 1 248 1 68 1 89 1 254 2 70 1 196 1 235 1 300 1 121 1 72 1 265 1 266 1 28 1 
166 1 168 1 182 1 311 1 183 1 112 2 248 1 68 2 89 1 254 2 70 1 196 1 235 1 300 1 121 1 72 1 265 1 266 2 28 1 
166 1 168 1 182 1 112 1 248 1 68 1 89 1 254 2 70 1 196 1 121 1 300 1 72 1 265 1 266 1 28 1 269 1 
37 1 
278 1 115 1 54 1 222 1 
59 2 288 4 295 4 95 2 23 1 5 1 97 1 194 2 197 1 217 2 102 1 123 1 333 2 243 1 164 1 
59 1 295 1 5 1 97 1 214 1 162 1 217 1 123 1 243 1 164 1 
59 2 288 3 272 1 132 1 295 1 136 1 95 1 194 2 138 1 240 1 123 2 333 2 
165 1 156 1 217 1 142 1 295 1 230 1 
33 1 83 2 165 2 88 1 89 1 94 1 97 2 5 2 42 1 300 1 50 1 266 4 102 2 142 3 59 2 309 1 108 1 271 1 112 4 68 4 318 1 230 4 23 2 156 3 75 2 123 2 330 1 243 2 164 1 
59 1 214 1 151 1 217 1 162 1 123 1 295 1 
59 1 288 1 19 1 295 1 95 1 5 1 97 1 123 1 243 1 164 1 179 1 
83 1 165 3 244 2 0 2 251 3 89 1 93 2 95 6 5 3 97 3 100 2 266 1 102 1 271 6 272 2 112 1 187 1 23 2 193 2 194 6 24 1 123 8 288 12 132 2 295 7 207 1 296 1 136 2 138 2 300 2 217 1 50 1 142 5 57 1 307 2 59 7 63 2 68 1 317 2 230 5 156 5 240 2 163 2 243 3 333 6 164 3 
165 1 288 6 245 1 0 2 132 2 92 1 295 5 294 1 95 3 136 2 137 1 298 1 97 2 5 2 209 1 138 2 139 1 49 1 217 2 102 1 142 1 59 5 273 1 272 2 230 1 23 1 119 1 194 5 156 1 159 1 240 2 123 8 333 5 243 2 164 2 
84 1 59 1 272 1 0 2 314 1 132 1 274 1 5 1 97 1 156 1 278 1 47 1 10 1 142 1 123 2 218 1 54 1 31 1 243 1 222 1 164 1 
276 1 34 1 17 1 287 1 9 1 
276 1 34 1 239 1 
276 1 34 1 239 1 
276 1 34 1 239 1 
276 1 34 1 127 1 
276 1 34 1 127 1 
276 1 34 1 127 1 
276 1 34 1 
180 1 30 1 
15 1 109 1 130 2 272 2 64 5 314 1 228 3 274 1 132 2 1 5 256 10 323 1 157 1 10 2 327 1 76 2 218 2 285 5 
15 1 109 1 130 2 64 1 132 1 1 2 256 2 157 1 323 1 327 1 240 1 76 1 
15 1 109 1 272 1 130 2 64 2 228 1 132 1 1 2 136 1 256 4 138 1 157 1 323 1 327 1 240 1 76 1 285 2 
15 3 109 1 246 1 130 6 64 2 228 1 1 1 22 1 153 1 256 3 157 3 323 3 10 1 327 3 76 1 218 1 285 2 
246 1 130 8 132 6 1 18 294 3 136 3 137 1 256 34 138 2 8 1 10 2 51 1 218 2 12 1 308 1 15 4 109 1 181 1 272 5 314 2 64 9 66 1 228 5 274 1 116 1 22 1 119 4 323 4 157 4 197 1 327 4 240 3 76 4 285 16 
130 2 132 4 1 10 294 1 136 1 256 18 137 1 10 2 49 1 218 2 15 1 109 1 181 1 272 3 314 2 64 5 66 1 228 4 274 1 116 1 119 2 323 1 157 1 76 1 197 1 327 1 240 1 285 8 
130 4 132 3 1 8 294 1 256 15 137 1 10 2 49 1 218 2 12 1 15 2 109 1 181 1 272 3 314 2 64 5 228 4 274 1 116 1 119 1 323 2 157 2 76 1 197 1 327 2 285 7 
245 1 130 6 132 5 1 13 92 1 294 1 136 2 256 26 137 1 298 1 138 2 10 2 49 1 218 2 12 1 15 3 109 1 181 1 273 1 272 5 314 2 64 7 228 5 274 1 116 1 22 1 119 1 323 3 157 3 197 1 76 2 327 3 240 2 285 13 
245 1 130 6 132 5 1 14 92 1 294 1 136 2 256 24 137 1 298 1 138 1 10 2 49 1 218 2 12 1 15 3 109 1 181 1 272 4 273 1 314 2 64 9 228 5 274 1 116 1 22 1 119 1 323 3 157 3 197 1 76 4 327 3 240 2 285 10 
130 2 132 4 1 10 294 1 136 1 256 18 137 1 10 2 49 1 218 2 15 1 109 1 181 1 272 3 314 2 64 5 66 1 228 4 274 1 116 1 119 2 323 1 157 1 76 1 197 1 327 1 240 1 285 8 
245 1 130 2 132 2 1 6 92 1 294 1 136 2 256 12 137 1 298 1 138 2 49 1 15 1 109 1 272 2 273 1 64 2 228 1 119 1 323 1 157 1 76 1 327 1 240 2 285 6 
245 1 130 8 132 5 1 14 92 1 294 1 136 2 256 25 137 1 298 1 138 1 10 2 49 1 218 2 12 1 15 4 109 1 181 1 273 1 272 4 314 2 64 7 228 5 274 1 116 1 22 2 119 1 323 4 157 4 197 1 76 2 327 4 240 2 285 11 
245 1 130 8 246 1 132 3 1 9 92 1 294 1 136 3 256 16 137 1 298 1 138 2 49 1 15 4 109 1 273 1 272 2 64 6 228 3 22 2 119 1 323 4 157 4 76 3 327 4 240 3 285 7 
181 1 272 1 64 6 314 1 228 3 116 2 132 1 1 3 256 7 10 3 76 3 218 3 285 4 
245 1 130 8 246 1 132 5 1 14 92 1 294 1 136 2 256 25 137 1 298 1 138 1 10 2 49 1 218 2 15 4 109 1 181 1 273 1 272 4 314 2 64 7 228 5 274 1 116 1 22 2 119 1 323 4 157 4 197 1 76 2 327 4 240 2 285 11 
130 4 132 3 1 9 256 17 10 2 218 2 15 2 181 1 272 3 64 7 314 2 228 4 274 1 116 1 22 1 323 2 157 2 327 2 76 3 197 1 285 8 
181 1 272 1 64 2 314 1 151 1 228 2 116 1 132 1 1 3 256 5 10 1 197 1 218 1 285 2 
15 1 272 1 130 2 64 2 228 1 132 1 1 2 136 1 256 4 138 1 157 1 323 1 327 1 240 1 76 1 12 1 285 2 
272 1 64 1 66 1 228 1 132 1 1 3 294 1 136 1 137 1 256 7 119 2 138 1 240 1 285 4 
130 2 172 1 132 5 1 13 294 2 136 2 256 25 138 2 10 2 218 2 15 1 181 1 272 5 314 2 64 7 66 1 228 5 274 1 116 1 22 1 119 2 233 1 157 1 323 1 197 1 240 2 76 2 327 1 285 12 
119 1 256 1 285 1 
1 1 294 1 256 1 
15 1 130 2 272 1 64 3 228 2 132 1 93 1 1 3 136 1 256 6 138 1 323 1 157 1 327 1 240 1 76 1 12 1 285 3 
245 1 130 2 132 2 1 6 92 1 294 1 136 2 256 12 137 1 298 1 138 2 49 1 15 1 109 1 272 2 273 1 64 2 228 1 119 1 323 1 157 1 76 1 327 1 240 2 285 6 
272 1 314 1 64 2 228 1 132 1 1 3 256 6 10 1 76 1 218 1 285 3 
15 1 181 1 130 2 64 2 228 1 116 1 1 1 22 1 153 1 256 3 157 1 323 1 10 1 76 1 327 1 218 1 285 2 
58 1 6 1 25 1 7 1 184 1 45 1 220 1 
270 1 58 1 35 1 184 1 40 1 6 1 25 1 7 1 46 1 45 1 238 1 220 1 
83 1 271 1 183 1 112 4 68 4 88 1 89 1 234 1 42 1 300 1 74 1 266 4 50 1 
225 1 128 1 271 1 112 2 68 2 89 1 297 1 210 1 44 1 300 2 75 1 266 2 50 1 57 1 
83 1 182 1 300 1 112 1 248 1 68 1 89 1 266 1 254 1 70 1 
271 1 183 1 112 2 68 2 89 1 176 1 300 1 265 1 26 1 266 2 50 1 
83 1 271 3 183 1 112 5 171 1 88 1 68 5 89 2 174 1 42 1 176 1 300 2 74 1 75 1 266 4 50 2 
83 1 271 3 183 1 112 5 188 1 88 1 68 5 89 2 174 1 42 1 176 1 300 2 74 1 75 1 266 4 50 2 
83 1 42 1 271 1 300 1 112 1 151 1 88 1 68 1 89 1 50 1 266 1 
54 1 232 1 
54 1 232 1 
54 1 232 1 
83 1 251 1 89 1 295 1 98 1 300 1 266 3 50 1 217 1 142 2 57 1 271 4 63 1 112 3 68 3 189 1 230 1 193 1 234 1 156 2 281 1 75 1 200 1 
83 1 63 1 271 4 112 3 68 3 251 1 189 1 89 1 295 1 230 1 193 1 234 1 156 2 98 1 300 1 75 1 217 1 50 1 266 3 163 1 142 2 57 1 
259 1 300 1 112 1 68 1 89 1 266 1 
83 2 271 3 183 1 112 7 171 1 68 7 292 1 89 2 205 1 252 1 296 1 297 1 174 1 259 1 176 1 210 1 300 3 265 1 266 6 50 2 57 1 
54 1 232 1 
83 1 165 1 244 1 251 1 295 1 97 2 5 2 214 1 100 1 217 1 266 1 142 3 13 1 59 1 108 1 271 2 63 1 112 1 68 1 317 1 230 2 193 1 156 3 162 1 163 1 123 1 243 2 164 2 
193 1 259 1 271 2 300 2 183 1 112 2 187 1 68 2 89 1 50 1 266 2 296 1 57 1 
54 1 232 1 
271 1 112 1 68 1 89 1 205 1 296 1 297 1 210 1 300 2 75 1 266 1 50 1 57 1 
167 1 114 1 152 3 249 1 90 1 21 1 279 1 211 3 101 1 78 1 29 1 
213 1 48 1 21 1 69 1 
90 1 21 1 
211 1 279 1 78 1 152 1 114 1 90 1 21 1 29 1 
249 1 152 4 114 1 90 2 21 3 69 1 261 1 211 4 279 1 213 1 48 1 78 2 101 2 331 1 
114 1 152 2 90 1 21 1 204 1 279 1 211 2 177 1 122 1 101 1 78 1 29 1 
114 1 152 3 249 2 90 1 21 1 279 1 211 3 261 2 78 1 29 1 331 1 306 1 
60 2 161 1 21 2 125 1 
211 1 279 1 148 1 152 1 114 1 29 1 
167 1 211 2 279 1 78 1 101 1 152 2 114 1 90 1 21 1 29 1 
206 1 
211 1 279 1 78 1 152 1 114 1 90 1 21 1 29 1 
151 1 78 1 90 1 21 1 
211 1 279 1 78 1 152 1 114 1 90 1 21 1 
211 1 267 1 319 1 
229 1 114 1 152 3 249 2 90 1 21 1 279 1 211 3 261 1 78 1 29 1 331 1 
62 1 211 2 279 1 78 1 101 1 152 2 114 1 90 1 21 1 
196 1 211 1 279 1 213 1 152 1 114 1 133 1 21 1 29 1 254 1 70 1 
211 1 279 1 152 1 114 1 90 1 21 1 29 1 
211 1 279 1 78 1 152 1 114 1 90 2 29 1 
226 1 114 2 152 2 90 1 21 1 279 2 211 2 302 1 264 1 29 1 
167 1 202 1 114 1 152 3 90 1 21 2 69 1 279 1 211 3 213 1 78 1 101 2 29 1 
248 1 114 1 152 2 90 1 21 1 254 2 70 1 279 1 211 2 196 1 72 1 141 1 78 1 101 1 29 1 
62 1 114 2 152 4 90 1 41 1 21 2 69 1 279 2 211 4 213 1 78 1 101 2 29 1 

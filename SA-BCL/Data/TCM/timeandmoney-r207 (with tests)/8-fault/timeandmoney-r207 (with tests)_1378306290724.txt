#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 236 287 (144,217) (86,232) (86,232) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 236 287 (144,217) (86,232) (86,232) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 236 287 (144,217) (86,232) (86,232) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 236 287 (144,217) (86,232) (86,232) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 236 (73,239,275,350) 123 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 236 287 (144,217) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 236 287 (144,217) 343 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 236 287 (144,217) 343 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (4,212) (43,247) (43,247) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 88 71 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 332 364 182 156 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 332 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 332 364 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 332 364 237 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 332 364 182 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 332 364 182 168 264 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 332 364 182 168 264 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 332 364 182 168 77 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 332 364 259 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 332 364 259 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 332 364 182 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (4,212) (4,212) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 88 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 299 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (4,212) (43,247) (43,247) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (4,212) (43,247) (43,247) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (4,212) (43,247) (43,247) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 195 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 195 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 246 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 246 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 88 71 8 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 195 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 246 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 80 103 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 80 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 205 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 236 (73,239,275,350) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 236 287 327 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 236 287 336 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 236 287 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
32 3 232 1 133 2 287 1 94 1 95 1 357 1 358 1 236 1 126 1 217 1 218 3 27 2 41 1 86 1 242 1 158 1 129 1 353 2 144 1 
32 3 232 1 133 2 287 1 94 1 95 1 357 1 358 1 236 1 126 1 217 1 218 3 27 2 41 1 86 1 242 1 158 1 129 1 353 2 144 1 
32 3 232 1 133 2 287 1 94 1 95 1 357 1 358 1 236 1 126 1 217 1 218 3 27 2 41 1 86 1 242 1 158 1 129 1 353 2 144 1 
32 3 232 1 133 2 287 1 94 1 95 1 357 1 358 1 236 1 126 1 217 1 218 3 27 2 41 1 86 1 242 1 158 1 129 1 353 2 144 1 
32 2 123 1 218 2 45 1 27 1 275 1 133 1 41 1 242 1 203 1 358 1 236 1 
32 2 330 1 133 1 346 1 95 1 137 1 126 1 322 1 218 2 27 1 41 1 242 1 158 1 129 1 353 1 258 1 
32 2 217 1 218 2 27 2 133 2 41 1 287 1 242 1 358 1 236 1 353 1 
343 1 32 3 45 1 133 2 287 1 358 1 236 1 239 1 217 1 218 3 27 2 41 1 242 1 353 1 
343 1 32 3 45 1 133 2 287 1 358 1 236 1 239 1 217 1 218 3 27 2 41 1 242 1 353 1 
245 1 105 1 324 1 
93 1 105 1 75 2 
194 2 240 2 283 2 192 2 65 1 257 1 302 2 208 2 
18 1 164 1 344 1 46 1 188 2 249 1 192 2 118 2 207 2 208 2 349 1 194 3 23 1 283 2 52 1 10 1 257 1 76 1 302 3 354 2 201 1 307 1 215 1 36 1 361 1 59 1 179 2 240 2 154 1 292 1 268 1 61 1 155 1 219 1 369 1 65 1 243 1 
194 1 240 1 323 1 283 1 192 1 65 1 359 1 302 1 261 1 208 1 
13 1 105 1 79 1 319 1 359 1 138 1 38 1 320 1 240 1 194 1 119 1 324 1 7 1 302 1 
166 1 319 2 192 2 138 1 208 2 320 2 194 2 323 1 324 1 7 1 283 2 302 2 79 1 105 1 359 2 261 1 38 1 240 2 65 1 
320 1 305 1 135 1 312 1 319 1 
266 1 320 2 114 1 105 1 324 1 305 1 312 1 319 2 
320 1 305 1 319 1 
166 1 319 1 192 1 359 1 261 1 208 1 320 1 240 1 194 1 323 1 312 1 283 1 65 1 302 1 
105 1 
320 2 114 1 105 1 324 1 305 1 312 1 202 1 319 2 
131 1 273 1 114 1 105 1 305 2 190 1 15 1 319 5 320 5 177 2 300 1 60 1 278 1 363 2 142 1 324 1 312 2 340 2 64 1 
245 1 257 1 
44 1 192 1 262 1 208 1 240 2 194 2 283 1 302 2 257 2 
244 1 309 1 216 1 
344 1 188 1 249 1 118 1 307 1 207 1 361 1 36 1 194 1 23 1 155 1 219 1 10 1 231 1 257 1 302 1 
344 1 34 1 188 1 249 1 192 1 118 1 307 1 207 1 36 1 361 1 208 1 309 1 240 1 194 2 23 1 155 1 219 1 351 1 10 1 302 2 
194 3 240 3 34 1 283 1 192 3 257 1 302 3 208 3 
194 1 240 1 323 1 192 1 359 1 302 1 208 1 
44 1 194 1 240 1 283 1 192 1 359 1 302 1 262 1 208 1 
44 1 18 1 344 1 188 1 249 1 192 3 319 1 118 1 207 1 138 1 208 3 349 1 139 1 320 1 194 4 23 1 351 1 283 2 7 1 52 1 10 1 257 1 76 1 302 4 354 1 34 1 79 1 201 1 307 1 175 1 359 1 36 1 361 1 38 1 59 1 179 2 240 3 154 1 268 1 155 1 219 1 369 1 65 1 243 1 
194 2 240 2 13 1 34 1 368 1 192 1 257 1 302 2 208 1 
44 1 34 2 105 1 79 1 319 1 192 3 359 1 175 1 208 3 138 1 38 1 320 1 240 3 194 3 351 1 283 1 7 1 63 1 302 3 
244 1 44 1 34 1 192 2 208 2 309 1 240 2 194 2 283 1 302 2 
344 1 188 1 249 1 118 1 307 1 207 1 361 1 36 1 194 1 23 1 155 1 219 1 10 1 257 1 302 1 
188 1 249 1 96 1 118 1 207 1 361 1 36 1 194 1 23 1 155 1 219 1 183 1 10 1 257 1 302 1 
244 2 18 1 20 1 252 1 121 1 76 1 354 4 78 1 201 1 234 1 151 1 152 1 59 1 309 2 179 2 216 2 109 1 154 2 292 2 268 1 128 1 221 1 369 1 272 1 
314 1 194 1 240 1 7 1 192 1 359 1 302 1 208 1 
44 1 13 1 34 2 57 1 192 4 208 4 240 5 194 5 351 1 283 1 368 1 302 5 257 1 270 1 
314 1 194 2 240 2 323 1 192 2 359 1 302 2 208 2 
274 1 
274 1 
315 1 304 1 
315 1 304 1 
315 1 304 1 
274 1 
274 1 
315 1 274 2 304 1 
274 1 
274 1 
274 1 
274 1 
274 1 
212 1 222 2 274 2 105 1 247 1 0 1 136 1 318 2 348 2 319 2 320 2 289 1 284 2 313 2 43 1 
222 1 274 1 136 1 288 1 318 1 319 1 348 1 192 1 208 1 320 1 178 1 71 1 194 1 240 1 74 1 284 1 88 1 313 1 302 1 
94 1 129 1 126 1 
346 1 129 1 126 1 
346 1 42 1 94 2 181 1 159 1 129 3 
21 1 346 1 42 1 94 1 159 1 129 2 
346 1 94 1 42 1 159 2 129 2 
93 1 114 1 296 1 190 2 206 1 319 5 320 5 5 2 324 1 74 1 121 1 75 3 12 2 105 2 285 1 305 1 288 1 234 1 15 1 308 1 58 2 107 1 152 1 335 1 177 1 108 1 60 3 178 1 363 1 312 4 340 1 272 1 
93 3 114 1 135 5 47 1 190 6 319 9 320 9 5 6 228 1 278 1 324 1 120 1 121 3 75 9 55 1 12 6 331 5 105 5 285 2 305 6 234 3 15 1 106 1 308 3 107 2 152 3 335 1 177 2 178 4 60 8 363 2 291 1 312 7 340 2 272 3 
93 2 296 1 190 2 206 1 319 3 320 3 5 2 278 1 324 1 121 1 75 4 12 2 105 3 285 1 234 1 107 1 58 1 308 1 152 1 177 1 60 3 178 1 363 1 312 2 340 1 272 1 
93 3 296 1 190 4 319 4 206 1 320 4 5 4 228 1 278 1 324 1 120 1 121 2 75 7 12 4 105 4 285 1 234 2 107 1 58 2 308 2 152 2 177 1 60 5 178 2 363 1 291 1 312 3 340 1 272 2 
245 1 6 1 10 1 
90 1 10 1 
356 1 
219 1 10 1 
6 2 219 1 301 1 191 1 10 3 36 1 
219 1 10 1 36 1 
10 1 185 1 
91 1 354 7 116 1 317 1 306 1 3 1 152 1 252 3 263 1 109 2 254 1 154 3 292 4 220 1 160 2 272 1 197 1 
91 1 354 7 116 1 317 1 306 1 3 1 152 1 252 3 263 1 109 2 254 1 154 3 292 4 220 1 160 2 272 1 197 1 
91 1 354 7 116 1 317 1 306 1 3 1 152 1 252 3 263 1 109 2 254 1 154 3 292 4 157 1 220 1 160 2 272 1 197 1 
91 1 19 4 18 1 132 3 116 2 276 1 317 1 3 1 252 10 254 1 51 1 279 1 30 1 196 1 121 3 76 1 328 1 197 5 354 31 201 1 306 2 234 3 308 3 263 2 152 4 179 2 109 5 154 15 267 1 268 1 292 16 220 2 160 3 272 4 
18 2 116 1 317 1 3 1 252 4 254 1 30 1 76 2 211 1 197 1 354 9 201 2 306 1 152 1 263 1 179 4 109 3 154 4 268 2 292 5 220 1 160 2 272 1 161 1 
223 1 45 1 133 1 188 1 189 1 346 1 94 1 249 1 118 1 207 1 97 1 27 1 229 1 281 1 100 1 353 1 303 1 258 1 32 2 330 1 126 1 153 1 218 2 155 1 41 1 181 1 242 1 269 1 129 2 271 1 
223 1 45 2 133 1 188 1 189 1 346 1 94 1 249 1 118 1 207 1 97 1 27 1 229 1 353 1 303 1 258 1 32 3 330 1 200 1 174 1 126 1 153 1 218 3 155 1 241 1 181 1 242 1 269 1 129 2 271 1 
32 2 330 1 223 1 45 2 200 1 188 1 346 1 94 1 249 1 118 1 126 1 207 1 153 1 97 1 218 2 155 1 229 1 241 1 181 1 242 1 129 2 269 1 271 1 353 1 258 1 
223 2 133 1 188 1 67 1 249 1 118 1 207 1 277 1 97 2 23 1 27 1 10 1 353 2 147 1 32 1 213 1 174 1 153 2 290 1 218 1 155 1 219 1 341 1 
223 1 133 1 188 1 189 1 346 1 94 1 249 1 118 1 207 1 97 1 27 1 229 1 100 1 353 1 303 1 32 1 126 1 153 1 218 1 155 1 41 1 241 1 181 1 269 1 129 2 271 1 
54 1 
93 1 224 1 188 2 190 2 319 4 277 1 138 1 320 4 194 1 280 1 7 1 10 1 332 1 13 1 15 1 107 1 60 2 240 1 155 1 156 1 338 1 110 1 340 1 341 1 62 1 114 2 249 1 118 2 68 1 207 2 251 1 23 2 119 1 26 1 170 1 75 1 302 1 172 1 79 1 305 3 359 1 176 1 38 1 177 1 265 2 363 1 219 1 311 1 364 1 182 1 366 1 
332 1 13 1 79 1 319 2 68 1 359 1 251 1 176 1 138 1 38 1 265 2 320 2 240 1 194 1 119 1 26 1 366 1 7 1 302 1 
114 1 319 3 68 1 251 1 138 1 320 3 194 1 119 1 26 1 324 1 7 1 302 1 198 1 13 1 79 1 105 1 305 1 202 1 359 1 176 1 38 1 265 3 240 1 366 1 
332 1 13 1 79 1 319 2 68 1 359 1 251 1 176 1 138 1 38 1 265 2 320 2 240 1 194 1 119 1 26 1 364 1 366 1 7 1 302 1 
332 1 13 1 114 1 79 1 305 1 202 1 319 3 68 1 359 1 251 1 237 1 138 1 176 1 38 1 265 2 320 3 194 1 240 1 119 1 26 1 364 1 366 1 7 1 302 1 
114 1 93 1 224 1 190 1 319 3 68 1 251 1 138 1 320 3 194 1 119 1 26 1 280 1 7 1 75 1 302 1 332 1 13 1 172 1 79 1 305 1 15 1 359 1 176 1 38 1 177 1 265 2 60 1 240 1 363 1 338 1 364 1 110 1 340 1 182 1 366 1 
114 1 93 1 224 1 190 1 319 3 68 1 251 1 138 1 320 3 168 1 194 1 119 1 26 1 280 1 7 1 302 1 332 1 13 1 172 1 79 1 305 1 15 1 359 1 176 1 38 1 264 1 265 2 177 1 60 1 240 1 363 1 84 1 338 1 364 1 110 1 340 1 182 1 366 1 
114 1 93 1 224 1 190 1 319 3 68 1 251 1 138 1 320 3 168 1 194 1 119 1 26 1 280 1 7 1 302 1 332 1 13 1 172 1 79 1 305 1 15 1 359 1 176 1 38 1 264 1 265 2 177 1 60 1 240 1 363 1 84 1 338 1 364 1 110 1 340 1 182 1 366 1 
114 1 190 1 319 3 68 1 251 1 138 1 320 3 168 1 194 1 140 1 119 1 24 1 26 1 7 1 75 1 302 1 329 1 77 1 332 1 13 1 172 1 79 1 305 1 15 1 359 1 176 1 38 1 265 2 177 1 60 1 240 1 363 1 338 1 364 1 340 1 182 1 366 1 87 1 
332 1 13 1 259 1 79 1 319 2 68 1 359 1 251 1 176 1 138 1 38 1 265 2 320 2 240 1 194 1 119 1 26 1 364 1 366 1 7 1 302 1 
332 1 13 1 259 1 79 1 319 2 68 1 359 1 251 1 176 1 138 1 38 1 265 2 320 2 240 1 194 1 119 1 26 1 364 1 366 1 7 1 302 1 
114 1 190 1 319 3 68 1 251 1 138 1 320 3 194 1 140 1 119 1 26 1 7 1 75 1 302 1 329 1 332 1 13 1 172 1 79 1 305 1 15 1 359 1 176 1 38 1 177 1 265 2 60 1 240 1 363 1 338 1 364 1 340 1 182 1 366 1 87 1 
244 1 245 1 18 1 116 1 317 1 3 1 252 2 254 1 76 1 257 2 354 6 201 1 151 1 263 1 152 1 309 1 59 1 179 2 109 2 216 1 154 3 268 1 292 3 369 1 160 1 272 1 
244 4 19 3 18 2 132 3 347 1 252 2 349 1 70 1 51 1 99 1 121 2 257 1 76 2 328 1 197 1 148 1 354 14 201 2 234 1 308 2 215 1 152 2 238 1 59 2 309 11 109 1 179 4 216 11 154 6 268 2 292 8 369 1 272 1 
244 1 18 1 344 1 188 1 249 1 192 1 118 1 207 1 208 1 349 1 23 1 194 2 351 1 10 1 231 1 257 1 302 2 76 1 148 1 122 1 354 2 34 1 199 1 201 1 214 1 307 1 36 1 361 1 215 1 59 1 240 1 179 2 154 1 155 1 268 1 292 1 219 1 369 1 
188 3 317 1 192 1 3 1 194 3 282 2 52 2 9 2 10 2 53 1 197 4 148 1 201 3 234 2 235 2 152 3 59 3 109 4 240 1 154 10 155 2 292 10 241 1 160 1 244 7 18 3 293 2 344 2 116 1 249 2 118 3 207 3 208 1 252 8 349 1 254 1 23 1 351 1 121 2 171 1 257 2 76 3 302 3 354 20 34 1 307 2 308 2 263 1 215 1 361 2 36 2 309 7 179 6 216 7 268 3 219 2 85 1 369 3 272 3 
162 1 18 2 188 7 249 2 192 1 118 8 207 8 277 1 208 1 349 1 194 1 23 2 98 1 281 1 10 3 145 1 302 1 76 2 149 1 354 2 34 1 201 2 151 1 333 1 215 1 59 2 240 1 179 4 310 1 154 1 155 2 268 2 292 1 61 2 219 2 241 1 341 1 369 2 130 1 
244 1 44 1 18 1 192 1 252 1 208 1 194 1 283 1 121 1 76 1 302 1 146 1 148 1 354 3 201 1 234 1 308 1 152 1 309 1 59 1 109 1 216 1 179 2 240 1 154 2 268 1 292 1 369 1 272 1 
244 1 18 1 354 2 20 1 201 1 151 1 252 1 152 1 309 1 59 1 216 1 179 2 268 1 292 2 121 1 369 1 76 1 197 1 
244 1 18 1 354 2 201 1 234 1 151 1 252 1 309 1 59 1 109 1 216 1 179 2 154 2 268 1 221 1 369 1 76 1 272 1 
244 2 18 1 354 4 201 1 234 1 151 1 308 1 252 2 152 1 309 2 59 1 109 1 216 2 179 2 154 2 268 1 292 2 121 1 369 1 76 1 272 1 197 1 
244 1 18 1 354 2 20 1 201 1 333 1 252 1 152 1 309 1 59 1 216 1 179 2 268 1 292 2 121 1 369 1 76 1 197 1 
244 1 18 1 354 2 201 1 234 1 333 1 252 1 309 1 59 1 109 1 216 1 179 2 154 2 268 1 221 1 369 1 76 1 272 1 
244 2 18 1 354 4 201 1 234 1 333 1 308 1 252 2 152 1 309 2 59 1 109 1 216 2 179 2 154 2 268 1 292 2 121 1 369 1 76 1 272 1 197 1 
244 2 18 1 354 4 201 1 234 1 308 1 252 2 152 1 309 2 59 1 109 1 216 2 179 2 154 2 268 1 292 2 121 1 369 1 76 1 272 1 197 1 
18 1 344 1 188 1 249 1 118 1 207 1 349 1 23 1 194 1 52 1 10 1 257 1 302 1 76 1 354 2 201 1 307 1 215 1 36 1 361 1 59 1 179 2 154 1 292 1 155 1 268 1 219 1 369 1 
18 1 188 1 249 1 96 1 118 1 207 1 349 1 23 1 194 1 10 1 257 1 302 1 76 1 354 2 150 1 201 1 215 1 36 1 361 1 59 1 179 2 154 1 292 1 155 1 268 1 219 1 183 1 369 1 
244 2 148 1 18 1 354 4 201 1 234 1 308 1 252 2 152 1 309 2 59 1 109 1 216 2 179 2 154 2 268 1 292 2 121 1 369 1 76 1 272 1 197 1 
244 2 18 1 344 1 188 1 249 1 118 1 207 1 252 2 194 1 281 1 121 1 52 1 9 1 10 1 302 1 76 1 197 1 354 4 201 1 234 1 307 1 308 1 152 1 36 1 361 1 309 2 59 1 109 1 216 2 179 2 154 2 292 2 155 1 268 1 219 1 369 1 272 1 
44 1 244 1 18 1 192 1 298 1 252 1 208 1 194 1 283 1 121 1 76 1 302 1 197 1 148 1 354 3 201 1 234 1 308 1 152 1 59 1 309 1 179 2 240 1 216 1 154 1 268 1 292 2 369 1 272 1 
19 2 18 2 132 1 134 1 248 1 48 2 226 1 252 6 51 1 29 1 121 3 76 2 328 1 197 3 102 1 354 19 201 2 234 3 308 3 152 3 362 2 109 3 83 1 179 4 154 10 268 2 292 9 342 1 161 1 272 3 
18 3 19 2 316 1 132 2 134 1 48 4 2 1 226 1 252 4 253 1 29 2 30 2 326 1 121 3 76 3 197 2 328 2 354 26 201 3 233 1 234 2 308 3 152 3 362 1 40 1 109 2 83 2 179 6 154 12 268 3 292 14 342 1 272 2 161 1 
19 4 18 3 316 1 132 3 134 1 116 1 48 4 317 1 225 1 2 1 3 1 226 1 252 8 253 1 254 1 51 1 29 1 30 1 326 1 121 4 76 3 328 3 197 4 102 1 354 41 201 3 233 1 234 4 308 4 263 1 152 5 362 1 40 1 109 4 83 2 179 6 154 21 268 3 292 20 342 1 160 1 161 1 272 5 
19 4 18 4 316 1 132 3 134 1 116 1 48 4 317 1 225 1 2 1 3 1 226 1 252 7 253 1 254 1 51 1 29 1 30 2 326 1 121 4 76 4 328 3 197 3 102 1 354 38 201 4 233 1 234 3 308 4 263 1 152 5 362 1 40 1 109 4 83 2 179 8 154 18 268 4 292 20 342 1 160 1 161 1 272 4 
19 4 18 2 316 1 132 4 134 1 116 1 48 4 317 1 2 1 3 1 226 1 252 14 253 1 254 1 51 2 29 1 30 1 326 1 121 7 76 2 328 2 197 7 354 52 201 2 233 1 234 7 308 7 263 1 152 8 238 2 362 1 40 1 109 7 83 1 179 4 154 25 268 2 292 27 342 1 160 1 161 1 272 8 
212 1 222 1 274 1 284 1 348 1 313 1 4 1 
88 1 
222 1 274 1 284 1 348 1 313 1 299 1 
212 1 222 1 274 1 105 1 247 1 0 1 136 1 318 2 319 1 348 1 320 1 289 1 284 1 313 1 43 1 
212 1 222 1 274 1 105 1 247 1 0 1 136 1 318 2 319 1 348 1 320 1 289 1 284 1 313 1 43 1 
212 1 222 1 274 1 105 1 247 1 0 1 136 1 318 2 319 1 348 1 320 1 289 1 284 1 313 1 43 1 
195 1 
195 1 
246 1 
246 1 
169 1 56 1 
222 1 274 1 0 1 288 1 318 1 348 1 319 1 320 1 289 1 178 1 71 1 74 1 312 1 284 1 8 1 88 1 313 1 
195 1 
246 1 
18 1 204 1 188 2 249 1 118 2 207 2 349 1 194 2 98 1 141 1 143 1 10 1 302 2 76 1 148 1 149 1 354 2 201 1 334 1 215 1 59 1 240 2 179 2 154 1 155 1 268 1 292 1 61 2 219 1 369 1 111 1 
295 1 188 2 346 1 94 1 249 1 81 1 297 1 118 2 126 1 207 2 97 1 155 1 229 1 241 1 281 1 181 1 129 2 269 1 303 1 
188 1 346 1 94 1 249 1 125 1 297 1 118 1 126 1 207 1 97 1 155 1 229 1 241 1 181 1 129 2 269 1 303 1 
295 1 188 1 249 1 118 1 207 1 277 1 97 1 23 1 155 1 219 1 341 1 10 1 17 1 147 1 
295 1 188 1 346 1 94 1 249 1 81 1 297 1 118 1 126 1 207 1 97 1 155 1 229 1 241 1 181 1 129 2 269 1 303 1 
117 1 
131 1 245 1 60 1 105 1 324 1 190 1 64 1 
114 1 224 1 93 1 105 2 305 1 190 1 15 1 319 1 320 1 177 1 60 1 363 1 324 1 280 1 340 1 110 1 75 1 
177 1 103 1 23 1 363 1 155 1 80 1 188 1 340 1 249 1 15 1 118 1 207 1 
19 1 114 1 93 3 316 1 132 1 190 5 319 1 2 1 227 1 320 1 253 1 5 5 28 1 324 2 326 1 121 2 170 1 31 1 75 6 328 1 12 5 105 5 305 1 35 2 233 1 15 2 234 2 107 1 308 2 152 2 177 2 60 8 363 2 340 2 272 2 
116 1 190 2 317 1 166 1 319 1 192 1 208 1 320 1 194 1 323 1 28 1 283 1 302 1 35 2 15 1 359 1 261 1 263 1 152 2 177 1 60 2 240 1 363 1 84 1 340 1 184 1 65 1 272 1 
131 1 105 1 190 1 15 1 177 1 60 1 363 1 324 1 340 1 64 1 
12 5 93 5 105 5 35 2 190 5 234 2 308 2 152 2 5 5 60 5 28 1 282 1 121 2 75 10 272 2 
320 1 114 1 105 1 324 1 305 1 319 1 
114 2 188 4 249 1 190 2 319 3 118 4 207 4 277 1 320 3 23 2 278 1 255 1 170 2 10 1 305 4 124 1 15 1 107 2 177 2 60 2 363 2 155 1 219 1 311 1 339 1 340 2 365 2 62 1 341 1 
18 1 344 1 188 1 249 1 192 2 118 1 207 1 208 2 349 1 23 1 194 3 283 2 52 1 10 1 257 1 76 1 302 3 354 1 201 1 307 1 361 1 36 1 59 1 179 2 240 2 154 1 268 1 155 1 219 1 65 1 369 1 243 1 
12 2 93 2 105 4 190 2 15 1 107 1 177 1 5 2 60 1 363 1 324 2 340 1 170 1 160 1 75 4 
222 1 104 1 348 1 
222 1 115 1 169 1 367 1 348 1 
222 1 104 1 348 1 
222 1 104 1 348 1 
222 1 92 1 348 1 
222 1 92 1 348 1 
222 1 92 1 348 1 
222 1 348 1 
274 1 
18 2 354 8 116 1 201 2 317 1 3 1 152 1 252 3 263 1 109 2 179 4 254 1 154 4 292 4 268 2 30 1 160 1 76 2 272 1 197 1 
245 1 354 6 109 2 254 1 154 3 292 3 116 1 317 1 3 1 160 1 272 1 152 1 252 2 263 1 
112 1 18 1 354 4 201 1 234 1 308 1 252 2 152 1 109 1 179 2 154 2 268 1 292 2 121 1 76 1 272 1 197 1 
19 2 354 7 132 1 234 1 308 1 152 1 252 2 109 1 154 4 51 1 292 3 121 1 272 1 328 1 197 1 
19 2 18 2 132 2 116 2 317 1 250 1 3 1 252 9 254 1 51 1 99 1 30 2 121 2 76 2 197 4 354 23 201 2 234 2 308 2 263 2 152 3 238 1 109 5 179 4 154 12 292 11 268 2 160 1 272 3 
19 1 354 1 154 1 
354 1 292 1 132 1 
112 1 18 1 354 6 201 1 234 1 308 1 152 1 252 3 179 2 109 2 154 3 268 1 292 3 282 1 121 1 76 1 197 1 272 1 
19 1 18 1 132 1 316 1 2 1 252 2 253 1 326 1 121 2 76 1 197 1 328 1 354 12 201 1 234 2 233 1 308 2 152 2 179 2 109 1 154 6 268 1 292 6 161 1 272 2 
354 6 116 1 317 1 152 1 263 1 252 2 109 1 154 3 292 3 272 1 197 1 
18 1 354 3 116 1 201 1 250 1 3 1 252 2 263 1 109 1 254 1 179 2 154 2 292 1 268 1 30 1 76 1 197 1 
18 1 354 10 116 2 201 1 317 1 263 2 252 5 152 2 179 2 109 3 154 5 268 1 292 5 184 1 76 1 161 1 197 2 272 2 
18 1 354 2 201 1 152 1 252 1 179 2 268 1 292 2 121 1 76 1 161 1 197 1 
18 1 354 4 201 1 234 1 308 1 252 2 152 1 109 1 179 2 154 2 268 1 292 2 121 1 76 1 272 1 161 1 197 1 
102 1 18 3 354 3 116 1 201 3 250 1 263 1 252 2 179 6 109 1 154 2 268 3 292 1 30 1 76 3 161 1 197 1 
112 1 19 4 18 5 132 3 116 3 276 1 317 2 250 1 3 1 252 12 254 1 51 1 279 1 30 2 121 3 76 5 328 1 197 5 102 1 354 34 201 5 234 3 308 3 263 3 152 5 179 10 109 7 154 18 267 1 268 5 292 16 160 1 161 1 272 5 
19 1 18 2 132 1 316 1 2 1 252 2 253 1 30 1 326 1 121 2 76 2 197 1 328 1 354 11 201 2 234 1 233 1 308 2 152 2 179 4 109 1 154 4 268 2 292 7 161 1 272 1 
112 1 19 2 18 3 316 1 132 1 2 1 252 3 253 1 51 1 30 1 326 1 121 3 76 3 328 1 197 2 354 14 201 3 233 1 234 1 308 3 152 3 109 1 179 6 154 5 268 3 292 9 161 1 272 1 
112 1 19 1 18 3 132 1 316 1 116 1 317 1 2 1 3 1 252 4 253 1 254 1 326 1 30 1 121 2 76 3 197 1 328 1 354 19 201 3 233 1 234 2 308 2 263 1 152 3 179 6 109 3 154 10 268 3 292 9 160 1 161 1 272 3 
112 1 19 1 18 3 132 1 316 1 116 1 317 1 2 1 3 1 252 5 253 1 254 1 30 1 326 1 121 2 76 3 197 2 328 1 354 17 201 3 234 1 233 1 308 2 263 1 152 3 179 6 109 3 154 7 268 3 292 10 160 1 161 1 272 2 
19 1 18 2 132 1 316 1 2 1 252 2 253 1 30 1 326 1 121 2 76 2 197 1 328 1 354 11 201 2 234 1 233 1 308 2 152 2 179 4 109 1 154 4 268 2 292 7 161 1 272 1 
19 1 18 1 132 1 316 1 2 1 252 2 253 1 326 1 121 2 76 1 197 1 328 1 354 12 201 1 234 2 233 1 308 2 152 2 179 2 109 1 154 6 268 1 292 6 161 1 272 2 
112 1 19 1 18 4 316 1 132 1 116 1 317 1 2 1 3 1 252 5 253 1 254 1 326 1 30 2 121 2 76 4 197 2 328 1 354 18 201 4 233 1 234 1 308 2 263 1 152 3 179 8 109 3 154 8 268 4 292 10 160 1 161 1 272 2 
19 1 18 4 316 1 132 1 2 1 252 6 253 1 326 1 30 2 121 3 76 4 197 3 328 1 102 1 354 16 201 4 233 1 234 2 308 3 152 3 179 8 109 3 154 7 268 4 292 9 161 1 272 2 
354 7 116 3 317 1 3 1 263 3 252 6 152 1 254 2 109 3 154 4 292 3 272 1 197 3 
19 1 18 4 316 1 132 1 116 1 317 1 2 1 3 1 252 4 253 1 254 1 326 1 30 2 121 2 76 4 197 1 328 1 102 1 354 18 201 4 233 1 234 1 308 2 263 1 152 3 179 8 109 3 154 8 268 4 292 10 160 1 161 1 272 2 
194 1 240 1 13 1 368 1 167 1 257 1 302 1 
13 1 167 1 82 1 37 1 240 1 194 1 209 1 210 1 368 1 101 1 257 1 302 1 
245 1 23 1 155 1 219 1 188 1 249 1 341 1 10 1 118 1 277 1 207 1 
34 1 344 1 188 1 249 1 192 1 118 1 207 1 36 1 361 1 208 1 240 1 194 2 23 1 155 1 219 1 10 1 257 1 302 2 
344 1 188 1 249 1 192 1 118 1 207 1 208 2 194 2 7 1 10 3 257 1 302 2 34 1 260 1 359 1 361 1 36 2 38 1 240 2 155 1 219 2 365 1 185 1 
188 2 249 1 192 1 118 2 207 2 208 2 194 2 7 1 10 3 257 1 302 2 34 1 14 1 260 1 359 1 361 1 36 2 38 1 240 2 155 1 219 2 365 1 183 1 185 1 
90 1 188 3 249 1 319 2 118 3 207 3 320 2 23 1 6 1 25 1 324 1 10 4 79 1 105 1 14 1 305 1 260 1 36 1 180 1 155 1 219 1 365 1 185 1 
90 1 294 1 105 1 79 1 14 1 305 1 188 3 260 1 249 1 319 2 118 3 207 3 36 1 320 2 23 1 6 1 155 1 324 1 219 1 365 1 10 4 185 1 
155 1 188 1 249 1 118 1 207 1 145 1 
162 1 11 1 149 1 188 6 1 1 249 3 118 7 207 7 36 1 50 1 23 2 310 1 61 1 155 2 301 1 219 2 241 1 281 1 10 3 145 1 130 1 
244 1 18 2 293 1 344 1 116 1 188 1 249 1 317 1 192 1 3 1 118 1 207 1 252 2 208 1 254 1 194 2 143 1 281 1 52 1 9 1 10 1 257 2 302 2 76 2 148 1 354 6 34 1 201 2 307 1 152 1 263 1 36 1 361 1 309 1 59 2 216 1 109 2 240 1 179 4 154 3 292 3 155 1 268 2 219 1 369 2 160 1 272 1 
131 1 90 1 163 1 294 1 114 1 188 1 190 1 319 3 118 1 193 1 207 1 320 3 23 1 321 1 6 1 324 1 10 2 105 1 79 1 305 2 15 2 177 2 60 1 363 2 339 1 312 1 340 2 64 1 
155 1 80 1 188 1 249 1 118 1 207 1 145 1 
14 1 188 4 249 1 118 4 49 1 207 4 277 1 23 1 155 1 219 1 281 1 341 1 10 1 
11 1 165 1 188 2 249 2 118 2 207 2 36 1 50 1 155 1 219 1 365 1 256 1 171 1 10 1 
23 1 155 1 188 1 346 1 249 1 129 1 269 1 118 1 126 1 207 1 
149 1 155 1 219 1 188 2 241 1 281 1 249 1 10 1 118 2 334 1 207 2 
162 1 149 1 188 4 249 2 118 5 49 1 277 1 207 5 23 1 310 1 155 2 219 2 281 1 365 1 341 1 10 3 
149 1 188 4 22 1 249 2 118 5 49 1 277 1 207 5 23 1 310 1 155 2 219 2 281 1 365 1 341 1 10 3 
34 1 188 1 249 1 192 1 118 1 207 1 36 1 361 1 208 1 240 1 194 2 23 1 155 1 219 1 183 1 10 1 257 1 302 2 
11 1 188 1 1 1 249 2 118 1 207 1 36 1 50 1 155 1 301 1 219 1 365 1 10 1 
204 1 360 1 337 1 72 1 240 1 194 1 141 1 302 1 111 1 
79 1 205 1 319 1 360 1 69 1 175 1 359 1 337 1 138 1 38 1 320 1 72 1 127 1 7 1 
72 1 257 1 69 1 360 1 337 1 
320 1 72 1 127 1 312 1 205 1 230 1 319 1 
245 1 330 1 242 1 258 1 
32 1 330 1 218 1 27 1 133 1 242 1 258 1 
223 1 218 1 353 1 
32 3 330 1 218 3 27 1 345 1 133 1 41 1 286 1 95 2 242 1 89 1 258 1 
32 2 330 1 218 2 45 1 27 1 133 1 242 1 203 1 258 1 
32 1 218 1 27 1 275 1 133 1 41 1 242 1 358 1 236 1 
32 1 218 1 27 1 133 1 41 1 242 1 258 1 
32 1 330 1 218 1 27 1 133 1 41 1 258 2 
32 2 218 2 27 2 325 1 133 2 41 1 242 1 66 1 352 1 258 1 
32 2 355 1 218 2 45 1 27 1 133 1 41 1 287 1 242 1 358 1 236 1 327 1 
32 2 330 1 45 1 133 1 346 1 94 1 126 1 39 1 218 2 27 1 41 1 181 1 242 1 129 2 258 1 
32 2 218 2 45 1 27 1 133 1 41 1 287 1 242 1 203 1 358 1 236 1 336 1 
32 1 330 1 218 1 27 1 133 1 41 1 242 1 258 1 
32 2 218 2 27 1 45 1 133 1 287 1 242 1 236 1 358 2 
32 2 330 1 239 1 350 1 73 1 218 2 45 1 27 1 133 1 41 1 242 1 258 1 
32 3 330 1 218 3 186 1 27 1 345 2 133 1 41 1 95 2 242 1 89 1 258 1 
113 1 33 1 16 2 242 2 
32 1 218 1 27 1 187 1 133 1 41 1 
32 2 330 1 355 1 218 2 45 1 27 1 133 1 41 1 242 1 258 1 
173 1 
32 1 330 1 218 1 27 1 133 1 41 1 242 1 258 1 
32 3 330 1 355 1 45 1 133 1 95 1 218 3 27 1 41 1 242 1 258 1 
32 1 218 1 45 1 287 1 242 1 236 1 
242 1 258 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (51,106,196,198) (51,106,196,198) (51,106,196,198) 207 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (51,106,196,198) (51,106,196,198) (51,106,196,198) 207 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (51,106,196,198) (51,106,196,198) (51,106,196,198) 207 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (51,106,196,198) (51,106,196,198) (51,106,196,198) 207 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (51,106,196,198) (51,106,196,198) (51,106,196,198) 207 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (51,106,196,198) (51,106,196,198) (51,106,196,198) 207 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (51,106,196,198) (51,106,196,198) (51,106,196,198) 207 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (51,106,196,198) (51,106,196,198) (51,106,196,198) 207 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (51,106,196,198) (51,106,196,198) (51,106,196,198) 207 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (51,106,196,198) (51,106,196,198) (51,106,196,198) 207 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (51,106,196,198) (51,106,196,198) (51,106,196,198) (68,203) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (51,106,196,198) (51,106,196,198) (68,203) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (51,106,196,198) (51,106,196,198) (51,106,196,198) (68,203) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (51,106,196,198) (51,106,196,198) (51,106,196,198) 207 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 99 223 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3588 | = null
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
51 1 196 1 198 1 29 1 207 1 
51 1 196 1 198 1 29 1 207 1 
51 1 196 1 198 1 29 1 207 1 
51 1 196 1 198 1 29 1 207 1 
51 1 196 1 198 1 29 1 207 1 
51 1 196 1 198 1 29 1 207 1 
51 1 196 1 198 1 29 1 207 1 
51 1 196 1 198 1 29 1 207 1 
51 1 196 1 198 1 29 1 207 1 
78 1 249 1 307 1 
249 1 96 1 103 2 
9 1 158 2 140 2 134 2 162 2 238 2 61 1 47 2 
177 1 255 2 41 1 2 2 259 1 140 3 297 1 262 1 216 1 47 2 181 1 50 1 9 1 269 1 272 1 303 1 151 1 61 1 310 1 225 1 312 1 158 3 190 1 67 1 162 2 238 2 318 1 75 2 245 1 129 1 284 2 84 2 132 1 134 2 174 1 33 1 328 1 
158 1 171 1 40 1 257 1 140 1 134 1 162 1 238 1 61 1 47 1 
158 1 140 1 162 1 20 1 236 1 5 1 25 1 171 1 10 1 248 1 249 1 88 1 275 1 307 1 
158 1 140 1 162 1 238 1 47 1 5 1 25 1 171 1 10 2 248 1 134 1 249 1 275 2 88 1 307 1 
254 1 10 1 263 1 275 1 101 1 
254 1 268 1 10 2 81 1 249 1 275 2 307 1 101 1 
10 1 275 1 101 1 
254 1 157 1 158 1 40 1 257 1 140 1 162 1 238 1 47 1 171 1 10 1 134 1 275 1 61 1 
249 1 
254 1 10 2 81 1 185 1 249 1 275 2 307 1 101 1 
254 2 0 2 123 1 193 1 71 1 233 2 101 2 322 1 52 1 10 5 283 1 81 1 285 2 249 1 286 1 111 1 275 5 307 1 288 1 
255 1 228 1 158 2 190 1 67 1 279 1 140 2 297 1 162 1 216 1 238 1 262 1 47 1 50 1 245 1 284 1 84 1 328 1 310 1 13 1 
9 1 78 1 
158 2 140 2 162 2 46 1 238 1 168 1 47 1 9 2 134 1 
197 1 279 1 277 1 
255 1 158 1 190 1 67 1 139 1 140 1 297 1 262 1 216 1 50 1 9 1 245 1 284 1 84 1 310 1 328 1 
9 1 228 1 158 3 134 1 140 3 162 3 238 3 47 3 
158 1 171 1 257 1 140 1 162 1 238 1 47 1 
158 1 171 1 140 1 134 1 162 1 46 1 238 1 168 1 47 1 
255 1 41 1 2 2 259 1 140 4 297 1 216 1 262 1 47 3 181 1 5 1 50 1 9 1 10 1 303 1 151 1 59 1 275 1 61 1 310 1 13 1 225 1 312 1 158 4 228 1 190 1 67 1 162 3 238 3 318 1 168 1 75 1 25 1 245 1 171 1 129 1 284 1 31 1 84 1 248 1 134 2 174 1 88 1 328 1 
9 1 158 2 228 1 140 2 162 2 20 1 109 1 238 1 47 1 
311 1 228 2 158 3 140 3 162 3 238 3 168 1 47 3 5 1 25 1 10 1 171 1 248 1 134 1 249 1 59 1 275 1 88 1 13 1 
228 1 158 2 279 1 140 2 162 2 238 2 168 1 47 2 134 1 277 1 
255 1 158 1 67 1 190 1 140 1 297 1 262 1 216 1 50 1 9 1 245 1 284 1 84 1 310 1 328 1 
255 1 158 1 67 1 190 1 140 1 297 1 216 1 102 1 9 1 245 1 284 1 84 1 310 1 328 1 117 1 
294 1 2 2 259 1 260 1 261 1 4 1 181 2 6 1 303 1 305 1 308 1 277 2 64 1 312 1 279 2 318 1 75 4 26 1 128 1 197 2 129 1 174 1 33 2 204 1 
158 1 171 1 140 1 162 1 88 1 238 1 47 1 37 1 
228 2 158 5 140 5 162 5 20 1 238 4 168 1 143 1 47 4 9 1 134 1 109 1 13 1 205 1 
158 2 171 1 257 1 140 2 162 2 238 2 37 1 47 2 
247 1 22 1 
247 1 22 1 
192 1 166 1 
192 1 166 1 
192 1 166 1 
247 1 48 1 22 1 
38 1 247 1 22 1 
321 1 94 1 247 2 192 1 166 1 22 2 
247 1 48 1 22 1 
247 1 48 1 22 1 
247 1 44 1 22 1 
247 1 44 1 22 1 
247 1 44 1 22 1 
210 2 94 1 281 2 296 2 298 2 315 1 98 1 265 3 127 2 22 2 8 1 170 1 10 2 247 2 86 1 188 1 249 1 306 1 275 2 
1 1 210 1 38 1 158 2 179 1 281 1 296 1 140 2 162 2 298 1 317 1 238 2 265 1 47 2 218 1 24 1 23 1 22 1 9 1 10 1 247 1 306 1 275 1 116 1 
56 1 149 1 35 1 
244 1 56 1 149 1 
244 1 212 1 149 3 327 1 35 2 252 1 
244 1 212 1 149 2 327 1 35 1 153 1 
244 1 212 1 149 2 35 1 327 2 
135 2 1 1 0 1 254 4 294 1 93 2 260 1 96 1 103 3 101 1 266 1 10 5 305 1 275 5 111 3 307 1 64 1 226 1 278 1 14 1 233 1 316 2 194 1 317 1 23 1 322 2 27 1 81 1 83 1 285 1 249 2 288 1 
135 6 254 7 0 2 95 1 294 3 260 3 141 5 96 3 263 5 103 9 101 6 266 2 10 9 305 3 275 9 111 8 307 1 64 3 226 2 191 1 233 2 316 6 317 4 195 1 319 1 322 6 27 3 199 1 81 1 83 1 285 2 249 5 286 1 288 1 251 1 
135 2 254 2 0 1 294 1 93 1 260 1 96 2 103 4 266 1 10 3 305 1 275 3 111 3 307 1 64 1 226 1 14 1 233 1 194 1 316 2 317 1 27 1 322 2 285 1 249 3 286 1 
135 4 0 1 254 3 294 2 93 2 260 2 96 3 103 7 266 1 10 4 305 2 275 4 111 5 307 1 64 2 226 1 14 1 233 1 316 4 194 1 317 2 195 1 27 2 322 4 199 1 285 1 249 4 286 1 251 1 
190 1 78 1 250 1 
190 1 241 1 
18 1 
190 1 297 1 
190 2 258 1 18 1 297 1 126 1 245 1 250 2 
245 1 190 1 297 1 
190 1 187 1 
293 1 295 1 260 1 161 1 261 2 100 2 217 1 181 3 75 7 240 1 105 1 6 3 246 1 173 1 274 1 305 1 33 4 
293 1 295 1 260 1 161 1 261 2 100 2 217 1 181 3 75 7 240 1 105 1 6 3 246 1 173 1 274 1 305 1 33 4 
293 1 295 1 260 1 161 1 261 2 100 2 217 1 181 3 75 7 240 1 105 1 49 1 6 3 246 1 173 1 274 1 305 1 33 4 
293 2 294 3 295 2 2 2 259 1 260 4 261 5 100 3 217 5 181 15 105 2 301 1 6 10 271 1 274 1 150 1 305 4 155 1 309 1 64 3 312 1 159 4 234 3 161 2 239 1 240 1 75 31 27 3 246 1 129 1 173 1 174 1 33 16 290 1 
91 1 293 1 2 4 295 1 259 2 260 1 261 3 100 2 217 1 181 4 105 1 6 4 271 1 274 1 305 1 276 1 312 2 161 1 75 9 246 1 129 2 173 1 174 2 33 5 
51 1 196 1 198 1 29 1 207 1 
51 1 196 1 198 1 29 1 203 1 
51 1 106 1 29 1 68 1 
51 1 196 1 198 1 29 1 203 1 
51 1 196 1 198 1 29 1 207 1 
92 1 
0 1 255 2 256 2 180 4 96 2 3 2 97 1 103 2 101 6 5 1 10 5 273 2 11 1 111 2 275 5 120 1 121 1 190 1 20 1 282 1 25 1 28 2 284 2 285 1 288 1 206 1 43 2 140 1 297 1 55 1 307 1 310 2 62 1 226 1 158 1 67 1 73 1 233 1 162 1 164 1 235 1 236 1 165 2 242 1 76 2 322 2 171 1 81 3 323 1 84 2 248 1 249 2 88 1 328 1 331 1 
140 1 180 2 97 1 101 2 5 1 10 3 185 1 275 3 120 1 158 1 162 1 20 1 236 1 235 1 25 1 242 1 171 1 28 1 323 1 81 1 248 1 88 1 
43 1 140 1 180 3 97 1 101 1 5 1 10 3 185 1 275 3 307 1 120 1 158 1 162 1 20 1 236 1 235 1 25 1 242 1 171 1 323 1 81 1 248 1 249 1 88 1 
256 1 43 1 140 1 180 3 97 1 101 2 5 1 10 3 185 1 275 3 307 1 120 1 158 1 162 1 20 1 236 1 235 1 25 1 242 1 171 1 28 1 81 1 323 1 248 1 249 1 88 1 
0 1 256 4 180 6 96 2 3 2 97 1 101 7 5 1 10 5 273 2 185 1 275 5 111 1 115 1 120 1 122 1 20 1 25 1 28 4 285 1 202 1 288 1 43 4 140 1 220 1 55 1 307 5 158 1 233 1 162 1 235 1 236 1 165 2 169 1 242 1 322 1 76 2 171 1 81 3 323 1 248 1 249 5 88 1 331 1 
0 1 256 2 180 4 96 2 3 2 97 1 103 2 101 4 5 1 10 4 273 2 275 4 111 1 120 1 20 1 282 1 25 1 28 2 285 1 288 1 43 2 140 1 55 1 307 1 158 1 233 1 162 1 235 1 236 1 165 2 242 1 322 1 76 2 171 1 323 1 81 2 248 1 249 2 88 1 331 1 
0 1 256 2 43 2 140 1 180 4 96 2 3 2 97 1 101 4 5 1 10 4 220 1 273 2 55 1 111 1 275 4 307 1 120 1 158 1 233 1 162 1 20 1 236 1 235 1 165 2 169 1 25 1 242 1 76 2 322 1 28 2 171 1 81 2 323 1 248 1 285 1 249 1 202 1 88 1 288 1 331 1 
0 1 256 2 43 2 140 1 180 4 96 2 3 2 97 1 101 4 5 1 10 4 220 1 273 2 55 1 111 1 275 4 307 1 120 1 158 1 233 1 162 1 20 1 236 1 235 1 165 2 169 1 25 1 242 1 76 2 322 1 28 2 171 1 81 2 323 1 248 1 285 1 249 1 202 1 88 1 288 1 331 1 
136 2 0 1 256 2 43 2 140 1 180 4 214 1 3 2 97 1 101 4 103 2 5 1 10 4 107 1 55 1 111 1 275 4 307 1 120 1 158 1 19 2 233 1 162 1 20 1 236 1 235 1 165 2 25 1 242 1 322 1 28 2 79 1 171 1 81 2 323 1 248 1 285 1 249 1 202 1 88 1 288 1 
0 1 256 3 43 3 140 1 180 5 96 2 3 2 97 1 101 5 5 1 10 4 220 1 273 2 55 1 111 1 275 4 307 1 120 1 158 1 122 1 233 1 162 1 20 1 236 1 235 1 165 2 169 1 25 1 242 1 76 2 322 1 171 1 28 3 81 2 323 1 248 1 285 1 249 1 202 1 88 1 288 1 331 1 
0 1 256 3 43 3 140 1 180 5 96 2 3 2 97 1 101 5 5 1 10 4 220 1 273 2 55 1 111 1 275 4 307 1 120 1 158 1 122 1 233 1 162 1 20 1 236 1 235 1 165 2 169 1 25 1 242 1 76 2 322 1 171 1 28 3 81 2 323 1 248 1 285 1 249 1 202 1 88 1 288 1 331 1 
0 1 256 2 180 4 3 2 97 1 103 2 101 4 5 1 10 4 275 4 111 1 120 1 19 2 20 1 282 1 25 1 28 2 285 1 288 1 136 2 43 2 140 1 55 1 307 1 158 1 233 1 162 1 235 1 236 1 165 2 242 1 322 1 79 1 171 1 323 1 81 2 248 1 249 1 88 1 
295 1 2 2 259 1 260 1 261 2 100 1 181 3 105 1 6 2 9 2 274 1 303 1 305 1 277 1 312 1 279 1 318 1 75 6 26 1 246 1 78 1 197 1 129 1 173 1 174 1 33 3 
291 1 294 1 2 4 259 2 260 1 261 1 217 1 181 6 104 1 6 2 9 1 269 1 303 1 150 1 305 2 151 1 155 1 64 2 277 4 312 2 159 3 279 11 234 3 318 2 75 14 27 2 197 11 129 2 325 1 174 2 33 8 289 1 208 1 
255 1 139 1 2 2 259 1 140 2 297 1 216 1 262 1 47 1 144 1 104 1 181 1 50 1 145 1 9 1 269 1 303 1 151 1 310 1 277 1 13 1 158 2 228 1 312 1 227 1 190 1 67 1 162 1 238 1 318 1 75 2 245 1 284 1 129 1 84 1 174 1 33 1 328 1 
255 3 2 6 259 3 260 3 261 4 262 2 100 1 264 2 181 10 104 1 105 1 6 8 9 2 269 1 274 1 13 1 277 7 190 2 279 7 125 2 27 2 197 7 284 3 129 3 200 1 33 10 294 2 295 1 140 3 297 2 216 2 47 1 217 4 300 2 50 2 303 3 305 3 151 1 60 1 310 1 63 2 64 2 225 2 312 3 228 1 158 3 67 2 313 1 232 1 162 1 238 1 318 3 75 20 245 2 246 1 173 1 84 3 174 3 328 2 
209 1 177 2 255 7 2 4 259 2 140 1 297 2 45 1 47 1 181 1 7 1 267 1 269 1 303 2 151 1 310 2 158 1 228 1 312 2 121 1 67 2 190 3 69 1 313 1 162 1 237 1 238 1 318 2 75 2 26 1 172 1 284 8 129 2 84 8 174 2 326 1 33 1 328 2 206 1 
294 1 2 2 259 1 260 1 140 1 261 1 47 1 104 1 181 2 6 1 303 1 305 1 222 1 277 1 64 1 312 1 158 1 279 1 162 1 238 1 168 1 318 1 75 3 27 1 197 1 129 1 134 1 174 1 33 1 
312 1 279 1 2 2 259 1 318 1 217 1 4 1 75 2 26 1 6 1 197 1 129 1 303 1 174 1 305 1 33 2 277 1 64 1 
312 1 294 1 279 1 2 2 259 1 260 1 261 1 318 1 75 2 181 2 26 1 6 1 128 1 197 1 129 1 303 1 174 1 277 1 
294 1 2 2 259 1 260 1 261 1 217 1 181 2 6 2 303 1 305 1 64 1 277 2 312 1 279 2 318 1 75 4 26 1 27 1 197 2 129 1 174 1 33 2 
312 1 279 1 69 1 2 2 259 1 318 1 217 1 4 1 75 2 6 1 197 1 129 1 303 1 174 1 305 1 33 2 277 1 64 1 
312 1 294 1 279 1 69 1 2 2 259 1 260 1 261 1 318 1 75 2 181 2 6 1 128 1 197 1 129 1 303 1 174 1 277 1 
294 1 2 2 259 1 260 1 261 1 217 1 181 2 6 2 303 1 305 1 64 1 277 2 312 1 69 1 279 2 318 1 75 4 27 1 197 2 129 1 174 1 33 2 
294 1 2 2 259 1 260 1 261 1 217 1 181 2 6 2 303 1 305 1 64 1 277 2 312 1 279 2 318 1 75 4 27 1 197 2 129 1 174 1 33 2 
255 1 2 2 259 1 140 1 297 1 216 1 262 1 181 1 50 1 9 1 269 1 303 1 151 1 310 1 225 1 158 1 312 1 67 1 190 1 318 1 75 2 245 1 284 1 129 1 84 1 174 1 33 1 328 1 
255 1 2 2 259 1 140 1 297 1 216 1 142 1 102 1 181 1 9 1 269 1 303 1 151 1 310 1 117 1 158 1 312 1 67 1 190 1 318 1 75 2 245 1 284 1 129 1 84 1 174 1 33 1 328 1 
294 1 2 2 259 1 260 1 261 1 217 1 104 1 181 2 6 2 303 1 305 1 64 1 277 2 312 1 279 2 318 1 75 4 27 1 197 2 129 1 174 1 33 2 
255 1 294 1 2 2 259 1 260 1 140 1 297 1 261 1 216 1 262 1 217 1 181 2 6 2 50 1 303 1 305 1 277 2 64 1 225 1 158 1 312 1 67 1 190 1 279 2 125 1 318 1 75 4 245 1 27 1 197 2 172 1 284 1 129 1 84 1 174 1 33 2 328 1 
294 1 2 2 259 1 260 1 140 1 217 1 47 1 181 1 104 1 6 1 303 1 305 1 64 1 277 1 312 1 158 1 279 1 162 1 238 1 168 1 318 1 75 3 27 1 197 1 129 1 134 1 174 1 33 2 176 1 
91 1 294 3 2 4 259 2 260 3 261 3 217 3 181 10 6 6 270 1 147 2 150 1 305 3 112 2 155 1 64 3 312 2 159 2 231 1 160 1 234 1 75 19 27 3 80 1 129 2 85 1 174 2 33 9 287 1 175 1 
91 1 294 2 2 4 259 2 260 2 261 1 217 1 181 10 6 2 270 2 147 1 271 1 150 2 305 3 152 1 112 3 64 3 189 1 65 1 312 2 159 2 160 1 234 2 74 1 75 23 27 3 80 1 129 2 174 2 33 13 201 1 287 2 175 1 90 1 
91 1 138 1 294 4 2 4 259 2 260 4 261 2 217 3 181 16 6 5 270 2 147 1 150 3 305 4 152 1 112 3 155 1 64 4 189 1 65 1 312 2 159 4 160 1 74 1 234 3 75 31 27 4 80 1 129 2 85 1 174 2 33 15 201 1 287 1 175 1 90 1 
91 1 138 1 294 3 2 6 259 3 260 3 261 3 217 3 181 15 6 6 270 2 147 1 271 1 150 3 305 4 152 1 112 4 155 1 64 4 189 1 65 1 312 3 159 4 160 1 74 1 234 3 75 32 27 4 80 1 129 3 85 1 174 3 33 17 201 1 287 1 175 1 90 1 
91 1 291 2 294 7 295 1 2 4 259 2 260 8 261 7 100 1 217 8 181 25 105 1 6 15 270 1 147 1 271 1 274 1 150 2 305 8 152 1 112 4 155 2 64 7 189 1 65 1 312 2 159 4 160 1 74 1 234 4 75 52 27 7 246 1 80 1 129 2 173 1 174 2 33 27 201 1 287 1 175 1 90 1 
210 1 170 1 94 1 247 1 296 1 281 1 86 1 57 1 298 1 22 1 
38 1 24 1 
184 1 210 1 247 1 296 1 281 1 298 1 304 1 113 1 22 1 
210 1 94 1 281 1 296 1 298 1 315 1 98 1 265 2 127 1 22 1 8 1 170 1 10 1 247 1 86 1 249 1 306 1 275 1 
210 1 94 1 281 1 296 1 298 1 315 1 98 1 265 2 127 1 22 1 8 1 170 1 10 1 247 1 86 1 249 1 306 1 275 1 
210 1 94 1 281 1 296 1 298 1 315 1 98 1 265 2 127 1 22 1 8 1 170 1 10 1 247 1 86 1 249 1 306 1 275 1 
321 1 72 1 48 1 
321 1 72 1 48 1 
70 1 44 1 
321 1 70 1 44 1 
179 1 218 1 
254 1 210 1 1 1 38 1 179 1 213 1 296 1 140 2 298 1 98 1 265 1 47 2 218 1 9 1 10 1 275 1 116 1 158 2 281 1 162 2 317 1 238 2 127 1 22 1 23 1 24 1 247 1 
72 1 48 1 
321 1 70 1 44 1 
177 2 255 2 2 2 259 1 140 2 297 1 215 1 45 1 104 1 181 1 267 1 269 1 221 1 303 1 110 1 151 1 15 1 158 2 312 1 67 1 190 1 162 2 318 1 75 2 284 2 129 1 84 2 174 1 33 1 87 1 328 1 
119 1 255 2 67 1 39 1 313 1 17 1 280 1 299 1 167 1 244 1 172 1 284 2 54 1 84 2 56 1 149 2 35 1 328 1 252 1 
255 1 39 1 67 1 313 1 17 1 280 1 299 1 244 1 183 1 284 1 54 1 84 1 56 1 149 2 35 1 328 1 252 1 
119 1 255 1 121 1 67 1 190 1 39 1 297 1 284 1 30 1 84 1 148 1 328 1 310 1 206 1 
119 1 255 1 67 1 39 1 313 1 17 1 280 1 299 1 167 1 244 1 284 1 54 1 84 1 56 1 149 2 35 1 328 1 252 1 
154 1 
322 1 52 1 78 1 123 1 249 1 111 1 307 1 
0 1 96 1 103 1 101 1 10 1 273 1 111 1 275 1 307 1 233 1 76 1 322 1 81 1 285 1 249 2 288 1 331 1 
253 2 0 4 255 3 260 2 96 6 101 5 103 12 182 1 10 5 108 1 186 2 187 2 111 9 275 5 118 2 190 10 123 1 126 1 27 2 284 3 285 4 32 2 34 2 288 4 135 6 292 2 294 2 42 1 297 3 300 2 52 1 305 2 307 2 310 1 62 1 64 2 226 2 67 4 233 4 316 6 241 3 243 2 320 2 77 1 245 3 322 8 172 1 81 3 84 3 248 2 249 8 328 3 250 2 329 1 
135 5 0 1 294 2 260 2 96 3 103 6 150 1 305 2 152 1 111 6 64 2 189 1 65 1 159 1 233 1 234 1 74 1 316 5 322 4 27 2 285 1 249 3 32 1 201 1 288 1 
0 1 40 1 257 1 295 1 260 1 140 1 47 1 105 1 10 1 305 2 275 1 111 2 61 1 156 1 157 1 158 1 233 1 162 1 238 1 169 1 243 1 322 2 171 1 173 1 285 1 134 1 32 2 288 1 
0 1 123 1 233 1 322 1 52 1 285 1 249 1 111 1 288 1 307 1 
135 5 294 2 260 2 96 5 316 5 103 10 243 1 300 1 27 2 322 5 32 2 305 2 249 5 111 5 64 2 
10 1 81 1 249 1 275 1 307 1 101 1 
0 2 255 3 297 1 99 1 101 3 10 2 223 1 111 2 275 2 310 2 62 1 226 2 121 1 67 1 190 1 73 1 233 2 164 1 77 1 322 1 284 3 81 1 84 3 285 2 286 1 328 1 288 1 329 1 206 1 
255 1 41 1 2 2 259 1 140 3 297 1 262 1 216 1 47 2 181 1 50 1 9 1 303 1 151 1 61 1 310 1 225 1 312 1 158 3 67 1 190 1 162 2 238 2 318 1 75 1 245 1 129 1 284 1 84 1 134 2 174 1 328 1 
135 2 226 1 0 1 233 1 96 2 316 2 100 1 103 4 322 2 285 1 249 4 111 1 288 1 307 2 62 1 
53 1 296 1 298 1 
170 1 82 1 296 1 298 1 218 1 
53 1 296 1 298 1 
53 1 296 1 298 1 
296 1 133 1 298 1 
296 1 133 1 298 1 
296 1 133 1 298 1 
296 1 298 1 
247 1 22 1 
312 2 2 4 295 1 259 2 260 1 261 2 100 1 217 1 181 4 75 8 105 1 6 3 246 1 129 2 173 1 271 1 274 1 174 2 305 1 33 4 
295 1 260 1 261 2 100 1 181 3 75 6 105 1 6 2 78 1 246 1 173 1 274 1 305 1 33 3 
312 1 294 1 2 2 259 1 260 1 261 1 217 1 181 2 75 4 6 2 219 1 27 1 129 1 174 1 305 1 33 2 64 1 
294 1 159 2 260 1 234 1 261 1 217 1 181 4 75 7 6 2 27 1 150 1 33 3 305 1 155 1 64 1 
291 1 178 1 294 2 295 2 2 4 259 2 260 3 261 5 100 1 217 4 181 12 105 2 6 9 271 2 274 1 305 3 155 1 64 2 312 2 159 2 234 2 75 23 27 2 246 1 129 2 173 1 325 1 174 2 33 11 
159 1 75 1 181 1 
234 1 33 1 75 1 
312 1 294 1 2 2 259 1 260 1 261 2 217 1 181 3 75 6 300 1 6 3 219 1 27 1 129 1 174 1 305 1 33 3 64 1 
91 1 294 2 2 2 259 1 260 2 261 1 217 1 181 6 6 2 150 1 305 2 152 1 64 2 189 1 65 1 312 1 159 1 234 1 74 1 75 12 27 2 129 1 174 1 33 6 201 1 
295 1 260 1 261 1 217 1 75 6 181 3 105 1 6 2 173 1 305 1 33 3 
312 1 178 1 295 1 2 2 259 1 261 1 217 1 181 2 75 3 105 1 6 2 246 1 129 1 271 1 274 1 174 1 33 1 
91 1 312 1 2 2 295 2 259 1 260 2 261 3 217 2 75 10 181 5 105 2 6 5 129 1 173 1 174 1 33 5 305 2 156 1 
91 1 312 1 2 2 259 1 217 1 75 2 6 1 129 1 174 1 305 1 33 2 64 1 
91 1 312 1 294 1 2 2 259 1 260 1 261 1 217 1 181 2 75 4 6 2 27 1 129 1 174 1 305 1 33 2 64 1 
91 1 312 3 178 1 2 6 295 1 259 3 261 1 217 1 181 2 75 3 105 1 6 2 129 3 271 1 85 1 174 3 33 1 
91 1 178 1 294 3 295 3 2 10 259 5 260 5 261 7 100 1 217 5 181 18 105 3 301 1 6 12 219 1 271 2 274 1 150 1 305 5 309 1 155 1 64 3 312 5 159 4 234 3 75 34 27 3 246 1 129 5 173 2 85 1 174 5 33 16 290 1 
91 1 2 2 295 1 259 1 260 1 261 2 100 1 181 4 105 1 6 2 274 1 305 1 150 1 65 1 312 1 159 1 234 1 75 8 246 1 129 1 173 1 174 1 33 4 
91 1 295 1 2 4 259 2 260 1 261 2 100 1 217 1 181 5 105 1 6 3 219 1 274 1 150 1 305 2 155 1 64 1 65 1 312 2 159 2 234 1 75 11 27 1 246 1 129 2 173 1 174 2 33 6 
91 1 294 2 2 4 259 2 260 2 261 1 217 1 181 6 6 2 219 1 150 1 305 2 152 1 64 2 189 1 65 1 312 2 159 1 234 1 74 1 75 12 27 2 129 2 174 2 33 6 201 1 
91 1 294 1 295 1 2 6 259 3 260 2 261 2 100 1 217 2 181 7 105 1 6 4 219 1 271 1 274 1 150 1 305 3 152 1 64 2 189 1 65 1 312 3 159 1 234 1 74 1 75 17 27 2 246 1 129 3 173 1 174 3 33 10 201 1 
91 1 2 2 295 1 259 1 260 1 261 2 100 1 181 4 105 1 6 2 274 1 305 1 150 1 65 1 312 1 159 1 234 1 75 8 246 1 129 1 173 1 174 1 33 4 
91 1 294 2 2 2 259 1 260 2 217 1 181 6 6 1 150 1 305 2 152 1 64 2 189 1 65 1 312 1 159 1 234 1 74 1 75 12 27 2 129 1 174 1 33 6 201 1 
91 1 294 1 2 6 259 3 260 1 261 1 217 1 181 4 6 2 219 1 271 1 150 1 305 2 152 1 64 2 189 1 65 1 312 3 159 1 234 1 74 1 75 11 27 2 129 3 174 3 33 7 201 1 
91 1 294 2 2 8 259 4 260 2 261 3 217 3 181 7 6 6 271 2 150 1 305 3 152 1 64 3 189 1 65 1 312 4 159 1 234 1 74 1 75 16 27 3 129 4 85 1 174 4 33 9 201 1 
295 3 260 1 261 3 217 3 181 4 75 7 105 3 6 6 246 2 173 1 274 1 305 1 33 3 
91 1 294 1 295 1 2 8 259 4 260 2 261 4 100 1 217 1 181 8 105 1 6 5 271 2 274 1 150 1 305 3 152 1 64 2 189 1 65 1 312 4 159 1 234 1 74 1 75 18 27 2 246 1 129 4 173 1 85 1 174 4 33 10 201 1 
9 1 158 1 211 1 140 1 162 1 20 1 109 1 
158 1 211 1 230 1 140 1 162 1 124 1 20 1 314 1 9 1 324 1 109 1 58 1 
255 1 121 1 67 1 190 1 78 1 284 1 84 1 297 1 328 1 310 1 206 1 
255 1 228 1 158 2 190 1 67 1 140 2 297 1 162 1 216 1 238 1 47 1 50 1 9 1 245 1 284 1 84 1 310 1 328 1 
253 1 255 1 140 2 297 2 216 1 47 1 50 1 9 1 187 1 158 2 228 1 67 1 190 3 162 2 238 2 25 1 245 2 171 1 284 1 84 1 88 1 328 1 329 1 
253 1 255 2 140 2 297 2 216 1 47 1 9 1 302 1 187 1 117 1 158 2 228 1 67 1 190 3 162 2 238 2 25 1 245 2 171 1 284 2 84 2 88 1 328 1 329 1 
253 1 255 3 137 1 297 1 101 1 10 2 302 1 187 1 275 2 307 1 310 1 190 4 67 1 241 1 245 1 284 3 84 3 248 1 249 1 36 1 328 1 250 1 329 1 
253 1 255 3 67 1 190 4 297 1 101 1 241 1 245 1 10 2 302 1 284 3 84 3 248 1 187 1 186 1 249 1 275 2 310 1 307 1 250 1 328 1 329 1 
255 1 7 1 67 1 284 1 84 1 328 1 
177 1 209 1 255 6 190 3 67 3 313 1 297 2 163 1 237 1 21 1 126 1 7 1 267 1 245 1 172 1 284 7 84 7 326 1 310 2 328 2 89 1 
255 1 2 4 259 2 260 1 261 2 262 1 100 1 104 1 181 3 105 1 6 2 9 2 274 1 277 1 190 1 279 1 125 1 197 1 284 1 129 2 33 3 295 1 140 2 297 1 215 1 216 1 47 1 50 1 303 2 305 1 63 1 225 1 312 2 228 1 158 2 67 1 162 1 238 1 318 2 75 6 245 1 172 1 246 1 173 1 84 1 174 2 328 1 
255 1 0 2 254 1 292 1 101 2 52 1 10 3 186 1 111 1 275 3 307 1 310 1 118 1 190 2 123 1 233 2 241 1 322 1 77 1 284 1 81 1 84 1 248 1 285 2 249 1 34 1 288 2 250 1 
255 2 190 2 67 2 42 1 297 1 126 1 7 1 245 1 172 1 284 2 84 2 250 1 328 1 
255 4 121 1 67 1 190 1 297 1 172 1 302 1 284 4 84 4 310 1 328 1 330 1 206 1 
255 2 66 1 190 1 67 2 232 1 297 1 163 1 245 1 284 2 130 1 84 2 328 1 329 1 89 1 
244 1 255 1 67 1 284 1 280 1 84 1 56 1 149 1 328 1 310 1 
255 2 15 1 190 1 67 1 313 1 297 1 267 1 172 1 284 2 84 2 328 1 
255 4 121 1 190 3 67 2 297 2 237 1 267 1 172 1 284 5 84 5 326 1 310 1 328 2 330 1 329 1 206 1 
66 1 255 2 121 1 190 2 67 3 297 2 163 1 245 1 267 1 172 1 284 2 130 1 84 2 310 1 328 2 89 1 114 1 
255 1 228 1 158 2 190 1 67 1 140 2 297 1 162 1 216 1 238 1 47 1 9 1 245 1 284 1 84 1 310 1 328 1 117 1 
255 1 190 1 67 2 297 1 163 1 21 1 126 1 245 1 284 1 84 1 328 1 89 1 329 1 
9 1 229 1 146 1 16 1 224 1 
254 1 229 2 16 2 25 1 5 1 9 1 171 1 10 2 146 2 131 1 248 1 12 1 249 1 59 1 88 1 275 2 307 1 224 1 332 1 
158 1 16 1 140 1 162 1 146 1 221 1 110 1 87 1 224 1 
131 1 224 1 332 1 

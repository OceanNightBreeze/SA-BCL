#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 319 225 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 352 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
211 1 275 1 35 1 348 9 81 1 247 2 249 1 131 6 332 1 183 5 91 2 42 2 22 1 371 1 45 2 338 1 314 1 165 9 94 3 144 1 46 1 47 1 290 1 147 4 210 2 71 2 102 1 345 2 
211 1 275 1 35 1 348 9 81 1 247 2 249 1 131 6 332 1 183 5 91 2 42 2 22 1 45 2 371 1 338 1 314 1 165 9 94 3 144 1 46 1 47 1 290 1 147 4 210 2 71 2 102 1 345 2 
211 1 275 1 35 1 348 10 81 1 247 2 249 1 131 7 332 1 183 6 91 2 42 2 22 1 45 2 371 1 338 1 314 1 165 10 94 4 144 1 46 1 47 1 290 1 147 5 210 2 71 2 102 1 345 2 
211 1 275 1 35 1 348 7 81 1 247 2 131 4 332 1 183 4 91 2 42 2 22 1 45 2 371 1 338 1 314 1 165 7 94 2 144 1 46 1 47 1 290 1 147 3 210 1 71 2 102 1 345 2 
91 1 42 1 275 1 371 1 45 1 35 1 165 4 94 1 348 4 247 1 249 1 46 1 47 1 131 3 147 2 210 2 71 1 183 3 
91 1 42 1 275 1 371 1 338 1 165 2 348 2 247 1 36 1 46 1 181 1 134 1 71 1 102 1 345 1 183 1 
91 2 42 2 275 1 371 1 165 3 348 3 94 1 46 1 131 1 290 1 147 1 345 1 183 2 
275 1 35 1 348 9 247 1 109 1 249 1 131 7 307 1 183 5 91 2 42 2 22 1 371 1 45 1 165 9 94 3 144 1 46 1 47 1 147 4 290 1 210 2 71 1 345 1 
275 1 35 1 348 9 247 1 109 1 249 1 131 7 307 1 183 5 91 2 42 2 22 1 371 1 45 1 165 9 94 3 144 1 46 1 47 1 147 4 290 1 210 2 71 1 345 1 
368 1 125 1 352 1 
175 1 368 1 106 2 
162 2 28 2 327 2 156 2 115 2 15 2 5 1 195 1 
327 3 79 1 297 1 2 1 347 1 5 1 130 2 9 1 195 1 10 1 299 1 349 1 54 1 108 1 156 2 132 1 115 2 15 2 16 2 224 1 281 1 18 1 162 3 60 2 19 1 256 1 121 1 337 1 286 2 205 1 313 1 28 2 97 2 317 1 31 1 240 1 324 1 
162 1 28 1 327 1 156 1 64 1 115 1 15 1 195 1 325 1 95 1 
162 1 76 1 327 1 139 1 50 1 64 1 104 1 302 1 29 1 368 1 146 1 115 1 85 1 125 1 
162 1 327 1 139 1 50 1 104 2 64 1 28 1 302 2 29 1 156 1 368 1 146 1 115 1 15 1 125 1 
302 1 104 1 306 1 239 1 356 1 
302 2 368 1 104 2 306 1 186 1 125 1 107 1 356 1 
302 1 104 1 356 1 
162 1 327 1 64 1 104 1 195 1 95 1 302 1 28 1 156 1 306 1 115 1 15 1 188 1 325 1 
368 1 
358 1 302 2 368 1 104 2 306 1 186 1 125 1 356 1 
327 1 126 1 296 2 104 5 194 2 244 2 246 2 195 1 300 1 302 5 55 4 156 1 82 5 368 2 306 2 84 1 115 1 15 1 158 1 160 1 88 1 39 1 162 1 64 1 259 1 204 2 186 1 167 1 95 1 356 2 28 1 265 1 267 1 343 1 188 1 325 1 125 2 360 2 
5 1 352 1 
162 2 327 2 43 1 5 2 215 1 28 1 156 1 115 2 15 1 
62 1 212 1 7 1 
162 1 60 1 327 1 19 1 337 1 286 1 2 1 205 1 260 1 5 1 10 1 54 1 97 1 317 1 224 1 18 1 
162 2 60 1 327 2 19 1 337 1 2 1 286 1 205 1 339 1 7 1 10 1 54 1 350 1 28 1 156 1 97 1 317 1 115 1 224 1 18 1 
162 3 28 3 327 3 156 3 115 3 15 1 5 1 350 1 
162 1 28 1 327 1 156 1 64 1 115 1 95 1 
162 1 28 1 327 1 156 1 43 1 64 1 115 1 15 1 215 1 
327 4 50 1 328 1 79 1 104 1 2 1 347 1 5 1 130 2 215 1 9 1 299 1 195 1 10 1 54 1 350 1 302 1 156 3 115 3 15 2 16 1 224 1 281 1 18 1 162 4 60 1 139 1 19 1 256 1 121 1 337 1 64 1 286 1 205 1 313 1 339 1 28 3 29 1 97 1 69 1 146 1 317 1 31 1 324 1 
162 2 28 1 327 2 156 1 115 2 5 1 85 1 59 1 350 1 
162 3 50 1 327 3 139 1 104 1 64 1 339 1 215 1 350 2 302 1 28 3 29 1 156 3 368 1 69 1 146 1 115 3 15 1 189 1 
162 2 327 2 212 1 215 1 7 1 350 1 28 2 156 2 115 2 15 1 
162 1 60 1 327 1 19 1 337 1 286 1 2 1 205 1 5 1 10 1 54 1 97 1 317 1 224 1 18 1 
162 1 60 1 327 1 19 1 337 1 286 1 2 1 205 1 5 1 10 1 54 1 264 1 238 1 97 1 317 1 
51 1 79 1 212 2 347 1 214 1 130 2 7 2 349 2 180 1 16 4 281 2 256 1 62 2 121 1 204 1 68 1 27 1 209 1 31 1 171 1 293 1 324 1 377 1 360 1 
162 1 28 1 327 1 156 1 146 1 64 1 318 1 115 1 
162 4 327 4 310 1 64 1 6 1 339 1 5 1 215 1 350 2 236 1 28 4 156 4 115 4 15 1 
162 2 28 2 327 2 156 2 318 1 64 1 115 2 95 1 
112 1 98 1 
112 1 98 1 
114 1 182 1 
114 1 182 1 
114 1 182 1 
112 1 98 1 222 1 
112 1 20 1 98 1 
191 1 112 2 114 1 98 2 182 1 217 1 
112 1 98 1 222 1 
112 1 98 1 222 1 
112 1 98 1 23 1 
112 1 98 1 23 1 
112 1 98 1 23 1 
77 1 201 1 152 2 202 2 185 2 104 2 105 1 217 1 219 1 302 2 37 2 112 2 368 1 98 2 99 2 292 1 150 3 133 1 273 1 
162 2 327 2 202 1 93 1 1 1 20 1 312 1 44 1 104 1 185 1 5 1 302 1 28 2 37 1 156 2 112 1 170 1 98 1 99 1 115 2 150 1 294 1 376 1 273 1 
45 1 71 1 247 1 
36 1 71 1 247 1 
36 1 278 1 45 2 71 3 251 1 289 1 
36 1 278 1 45 1 71 2 251 1 80 1 
36 1 278 1 45 1 71 2 251 2 
175 1 153 2 1 1 127 1 296 1 104 5 194 1 106 3 246 1 11 2 218 1 300 1 196 1 302 5 55 3 82 2 368 2 306 4 353 1 335 1 93 1 229 2 204 1 186 1 230 1 25 1 68 1 356 1 294 1 293 1 125 1 360 1 
174 1 175 3 153 6 1 4 104 9 296 2 194 2 106 9 246 2 11 6 218 3 300 1 196 1 302 9 55 8 304 1 82 6 221 1 368 5 306 7 160 1 353 2 335 2 204 3 65 5 186 1 68 3 356 6 234 1 124 1 268 1 239 5 293 3 125 1 360 3 
175 2 153 2 1 1 127 1 296 1 104 3 194 1 106 4 246 1 11 2 218 1 302 3 55 3 82 2 368 3 306 2 160 1 353 1 335 1 229 1 204 1 230 1 68 1 293 1 125 1 360 1 
174 1 175 3 153 4 1 2 296 1 104 4 127 1 194 1 106 7 246 1 11 4 218 2 302 4 55 5 304 1 82 4 368 4 306 3 160 1 353 1 335 1 229 2 204 2 230 1 68 2 124 1 293 2 125 1 360 2 
205 1 352 1 355 1 
319 1 205 1 
136 1 
205 1 54 1 
317 1 205 3 308 1 355 2 54 1 179 1 
317 1 205 1 54 1 
205 1 245 1 
52 1 204 1 214 3 167 1 232 2 349 4 113 1 343 1 171 2 117 1 270 1 16 7 281 3 334 1 39 1 360 1 326 1 
52 1 204 1 214 3 167 1 232 2 349 4 113 1 343 1 171 2 117 1 270 1 16 7 281 3 334 1 39 1 360 1 326 1 
52 1 204 1 214 3 167 1 232 2 349 4 113 1 269 1 343 1 171 2 117 1 270 1 16 7 281 3 334 1 39 1 360 1 326 1 
242 4 79 1 346 1 52 1 347 1 214 10 130 2 349 16 218 3 113 1 157 1 117 2 16 31 334 1 281 15 87 1 252 1 39 2 163 1 256 1 204 4 315 3 167 2 232 3 68 3 343 1 171 5 270 2 293 3 271 1 324 1 344 1 326 5 360 4 
79 2 52 1 347 2 214 4 130 4 349 5 117 1 16 9 281 4 334 1 39 1 137 1 256 2 204 1 122 1 167 1 232 2 171 3 343 1 270 1 324 2 344 1 360 1 326 1 
275 1 2 1 178 1 348 2 53 1 216 1 247 1 36 1 131 1 17 1 183 1 253 1 60 1 91 1 42 1 285 1 337 1 45 1 286 1 371 1 123 1 165 2 289 1 145 1 237 1 46 1 97 1 71 2 375 1 345 1 
275 1 2 1 348 3 53 1 216 1 247 1 36 1 305 1 131 2 183 1 253 1 60 1 91 1 140 1 42 1 285 1 370 1 337 1 45 1 286 1 123 1 165 3 289 1 145 1 237 1 46 1 97 1 71 2 375 1 345 1 
275 1 2 1 348 2 53 1 216 1 247 1 36 1 131 2 305 1 183 1 60 1 140 1 285 1 337 1 286 1 45 1 123 1 165 2 289 1 145 1 46 1 97 1 71 2 375 1 345 1 
2 2 362 1 192 1 348 1 216 2 10 1 54 1 155 1 309 1 60 1 91 1 282 1 42 1 337 1 370 1 286 1 205 1 123 2 165 1 96 1 97 1 359 1 317 1 375 2 151 1 103 1 32 1 345 2 274 1 
2 1 178 1 348 1 53 1 216 1 247 1 36 1 253 1 60 1 91 1 140 1 42 1 285 1 337 1 45 1 286 1 371 1 123 1 165 1 289 1 145 1 237 1 97 1 71 2 375 1 345 1 
231 1 
296 1 104 2 2 2 192 1 194 1 246 1 10 2 54 1 300 1 302 2 12 1 55 1 82 1 353 1 60 2 337 1 286 2 205 1 186 1 96 1 356 2 97 2 359 1 169 1 317 1 291 1 151 1 274 1 
327 1 76 1 50 1 104 3 248 1 302 3 115 1 85 1 58 1 162 1 139 1 311 1 258 2 21 1 64 1 184 1 186 1 356 2 358 1 29 1 146 1 321 1 
162 1 50 1 76 1 327 1 139 1 311 1 258 3 184 1 64 1 104 3 21 1 186 1 329 1 248 1 356 1 358 1 302 3 29 1 368 1 146 1 115 1 58 1 85 1 125 1 
327 1 76 1 50 1 104 3 213 1 329 1 248 1 302 3 368 1 115 1 85 1 58 1 162 1 139 1 311 1 258 3 21 1 64 1 184 1 186 1 356 2 358 1 29 1 146 1 321 1 125 1 
50 1 104 5 296 1 194 1 246 1 248 1 154 1 300 1 302 5 303 2 55 1 197 1 115 1 57 1 58 1 162 1 254 1 311 1 258 6 64 1 21 1 356 7 358 1 29 1 321 4 125 5 327 1 76 1 34 1 175 2 128 1 213 4 329 4 82 1 368 5 85 1 138 2 139 1 92 1 184 1 186 3 340 2 146 1 100 2 
50 1 104 4 296 1 194 1 106 2 246 1 300 1 248 1 302 4 303 2 55 1 115 1 57 1 159 1 58 1 162 1 311 1 258 4 64 1 21 1 356 4 29 1 321 2 125 1 327 1 76 1 34 1 175 2 213 2 329 2 82 1 368 2 85 1 138 2 139 1 184 1 186 2 340 2 146 1 100 2 
34 1 327 1 76 1 50 1 175 2 296 1 104 4 128 1 213 2 194 1 246 1 329 2 248 1 154 1 300 1 302 4 303 2 55 1 82 1 368 1 115 1 57 1 85 1 58 1 138 2 162 1 254 1 139 1 311 1 258 4 21 1 64 1 184 1 186 2 356 4 340 2 29 1 146 1 100 2 321 2 125 1 
34 1 327 1 76 1 50 1 175 2 296 1 104 4 128 1 213 2 194 1 246 1 329 2 248 1 154 1 300 1 302 4 303 2 55 1 82 1 368 1 115 1 57 1 85 1 58 1 138 2 162 1 254 1 139 1 311 1 258 4 21 1 64 1 184 1 186 2 356 4 340 2 29 1 146 1 100 2 321 2 125 1 
34 1 327 1 76 1 50 1 296 1 104 4 128 1 213 2 194 1 106 2 246 1 329 2 248 1 300 1 302 4 55 1 82 1 368 1 115 1 38 1 85 1 58 1 138 2 162 1 139 1 311 1 258 4 336 1 21 1 64 1 184 1 164 2 186 2 356 4 29 1 146 1 100 2 321 2 149 1 125 1 33 2 
34 1 327 1 76 1 50 1 175 2 296 1 104 4 128 1 194 1 213 3 246 1 329 3 300 1 248 1 154 1 302 4 303 2 55 1 82 1 197 1 368 1 115 1 57 1 85 1 58 1 138 2 254 1 162 1 139 1 311 1 258 5 21 1 64 1 184 1 186 2 356 5 340 2 29 1 146 1 100 2 321 3 125 1 
34 1 327 1 76 1 50 1 175 2 296 1 104 4 128 1 194 1 213 3 246 1 329 3 300 1 248 1 154 1 302 4 303 2 55 1 82 1 197 1 368 1 115 1 57 1 85 1 58 1 138 2 254 1 162 1 139 1 311 1 258 5 21 1 64 1 184 1 186 2 356 5 340 2 29 1 146 1 100 2 321 3 125 1 
50 1 104 4 296 1 194 1 106 2 246 1 300 1 248 1 302 4 55 1 115 1 159 1 58 1 162 1 311 1 258 4 64 1 21 1 164 2 356 4 29 1 321 2 125 1 33 2 327 1 76 1 34 1 213 2 329 2 82 1 368 1 38 1 85 1 138 2 139 1 184 1 186 2 146 1 100 2 
79 1 52 1 212 1 347 1 214 2 5 2 7 1 130 2 349 3 16 6 334 1 281 3 352 1 39 1 256 1 62 1 121 1 204 1 167 1 232 1 31 1 171 2 343 1 324 1 377 1 360 1 
295 1 242 3 79 2 212 4 243 1 347 2 5 1 214 2 130 4 7 11 9 1 349 8 218 2 108 1 111 1 16 14 281 6 252 1 90 1 163 1 256 2 62 11 121 1 204 2 315 3 68 2 171 1 31 2 322 1 293 1 324 2 326 1 360 1 
327 2 79 1 2 1 212 1 243 1 347 1 5 1 130 2 10 1 9 1 8 1 54 1 350 1 349 1 330 1 108 1 156 1 115 1 16 2 224 1 281 1 18 1 60 1 162 2 19 1 256 1 337 1 121 1 286 1 205 1 260 1 339 1 233 1 28 1 97 1 317 1 31 1 324 1 
52 1 2 2 243 1 347 3 5 2 7 7 9 1 10 1 299 2 350 1 54 2 349 10 108 1 156 1 115 1 16 20 18 2 161 2 60 3 162 3 19 2 256 3 62 7 121 3 204 3 205 2 167 1 68 2 28 1 317 2 171 4 31 3 324 3 360 3 326 4 327 3 79 3 212 7 214 8 130 6 218 2 220 1 369 1 280 2 135 2 224 2 334 1 281 10 39 1 140 1 337 2 286 3 339 1 232 1 372 1 97 3 187 2 343 1 293 2 
79 1 176 1 2 2 192 1 347 1 130 2 10 1 9 1 54 1 349 1 108 1 132 1 16 2 281 1 60 2 228 1 256 1 337 1 121 1 286 2 205 1 96 1 97 2 359 1 317 1 31 1 151 1 324 1 274 1 
327 1 79 1 212 1 243 1 347 1 214 1 7 1 215 1 130 2 218 1 349 1 156 1 115 1 15 1 16 3 281 2 162 1 256 1 62 1 121 1 204 1 207 1 68 1 28 1 171 1 31 1 293 1 324 1 360 1 
256 1 62 1 79 1 121 1 212 1 204 1 347 1 214 1 7 1 130 2 68 1 349 2 209 1 31 1 16 2 324 1 377 1 326 1 
51 1 256 1 62 1 79 1 121 1 212 1 347 1 214 1 7 1 130 2 171 1 31 1 16 2 293 1 324 1 281 2 377 1 360 1 
79 1 212 2 347 1 214 2 130 2 7 2 349 2 218 1 16 4 281 2 256 1 62 2 121 1 204 1 68 1 31 1 171 1 293 1 324 1 377 1 326 1 360 1 
256 1 62 1 79 1 176 1 121 1 212 1 204 1 347 1 214 1 7 1 130 2 68 1 349 2 209 1 31 1 16 2 324 1 326 1 
51 1 256 1 62 1 79 1 176 1 121 1 212 1 347 1 214 1 7 1 130 2 171 1 31 1 16 2 293 1 324 1 281 2 360 1 
79 1 176 1 212 2 347 1 214 2 130 2 7 2 349 2 218 1 16 4 281 2 256 1 62 2 121 1 204 1 68 1 31 1 171 1 293 1 324 1 326 1 360 1 
79 1 212 2 347 1 214 2 130 2 7 2 349 2 218 1 16 4 281 2 256 1 62 2 121 1 204 1 68 1 31 1 171 1 293 1 324 1 326 1 360 1 
327 1 79 1 2 1 347 1 5 1 130 2 299 1 10 1 9 1 349 1 54 1 108 1 16 2 224 1 281 1 18 1 60 1 162 1 19 1 256 1 337 1 121 1 286 1 205 1 97 1 317 1 31 1 324 1 
327 1 79 1 2 1 347 1 5 1 130 2 10 1 9 1 349 1 54 1 108 1 16 2 281 1 60 1 162 1 19 1 256 1 337 1 121 1 286 1 205 1 67 1 264 1 238 1 97 1 317 1 31 1 324 1 
79 1 212 2 243 1 347 1 214 2 130 2 7 2 349 2 218 1 16 4 281 2 256 1 62 2 121 1 204 1 68 1 31 1 171 1 293 1 324 1 326 1 360 1 
327 1 79 1 212 2 2 1 347 1 214 2 7 2 130 2 299 1 349 2 54 1 218 1 16 4 135 1 224 1 17 1 281 2 18 1 60 1 162 1 19 1 256 1 62 2 337 1 121 1 204 1 286 1 205 1 68 1 97 1 317 1 171 1 31 1 293 1 324 1 360 1 326 1 
327 1 79 1 212 1 243 1 347 1 214 1 215 1 130 2 7 1 218 1 349 2 156 1 115 1 15 1 16 3 281 1 162 1 61 1 256 1 62 1 121 1 204 1 68 1 28 1 31 1 293 1 324 1 360 1 326 1 
0 1 242 4 79 3 52 1 193 1 347 3 129 1 214 8 130 6 349 20 218 4 331 1 116 1 16 41 86 2 334 1 118 1 281 21 226 1 252 1 39 1 89 1 163 3 256 3 257 1 204 5 122 1 287 4 261 1 315 3 167 1 232 1 68 4 263 1 343 1 320 1 171 4 48 1 293 4 344 1 324 3 326 4 360 5 
0 1 242 4 79 4 52 1 193 1 347 4 129 1 214 7 130 8 349 20 218 4 331 1 116 1 16 38 86 2 334 1 118 1 281 18 226 1 252 1 39 1 89 1 163 3 256 4 257 1 204 5 122 1 287 4 261 1 315 3 167 1 232 1 68 4 263 1 343 1 320 1 171 4 48 1 293 3 344 2 324 4 326 3 360 4 
0 1 242 4 79 2 52 1 347 2 129 1 214 14 130 4 349 27 218 7 331 1 16 52 86 1 334 1 118 1 281 25 226 1 252 2 39 1 89 1 163 2 256 2 257 1 204 8 122 1 287 4 261 1 315 4 167 1 232 1 68 7 263 1 343 1 320 1 171 7 322 2 48 1 293 7 344 1 324 2 326 7 360 8 
242 2 79 2 193 1 347 2 129 1 214 6 130 4 349 9 218 3 333 1 16 19 86 1 118 1 281 10 226 1 252 1 163 1 256 2 204 3 122 1 287 2 315 1 68 3 263 2 171 3 48 1 293 3 324 2 326 3 360 3 
0 1 79 3 242 2 347 3 129 1 214 4 130 6 349 14 218 3 331 1 16 26 86 2 281 12 118 1 226 2 89 1 163 2 256 3 257 1 204 3 122 1 287 4 315 2 261 1 68 3 263 1 320 1 171 2 48 1 293 2 344 2 324 3 326 2 360 2 
219 1 77 1 37 1 202 1 112 1 63 1 99 1 98 1 185 1 217 1 
20 1 376 1 
208 1 37 1 110 1 202 1 112 1 99 1 98 1 185 1 70 1 
77 1 201 1 152 1 202 1 104 1 185 1 217 1 219 1 302 1 37 1 112 1 368 1 98 1 99 1 292 1 150 2 133 1 273 1 
77 1 201 1 152 1 202 1 104 1 185 1 217 1 219 1 302 1 37 1 112 1 368 1 98 1 99 1 292 1 150 2 133 1 273 1 
77 1 201 1 152 1 202 1 104 1 185 1 217 1 219 1 302 1 37 1 112 1 368 1 98 1 99 1 292 1 150 2 133 1 273 1 
191 1 222 1 272 1 
191 1 222 1 272 1 
357 1 23 1 
357 1 191 1 23 1 
170 1 44 1 
327 2 152 1 1 1 104 1 5 1 302 1 37 1 156 2 112 1 306 1 115 2 133 1 162 2 202 1 93 1 312 1 20 1 185 1 44 1 206 1 28 2 99 1 98 1 170 1 150 1 294 1 376 1 
222 1 272 1 
357 1 191 1 23 1 
327 2 78 1 79 1 2 1 243 1 347 1 130 2 9 1 54 1 349 1 363 1 108 1 132 2 115 2 223 1 16 2 281 1 227 1 162 2 60 2 228 1 256 1 337 1 121 1 286 2 205 1 166 1 97 2 31 1 323 1 324 1 
60 2 140 1 141 1 285 1 337 1 45 1 2 1 286 2 53 1 247 1 289 1 36 1 277 1 97 2 71 2 172 1 375 1 17 1 253 1 
60 1 140 1 285 1 337 1 45 1 286 1 2 1 53 1 247 1 289 1 36 1 277 1 97 1 71 2 375 1 190 1 253 1 
192 1 2 2 10 1 54 1 309 1 60 1 282 1 284 1 337 1 286 1 205 1 96 1 97 1 359 1 317 1 172 1 375 1 151 1 274 1 
60 1 140 1 141 1 285 1 337 1 45 1 2 1 286 1 53 1 247 1 289 1 36 1 277 1 97 1 71 2 172 1 375 1 253 1 
342 1 
126 1 55 1 82 1 368 1 84 1 125 1 352 1 
175 1 296 1 104 1 194 1 106 1 246 1 300 1 302 1 303 1 55 1 82 1 368 2 57 1 186 1 356 1 340 1 125 1 
60 1 337 1 296 1 2 2 286 1 205 1 194 1 246 1 10 1 54 1 300 1 179 1 276 1 97 1 317 1 319 1 225 1 
175 3 153 5 361 1 242 1 104 1 296 2 177 1 194 2 244 2 106 6 246 2 11 5 300 2 218 2 302 1 12 1 55 8 82 5 331 1 368 5 158 1 89 1 353 1 163 1 257 1 204 2 186 1 315 1 261 1 68 2 356 1 320 1 293 2 125 2 360 2 
327 1 296 1 104 1 194 1 244 2 246 1 195 1 300 1 302 1 55 2 82 2 156 1 115 1 15 1 158 1 88 1 39 1 162 1 254 1 64 1 204 2 167 1 95 1 28 1 343 1 188 1 325 1 360 1 
126 1 296 1 194 1 246 1 300 1 55 1 82 1 368 1 84 1 125 1 
175 5 153 5 204 2 244 2 106 10 11 5 218 2 68 2 55 5 82 5 368 5 158 1 293 2 161 1 360 2 
302 1 368 1 104 1 186 1 125 1 356 1 
296 1 104 1 2 2 192 1 194 1 246 1 10 2 54 1 300 1 302 1 12 1 55 1 82 1 353 1 60 2 203 1 337 1 286 2 205 1 186 1 96 1 356 2 97 2 359 1 169 1 317 1 291 1 151 1 274 1 
327 3 79 1 2 1 347 1 5 1 130 2 9 1 10 1 195 1 299 1 54 1 156 2 115 2 15 2 16 1 224 1 281 1 18 1 60 1 162 3 19 1 256 1 337 1 121 1 286 1 313 1 205 1 28 2 97 1 317 1 31 1 324 1 
175 2 153 2 296 1 194 1 106 4 246 1 11 2 232 1 300 1 12 1 55 1 82 2 368 4 125 2 353 1 
283 1 99 1 185 1 
219 1 99 1 44 1 185 1 288 1 
283 1 99 1 185 1 
283 1 99 1 185 1 
99 1 185 1 199 1 
99 1 185 1 199 1 
99 1 185 1 199 1 
99 1 185 1 
112 1 98 1 
242 1 79 1 52 1 347 1 214 2 130 2 349 4 331 1 16 8 281 4 334 1 39 1 163 1 256 1 204 1 122 1 315 1 167 1 232 1 171 2 343 1 324 1 360 1 
242 2 79 2 52 1 347 2 214 3 130 4 349 6 218 1 83 1 331 1 16 11 334 1 281 5 252 1 39 1 163 1 256 2 204 2 122 1 315 1 167 1 232 1 68 1 343 1 171 2 324 2 360 1 326 1 
242 1 79 3 52 1 347 3 214 4 130 6 349 9 218 2 83 1 331 1 16 19 334 1 281 10 39 1 89 1 163 1 256 3 257 1 204 3 122 1 315 1 261 1 167 1 232 1 68 2 343 1 320 1 171 3 293 2 324 3 344 1 326 1 360 3 
242 1 79 3 52 1 347 3 214 5 130 6 349 10 218 2 83 1 331 1 16 17 334 1 281 7 39 1 89 1 163 1 256 3 257 1 204 3 122 1 315 1 261 1 167 1 232 1 68 2 343 1 171 3 320 1 293 1 344 1 324 3 326 2 360 2 
242 1 79 1 52 1 347 1 214 2 130 2 349 4 331 1 16 8 281 4 334 1 39 1 163 1 256 1 204 1 122 1 315 1 167 1 232 1 171 2 343 1 324 1 360 1 
242 1 79 1 347 1 214 2 130 2 349 6 218 2 331 1 16 12 281 6 89 1 163 1 256 1 257 1 204 2 122 1 315 1 261 1 68 2 171 1 320 1 293 2 324 1 326 1 360 2 
242 1 79 4 52 1 347 4 214 5 130 8 349 10 218 2 83 1 331 1 16 18 334 1 281 8 39 1 89 1 163 1 256 4 257 1 204 3 122 1 315 1 261 1 167 1 232 1 68 2 343 1 320 1 171 3 293 1 324 4 344 2 326 2 360 2 
242 1 79 4 193 1 347 4 214 6 130 8 349 9 218 3 331 1 16 16 281 7 89 1 163 1 256 4 257 1 204 3 122 1 315 1 261 1 68 3 320 1 171 3 293 2 324 4 344 2 326 3 360 2 
52 2 204 1 214 6 167 3 349 3 171 3 343 1 16 7 281 4 334 1 39 3 360 1 326 3 
242 1 79 4 52 1 193 1 347 4 214 4 130 8 349 10 218 2 331 1 16 18 334 1 281 8 39 1 89 1 163 1 256 4 257 1 204 3 122 1 315 1 261 1 167 1 232 1 68 2 343 1 320 1 171 3 293 1 324 4 344 2 326 1 360 2 
256 2 79 2 52 1 204 1 347 2 214 3 130 4 167 1 232 1 349 4 343 1 171 2 16 8 281 4 324 2 344 1 334 1 39 1 360 1 326 1 
52 1 204 1 214 2 167 1 232 1 349 3 171 2 343 1 16 6 281 3 334 1 352 1 39 1 360 1 
256 1 79 1 204 1 347 1 214 2 130 2 218 1 68 1 349 2 83 1 171 1 293 1 16 4 281 2 324 1 360 1 326 1 
163 1 242 2 204 1 315 1 214 2 349 3 218 1 68 1 171 1 293 1 16 7 281 4 252 1 360 1 326 1 
242 2 79 2 52 1 347 2 214 9 130 4 218 2 349 11 16 23 334 1 281 12 252 1 39 2 90 1 256 2 41 1 204 3 315 2 167 2 232 1 68 2 343 1 171 5 293 2 322 1 344 2 324 2 326 4 360 3 
242 1 16 1 281 1 
16 1 315 1 349 1 
256 1 79 1 204 1 347 1 214 3 130 2 218 1 68 1 349 3 83 1 171 2 16 6 293 1 324 1 281 3 161 1 326 1 360 1 
242 1 79 1 347 1 214 2 130 2 349 6 218 2 331 1 16 12 281 6 89 1 163 1 256 1 257 1 204 2 122 1 315 1 261 1 68 2 171 1 320 1 293 2 324 1 326 1 360 2 
204 1 214 2 167 1 349 3 343 1 171 1 16 6 281 3 39 1 360 1 326 1 
256 1 41 1 79 1 52 1 347 1 214 2 167 1 130 2 349 1 171 1 16 3 281 2 344 1 324 1 334 1 39 1 326 1 
256 1 79 1 204 2 122 1 347 1 214 5 130 2 167 2 349 5 171 3 343 1 16 10 324 1 281 5 88 1 39 2 326 2 360 2 
256 1 79 1 204 1 122 1 347 1 214 1 130 2 68 1 349 2 16 2 324 1 326 1 
256 1 79 1 204 1 122 1 347 1 214 2 130 2 218 1 68 1 349 2 171 1 293 1 16 4 281 2 324 1 360 1 326 1 
256 3 41 1 79 3 193 1 122 1 347 3 214 2 130 6 167 1 349 1 171 1 16 3 344 1 281 2 324 3 39 1 326 1 
242 4 79 5 52 1 193 1 347 5 214 12 130 10 349 16 218 3 83 1 157 1 16 34 334 1 87 1 281 18 252 1 39 3 163 1 256 5 41 1 204 5 122 1 315 3 167 3 232 1 68 3 343 2 171 7 293 3 271 1 344 2 324 5 326 5 360 5 
162 1 327 1 168 1 115 1 5 1 85 1 59 1 
162 1 327 1 5 1 4 1 13 1 365 1 168 1 56 1 115 1 101 1 85 1 59 1 
60 1 97 1 192 1 286 1 10 1 352 1 
162 2 60 1 327 2 19 1 337 1 2 1 286 1 205 1 5 1 10 1 54 1 350 1 28 1 156 1 97 1 317 1 115 1 18 1 
327 2 2 1 5 1 245 1 350 1 54 2 156 2 115 2 198 1 18 1 60 1 162 2 19 1 337 1 64 1 286 1 205 3 26 1 28 1 29 1 97 1 146 1 317 2 
327 2 2 1 5 1 245 1 350 1 54 2 156 2 115 2 198 1 60 2 162 2 19 1 337 1 64 1 286 2 205 3 26 1 28 1 373 1 238 1 29 1 97 2 146 1 317 2 
60 3 75 1 50 1 104 2 337 1 2 1 286 3 205 4 245 1 10 1 26 1 54 1 355 1 356 1 302 2 364 1 373 1 97 3 368 1 317 1 319 1 198 1 125 1 
60 3 50 1 104 2 337 1 2 1 286 3 354 1 205 4 245 1 10 1 26 1 54 1 355 1 356 1 302 2 373 1 97 3 368 1 317 1 319 1 198 1 125 1 
60 1 97 1 367 1 337 1 2 1 286 1 
60 5 140 1 337 2 286 6 2 3 205 3 10 2 179 1 54 2 235 1 96 1 30 1 97 6 367 1 359 1 317 1 17 1 227 1 73 1 200 1 
52 1 2 1 243 1 347 2 5 2 7 1 299 1 350 1 54 1 349 3 156 1 115 1 16 6 17 1 18 1 60 1 162 2 19 1 256 2 62 1 121 2 204 1 205 1 167 1 28 1 317 1 31 2 171 2 324 2 360 1 327 2 78 1 79 2 212 1 214 2 130 4 135 1 224 1 334 1 281 3 39 1 337 1 286 1 232 1 97 1 187 1 343 1 
126 1 50 1 296 2 104 3 194 2 246 2 10 1 300 2 302 3 55 1 82 1 368 1 84 1 306 1 60 1 119 1 203 1 286 1 354 1 205 2 186 1 355 1 356 2 97 1 319 1 72 1 125 1 74 1 
60 1 337 1 286 1 2 2 205 1 355 1 179 1 54 1 276 1 97 1 367 1 317 1 136 1 
60 2 337 1 2 2 286 2 192 1 205 1 10 1 54 1 96 1 97 2 359 1 317 1 17 1 151 1 274 1 
60 2 337 1 286 2 2 2 205 1 54 1 96 1 97 2 359 1 317 1 198 1 369 1 151 1 274 1 
36 1 60 1 97 1 285 1 337 1 2 1 286 1 71 1 10 1 247 1 
60 2 140 1 97 2 337 1 2 1 286 2 205 1 323 1 17 1 54 1 227 1 
60 2 337 2 192 1 286 3 2 3 205 3 10 1 54 2 96 1 235 1 97 3 30 1 359 1 317 1 17 1 151 1 227 1 274 1 
60 2 337 2 192 1 286 3 2 3 142 1 205 3 10 1 54 2 96 1 235 1 97 3 359 1 317 1 17 1 151 1 227 1 274 1 
162 2 60 1 327 2 19 1 337 1 2 1 286 1 205 1 5 1 10 1 54 1 350 1 28 1 238 1 156 1 97 1 317 1 115 1 
60 1 337 1 286 1 2 2 205 1 179 1 54 1 96 1 97 1 359 1 317 1 198 1 73 1 
366 1 255 1 341 1 374 1 5 1 
50 1 139 1 255 2 64 1 104 2 5 1 66 1 316 1 302 2 29 1 366 2 341 1 368 1 146 1 374 2 69 1 306 1 125 1 49 1 
162 1 327 1 366 1 341 1 255 1 115 1 223 1 166 1 363 1 
341 1 49 1 316 1 
46 1 275 1 352 1 183 1 
91 1 46 1 42 1 275 1 165 1 348 1 183 1 
348 1 216 1 345 1 
91 1 42 1 120 1 275 1 371 1 165 3 3 1 348 3 301 1 46 1 102 2 183 1 
91 1 46 1 131 1 42 1 275 1 210 1 165 2 348 2 183 1 
91 1 42 1 371 1 45 1 35 1 165 1 348 1 247 1 147 1 71 1 183 1 
91 1 46 1 42 1 371 1 165 1 348 1 183 1 
91 1 46 2 42 1 275 1 371 1 165 1 348 1 
91 2 40 1 46 1 279 1 42 2 148 1 371 1 165 2 348 2 183 1 
91 1 42 1 275 1 22 1 371 1 165 3 348 3 94 1 144 1 46 1 131 2 147 1 183 2 
91 1 42 1 275 1 371 1 45 1 165 2 298 1 348 2 247 1 289 1 36 1 46 1 131 1 71 2 183 1 
91 2 42 2 275 1 371 1 165 4 348 4 94 1 249 1 46 1 131 2 147 1 210 1 183 2 
91 1 46 1 42 1 275 1 371 1 165 1 348 1 183 1 
91 1 42 1 120 1 275 2 3 1 165 4 348 4 94 1 14 1 46 2 131 2 147 1 102 1 183 3 
266 1 91 1 46 1 131 1 42 1 275 1 307 1 371 1 165 2 348 2 351 1 183 1 
91 1 241 1 42 1 120 2 275 1 371 1 3 1 165 3 348 3 46 1 102 2 183 1 
24 1 143 1 183 2 262 2 
91 1 42 1 250 1 371 1 165 1 348 1 
91 1 46 1 131 1 42 1 275 1 371 1 165 2 348 2 144 1 183 1 
173 1 
91 1 46 1 42 1 275 1 371 1 165 1 348 1 183 1 
91 1 42 1 275 1 371 1 165 3 348 3 144 1 46 1 131 1 102 1 183 1 
14 1 147 1 94 1 183 1 
46 1 183 1 
